

Added TV LIBRARY FUNCTIONS (Roberto Sancho, Apr/2017)

   CALL PSET(IX,IY [,MODE] )

      Displays a point on the screen.

         IX, IY = COORDINATES OF POINT 
         MODE = COLOR OF POINT DRAWN

   CALL PLINE(IX1,IY1,IX2,IY2 [,MODE] )

      Displays a line on the screen.

         IX1, IY2 = COORDINATES OF STARTING POINT (0 UP TO 255)
         IX1, IY2 = COORDINATES OF ENDING POINT (0 UP TO 255)
         MODE = COLOR OF POINT DRAWN



Standard TV LIBRARY FUNCITIONS


   CALL VIDLU(LU, [,ISENS] )

      Designates the logical unit number of the TV and sets the
      video polarity.

         LU = LOGICAL UNIT NUMBER OF TV INTERFACE
         ISENS = POLARITY
             IF = 0 : NORMAL POLARITY (DEFAULT)
               <> 0 : INVERSE POLARITY. REVERSE COLORS DISPLAYED


   CALL ERASE 

      Erase screen. All points to black (shoen as white if inverse
      piolarity set in VIDLU).


   CALL VECTR(IX,IY,IDIRC,LEN [,ITYPE,MODE,LODU,IPF] )

      Displays a line (vector) by writing a sequence of points on
      the screen.

         IX, IY = COORDINATES OF STARTING POINT (0 UP TO 255)
                  IF IX < 0 THEN IY IS IGNORED AND THE VECTOR IS
                  STARTED FROM THE END OF PREVIOUS VECTOR. 
                  IX = IY = 0 IS THE LOWER LEFT CORNER
         IDIRC = DIRECTION OF THE VECTOR (8 POSSIBLE DIRECTIONS).
                 IF = 0 DIRECTION IS RIGHT
                 IF = 1 DIRECTION IS UP AND RIGHT
                 IF = 2 DIRECTION IS UP
                 IF = 3 DIRECTION IS UP AND LEFT
                 IF = 4 DIRECTION IS LEFT
                 IF = 5 DIRECTION IS DOWN AND LEFT
                 IF = 6 DIRECTION IS DOWN 
                 IF = 7 DIRECTION IS DOWN AND RIGHT
         LEN = NUMBER OF POINTS IN VECTOR. 0 TO DRAW A POINT
               IF NEGATIVE, DRAW IN THE OPPOSITE DIRECTION
         ITYPE = TYPE OF VECTOR TO BE DRAWN
                 IF = 0 : NON DRAWING (JUST SPACE POINTS)
                 IF = 1 : FIRST AND LAST POINTS SUPRESSED. USED TO
                          CONNECT BETWEEN TWO EXISTING POINTS
                 IF = 2 : ALL POINTS ARE DRAWN
                 IF = 3 : FIRST POINT SUPRESSED
                 DEFAULTS TO 2
         MODE = COLOR OF POINTS DRAWN
                 IF = 0 COLOR IS WHITE (DEFAULT COLOR)
                 IF = 1 COLOR IS BLACK
                 IF = 2 COLOR IS RED
                 IF = 3 COLOR IS GREEN
                 IF = 4 COLOR IS BLUE
                 IF = 5 COLOR IS YELLOW
                 IF = 6 COLOR IS MAGENTA
                 IF = 7 COLOR IS CYAN
         LODU = INTERNAL BUFFER USAGE
         IPF = IF PRESENT, THIS VARIABLE IS SET TO O IF NO
               POWER FAIL FROM LAST ERASE. SET TO 1 IF POWER
               FAIL HAS OCCURRED


   CALL CHARS(IX,IY,"string" [ ,ISIZE,IDIRC,NUMBER,MODE,IPF ] )

      Displays character strings.

         IX, IY = COORDINATES OF STARTING POINT OF FIRST
                  CHARACTER (LOWER LEFT CORNER IF IDIRC = 0)

         "string" = INTEGER ARRAY WITH PACKED ASCII CHARS
         ISIZE = CHARACTERS SIZE
                 IF = 1 SIZE IF 5X7 DOTS (DEFAULT VALUE)
                 IF = 2 SIZE IS MULTIPILED BY ISIZE
         IDIRC = DIRECTION OF THE TEXT 
                 IF = 0 DIRECTION IS NORMAL LEFT TO RIGHT (DEFAULT)
                 IF = 1 DIRECTION IS BOTTOM TO TOP
                 IF = 2 DIRECTION IS UPSIDE DOWN RIGHT TO LEFT
                 IF = 3 DIRECTION IS TOP TO BOTTOM
         NUMBER = NUMBERS OF CHARS TO PRINT
                 IF = 0 NUMBER OF CHARS TO PRINT IS FIRST WORD OF 
                        INTEGER ARRAY  WITH PACKED ASCII CHARS (DEFAULT)
                 IF > 1 NUMBER OF CHARS TO PRINT
         MODE = COLOR OF POINTS DRAWN
         IPF = POWER FAIL INDICATOR


   CALL VAREA(IX,IY,IDX,IDY [ ,IDIRC,MODE,IPF ] )

      Fills a rectangular area

         IX, IY = COORDINATES OF STARTING POINT (LOWER LEFT CORNER)
         IDX, IDY = X AND Y WIDTH 
         IDIRC = DIRECTION OF THE DRAWING. SAME AS FOR CHARS
         MODE = COLOR OF POINTS DRAWN
         IPF = POWER FAIL INDICATOR


   CALL PNTS(IBUF [ ,NUMBER,MODE,IPF ] )

      Displays points

         IBUF = INTEGER ARRAY OF WORDS, X LOWER BITS 0-7, Y HIGH BITS 8-15
         NUMBER = NUMBER OF POINTS TO BE DISPLAYED
         MODE = COLOR OF POINTS DRAWN
         IPF = POWER FAIL INDICATOR


   CALL VEND(IX,IY)

      Retrieves coordinates of end point of last vector drawn

         IX, IY = VARIABLES THAT RECEIVES THE COORDINATES 


Notes: RTE-B does not supports optional parameters. 


'CHAR' INTERFACE

   THIS ROUTINE SERVES AS AN INTERFACE BETWEEN THE TV LIBRARY
   ROUTINE 'CHAR' AND A BASIC CALLING PROGRAM.  IT ACCEPTS THE 
   ADDRESS OF A STRING VARIABLE (AS WELL AS A STRING IN QUOTES), 
   PUTS THE STRING LENGTH TEMPORAIRLY IN WORD 1 OF THE STRING
   ARRAY, AND THEN CALLS THE CHAR LIBRARY ROUTINE TO DISPLAY 
   THE CHARACTER STRING.  ALL OTHER PARAMETERS ARE PASSED DIRECTLY 
   TO CHAR AS RECEIVED.  THE BASIC USER MUST CALL IT AS FOLLOWS: 

   TYPICAL BASIC PROGRAM 
   --------------------- 
 
     10 DIM A$(72) 
     20 PRINT "ENTER TV LU #, DISPLAY SENSE: ";
     30 INPUT L,S
     40 CALL VIDLU(L,S)
     50 CALL ERASE 
     60 PRINT "ENTER ANY CHARACTER STRING OR /E" 
     70 INPUT A$ 
     80 IF A$(1,2)="/E" THEN 160 
     90 PRINT "ENTER X,Y,SIZE,DIREC,MODE: "; 
     100 INPUT X,Y,S,D,M 
     110 CALL CHARS(X,Y,A$,S,D,0,M,P)
     120 IF P#0 THEN 140 
     130 GO TO 50
     140 PRINT"POWER FAIL, START OVER" 
     150 GO TO 20
     160 PRINT"DONE" 
     170 END 
 
   BRANCH & MNEMONIC TABLE CONSIDERATIONS
   --------------------------------------
 
   THE FOLLOWING TYPE OF ENTRY MUST BE MADE: 
 
  FOR RTE-B: 
     CHARS(I,I,R,I,I,I,I,V)
 
  FOR REAL TIME BASIC: 
     CHARS(I,I,RA,I,I,I,I,IV)
 
   THE ENTRY POINT MUST BE 'CHARS' WITH EIGHT PARAMETERS EXACTLY 
   AS SHOWN.  PARAMETER NUMBER 3 MUST BE SPECIFIED AS REAL SO THAT 
   THE STRING ARRAY (A$) CAN BE RETRIEVED DURING RUN TIME.  PARAMETER
   NUMBER 6 CAN BE SPECIFIED AS ANYTHING SINCE IT IS ALWAYS PASSED 
   AS ZERO TO THE TV LIBRARY ROUTINE.



'POINT' INTERFACE                   

   THIS ROUTINE SERVES AS AN INTERFACE BETWEEN THE TV LIBRARY
   ROUTINE 'POINT' AND A BASIC CALLING PROGRAM.  IT ACCEPTS A
   CONTIGUOUS ARRAY OF FLOATING-POINT X & Y SCREEN COORDINATES,
   CONVERTS EACH TO INTEGER, AND SENDS UP TO 64 PAIRS OF COORD-
   INATES TO THE ROUTINE 'POINT' AT A TIME.  THE BASIC USER MUST 
   SET UP THE ARRAY OF X & Y COORDINATES AS FOLLOWS: 
 
              A(1)   =  FIRST X COORDINATE 
              A(2)   =  FIRST Y COORDINATE 
              A(3)   = SECOND X COORDINATE 
              A(4)   = SECOND Y COORDINATE 
                .         .
                .         .
                .         .
              A(N-1) = LAST X COORDINATE 
              A(N)   = LAST Y COORDINATE 
 
  THE BASIC USER THEN CALLS IT AS FOLLOWS: 
 
    10 CALL PNTS(A(1),N,M,P) 
 
 
       A(1) --> FIRST WORD OF ARRAY OF POINTS
 
       N    --> NUMBER OF POINTS (X,Y PAIRS) 
 
       M    --> DISPLAY MODE 
 
       P    --> POWER FAIL INDICATOR 

  TYPICAL BASIC PROGRAM
  ---------------------
 
   10 DIM A(400) 
   15 VIDLU(12,0)
   20 FOR I=1 TO 400 STEP 2
   30 A(I)=((I+1)/2)-1 
   40 A(I+1)=((I+1)/2)-1 
   50 NEXT I 
   60 CALL PNTS(A(1),200,3,P)
   70 IF P#0 THEN 15 
   80 END
 
   THE ABOVE EXAMPLE CALLS THE POINT LIBRARY ROUTINE WITH 200 PAIRS
   OF X & Y COORDINATES.  IMPORTANT:  WHEN SUPPLYING THE ARRAY 
   NAME, IT MUST BE SPECIFIED AS AN ARRAY. 
 
  BRANCH & MNEMONIC TABLE CONSIDERATIONS 
  -------------------------------------- 
 
  THE FOLLOWING TYPE OF ENTRY MUST BE MADE:
 
   FOR RTE-B:  PNTS(R,I,I,V)
 
  FOR REAL TIME BASIC:  PNTS(RA,I,I,IV)
 
  THE ENTRY POINT MUST BE 'PNTS' WITH FOUR PARAMETERS EXACTLY
  AS SHOWN.
