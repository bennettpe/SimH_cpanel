ASMB,R,L,T,B
      NAM ZERO,7
      ENT ZERO,BLANK,IZERO
B     EQU 1 
      SPC 2 
*     PURPOSE:
*       THIS IS AN ALGOL COMPATIBLE ROUTINE WHICH STORES
*       ZEROES OR ASCII BLANKS THROUTHOUT AN ARRAY.  IT IS
*       MOST USEFUL WHEN REPEATED CALLS TO THE LIBRARY
*       "INDEX" ROUTINE WOULD TEND TO SLOW PROGRAM EXECUTION
      SPC 1 
*     LENGTH: 
*       THIS ROUTINE REQUIRES 56 DECIMAL (70 OCTAL) WORDS.
      SPC 1 
*     CALLING SEQUENCE: 
*       AN EXTERNAL PROCEDURE DECLARATION IS MADE IN THE
*     CALLING PROGRAM IN THE FOLLOWING MANNER:
*         PROCEDURE IZERO(ARRY); INTEGER ARRAY ARRY; CODE;
*         PROCEDURE ZERO(ARRR); ARRAY ARRR; CODE; 
*         PROCEDURE BLANK(IARRY); INTEGER ARRAY IARRY; CODE;
*                   PROCEDURE EXECUTION IS INVOKED IN THE 
*                   NORMAL MANNER.
      SPC 3 
ZERO  NOP           ENTRY POINT 
IZERO EQU ZERO
      LDA ZERO      GET AND SAVE THE
      STA TEMP        STACK POINTER.
      CLA           SET TO ZERO THE ARRAY.
      STA WORD
      JMP WORK      GO GET SIZE AND ADDRESS.
      SPC 1 
BLANK NOP           ENTRY POINT.
      LDA BLANK     GET AND SAVE THE
      STA TEMP        STACK POINTER.
      LDA BLNKS     SET TO BLANK
      STA WORD        THE ARRAY.
      SPC 1 
WORK  LDA TEMP,I    GET AND SAVE THE
      RAL,CLE,SLA,ERA 
      LDA 0,I 
      STA RETN        RETURN ADDRESS
      ISZ TEMP      BUMP THE STACK POINTER. 
      JSB GETAD     GO GET THE ARRAY PARAMETERS.
      LDA WORD      LOAD THE WORD TO BE USED. 
      SPC 1 
RSTR  STA B,I       PUT IT IN THE ARRAY.
      INB           BUMP THE ADDRESS. 
      ISZ BUFL      DONE? 
      JMP RSTR        NO, DO IT AGAIN.
      JMP RETN,I      YES, RETURN TO CALLER.
      SPC 1 
GETAD NOP           ENTRY/EXIT
      LDA TEMP,I    GET THE ARRAY STACK 
      STA TABLE       TABLE ADDRESS.
      LDA TABLE,I   GET NO. OF INDICES. 
      CLB           IF ARRAY IS REAL, 
      SSA             B=/,
      CCB             OTHERWISE, B=1
      STB MODE        FOR MODE FLAG.
      SSA,RSS       FORCE THE NUMBER
      CMA,INA         NEGATIVE AND
      STA CCNT        SET THE COUNTER.
      ISZ TABLE     SET TO POINT TO SIZE
      LDA TABLE,I     OF FIRST DIMENSION
      ISZ TABLE     BUMP POINTER AGAIN. 
      SPC 1 
NEXT  ISZ TABLE     BUMP THE POINTER
      ISZ CCNT      IF NOT FINIXHED, GO 
      JMP MULT        MULTIPLY THE DIMENSIONS.
      SPC 1 
      CMA,INA       MAKE THE RESULT NEGATIVE. 
      LDB MODE      IF THE ARRAY WAS REAL,
      SZB,RSS         THEN
      ALS             DOUBLE, AND 
      STA BUFL        SAVE THE LENGTH.
      LDB TABLE,I   GET THE STAATINT ADDRESS. 
      JMP GETAD,I     AND RETURN. 
      SPC 1 
MULT  MPY TABLE,I   MULTIPLY THE TWO
      ISZ TABLE       DIMENSIONS FOR ABS(SIZE). 
      JMP NEXT      FOR NEXT DIMENSION. 
      SKP 
*     CONSTANTS AND STORAGE 
      SPC 1 
BLNKS OCT 20040 
WORD  OCT 0 
TEMP  OCT 0 
RETN  OCT 0 
BUFL  OCT 0 
TABLE OCT 0 
MODE  OCT 0 
CCNT  OCT 0 
      SPC 1 
      END 
