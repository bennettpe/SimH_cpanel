set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS

if "%1"=="" goto noprog
if not exist "%1" goto prognotfound
:progok

echo
echo ***
echo *** Algol for BCS 
echo *** Compile, Link and Run "%1" as standalone program 
echo ***
echo

; Set the I/O assignments...

set clk dev=10
set tty dev=11
set ptr dev=12
set ptp dev=13

; compile ALGOL source file...

d s 0
d 0-77777 0
att ptr -q algol/sio.abs
boot ptr
att ptr -q algol/algol.abs
boot ptr

att ptr -q -e %1
att ptp -q -n prog.rel

reset
go 100

det -q all

; link modules to an ABS application...

d 0-77777 0
att ptr -q algol/bcs31k.abs
boot ptr
att ptr -e -q prog.rel
att ptp -n -q prog.abs

d s 40000
reset
go 2
; prompts *LOAD
; attach -e ptr module2.rel  [if multiple modules]
;                            [if multiple modules]
; prompts *LOAD              [if multiple modules]
; repeat until all modules loaded
attach ptr -e -q algol/bcslib.rel
d s 40004
c
; prompts *LST
c
; prompts *END [if it hangs control-e to halt]
det -q all
d s 0

del -q prog.rel 

; now run as standalone

att ptr -q prog.abs
boot ptr
de s 0
reset
go 2

det -q all
del -q prog.abs

echo
echo
goto end


:noprog
echo
echo missing file.txt as parameter of script
echo
goto end

:prognotfound
echo
echo file "%1" not found
echo
goto end


:end 


