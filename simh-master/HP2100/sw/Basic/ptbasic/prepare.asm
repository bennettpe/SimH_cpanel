ASMB,A,B,L     PREPARE BASIC SYSTEM--JANUARY 1, 1970
      HED BASIC SYSTEM CONFIGURATER
      ORG  2
*
* mod 11/26/10 by wtn - added 12K 20K 28K choices for mem
*
*  THIS PROGRAM WILL CONFIGURE AND PUNCH AS AN ABSOLUTE TAPE THE
*  HP BASIC SYSTEM COMPATIBLE WITH 'BOSS'; INCLUSION OF THE 'BOSS'
*  VERSION OF THE BASIC INTERPRETER IS OPTIONAL.  TELETYPE,
*  PHOTOREADER, AND PUNCH DRIVERS ARE SUPPLIED BY THIS PROGRAM.
*  CUSTOM 'CALL' ROUTINES MAY BE INCLUDED IF THE BASIC INTERPRETER
*  IS PRESENT.  OPTIONS INCLUDE CHOICE OF BUFFERED OR SERIAL
*  TELETYPE AND CONFIGURATION FOR 8, 16, 24, OR 32K OF
*  MEMORY.
*
*  THE AREAS PUNCHED ARE 4 THROUGH 'CONTENTS OF FWAM' -1 AND
*  'CONTENTS OF LWAM' +1 THROUGH 'CONTENTS OF LWM'; I.E., SYSTEM
*  CODE AND DRIVER CODE.
*
*  TO OPERATE -
*
*    1) LOAD THE PBS TAPE WITH THE PROTECTED LOADER.
*    2) (OPTIONAL) LOAD BASIC INTERPRETER ('CALL ROUTINES
*        MAY ALSO BE LOADED IF DESIRED).
*    3) 'LOAD ADDRESS' 2 AND 'PRESET'.
*    4) SET SELECT CODE OF TELETYPE (IN OCTAL) INTO THE
*        SWITCH REGISTER.  SET SWITCH 15 TO 1 IF USING A
*        SERIAL TELETYPE BOARD.
*    5) SET TELETYPE TO 'LINE,' TURN ON HIGH SPEED TAPE PUNCH
*        IF PRESENT, AND PRESS 'RUN'.
*    6) ANSWER TELETYPE REQUESTS APPROPRIATELY.
*    7) AFTER THE HLT 77B, PRESS 'RUN' FOR EXTRA COPIES.
*
      SUP      SUPPRESS LISTING OF MULTIPLE OPERANDS
*
      JMP 3,I       BEGIN
      DEF START       EXECUTION
*
      HLT 4,C       IN CASE OF POWER FAIL
      HLT 5         IN CASE OF PARITY FAULT
      OCT 0,0,0,0,0,0,0,0,0   NOP ALL MAIN-FRAME
      OCT 0,0,0,0,0,0,0,0,00    INTERRUPT LOCATIONS
      SKP
*     ORG 16333B
      ORG 16314B    compensate for 15 added instructions
*
START CLC 0,C       TURN OFF INTERRUPT, ALL DEVICES
      LIA 1         LOAD FROM SWITCH REGISTER
      ELA,RAR       PUT A(15) INTO (E)
      AND B77       MASK TO 6 BITS
      STA IOADR     SAVE I/O ADDRESS
      ARS,ARS       SHIFT OUT FIRST OCTAL DIGIT
      ARS
      SZA           IS I/O ADDRESS GT 7
      JMP GOMAN     YES THEN OK
*
      HLT 55B       INVALID TTY ADDRESS HALT
      JMP START+1   TRY AGAIN
*
*  SET TELETYPE I/O INSTRUCTION ADDRESSES
*
GOMAN SEZ           BUFFERED TELETYPE?
      JMP SERLA,I   NO
      LDA M24       YES, LOAD # OF INSTRUCTIONS
      LDB LST1A     ADDRESS OF INSTRUCTION LIST
      JSB SETI      SET TTY I/O ADDRESSES
*
*  CALL FOR PHOTOREADER ADDRESS INPUT
*
PHRDR JSB CRLFD     DO A CR/LF
      LDA M27       MESSAGE LENGTH, NEGATIVE NO CRLF
      LDB MA1       MESSAGE ADDRESS
      JSB GETAD     GET ADDRESS
      JMP NORDR     ADDRESS =0, NO READER
      LDA M5        VALID READER ADDRESS
      LDB LST2A     READER INSTRUCTION ADDRESS LIST
      JSB SETI      SET READER I/O INSTRUCTIONS
      LDA RO        SET CLC RDR
PHRD1 STA R.OFF       INSTRUCTION
      LDA LWAMR
      STA LWAM      SET LAST WORD AVAILABLE MEMORY
      INA
      STA 101B      SET READER LINK
*
*   CALL FOR PUNCH ADDRESS INPUT
*
NORDR JSB CRLFD
      LDA M20
      LDB MA2
      JSB GETAD     CALL FOR PUNCH ADDRESS INPUT
      JMP SYSDP     NO PUNCH
      LDA M5        VALID PUNCH ADDRESS
      LDB LST3A     PUNCH INSTRUCTION ADDRESS LIST
      JSB SETI      SET PUNCH I/O INSTRUCTIONS
      LDA PO        SET CLC PNCH
NORD1 STA P.OFF       INSTRUCTION
      LDA LWAMP
      STA LWAM      SET LWAM
      INA
      STA 103B      SET PUNCH LINK
*
*  CALL FOR DUMP DEVICE ADDRESS
*
SYSDP JSB CRLFD     CR/LF
      LDA M25
      LDB MA5
      JSB GETAD     GET DUMP I/O ADDRESS
      JMP CORAD     NO SYSTEM DUMP DEVICE AVAILABLE
      LDA CM.4      SYSTEM DUMP DEVICE AVAILABLE
      LDB LST4A     SET DEVICE'S I/O INSTRUCTIONS
      JSB SETI
      LDA PNCHI     SET PUNCH OUTPUT TO REFERENCE
      STA PNCHO       HIGH SPEED PUNCH ROUTINE
*
*  CALL FOR CORE SIZE
*
CORAD JSB CRLFD
      LDA M12       REQUEST
      LDB MA6
CORA1 JSB TTY.P       CORE
      LDA .20
      LDB BUF           SIZE
CORA2 NOP
      JSB TTY.I
      NOP
      SZA,RSS       NULL ANSWER?
      JMP DUMP      YES, ASSUME 8K
      LDA BUF,I     NO
      CPA C8K       '8 NULL'?
      JMP DUMP      YES
      CLB           NO
      CPA C12K               added 12KW
      JMP RELOC              added
      INB                    added
      CPA C16K      '16'?
      JMP RELOC     YES
      INB           NO
      CPA C20K               added 20KW
      JMP RELOC              added
      INB                    added
      CPA C24K      '24'?
      JMP RELOC     YES
      INB           NO
      CPA C28K               added 28KW
      JMP RELOC              added
      INB                    added
      CPA C32K      '32'?
      JMP RELOC     YES
      JSB CRLFD     NO
      LDA M15
      LDB MA7       PRINT
CORA3 JSB TTY.P       ERROR
      JMP CORAD     TRY AGAIN
      SKP
*
*  RELOCATE DRIVERS
*
RELOC ADB INCIN     LOAD
      LDB 1,I         DISPLACEMENT
      LDA LWM       ADJUST
      ADA 1
      STA LWM         ABSOLUTE
      LDA CRLFA
      ADA 1             POINTERS
      STA CRLFA
      LDA 101B
      ADA 1
      SSA,RSS
      STA 101B
      LDA 102B
      ADA 1
      STA 102B
      LDA 103B
      ADA 1
      SSA,RSS
      STA 103B
      LDA 104B
      ADA 1
      STA 104B
      LDA LWAM
      STA SOURC     SAVE ADDRESS OF DRIVER MODULE
      ADA 1
      STA LWAM
      STA DEST      SET DESTINATION ADDRESS
      LDA IMOFF
      ADA 1
      STA IMOFF
      LDA IMON
      ADA 1
      STA IMON
      LDA TLINK
      ADA 1
      STA TLINK
      LDB LWM       COMPUTE
      CMB,INB         # OF WORDS
      ADB LWAM          TO BE MOVED
MOREM ISZ SOURC     ADVANCE
      ISZ DEST        POINTERS
      LDA SOURC,I   MOVE A
      STA DEST,I      WORD
      INB,SZB       DONE?
      JMP MOREM     NO
      SKP
*
*      THIS SECTION DUMPS THE ELEMENTS OF THE SYSTEM LOADED
*
DUMP  JSB CRLFD
      LDA LWAM      SET STARTING
      ADA M36         ADDRESS FOR
      STA IOBFA         I/O BUFFER
      STA SYMTA     SET SYMBOL TABLE POINTER
      ADA M97       SET STARTING ADDRESS
      STA SBUFA       FOR SYNTAX BUFFER
      ADA M1
      STA LWAM      SAVE VALUE CORRECTED FOR BUFFERS
      STA LWBM      FOR STAND-ALONE OPERATION
      LDA PNCHO
      CPA PNCHI     SYSTEM DUMP DEVICE AVAILABLE?
      JMP COPY      PUNCH IS AVAILABLE
*
      LDA .30
      LDB MA3
DUMP1 JSB TTY.P     REQUEST TTY PUNCH ON
*
DUMP2 LDA PLSTR     PREPARE TO
      STA LISTR       PUNCH
      HLT 11B
*
COPY  JSB LTG       GENERATE LEADER
      LDA .4        DUMP
      CCB             LOCATIONS 4
      ADB FWAM          THROUGH
      JSB PNCHA           (FWAM)-1
      LDA LWAM      DUMP
      ADA .135        DRIVER
      LDB LWM           AREA
      JSB PNCHA
      JSB LTG       GENERATE TRAILER
      HLT 77B       END OF DUMP ROUTINE
      JMP COPY      GO MAKE ANOTHER COPY
      SKP
*
*  SUBROUTINE GETA1
*
*    THIS SUBROUTINE CALLS FOR I/O ADDRESS INPUT, PROCESSES THE
*     INPUT AND IF INPUT VALID RETURNS TO P+2. IF NOTHING IS
*     INPUTTED IT RETURNS TO P+1 WITH LINK TO STOP IN A
*
*    CALL:    JSB  GETAD
*              (A) =  LENGTH OF MESSAGE ASKING FOR I/O ADDRESS
*              (B) =  ADDRESS OF MESSAGE
*
*    RETURN:     ZERO   INPUT  -  P+1     (A) = LINK TO STOP
*                VALID ADDRESS -  P+2     (A) = I/O ADDRESS
*
*                I/O ADDRESS IS SAVED IN LOCATION IOADR
*
*    IF INPUT IS INVALID (IE NOT TWO NUMBERS 10-77)
*         "INVALID I/O ADDRESS" IS TYPED AND IT WAITS
*         FOR FURTHER INPUT.
*
GETAD NOP
      JSB TTY.P     PRINT INPUT REQUEST MESSAGE
INPUT LDA .20
      LDB BUF
GETA1 NOP           WAIT
      JSB TTY.I       FOR
      NOP               INPUT
      SZA,RSS       ANY ADDRESS?
      JMP GETAD,I   NO ADDRESS
      CPA .2        TWO CHARACTERS INPUT?
      JMP TWOCH     TWO CHARACTERS INPUTTED
*
ERRO. JSB CRLFD     INVALID INPUT ERROR
      LDA .20
      LDB MA4
GETA2 JSB TTY.P     PRINT 'INVALID INPUT'
      JSB CRLFD     DO A RETURN AND LINE FEED
      JMP INPUT     RETURN FOR MORE INPUT
*
TWOCH LDA BUF,I     GET FIRST TWO CHARACTERS
      ALF,ALF       LOOK AT FIRST CHARACTER
      JSB NBER      CHECK FOR VALID OCTAL;YES,CONVRT
      JMP ERRO.     NOT OCTAL
      SZA,RSS       ADDRESS > 7 ?
      JMP ERRO.     NO
      ALF,RAR       MOVE FIRST DIGIT 3 BITS LEFT
      STA IOADR       AND SAVE
      LDA BUF,I
      JSB NBER      CHECK SECOND CHARACTER
      JMP ERRO.     NOT OCTAL
      IOR IOADR     FORM TWO DIGIT OCTAL NUMBER
      STA IOADR     SAVE I/O ADDRESS
      ISZ GETAD     NON-ZERO I/O ADDRESS
      JMP GETAD,I   RETURN
      SKP
*
*  SUBROUTINE NBER
*
*   THIS SUBROUTINE CHECKS WHETHER THE CHARACTER IN A REPRESENTS
*    A VALID OCTAL DIGIT. IF THE CHARACTER IS VALID IT IS
*      CONVERTED TO AN OCTAL DIGIT.
*
*   RETURN:    P+1  INVALID OCTAL CHARACTER
*              P+2  VALID OCTAL CHARACTER
*                     (A) = OCTAL DIGIT
*
*
NBER  NOP
      AND B177      MASK TO ONE CHARACTER
      ADA N60       SUBTRACT OCTAL 60
      STA 1         TRANSFER TO B
      BRS,BRS
      BRS           SHIFT OUT FIRST 3 BITS
      SZB,RSS       IS B ZERO
      ISZ NBER      B=0, VALID DIGIT, RETURN TO P+2
      JMP NBER,I    RETURN
      SPC 5
*
*   SUBROUTINE CRLFD OUTPUTS A CARRIAGE RETURN AND LINE FEED.
*
CRLFD NOP           EXIT/ENTRY
      CLA
CRLF1 JSB TTY.P     DO CR/LF
      JMP CRLFD,I   EXIT
      SKP
*
*  SUBROUTINE SETI
*
*   THIS SUBROUTINE MODIFIES THE ADDRESSES SPECIFIED IN A LIST
*
*   CALL:    JSB SETI
*                (A) = NUMBER OF LOCATIONS TO BE MODIFIED (2'S COMP)
*                (B) = STARTING ADDRESS OF LIST OF ADDRESSES
*
*
SETI  NOP           EXIT/ENTRY
      STA COUNT     SAVE LENGTH OF LIST
      STB BADDR     SET LIST STARTING ADDRESS
LOOP  LDB BADDR,I   LOAD ADDRESS OF INSTRUCTION
      LDA 1,I       LOAD INSTRUCTION TO BE MODIFIED
      AND MASK      ZERO I/O PART, MASK=177700
      IOR IOADR     INSERT I/O ADDRESS
      STA 1,I       SET MODIFIED INSTRUCTION
      ISZ BADDR     INDEX LIST POINTER
      ISZ COUNT
      JMP LOOP      GO DO NEXT LOCATION
      JMP SETI,I    RETURN
      SPC 5
*
* SUBROUTINE (TOUT) TO OUTPUT ONE CHARACTER
* TO TELETYPE.  CHARACTER IS IN (A).  (B) IS NOT ALTERED.
*
TOUT  NOP
TP.11 OTA TTY       LOAD BOARD BUFFER
      STC TTY,C     GIVE PUNCH COMMAND
      SFS TTY       WAIT FOR
      JMP *-1         COMPLETION
      JMP TOUT,I
      SPC 5
*
*  SUBROUTINE  (POUT) TO OUTPUT ONE CHARACTER TO
*  PUNCH DEVICE.  CHARACTER IS IN (A).  (B) IS NOT ALTERED.
*
POUT  NOP
      OTA PNCH      FILL BOARD BUFFER
      STC PNCH,C    REQUEST PUNCH
      SFS PNCH      WAIT UNTIL
      JMP *-1         DONE
      JMP POUT,I
      SKP
*
*   SUBROUTUNE PUNCH
*
*   THIS SUBROUTINE PROVIDES THE MEANS OF PUNCHING BINARY
*      RECORDS ON THE TELETYPE OR HIGH SPEED PUNCH.
*
*    CALLING SEQUENCE   JSB PUNCH
*
*      (A) = LENGTH (AND MODE) OF RECORD TO BE OUTPUT
*      (B) = STARTING ADDRESS OF DATA BUFFER
*
*  BINARY OUTPUT IS INDICATED BY A NEGATIVE (2S COMPLE-
*   MEMT) VALUE IN A.  THIS NEGATIVE VALUE IS THE
*   NUMBER OF WORDS TO BE OUTPUT.
*
*   IF A = 0 ON ENTRY 10 INCHES OF FEED FRAMES ARE PUNCHED
*
PUNCH NOP           EXIT/ENTRY
      STB BUFF      SAVE STARTING ADDRESS OF BUFFER
      LDB PMODE
TP.9  OTB TTY       SET TTY TO PUNCH MODE
      SZA           CHECK FOR FEED FRAMES ONLY
      JMP *+3       NOT FEED FRAME MODE
      LDA .200
      JMP PP03+1    DO FEED FRAMES ONLY
*
      ALS           CONVERT COUNT TO CHARACTERS (X2)
      STA CHC1      AS COUNTER FOR OUTPUT SECTION.
      LDB UL52      SET UPPER/LOWER INDICATOR
*
* CHARACTER OUTPUT SECTION
*
PP02 LDA BUFF,I    GET WORD CONTAINING CHARACTER
     SSB,RSS       IF UPPER/LOWER FLAG SAYS UPPER
     ALF,ALF        (SIGN = 0) ROTATE TO LOWER
     AND M377      REMOVE UPPER CHARACTER
     JSB PNCHO,I   OUTPUT CHARACTER
     SSB           IF CHAR. OUTPUT WAS LOWER CHAR.,
     ISZ BUFF       ADD 1 TO BUFFER ADDRESS.
     RBL           SET UPPER/LOWER FLAG FOR NEXT CHA
     ISZ CHC1      INDEX CHARACTER COUNTER.
     JMP PP02       NOT ZERO, MORE TO OUTPUT.
*
*  COMPLETION SECTION
*
PP03 LDA CM.4      BINARY SECTION.  SET BUFF = -4
     STA BUFF       FOR COUNTER FOR FEED-FRAMES
     CLA           SET A = ZERO( FEED-FRAME).
     JSB PNCHO,I   OUTPUT FEED FRAME
     ISZ BUFF      INDEX COUNTER
     JMP *-3        CONTINUE OUTPUT
TP.10 CLC TTY       TURN OFF TTY
PN8   CLC PNCH      TURN OFF PUNCH
      JMP PUNCH,I   EXIT
      SKP
*
* SUBROUTINE- PNCHA  (PUNCH ABSOLUTE BLOCK)
*
*  UPON ENTRY --
*    (A) = ADDRESS OF FIRST WORD OF BLOCK
*    (B) = ADDRESS OF LAST WORD OF BLOCK
*
PNCHA NOP
      INB           SET = TO LAST +1M FOR EOB CHECK
      STA T1       SAVE FIRST AND LAST WORD
      STB T2        ADDRESSES OF BLOCK.
P1    LDA M27      SET T3 = -27 AS INDEX F6R
      STA T3        FILLING BUFFER.
      LDA T1      SET BUF+1 FOR LOAD ADDRESS
      STA BUF1,I    OF CURRENT BLOCK.
      STA CKSUM    INITIALIZE CHECKSUM WORD.
      CLA          INITIALIZE
      STA BUF,I     WORD COUNT
      LDA BUF      SET T4 = ADDRESS
      ADA .2        OF WORD 3 OF BUFFER
      STA T4         FOR STORING WORDS.
*
P2    LDA T1,I     STORE CURRENT WORD FORM MEMORY
      STA T4,I      BLOCK IN BUFFER.
      ISZ T1        BUMP BLOCK ADDRESS
      ISZ T4       ADD 1 TO BUFFER ADD950J3
      ADA CKSUM    ADD WORD TO CUMULATED
      STA CKSUM     CHECKSUM
      ISZ BUF,I    COUNT WORD STORED IN BUFFER.
      LDA T1       CHECK FOR END OF BLOCK.
      CPA T2
      JMP P3       YES, FWA = LWA.
      ISZ T3       INDEX BUFFER COUNTER.
      JMP P2       BUFFER NOT YET FILLED.
*
P3    LDA CKSUM    BUFFER FILLED. SET CHECKSUM IN
      STA T4,I     LAST WORD IN BUFFER.
      LDA BUF,I    POSITION RECORD
      ALF,ALF       WORD COUNT TO
      STA BUF,I      UPPER CHARACTER IN WORD 1.
      ALF,ALF      REPOSITION, ADD 3 FOR
      ADA C.03      TOTAL RECORD LENGTH, SET
      CMA,INA        NEGATIVE FOR OUTPUT.
      LDB BUF       (B) = ADDR. OF BUFFER.
      JSB PUNCH     PUNCH RECORD
*
      LDA T1       CHECK AGAIN FOR COMPLETION OF
      CPA T2        PUNCHING BLOCK.
      JMP PNCHA,I   YES, EXIT.
      JMP P1        NO, SET NEXT RECORD.
      SKP
*
* SUBROUTINE: LTG  (LEADER/TRAILER GENERATOR)
*
*
*  LTG PRODUCES APPROXIMATELY 10-INCHES
*    OF BLANK TAPE (FEED-FRAMES)
*
LTG   NOP
      CLA           SET FEED FRAME MODE A=0
      JSB PUNCH     PUNCH FEED FRAMES
      JMP LTG,I     EXIT.
      SPC 5
*
* PUNCH BUFFER
*
BUF   DEF BUFFR
BUF1  DEF BUFFR+1
*
BUFFR BSS 30
BUFF  NOP
T1    NOP
T2    NOP
T3    NOP
T4    NOP
CKSUM NOP
      SPC 5
*
*    MESSAGE STORAGE SECTION
*
MA1   DEF MSG1
MSG1  ASC 14, PHOTO READER I/O ADDRESS?
MA2   DEF MSG2
MSG2  ASC 10, PUNCH I/O ADDRESS?
MA3   DEF MSG3
MSG3  ASC 15, TURN ON TTY PUNCH, PRESS RUN
MA4   DEF MSG4
MSG4  ASC 10, INVALID I/O ADDRESS
MA5   DEF MSG5
MSG5  ASC 13, SYSTEM DUMP I/O ADDRESS?
MA6   DEF MSG6
MSG6  ASC 6, CORE SIZE?
MA7   DEF MSG7
MSG7  ASC 8, IMPROPER INPUT
      SKP
*
*  CONSTANT AND DATA SECTION
*
MASK  OCT 177700
.200  DEC -200
M97   DEC -97
M36   DEC -36
N60   OCT -60
M27   DEC -27
M25   DEC -25
M24   DEC -24
M20   DEC -20
M15   DEC -15
M12   DEC -12
M5    DEC -5
CM.4  DEC -4
M1    DEC -1
C.03  DEC 3
.4    DEC 4
.20   DEC 20
.30   DEC 30
B77   OCT 77
.135  DEC 135
M377  OCT 377
UL52  OCT 52525
*
C8K   OCT 34000     ACCEPTABLE
C12K  OCT 30462                    added
C16K  OCT 30466       CORE
C20K  OCT 31060                    added
C24K  OCT 31064         SIZE
C28K  OCT 31070                    added
C32K  OCT 31462           ANSWERS
*
INCIN DEF *+1
      OCT 10000                    added
      OCT 20000     RELOCATION
      OCT 30000                    added
      OCT 40000
      OCT 50000                    added
      OCT 60000       INCREMENTS
*
LWM   DEF EOTC      LAST WORD AVAILABLE
SERLA DEF SRIAL
*
SOURC NOP
DEST  NOP
CHC1  NOP
IOADR NOP
*
PNCHO DEF TOUT      PUNCH LINK LOCATION
PNCHI DEF POUT      PUNCH REFERENCE INSTRUCTION
*
LWAMR DEF .HSPR-1   LWAM IF PHOTO READER
LWAMP DEF .PNCH-1   LWAM IF PUNCH
      SKP
*
*  LIST OF INSTRUCTIONS (ADDRESSES) TO BE SET
*
*
*   TELETYPE INSTRUCTIONS ADDRESS LIST
*
LIST1 DEF TI.1
      DEF TI.2
      DEF TI.2+1
      DEF TI.3
      DEF TI.4
      DEF TI.5
      DEF TI.5+1
      DEF TI.6
      DEF TI.7
      DEF TI.7+1
      DEF TP.1
      DEF TP.2-1
      DEF TP.2
      DEF TP.4
      DEF TP.4+1
      DEF TP.5
      DEF TP.6
      DEF TP.7
      DEF TP.8
      DEF TP.9
      DEF TP.10
      DEF TP.11
      DEF TP.11+1
      DEF TP.11+2
*
LST1A DEF LIST1
*
*  PHOTO READER INSTRUCTIONS ADDRESS LIST
*
LIST2 DEF PR3
      DEF PR5
      DEF PR6
      DEF PR7
      DEF RO
*
RO    CLC RDR
LST2A DEF LIST2
*
*  HIGH SPEED PUNCH INSTRUCTIONS ADDRESS LIST
*
LIST3 DEF PN3
      DEF PN4
      DEF PN5
      DEF PN7
      DEF PO
*
PO    CLC PNCH
LST3A DEF LIST3
      SKP
*
*  SYSTEM DUMP INSTRUCTIONS ADDRESS LIST
*
LIST4 DEF PN8
      DEF POUT+1
      DEF POUT+2
      DEF POUT+3
*
LST4A DEF LIST4
      SPC 5
*
*  SKIP DIFFERENCE IN WORDS BETWEEN PARALLEL AND
*  SERIAL TELETYPE PACKAGES.
*
      BSS 22B       (STOPI-SPNCH)-(TT.II-.PNCH)
      HED BASIC SYSTEM HIGH SPEED PUNCH DRIVER
*
************** BASIC SYSTEM HIGH SPEED PUNCH DRIVER ****************
*
*  OUTPUTS ASCII THROUGH THE HIGH SPEED PUNCH
*
*  CALL:  JSB 103B,I
*
*        (A) = NUMBER OF CHARACTERS TO BE PUNCHED
*        (B) = STARTING ADDRESS OF BUFFER
*
*
*     IF (A) IS >= 0  THEN OUTPUT (A) CHARACTERS
*     FOLLOWED BY A CARRIAGE RETURN-LINE FEED.
*
*     IF (A) < 0 THEN PUNCH -(A) CHARACTERS ONLY.
*
*     BUFFER CONTAINS ASCII CHARACTERS PACKED TWO PER WORD.
*
*     IF (B) = 0 OK ENTRY (A) FEED FRAMES ARE PUNCHED.
*     IF (A) = 0 OK ENTRY ONLY A CR/LF IS PUNCHED.
*
*
.PNCH NOP
PN1   JSB INIT      INITIALIZE FOR PUNCHING
PN2   JSB GETCH     GET NEXT CHARACTER FROM BUFFER
      JMP PN6       BUFFER EMPTY
PN3   OTA PNCH      LOAD PUNCH BUFFER
PN4   STC PNCH,C    GIVE PUNCH COMMAND
PN5   SFS PNCH
      JMP *-1       WAIT FOR PUNCH READY
      JMP PN2       GET NEXT CHARACTER
*
PN6   LDA IORI
      STA FINSH+1   RESTORE IOR INSTRUCTION
PN7   CLC PNCH      TURN OFF PUNCH
      SEZ,CLE,RSS   RECORD COMPLETE? CLEAR E
      JMP .PNCH,I   E=0, OUTPUT COMPLETE
      LDA M2        E=1, APPEND CR AND LF
      LDB CRLFA     LOAD ADDRESS OF CR AND LF
      JMP PN1       DO CR/LF
      HED BASIC SYSTEM HIGH SPEED PHOTO READER DRIVER
*
*************** BASIC SYSTEM PHOTO READER DRIVER  ******************
*
*  INPUTS TAPE RECORDS THROUGH THE PHOTO READER
*
*  CALL:  JSB 101B,I
*
*        (A) =  MAXIMUM NUMBER CHARS IN RECORD
*        (B) =  BUFFER STARTING ADDRESS
*
*   ON RETURN  (A)= -1  TOO MANY CHARACTERS IN RECORD
*              (A)= -2  END OF TAPE DETECTED
*              (A)= -3  NO TAPE OR GATE DOWN
*              (A)= NUMBER OF CHARACTERS IN RECORD
*
*           INPUT IS PACKED TWO CHARACTERS PER WORD IN BUFFER.
*
*           ALL RECORDS MUST BE TERMINATED WITH A LINE FEED.
*           THE NULL AND CARRIAGE RETURN CHARACTERS ARE IGNORED.
*
*           THE LEFT ARROW(S) - DELETE THE PREVIOUS CHARACTER(S).
*
*           AN ALT MODE ANYWHERE BEFORE THE LINE FEED DELETES ALL
*           CHARACTERS IN THE RECORD. THE RECORD IS IGNORED.
*
*      IF 10 NULL CHARACTERS ARE DETECTED BEFORE ANY CHARACTER,
*      READING IS TERMINATED AND THE RETURN IS WITH A NULL RECORD.
*
*
.HSPR NOP
      STA COUNT     SAVE LENGTH
      STB BUFSA     SAVE BUFFER STARTING ADDRESS
PR1   LDA M11
      STA EOTC      INITIALIZE EOT COUNTER
      LDB BUFSA
      STB BADDR     INITIALIZE BUFFER POINTER
      CLB           INITIALIZE CHARACTER COUNT
PR2   SZB,RSS       ANY NON-NULL CHARACTERS YET?
      SZA           NO, SKIP IF NULL
      JMP PR3
      ISZ EOTC      COUNT NULL
      JMP PR3       NOT YET 10 NULLS
      LDA M2        SET A TO INDICATE EOT (-2)
      JMP PR7       10 NULLS, TURN OFF READER & EXIT
PR3   STC RDR,C     REQUEST CHARACTER
      CLA           SET DELAY COUNT
PR4   INA,SZA,RSS   DELAY = 6.4 * 65K = .41 SECONDS
      JMP PR8       (A)=0, NO TAPE OR GATE DOWN
PR5   SFS RDR
      JMP PR4       NO FLAG, CHECK DELAY COUNT
PR6   LIA RDR,C     LOAD CHARACTER
      JSB PROCS     PROCESS CHARACTER
      JMP PR2       GET NEXT CHARACTER
      CPB M2        RUBOUT IN THIS RECORD?
      JMP PR1       YES, IGNORE RECORD
PR7   CLC RDR       TURN OFF READER
      JMP .HSPR,I
*
PR8   LDA M3        LOAD 'NO TAPE' STATUS
      JMP PR7
      HED BASIC SYSTEM TELETYPE INPUT DRIVER
*
******************* BASIC SYSTEM TELETYPE INPUT DRIVER *************
*
*   INPUTS FROM AN ASR 33/35 THROUGH THE
*   TELETYPE CONTROL BOARD FROM TAPE OR KEYBOARD
*
*    CALL:  JSB 104B,I
*
*        (A) =  MAXIMUM NUMBER CHARS IN RECORD
*        (B) =  BUFFER STARTING ADDRESS
*
*    RETURN:   (A)= -1  TOO MANY CHARACTERS IN RECORD
*              (A)= -2  RECORD DELETED
*              (A)= NUMBER OF CHARACTERS IN RECORD
*
*
*           THE CHARACTERS ARE PACKED TWO TO A WORD IN THE BUFFER
*
*           ALL RECORDS MUST BE TERMINATED WITH A LINE FEED
*           THE NULL AND CARRIAGE RETURN CHARACTERS ARE IGNORED
*
*           THE LEFT ARROW(S) - DELETE THE PREVIOUS CHARACTER(S).
*
*           AN ALT MODE ANYWHERE BEFORE THE LINE FEED DELETES ALL
*           CHARACTERS IN THE RECORD. THE RECORD IS IGNORED.
*
*
TTY.I NOP
      STA COUNT     SAVE LENGTH
      STB BADDR     SET BUFFER ADDRESS
      CLB           SET CHARACTER COUNTER
      LDA IMODE
TI.1  OTA TTY       SET TTY TO INPUT MODE
TI.2  STC TTY,C     REQUEST CHARACTER
      SFS TTY
      JMP *-1       WAIT FOR CHARACTER INPUT
TI.3  LIA TTY       LOAD CHARACTER
      JSB PROCS     PROCESS CHARACTER
      JMP TI.2      GET NEXT CHARACTER
TI.4  CLC TTY
      JMP TTY.I,I   RECORD COMPLETE RETURN
*
IMODE OCT 160000    LIST ONLY (INPUT-ASR 35)
      HED BASIC SYSTEM TELETYPE OUTPUT DRIVER
*
*************** BASIC SYSTEM TELETYPE OUTPUT DRIVER ****************
*
*    OUTPUTS ASCII RECORDS THROUGH THE TELETYPE PRINTER,
*    PUNCH, OR BOTH.
*
*    CALL:  JSB 102B,I
*
*          (A) = NUMBFR OF CHARACTERS TO BE OUTPUT
*          (B) = STARTING ADDRESS OF BUFFER
*
*
*     IF (A) IS >= 0  THEN OUTPUT (A) CHARACTERS
*     FOLLOWED BY A CARRIAGE RETURN-LINE FEED.
*
*     IF (A) < 0 THEN PUNCH -(A) CHARACTERS ONLY.
*
*     BUFFER CONTAINS ASCII CHARACTERS PACKED TWO PER WORD.
*
*     IF (B) = 0 OK ENTRY OUTPUT (A) FEED FRAMES.
*     IF (A) = 0 OK ENTRY ONLY A CR/LF IS OUTPUT.
*
*
TTY.P NOP
      JSB INIT      INITIALIZE AND SETUP
TP.1  LDA TTY       SAVE TTY INTERRUPT
      STA TEMPI       INSTRUCTION
      LDA LISTR
      CPA PLSTR     PLIST?
      LDA PMODE     YES
      CPA TLSTR     LIST?
      LDA LMODE    YES
      OTA TTY       SET TTY TO OUTPUT MODE
TP.2  STB TTY       PUT NOP INTO INTERRUPT CELL
TP.3  JSB GETCH     GET NEXT CHARACTER
      JMP TP.8      BUFFER EMPTY
TP.4  OTA TTY       LOAD TTY BOARD BUFFER
      STC TTY,C     GIVE PRINT COMMAND
TP.5  SFS TTY       WAIT FOR
      JMP *-1         FLAG
      LDA TEMPI
      SZA,RSS       IS INTERRUPT ENABLED?
      JMP TP.3      NO
*
*  THIS SECTION CHECKS IF A CHARACTER HAS BEEN TYPED FROM THE
*   KEYBOARD DURING OUTPUT ON TELETYPE.
*
TP.6  LIA TTY       LOAD FROM BOARD BUFFER
      CMA           FIRST 8 BITS SHOULD BE 1'S
      AND B177
      SZA,RSS
      JMP TP.3      NO KEY STRUCK, CONTINUE
      LDA IORI
      STA FINSH+1   RESTORE IOR INSTRUCTION
TP.7  CLC TTY       TURN OFF TTY
      JSB I.STP,I   GO TO STOP
TP.8  CLC TTY       TURN OFF TTY
      LDA TEMPI
      CPA TT.II     IS INTERRUPT MODE SET?
      JSB I.ON      YES, RE-ENABLE KEYBOARD
      LDA IORI
      STA FINSH+1   RESTORE IOR INSTRUCTION
      SEZ,CLE,RSS   RECORD COMPLETE?   CLEAR  E
      JMP TTY.P,I   E=0, RECORD OUTPUT COMPLETE
      LDA M2        E=1, ADD A RETURN AND LINE FEED
      LDB CRLFA     LOAD ADDRESS OF CR AND LF
      JMP TTY.P+1   DO CR/LF
*
PMODE OCT 110000    PUNCH ONLY (ASR 35)
LMODE OCT 120000    LIST ONLY  (ASR 35)
*
TEMPI NOP
      SPC 5
*
*      THIS ROUTINE TURNS OFF THE TELETYPE INTERRUPT MODE
*
I.OFF NOP
      CLA
TI.5  STA TTY       SET NOP INTO INTERRUPT CELL
      CLC TTY       TURN OFF READ MODE
R.OFF NOP           SET TO CLC RDR IF RDR EXISTS
P.OFF NOP           SET TO CLC PNCH IF PNCH EXISTS
      JMP I.OFF,I   RETURN
      SPC 5
*
*      THIS ROUTINE TURNS ON THE TELETYPE INTERRUPT MODE
*
I.ON  NOP
      LDA TT.II
TI.6  STA TTY       SET JSB INTO INTERRUPT CELL
      LDA IMODE
TI.7  OTA TTY       SET TTY TO INPUT MODE
      STC TTY,C     SET TTY TO LOOK FOR INPUT
      JMP I.ON,I    RETURN
*
TT.II JSB I.STP,I   INTERRUPT LOCATION CODE
      HED CHARACTER PROCESSING SECTION FOR INPUT
*
*  CHARACTER PROCESSING SECTION FOR TTY AND PHOTOREADER
*
*      CALL:   JSB PROCS
*              (A) HOLDS CHARACTER
*
*      RETURN:    P+1 - GET NEXT CHARACTER
*                 P+2 - RECORD COMPLETE
*
PROCS NOP
      AND B177      STRIP BIT 7
      SZA,RSS       NULL?
      JMP PROCS,I   YES, IGNORE
      CPA .2        NO, CONTROL B ?
      JMP PROCS,I   YES, IGNORE
      CPA .3        NO, CONTROL C ?
      JMP PROCS,I   YES, IGNORE
      CPA LNFD      NO, LINE FEED?
      JMP PROCS,I   YES, IGNORE
      CPA B177      NO, RUBOUT?
      JMP PROCS,I   YES, IGNORE
      CPA AMODE     NO, ALT MODE?
      JMP CMPLT-1   YES, CANCEL RECORD
      CPA OMODE     NO, OLD ALT MODE?
      JMP CMPLT-1   YES, CANCEL RECORD
      CPA EMODE     NO, ESCAPE MODE?
      JMP CMPLT-1   YES, CANCEL RECORD
      CPA CRTN      NO, CARRIAGE RETURN?
      JMP CMPLT     YES, COMPLETE RECORD
      CPB COUNT     NO, BUFFER OVERFLOW?
      CCB           YES, LOOK FOR CARRIAGE RETURN
      SSB           LOOKING FOR CARRIAGE RETURN?
      JMP PROCS,I   YES, RETURN
      CPA LFTAR     NO, LEFT ARROW?
      JMP DLETE     YES, DELETE PREVIOUS CHARACTER
      SLB,INB       NO, CHECK ODD/EVEN FLAG
      JMP PROC2     B0 = 0, EVEN CHARACTER
PROC1 ALF,ALF       B0 = 1, ODD CHARACTER
      STA BADDR,I   RECORD HIGH CHARACTER
      JMP PROCS,I
PROC2 IOR BADDR,I   PACK TWO CHARACTERS
      STA BADDR,I   PUT IN BUFFER
      ISZ BADDR     INDEX BUFFER ADDRESS POINTER
      JMP PROCS,I
      SKP
*
*  THIS SECTION DELETES PREVIOUS CHARACTER(S)
*
DLETE SZB,RSS       IS BUFFER EMPTY?
      JMP PROCS,I   YES, RETURN
      CCA           NO
      ADB 0         DECREMENT CHARACTER COUNT
      SLB,RSS       LOW CHARACTER?
      JMP PROCS,I   YES
      ADA BADDR     NO, DECREMENT
      STA BADDR       ADDRESS POINTER
      LDA BADDR,I   GET LAST TWO CHARACTERS
      ALF,ALF
      AND B177      DELETE LAST CHARACTER
      JMP PROC1     STORE NEXT-TO-LAST CHARACTER
*
*  THIS SECTION PUTS COUNT IN A AND RETURNS TO P+2
*
      LDB M2        SET DELETE FLAG
CMPLT LDA 1         PUT CHARACTER COUNT IN A
      ISZ PROCS
      JMP PROCS,I
      SPC 5
*
*  SUBROUTINE  GETCH
*
*    RETURN IO P+1 ON EMPTY BUFFER
*    IF THE BUFFER IS NOT EMPTY, ELSE
*    RETURN TO P+2 WITH CHARACTER IN (A).
*
GETCH NOP
      CPB COUNT
      JMP GETCH,I   BUFFER EMPTY, P+1 RETURN
      LDA BADDR,I   GET TWO CHARACTERS
      SLB,RSS
      ALF,ALF       B EVEN, POSITION CHARACTER RIGHT
      SLB,INB       CHECK O/E, AND INDEX COUNT
      ISZ BADDR     B ODD, INCREMENT ADDRESS POINTER
FINSH AND B177      STRIP LEFT CHARACTER
      IOR B200      ADD BIT 7
      ISZ GETCH
      JMP GETCH,I   RETURN TO P+2
      HED 
*
*  INITIALIZES FOR OUTPUTTING A RECORD
*
INIT  NOP
      CCE,SSA       SET E=1, CHECK FOR (A) < 0
      CMA,CLE,INA   SET (E) = 0, (A) = -(A)
      STA COUNT     SAVE CHARACTER COUNT
      STB BADDR     SET BUFFER STARTING ADDRESS
      SZA
      SZB           LEADER/TRAILER ONLY?
      JMP *+4       NO
      LDA CLAI      YES, (B) = 0
      STA FINSH+1   SET CLEAR INSTRUCTION
      CLE           SET NO CR/LF
      CLB           INITIALIZE OUTPUT COUNT
      JMP INIT,I
      HED DATA, ADDRESSES, ETC.
*
*  COMMON DRIVER CONSTANTS AND ADDRESSES
*
M11   DEC -11
M3    DEC -3
M2    DEC -2
.2    DEC 2
.3    DEC 3
LNFD  OCT 12        LINE FEED
CRTN  OCT 15        CARRIAGE RETURN
EMODE OCT 33        ESCAPE
LFTAR OCT 137       LEFT ARROW
OMODE OCT 175       OBSOLETE ALT MODE
AMODE OCT 176       ALT MODE
B177  OCT 177       RUBOUT
B200  OCT 200
CLAI  CLA
IORI  IOR B200      ADD IN BIT 7
*
CRLFA DEF CRLF
CRLF  OCT 106612
*
BUFSA NOP           INITIAL BUFFER ADDRESS
BADDR NOP           CURRENT BUFFER ADDRESS
COUNT NOP           HOLDS RECORD LENGTH
EOTC  NOP           END-OF-TAPE COUNTER
*
*  BASE PAGE REFERENCE ENTRIES
*
      ORG 101B
      DEF I.STP,I   READER LINK INITIALIZED TO STOP
      DEF TTY.P     TTY OUTPUT ENTRY ADDRESS
      DEF 102B,I    PUNCH LINK INITIALIZED TO TTY
      DEF TTY.I     TTY INPUT ENTRY ADDRESS
I.STP NOP           LINK TO STOP ROUTINE
LWBM  NOP           LAST WORD OF USER SPACE
      NOP
FWAM  DEF 135B      FIRST WORD OF AVAILABLE MEMORY
LWAM  DEF TTY.I-1   LAST WORD OF AVAILABLE MEMORY
*
      ORG 123B
IMOFF DEF I.OFF     DISABLE KEYBOARD INTERRUPT
IMON  DEF I.ON      SET KEYBOARD INTERRUPT
TLINK DEF I.TTY+2000B    TTY INPUT INTERRUPT LINK
PLSTR DEF 103B,I    PLIST OUTPUT ADDRESS
LISTR DEF 102B,I    LIST DEVICE LINK
TLSTR DEF 102B,I    LIST OUTPUT ADDRESS
*
SYMTA EQU 117B
IOBFA EQU 131B      BUFFER ADDRESS
SBUFA EQU 134B      SYNTAX BUFFER ADDRESS
RDR   EQU 0
PNCH  EQU 0
TTY   EQU 0
TTYI  EQU TTY+1
      HED SERIAL TELETYPE PACKAGE
*
*  MODIFY PBS FOR SERIAL TELETYPE
*
     ORG 15073B
*
SRIAL LDA SM11      SET
      LDB LST5A       TTY PUNCH
      JSB SETIA,I       ADDRESSES
      ISZ IOADA,I   INCREMENT SELECT CODE
      LDA SM5       SET
      LDB LST6A       TTY READER
      JSB SETIA,I       ADDRESSES
      LDA TT.IS     SET INTERRUPT
TI6   STA TTYI        CELL
*
      LDA TTYPI     SET OUTPUT
      STA COR1A,I
      STA COR3A,I     TELETYPE CALLS
      STA DMP1A,I
      STA GETAA,I       TO SERIAL
      STA GET2A,I
      STA CRL1A,I         DRIVER
*
      LDA STF0      SET INPUT
      STA COR2A,I
      STA GET1A,I     TELETYPE CALLS
      ISZ COR2A
      ISZ GET1A         TO SERIAL
      LDA TTYII
      STA COR2A,I         DRIVER
      STA GET1A,I
      ISZ COR2A
      ISZ GET1A
      LDA CLF0
      STA COR2A,I
      STA GET1A,I
*
      CLA           CLEAR
      STA TP9A,I
      ISZ TP9A        BUFFERED TELETYPE
      STA TP9A,I
      STA TP10A,I       INSTRUCTIONS
      STA DMP2A,I
      ISZ DMP2A
      STA DMP2A,I
*
      LDA STOUA     SET FOR POSSIBLE
      STA TOUTA,I     TTY PUNCHING
*
      LDA LST7A     USE READER AND PUNCH
      STA PHRLA,I     DRIVERS IN
      LDA LST8A         SERIAL TELETYPE
      STA PNCLA,I         PACKAGE
      SKP
      LDA ROFFA     PREPARE TO SET
      STA PHR1A,I     INTERRUPT-OFF INSTRUCTIONS
      LDA POFFA         IN SERIAL TELETYPE
      STA NOR1A,I         PACKAGE
*
      LDA SLWMT     SET SERIAL
      STA LWAM
      LDA SLWMR       TELETYPE VALUES
      STA LWMRA,I
      LDA SLWMP         IN LWAM CONSTANTS
      STA LWMPA,I
      LDA STTYP
      STA 102B
      LDA STTYI
      STA 104B
      LDA SIOFF
      STA IMOFF
      LDA SION
      STA IMON
*
*  OVERLAY PARALLEL DRIVERS WITH SERIAL DRIVERS
*
SRIA1 LDA MOVES,I   MOVE A
      STA DESTS,I     WORD
      ISZ MOVES     BUMP
      ISZ DESTS       POINTERS
      ISZ SMCNT     SERIAL DRIVERS MOVED?
      JMP SRIA1     NO
      JMP PHRDA,I   YES, RETURN TO MAIN SEQUENCE
      SPC 5
*
*  SUBROUTINE (STOUT) TO OUTPUT ONE CHARACTER TO THE
*  TELETYPE.  CHARACTER IS IN (A).  (B) IS NOT ALTERED.
*
STOUT NOP
      STA TCHAR
      LDA SM11      SET BIT
      STA BCNT        COUNTER
      LDA TCHAR
      ALS           ADD
      IOR B3000       CONTROL BITS
TP7   STC TTY       TURN ON TELETYPE
TP8   OTA TTY,C     OUTPUT BIT
      RAR           POSITION NEXT BIT
TP9   SFS TTY       WAIT FOR
      JMP *-1         COMPLETION FLAG
      ISZ BCNT      DONE?
      JMP TP8       NO
TP10  CLC TTY       YES, TURN OFF TELETYPE
      JMP STOUT,I
      SKP
*
*  MODIFICATION ADDRESSES
*
PHR1A DEF PHRD1
NOR1A DEF NORD1
COR1A DEF CORA1
COR2A DEF CORA2
COR3A DEF CORA3
DMP1A DEF DUMP1
DMP2A DEF DUMP2
GETAA DEF GETAD+1
GET1A DEF GETA1
GET2A DEF GETA2
CRL1A DEF CRLF1
TP9A  DEF TP.9-1
TP10A DEF TP.10
TOUTA DEF PNCHO
LWMRA DEF LWAMR
LWMPA DEF LWAMP
PHRLA DEF LST2A
PNCLA DEF LST3A
*
*  MODIFICATION INSTRUCTIONS
*
TTYPI JSB .TTYP
TTYII JSB .TTYI
STF0  STF 0
CLF0  CLF 0
STOUA DEF STOUT
ROFFA STA .ROFF
POFFA STA .POFF
SLWMT DEF .TTYI-1+2000B   LWAM OPTIONS
SLWMR DEF HSPR-1+2000B      FOR SERIAL
SLWMP DEF SPNCH-1+2000B       TELETYPE
STTYP DEF .TTYP+2000B
STTYI DEF .TTYI+2000B
SIOFF DEF .IOFF+2000B
SION  DEF .ION+2000B
*
*  COMMUNICATION LINKS
*
SETIA DEF SETI
IOADA DEF IOADR
PHRDA DEF PHRDR
*
*  LOCAL CONSTANTS AND ADDRESSES
*
SM5   DEC -5
TT.IS JSB TLINK,I   TTY INTERRUPT INSTRUCTION
MOVES DEF SPNCH
DESTS DEF SPNCH+2000B
SMCNT ABS SPNCH-SPROC
      SKP
*
*  TELETYPE OUTPUT INSTRUCTION LIST
*
LIST5 DEF TP2-1
      DEF TP2
      DEF TP2+2
      DEF TP3-1
      DEF TP3
      DEF TP5
      DEF TP6
      DEF TP7
      DEF TP8
      DEF TP9
      DEF TP10
*
LST5A DEF LIST5
*
*  TELETYPE INPUT INSTRUCTION LIST
*
LIST6 DEF TI2
      DEF TI3
      DEF TI4
      DEF TI5
      DEF TI6
*
LST6A DEF LIST6
*
*  PHOTOREADER INSTRUCTION LIST
*
LIST7 DEF PR.3+2000B
      DEF PR.5+2000B
      DEF PR.6+2000B
      DEF PR.7+2000B
      DEF RO
*
LST7A DEF LIST7
*
*  HIGH-SPEED PUNCH INSTRUCTION LIST
*
LIST8 DEF PN.2+2000B
      DEF PN.3+2000B
      DEF PN.4+2000B
      DEF PN.6+2000B
      DEF PO
*
LST8A DEF LIST8
      HED BASIC SYSTEM HIGH SPEED PUNCH DRIVER
*
************** BASIC SYSTEM HIGH SPEED PUNCH DRIVER ***************-
*
*  OUTPUTS ASCII THROUGH THE HIGH SPEED PUNCH
*
*  CALL:  JSB 103B,I
*
*        (A) = NUMBER OF CHARACTERS TO BE PUNCHED
*        (B) = STARTING ADDRESS OF BUFFER
*
*
*     IF (A) IS >= 0  THEN OUTPUT (A) CHARACTERS
*     FOLLOWED BY A CARRIAGE RETURN-LINE FEED.
*
*     IF (A) < 0 THEN PUNCH -(A) CHARACTERS ONLY.
*
*     BUFFER CONTAINS ASCII CHARACTERS PACKED TWO PER WORD.
*
*     IF (B) = 0 OK ENTRY (A) FEED FRAMES ARE PUNCHED.
*     IF (A) = 0 OK ENTRY ONLY A CR/LF IS PUNCHED.
*
*
SPNCH NOP
      JSB SINIT     INITIALIZE FOR PUNCHING
PN.1  JSB SGTCH     GET NEXT CHARACTER FROM BUFFER
      JMP PN.5      BUFFER EMPTY
PN.2  OTA PNCH      LOAD PUNCH BUFFER
PN.3  STC PNCH,C    GIVE PUNCH COMMAND
PN.4  SFS PNCH
      JMP *-1       WAIT FOR PUNCH READY
      JMP PN.1      GET NEXT CHARACTER
*
PN.5  LDA SIORI
      STA SFNSH+1   RESTORE IOR INSTRUCTION
PN.6  CLC PNCH      TURN OFF PUNCH
      SEZ,CLE,RSS   RECORD COMPLETE? CLEAR E
      JMP SPNCH,I   E=0, OUTPUT COMPLETE
      LDA SM2       E=1, APPEND CR AND LF
      LDB SCRLA     LOAD ADDRESS OF CR AND LF
      JMP SPNCH+1   DO CR/LF
      HED BASIC SYSTEM HIGH SPEED PHOTO READER DRIVER
*
*************** BASIC SYSTEM PHOTO READER DRIVER  ******************
*
*  INPUTS TAPE RECORDS THROUGH THE PHOTO READER
*
*  CALL:  JSB 101B,I
*
*        (A) =  MAXIMUM NUMBER CHARS IN RECORD
*        (B) =  BUFFER STARTING ADDRESS
*
*   ON RETURN  (A)= -1  TOO MANY CHARACTERS IN RECORD
*              (A)= -2  END OF TAPE DETECTED
*              (A)= -3  NO TAPE OR GATE DOWN
*              (A)= NUMBER OF CHARACTERS IN RECORD
*
*           INPUT IS PACKED TWO CHARACTERS PER WORD IN BUFFER.
*
*           ALL RECORDS MUST BE TERMINATED WITH A LINE FEED.
*           THE NULL AND CARRIAGE RETURN CHARACTERS ARE IGNORED.
*
*           THE LEFT ARROW(S) - DELETE THE PREVIOUS CHARACTER(S).
*
*           AN ALT MODE ANYWHERE BEFORE THE LINE FEED DELETES ALL
*           CHARACTERS IN THE RECORD. THE RECORD IS IGNORED.
*
*      IF 10 NULL CHARACTERS ARE DETECTED BEFORE ANY CHARACTER,
*      READING IS TERMINATED AND THE RETURN IS WITH A NULL RECORD.
*
*
HSPR  NOP
      STA SCONT     SAVE LENGTH
      STB SBFSA     SAVE BUFFER STARTING ADDRESS
PR.1  LDA SM11
      STA SEOTC     INITIALIZE EOT COUNTER
      LDB SBFSA
      STB SBDDR     INITIALIZE BUFFER POINTER
      CLB           INITIALIZE CHARACTER COUNT
PR.2  SZB,RSS       ANY NON-NULL CHARACTERS YET?
      SZA           NO, SKIP IF NULL
      JMP PR.3
      ISZ SEOTC     COUNT NULL
      JMP PR.3      NOT 10 NULLS
      LDA SM2       SET A TO INDICATE EOT (-2)
      JMP PR.7      10 NULLS, TURN OFF READER & EXIT
PR.3  STC RDR,C     REQUEST CHARACTER
      CLA           SET DELAY COUNT
PR.4  INA,SZA,RSS   DELAY = 6.4 * 65K = .41 SECONDS
      JMP PR.8      (A)=0, NO TAPE OR GATE DOWN
PR.5  SFS RDR
      JMP PR.4      NO FLAG, CHECK DELAY COUNT
PR.6  LIA RDR,C     LOAD CHARACTER
      JSB SPROC     PROCESS CHARACTER
      JMP PR.2      GET NEXT CHARACTER
      CPB SM2       RUBOUT IN THIS RECORD?
      JMP PR.1      YES, IGNORE RECORD
PR.7  CLC RDR       TURN OFF READER
      JMP HSPR,I
*
PR.8  LDA SM3       LOAD 'NO TAPE' STATUS
      JMP PR.7
      HED BASIC SYSTEM TELETYPE INPUT DRIVER
*
******************* BASIC SYSTEM TELETYPE INPUT DRIVER *************
*
*   INPUTS FROM AN ASR 33/35 THROUGH THE
*   TELETYPE CONTROL BOARD FROM TAPE OR KEYBOARD.
*
*    CALL:  JSB 104B,I
*
*        (A) =  MAXIMUM NUMBER CHARS IN RECORD
*        (B) =  BUFFER STARTING ADDRESS
*
*    RETURN:   (A)= -1  TOO MANY CHARACTERS IN RECORD
*              (A)= -2  RECORD DELETED
*              (A)= NUMBER OF CHARACTERS IN RECORD
*
*
*           THE CHARACTERS ARE PACKED TWO TO A WORD IN THE BUFFER.
*
*           ALL RECORDS MUST BE TERMINATED WITH A LINE FEED.
*           THE NULL AND CARRIAGE RETURN CHARACTERS ARE IGNORED.
*
*           THE LEFT ARROW(S) - DELETE THE PREVIOUS CHARACTER(S).
*
*           AN ALT MODE ANYWHERE BEFORE THE LINE FEED DELETES ALL
*           CHARACTERS IN THE RECORD. THE RECORD IS IGNORED.
*
*
.TTYI NOP
      STA SCONT     SAVE LENGTH
      STB SBDDR     SAVE BUFFER ADDRESS
      CLB           ZERO CHARACTER COUNT
      LDA TP5       SET
      STA OUTB        ECHO
TI1   JSB TTINT     INITIALIZE FOR INPUT CHARACTER
      LDA BITS      WAIT FOR
      SZA             CHARACTER
      JMP *-2           COMPLETE
      LDA TCHAR     PROCESS
      JSB SPROC       CHARACTER
      JMP TI1       GET NEXT CHARACTER
      CLB           CLEAR
      STB OUTB        ECHO
      JMP .TTYI,I
      SKP
*
*  THIS SECTION PROCESSES EACH BIT AS IT BECOMES AVAILABLE.
*  RETURN THROUGH 105B IF THE INTERRUPT MODE FLAG IS SET UPON
*  CHARACTER COMPLETION.
*
I.TTY NOP
      STA ATEMP     SAVE (A)
TI2   LIA TTYI,C    MERGE
      IOR TCHAR       NEW BIT
      RAR               INTO
      STA TCHAR           CHARACTER
      ALF,ALF       POSITION BIT
      RAL,RAL         FOR ECHO
OUTB  NOP           OUTPUT INSTRUCTION
      ISZ BITS      BIT 11?
      JMP EXIT      NO
TI3   CLC TTYI      YES
      LDA TCHAR     ALIGN
      ALF,RAR         COMPLETED
      STA TCHAR         CHARACTER
      LDA STOPI     STOP FLAG
      SZA,RSS         SET?
      JMP EXIT      NO
      LDA SIORI     YES, RESTORE
      STA SFNSH+1     IOR INSTRUCTION
      JSB I.STP,I   GO TO STOP
EXIT  LDA ATEMP     RESTORE (A)
      JMP I.TTY,I
*
ATEMP NOP
BITS  NOP
TCHAR NOP
*
TP5   OTA TTY       ECHO BIT INSTRUCTION
      SPC 5
*
*  THIS ROUTINE INITIALIZES THE SERIAL TELETYPE INPUT ROUTINE
*  AND SETS TELETYPE TO ACCEPT INPUT.
*
TTINT NOP
      LDA SM11      SET
      STA BITS        BIT COUNTER
TI4   STC TTYI,C    DEMAND INPUT
      CLA           ZERO OUT
      STA TCHAR       CHARACTER REPOSITORY
      JMP TTINT,I
      HED BASIC SYSTEM TELETYPE OUTPUT DRIVER
*
*************** BASIC SYSTEM TELETYPE OUTPUT DRIVER ***************-
*
*    OUTPUTS ASCII RECORDS THROUGH THE TELETYPE PRINTER,
*    PUNCH, OR BOTH.
*
*    CALL:  JSB 102B,I
*
*          (A) = NUMBER OF CHARACTERS TO BE OUTPUT
*          (B) = STARTING ADDRESS OF BUFFER
*
*
*     IF (A) IS >= 0  THEN OUTPUT (A) CHARACTERS
*     FOLLOWED BY A CARRIAGE RETURN-LINE FEED.
*
*     IF (A) < 0 THEN PUNCH -(A) CHARACTERS ONLY.
*
*     BUFFER CONTAINS ASCII CHARACTERS PACKED TWO PER WORD.
*
*     IF (B) = 0 OK ENTRY OUTPUT (A) FEED FRAMES.
*     IF (A) = 0 OK ENTRY ONLY A CR/LF IS OUTPUT.
*
*
.TTYP NOP
      JSB SINIT     INITIALIZE FOR OUTPUT
TP1   LDA SM11      SET BIT
      STA BCNT        COUNTER
      JSB SGTCH     FETCH NEXT CHARACTER FROM BUFFER
      JMP TP4       BUFFER EMPTY
      ALS           ADD BIT 7 AND
      IOR B3000       CONTROL BITS
      STC TTY       REQUEST PRINT
TP2   OTA TTY,C     OUTPUT BIT
      RAR           POSITION NEXT BIT
      SFS TTY       WAIT FOR
      JMP *-1         BIT OUT FLAG
      ISZ BCNT      CHARACTER OUT?
      JMP TP2       NO
      CLC TTY       YES, TURN OFF TTY
TP3   STF TTY       SET FLAG BUFFER (RESETS TIMER)
      JMP TP1
*
TP4   LDA SIORI     RESTORE IOR
      STA SFNSH+1     INSTRUCTION
      SEZ,CLE,RSS   DONE?
      JMP .TTYP,I   YES
      LDA SM2       NO
      LDB SCRLA     DO CR/LF
      JMP .TTYP+1
*
BCNT  NOP
B3000 OCT 3000
      SKP
*
*      THIS ROUTINE TURNS OFF THE TELETYPE INTERRUPT MODE
*
.IOFF NOP
TI5   CLC TTYI      TURN OFF KEYBOARD
TP6   CLC TTY       TURN OFF PRINTER
.ROFF NOP           SET TO CLC RDR IF READER EXISTS
.POFF NOP           SET TO CLC PNCH IF PUNCH EXISTS
      CLA           CLEAR
      STA STOPI       STOP FLAG
      JMP .IOFF,I
      SPC 5
*
*      THIS ROUTINE TURNS ON THE TELETYPE INTERRUPT MODE
*
.ION  NOP
      CCA           SET STOP FLAG
      STA STOPI       FOR INTERRUPTS
      JSB TTINT     ENABLE KEYBOARD
      JMP .ION,I
*
STOPI NOP           STOP FLAG (INITIALIZED OFF)
      HED CHARACTER PROCESSING SECTION FOR INPUT
*
*  CHARACTER PROCESSING SECTION FOR TTY AND PHOTOREADER
*
*      CALL:   JSB PROCS
*              (A) HOLDS CHARACTER
*
*      RETURN:    P+1 - GET NEXT CHARACTER
*                 P+2 - RECORD COMPLETE
*
SPROC NOP
      AND SB177     STRIP BIT 7
      SZA,RSS       NULL?
      JMP SPROC,I   YES, IGNORE
      CPA S.2       NO, CONTROL B?
      JMP SPROC,I   YES, IGNORE
      CPA S.3       NO, CONTROL C?
      JMP SPROC,I   YES, IGNORE
      CPA SLNFD     NO, LINE FEED?
      JMP SPROC,I   YES, IGNORE
      CPA SB177     NO, RUBOUT?
      JMP SPROC,I   YES, IGNORE
      CPA SAMDE     NO, ALT MODE?
      JMP SCMPL-1   YES, CANCEL RECORD
      CPA SOMDE     NO, OLD ALT MODE?
      JMP SCMPL-1   YES, CANCEL RECORD
      CPA SEMDE     NO, ESCAPE MODE?
      JMP SCMPL-1   YES, CANCEL RECORD
      CPA SCRTN     NO, CARRIAGE RETURN?
      JMP SCMPL     YES, COMPLETE RECORD
      CPB SCONT     NO, BUFFER OVERFLOW?
      CCB           YES, LOOK FOR CARRIAGE RETURN
      SSB           LOOKING FOR CARRIAGE RETURN?
      JMP SPROC,I   YES, RETURN
      CPA SLFTA     NO, LEFT ARROW?
      JMP SDLTE     YES, DELETE PREVIOUS CHARACTER
      SLB,INB       NO, CHECK ODD/EVEN FLAG
      JMP SPRO2     B0 = 0, EVEN CHARACTER
SPRO1 ALF,ALF       B0 = 1, ODD CHARACTER
      STA SBDDR,I   RECORD HIGH CHARACTER
      JMP SPROC,I
SPRO2 IOR SBDDR,I   PACK TWO CHARACTERS
      STA SBDDR,I   PUT IN BUFFER
      ISZ SBDDR     INDEX BUFFER ADDRESS POINTER
      JMP SPROC,I
      SKP
*
*  THIS SECTION DELETES PREVIOUS CHARACTER(S)
*
SDLTE SZB,RSS       IS BUFFER EMPTY?
      JMP SPROC,I   YES, RETURN
      CCA           NO
      ADB 0         DECREMENT CHARACTER COUNT
      SLB,RSS       LOW CHARACTER?
      JMP SPROC,I   YES
      ADA SBDDR     NO, DECREMENT
      STA SBDDR       ADDRESS POINTER
      LDA SBDDR,I   GET LAST TWO CHARACTERS
      ALF,ALF
      AND SB177     DELETE LAST CHARACTER
      JMP SPRO1     STORE NEXT-TO-LAST CHARACTER
*
*  THIS SECTION PUTS COUNT IN A AND RETURNS TO P+2
*
      LDB SM2       SET DELETE STATUS
SCMPL LDA 1         PUT CHARACTER COUNT INTO (A)
      ISZ SPROC
      JMP SPROC,I
      SPC 5
*
*  SUBROUTINE  GETCH
*
*    RETURN IO P+1 ON EMPTY BUFFER
*    IF THE BUFFER IS NOT EMPTY, ELSE
*    RETURN TO P+2 WITH CHARACTER IN (A).
*
SGTCH NOP
      CPB SCONT
      JMP SGTCH,I   BUFFER EMPTY, P+1 RETURN
      LDA SBDDR,I   GET TWO CHARACTERS
      SLB,RSS
      ALF,ALF       B EVEN, POSITION CHARACTER RIGHT
      SLB,INB       CHECK O/E, AND INDEX COUNT
      ISZ SBDDR     B ODD, INCREMENT ADDRESS POINTER
SFNSH AND SB177     STRIP LEFT CHARACTER
      IOR SB200     ADD BIT 7
      ISZ SGTCH
      JMP SGTCH,I   RETURN TO P+2
      HED 
*
*  INITIALIZES FOR OUTPUTTING A RECORD
*
SINIT NOP
      CCE,SSA       SET E=1, CHECK FOR (A) < 0
      CMA,CLE,INA   SET (E) = 0, (A) = -(A)
      STA SCONT     SAVE CHARACTER COUNT
      STB SBDDR     SAVE BUFFER STARTING ADDRESS
      SZA
      SZB           LEADER/TRAILER ONLY?
      JMP *+4       NO
      LDA SCLAI     YES, (B) = 0
      STA SFNSH+1   SET CLEAR INSTRUCTION
      CLE           SET NO CR/LF
      CLB           INITIALIZE OUTPUT COUNT
      JMP SINIT,I
      HED DATA, ADDRESSES, ETC.
*
*  COMMON DRIVER CONSTANTS AND ADDRESSES
*
SM11  DEC -11
SM3   DEC -3
SM2   DEC -2
S.2   DEC 2
S.3   DEC 3
SLNFD OCT 12        LINE FEED
SCRTN OCT 15        CARRIAGE RETURN
SEMDE OCT 33        ESCAPE
SLFTA OCT 137       LEFT ARROW
SOMDE OCT 175       OBSOLETE ALT MODE
SAMDE OCT 176       ALT MODE
SB177 OCT 177       RUBOUT
SB200 OCT 200
SCLAI CLA
SIORI IOR SB200     ADD IN BIT 7
*
SCRLA DEF SCRLF
SCRLF OCT 106612
*
SBFSA NOP           INITIAL BUFFER ADDRESS
SBDDR NOP           CURRENT BUFFER ADDRESS
SCONT NOP           HOLDS RECORD LENGTH
SEOTC NOP           END-OF-TAPE COUNTER
*
      END
