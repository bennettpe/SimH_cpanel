DACON  000023 
DMA1   000002 
DMA2   000006 
PLOTB  013142 
IN1    013145 
IN2    013163 
TRNOF  013165 
CLEAR  013167 
LOOPC  013201 
GRAPH  013206 
CONT1  013231 
CONT2  013251 
AXOFF  013255 
DISPT  013260 
ERASE  013330 
INTER  013333 
INSTX  013336 
LOOP   013344 
IN3    013347 
EXIT   013353 
IN4    013355 
AXIS   013357 
LOOPX  013361 
IN5    013364 
LOOPY  013372 
IN6    013374 
.ENTR  013401 
ADDRS  013414 
LENTH  013415 
PNTR   013416 
CNTR   013417 
PNTRX  013420 
CNTRX  013421 
XAXIS  013422 
YAXIS  013423 
TEMP   013424 
SAVEA  013425 
SAVEB  013426 
PARA1  013427 
PARA2  013431 
IFIX   001364 
DM1    013433 
DM256  013434 
D1     013435 
D2     013436 
D128   013437 
D256   013440 
RSSIN  013441 
INSTR  013442 
INSTY  013443 
CONWD  013444 
SBTBL  013445 
ENDTB  013455 
LINK   000030 
CONFG  013455 
ILOOP  013464 
NUMBR  013476 
MASK   013477 
XMASK  013500 
IOADD  013501 
ICNTR  013502 
IPNTR  013503 
B      000001 
START  013504 
                ASMB,A,B,L,Z
ERROR: No instruction on line
ERROR: Missing End-of-line
  13142               ORG 13142B
                      SPC 3 
*           *********************************************** 
*           *                                             * 
*           *    HP-2331A X-Y DISPLAY SUBSYSTEM DRIVER    * 
*           *                                             * 
*           *                  -- BY --                   * 
*           *                                             * 
*           *               STEVEN A. STARK               * 
*           *               HEWLETT-PACKARD               * 
*           *                PARAMUS, N.J.                * 
*           *                                             * 
*           *********************************************** 
                      SPC 3 
*    I. IDENTIFICATION - SAS 0044   REV. 4   9/15/71
*    -----------------
* 
*    II. LANGUAGE - ASSEMBLY LANGUAGE, ABSOLUTE 
*    ------------ 
* 
*    III. TYPE - BASIC CALLABLE SUBROUTINE
*    ---------
* 
*    IV. LENGTH - 204 (DECIMAL) WORDS - WITHOUT DMA 
*    ----------   216 (DECIMAL) WORDS - WITH DMA
* 
*    V. SPECIAL HARDWARE REQUIRED - 
*    ---------------------------- 
* 
*       A. HP-2331A X-Y DISPLAY SUBSYSTEM CONSISTING OF:
*          1. HP-1300A X-Y DISPLAY
*          2. HP-12555A DUAL D/A CONVERTER INTERFACE CARD 
* 
*    VI. DESCRIPTION -
*    ---------------
* 
*    IN ORDER TO UTILIZE THE X-Y DISPLAY SUBSYSTEM DRIVER, IT 
*    MUST FIRST BE CALLED TO SET UP THE PLOT BUFFER, IN WHICH 
*    CASE, IT WILL PROCESS THE BUFFER ADDRESS AND LENGTH AND
*    SAVE THEM FOR USE BY THE INTERRUPT SERVICE ROUTINE. THE
*    DRIVER THEN RETURNS TO THE CALLING PROGRAM.
* 
*    ONCE THE PLOT BUFFER HAS BEEN SET UP,THE DRIVER MAY THEN 
*    BE CALLED TO ENTER POINTS TO BE DISPLAYED. IN THIS CASE, 
*    IT WILL PROCESS THE X AND Y VALUES, DETERMINING IF THEY
*    ARE IN THE CORRECT RANGE AND MERGING THEM INTO A SINGLE
*    WORD.IT WILL THEN STORE THIS WORD IN THE PLOT BUFFER AND 
*    RETURN TO THE CALLING PROGRAM. IN THE EVENT THAT EITHER
*    THE X OR Y VALUE IS OUTSIDE THE PROPER RANGE, THE DRIVER 
*    RETURNS TO THE CALLING PROGRAM WITHOUT STORING THE POINT 
*    IN THE PLOT BUFFER.
                      HED HP-2331A X-Y DISPLAY SUBSYSTEM DRIVER - SAS 0044
* 
* 
*    VI. DESCRIPTION - CONT'D 
*    -------------- 
* 
*    WHEN THE DRIVER IS CALLED TO DISPLAY A SET OF X-Y AXIS,
*    IT WILL FIRST DETERMINE IF THE PLOT BUFFER HAS BEEN SET
*    UP. IF IT HAS, IT WILL THEN PROCESS THE X AND Y POSITION 
*    VALUES, DETERMINING A SET OF CORRESPONDING CONSTANTS AND 
*    SAVING THEM FOR USE BY THE INTERRUPT SERVICE ROUTINE. IT 
*    WILL THEN RETURN TO THE CALLING PROGRAM.IF THE DRIVER IS 
*    CALLED TO DISPLAY THE AXIS BEFORE THE PLOT BUFFER IS SET 
*    UP, IT WILL IGNORE THE REQUEST AND RETURN IMMEDIATELY TO 
*    THE CALLING PROGRAM. 
* 
*    THE DRIVER MAY ALSO BE CALLED TO CLEAR THE PLOT BUFFER,
*    IN WHICH CASE,IT WILL FIRST DETERMINE IF THE PLOT BUFFER 
*    HAS BEEN SET UP. IF IT HAS, THE DRIVER THEN CLEARS IT BY 
*    SETTING EACH LOCATION TO A 0 AND IT WILL THEN RETURN TO
*    THE CALLING PROGRAM.IF THE DRIVER IS CALLED TO CLEAR THE 
*    PLOT BUFFER BEFORE IT HAS BEEN SET UP,IT WILL IGNORE THE 
*    REQUEST AND RETURN IMMEDIATELY TO THE CALLING PROGRAM. 
* 
*    THE KEY SEGMENT OF THIS DRIVER IS THE INTERRUPT SERVICE
*    SUBROUTINE,WHICH IS EXECUTED EACH TIME THE D/A CONVERTER 
*    INTERRUPTS (ABOUT EVERY TWENTY MILLISECONDS). WHEN THIS
*    INTERRUPT OCCURS, THIS SUBROUTINE WILL FIRST DISPLAY THE 
*    X AND Y AXIS, IF THIS OPTION WAS REQUESTED. NEXT,IT WILL 
*    DISPLAY THE CONTENTS OF THE PLOT BUFFER, INITIALIZE THE
*    D/A CONVERTER AND RETURN TO THE PROGRAM IN PROGRESS. 
* 
*    VII. ENTRY POINTS - PLOTB, GRAPH, ERASE, DISPT, INTER
*    -----------------
* 
*    VIII. EXTERNAL SUBROUTINES - IFIX
*    -------------------------- 
* 
*    IX. CALLING INFORMATION -
*    -----------------------
* 
*    TO SET UP THE PLOT BUFFER, THE DRIVER IS CALLED FROM 
*    BASIC AS:
* 
*       CALL (1, A(1), N) 
* 
*          WHERE        A - AN ARRAY USED TO STORE THE
*                           POINTS TO BE DISPLAYED. 
* 
*                       N - A VARIABLE OR CONSTANT WHICH
*                           SPECIFIES THE NO. OF POINTS 
*                           TO BE DISPLAYED.
* 
* 
                      SKP 
* 
* 
*    IX. CALLING INFORMATION - CONT'D 
*    -----------------------
* 
*    TO TURN THE X-Y DISPLAY OFF, THE DRIVER IS CALLED FROM 
*    BASIC AS:
* 
*       CALL (1, A(1), 0) 
* 
*    TO STORE A POINT IN THE PLOT BUFFER, THE DRIVER IS 
*    CALLED FROM BASIC AS:
* 
*       CALL (2, X, Y)
* 
*          WHERE        X - A VARIABLE OR CONSTANT, IN
*                           THE RANGE 1 TO 255, WHICH 
*                           REPRESENTS THE X-COORDINATE 
*                           VALUE.
* 
*                       Y - A VARIABLE OR CONSTANT, IN
*                           THE RANGE 1 TO 255, WHICH 
*                           REPRESENTS THE Y-COORDINATE 
*                           VALUE.
* 
*    TO DISPLAY A SET OF X AND Y AXIS, THE DRIVER IS CALLED 
*    FROM BASIC AS: 
* 
*       CALL (3, H, V)
* 
*          WHERE        H - A VARIABLE OR CONSTANT WHICH
*                           SPECIFIES THE POSITION OF THE 
*                           X-AXIS, AS SHOWN BELOW- 
* 
*                                NO.    POSITION
*                                ---    --------
* 
*                                 0     BOTTOM
*                                 1     CENTER
*                                 2     TOP 
* 
*                       V - A VARIABLE OR CONSTANT WHICH
*                           SPECIFIES THE POSITION OF THE 
*                           Y-AXIS, AS SHOWN BELOW- 
* 
*                                NO.    POSITION
*                                ---    --------
* 
*                                 0     LEFT
*                                 1     CENTER
*                                 2     RIGHT 
* 
                      SKP 
* 
* 
*    IX. CALLING INFORMATION - CONT'D 
*    -----------------------
* 
*    TO TERMINATE DISPLAY OF THE AXIS, THE DRIVER IS CALLED 
*    FROM BASIC AS: 
* 
*       CALL (3, -1, 0) 
* 
*    TO CLEAR THE PLOT BUFFER, THE DRIVER IS CALLED FROM
*    BASIC AS:
* 
*       CALL (4)
* 
* 
*    X. PROGRAMMING NOTES - 
*    -------------------- 
* 
*       1. THIS PROGRAM SHOULD BE USED ONLY IN CONJUNCTION
*          WITH THE HP-24000A BASIC COMPILER. USE WITH ANY
*          OTHER VERSION OF THE BASIC COMPILER WILL RESULT
*          IN UNSUCCESSFUL PROGRAM EXECUTION. 
* 
*       2. TO OVERLAY THE MATRIX OPERATIONS OF THE COMPILER 
*          WITH THIS PROGRAM, THE N OPTION MUST BE SPECIFIED
*          IN THE CONTORL STATEMENT DURING ASSEMBLY.
* 
*       3. TO DISPLAY THE CONTENTS OF THE PLOT BUFFER USING 
*          DIRECT MEMORY ACCESS,THE Z OPTION MUST BE INCLUDED 
*          IN THE CONTROL STATEMENT DURING ASSEMBLY.
* 
*       4. TO CONFIGURE THIS PROGRAM FOR USE WITH DIFFERENT 
*          I/O CHANNELS, FOLLOW THE PROCEDURE BELOW-
* 
*             A. LOAD THE BASIC COMPILER, USING THE BBL.
* 
*             B. LOAD THE X-Y DISPLAY SUBSYSTEM DRIVER, 
*                USING THE BBL. 
* 
*             C. LOAD ADDRESS TO 77B. 
* 
*             D. LOAD THE SWITCH REGISTER WITH THE SELECT 
*                CODE OF THE D/A CONVERTER INTERFACE CARD.
* 
*             E. PRESS PRESET.
* 
*             F. PRESS RUN. 
* 
*          THE COMPUTER WILL NOW HALT WITH A 102077 IN THE
*          T-REGISTER AND THE DRIVER IS READY FOR USE.
* 
                      SKP 
* 
* 
*    XI. PROGRAM LISTING -
*    -------------------
* 
                      IFN 
                      ORG 11456B  PROGRAM BEGINS AT THIS ADDRESS
                      XIF          FOR OVERLAY OF MATRIX OPERATIONS 
* 
  00023         DACON EQU 23B     ASSIGN I/O ADDRESS
  00002         DMA1  EQU 2B
  00006         DMA2  EQU 6B
* 
* 
*         PLOTB ENTRY POINT 
* 
* 
  13142 000000  PLOTB NOP         ENTRY/EXIT
  13143 017401        JSB .ENTR   GET PARAMETER ADDRESSES 
  13144 063442        LDA INSTR   PUT JSB,I INSTRUCTION 
  13145 070023  IN1   STA DACON    IN TRAP CELL 
  13146 063427        LDA PARA1   GET BUFFER ADDRESS
  13147 073414        STA ADDRS    SAVE FOR POINTER 
  13150 073420        STA PNTRX 
  13151 163431        LDA PARA2,I GET BUFFER LENGTH 
  13152 167432        LDB PARA2+1,I 
  13153 015364        JSB IFIX     CONVERT IT TO AN INTEGER 
  13154 000000        NOP 
  13155 006021        SSB,RSS     IS IT < OR = 0? 
  13156 006003        SZB,RSS 
  13157 027165        JMP TRNOF    YES, TURN DISPLAY OFF
  13160 007004        CMB,INB     MAKE NEGATIVE 
  13161 077415        STB LENTH    SAVE FOR COUNTERS
  13162 077421        STB CNTRX 
  13163 103723  IN2   STC DACON,C INITIALIZE D/A CONVERTER
  13164 127142        JMP PLOTB,I RETURN TO CALLING PROGRAM 
* 
  13165 106723  TRNOF CLC DACON   TURN D/A CONVERTER OFF
  13166 127142        JMP PLOTB,I RETURN TO CALLING PROGRAM 
* 
*     BUFFER CLEAR ROUTINE
* 
  13167 000000  CLEAR NOP         ENTRY/EXIT
  13170 063414        LDA ADDRS   GET BUFFER ADDRESS
  13171 002003        SZA,RSS     IS IT > 0? (PLOTB CALLED?)
  13172 127167        JMP CLEAR,I  NO, RETURN TO MAIN PROGRAM 
  13173 073416        STA PNTR    SAVE FOR POINTER
  13174 073420        STA PNTRX   RESET PLOT BUFFR PNTR TO BEGINNING
  13175 063415        LDA LENTH   INITIALIZE POINT COUNTER
  13176 073417        STA CNTR
  13177 073421        STA CNTRX   RESET PLOT BUFFER COUNTER 
  13200 002400        CLA         SET A = 0 
  13201 173416  LOOPC STA PNTR,I  SET BUFFER LOCATION = 0 
  13202 037416        ISZ PNTR    INDEX PNTR TO NEXT LOCATION 
  13203 037417        ISZ CNTR    INDEX POINT CNTR, IS IT = 0?
  13204 027201        JMP LOOPC    NO, RETURN & CLEAR NEXT LOCATION 
  13205 127167        JMP CLEAR,I RETURN TO MAIN PROGRAM
                      SKP 
* 
* 
*         GRAPH ENTRY POINT 
* 
* 
  13206 000000  GRAPH NOP         ENTRY/EXIT
  13207 017401        JSB .ENTR   GET PARAMETER ADDRESSES 
  13210 063414        LDA ADDRS   GET BUFFER ADDRESS
  13211 002003        SZA,RSS     IS IT > 0? (PLOTB CALLED?)
  13212 127206        JMP GRAPH,I  NO, RETURN TO CALLING PROGRAM
* 
  13213 163431        LDA PARA2,I GET Y-AXIS POSITION 
  13214 167432        LDB PARA2+1,I 
  13215 015364        JSB IFIX     CONVERT IT TO AN INTEGER 
  13216 000000        NOP 
  13217 006020        SSB         IS IT < 0?
  13220 027255        JMP AXOFF    YES, TURN AXIS DISPLAY OFF 
  13221 002400        CLA         SET X-VALUE = 0 
  13222 006003        SZB,RSS     IS POSITION = 0?
  13223 027231        JMP CONT1    YES - SKIP NEXT PART 
  13224 003400        CCA 
  13225 043437        ADA D128    SET X-VALUE = 127 
  13226 057435        CPB D1      IS POSITION = 1?
  13227 002001        RSS          YES - SKIP NEXT PART 
  13230 043437        ADA D128    SET X-VALUE = 255 
  13231 001727  CONT1 ALF,ALF     MOVE X-VALUE TO UPPER 8 BITS
  13232 073422        STA XAXIS    SAVE IT
* 
  13233 163427        LDA PARA1,I GET X-AXIS POSITION 
  13234 167430        LDB PARA1+1,I 
  13235 015364        JSB IFIX     CONVERT IT TO AN INTEGER 
  13236 000000        NOP 
  13237 006020        SSB         IS IT < 0?
  13240 027255        JMP AXOFF    YES, TURN AXIS DISPLAY OFF 
  13241 002400        CLA         SET Y-VALUE = 0 
  13242 006003        SZB,RSS     IS POSITION = 0?
  13243 027251        JMP CONT2    YES - SKIP NEXT PART 
  13244 003400        CCA 
  13245 043437        ADA D128    SET Y-VALUE = 127 
  13246 057435        CPB D1      IS POSITION = 1?
  13247 002001        RSS          YES - SKIP NEXT PART 
  13250 043437        ADA D128    SET Y-VALUE = 255 
  13251 073423  CONT2 STA YAXIS    SAVE IT
* 
  13252 006400        CLB         SET RSS INSTRUCTION IN INTER
  13253 077336        STB INSTX    SUBROUTINE TO A NOP
  13254 127206        JMP GRAPH,I RETURN TO CALLING PROGRAM 
* 
  13255 063441  AXOFF LDA RSSIN   GET SKIP INSTRUCTION
  13256 073336        STA INSTX    STORE IT IN SUBROUTINE 
  13257 127206        JMP GRAPH,I RETURN TO CALLING PROGRAM 
                      SKP 
* 
* 
*         DISPT ENTRY POINT 
* 
* 
  13260 000000  DISPT NOP         ENTRY/EXIT
  13261 017401        JSB .ENTR   GET PARAMETER ADDRESSES 
  13262 063414        LDA ADDRS   GET BUFFER ADDRESS
  13263 002003        SZA,RSS     IS IT > 0? (PLOTB CALLED?)
  13264 127260        JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
  13265 163427        LDA PARA1,I GET X-VALUE 
  13266 167430        LDB PARA1+1,I 
  13267 015364        JSB IFIX     CONVERT IT TO AN INTEGER 
  13270 000000        NOP 
  13271 006020        SSB         IS IT < 0?
  13272 127260        JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
  13273 077424        STB TEMP    SAVE IT 
  13274 047434        ADB DM256   SUBTRACT 256 FROM IT
  13275 006021        SSB,RSS     IS RESULT < 0?
  13276 127260        JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
  13277 163431        LDA PARA2,I GET Y-VALUE 
  13300 167432        LDB PARA2+1,I 
  13301 015364        JSB IFIX     CONVERT IT TO AN INTEGER 
  13302 000000        NOP 
  13303 006020        SSB         IS IT < 0?
  13304 127260        JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
  13305 060001        LDA 1       LOAD IT INTO A
  13306 043434        ADA DM256   SUBTRACT 256 FROM IT
  13307 002021        SSA,RSS     IS RESULT < 0?
  13310 127260        JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
  13311 063424        LDA TEMP    GET X-VALUE AGAIN 
  13312 001727        ALF,ALF     MOVE IT TO UPPER 8 BITS 
  13313 030001        IOR 1       MERGE IT WITH Y-VALUE 
  13314 001727        ALF,ALF     ROTATE AGAIN TO SET Y IN UPPER BITS
  13315 002003        SZA,RSS     IS IT 0-0?
  13316 127260        JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
  13317 173420        STA PNTRX,I STORE IT IN PLOT BUFFER 
  13320 037420        ISZ PNTRX   INDEX POINTER TO NEXT LOCATION
  13321 037421        ISZ CNTRX   INDEX POINT CNTR, IS IT = 0?
  13322 127260        JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
  13323 063414        LDA ADDRS   RESET PLOT BUFFER POINTER TO
  13324 073420        STA PNTRX    BEGINNING OF BUFFER
  13325 063415        LDA LENTH   RESET POINT COUNTER 
  13326 073421        STA CNTRX 
  13327 127260        JMP DISPT,I RETURN TO CALLING PROGRAM 
* 
                      SKP 
* 
* 
*         ERASE ENTRY POINT 
* 
* 
  13330 000000  ERASE NOP         ENTRY/EXIT
  13331 017167        JSB CLEAR   CLEAR PLOT BUFFER 
  13332 127330        JMP ERASE,I RETURN TO CALLING PROGRAM 
* 
* 
*         INTER ENTRY POINT 
* 
* 
  13333 000000  INTER NOP         ENTRY/EXIT
  13334 073425        STA SAVEA   SAVE CONTENTS OF A & B REGS 
  13335 077426        STB SAVEB 
* 
  13336 002001  INSTX RSS         SKIP AXIS ROUTINE IF GRAPH
  13337 017357        JSB AXIS     NOT CALLED 
* 
                      IFZ         THIS IS USED FOR DMA REFRESH
                      LDA INSTY   PUT CLC INSTRUCTION IN
                      STA DMA2     DMA TRAP CELL
                      LDA CONWD   GET DMA CONTROL WORD
                      OTA DMA2     OUTPUT IT TO DMA 
                      CLC DMA1
                      LDA ADDRS   GET BUFFER ADDRESS
                      OTA DMA1     OUTPUT IT TO DMA 
                      STC DMA1
                      LDA LENTH   GET BUFFER LENGTH 
                      OTA DMA1     OUTPUT IT TO DMA 
                      STC DMA2,C  INITIALIZE DMA TRANSFER 
                      JMP EXIT    SKIP NEXT PART
                      XIF 
* 
  13340 063414        LDA ADDRS   INITIALIZE PLOT BUFFER POINTER
  13341 073416        STA PNTR
  13342 063415        LDA LENTH   INITIALIZE PLOT BUFFER COUNTER
  13343 073417        STA CNTR
* 
  13344 163416  LOOP  LDA PNTR,I  GET POINT FROM PLOT BUFFER
  13345 002003        SZA,RSS     IS IT 0-0?
  13346 027353        JMP EXIT     YES, GET OUT OF LOOP 
  13347 102623  IN3   OTA DACON   DISPLAY IT
  13350 037416        ISZ PNTR    INDEX POINTER TO NEXT POINT 
  13351 037417        ISZ CNTR    INDEX POINT CNTR, IS IT = 0?
  13352 027344        JMP LOOP     NO, RETURN & DISPLAY NEXT POINT
* 
  13353 063425  EXIT  LDA SAVEA   RESTORE CONTENTS OF A & B REGS
  13354 067426        LDB SAVEB 
  13355 103723  IN4   STC DACON,C INITIALIZE D/A CONVERTER
  13356 127333        JMP INTER,I RETURN TO MAIN PROGRAM
* 
                      SKP 
* 
*     AXIS DISPLAY ROUTINE
* 
  13357 000000  AXIS  NOP         ENTRY/EXIT
  13360 006400        CLB         SET X-VALUE = 0 
  13361 060001  LOOPX LDA 1       GET X-VALUE 
  13362 001727        ALF,ALF     MOVE IT TO UPPER 8 BITS 
  13363 033423        IOR YAXIS   MERGE IN Y-VALUE
  13364 102623  IN5   OTA DACON   DISPLAY POINT 
  13365 047436        ADB D2      INCREMENT X-VALUE BY 2
  13366 057440        CPB D256    IS IT = 256?
  13367 002001        RSS          YES, GET OUT OF LOOP 
  13370 027361        JMP LOOPX   RETURN & DISPLAY NEXT POINT 
* 
  13371 006400        CLB         SET Y-VALUE = 0 
  13372 060001  LOOPY LDA 1       GET Y-VALUE 
  13373 033422        IOR XAXIS   MERGE IN X-VALUE
  13374 102623  IN6   OTA DACON   DISPLAY POINT 
  13375 047436        ADB D2      INCREMENT Y-VALUE BY 2
  13376 057440        CPB D256    IS IT = 256?
  13377 127357        JMP AXIS,I   YES, RETURN TO MAIN PROGRAM
  13400 027372        JMP LOOPY   RETURN & DISPLAY NEXT POINT 
* 
*     PARAMETER ADDRESS ROUTINE 
* 
  13401 000000  .ENTR NOP         ENTRY/EXIT
  13402 164000        LDB 0,I     GET PARAM #1 ADDRESS
  13403 077427        STB PARA1   STORE IT
  13404 006004        INB         INDEX IT TO FORM 2ND PART 
  13405 077430        STB PARA1+1 STORE 2ND PART
* 
  13406 043433        ADA DM1     MOVE PNTR TO NEXT ADDRESS 
  13407 164000        LDB 0,I     GET PARAM #2 ADDRESS
  13410 077431        STB PARA2   STORE IT
  13411 006004        INB         INDEX IT TO FORM 2ND PART 
  13412 077432        STB PARA2+1 STORE 2ND PART
* 
  13413 127401        JMP .ENTR,I RETURN TO MAIN PROGRAM
* 
*     CONSTANTS 
* 
  13414 000000  ADDRS OCT 0 
  13415         LENTH BSS 1 
  13416         PNTR  BSS 1 
  13417         CNTR  BSS 1 
  13420         PNTRX BSS 1 
  13421         CNTRX BSS 1 
  13422         XAXIS BSS 1 
  13423         YAXIS BSS 1 
  13424         TEMP  BSS 1 
  13425         SAVEA BSS 1 
  13426         SAVEB BSS 1 
  13427         PARA1 BSS 2 
  13431         PARA2 BSS 2 
* 
                      SKP 
* 
  01364         IFIX  EQU 1364B   POINTER TO BASIC COMPILER 
* 
  13433 177777  DM1   DEC -1
  13434 177400  DM256 DEC -256
  13435 000001  D1    DEC 1 
  13436 000002  D2    DEC 2 
  13437 000200  D128  DEC 128 
  13440 000400  D256  DEC 256 
* 
  13441 002001  RSSIN RSS 
  13442 114030  INSTR JSB LINK,I
* 
  13443 106706  INSTY CLC DMA2
  13444 000023  CONWD ABS DACON 
* 
*     SPECIAL CONSTANTS 
* 
  13445 001001  SBTBL OCT 1001    SUBROUTINE PARAMETER TABLE
  13446 013142        DEF PLOTB 
  13447 001002        OCT 1002
  13450 013260        DEF DISPT 
  13451 001003        OCT 1003
  13452 013206        DEF GRAPH 
  13453 000004        OCT 0004
  13454 013330        DEF ERASE 
  13455         ENDTB EQU * 
* 
  00030               ORG 30B     LINK TO INTERRUPT ROUTINE 
  00030 013333  LINK  DEF INTER 
* 
  00110               ORG 110B    DEFINE FWAM 
  00110 013455        DEF ENDTB 
* 
  00121               ORG 121B    DEFINE SUBROUTINE PARAMETER TABLE 
  00121 013445        DEF SBTBL 
  00122 013455        DEF ENDTB 
* 
                      IFN 
                      ORG 4107B   THESE CONSTANTS ARE USED WHEN 
                      OCT 32003    OVERLAYING MATRIX OPERATIONS 
                      ASC 2,LET 
                      XIF 
* 
                      SKP 
* 
*     CONFIGURATION ROUTINE 
*        *NOTE: THIS SECTION RELEASED AFTER EXECUTION 
* 
  00076               ORG 76B 
  00076 013455        DEF CONFG   PROGRAM LINK TO ROUTINE 
  00077 124076        JMP *-1,I 
* 
  13455               ORG ENDTB 
                      IFN 
                      ORG 12000B  BEGIN CONGIGURATION ROUTINE 
                      XIF          HERE WHEN OVERLAYING MATRICES
* 
  13455 102501  CONFG LIA 01      GET SELECT CODE 
  13456 013477        AND MASK     ISOLATE IT 
  13457 073501        STA IOADD     SAVE IT 
* 
  13460 063476        LDA NUMBR   INITIALIZE INSTRUCTION COUNTER
  13461 073502        STA ICNTR 
  13462 063504        LDA START   INITIALIZE INSTRUCTION ADDRESS
  13463 073503        STA IPNTR    POINTER
* 
  13464 167503  ILOOP LDB IPNTR,I GET INSTRUCTION ADDDRESS
  13465 160001        LDA B,I      GET INSTRUCTION
  13466 013500        AND XMASK     MASK OUT OLD SELECT CODE
  13467 033501        IOR IOADD      MERGE IN NEW ONE 
  13470 170001        STA B,I         SET IN PROGRAM
* 
  13471 037503        ISZ IPNTR   INDEX ADDRESS POINTER 
  13472 037502        ISZ ICNTR   INDEX INSTRUCTION CNTR, IS IT = 0?
  13473 027464        JMP ILOOP    NO - MORE TO PROCESS 
* 
  13474 102077        HLT 77B     STOP...END OF ROUTINE 
  13475 027474        JMP *-1 
* 
  13476 177771  NUMBR DEC -7
  13477 000077  MASK  OCT 77
  13500 177700  XMASK OCT 177700
  13501         IOADD BSS 1 
  13502         ICNTR BSS 1 
  13503         IPNTR BSS 1 
* 
  00001         B     EQU 1 
* 
  13504 013505  START DEF *+1 
  13505 013145        DEF IN1 
  13506 013163        DEF IN2 
  13507 013347        DEF IN3 
  13510 013355        DEF IN4 
  13511 013364        DEF IN5 
  13512 013374        DEF IN6 
  13513 013444        DEF CONWD 
* 
                      END 
2 ERRORS
