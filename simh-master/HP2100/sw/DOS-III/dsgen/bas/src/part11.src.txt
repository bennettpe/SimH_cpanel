ASMB,R,B,L,X
      HED SYNTAX PROCESSOR SUBROUTINES
      NAM SYNP7,7 
      SPC 2 
      ENT BLDIN,RECRF,FILRF,TBSRH,LTR,STROP,RPCK
      SPC 2 
      COM PBPTR,NEG(26),.(52),MAIN,SPROG,SYMTB,ERRCT
      COM SBPTR,SBUFA,SSTAK,SYNTQ,SERRS(36),RERRS(50) 
      COM FERRS(15),WERRS(10),MAXCR,MSFLG,PFLAG,SFLAG 
      COM DFLAG,TEMP(3),CDFLG,ARYAD,GFLAG,SIGN,UFLAG
      COM PINTG(2),TABLE,LNGTH,SMBGN,SLENG,COUNT
      COM TBLPT,TSPTR 
      SPC 2 
      EXT GETCR,DIGCK,PRGIN,FSC 
      EXT SYMCK,HATCB,S14SC,SBPUD 
      EXT RPARB 
      EXT LETCK,PGINB 
      SPC 2 
MAXSN DEC -10000
B2000 OCT 2000
B3000 OCT 3000
B73   OCT 73
SBP   OCT 120000
B177  OCT 177 
OPMSK OCT 77000 
RBP   OCT 140000
D100  OCT -100
D53   OCT -53 
RPOP  OCT 10000 
FBP   EQU SBP 
**                      **
***  BUILD AN INTEGER  ***
**                      **
* 
*  MISSING OR ILLEGAL INTEGER EXITS TO (P+2) OF PRGIN IF GFLAG = -1,
*  ELSE TO ERROR.  A LEGAL INTEGER IS NON-ZERO AND LESS THAN 10000. 
* 
BLDIN NOP 
#BLDI CLA           INITIALIZE TO 
      STA PINTG      ZERO INTEGER.
      JSB GETCR 
      JMP BLDI2 
      JSB DIGCK     DIGIT?
      JMP BLDI2     NO
      STA PINTG+1   YES, SAVE IT
      LDA PINTG     MULTIPLY PREVIOUS 
      MPY .+10        INTEGER BY 10 
      CLE           ADD IN
      ADA PINTG+1     NEW DIGIT 
      SEZ,SZB,RSS   OVERFLOW? 
      JMP #BLDI+1   NO
BLDI1 ISZ GFLAG     YES, RETURN ON ERROR? 
      JSB SERRS+1,I NO
      ISZ PRGIN     YES, EXIT TO
      JMP PGINB 
BLDI2 LDB PINTG     ZERO
      CLE,SZB,RSS     INTEGER?
      JMP BLDI1     YES 
      ADB MAXSN     NO, INTEGER 
      SEZ             TOO LARGE?
      JMP BLDI1     YES 
      LDB PINTG     NO
      JMP BLDIN,I 
**                           ** 
***  SEEK RECORD REFERENCE  *** 
**                           ** 
* 
*  IF THE NEXT CHARACTER IS NOT '#', RESTORE SBPTR AS UPON ENTRY
*  AND EXIT TO (P+1) WITH THE CHARACTER IN (A).  OTHERWISE CHECK
*  CHARACTER RETURNED IN (A) FROM FILRF.  IF IT IS A COMMA OR A 
*  SEMICOLON RECORD IT.  EXIT TO (P+2) WITH THE CHARACTER IN (A)
*  IF IT IS A SEMICOLON.  IF A COMMA, PROCESS THE FOLLOWING RECORD
*  REFERENCE AND EXIT TO (P+2) WITH CHARACTER FOLLOWING IT IN (A) 
*  (IF A SEMICOLON, RECORD IT BEFORE EXITING).
* 
RECRF NOP 
#RECR JSB FILRF     SEEK FILE REFERENCE 
      JMP RECR1     NONE FOUND
      ISZ RECRF     FOUND 
      CPA .+54B     COMMA?
      RSS           YES 
      JMP RECR0     NO
      LDB B2000     RECORD
      STB SBPTR,I     COMMA 
      JSB FSC       PROCESS RECORD REFERENCE
RECR0 LDB B3000 
      CPA B73       SEMICOLON?
      STB SBPTR,I   YES 
      JMP RECRF,I 
RECR1 CCB           RESTORE 
      ADB SBPTR 
      STB SBPTR       SBPTR 
      JMP RECRF,I 
**                         ** 
***  SEEK FILE REFERENCE  *** 
**                         ** 
* 
*  IF THE NEXT CHARACTER IS NOT A '#' RETURN TO (P+1) WITH IT IN
*  (A).  OTHERWISE RECORD THE FILE REFERENCE AND RETURN TO (P+2)
*  WITH THE FOLLOWING CHARACTER IN (A). 
* 
FILRF NOP 
#FILR ISZ SBPTR 
      JSB GETCR     NEXT
      JMP FILRF,I 
      CCB             CHARACTER 
      JSB SYMCK 
      DEF HATCB        A '#' ?
      JMP FILRF,I   NO
      JSB FSC       YES, PROCESS FILE REFERENCE 
      ISZ FILRF 
      JMP FILRF,I 
**                                            **
***  SEARCH TABLE FOR MULTICHARACTER SYMBOL  ***
**                                            **
* 
*  UPON ENTRY (A) POINTS TO THE TABLE OF ACCEPTABLE 
*  SYMBOLS, (B) CONTAINS THE NUMBER OF ENTRIES IN THE 
*  TABLE (IN 2'S COMPLEMENT), MAXCR CONTAINS THE MAXIMUM
*  ACCEPTABLE NUMBER OF CHARACTERS IN THE SYMBOL, AND 
*  SBPTR,I CONTAINS THE FIRST CHARACTER OF THE PROSPECTIVE
*  SYMBOL IN BITS 7-0 AND EITHER 0 OR THE SECOND CHARACTER
*  IN BITS 15-8.  IF NO ACCEPTABLE SYMBOL IS FOUND, EXIT TO 
*  (P+1) WITH THE HALVES OF SBPTR,I SWAPPED AND THE INPUT 
*  STRING AS UPON ENTRY.  ON SUCCESS EXIT TO (P+2) WITH 
*  THE OPERATOR CODE IN BOTH (A) AND SBPTR,I; THE NEW INPUT 
*  STRING BEGINS WITH THE CHARACTER FOLLOWING THE SYMBOL. 
* 
TBSRH NOP 
#TBSR STA TABLE     SAVE TABLE ADDRESS
      STB LNGTH     SAVE -(NUMBER OF ENTRIES) 
      LDA MAIN      SAVE
      INA 
      LDA 0,I         BUFFER
      IOR SBP 
      JSB S14SC        POINTER
      LDA SBPTR     SAVE CURRENT
      STA SMBGN       SYNTAX BUFFER POINTER 
      CLA,INA       COUNT FIRST CHARACTER 
      STA SLENG       OF SYMBOL 
      LDA SBPTR,I   LEFT JUSTIFY
      ALF,ALF         FIRST 
      STA SBPTR,I       CHARACTER 
      AND B177      TWO 
      SZA,RSS         CHARACTERS? 
      JMP TSRC4     NO
TSRC1 ISZ SLENG     COUNT NEW CHARACTER 
      LDB LNGTH     SET COUNTER 
      STB COUNT       FOR TABLE ENTRIES 
      LDA TABLE     SET POINTER 
TSRC2 STA TBLPT       TO NEXT ENTRY 
      LDA TBLPT,I   TABLE ENTRY AND 
      AND .+7         CURRENT SYMBOL
      CPA SLENG         OF SAME LENGTH? 
      JMP TSRC6     YES 
TSRC3 ADA .+3       NO, UPDATE
      ARS             TABLE 
      ADA TBLPT         POINTER 
      ISZ COUNT     MORE ENTRIES? 
      JMP TSRC2     YES 
TSRC4 JSB GETCR     NO, FETCH NEXT CHARACTER
      JMP TSR10     NONE FOUND
      LDB SLENG     SYMBOL ALREADY
      CPB MAXCR       OF MAXIMUM LENGTH?
      JMP TSR10     YES 
      SLB,RSS       NO, EVEN-NUMBERED CHARACTER?
      JMP TSRC5     NO
      IOR SBPTR,I   YES, FILL LOWER HALF
      STA SBPTR,I     OF LAST WORD OF SYMBOL
      JMP TSRC1 
TSRC5 JSB SBPUD     ADVANCE SYMBOL POINTER
      ALF,ALF       STORE CHARACTER IN
      JMP *-4         UPPER HALF OF WORD
TSRC6 LDB TBLPT     SET POINTER TO
      STB TSPTR       SYMBOL IN TABLE 
      LDB SMBGN     SET (B) TO
      JMP *+4         INPUT SYMBOL
TSRC7 CPB SBPTR     ALL OF SYMBOL MATCHED?
      JMP TSRC8     YES 
      INB           NO, ADVANCE 
      ISZ TSPTR       POINTERS
      LDA TSPTR,I   COMPARE NEXT
      CPA 1,I         WORD OF SYMBOLS 
      JMP TSRC7     EQUAL 
      LDA SLENG     UNEQUAL, TRY
      JMP TSRC3       NEXT TABLE SYMBOL 
TSRC8 LDA MAIN      FREE
      INA 
      LDA 0,I         SAVED 
      IOR FBP 
      JSB S14SC        BUFFER SPACE 
      LDA TBLPT,I   LOAD, ISOLATE 
      AND OPMSK       AND STORE 
      STA SMBGN,I       OPERATOR CODE 
      ISZ TBSRH     SET EXIT TO (P+2) 
TSRC9 LDB SMBGN     CORRECT SYNTAX
      STB SBPTR       BUFFER POINTER
      JMP TBSRH,I 
TSR10 LDA MAIN      RESTORE 
      INA 
      LDA 0,I         BUFFER
      IOR RBP 
      JSB S14SC        POINTER
      JMP TSRC9 
**                    **
***  FETCH A LETTER  ***
**                    **
* 
*  EXITS TO (P+1) IF NEXT CHARACTER NOT A LETTER. 
*  OTHERWISE STORES IT IN TEMP+1, STORES FOLLOWING
*  CHARACTER IN TEMP+2, AND EXITS TO (P+2) WITH 
*  SECOND CHARACTER IN (B). 
* 
LTR   NOP 
#LTR  JSB GETCR     FIRST 
      NOP             CHARACTER 
      JSB LETCK         A LETTER? 
      JMP LTR,I     NO, EXIT WITH CHARACTER IN (A)
      ISZ LTR       YES, SET RETURN ADDRESS TO (P+2)
      STA TEMP+1    SAVE CHARACTER
      JSB GETCR     SAVE
      NOP             SECOND
      STA TEMP+2        CHARACTER 
      JMP LTR,I 
      SKP 
**                           ** 
***  STORE AN OPERAND NAME  *** 
**                           ** 
* 
*  OPERANDS ARE STORED AS 9-BIT QUANTITIES.  BITS 8-4 
*  HOLD A LETTER (1-32 OCTAL FOR A-Z).  BITS 3-0 INDICATE 
*  THE TYPE OF OPERAND:  0 FOR A STRING, 1 AND 2 FOR
*  SINGLY AND DOUBLY SUBSCRIPTED VARIABLES, 3 FOR A 
*  SUBSCRIPTED VARIABLE WITH DIMENSIONALITY NOT DEFINED 
*  LOCALLY, 4 FOR A SINGLE-LETTER SIMPLE VARIABLE, 5-16 
*  OCTAL FOR A LETTER-DIGIT SINGLE VARIABLE, AND 17 OCTAL 
*  FOR A PROGRAMMER-DEFINED FUNCTION. 
* 
STROP NOP 
#STOP ADA D100      LETTER = ASCII CODE - 100 OCTAL 
      ADB D53       DIGIT = ASCII CODE - 53 OCTAL 
      ALF           COMPLETE
      IOR 1           OPERAND 
      IOR SBPTR,I   MERGE OPERATOR
      STA SBPTR,I     AND OPERAND 
      JSB SBPUD     SET POINTER TO
      JMP STROP,I     FRESH WORD
**                                **
***  DEMAND A RIGHT PARENTHESIS  ***
**                                **
* 
*  IF (A) HOLDS ')' OR ']' RECORD A ')' AND EXIT
*  WITH THE FOLLOWING CHARACTER IN (A), ELSE ERROR. 
* 
RPCK  NOP 
#RPCK LDB .-2       ')' 
      JSB SYMCK       OR
      DEF RPARB        ']' ?
      JSB SERRS+23,I  NO
      LDA RPOP      YES, RECORD 
      STA SBPTR,I     A ')' 
      JSB SBPUD     RECORD A NULL OPERAND 
      JSB GETCR     FETCH 
      NOP             NEXT
      JMP RPCK,I        CHARACTER 
      END 
