ASMB,R,B,L,X
      HED SYNTAX PROCESSOR SUBROUTINES
      NAM SYNP5,7 
      SPC 2 
      ENT SBSCK,ARRID,STRID,RSTOP,GETST,USTCK 
      SPC 2 
      COM PBPTR,NEG(26),.(52),MAIN,SPROG,SYMTB,ERRCT
      COM SBPTR,SBUFA,SSTAK,SYNTQ,SERRS(36),RERRS(50) 
      COM FERRS(15),WERRS(10),MAXCR,MSFLG,PFLAG,SFLAG 
      COM DFLAG,TEMP(3),CDFLG,ARYAD,GFLAG,SIGN,UFLAG
      SPC 2 
      EXT SYMCK,LBRAB,FRCUR,FSC,SCMMB,PRGIN 
      EXT SBPUD,RPARB,RBOP,GETCR,FPOP,COMMB,LTR 
      EXT STROP,VAROP,CHRST,QUOTE,USTMA,TBSRH 
      EXT BCKSP 
      SPC 2 
LBOP  OCT 12000 
M73   DEC -73 
D1111 OCT -1111 
      SPC 2 
      HED SYNTAX SUBROUTINES
      SPC 2 
**                      **
***  SUBSCRIPT SYNTAX  ***
**                      **
* 
*  SBSCK ASSUMES A PRIOR ARRAY OPERAND REFERENCED THROUGH 
*  THE POINTER ARYAD.  ENTRY IS MADE WITH A CHARACTER IN
*  (A); EXIT TO (P+1) IF THIS CHARACTER IS NOT '(' OR '[',
*  OTHERWISE ANALYZE THE SUBSCRIPT WHICH MUST FOLLOW, 
*  EXITING TO (P+2).  SBSCK HANDLES BOTH SINGLE AND DOUBLE
*  SUBSCRIPTS.  IF DFLAG=0 THE SUBSCRIPT IS FROM A
*  <DIM STATEMENT> AND THE BOUNDS MUST BE POSITIVE
*  INTEGERS.  IF DFLAG=1 THE SUBSCRIPT RE-DIMENSIONS A
*  MATRIX AND A COMMA SEPARATES THE TWO BOUNDS OF A 
*  DOUBLE SUBSCRIPT AND AN END-OF-FORMULA OPERATOR
*  FOLLOWS THE LAST BOUND.  OTHERWISE A 'SUBSCRIPT' 
*  COMMA SEPARATES THE TWO PARTS OF A DOUBLE SUBSCRIPT
*  AND NO END-OF-FORMULA OPERATOR APPEARS.  IN ALL CASES, 
*  THE ARRAY OPERAND IS MARKED AS ONE- OR TWO-DIMENSIONAL.
*  IF THE SUBSCRIPT BELONGS TO A STRING VARIABLE IN A 
*  <DIM STATEMENT>, IT MUST HAVE ONE AND ONLY ONE BOUND 
* CONSISTING OF A POSITIVE INTEGER NOT LARGER THAN 72.
*  IN THIS CASE ARYAD HOLDS A DUMMY POINTER SINCE STRING
*  VARIABLES ARE NOT MARKED WITH DIMENSIONALITY.
* 
SBSCK NOP 
#SBCK LDB .-2       '(' 
      JSB SYMCK       OR
      DEF LBRAB        '[' ?
      JMP SBSCK,I   NO, RETURN TO (P+1) 
      ISZ SBSCK     YES, SET RETURN TO (P+2)
      LDA ARYAD,I   SET 
      ADA .-2         ARRAY TO
      STA ARYAD,I       SINGLE DIMENSION
      LDA LBOP      RECORD
      STA SBPTR,I     '[' 
      ISZ DFLAG     BUMP MAGIC FLAG 
      CLB,INB       DIM 
      CPB DFLAG       STATEMENT?
      JMP SBSC5     YES 
      LDB .+7       NO, SAVE FSC
      JSB FRCUR       LOCAL VARIABLES 
      LDB SBSCK     SAVE
      STB SSTAK,I     RETURN
      ISZ SSTAK         ADDRESS 
      LDB ARYAD     SAVE ARRAY
      STB SSTAK,I     REFERENCE 
      ISZ SSTAK     RESERVE SPACE FOR '(' COUNT 
      LDA .-9       TURN OFF 'STORE 
      STA MSFLG       ALLOWED' MODE 
      JSB FSC       DEMAND SUBSCRIPT
      CCB           RESTORE 
      ADB SSTAK 
      STB SSTAK       ARRAY 
      LDB 1,I 
      STB ARYAD         REFERENCE 
      LDB DFLAG     'MATRIX SUBSCRIPT'
      CPB .+2         MODE? 
      JMP SBSC4     YES 
SBSC1 CCB           NO, SEEK
      JSB SYMCK       'SUBSCRIPT' 
      DEF SCMMB        COMMA
      JMP SBSC3+1   NONE FOUND
      ISZ ARYAD,I   SET ARRAY AS DOUBLY-SUBSCRIPTED 
      CLB,INB       DIM 
      CPB DFLAG       STATEMENT?
      JMP SBSC3     YES 
      JSB FSC       NO, DEMAND SECOND SUBSCRIPT 
      RSS 
SBSC3 JSB PRGIN     DEMAND SECOND BOUND 
      CCB           RESTORE 
      ADB DFLAG       ORIGINAL
      STB DFLAG         DFLAG VALUE 
      CPB .+1       'MATRIX SUBSCRIPT' MODE?
      JSB SBPUD     YES 
      LDB .-2       DEMAND
      JSB SYMCK       ')' OR
      DEF RPARB        '['
      JSB SERRS+23,I  NOT FOUND 
      LDA RBOP      RECORD
      STA SBPTR,I     ']' 
      JSB SBPUD     UPDATE POINTER
      JSB GETCR     FETCH NEXT
      NOP             CHARACTER 
      CLB           DIM 
      CPB DFLAG       STATEMENT?
      JMP SBSCK,I   YES 
      CCB           NO, 
      ADB SSTAK       RESTORE 
      STB SSTAK         THE 
      LDB SSTAK,I         RETURN
      STB SBSCK             ADDRESS 
      JSB FPOP      RESTORE FSC 
      JMP SBSCK,I     LOCAL VARIABLES 
SBSC4 CCB 
      JSB SYMCK     COMMA?
      DEF COMMB 
      JMP SBSC3+1   NO
      JMP SBSC1+4   YES 
SBSC5 JSB PRGIN     DEMAND DECLARED BOUND 
      ISZ SFLAG     STRING VARIABLE?
      JMP SBSC1     NO
      ADB M73        YES, DOES BOUND
      SSB,RSS            EXCEED 72? 
      JSB SERRS+30,I  YES 
      JMP SBSC3+1   NO
      SKP 
**                             ** 
***  RECORD ARRAY IDENTIFIER  *** 
**                             ** 
* 
*  ARRAY IDENTIFIER LEFT IN TEMP+1, ARRAY OPERAND ADDRESS 
*  PUT IN ARYAD.  EXIT WITH FOLLOWING CHARACTER IN TEMP+2 
*  AND IN (A).
* 
ARRID NOP 
#ARID JSB LTR       FETCH IDENTIFIER
      JSB SERRS+26,I  NONE FOUND
      LDB ARRID     SET 
      STB STRID       EXIT
      JMP *+2 
**                              **
***  RECORD STRING IDENTIFIER  ***
**                              **
* 
*  STRING IDENTIFIER LEFT IN TEMP+1, SFLAG SET TO -1. 
*  EXIT WITH FOLLOWING CHARACTER IN (A).  EXIT TO ERROR 
*  IF A STRING VARIABLE IS NOT PERMITTED IN THIS CONTEXT. 
* 
STRID NOP 
#STRI CPA .+44B     '$' ? 
      JMP STRI1     YES 
      LDA SBPTR     NO, SET POINTER TO
      STA ARYAD       VARIABLE LOCATION 
      LDA TEMP+1    RECORD
      LDB .+56B       ARRAY 
      JSB STROP         VARIABLE
      LDA TEMP+2    RETRIEVE FOLLOWING
      JMP STRID,I     CHARACTER 
STRI1 LDA SFLAG     STRING VARIABLE 
      CPA SBPTR       PERMITTED?
      CCA,RSS       YES 
      JSB SERRS+27,I  NO
      STA SFLAG     SET FLAG TO 'STRING OCCURRED' 
      LDA TEMP+1    RECORD
      LDB .+53B       STRING
      JSB STROP         VARIABLE
      LDA SSTAK     SET POINTER TO DUMMY
      STA ARYAD       VARIABLE LOCATION 
      JSB GETCR     FETCH 
      NOP             NEXT
      JMP STRID,I       CHARACTER 
**                             ** 
***  RECORD A STRING OPERAND  *** 
**                             ** 
* 
*  DEMAND A STRING VARIABLE OR A STRING CONSTANT.  EXIT 
*  TO ERROR IF NEITHER IS FOUND, ELSE EXIT WITH THE NEXT
*  CHARACTER IN (A).
* 
RSTOP NOP 
#RSTO LDA SBPTR     SEEK
      STA SFLAG       STRING
      JSB VAROP         OPERAND 
      JMP RSTO1     1ST CHARACTER NOT A LETTER
      ISZ SFLAG     STRING VARIABLE?
      JSB SERRS+28,I  NO
      JMP RSTOP,I   YES 
RSTO1 JSB SBPUD     DEMAND A
      JSB GETST       STRING
      JMP RSTOP,I       CONSTANT
**                             ** 
***  FETCH A STRING CONSTANT  *** 
**                             ** 
* 
*  EXIT TO ERROR IF (A) # " UPON ENTRY.  ELSE SAVE CURRENT
*  BUFFER POINTER AND PACK THE INPUT STRING INTO THE BUFFER 
*  FOLLOWING THE INITIAL BUFFER WORD.  EXIT TO ERROR IF NO
*  CLOSING " IS FOUND.  RECORD THE OPENING " ALONG WITH A 
*  COUNT OF THE STRING CHARACTERS AND EXIT WITH THE NEXT
*  CHARACTER IN (A).  EXIT TO ERROR IF STRING EXCEEDS 
*   72 CHARACTERS.
* 
GETST NOP 
#GTST LDB SBPTR     SAVE SYNTAX 
      STB ARYAD       BUFFER POINTER
      CPA .+42B     " ? 
      CLB,RSS       YES, SET (B) = 0
      JSB SERRS+28,I  NO
      JSB CHRST     RECORD STRING CONSTANT
      JSB SERRS+29,I  NO CLOSING QUOTE
      LDA QUOTE     RECORD CHARACTER COUNT
      ADA TEMP+1      ALONG WITH
      STA ARYAD,I       OPENING QUOTE 
      ADA D1111      MORE THAN 72 
      SSA,RSS         CHARACTERS? 
      JSB SERRS+30,I  YES 
      JSB GETCR     NO, FETCH 
      NOP             NEXT
      JMP GETST,I       CHARACTER 
**                               ** 
***  CHECK FOR USING STATEMENT  *** 
**                               ** 
* 
*  SCAN THE INPUT STRING FOR A USING OPERATOR. IF NONE FOUND, EXIT
*  TO (P+1) WITH THE INPUT STRING AND SYNTAX BUFFER AS UPON ENTRY.
*  OTHERWISE, CHECK FOR A LEGAL OPERATOR FOLLOWING THE 'USING' AND
*  EXIT TO (P+2) AFTER SAVING IT IN THE SYNTAX BUFFER, WITH (A) 
*  = THE NEXT CHARACTER.
USTCK NOP 
#USCK STA SBPTR,I   (A) = NEXT CHARACTER
      LDA .+5       5 CHARACTERS
      STA MAXCR       ALLOWED 
      CCB           LOOK
      LDA USTMA     LOOK
      JSB TBSRH         'USING' 
      JMP USCK3     NOT FOUND 
      ISZ USTCK 
      JSB LTR       NEXT CHARACTER LETTER?
      JMP USCK1     NO
      CPA .+44B     YES, '$' FOLLOWS? 
      RSS           YES 
      JSB SERRS+34,I  NO
      LDB SBPTR     ENABLE STRING 
      STB SFLAG       VARIABLE
      JSB STRID     STORE STRING
      JSB SBSCK 
      NOP 
      JMP USTCK,I 
USCK1 CPA .+42B     QUOTE?
      JMP USCK2     YES 
      JSB BCKSP     SEARCH
      CCB             FOR 
      STB GFLAG         STATEMENT 
      JSB PRGIN           NUMBER
      JMP USTCK,I   FOUND ONE 
      JSB SERRS+34,I  NOT FOUND, ERROR
USCK2 JSB SBPUD     ADVANCE BUFFER POINTER
      JSB GETST     RECORD STRING CONTSTANT 
      JMP USTCK,I 
USCK3 CCB           RESTORE 
      ADB SBPTR       BUFFER
      STB SBPTR         POINTER 
      LDA .+3       RESET FOR 
      STA MAXCR       3 CHARACTERS
      JSB BCKSP     RESTORE INPUT STRING
      JMP USTCK,I 
      END 
