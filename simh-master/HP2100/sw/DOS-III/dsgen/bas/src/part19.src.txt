ASMB,R,B,L,X
      HED EXECUTION PROCESSOR (COMMOM)
      NAM XEC0,7
      SPC 2 
      ENT XEC,EXIT,EXIT3
      ENT XEC1,XECB,EXIT1,XEC1A 
      SPC 2 
      COM PBPTR,NEG(26),.(52),MAIN,SPROG,SYMTB,ERRCT
      COM SBPTR,SBUFA,SSTAK,SYNTQ,SERRS(36),RERRS(50) 
      COM FERRS(15),WERRS(10),MAXCR,MSFLG,PFLAG,SFLAG 
      COM DFLAG,TEMP(3),CDFLG,ARYAD,GFLAG,SIGN,UFLAG
      COM PINTG(2),TABLE,LNGHT,SMBGN,SLENG,COUNT
      COM TBLPT,TSPTR,SBT0
      COM EXP,MANT1,MANT2,EXPON,DPFLG,NT0,ENOUF 
      COM LNAME,CHRCT,OCTMP,SPTR,FILTB,NSPTR,INFST
      COM DCLC1,DEST,DCLC2,STEND,DFILT,FILPT,COMSN
      COM MVEND 
      COM STYPE,USESN,FILCT,.LNUM 
      COM PRGCT,STCT1,STCT2,NUMPT,STCT3,FLINK 
      COM STMP1,STMP2,VLFLG,VALTB,FCORE,COMPT,VTMP1 
      COM VTMP2,VTMP3,VTMP4,VTMP5,IFSS
      COM CU1,APTR,DCFLG,TEMP2,LT1,LT2,FCNTR,RTNST
      COM ASINP,RTRNQ,FORQ,TEMP1,FILE#
      COM ZZ(7) 
      COM PRIST,FBASE,RQ3 
      SPC 2 
      EXT ABCHK,OUTCR,OUTST,CUSP,SETPT,SETDP,STLCK
      EXT MLINB,FRMAT,LCDLP,S14SC,EDABR,WRBUF,SCHEQ 
      EXT XECBR 
      EXT ATERM,ABFLG 
      EXT OUTCH,PRISF 
      SPC 2 
A     EQU 0 
B     EQU 1 
B400  OCT 400 
B1000 OCT 1000
CHNFG EQU B1000 
MNEG  OCT 100000
BIT15 EQU MNEG
DFCHK EQU B400
?ID   EQU 4 
?LINK EQU 15B 
UNABT EQU .+16
HFLAG EQU .+4 
FTEL  EQU 15
OPMSK OCT 77000 
M2000 OCT 176000
A000  OCT 2000
UNR   OCT 160002
.58   DEC 58
      HED MAIN EXECUTION LOOP 
* 
* ************************* 
****                     ***
***  EXECUTE THE PROGRAM  *** 
****                     ***
* ************************* 
* 
* 
*  THE CORE-RESIDENT FILE BUFFERS FOLLOW THE VALUE TABLE:  ONE
*  RECORD-SIZED BLOCK OF CORE IS ALLOCATED FOR EACH FILE REQUESTED
*  IN THE <FILES STATEMENT>.  FIVE STACKS EXIST DURING EXECUTION: 
*  SINCE STACK POINTERS ARE ASSUMED TO REFERENCE THE TOPMOST
*  ENTRY IN THEIR STACK THEY ARE INITIALLY SET ONE ENTRY BELOW
*  THE PHYSICAL START OF THE STACK; THUS THE FIRST ENTRY ADVANCES 
*  A STACK POINTER TO THE FIRST WORD OF ITS STACK SPACE.  GOSUBS
*  QUEUE THEIR RETURN ADDRESSES IN THE RETURN STACK, WHICH HAS A
*  FIXED LENGTH OF NINE WORDS ALLOCATED IMMEDIATELY FOLLOWING 
*  THE FILE BUFFERS.  THE FOR-STACK (SIX-WORD ENTRIES) CONTAINS 
*  ALL INFORMATION PERTAINING TO ACTIVE FOR-NEXT LOOPS; INITIALLY 
*  EMPTY, ITS CORE SPACE IS ALLOCATED DYNAMICALLY AS NEEDED.  THE 
*  TEMPORARY STACK HOLDS INTERMEDIATE RESULTS DURING FORMULA
*  EVALUATION; IT IS INITIALIZED TO HOLD TEN TEMPORARIES AND
*  EXPANDS DYNAMICALLY AS NECESSARY.  THE OPERAND AND OPERATOR
*  STACKS FOLLOW WITH THEIR ONE-WORD ENTRIES OCCUPYING ALTERNATE
*  LOCATIONS, EXPANDING INTO FREE USER SPACE ON A DEMAND BASIS. 
*  THE TOP OF THE OPERATOR STACK, ALWAYS AT LEAST ONE WORD AHEAD
*  OF THE OPERAND STACK, IS PBPTR SO THAT ALL ACTIVE USER SPACE 
*  IS KEPT WITHIN THE SWAP REGION.  SINCE ALL STACKS EXCEPT THE 
*  RETURN STACK EXPAND DYNAMICALLY, STATIC AND DYNAMIC NESTING
*  OF FORMULAS AND FOR-NEXT LOOPS IS FREELY PERMITTED UP TO 
*  THE EXHAUSTION OF USER SPACE.
* 
**                          **
***  INITIALIZE EXECUTION  ***
**                          **
* 
*  PRINT THE PROGRAM NAME.  INITIALIZE FILE STATUS INFORMATION
*  IN THE FILE TABLE AND NOTIFY USER OF ANY REQUESTED FILES 
*  WHICH ARE READ-ONLY.  ALLOCATE A 64 WORD BUFFER FOR EACH FILE. 
*  ALLOCATE RUN-TIME STACKS, INITIALIZE POINTERS TO THE DATA BLOCK, 
*  AND MOVE TO A FRESH TELETYPE LINE. 
* 
XEC1A DEF XEC1
XEC   CLA           BLOCK 
      STA DCLC1,I     CLOCK 
      JSB ABCHK 
      LDA DCLC2,I   NO--UNBLOCK 
      STA DCLC1,I     CLOCK 
      LDA MAIN,I
      AND CHNFG 
      STA TEMP2     SAVE CHAIN FLAG 
      SZA,RSS       WAS THIS PROGRAM CHAINED TO?
      JMP XEC01     NO
      XOR MAIN,I    CLEAR 
      STA MAIN,I      CHAIN FLAG
      JMP XEC0      DON'T PRINT NAME
XEC01 LDA .+12B     ECHO
      JSB OUTCR       LINE FEED 
      CLA,INA 
     STA ABFLG
      LDA LNAME 
      STA LT1 
      INA           NULL
      LDA 0,I 
      SZA,RSS         NAME? 
      JMP XEC0      YES 
      CLB           NO
      STB LT2       OUTPUT
      LDA .-3         PROGRAM 
      JSB OUTST         NAME
XEC0  CLA           ZERO
      STA FCNTR       FILE COUNTER
      STA RTNST         AND MESSAGE FLAG
      STA ENOUF     TURN OFF OVER/UNDERFLOW 
      STA ASINP     SET NO ASSIGN PROCESSED 
      LDB FILTB     LOAD ADDRESS OF FILE TABLE
XEC2  CPB VALTB     DONE? 
      JMP XEC4      YES 
      ISZ FCNTR     NO, COUNT FILE
XEC3  LDA BIT15     NO
      ADB .+4       SET NULL
      STA B,I         RECORD ADDRESS
      ADB .-3       GET RECORD
      LDA B,I         SIZE AND
      ALR,RAR           CLEAR BITS 14 AND 15
      STA B,I         AND STICK BACK IN FILE TABLE
      ADB .+7       ALLOCATE
      JSB CUSP          BUFFER FOR
      STA PBPTR           THE FILE
      STA 1,I       SET 
      INB             'RECORD FULL' 
      STA 1,I           CONDITION 
      INB           SET 
      CLA             'NO EOF EXIT' 
      STA 1,I           CONDITION 
      ADB .+4       POINT TO MASK 
      STA 1,I       CLEAR PROTECT MASK
      INB           POINT TO NEXT ENTRY 
      JMP XEC2
XEC4  LDA FCNTR     ARE THERE 
      SZA,RSS         ANY FILES?
      JMP XEC9      NO
      LDA DFCHK     YES, SET
      IOR MAIN,I        FILES BIT IN
      STA MAIN,I          TTY TABLE 
XEC9  LDA TEMP2 
      SZA           WAS THIS PROGRAM CHAINED TO?
      JMP XEC8      YES 
      LDA .+15B     NO, OUTPUT A
      JSB OUTCR       CARRIAGE RETURN 
      LDA .+12B         AND 
      JSB OUTCR           TWO 
      LDA .+12B             LINE FEEDS
      JSB OUTCR 
XEC8  LDB PBPTR 
      ADB .-1       SET POINTERS TO 
      STB RTRNQ       TOP AND BOTTOM
      STB RTNST         OF RETURN STACK 
      ADB .+4       SET 
      STB FORQ        EXECUTION 
      JSB SETPT         POINTERS
      LDB SPROG     SET POINTERS TO 
      JSB SETDP       FIRST <DATA STATEMENT>
*                       * 
**  EXECUTE STATEMENT  ** 
*                       * 
* 
*  SAVE SEQUENCE NUMBER FOR POSSIBLE USE BY ERROR ROUTINE.
*  ADVANCE PROGRAM COUNTER TO NEXT STATEMENT AND BRANCH TO
*  CODE FOR EXECUTION OF CURRENT STATEMENT. 
* 
XEC1  LDB PRGCT     SAVE CURRENT
XECB  EQU XEC1+1
      LDA 1,I         SEQUENCE
      STA .LNUM         NUMBER
      LDA B 
      INA           CHECK 
      LDA A,I         STATEMENT 
      JSB STLCK         LENGTH
      LDA 1         COMPUTE 
      INA             ADDRESS 
      ADB 0,I           OF NEXT 
      STB PRGCT           STATEMENT 
      INA           SET INTRA-
      STA TEMP1       STATEMENT POINTER 
      LIB 1 
      SSB,RSS 
      JMP XECC
      LDA MAIN,I
      AND B30M
      CPA PBFLG 
      RSS 
      JMP ATERM 
XECC  LDA TEMP1,I 
      AND OPMSK       BRANCH
      ALF,ALF           ADDRESS 
      RAR                 FOR CURRENT 
      ADA XECBR             STATEMENT TYPE
      STA FILE#     SET 'NO FILE' FLAG
      JMP 0,I       BRANCH TO APPROPRIATE ROUTINE 
B30M  OCT 30000 
PBFLG OCT 10000 
* 
***                    ** 
**  COMPLETE EXECUTION  **
***                    ** 
* 
EXIT  EQU * 
      LDA MAIN,I    INHIBIT 
      IOR UNABT 
      STA MAIN,I      ABORTS
      LDA FCNTR     SET COUNTER TO
      CMA             1'S COMPLEMENT OF 
      STA FCNTR         NUMBER OF FILES 
      INA           SAVE 2'S COMPLEMENT FOR 
      STA FRMAT       LCD'S FILE COUNT
      LDA FCORE     LOAD FIRST BUFFER ADDRESS 
      LDB FILTB     LOAD POINTER TO 
      ADB .+5         FIRST DISC ADDRESS (LOW WORD) 
EXIT0 ISZ FCNTR     MORE FILES? 
      JMP EXIT2     YES 
EXIT3 CLB           OUTPUT
      STB DCLC1,I 
      JSB ABCHK 
      LDA DCLC2,I 
      STA DCLC1,I 
      LDA EXIT1 
      STA LT1         COMPLETION
      LDA MAIN,I
      AND HFLAG 
      SZA               MESSAGE UNLESS
      CCA,RSS             $HELLO PROGRAM
      LDA .-4 
      LDB MAIN      DOES USER 
      INB             HAVE LP?
      CPB PRIST 
      RSS 
      JMP EXIT4     NO. 
      LDA .+12B 
      JSB OUTCH 
      LDA EXT1A     YES.
      STA LT1       RELEASE IT AND
      LDA .-10        PRINT MESSAGE 
      CLB 
      STB PRIST 
      STB PRISF 
EXIT4 CLB 
      STB LT2 
      JSB OUTST 
      LDA MAIN      TELL 2114 
      INA 
      LDA 0,I         THAT USER IS
      IOR UNR 
      JSB S14SC 
      LDA .+4       CLEAR PBFLG AND CBFLG 
      LDB MAIN
      JSB EDABR      BITS.
      JMP SCHEQ 
EXT1A DEF * 
      OCT 11423 
      OCT 6412
      ASC 3,LP FRE
EXT1  EQU * 
      OCT 42412 
      OCT 6412
      ASC 2,DONE
      OCT 6412
EXIT2 STB FBASE     WRITE 
      STA RQ3         OUT 
      JSB WRBUF         RECORD
      LDB FBASE     GET RECORD
      ADB .+FTEL-4   SIZE OF NEXT FILE
      LDA 1,I 
      ALR,RAR       CLEAR BITS 14 AND 15
      CMA,INA 
      ADB .+7        GET END OF FILE BUFFER 
      ADA 1,I       COMPUTE FILE BUFFER STARTING ADDRESS
      ADB .-3        POINT B TO FIRST DISC ADDRESS
      JMP EXIT0 
EXIT1 DEF EXT1
      END 
