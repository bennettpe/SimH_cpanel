ASMB,R,B,L,X
      HED FORMATTER 
      NAM FRMT1,7 
      SPC 2 
      ENT OUTCL,OUTBL,DSRCH,MCHAR,EVEXP 
      ENT DTL1,ROUND,MTG1 
      SPC 2 
      COM PBPTR,NEG(26),.(52),MAIN,SPROG,SYMTB,ERRCT
      COM SBPTR,SBUFA,SSTAK,SYNTQ,SERRS(36),RERRS(50) 
      COM FERRS(15),WERRS(10),MAXCR,MSFLG,PFLAG,SFLAG 
      COM DFLAG,TEMP(3),CDFLG,ARYAD,GFLAG,SIGN,UFLAG
      COM PINTG(2),TABLE,LNGTH,SMBGN,SLENG,COUNT
      COM TBLPT,TSPTR,SBT0
      COM EXP,MANT1,MANT2,EXPON,DPFLG,NT0,ENOUF 
      COM LNAME,CHRCT,OCTMP,SPTR,FILTB,NSPTR,INFST
      COM DCLC1,DEST,DCLC2,STEND,DFILT,FILPT,COMSN
      COM MVEND 
      COM STYPE,USESN,FILCT,.LNUM 
      COM PRGCT,STCT1,STCT2,NUMPT,STCT3,FLINK 
      COM STMP1,STMP2,VLFLG,VALTB,FCORE,COMPT,VTMP1 
      COM VTMP2,VTMP3,VTMP4,VTMP5,IFSS
      COM CU1,APTR,DCFLG,TEMP2,LT1,LT2,FCNTR,RTNST
      COM ASINP,RTRNQ,FORQ,TEMP1,FILE#
      COM INTMP,TMPST,TPRME,TNULL,PS1,FSCHA,TEMP5 
      COM PRIST,FBASE,RQ3,EOL,GTMP,FORST,EFN0,FVT 
      COM EFN1,EFN2,EFN3,MCNT,INITF,IFCNT,OPDST 
      COM FFLG,TEMP4,EORFL,NCH,TEMP6,STRLN,ATIM,LT5 
      COM ASTYP,ASBFP,ORDNO,ATMP(2),RETCD 
      COM DCCNT,NXTDT,VL0,RCRD#,PMASK,ITEMP 
      COM OPTRQ,EST3,EST2,EST1,TT1,TT2,BINO1
      COM BINO2,TT3,TT4,CP0,CP1,PS0,MPT,NQT,RT0 
      COM RT1,TRFCH,TRS0,A1,A2,C1,EOPF,NUMBF(6),FD0 
      COM OT1,OT2,OT3,LBTMP,REPCT,RNDX1,RNDX2 
      COM X2TMP(2),CTMP,DTMP(2),BTMP(2),XTEMP(2),YTEMP(2) 
      COM UTEMP(2),LT0,LT8,LT3,LT6,LT7,LT4,DIGCT
      COM NMPTR,NMTMP,FFLAG,DGCNT 
      COM IFSTR,EC,CC,DP,CONTR,CC1,CC2,PC1,PC2
      COM SFLG,FST,EFLAG,NUM1,NUM2,SBD,SAD,SNFLG
      COM NAD,NBD,FSP,EST,NUMW1,NUMW2,EXPW
      COM IHB,HBP,NHBW,NBLK,TOTDG,DCTR
      COM EDSTA,LCH,ELCNT 
      SPC 2 
      EXT DIGCK,OUTCR,BLANK,FSCH,GETDG
      EXT MBY10,DBY10,FORMX,OPCHK,PSTR,VCHK 
      EXT XEC1
      SPC 2 
B377  OCT 377 
S     OCT 123 
E     OCT 105 
M73   DEC -73 
..73  DEC 73
.X    OCT 130 
.A    OCT 101 
D     OCT 104 
M46   DEC -46 
.58   DEC 58
M96   DEC -96 
M32   DEC -32 
.140  OCT 140 
OPDMK OCT 100777
A     EQU 0 
      HED  FORMATTER UTILITY ROUTINES 
**                               ** 
***  MAKE A NUMBER LESS THAN 1  *** 
**                               ** 
* 
*  MULTIPLY AN UNPACKED FLOATING POINT
*  NUMBER IN MANT1, MANT2 AND EXP BY 10 UNTIL 
*  IT IS GREATER THAN 1.  THEN DIVIDE BY 10 
* 
MTG1  NOP 
#MTG1 JSB MBY10 
      LDA EXP         MULTIPLY
      CMA,SSA,INA,SZA   NUMBER BY 10
      JMP *+3             UNTIL IT IS 
      ISZ EXPON             GREATER 
      JMP MTG1+1              THAN 1
      JSB DBY10     DIVIDE BY 10
      JMP MTG1,I
* 
*  DIVIDE AN UNPACKED FLOATING POINT NUMBER 
*  IN MANT1, MANT2 AND EXP BY 10 UNTIL IT IS
*  LESS THAN 1
* 
DTL1  NOP 
#DTL1 LDA EXPON 
DTL10 LDB EXP       DIVIDE
      CMB,INB         NUMBER
      SSB,RSS           BY 10 
      JMP DTL1,I          UNTIL 
      STA EXPON             IT IS 
      JSB DBY10               LESS
      CCA                       THAN
      ADA EXPON                   1 
      JMP DTL10 
      SKP 
**                        **
***  ROUND ASCII NUMBER  ***
**                        **
* 
*  NUMBER STORED ONE ASCII DIGIT PER WORD IN
*  HOLDING BUFFER.  ROUTINE GETS NEXT DIGIT 
*  AND ROUNDS IF IT IS >= 5.
*  IF THERE IS A CARRY TO AN EXTRA DIGIT AND NO 
*  ROOM EXISTS, EXIT IS TO (P+1).  OTHERWISE RETURN 
*  TO (P+2).
* 
ROUND NOP 
#RUND JSB GETDG     GET NEXT DIGIT
      ADA .-5       IS IT >= 5 ?
      SSA 
      JMP ROUND,I 
      CCA           DECREMENT HOLD
      ADA HBP        BUFFER POINTER 
ROND1 LDB 0,I       LOAD NEXT DIGIT 
      INB           INCREMENT IT
      CPB .58       WAS IT A 9 ?
      JMP *+3       YES 
      STB 0,I       NO, SAVE IT 
      JMP ROUND,I     AND RETURN
      LDB .+60B     OVERLAY 
      STB 0,I         A 0 
      CPA IHB       LEADING DIGIT ? 
      JMP *+3       YES 
      ADA .-1       NO, DECREMENT POINTER 
      JMP ROND1 
      LDB .+61B     OVERLAY A 
      STB 0,I         ONE 
      LDB .+60B     LOAD
      STB HBP,I       EXTRA ZERO
      LDB EFLAG     FLOATING POINT
      SZB             SPECIFICATION ? 
      JMP ROND2     NO
      ISZ EXPON     INCREMENT EXPONENT
      NOP 
      JMP ROUND,I 
ROND2 CCB          IS NBLK
      ADB NBLK        LESS
      SSB               THAN 1 ?
      ISZ ROUND     NO, RETURN TO (P+2) 
      STB NBLK      YES, KEEP DECREMENTED VALUE 
      JMP ROUND,I 
      SKP 
**                   ** 
***  OUTPUT BLANKS  *** 
**                   ** 
* 
*  OUTPUTS THE NUMBER OF BLANKS SPECIFIED 
*  BY THE NEGATIVE OF REPCT.  THE STACK POINTER 
*  IS INCREMENTED AND REPCT HAS THE VALUE ZERO
*  UPON EXIT. 
* 
OUTBL NOP 
#OTBL ISZ FSP       INCREMENT STACK POINTER 
      LDA BLANK     OUTPUT A
      JSB OUTCR       BLANK 
      ISZ REPCT     REPCT USED UP ? 
      JMP *-3 
      JMP OUTBL,I 
* 
*  OUTPUT X-OFF, CARRIAGE RETURN, LINEFEED
* 
OUTCL NOP 
#OTCL EQU * 
      LDA .+23B 
      JSB OUTCR 
      LDA .+15B 
      JSB OUTCR 
      LDA .+12B 
      JSB OUTCR 
       CLA
      STA CHRCT 
      JMP OUTCL,I 
      SKP 
**                                       ** 
***  SEARCH FOR A DELIMITING CHARACTER  *** 
**                                       ** 
* 
*  BEGINS SEARCH AT CHARACTER DP.  WHEN A COMMA 
*  OR SLASH IS FOUND, DP IS SET TO POINT TO THAT
*  CHARACTER.  CHARACTERS ARE COUNTED AND IF THE
*  END OF THE STRING IS ENCOUNTERED BEFORE A
*  DELIMITER IS FOUND, A FLAG IS SET
* 
DSRCH NOP 
#DSCH LDA DP        SET STRING POINTER TO 
      STA FST         FIRST CHARACTER 
      CLO           DON'T IGNORE BLANKS 
SER1  JSB MCHAR     GET STRING CHARACTER
      CPA .+54B     IS IT A COMMA ? 
      JMP DSRCH,I   YES 
      CPA .+57B     NO, IS IT A SLASH ? 
      JMP DSRCH,I   YES 
      CPA .+51B     NO, IS IT A RIGHT PARENTHESIS ? 
      JMP DSRCH,I   YES 
      ISZ DP        NO,INCREMENT DELIMITER POINTER
      ISZ CC        AND CHARACTER COUNTER 
      LDA DP
      LDB CC
      CPB NCH       ALL CHARACTERS USED ? 
      JMP DSRCH,I   YES 
      JMP SER1      NO
**                          **
***  MASK OUT A CHARACTER  ***
**                          **
* 
*  GET NEXT CHARACTER FROM FORMAT STRING
*  ADDRESS OF CHARACTER IS IN (A).  CHARACTER IS
*  RETURNED IN (A)
* 
MCHAR NOP 
#MCHR CLE,ERA       SHIFT ADDRESS RIGHT 
      LDB 0,I       LOAD WORD FROM STRING 
      SEZ,RSS       HIGH CHARACTER ?
      BLF,BLF       YES, SWITCH POSITIONS 
      LDA 1         NO
      AND B377      MASK OUT LOW CHARACTER
      SOS           SHOULD BLANKS BE IGNORED ?
      JMP MCHAR,I 
      CPA BLANK     YES, IS CHARACTER A BLANK ? 
      JMP MCHR1     YES 
      ADA M96       NO
      SSA,RSS       LOWER CASE? 
      ADA M32       YES 
      ADA .140      NO
      JMP MCHAR,I 
MCHR1 EQU * 
      ISZ FST       INCREMENT STRING POINTER
      LDA FST       NEXT CHARACTER
      CPA DP          A DELIMITER ? 
      JMP MCHAR,I   YES, RETURN 
      JMP MCHAR+1   IGNORE THE BLANK
**                         ** 
***  EVALUATE EXPRESSION  *** 
**                         ** 
* 
*  EXTRACT THE NEXT VARIABLE TO BE OUTPUT BY THE FORMATTER. IF
*  NONE FOUND, EXIT TO (P+1).  IF A STRING IS FOUND, EXIT TO
*  (P+2) AFTER PREPARING THE STRING FOR OUTPUT.  IF A NUMERIC 
*  QUANTITY IS FOUND, EXIT TO (P+3) WITH THE NUMBER IF (A) AND (B). 
*  EDSTA IS SET TO 0 IF THIS IS THE LAST VARIABLE IN THE STATEMENT. 
* 
EVEXP NOP 
#EVEP EQU * 
      LDA FFLG      MAT 
      SSA             PRINT?
      JMP EVEX5     YES 
EVEX0 LDB TEMP1 
      CPB PRGCT     END OF STATEMENT? 
      JMP EVEXP,I   YES 
      CCA           TURN OFF
      STA EOL         FUNCTION FLAG 
      JSB FORMX     EVALUATE FORMULA
      LDB OPDST,I   IS IT A 
      SSB             STRING VARIABLE ? 
      JMP EVEX3     YES 
      JSB OPCHK     NO, UNSTACK VALUE ADDRESS 
      ISZ EOL       A FUNCTION ?
      JMP EVEX0 
      LDA TEMP1     LAST VARIABLE?
      CPA PRGCT 
      CLA           YES 
      STA EDSTA     NO
      DLD 1,I       NO, LOAD NUMBER 
      ISZ EVEXP     RETURN TO (P+3) 
      JMP EVEX4 
EVEX3 LDA .-2       PREPARE 
      JSB PSTR        PRINT 
      STA TEMP4         STRING
      STB TPRME 
      LDB TEMP1     END OF
      CPB PRGCT       STATEMENT?
      CLB           YES 
      STB EDSTA     NO
      LDB TPRME 
EVEX4 EQU * 
      ISZ EVEXP     RETURN TO 
      JMP EVEXP,I     (P+2) 
EVEX5 ISZ ELCNT     FINISHED CURRENT MATRIX?
      JMP EVEX7     NO
EVEX6 LDB TEMP1     YES 
      CPB PRGCT     END OF STATEMENT? 
      JMP EVEXP,I   YES 
      LDA TEMP1,I   GET NEXT OPERAND
      AND OPDMK 
      SZA,RSS       NULL
      JMP EVEXP,I   YES 
      SSA           NO, FUNCTION? 
      JMP EVEX8     YES 
      ALS           NO, LOAD
      ADA SYMTB       BASE ADDRESS
      ADA .-1           OF ARRAY
      LDB A,I 
      ADB .-2       SAVE POINTER TO 
      STB SBPTR       DYNAMIC DIMENSIONS
      JSB VCHK      VALIDATE ARRAY ELEMENTS 
      LDA SBPTR,I   SET POINTER 
      ISZ SBPTR       TO FIRST ELEMENT
      MPY SBPTR,I       OF ARRAY
      ISZ SBPTR           WHILE COMPUTING 
      CMA,INA               NUMBER OF 
      STA ELCNT               ELEMENTS
      ISZ TEMP1     BUMP TO NEXT OPERAND
EVEX7 CCA           LAST
      CPA ELCNT       ELEMENT?
      RSS           YES 
      JMP EVEX9     NO
      LDA TEMP1     END OF
      CPA PRGCT       STATEMENT?
      CLA           YES 
EVEX9 EQU * 
      STA EDSTA     NO
      DLD SBPTR,I   GET NUMBER
      ISZ SBPTR     BUMP TO 
      ISZ SBPTR       NEXT ELEMENT
      ISZ EVEXP 
      JMP EVEX4     EXIT
EVEX8 CCA           TURN OFF
      STA EOL         FUNCTION FLAG 
      JSB FORMX     EVALUATE FUNCTION 
      JSB OPCHK     REMOVE ARGUMENT FROM TEMP STACK 
      JMP EVEX6     GET NEXT OPERAND
      END 
