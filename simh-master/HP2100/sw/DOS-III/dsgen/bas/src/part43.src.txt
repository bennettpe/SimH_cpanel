ASMB,R,B,L,X
      NAM CHAIN,5 
      SPC 2 
      COM PBPTR,NEG(26),.(52),MAIN,SPROG,SYMTB,ERRCT
      COM SBPTR,SBUFA,SSTAK,SYNTQ,SERRS(36),RERRS(50) 
      COM FERRS(15),WERRS(10),MAXCR,MSFLG,PFLAG,SFLAG 
      COM DFLAG,TEMP(3),CDFLG,ARYAD,GFLAG,SIGN,UFLAG
      COM PINTG(2),TABLE,LNGTH,SMBGN,SLENG,COUNT
      COM TBLPT,TSPTR,SBT0
      COM EXP,MANT1,MANT2,EXPON,DPFLG,NT0,ENOUF 
      COM LNAME,CHRCT,OCTMP,SPTR,FILTB,NSPTR,INFST
      COM DCLC1,DEST,DCLC2,STEND,DFILT,FILPT,COMSN
      COM MVEND 
      COM STYPE,USESN,FILCT,.LNUM 
      COM PRGCT,STCT1,STCT2,NUMPT,STCT3,FLINK 
      COM STMP1,STMP2,VLFLG,VALTB,FCORE,COMPT,VTMP1 
      COM VTMP2,VTMP3,VTMP4,VTMP5,IFSS
      COM CU1,APTR,DCFLG,TEMP2,LT1,LT2,FCNTR,RTNST
      COM ASINP,RTRNQ,FORQ,TEMP1,FILE#
      COM INTMP,TMPST,TPRME,TNULL,PS1,DMY3,TEMP5
      COM PRIST,FBASE,RQ3,EOL,GTMP,FORST,EFN0,FVT 
      COM EFN1,EFN2,EFN3,MCNT,INITF,IFCNT,OPDST 
      COM FFLG,TEMP4,EORFL,NCH,TEMP6,STRLN,ATIM,LT5 
      COM ASTYP,ASBFP,ORDNO,ATMP(2),RETCD 
      COM DCCNT,NXTDT,VL0,RCRD#,PMASK,ITEMP 
      COM OPTRQ,EST3,EST2,EST1,TT1,TT2,DMY1 
      COM DMY2,TT3,TT4,CP0,CP1,PS0,MPT,NQT,RT0
      COM RT1,TRFCH,TRS0,A1,A2,C1,EOPF,NUMBF(6),FD0 
      COM OT1,OT2,OT3,LBTMP,REPCT,RNDX1,RNDX2 
      COM X2TMP(2),CTMP,DTMP(2),BTMP(2),XTEMP(2),YTEMP(2) 
      COM UTEMP(2),LT0,LT8,LT3,LT6,LT7,LT4,DIGCT
      COM NMPTR,NMTMP,FFLAG,DGCNT 
      COM IFSTR,EC,CC,DP,CONTR,CC1,CC2,PC1,PC2
      COM SFLG,FST,EFLAG,NUM1,NUM2,SBD,SAD,SNFLG
      COM NAD,NBD,FSP,EST,NUMW1,NUMW2,EXPW
      COM IHB,HBP,NHBW,NBLK,TOTDG,DCTR
      COM EDSTA,LCH,ELCNT 
      COM STPTR,RSPTR,TEMP3 
      COM MT1,MT0,MT3,MT2,MEXIT,DMY4,MOP,BS2,BS3
      COM MMT0,MMT1,MMT2,MMT6(2),MMT7(2),MMT3,MMT4,MMT5 
      COM MMT8(2),SCALR(2),ID0,ID1,MAXE(2),TOL(2),PIVEL 
      COM VT0,RD0 
      COM SOURC,TAP0,TAP1 
      COM STIME(5)
      COM LTEMP(16),LTYP1,LTYP2,LCHCR,MOVES,MOVED 
      COM ERSEC(77),DRFLG,DIREC(256),DTEMP,DCNT 
      COM DTRAK,DSECT 
      SPC 2 
      EXT OUTCH,FORMX,PSTR,FCUCA,TRSTR,FETCH,SBFIX
      EXT LWAUS,LW97,PBUFF,FNDPS,BLANK,DLOOK
      EXT MLINB,EXEC,SEMIC,WRBUF
      SPC 2 
B     EQU 1 
FTEL  EQU 15
?ID   EQU 4 
?LINK EQU 15B 
DFCHK OCT 400 
DLTEM DEF LTEMP 
DVSRS DEC 10000 
SCHLQ NOP 
LIBSC EQU LTEMP+8 
LIBSP EQU LTEMP+9 
LIBPB EQU LTEMP+13
.103  OCT 103 
B377  OCT 377 
UNABT EQU .+16
CHNFG OCT 1000
CHAIN LDA B,I 
      STA SCHLQ 
      LDA DRFLG 
      SZA,RSS 
      JMP CHAN7 
      HED CHAIN 
* THE CHAIN ROUTINE IS USED BY THE BASIC COMPILER TO PROCESS A CHAIN
* STATEMENT DURING PHASE III. THE PURPOSE OF THIS ROUTINE IS TO 
* CHECK FOR THE REQUESTED PROGRAM ON THE USER'S PRIVATE LIBRARY OR
* ON THE PUBLIC LIBRARY (IF THE NAME IS PRECEDED BY A DOLLAR SIGN)
* OR ON THE GROUP LIBRARY (IF THE NAME IS PRECEDED BY A SNOWFLAKE). 
* IF THE PROGRAM IS FOUND IT IS LOADED AND COMPILATION IS BEGUN.
      LDA FCNTR     SET COUNTER TO
      CMA             1'S COMPLEMENT OF 
      STA FCNTR         NUMBER OF FILES 
      INA           PUT 2'S COMPLEMENT INTO 
      STA CHNP        SAFE KEEPING FOR LCD
      LDA FCORE     LOAD FIRST BUFFER ADDRESS 
      LDB FILTB     LOAD POINTER TO 
      ADB .+5         FIRST DISC ADDRESS (LOW WORD) 
CHN01 ISZ FCNTR     MORE FILES? 
      RSS           YES 
      JMP CHAN0     NO--FINISHED DUMPING BUFFERS
      STB FBASE     WRITE 
      STA RQ3         OUT 
      JSB WRBUF 
      LDB FBASE 
      ADB .+FTEL-4
      LDA 1,I 
      ALR,RAR 
      CMA,INA 
      ADB .+7 
      ADA 1,I 
      ADB .-3 
      JMP CHN01 
CHAN0 LDB MLINB 
      ADB .+?ID-?LINK 
      STB CHNI      => USER ID
      ADB .-?ID     CAN THERE BE
      LDA B,I         FILES WHOSE 
      AND DFCHK         LCD'S NEED
      SZA,RSS             UPDATING? 
      JMP CHN17     NO
      LDA CHNP      GET NEGATIVE FILE COUNT 
      ADB .+?ID       AND ID POINTER
***   JSB LCDP,I
***   RSS 
CHN17 LDA .-3 
      STA CHNP
      LDA TWOSP 
      LDB DLTEM 
CHN00 EQU * 
      STA B,I         NAME TO 
      INB 
      ISZ CHNP          BLANKS
      JMP CHN00 
      CLA,INA       ALLOW STRING
      STA EOL         CONSTANT
      JSB FORMX     EVALUATE STRING 
      LDA .-2       PREPARE 
      JSB PSTR        STRING
      STA TEMP4     SAVE SOURCE POINTER 
      CPB .-1       NULL STRING?
      JMP CHAN4     YES 
      STB TPRME     SAVE LENGTH 
      LDB TEMP4     EXTRACT 
      CLE,ERB 
      LDA B,I         FIRST 
      SEZ,RSS 
      ALF,ALF           CHARACTER 
      AND B377
      CPA .+44B     '$'?
      JMP CHAN2     YES 
      CPA .+52B     '*'?
      RSS           YES 
      JMP CHAN3     NO
CHAN2 ISZ TEMP4     BUMP SOURCE POINTER 
      ISZ TPRME     BUMP LENGTH 
CHAN3 EQU * 
      LDA TPRME 
      ADA .+7 
      SSA           LENGTH > 6? 
      CLA           YES, SET TO 6 
      ADA .-7       NO
      STA TPRME 
      STA TNULL 
      LDA DLTEM 
      ALS 
      STA TEMP5     DESTINATION POINTER 
      LDA FCUCA     UPPER CASE ONLY 
      JSB TRSTR     TRANSFER STRING 
CHAN4 EQU * 
      CCB           SET FLAG FOR NO LINE NUMBER 
      LDA TEMP1 
      CPA PRGCT     END OF STATEMENT? 
      JMP CHAN5     YES 
      JSB FETCH     NO, GET LINE NUMBER 
      JSB SBFIX     ROUND TO INTEGER
      LDB DVSRS     ILLEGAL LINE NUMBER 
      INB           READJUST
CHAN5 EQU * 
      STB PKCNT     SAVE THE LINE NUMBER
      LDA SPROG 
      STA INWRD 
      JSB DLOOK 
      RSS 
      JMP CHAN7     PROGRAM NOT FOUND 
CHN14 ISZ SCHLQ     PAST SECOND ERROR 
      STA CHNPD    SAVE T/S OF PROGRAM
      LDA 1,I 
      SSA,RSS 
      JMP CHAN7     ENTRY IS A FILE 
      ISZ SCHLQ     PAST THIRD ERROR
      STA CHNLN 
      ADB .+2       => THIRD WORD OF NAME 
      LDA 1,I       SAVE SEMI-
      STA LIBSC       COMPILED FLAG 
      ADB .-1 
      LDA 1,I       SAVE START-OF-
      ADA PBUFF 
      STA LIBSP       PROGRAM POINTER 
      STA MEMSA 
      LDA CHNLN 
      CMA,INA      COMPUTE FIRST
      ADA LIBSP       UNUSED WORD 
      STA LIBPB 
      CMA,INA      COMPUTE NEGATIVE 
      LDB LIBSC 
      SSB,RSS       SEMI-COMPILED?
      JMP CHN18     NO
      ADA LWAUS 
      SSA,RSS 
      JMP CHN11     OK
      JMP CHAN7 
CHN18 EQU * 
      ADA LW97        TOTAL LENGTH
      SSA,RSS       COMPARE WITH MAX ALLOWED
      JMP CHN11 
      JMP CHAN7     PROGRAM TOO LARGE 
CHN11 EQU * 
      ISZ SCHLQ     PAST FOURTH ERROR 
      LDA CHNPD 
      AND =B377 
      STA CHNC
      LDA CHNPD 
      ALF,ALF 
      AND =B377 
      STA CHNPD 
      LDA CHNLN 
      CMA,INA 
      STA CHNLN 
      SPC 1 
      JSB EXEC    READ IN PROGRAM 
      DEF *+7 
      DEF .-1 
      DEF .103
MEMSA NOP 
      DEF CHNLN 
      DEF CHNPD 
      DEF CHNC
      SPC 1 
CHN13 ISZ CHNI
      LDB LTEMP 
      STB CHNI,I   STORE FIRST WORD OF NAME 
      ISZ CHNI     BUMP POINTER TO NEXT WORD
      DLD LTEMP+1 
      DST CHNI,I   STORE IN TABLE 
      JSB SEMIC 
      LDB MAIN
      LDA 1,I       DON'T ALLOW 
      IOR UNABT       ABORTS
      IOR CHNFG 
      STA 1,I           DURING COMPILE
      LDB SPROG     NULL
      CPB PBPTR       PROGRAM?
      JMP CHAN9     YES 
      LDA SYMTB 
      SZA,RSS       UNCOMPILED? 
      LDA PBPTR     YES, USE PBPTR
      LDB PKCNT     LINE NUMBER 
      SSB             SPECIFIED?
      JMP CHAN6     NO
      JSB FNDPS     FIND REFERENCED STATEMNET 
      JMP CHAN9     BAD LINE NUMBER 
      NOP 
      RSS 
CHAN6 EQU * 
      LDB SPROG     DEFAULT LINE NUMBER 
      STB PRGCT     SAVE FIRST STATEMENT
      ISZ SCHLQ 
CHAN8 EQU * 
      LDA .+40B 
      STA BLANK 
      JMP SCHLQ,I 
CHAN9 LDA CHNFG 
      CMA 
      LDB MAIN
      AND B,I       CLEAR CHAIN FLAG
      STA B,I 
      JMP CHAN8 
CHAN7 JMP SCHLQ,I 
CHNDP DEF CHNDI 
TWOSP ASC 1,
PKCNT BSS 1 
INWRD BSS 1 
INCHR BSS 1 
CHNP  EQU LTEMP+4 
CHNPD EQU LTEMP+5 
CHNI  EQU LTEMP+6 
CHNC  EQU LTEMP+7 
CHNLN EQU LTEMP+10
CHND  EQU LTEMP+12
CHNDI EQU LTEMP+14
*     LTEMP+15 IS USED HERE ALSO
      END CHAIN 
