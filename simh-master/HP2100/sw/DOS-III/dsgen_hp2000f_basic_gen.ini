
; Assemble HP 2000F BASIC for DOS-III from papertape sources and store in mag tape
; called by dsgen.ini script

goto start_bas_module_load

:att_file
echo
echo ---> Attach %1
att ptr -q dsgen/bas/%1
return

:type
; simulate typing on tty. 
; %1 (parameter one) is the text to type 
send '%1'
send "\r"
go until "\n"
return

:typecmd
; simulate typing on tty command for DOS. 
; %1 (parameter one) is the text to type 
send "%1"
send "\r"
go until "@"
go until "\n"
return

:asm1
echo
call att_file src/%1
send ":PROG,ASMB,5,6,7,56,99\r"
; ASMB,p1,p2,p3,p4,p5
;      p1=asm source=Logical Unit 5=TapeReader
;      p2=list=Logical Unit 6=printer (defined as EQT 0 -> not assigned)
;      p3=assembled binary file=LU 7 -> no punch beacuse assigned EQT 9 = unassigned
;      p4=56=num of lines in pages listing 
;      p5=99 -> save assembled binary file in disk binary work area
go until "$END ASMB" 
go until "@"
return

:start_bas_module_load

call typecmd ":JOB"
call typecmd ":LIST,U,1"
call typecmd ":CLEAR"

call asm1 22608-80000_BFILE.src.txt
call asm1 22608-80000_CFILE.src.txt

; store rel files assembled in disc 
call typecmd ":STORE,R,BCFIL"

; relocate file from disc to create a executable program
send ":PROG,LOADR,2\r"
go until "ENTER FILE NAME(S) OR /E" 
send "/E\r"
go until "@"

; Saves all the relocated files that are in binary area: BFILE and CFILE
call typecmd ":STORE,P"

; generates a .rel papertape with the relocatables
echo
echo ---> Attach papertape to be punched
att ptp -q dsgen/bas/BCFILE.rel
call typecmd ":DUMP,4,BCFIL"
det -q ptp

; generates a magtape with the relocatables
echo
echo ---> Mount mag tape to save BCFIL file
att msc -q dsgen/bas/hp2000f_basic_dosIII.tape
call typecmd ":DUMP,8,BCFIL"
; after dumping file, add a End-of-file mark
call typecmd ":EF,8"
; the save relocatable file no longer needed, delete it
call typecmd ":PURGE,BCFIL"

; create file that holds basic filesystem and init it with BFILE
call typecmd ":ST,B,$FILS,50"
send ":PR,BFILE\r"
go until "@"

call typecmd ":EJOB"

call typecmd ":JOB"
call typecmd ":LIST,U,1"
call typecmd ":CLEAR"

; assemble BASIC
call asm1 22608-80001_C_BASIC.src.txt
call asm1 part02.src.txt
call asm1 part03.src.txt
call asm1 part04.src.txt
call asm1 part05.src.txt
call asm1 part06.src.txt
call asm1 part07.src.txt
call asm1 part08.src.txt
call asm1 part09.src.txt
call asm1 part10.src.txt
call asm1 part11.src.txt
call asm1 part12.src.txt
call asm1 part13.src.txt
call asm1 part14.src.txt
call asm1 part15.src.txt
call asm1 part16.src.txt
call asm1 part17.src.txt
call asm1 part18.src.txt
call asm1 part19.src.txt
call asm1 part20.src.txt
call asm1 part21.src.txt
call asm1 part22.src.txt
call asm1 part23.src.txt
call asm1 part24.src.txt
call asm1 part25.src.txt
call asm1 part26.src.txt
call asm1 part27.src.txt
call asm1 part28.src.txt
call asm1 part29.src.txt
call asm1 part30.src.txt
call asm1 part31.src.txt
call asm1 part32.src.txt
call asm1 part33.src.txt
call asm1 part34.src.txt
call asm1 part35.src.txt
call asm1 part36.src.txt
call asm1 part37.src.txt
call asm1 part38.src.txt
call asm1 part39.src.txt
call asm1 part40.src.txt
call asm1 part41.src.txt
call asm1 part42.src.txt
call asm1 part43.src.txt
call asm1 part44.src.txt
call asm1 part45.src.txt
call asm1 part46.src.txt

; save assembled basic as HP2KF file do not use its name (BASIC)
; to do not create name conflict

call typecmd ":STORE,R,HP2KF"

call typecmd ":LIST,U,1"
call typecmd ":EJOB"

call typecmd ":JOB"
call typecmd ":CLEAR"

; Now load basic special relocatable loader (defaul DOS one
; gives an base page overflow error because program is too big)
; LOADR,5 <- Local Unit 5=papertape reader
call att_file 22608-60001_C_LOADR.rel
send ":PROG,LOADR,5\r"
go until "ENTER FILE NAME(S) OR /E" 
send "/E\r" 
go until "@"
send ":GO\r"
go until "@"
send ":UP,2\r"
go until "@"
send ":GO,1\r"
go until "@"

; now run it to relocat basic. LU=2 to get file from disk
send ":PROG,LOADR,2,1,0,1\r"
go until "ENTER FILE NAME(S) OR /E" 
send "HP2KF,/E\r"
go until "@"

; saves the relocated basic. name can be given or not
; send ":STORE,P,BASIC\r"
call typecmd ":STORE,P"

; generates a .rel papertape with the basic relocatable
echo
echo ---> Attach papertape to be punched
att ptp -q dsgen/bas/HP2000F_BASIC.rel
call typecmd ":DUMP,4,HP2KF"
det -q ptp
; add to mounted magtape, and dismount 
echo
echo ---> Save to mounted mag tape
call typecmd ":DUMP,8,HP2KF"
; after dumping file, add a End-of-file mark
call typecmd ":EF,8"
det -q msc

call typecmd ":PURGE,HP2KF"

; now erase unneeded LOADR file from disk. (if not we will
; still using BASIC LOADR instead of system one)
call typecmd ":PURGE,LOADR"
call typecmd ":EJOB"

; Now load program
call typecmd ":JOB"
call typecmd ":LIST,U,1"

send ":RUN,BASIC\r"

go until "READY"
go until "\n" 

set tty noautolf
  
call type '10 PRINT "HP2000F BASIC FOR DOS-III HOLA"'
call type '20 END'
call type 'LIST'
go until     "END"
go until     "\n"
call type 'RUN'
go until     "DONE"
go until     "\n"
call type 'NAME-HOLA'
call type 'SAVE'
call type 'CAT'
go until     "NAME"
go until     "HOLA"
go until     "\n"
call type 'SCRATCH'
call type 'LIST'
call type 'GET-HOLA'
call type 'RUN'
go until     "DONE"
go until     "\n"
call type 'KILL-HOLA'
call type 'CAT'
go until     "NAME"
go until "\n"
go until "\n"

set tty autolf

call type 'BYE'
go until "@"

call typecmd ":EJOB"

