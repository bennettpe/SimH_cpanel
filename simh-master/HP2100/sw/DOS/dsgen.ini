set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS
; set mp  debug=IOBUS
; set drc debug=IOBUS
; set SCP-PROCESS debug=EVENT

echo
echo ***
echo *** DOS Disk Operating System Revision C (1969) 
echo *** Generation
echo ***
echo

; generates a new DOS system
;
; Sw installed:
;   EDIT       - Editor
;   ALGOL      - Algol Compiler
;   FTN        - Fortran II
;

set cpu 2116

set cpu 32k
SET CPU EAU
SET MP ena

set tty sc=11
set clk sc=12
set ptr sc=13
set tbg sc=17
set ptp sc=20

set tty autolf
set console del=177
send after=200k
send delay=30k

; 12606B Fixed Head Disk Controller (DRC, DRD) with 2770A Disk (180KW)

set dpd dis

SET drc 720K		
set drc sc=21
set drc ena
att drc -q -n tmp.DOS.disc

; load DSGEN (DOS 2770 SYSTEM GENERATOR - 20597-60001 REV C)

att ptr -q dsgen/sio16k11.abs
boot ptr
att ptr -q dsgen/20597-01_dsgen.abs
boot ptr

; initialization

d s 0
reset

go 100 until "SYS DISC CHNL?" 
send "21\r"
go until "SECTORS/TRACK?" 
send "90\r"

call type2 "SYS DISC SIZE?"       "32"
call type2 "PROTECTED TRACKS?"    "8"
call type2 "FIRST SYSTEM TRACK?"  "0"
call type2 "FIRST SYSTEM SECTOR?" "3"
call type2 "AUX DISC CHNL?"       "0"
call type2 "TIME BASE GEN CHNL?"  "17"
call type2 "LWA MEM?"             "77677"
call type2 "PRGM INPT?"           "PT"
call type2 "LIBR INPT?"           "PT"
call type2 "PRAM INPT?"           "TY"
go

; program input phase: Now load rel files for DOS

goto start_module_load

:load_module
echo ---> Load Module %1
att ptr -q dsgen/%1
d s 0
expect "ERR" goto load_err
go
noexpect
return

:load_err
go until "\n"
echo
echo ERROR! *** Paper tape load error
echo .      *** Press Enter to quit
set env -p "      " a
echo
bye
return

:start_module_load

; DOS CORE-RESIDENT SYSTEM (DISCM) and DOS DISC-RESIDENT EXEC MODULES ($EX01 thru $EX16)

call load_module 20597-02_DISCM.rel 	; DOS 2770 CORE RESIDENT SYSTEM               BINARY   20597-60002 REV C
call load_module 20597-03_EX.rel	; DOS DISC RESIDENT EXEC MODULE               BINARY   20597-60003 REV C

; I/O Drivers - load required device drivers if they are included in the system

; mandatory: Choose one System Console Driver driver
call load_module 20985-01_DVR00.rel	; DOS TTY DRIVER (DVR00)                      BINARY   20985-60001 REV 1419
; call load_module 24157-01_DVR05.rel	; DOS DVR05 TTY DRIVER                        BINARY   24157-60001 REV 1419
; call load_module 24331-19_DVR26.rel	; DOS DVR 26 - 2762A OR 2615A TERMINALS       BINARY   24331-60001 REV 1419

; paper tape drivers
call load_module 20987-01_DVR01.rel	; DOS PAPER TAPE READER (DVR01)               BINARY   20987-60001 REV C
call load_module 20989-01_DVR02.rel	; DOS PUNCH TAPE READER DRIVER (DVR02)        BINARY   20989-60001 REV B

; choose line printer
; call load_module 24168-01_DVR12.rel	; DOS 2767 LINE PRINTR (DVR12)                BINARY   24168-60001 REV 1419
; call load_module 24307-11_DVR12.rel	; DOS LINE PRINTER HP2607,2610,2613,2614,1618 BINARY   24307-16011 REV 1446

; mandatory: disc device driver
call load_module 20995-01_DVR30.rel	; DOS DISC/DRUM DRIVER (DVR30)                BINARY   20995-60001 REV B
; call load_module 24307-01_DVR31.rel	; HP 7905 DISC DRIVER (DVR31)                 BINARY   24307-60001 REV 1610

; other I/O drivers
; call load_module 72006-01_DVR10.rel	; DOS COMPLETE HP7210A PLOTTER DRVR (DVR10)   BINARY   72006-60001 REV A
; call load_module 24272-01_DVR11.rel	; DOS HP2892A CARD READER DRIVER (DVR11)      BINARY   24272-60001 REV C
; call load_module 24182-01_DVR11.rel	; DOS HP2891A CARD READER DRIVER (DVR11)      BINARY   24182-60001 REV B 
; call load_module 13024-1A_DVR23.rel	; DOS HP7970A MT DRIVER (DVR23)               BINARY   13024-60001 REV A
; call load_module 20997-01_DVR22.rel	; DOS HP3030 MT DRIVER (DVR22)                BINARY   20997-60001 REV C
; call load_module 22208-01_DVR22.rel	; HP3030G MAG TAPE DVR                        BINARY   22208-60001 REV A
; call load_module 22320-01_DVR22.rel	; DOS HP 2020/3030 MAG TAPE CONTROL PROGRAM   BINARY   22320-60001
; call load_module 22319-01_DVR22.rel	; DOS HP2020 DVR MAG TAPE DVR                 BINARY   22319-60001 REV A
; call load_module 20823-01_DVR15.rel	; DOS MARK SENSE DRVR (DVR15) 12602B KIT      BINARY   20823-60001 REV C

; mandatory: job processor
call load_module 20597-04_JOBPR.rel	; DOS JOB PROCESSOR / FILE MANAGER            BINARY   20597-60004 REV C

; SW developement

; relocating Linker/Loader
call load_module 20925-01_LOADR.rel	; DOS RELOCATING LOADER                       BINARY   20925-60001 REV C

; assembler
; call load_module 20598-01_ASMB.rel	; DOS ASSEMBLER MAIN CONTROL                  BINARY   20598-60001 REV C
; call load_module 20598-02_AS_SG_D.rel	; DOS ASSEMBLER SEGMENT D                     BINARY   20598-60002 REV C
; call load_module 20598-03_AS_SG_1.rel	; DOS ASSEMBLER SEGMENT 1                     BINARY   20598-60003 REV C
; call load_module 20598-04_AS_SG_2.rel	; DOS ASSEMBLER SEGMENT 2                     BINARY   20598-60004 REV C
; call load_module 20598-05_AS_SG_3.rel	; DOS ASSEMBLER SEGMENT 3                     BINARY   20598-60005 REV C
; call load_module 20598-06_AS_SG_4.rel	; DOS ASSEMBLER SEGMENT 4                     BINARY   20598-60006 REV C
; call load_module 20598-07_AS_SG_5.rel	; DOS ASSEMBLER SEGMENT 5                     BINARY   20598-60007 REV C

; Fortran II compiler
call load_module 20599-01_FTN.rel	; DOS FORTRAN MAIN CONTROL                    BINARY   20599-60001 REV C
call load_module 20599-02_FTN.rel	; DOS FORTRAN PASS 1                          BINARY   20599-60002 REV C
call load_module 20599-03_FTN.rel	; DOS FORTRAN PASS 2                          BINARY   20599-60003 REV C
call load_module 20599-04_FTN.rel	; DOS FORTRAN PASS 3                          BINARY   20599-60004 REV C
call load_module 20599-05_FTN.rel	; DOS FORTRAN PASS 4                          BINARY   20599-60005 REV C

; RTE/DOS Algol
call load_module 24129-01_ALGOL.rel	; RTE/DOS ALGOL MAIN CONTROL                  BINARY   24129-60001 REV C
call load_module 24129-02_ALGOL.rel	; RTE/DOS ALGOL SEGMENT 1                     BINARY   24129-60002 REV C

; RTE/DOS Fortran IV
; Should comment out ASMB and FTN to avoid an ERR17 (exceeds number of available tracks) on loading tape
; FTN4 Leaves undefined externales: EEEX, JTS00, OPTBL, PO100, PU100, PO200
; FTN4_10K loads fine
; call load_module 24177-01_FTN4_10K.rel	; RTE/DOS FORTRAN IV COMPILER 1/2 (10K COMPILER AREA)  24177-60001 REV 1442 
; call load_module 24177-02_FTN4_10K.rel	; RTE/DOS FORTRAN IV COMPILER 2/2 (10K COMPILER AREA)  24177-60002 REV 1442 
; call load_module 24170-01_FTN4.rel	; RTE/DOS FORTRAN IV COMPILER 1 OF 3          BINARY   24170-60001 REV C
; call load_module 24170-02_FTN4.rel	; RTE/DOS FORTRAN IV COMPILER 2 OF 3          BINARY   24170-60002 REV C
; call load_module 24170-03_FTN4.rel	; RTE/DOS FORTRAN IV COMPILER 3 OF 3          BINARY   24170-60003 REV C
; call load_module 24152-1C_F4LIB.rel	; RTE/DOS FORTRAN IV LIBRARY                  BINARY   24152-60001 REV C
; call load_module 24153-01_FF4.rel	; RTE/DOS FORTRAN FORMATTER                   BINARY   24153-60001 REV C
; call load_module 24993-01_RLIB.rel	; RTE/DOS LIB (RLIB) 1 Of 2                   BINARY   24993-16001 REV 1610
; call load_module 24998-01_RLIB.rel	; RTE/DOS LIB (RLIB) 2 Of 2                   BINARY   24998-16001 REV 1610
; call load_module 22252-01_DUP.rel	; RTE/DOS DUP. PROG.                          BINARY   22252-60001 REV A
 
; choose one: F2E (if EAU present), or F2F (if Floating Point Arithmetic)             BINARY   24151-60001 REV D    
call load_module 24151-01_F2E.rel	; DOS RELOCATABLE LIBRARY-F2E (EAU)           BINARY   24151-60001 REV D    	

; Cross Reference Table Generator
call load_module 24223-01_XREF.rel	; DOS CROSS REFERENCE ROUTINE                 BINARY   24223-60001 REV B

; Load only if WCS is present (Writable Control Storage - Microcode programming)
; call load_module 24278-01_DVR33.rel	; 12908 WCS DOS DRIVER (DVR33)                BINARY   24278-60001 REV A

; Load .rel files terminated. 

; terminate program input phase: check undefined externals

; Parameter input phase


d s 01

call type2 "ENTER PROG PARAMETERS" "/E"
call type2 "# SYSTEM LINKS?"       "200"
call type2 "# USER LINKS?"         "400"

go until   "EQUIPMENT TABLE ENTRY" 
go until   "\n"
go until   "\n"
call type  "11,DVR00,R"
send "\r"
go until "\n"
call type  "13,DVR01"
send "\r"
go until "\n"
call type  "20,DVR02"
send "\r"
go until "\n"
call type  "21,DVR30,D,R"
send "\r"
go until "\n"
call type  "/E"

go until   "DEVICE REFERENCE TABLE" 
call type2 "1 = EQT #?"  "1"
call type2 "2 = EQT #?"  "4"
call type2 "3 = EQT #?"  "4"
call type2 "4 = EQT #?"  "3"
call type2 "5 = EQT #?"  "2"
call type2 "6 = EQT #?"  "1"
call type2 "7 = EQT #?"  "0"
call type2 "8 = EQT #?"  "/E"

go until   "INTERRUPT TABLE" 
call type  "11,1"
call type  "13,1"
call type  "20,3"
call type  "22,4"
call type  "/E"

go until "FWA USER?" 
send "10000\r"
go

det -q drc

; system generated in tmp.DOS.disc 

echo
echo ***
echo *** System generated 
echo *** Boot the system
echo ***
echo

reset
d 0-77777 0
d s 0

; DOS prompt is "@" + BEL -> to remove the bell char issue this scp command
set console pchar=23400
send after=200k
send delay=30k

; the prompt after some commands is "@" + BEL + CR/LF, but for some others
; commands is "@" + BEL without CR/LF. Be aware!

att -q drc tmp.DOS.disc

boot drc
d s 1

go until "CO=CONTINUATION" 
send "CO\r"

go until "@"

call typecmd ":DATE,10JULY1969"
call typecmd ":JOB"
call typecmd ":LIST,X,1"

; display local unit and equipement tables: 
; in this system, LU2 is paper tape reader
call typecmd ":LU"
call typecmd ":EQ"
call typecmd ":EJOB"

; Successfull test. Copy as production disk

det -q all
copy -q tmp.DOS.disc  DOS.disc
del  -q tmp.DOS.disc

echo
echo
echo ***
echo *** Generation finished 
echo ***

if "%1"=="QUIT" quit
echo
echo *** Press Enter to quit
set env -p "   " a
echo
 
echo
quit
goto end

:type
; simulate typing on tty. 
; %1 (parameter one) is the text to type 
send "%1"
send "\r"
go until "\n"
return

:type2
; simulate typing on tty. 
; %1 (parameter one) is the question to be replied with %2 (param two)
go until "%1"
send "%2"
send "\r"
go until "\n"
return

:typecmd
; simulate typing on tty command for DOS. 
; %1 (parameter one) is the text to type 
send "%1"
send "\r"
go until "@"
go until "\n"
return

:end


