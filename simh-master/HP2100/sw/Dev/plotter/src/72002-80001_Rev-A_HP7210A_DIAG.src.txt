ASMB,A,B,L,T
* 
* 
***********  HP 7210 PLOTTER DIAGNOSTIC AND TEST  *********** 
* 
* 
*            BINARY TAPE     PART NO. 72002-60001 
*            SOURCE TAPE 1   PART NO. 72002-80001 
*            LISTING         PART NO. 72002-90001 
* 
* THIS IS AN ABSOLUTE ASSEMBLY LANGUAGE PROGRAM REQUIRING ONLY AN 
* INTERFACED PLOTTER AND ASSOCIATED COMPUTER FOR ITS OPERATION
* 
* INSTRUCTIONS FOR USING THIS PROGRAM ARE CONTAINED IN SECTION IV 
* OF THE OPERATING AND SERVICE MANUAL FOR THE HP17210A INTERFACE KIT
* PART NO. 17210-90000
* 
* 
      ORG 77B 
* 
* THE FOLLOWING INSTRUCTION TRANSFERS CONTROL TO THE RESTART ROUTINE
* 
      JMP STST0-2        RESTART ENTRY POINT
* 
* THIS SECTION SETS THE SELECT CODES AND THE INTERRUPT ADDRESS
* 
      LIA 1B             GET SELECT CODE FROM SWITCHES
      AND IMSK0          ISOLATE SELECT CODE
      STA 1B             B=SELECT CODE
      LDA IMSK1          A=SFS OP CODE
      IOR 1B             INSERT SELECT CODE 
      STA IWD21          SET SFS INSTRUCTION
      STA IWD81 
      STA IWD83 
      LDA IMSK2          A=LIA OP CODE
      IOR 1B             INSERT SELECT CODE 
      STA IWD22 
      STA IWD82          SET LIA INSTRUCTION
      XOR IMSK3          CHANGE TO LIB OP CODE
      STA NEXTP          SET LIB INSTRUCTION
      LDA IMSK4          A=OTA OP CODE
      IOR 1B             INSERT SELECT CODE 
      STA IWD84          SET OTA INSTRUCTIONS 
      STA IWD93 
      LDA IMSK5          A=STC UU,C OP CODE 
      IOR 1B             INSERT SELECT CODE 
      STA IWD85          SET STC UU,C INSTRUCTIONS
      STA IWD94 
      LDA IMSK6          A=CLC OP CODE
      IOR 1B             INSERT SELECT CODE 
      STA IWD11          SET CLC INSTRUCTIONS 
      STA IWD92 
      LDA IMSK9          A=JSB INTRY
      STA 1B,I           SET INTERRUPT LINKAGE
      JMP STST0 
IMSK0 OCT 000077
IMSK1 SFS *-* 
IMSK2 LIA *-* 
IMSK3 OCT 004000         CHANGES A/B REGISTER BIT 
IMSK4 OTA *-* 
IMSK5 STC *-*,C 
IMSK6 CLC *-* 
IMSK9 JSB INTRY          BRANCH TO INTERRUPT ROUTINE
* 
* THIS SECTION CLEARS THE INTERRUPT ROUTINE ON RESTART
* 
      LDA RSSOC          A=RSS OP CODE
      STA HOLDF          CLEAR IPLOT BUSY TRAP
* 
* THIS SECTION TESTS SWITCH REGISTER AND SELECTS TEST ROUTINE 
* 
STST0 HLT 0B             HALT FOR SWITCH SETTING
      LIA 1B             READ SWITCH REGISTER 
      SLA                TEST BIT  0
      JMP PROG1          START VERIFICATION SEQUENCE
      RAR,SLA            TEST BIT 1 
      JMP PROG1          START PROGRAM 1
      RAR,SLA            TEST BIT 2 
      JMP PROG2          START PROGRAM 2
      RAR,SLA            TEST BIT 3 
      JMP PROG3          START PROGRAM 3
      RAR,SLA            TEST BIT 4 
      JMP PROG4          START PROGRAM 4
      RAR,SLA            TEST BIT 5 
      JMP PROG5          START PROGRAM 5
      RAR,SLA            TEST BIT 6 
      JMP PROG6          START PROGRAM 6
      RAR,SLA            TEST BIT 7 
      JMP TEST1          START SERVICE TEST 1 
      RAR,SLA            TEST BIT 8 
      JMP TEST2          START SERVICE TEST 2 
      RAR,SLA            TEST BIT 9 
      JMP TEST3          START SERVICE TEST 3 
      RAR,SLA            TEST BIT 10
      JMP TEST4          START SERVICE TEST 4 
      RAR,SLA            TEST BIT 11
      JMP TEST5          START SERVICE TEST 5 
      RAR,SLA            TEST BIT 12
      JMP TEST6          START SERVICE TEST 6 
      RAR,SLA            TEST BIT 13
      JMP TEST7          START SERVICE TEST 7 
      JMP STST0          RESET SWITCH REGISTER
* 
* THIS  SSECTION CONTAINS THE TEST ROUTINES 
* 
PROG1 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
IWD11 CLC *-*            CLEAR PLOTTER CONTROL
      STF 0B             ENABLE INTERRUPT SYSTEM
      LDA BUF10          A=ADDRESS OF BUFFER
      CLB,INB            B=POINT COUNT
      JSB IPLOT          PROCESS BUFFER 
      LDA BUF11          A=ADDRESS OF BUFFER
      LDB BUF11+1        B=POINT COUNT
      JSB IPLOT          PROCESS BUFFER 
      CLA                A=NOP OP CODE
      CPA HOLDF          A=HOLDF IF IPLOT BUSY
      JMP *-1            TRY AGAIN IF IPLOT IS BUSY 
      CLF 0B             DISABLE INTERRUPT SYSTEM 
      CLA,CLE 
      CLB 
      JSB BPLOT          TO 0,0 PEN UP
      CCE 
      LDA I9999 
      LDB I9999 
      JSB BPLOT          TO 9999,9999 PEN DOWN
      CLA 
      CLB 
      JSB BPLOT          TO 0,0 PEN DOWN
      CLE 
      LDB I0500 
      JSB BPLOT          TO 0,500 PEN UP
      CCE 
      LDA I9999 
      JSB BPLOT          TO 9999,500 PEN DOWN 
      CLE 
      LDB I5000 
      JSB BPLOT          TO 9999,5000 PEN UP
      CLA,CCE 
      JSB BPLOT          TO 0,5000 PEN DOWN 
      CLE 
      LDB I9500 
      JSB BPLOT          TO 0,9500 PEN UP 
      CCE 
      LDA I9999 
      JSB BPLOT          TO 9999,9500 PEN DOWN
      CLE 
      LDA I0667 
      LDB I9999 
      JSB BPLOT          TO 667,9999 PEN UP 
      CLB,CCE 
      JSB BPLOT          TO 667,0 PEN DOWN
      CLE 
      LDA I5000 
      JSB BPLOT          TO 5000,0 PEN UP 
      CCE 
      LDB I9999 
      JSB BPLOT          TO 5000,9999 PEN DOWN
      CLE 
      LDA I9334 
      JSB BPLOT          TO 9334,9999  PEN UP 
      CLB,CCE 
      JSB BPLOT          TO 9334,0 PEN DOWN 
      CLA,CLE 
      LDB I9999 
      JSB BPLOT          TO 0,9999 PEN UP 
      LDA PENDN          PEN DOWN COMMAND 
      JSB WDOUT          LOWER PEN
      INB                B=10000
      ADB M1000          Y=Y-1000 
      CLA,CLE 
      JSB BPLOT          TO 0,Y PEN UP
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      SZB                CONTINUE IF B=0
      JMP *-6            REPEAT IF B#0
      LDA M0015          A=POINT COUNT
      STA CNTR1          INITIALIZE COUNTER 
      LDA TORG1          A=TABLE ORIGINE
      STA PNTR1          INITIALIZE POINTER 
      ISZ PNTR1          INCREMENT POINTER
      LDA PNTR1,I        A=X VALUE
      JSB BPLOT          TO X,0 PEN UP
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          LOWER PEN
      ISZ CNTR1          INCREMENT COUNTR 
      JMP *-6            PROCESS NEXT POINT 
      CLA 
      LDB I9999 
      JSB BPLOT          TO 0,9999 PEN UP 
      CCE 
      ADA I1111          X=X+1111 
      ADB M1111          Y=Y-1111 
      JSB BPLOT          TO X,Y PEN DOWN
      SZB                TEST FOR COMPLETION
      JMP *-4            PROCESS NEXT POINT 
      CLE 
      LDA I1000 
      LDB I5000 
      JSB BPLOT          TO 1000,5000 PEN UP
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            RESET IF BIT15 = 1 
      SLA,RSS            CONTINUE IF BIT0 =1
      JMP STST0          RESET SWITCH REGISTER
      HLT 77B            HALT FOR FRESH PAPER 
PROG2 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CLE 
      LDA I5000 
      LDB I5000 
      JSB BPLOT          TO 5000,5000 PEN UP
      JSB RSTAT          A=PLOTTER STATUS 
      SLA                CONTINUE IF BIT0 = 0 
      HLT 1B             HALT IF PEN STATUS=1 
      LDA PENUP          A=PEN UP COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      JSB RSTAT          A=PLOTTER STATUS 
      SLA                CONTINUE IF BIT0 = 0 
      HLT 2B             HALT IF PEN STATUS=1 
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      JSB RSTAT          A=PLOTTER STATUS 
      SLA,RSS            CONTINUE IF BIT0 = 1 
      HLT 3B             HALT IF PEN STATUS=0 
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      JSB RSTAT          A=PEN STATUS 
      SLA,RSS            CONTINUE IF BIT0 = 1 
      HLT 4B             HALT IF PEN STATUS=0 
      LDA PENUP          A=PEN UP COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      JSB RSTAT          A=PLOTTER STATUS 
      SLA                CONTINUE IF BIT0 = 0 
      HLT 5B             HALT IF PEN STATUS=1 
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            RESET IF BIT15 = 1 
      SLA,RSS            CONTINUE IF BIT0 =1
      JMP STST0          RESET SWITCH REGISTER
PROG3 LDA TORG2          A=PASS TABLE ADDRESS 
      JSB PTOUT          SEND PASS TABLE
PROG4 LDA TORG3          A=PASS TABLE ADDRESS 
      JSB PTOUT          SEND PASS TABLE
PROG5 LDA TORG4          A=PASS TABLE ADDRESS 
      JSB PTOUT          SEND PASS TABLE
PROG6 LDA TORG5          A=PASS TABLE ADDRESS 
      JSB PTOUT          SEND PASS TABLE
      JMP STST0          RESET SWITCH REGISTER
PTOUT NOP                RETURN ADDRESS 
      STA PNTR1          INITIALIZE TABLE POINTER 
      CLA,CLE 
      STA WORD4          SET MODE TO ABSOLUTE 
      LDA I5000 
      LDB I5000 
      JSB BPLOT          TO 5000,5000 PEN UP
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      LDB M0040          INITIALISE PASS COUNTER
      LDA PNTR1,I        A=PASS 
      JSB WDOUT          SEND PASS
      ISZ PNTR1          INCREMENT TABLE POINTER
      INB,SZB            INCREMENT COUNTER & TEST 
      JMP *-4            SEND NEXT PASS IF B#0
      LIA 1B             READ SWITCHES IF B=0 
      SSA,RSS            RESET IF BIT15 = 1 
      SLA,RSS            CONTINUE IF BIT0 = 1 
      RSS                SKIP TO RESET
      JMP PTOUT,I        RETURN AND CONTINUE
      LDA PENUP          A=PEN UP COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      JMP STST0          RESET SWITCH REGISTER
RSTAT NOP                RETURN ADDRESS 
IWD21 SFS *-*            CONTINUE IF FLAG SET 
      JMP *-1            TRY AGAIN IF FLAG CLEAR
IWD22 LIA *-*            A=CURRENT PLOTTER STATUS 
      JMP RSTAT,I        RETURN TO CALL 
TEST1 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CLA,CLE 
      CLB 
      JSB BPLOT          TO 0,0 PEN UP
      LDA I1000 
      LDB I1000 
      JSB BPLOT          TO 1000,1000 PEN UP
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-8            CONTINUE IF OFF
      JMP STST0          RESET SWITCH REGISTER IF ON
TEST2 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CLE 
      LDA I7600 
      LDB I7600 
      JSB BPLOT          TO 7600,7600 PEN UP
      LDA I8600 
      LDB I8600 
      JSB BPLOT          TO 8600,8600 PEN UP
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-8            REPEAT IF BIT OFF
      JMP STST0          RESET SWITCH REGISTER IF ON
TEST3 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE ABSOLUTE
      CLA,CLE 
      CLB 
      JSB BPLOT          TO 0,0 PEN UP
      LDA I0200 
      LDB I1000 
      JSB BPLOT          TO 200,1000 PEN UP 
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-8            REPEAT IF BIT OFF
      JMP STST0          RESET SWITCHES IF ON 
TEST4 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE ABSOLUTE
      CLA,CLE 
      CLB 
      JSB BPLOT          TO 0,0 PEN UP
      LDA I1000 
      LDB I0200 
      JSB BPLOT          TO 1000,2000 PEN UP
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-8            REPEAT IF  BIT OFF 
      JMP STST0          READ SWITCH REGISTER 
TEST5 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CLA,CLE 
      CLB 
      JSB BPLOT          TO 0,0 PEN UP
      LDA RWORD          GET RELATIVE CONTROL BITS
      STA WORD4          SET MODE TO RELATIVE 
      CCE 
      LDA I5000 
      LDB I0100 
      JSB BPLOT          TO 5000,100 PEN DOWN 
      LDA M5000 
      LDB M0100 
      JSB BPLOT          MOVE -5000,-100 PEN DOWN 
      CLA 
      LDB I0100 
      JSB BPLOT          MOVE 0,100 PEN UP
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-11           REPEAT IF BIT OFF
      JMP STST0          RESET SWITCHES IF ON 
TEST6 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      LDA I5100 
      CLB,CLE 
      JSB BPLOT          TO 5100,0 PEN UP 
      LDA RWORD          GET RELATIVE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CCE 
      LDA I0100 
      LDB I5000 
      JSB BPLOT          MOVE 100,5000 PEN DOWN 
      LDA M0100 
      LDB M5000 
      JSB BPLOT          MOVE -100,-5000 PEN DOWN 
      LDA I0100 
      CLB 
      JSB BPLOT          MOVE 100,0 PEN DOWN
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-11           REPEAT IF BIT OFF
      JMP STST0          RESET SWITCHES IF ON 
TEST7 CLA                GET ABSOLUTE CONTROL BITS
      STA WORD4          SET MODE TO ABSOLUTE 
      CLA,CLE 
      LDB I5100 
      JSB BPLOT          TO 0,5100 PEN UP 
      LDA RWORD          GET RELATIVE CONTROL BITS
      STA WORD4          SET MODE TO RELATIVE 
      CCE 
      LDA I4000 
      LDB I4000 
      JSB BPLOT          MOVE 4000,4000 PEN UP
      LDA M4000 
      LDB M4000 
      JSB BPLOT          MOVE -4000,-4000 PEN DOWN
      LDA I0100 
      CLB 
      JSB BPLOT          MOVE 100,0 PEN DOWN
      LIA 1B             READ SWITCH REGISTER 
      SSA,RSS            TEST BIT 15
      JMP *-11           REPEAT IF BIT OFF
      JMP STST0          RESET SWITCHES IF ON 
* 
* CONSTANTS AND VARIABLES FOR THE TEST ROUTINES 
* 
I9999 DEC 9999
I9500 DEC 9500
I9334 DEC 9334
I8600 DEC 8600
I7600 DEC 7600
I5100 DEC 5100
I5000 DEC 5000
I4000 DEC 4000
I1111 DEC 1111
I1000 DEC 1000
I0667 DEC 667 
I0500 DEC 500 
I0200 DEC 200 
I0100 DEC 100 
M0015 DEC -15 
M0040 DEC -40 
M0100 DEC -100
M1000 DEC -1000 
M1111 DEC -1111 
M4000 DEC -4000 
M5000 DEC -5000 
TORG1 DEF *              TABLE STARTING ADDRESS-1 
      DEC 667 
      DEC 1333
      DEC 1999
      DEC 2666
      DEC 3333
      DEC 3999
      DEC 4666
      DEC 5333
      DEC 5999
      DEC 6666
      DEC 7333
      DEC 7999
      DEC 8666
      DEC 9333
      DEC 9999
TORG2 DEF *+1            PASS TABLE ADDRESS 
      OCT 102013
      OCT 000270
      OCT 000013
      OCT 000270
      OCT 102017
      OCT 000240
      OCT 000011
      OCT 000304
      OCT 102013
      OCT 000270
      OCT 000007
      OCT 000320
      OCT 102011
      OCT 000304
      OCT 000003
      OCT 000350
      OCT 102007
      OCT 000320
      OCT 000007
      OCT 000320
      OCT 102003
      OCT 000350
      OCT 000011
      OCT 000304
      OCT 102007
      OCT 000320
      OCT 000013
      OCT 000270
      OCT 102011
      OCT 000304
      OCT 000017
      OCT 000240
      OCT 102013
      OCT 000270
      OCT 000013
      OCT 000270
      OCT 102023
      OCT 000210
      OCT 000023
      OCT 000210
TORG3 DEF *+1            PASS TABLE ADDRESS 
      OCT 102370
      OCT 000060
      OCT 000007
      OCT 004320
      OCT 102376
      OCT 000014
      OCT 000374
      OCT 004030
      OCT 102376
      OCT 000014
      OCT 000003
      OCT 004350
      OCT 102374
      OCT 000030
      OCT 000001
      OCT 004364
      OCT 102003
      OCT 000350
      OCT 000001
      OCT 004364
      OCT 102001
      OCT 000364
      OCT 000003
      OCT 004350
      OCT 102001
      OCT 000364
      OCT 000374
      OCT 004030
      OCT 102003
      OCT 000350
      OCT 000376
      OCT 004014
      OCT 102374
      OCT 000030
      OCT 000376
      OCT 004014
      OCT 102007
      OCT 000320
      OCT 000370
      OCT 004060
TORG4 DEF *+1            PASS TABLE ADDRESS 
      OCT 100160
      OCT 000000
      OCT 000160
      OCT 000000
      OCT 100140
      OCT 000000
      OCT 000165
      OCT 000000
      OCT 100160
      OCT 000000
      OCT 000200
      OCT 000000
      OCT 100165
      OCT 000000
      OCT 000220
      OCT 000000
      OCT 100200
      OCT 000000
      OCT 000200
      OCT 000000
      OCT 100220
      OCT 000000
      OCT 000165
      OCT 000000
      OCT 100200
      OCT 000000
      OCT 000160
      OCT 000000
      OCT 100165
      OCT 000000
      OCT 000140
      OCT 000000
      OCT 100160
      OCT 000000
      OCT 000160
      OCT 000000
      OCT 100120
      OCT 000000
      OCT 000120
      OCT 000000
TORG5 DEF *+1            PASS TABLE ADDRESS 
      OCT 100040
      OCT 000000
      OCT 000040
      OCT 024000
      OCT 100005
      OCT 000000
      OCT 000020
      OCT 004000
      OCT 100005
      OCT 000000
      OCT 000020
      OCT 024000
      OCT 100020
      OCT 000000
      OCT 000005
      OCT 024000
      OCT 100020
      OCT 000000
      OCT 000005
      OCT 034000
      OCT 100005
      OCT 000000
      OCT 000020
      OCT 034000
      OCT 100005
      OCT 000000
      OCT 000020
      OCT 014000
      OCT 100020
      OCT 000000
      OCT 000005
      OCT 014000
      OCT 100020
      OCT 000000
      OCT 000005
      OCT 004000
      OCT 100040
      OCT 000000
      OCT 000040
      OCT 014000
CNTR1 OCT 000000         UTILITY COUNTER
PNTR1 OCT 000000         UTILITY POINTER
BUF10 DEF *+1            BUFFER STARTING ADDRESS
      DEC 0              PEN UP SPEC
      DEC 5000
      DEC 0 
BUF11 DEF *+2            BUFFER STARTING ADDRESS
      DEC 20             BUFFER POINT COUNT 
      DEC 1              PEN DOWN SPEC
      DEC 9999
      DEC 1000
      DEC 5000
      DEC 0 
      DEC 9999
      DEC 2500
      DEC 5000
      DEC 0 
      DEC 9999
      DEC 7500
      DEC 5000
      DEC 0 
      DEC 8331
      DEC 9999
      DEC 5000
      DEC 0 
      DEC 5667
      DEC 9999
      DEC 5000
      DEC 0 
      DEC 4333
      DEC 9999
      DEC 5000
      DEC 0 
      DEC 1668
      DEC 9999
      DEC 5000
      DEC 0 
      DEC 0 
      DEC 7500
      DEC 5000
      DEC 0 
      DEC 0 
      DEC 2500
      DEC 5000
      DEC 0 
      DEC 0 
      DEC 1000
      DEC 5000
      DEC 0 
* 
* 
* THIS SUBROUTINE TRANSMITS INFORMATION TO THE PLOTTER
* WHEN THE INTERRUPT SYSTEM IS DISABLED 
* 
* WHEN CONTROL IS TRANSFERRED WITH A JSB BPLOT
* 
*      A=X COMPONENT
*      B=Y COMPONENT
*      E=PEN SPEC   IF E=0 THEN PEN RAISED BEFORE MOVE
*                   IF E=1 THEN PEN LOWERED BEFORE MOVE 
* 
*      THE MODE IS CONTROLLED BY THE CONTENTS OF WORD4
*      THE CODE IS ALWAYS BINARY
* 
*      THE CONTENTS OF A,B,E ARE UNCHANGED UPON RETURN
*      TO THE CALLING ROUTINE 
* 
* 
BPLOT NOP                RETURN ADDRESS 
      STA SAVEA          A REGISTER =X
      STB SAVEB          B REGISTER = Y 
      CLB,SEZ            B=0 TEST FOR E=1 
      INB                B=1 SO B=E 
IWD81 SFS *-*            GET STATUS IF FLAG SET 
      JMP *-1            TRY AGAIN IF FLAG CLEAR
IWD82 LIA *-*            BIT0=1 IF PEN DOWN 
      XOR 1B             NO CHANGE IF BIT0=0
      SLA,RSS            CHANGE PEN IF BIT0=1 
      JMP *+5            SEND PASS1 IF BIT0=0 
      LDA PENUP          A=PEN UP COMMAND 
      SEZ                SEND PEN UP IF E=0 
      LDA PENDN          A=PEN DOWN COMMAND 
      JSB WDOUT          SEND PEN COMMAND 
      LDA SAVEA          A=X
      ALF,ALF            POSITION HIGH ORDER BITS 
      AND MASK1          EXTRACT HIGH ORDER BITS
      IOR MASK2          INSERT PASS1 CONTROL BITS
      JSB WDOUT          SEND PASS1 
      LDA SAVEA          A=X
      AND MASK1          EXTRACT LOW ORDER BITS 
      JSB WDOUT          SEND PASS2 
      LDA SAVEB          A=Y
      ALF,ALF            POSITION HIGH ORDER BITS 
      AND MASK1          EXTRACT HIGH ORDER BITS
      JSB WDOUT          SEND PASS3 
      LDA SAVEB          A=Y
      AND MASK1          EXTRACT LOW ORDER BITS 
      IOR WORD4          INSERT PASS4 CONTROL BITS
      JSB WDOUT          SEND PASS4 
      LDA SAVEA          RESTORE A
      LDB SAVEB          RESTORE B
      JMP BPLOT,I        RETURN TO CALL 
* 
* 
* THIS SUBROUTINE TRANSMITTS THE CONTENTS OF THE A REGISTER 
* TO THE PLOTTER WHEN THE INTERRUPT SYSTEM IS DISABLED
* 
* 
WDOUT NOP                RETURN ADDRESS 
IWD83 SFS *-*            SEND WORD IF FLAG SET
      JMP *-1            TRY AGAIN IF FLAG CLEAR
IWD84 OTA *-*            LOAD OUTPUT REGISTER 
IWD85 STC *-*,C          SEND DEVICE COMMAND;CLEAR FLAG 
      JMP WDOUT,I        RETURN TO CALL 
* 
* 
* THIS SUBROUTINE TRANSMITTS INFORMATION TO THE PLOTTER 
* WHEN THE INTERRUPT SYSTEM IS ENABLED
* 
* 
* CONTROL IS TRANSFERED TO THIS SUBROUTINE WITH 
* 
* 
*       JSB IPLOT 
* 
* 
* IPLOT PROCESSES INFORMATION STORED IN A BUFFER
* WHEN CONTROL IS TRANSFERRED TO IPLOT
* 
*       A = ADDRESS OF 1ST WORD OF BUFFER 
*       B = NUMBER OF POINTS GIVEN IN BUFFER
* 
* 
* THIS BUFFER SPECIFIES THE PEN STATE, THE MODE,
* AND ANY NUMBER OF POINTS THAT MIGHT BE CONVENIENT 
* 
* ALL THE POINTS IN A GIVEN BUFFER WILL HAVE THE
* SAME PEN POSITION AND MODE
* 
* 
* THE FORM OF THE BUFFER IS:
* 
* 
*       WORD1 - PEN POSITION
*       WORD2 - MODE
*       WORD3 - 1ST X COMPONENT 
*       WORD4 - 1ST Y COMPONENT 
*       WORD5 - 2ND X COMPONENT (OPTIONAL)
*       WORD6 - 2ND Y COMPONENT (OPTIONAL)
*         -            -             -
*         -            -             -
*         -            -             -
*         -            -             -
* 
* 
*       IF WORD1 = 0 PEN IS RAISED
*       IF WORD1 = 1 PEN IS LOWERED 
* 
*       IF WORD2 = 0 MODE IS RELATIVE 
*       IF WORD2 = 1 MODE IS ABSOLUTE 
* 
* 
*       ALL COMPONENTS ARE 16 BIT 2'S COMPLEMENT
*       BINARY INTEGERS 
* 
* 
* 
* 
* 
IPLOT NOP                RETURN ADDRESS SAVED HERE
*                        HOLDF IS THE DRIVER BUSY TRAP
HOLDF RSS                WHEN DRIVER BUSY (HOLDF) = NOP 
*                        WHEN DRIVER FREE (HOLDF) = RSS 
      JMP *-1            RETURN TO DRIVER BUSY TRAP 
      CMB,INB            B=NEGATED NUMBER OF POINTS 
      STB BUFLN          INITIALIZE POINT COUNTER 
      LDB 0B,I           B=PEN SPECIFICATION
      STB PNTST          SAVE PEN SPECIFICATION 
      STA BUFAD          SET BUFFER ADDRESS POINTER 
      CLA                A =NOP OP CODE 
      STA HOLDF          SET DRIVER BUSY (A=NOP)
      LDA IPLOT          A=RETURN ADDRESS 
      STA INTRY          REPLACE INTERRUPT ADDRESS
NEXTP LIB *-*            B=CURRENT PLOTTER STATUS 
      LDA PNTST          A=PEN SPEC 
      XOR 1B             COMPARE STATUS WITH SPEC 
      SLA,RSS            IF BIT 0=1 CHANGE PEN
      JMP *+5            IF BIT 0=0 THEN SEND PASS1 
      LDA PENDN          A=PEN DOWN COMMAND 
      SLB                SEND PEN COMMAND IF BIT0=0 
      LDA PENUP          GET PEN UP COMMAND IF BIT0=1 
      JSB EXIT1          SEND PEN COMMAND 
      ISZ BUFAD          SET POINTER TO NEXT X COMPONENT
      LDA BUFAD,I        GET X COMPONENT
      ALF,ALF            POSITION HIGH ORDER BITS 
      AND MASK1          EXTRACT HIGH ORDER BITS
      IOR MASK2          INSERT PASS1 CONTROL BITS
      JSB EXIT1          SEND 1ST PASS
      LDA BUFAD,I        GET X COMPONENT
      AND MASK1          EXTRACT LOW ORDER BITS 
      JSB EXIT1          SEND 2ND PASS
      ISZ BUFAD          SET POINTER TO Y COMPONENT 
      LDA BUFAD,I        GET Y COMPONENT
      ALF,ALF            POSITION HIGH ORDER BITS 
      AND MASK1          EXTRACT HIGH ORDER BITS
      JSB EXIT1          SEND 3RD PASS
      LDA BUFAD,I        GET Y COMPONENT
      AND MASK1          EXTRACT LOW ORDER BITS 
      IOR WORD4          INSERT PASS4 CONTROL BITS
      JSB EXIT1          SEND 4TH PASS
      ISZ BUFLN          INCREMENT POINT COUNTER
      JMP NEXTP          SEND NEXT POINT IF(BUFLN)#0
IWD92 CLC *-*            CLEAR CONTROL FF 
      LDA RSSOC          A=RSS OP CODE
      STA HOLDF          CLEAR DRIVER BUSY HOLD OFF 
      JMP EXIT2          TERMINATE PROCESSING 
EXIT1 NOP                BRANCH ADDRESS SAVED HERE
IWD93 OTA *-*            LOAD PASS INTO OUTPUT REGISTER 
IWD94 STC *-*,C          SEND DEVICE COMMAND & CLEAR FLAG 
EXIT2 LDA SAVEA          RESTORE CONTENTS OF A
      LDB SAVEB          RESTORE CONTENTS OF B
      JMP INTRY,I        RETURN TO INTERRUPT ADDRESS
INTRY NOP                INTERRUPT ADDRESS SAVED HERE 
      STA SAVEA          SAVE CONTENTS OF A 
      STB SAVEB          SAVE CONTENTS OF B 
      JMP EXIT1,I        TRANSFER TO BRANCH ADDRESS 
* 
* 
*       *** VARIABLE STORAGE ***
* 
* 
BUFAD OCT 000000         BUFFER ADDRESS POINTER 
BUFLN OCT 000000         POINT COUNTER
PNTST OCT 000000         CURRENT PEN SPECIFICATION
WORD4 OCT 000000         PASS4 CONTROL BITS 
SAVEA OCT 000000         VALUE OF A SAVES HERE
SAVEB OCT 000000         VALUE OF B SAVED HERE
* 
* 
*       *** CONSTANT STORAGE ***
* 
* 
PENUP OCT 101000         COMMAND FOR PEN UP 
PENDN OCT 101400         COMMAND FOR PEN DOWN 
MASK1 OCT 000377         EXTRACTS BITS 0 THROUGH 7
MASK2 OCT 102000         PASS1 CONTROL BITS 
RWORD OCT 004000         PASS4 CONTROL BITS FOR RELATIVE MODE 
RSSOC RSS                OP CODE TO CLEAR HOLD OFF
* 
* 
      END 
