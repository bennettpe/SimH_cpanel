      HED INITIATOR SECTION - COMPLETE RTE DVR10 FOR HP7210 
***** INITIATOR SECTION ***** 
* 
* 
*     ON ENTRY  (JSB I.10)
* 
*     EQT01-EQT15 ADDRESS PROPER EQT ENTRY FOR PLOTTER
*     A = I/O ADDRESS (SC) OF PROPER DEVICE 
* 
* 
*     ON RETURN  (TO ENTRY ADDRESS + 1) 
* 
*     A=0  IF OPERATION SUCESSFULLY INITIATED 
*     A=1  IF ILLEGAL READ REQUEST REJECTED OR
*          WRITE REQUEST IMPROPERLY COMPLETED 
*     A=2  ILLEGAL REQUEST CODE (NOT READ)
* 
* 
***** REQUEST CODE PROCESSING (BIT5-BIT0 OF EQT06)
* 
I.10  NOP           INITIATOR ENTRY POINT 
      JSB IOSET     SET UP I/O INSTRUCTIONS (A=SC)
      LDA EQT06,I   A = EQT CONTROL WORD
      AND IMSK0     EXTRACT BITS 5-0 (=REQUEST CODE)
      CPA IMSK1     IF A=1 THEN READ REQUESTED
      JMP I.10,I    SO RETURN A=1 FOR READ ILLEGAL
      CPA IMSK2     IF A=2 THEN VALID WRITE REQUEST 
      JMP *+3       SO PROCESS BUFFER ADD AND LENGTH
      LDA IMSK2     ELSE A=2 (ILLEGAL REQUEST CODE) 
      JMP I.10,I    AND RETURN WITH REQUEST REJECTED
* 
*****PROCESS BUFFER ADDRESS IN EQT07 AND BUFFER LENGTH IN EQT08 
* 
      LDB EQT07,I   B=ADDRESS OF 1ST BUFFER WORD
      CLE,ELB       B=1ST CH ADD = 2*(1ST WORD ADD) 
      STB EQT09,I   EQT09=CURRENT CHARACTER ADDRESS 
      LDB EQT08,I   B=BUFFER LENGTH 
      LDA MASK7     BIT10 OF A=1 FOR CHAR CNT 
      SSB,RSS       IF BUFFER LENGTH  POSITIVE
      CLA,RSS       SET A=0 FOR WORD CNT AND SKIP 
      CMB,INB,RSS   ELSE NEGATE CH CNT AND SKIP 
      CLE,ELB       B=2*(WD CNT) = POS. CH CNT
      ADB EQT09,I   B=1ST CH ADDRESS + POS. CH CNT
      CMB,INB       NEGATE FOR LAST CH ADDRESS TEST 
      STB EQT08,I   SET EQT08 FOR COMPLETION TEST 
* 
***** CONTROL WORD PROCESSING (BIT15-BIT6 OF EQT06) 
* 
      LDB EQT06,I   B = EQT CONTROL WORD
      BLF,RBL       OLD SIZE BIT (BIT9) TO BIT14
      RBL,ELB       OLD SIZE BIT TO E FOR CHSET 
      RBL,RBL       MODE BIT (BIT6) TO BIT15 OF B 
      SSB,RSS       IF MODE=0 (ASCII) THEN
      JMP CHSET     SET UP FOR LETTERING CALL ELSE
*                                   SET UP FOR POSITION CALL(BINARY)
      SKP 
* 
* 
***** INITIALIZATION FOR POSITION CALL PROCESSING 
* 
* 
***** PROCESS PEN CONTROL IN 2ND WORD OF BUFFER 
* 
LNSET JSB NXTBW     GET AND SKIP 1ST WORD(IN BUFFER)
      JSB NXTBW     B=2ND WORD=PEN CONTROL WORD 
      IOR CMSK7     BITS 13,3,2=1 FOR DRIVER CONTROL
      CMB,INB,SZB   NEGATE PEN CNT - SKIP IF PNTS(0)
      XOR CMSK8     ELSE BIT3=0 FOR UP/DOWN 
      SSB           IF PEN CNT <=0 THEN UP OR PNTS
      XOR CMSK9     ELSE BIT13=0 FOR PEN DOWN 
* 
***** PROCESS MODE IN 3RD WORD AND SET DRIVER CONTROL IN EQT13
* 
      JSB NXTBW     B=3RD WORD IN BUFFER=MODE 
      SSB           IF MODE>=0 THEN BIT11=0 ABSOLUTE
      IOR MASK4     ELSE BIT11=1 FOR RELATIVE 
      STA EQT06,I   SET EQT06 = DRIVER CONTROL WORD 
* 
***** RESET LENGTH OF CURRENT LETTERED LINE FOR NEXT LETTERING CALL 
* 
      CLB           B=0 
      STB EQT12,I   X COMPONENT OF LINE LENGTH = 0
      STB EQT13,I   Y COMPONENT OF LINE LENGTH = 0
* 
***** INITIATE POSITION CALL PROCESSING BY TRANSFER TO CONTINUATOR
* 
      LDA IEXAD     A=INITIATOR EXIT ADDRESS
      STA C.10      SET CONTINUATOR RETURN ADDRESS
      JMP LNCNT     TRANSFER TO CONTINUATOR TO START
* 
* 
***** INITIATOR EXIT TO PROCESS RESULTS OBTAINED FROM CONTINUATOR 
* 
* 
IEXAD DEF *+1       RETURN ADDRESS FOR CONTINUATOR
      CLA,INA,RSS   A=1 FOR ILLEGAL COMPLETION
      CLA           A=0 FOR OPERATION INITIATED 
      JMP I.10,I    RETURN FROM INITIATOR 
      HED BUFFER WORD SUBROUTINE - COMPLETE RTE DVR10 FOR HP7210
* 
***** SUBROUTINE NXTBW - RETURNS WORD FROM BUFFER AND UPDATES EQT12 
* 
* 
*     ON ENTRY- 
* 
*     EQT12  CONTAINS CURRENT CHARACTER ADDRESS = 2*(WD ADD)
* 
* 
*     ON RETURN-
* 
*     A      REMAINS UNCHANGED
*     B      CONTAINS CURRENT WORD FROM BUFFER
*     EQT12  CONTAINS CHARACTER ADDRESS OF NEXT WORD IN BUFFER
* 
* 
NXTBW NOP           ENTRY POINT AND RETURN ADDRESS
      LDB EQT09,I   B=CURRENT CHARACTER ADDRESS 
      CLE,ERB       B=CURRENT WORD ADDRESS
      LDB 1B,I      B=CURRENT WORD FROM BUFFER
      ISZ EQT09,I   EQT09=ADDRESS OF NEXT CHARACTER 
      ISZ EQT09,I   EQT09=ADDRESS OF NEXT WORD
      JMP NXTBW,I   RETURN TO CALL
      HED CONTINUATOR SECTION - COMPLETE RTE DVR10 FOR HP7210 
***** CONTINUATOR SECTION ***** 
* 
* 
*     ON ENTRY  (JSB C.10)
* 
*     EQT01-EQT15 ADDRESS PROPER EQT ENTRY FOR PLOTTER
*     EQT ENTRY  IS PROPERLY INITIALIZED AND UPDATED
*     A = I/O ADDRESS (SC) OF PROPER DEVICE 
* 
* 
***** ON COMPLETION RETURN  (TO ENTRY ADDRESS + 1)
* 
*     IF A=0  SUCESSFUL COMPLETION AND
*        B=   TRANSMISSION LOG IN WORDS OR CHARACTERS 
*             (CORRESPONDS TO THE TYPE OF BUFFER LENGTH USED) 
* 
* 
***** ON CONTINUATION RETURN  (TO ENTRY ADDRESS + 2)
* 
*     EQT ENTRIES ARE UPDATED 
*     REGISTERS ARE MEANINGLESS 
* 
* 
***** ON ENTERING THE CONTINUATOR THE PROCESSING THAT WILL BE 
*     PERFORMED IS DETERMINED BY THE VALUES OF THE INTERRUPT
*     COUNTER, THE CALL TYPE BIT, THE RETURN BIT, AND THE POINT 
*     PLOTTING BIT AS OBTAINED FROM THE DRIVER CONTROL WORD (EQT06).
* 
*     WHEN USED IN COMMENTS 
* 
*     'NN'  REFERS TO THE INTERRUPT COUNTER IB BIT1-0 OF EQT06
*     'D'   REFERS TO THE CALL TYPE BIT IN BIT2 OF EQT06
*     'R'   REFERS TO THE RETURN BIT IN BIT4 OF EQT06 
*.    'P'   REFERS TO THE POINT PLOTTING BIT IN BIT3 OF EQT06 
* 
* 
***** WHEN EVER A MOVE OR A POINT FOR A POSITION CALL OR A
*     CHARACTER MOVE FOR A LETTERING CALL IS STARTED THEN THE 
*     CURRENT PEN STATUS FROM THE PLOTTER IS VERIFIED USING 
*     THE COMPLIMENT OF THE DESIRED STATUS IN BIT13 OF EQT06. 
* 
*     IF PEN IS GOOD COMPONENTS ARE TRANSMITTED AND NN SET TO 01
*     IF PEN IS BAD A PEN COMMAND IS TRANSMITTED AND NN SET TO 00 
* 
* 
***** PROCESSING SPECIFIED BY THE INTERRUPT COUNTER 
* 
*     IF NN=00 THEN MOVE COMPONENTS FROM THE SOURCE SPECIFIED BY
*              D AND R WILL BE TRANSMITTED AND NN WILL BE SET TO 01 
*          IF D=1 TRANSMIT POSITION CALL MOVE COMPONENTS
*          IF D=0 TRANSMIT THE CHARACTER MOVE COMPONENTS
*                 OBTAINED FROM THE SOURCE SPECIFIED BY R 
*              IF R=0 GET COMPONENTS FROM CHARACTER GENERATOR 
*              IF R=1 GET COMPONENTS FROM CARRIAGE RETURN GENERATOR 
      SKP 
*     IF NN=01 THEN COMPLETE MOVE OR START POINT PROCEDURE AS 
*              SPECIFIED BY D, R, AND P 
*          IF D=0 COMPLETE CHARACTER MOVE AS SPECIFIED BY R AND 
*                 RETURN COMPLETE OR START NEXT CHARACTER MOVE
*              IF R=0 USE CHARACTER GENERATOR COMPLETION
*              IF R=1 USE CARRIAGE RETURN GENERATOR COMPLETION
*          IF D=1 PROCESS POSITION CALL MOVE AS SPECIFIED BY P
*              IF P=0 RETURN COMPLETE OR START NEXT MOVE
*              IF P=1 THEN LOWER PEN FOR POINT AND SET NN=10
* 
*     IF NN=10 THEN RAISE PEN FOR POINT AND SET NN TO 11
* 
*     IF NN=11 POINT DONE.  RETURN COMPLETE OR START NEXT POINT 
* 
* 
* 
***** CONTINUATOR ENTRY POINT 
* 
* 
* 
C.10  NOP           ENTRY POINT AND RETURN ADDRESS
      LDB EQT01,I   B=DEVICE SUSPENDED LST PNTR 
      SZB,RSS       IF B # 0 CONTINUE 
      JMP EXITS     ELSE RETURN - BAD INTERUPT
      JSB IOSET     SET UP I/O INSTRUCTIONS (A=SC)
* 
IRENT LDA CMSK2     A=MASK TO EXTRACT BIT4-BIT0 
      AND EQT06,I   EXTRACT RPDNN FROM DVR CNTRL WD 
      ERA,SLA,RAR   BIT0 TO E. IF BIT1=1 THEN 
      JMP STS23     NN=1X SO PROCESS POINT ELSE 
      SEZ           NN=0X AND IF BIT0=1(NN=01) THEN 
      JMP *+6       FINISH UP MOVE ELSE NN=00 SO
      SLA,RAR       IF D BIT(BIT2 OF EQT06)=1 THEN
      JMP LINEX     TRANSMIT CMPNTS FROM BFFR ELSE
      RAR,SLA       IF R BIT(BIT4 OF EQT06)=1 THEN
      JMP RETNX     TRANSMIT CR CMPONENTS ELSE
      JMP CHARX     TRANSMIT CHAR MOVE COMPONENTS 
* 
***** FINISH UP MOVE IN PROGRESS
* 
      SLA,RAR       IF D BIT(BIT2 OF EQT06)=1 THEN
      JMP *+4       FINISH UP POSITION CALL ELSE
      RAR,SLA       IF R BIT(BIT4 OF EQT06)=1 THEN
      JMP RETNC     FINISH UP CARRIAGE RETURN ELSE
      JMP NMOVE     REQUEST NEXT CHAR MOVE IF ANY 
* 
***** FINISH POSITION CALL PROCESSING 
* 
      SLA,RSS       IF P BIT(BIT3 OF EQT06)=0 THEN
      JMP LNCNT     REQUEST NEW DATA IF ANY ELSE
      LDA PDWRD     SET A=PEN DOWN DATA WORD AND
      JMP REQIN-1   LOWER PEN TO PLOT POINT 
      SKP 
***** FINISH PEN CONTROL SEQUENCE FOR POINT PLOTTING
* 
STS23 SEZ           IF E=1(NN=11) THEN
      JMP LNCNT     REQUEST NEXT POINT IF ANY ELSE
      LDA PUWRD     NN=10 SO GET PEN UP DATA WORD 
*                                   AND RAISE PEN TO FINISH POINT 
***** PROCESS INTERUPT REQUESTS 
* 
*     ON ENTRY- 
* 
*     A=PASS TO BE TRANSMITTED
* 
      LDB PTIME     B=-10 FOR DEVICE TIME-OUT CLOCK 
REQIN ISZ EQT06,I   ADVANCE INTERRUPT COUNTER 
IOWD0 OTA *-*       TRANSMIT DATA TO INTERFACE
IOWD1 STC *-*,C     SET CONTROL AND CLEAR FLAG
EXITS ISZ C.10      SET RETURN ADD FOR CONTINUATION 
      STB EQT15,I   SET DEVICE TIME OUT CLOCK = B 
      JMP C.10,I    RETURN AND WAIT FOR INTERRUPT 
* 
* 
***** TEST FOR COMPLETION AND PROCESS ADDITIONAL COMPONENTS IF ANY
* 
* 
LNCNT LDA EQT09,I   A=CURRENT CH ADDRESS
      ADA EQT08,I   A=A-FINAL CH ADDRESS
      SSA,RSS       IF RESULT>=0  THEN
      JMP EXIT7     BUFFER DONE-PROCESS COMPLETION
      LDB EQT06,I   ELSE B=DRIVER CONTROL WORD
      BLF,RBR       PEN SPEC TO BIT0 TO CHECK STATUS
      JMP SENDP+3   AND CONTINUE TO PEN CONTROL 
* 
* 
***** TRANSMIT POSITION INFORMATION AND MAKE CONTINUATION RETURN
* 
* 
LINEX JSB NXTBW     B=CURRENT X COMPONENT 
      JSB SENDX     TRANSMIT CURRENT X COMPONENT
      JSB NXTBW     B=CURRENT Y COMPONENT 
      JMP SENDY     TRANSMIT CURRENT Y COMPONENT AND
*                                   RETURN TO SYSTEM - CONTINUATION 
      SKP 
***** CHECK PEN STATUS AND SEND PEN COMMAND IF NECESSARY
* 
* 
*     ON ENTRY FOR POSITION CALL (TO SENDP+3) 
* 
*     BIT0 OF B IS COMPLEMENT OF DESIRED PEN STATUS 
* 
* 
*     ON ENTRY FOR LETTERING CALL (TO SENDP)
* 
*     A=0 IF DESIRED PEN STATUS IS 0
*     A#0 IF DESIRED PEN STATUS IS 1
* 
* 
SENDP SZA           IF A=0 THEN 
      CLB,INB,RSS   BIT0=1 TO TEST FOR PEN STATUS=0 
      CLB           ELSE BIT0=0 TO TEST FOR PEN=1 
* 
      LDA PASSC     A=177774 TO CLEAR BIT1-0
      AND EQT06,I   A=EQT06 WITH BIT1-0=0 
      STA EQT06,I   CLEAR INTERRUPT COUNTER IN EQT06
* 
IOWD2 LIA *-*       A=CURRENT PLOTTER STATUS
      XOR 1B        SET BIT0=1 IF PEN STATUS IS OK
      SLA           IF PEN STATUS IS OK THEN
      JMP IRENT     PROCESS COMPONENTS IMMEDIATLY 
      LDA PDWRD     ELSE A=PEN DOWN COMMAND 
      SLB           IF PEN SPEC IS UP THEN
      LDA PUWRD     A=PEN UP COMMAND ELSE 
      LDB PTIME     B=-10 FOR DEVICE TIME-OUT CLOCK 
      JMP REQIN+1   REQUEST INTERUPT (WITH NN=00) 
* 
* 
***** SUBROUTINE SENDX - TRANSMITTS X COMPONENT OF MOVE 
* 
* 
*     ON ENTRY -
* 
*     B=X COMPONENT TO BE TRANSMITTED 
* 
*     ON RETURN - REGISTERS MEANINGLESS 
* 
* 
SENDX NOP           ENTRY POINT AND RETURN ADDRESS
      LDA MASK1     A=MASK FOR BITS 7-0 
      AND 1B        EXTRACT LOW ORDER BITS OF X COMP
      STA CWORD     SAVE LOW ORDER BITS OF X COMP 
      LDA 1B        A=X COMPONENT 
      ALF,ALF       POSITION HIGH ORDER BITS OF X 
      AND MASK1     EXTRACT HIGH ORDER BITS OF X
      IOR MASK2     INSERT PASS 1 CONTROL BITS
      JSB RPASS     SEND 1ST PASS OF MOVE (HIGH X)
      LDA CWORD     A=LOW ORDER BITS OF X COMPONENT 
      JSB RPASS     SEND 2ND PASS OF MOVE (LOW X) 
      JMP SENDX,I   RETURN TO CALL
      SKP 
***** ROUTINE SENDY - TRANSMIT Y COMPONENT AND RETURN TO SYSTEM 
* 
* 
*     ON ENTRY- 
* 
*     B=Y COMPONENT TO BE TRANSMITTED 
* 
*     THIS ROUTINE DOES NOT EXIT - IT RETURNS TO SYSTEM 
* 
*     WHEN THE 4TH PASS (MODE AND LOW Y) IS TRANSMITTED CONTROL 
*     IS RETURNED TO THE ENTRY ADDRESS+2 (CONTINUATION) AND THE 
*     CONTINUATOR IS RE-ENTERED WHEN THE PLOTTER GENERATES AN 
*     INTERRUPT.
* 
* 
SENDY LDA MASK1     MASK FOR BITS 7-0 
      AND 1B        EXTRACT LOW ORDER BITS OF Y COMP
      STA CWORD     SAVE LOW ORDER Y BITS 
      LDA 1B        A=Y COMPONENT 
      ALF,ALF       POSITION HIGH ORDER Y BITS
      AND MASK1     EXTRACT HIGH ORDER Y BITS 
      JSB RPASS     SEND 3RD PASS OF MOVE (HIGH Y)
      LDA MASK4     MASK FOR BIT11(MODE CONTROL BIT)
      AND EQT06,I   EXTRACT MODE FROM DRIVER CNT WD 
      IOR CWORD     INSERT LOW ORDER BITS OF Y COMP 
      LDB ITIME     INITIALIZE B=FLAG SAFETY TIMER
IOWD3 SFC *-*       IF FLAG SET THEN
      JMP *+3       SEND 4TH PASS AND RETURN
      ISZ 1B        ELSE INC SAFETY TIMER AND TEST
      JMP *-3       IF TIME LEFT THEN TRY AGAIN 
      LDB LTIME     B=-300 FOR DEVICE TIME OUT CLOCK
      JMP REQIN     ELSE SEND PASS ANYWAY AND RETURN
      SKP 
***** ROUTINE EXIT7 - COMPLETION RETURN 
* 
* 
*     WHEN THE LAST MOVE OF A REQUEST IS COMPLETED THIS ROUTINE 
*     UPDATES THE HARDWARE STATUS AND TRANSMISSION LOG, 
*     SETS THE A AND B REGISTERS, TURNS OFF THE INTERFACE, AND
*     RETURNS TO THE ENTRY ADDRESS+1 (COMPLETION).
* 
*     ON RETURN-
* 
*     EQT05  CONTAINS THE CURRENT HARDWARE STATUS 
*     A=0    TO INDICATE SUCCESSFUL COMPLETION
*     B      CONTAINS CURRENT TRANSMISSION LOG
* 
*     A IS ALWAYS RETURNED AS 0 ON COMPLETION BECAUSE 
*     NO ERROR CONDITIONS CAN BE DETECTED AFTER INITIATION. 
* 
EXIT7 LDA EQT05,I   A=EQT STATUS WORD 
      AND MASK5     CLEAR OLD HARDWARE STATUS 
IOWD4 MIA *-*       INSERT NEW HARDWARE STATUS
      STA EQT05,I   UPDATE HARDWARE STATUS IN EQT05 
      LDA EQT06,I   A=PLOTTER CONTROL WORD
      AND MASK7     BIT10 = TRANSMISSION LOG CONTROL
      LDB EQT07,I   B=1ST WORD ADD FOR REQUEST
      CLE,ELB       B=1ST CH ADD = 2*(1ST WD ADD) 
      ADB EQT08,I   B=B-LAST CH ADD(-CHARS TRNSMTTD)
      CMB,INB       NEGATE (B=CHARACTERS TRANSMITTED) 
      SZA,RSS       IF BIT10=1 THEN LOG IS IN CHARS 
      CLE,ERB       ELSE B=B/2 FOR LOG IN WORDS 
      CLA           A=0 (FOR SUCCESSFUL COMPLETION) 
IOWD5 CLC *-*       TURN SC OFF (CNT CLEAR/FLG SET) 
      JMP C.10,I    RETURN TO ENTRY ADDRESS+1 
* 
* 
***** SUBROUTINE RPASS - PASS TRAMSMISSION UNDER SKIP-FLAG CONTROL
* 
*     ON ENTRY -
* 
*     A=PASS TO BE TRANSMITTED
* 
*     ON RETURN-
* 
*     A   REMAINS UNCHANGED 
*     B   IS MEANINGLESS
* 
* 
RPASS NOP           ENTRY POINT AND RETURN ADDRESS
      LDB ITIME     INITIALIZE B=FLAG SAFETY TIMER
IOWD6 SFC *-*       IF FLAG SET THEN LAST PASS DONE 
      JMP *+3       SO GO SEND PASS NOW IN A
      ISZ 1B        ELSE BUMP SAFETY TIMER AND TEST 
      JMP *-3       IF TIME LEFT THEN TRY AGAIN ELSE
IOWD7 OTA *-*       SEND CONTENTS OF A TO INTERFACE 
IOWD8 STC *-*,C     SEND DEVICE COMMAND-CLEAR FLAG
IOWD9 CLC *-*       CLEAR CONTROL-SUPPRESS INTERRUPT
      JMP RPASS,I   RETURN TO CALL-PASS BEING SENT
      HED SUBROUTINE IOSET - COMPLETE RTE DVR10 FOR HP7210
* 
***** SUBROUTINE IOSET - INSERTS SELECT CODES IN I/O INSTRUCTIONS 
* 
* 
*     ON ENTRY- 
* 
*     A=SELECT CODE OF DEVICE ADDRESSED 
* 
* 
*     ON RETURN-
* 
*     A   IS MEANINGLESS
*     B   IS UNCHANGED
* 
* 
IOSET NOP           ENTRY POINT AND RETURN ADDRESS
      IOR IMSK9     INSERT SFC OP CODE
      STA IOWD3     SET SFC 
      STA IOWD6     SET SFC 
      ADA MASK8     CHANGE OP CODE BY 100B
      ADA MASK8     CHANGE OP CODE TO MIA 
      STA IOWD4     SET MIA 
      ADA MASK8     CHANGE OP CODE TO LIA 
      STA IOWD2     SET LIA 
      ADA MASK8     CHANGE OP CODE TO OTA 
      STA IOWD0     SET OTA 
      STA IOWD7     SET OTA 
      ADA IMSK8     CHANGE OP CODE TO STC,C 
      STA IOWD1     SET STC,C 
      STA IOWD8     SET STC,C 
      ADA IMSK7     CHANGE OP CODE TO CLC 
      STA IOWD5     SET CLC 
      STA IOWD9     SET CLC 
      JMP IOSET,I   RETURN TO CALL
      HED CONSTANTS AND VARIABLES - COMPLETE RTE DVR10 FOR HP7210 
* 
* CONSTANT AND VARIABLE STORAGE 
* 
MASK1 OCT 000377    TO EXTRACT BIT7-0 
MASK2 OCT 102000    PASS 1 CONTROL BITS 
MASK4 OCT 004000    RELATIVE CONTROL BIT FOR EQT06
MASK5 OCT 177700    TO CLEAR HARDWARE STATUS
MASK7 OCT 002000    BIT10=1 FOR TRANSMISSION LOG CNT
MASK8 OCT 000100    100B FOR I/O INITIALIZATION 
PDWRD OCT 101400    PEN DOWN COMMAND
PUWRD OCT 101000    PEN UP COMMAND
ITIME DEC -100      FLAG TIMER SAFETY LIMIT 
* 
* 
*                                   THE FOLLOWING 2 TIME OUT VALUES 
*                                   SHOULD BE NEGATIVE TO BE EFFECTIVE
*                                   THIS SHOULD BE FIXED ON REV B.
PTIME DEC 10        DEVICE TIME OUT VALUE FOR PEN 
LTIME DEC 300       DEVICE TIME OUT VALUE FOR LINE
* 
* 
PASSC OCT 177774    TO CLEAR BIT1-0 
CWORD OCT 0         TEMPORARY COMPONENT STORAGE 
IMSK0 OCT 000077    EXTRACTS BIT5-0 
IMSK1 OCT 000001    TO TEST FOR READ REQUEST
IMSK2 OCT 000002    TO INDICATE ILLEGAL REQUEST 
IMSK4 OCT 000017    TO EXTRACT A 4 BIT DIGET
IMSK6 OCT 177760    TO SET SIGN OF NEG 4 BIT SHIFT
IMSK7 OCT 003000    CHANGES STC,C TO CLC
IMSK8 OCT 001100    CHANGES OTA T0 STC,C
IMSK9 OCT 102200    SETS UP SFC OP CODE 
      HED SYSTEM LINKS - COMPLETE RTE DVR10 FOR HP7210
***** EQUIPMENT TABLE LINKS 
* 
EQT01 EQU 1660B     DEVICE SUSPENDED LIST POINTER 
EQT02 EQU EQT01+1   NOT USED
EQT03 EQU EQT01+2   NOT USED
EQT04 EQU EQT01+3   NOT USED
EQT05 EQU EQT01+4   EQT STATUS WORD 
EQT06 EQU EQT01+5   EQT CNTRL WD AND DVR CNTRL WD 
EQT07 EQU EQT01+6   BUFFER STARTING ADDRESS 
EQT08 EQU EQT01+7   FINAL CHARACTER ADDRESS 
EQT09 EQU EQT01+8   CURRENT CHARACTER ADDRESS 
EQT10 EQU EQT01+9   CHARACTER MOVE WORD ADDRESS 
EQT11 EQU EQT01+10  CHARACTER MOVE BIT ADDRESS
EQT12 EQU EQT01+73  X RETURN DISTANCE 
EQT13 EQU EQT01+74  Y RETURN DISTANCE 
EQT14 EQU EQT01+75  DEVICE TIME OUT VALUE 
EQT15 EQU EQT01+76  DEVICE TIME OUT CLOCK 
