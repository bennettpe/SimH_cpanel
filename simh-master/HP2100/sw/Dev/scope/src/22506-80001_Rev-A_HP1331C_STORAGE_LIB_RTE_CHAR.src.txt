ASMB,R,B,L
      HED <CHARACTER GENERATOR - RTE> 
      NAM CHAR,7
      ENT CHAR,CH#R,CHARS,WHERE
      EXT EXEC,.ENTR,ERASE
* 
**
**      SUBROUTINE TO OUTPUT CHARACTERS ON A 1331C STORAGE SCOPE. 
**   CALLING SEQUENCE : 
**      CALL CHAR(LU,IX,IY,IASC,N)
**         LU = LOGICAL UNIT NUMBER OF SCOPE
**         IX,IY = COORDINATES OF UPPER LEFT POINT OF FIRST CHAR
**         IASC = ADDRESS OF ASCII BUFFER 
**         N = NUMBER OF CHARACTERS : 
**             IF > 0 : OUTPUT N CHARS + CR/LF
**                = 0 : OUTPUT CR/LF ONLY 
**                < 0 : OUTPUT N CHARS (WITHOUT CR/LF)
**
**                              WIM ROELANDTS, HP BRU 
**
* 
.LU   BSS 1 
.X    BSS 1 
.Y    BSS 1 
.BUF  BSS 1 
NUM   BSS 1 
CHAR  NOP 
      JSB .ENTR 
      DEF .LU 
      LDA NUM,I 
      STA CRLFF     SAVE AS FLAG
      SZA           ONLY  CR/LF ? 
      JMP CH1       NO, CONTINUE
      JSB CRLF      YES, GO DO IT 
      JMP CHAR,I    AND RETURN
* 
**  MAKE CHARACTER COUNTER
* 
CH1   SSA,RSS       NEG ? 
      CMA,INA       NO, MAKE NEG
      STA CHCNT 
* 
**   MAKE STARTING LOCATION 
* 
      LDA .X,I      GET X 
      AND B377      TRUNCATE
      STA SAVX      SAVE FOR LATER
      LDA .Y,I
      AND B377
      ALF,ALF 
      STA SAVY
      IOR SAVX
      STA LOC       THIS IS OUR STARTING LOCATION 
* 
**   SET BUFFER POINTERS
* 
      LDA .BUF
      CLE,ELA 
      STA .BUF      SET UPPER/LOWER FLAG
      LDA .OB 
      STA POB 
CHA1  LDB .BUF
      CLE,ERB 
      LDA B,I 
      SEZ,RSS       UPPER ? 
      ALF,ALF 
      AND B177      ISOLATE CHAR
      ISZ .BUF      BUMP POINTER
* 
** NOW WE HAVE CHAR : FIND DOTS 
* 
      SZA,RSS       CHAR IS ASCII 0?
      JMP CHA1      YES, SKIP THIS CHAR
      ADA MB140     LEGAL ASCII CHAR
      SSA,RSS 
      JMP INVAL     NO
      ADA B100      CHECK LOWER LIMIT 
      SSA 
INVAL CLA           INVALID, REPLACE BY SPACE 
      STA CHRCD 
      ALS 
      ADA CHRCD     * 3 
      ADA TABEL     THIS IS THE CORRECT ADDRESS 
      STA CHRCD 
      LDA MD3       SET UP :
      STA CNT3      3 WORD COUNTER
      LDA LOC       GET GUN LOCATION
CHA2  LDB MD16      SET UP :
      STB CNT16     16 BIT COUNTER
      LDB MD8 
      STB CNT8      8 BIT COUNTER 
      LDB CHRCD,I   GET A LIBRARY WORD
      ISZ CHRCD 
CHA3  SSB,RSS       BIT SET ? 
      JMP CHA4      NO, GO TO NEXT
      STA POB,I     YES, STORE VALUE IN OUTPUT BUFFER 
      ISZ POB 
CHA4  RBL           POSITION NEXT BIT 
      ADA MB400     DECREMENT Y 
      ISZ CNT16     16 BITS DONE ?
      JMP CHA5      NO
      ADA B4001     YES, RESET Y, INC X 
      ISZ CNT3      ALL THREE WORDS DONE ?
      JMP CHA2      NO
      ADA D2        YES, ADD SPACE
      STA LOC       SAVE AS NEXT GUN
* 
**   OUTPUT THE CHARACTER 
* 
      LDB POB       CALCULATE THE LENGTH
      LDA .OB 
      STA POB       RESET THE POINTER 
      CMA,INA 
      ADA B         DIFFERENCE IS LENGTH
      STA LOB       SAVE AS BUFFER LENGTH 
      JSB EXEC      GO OUTPUT IT
      DEF *+5 
      DEF D2
      DEF .LU,I 
.OB   DEF OB
      DEF LOB 
      LDA LOC 
      AND B377      ISOLATE X 
      ADA MB370     ROOM ENOUGH ? 
      SSA,RSS 
      JSB CRLF      NO, DO CR/LF
CHA6  ISZ CHCNT     FINISHED ?
      JMP CHA1      RETURN TO DO NEXT XHAR
FINIS LDA CRLFF     CR/LF TO DO ? 
      SSA,RSS 
      JSB CRLF      YES, DO IT
      JMP CHAR,I
CHA5  ISZ CNT8      8 BITS DONE ? 
      JMP CHA3      NO
      ADA B4001     YES RESET Y, INC X
      JMP CHA3
* 
** DO A CR/LF AND CHECK FOR END OF PAGE 
* 
CRLF  NOP 
      LDA LOC 
      AND MB400     ISOLATE Y 
      CLE 
      ADA B172D     STILL ROOM ENOUGH ON PAGE 
      SEZ,RSS       E SET ? 
      JMP EOP       NO, END OF PAGE 
      IOR SAVX      ADD OLD GUN 
      STA LOC       THIS IS NEW GUN 
      CLE 
      ADA B172D     CHECK IF STILL ROOM FOR CHAR
      SEZ           E SET ? 
      JMP CRLF,I    YES, STILL ROOM ENOUGH
* 
**   END OF PAGE : SUSPEND THE PROGRAM
* 
EOP   NOP
*** 
*** Modified by RSV: removed EOP screen erase
***
      JMP CRLF,I
*** 
*** Modified by RSV: removed EOP screen erase
***
      LDB XEQT      GET CURRENT PROGRAM ID ADDRESS
      ADB D12       POSITION FOR NAME 
      LDA B,I       GET FIRST PART
      STA BU1 
      INB 
      LDA B,I       GET SECOND PART 
      STA BU1+1 
      INB 
      LDA B,I       GET LAST PART 
      AND M1774     ISOLATE 5TH CHAR
      IOR B40       ADD A SPACE 
      STA BU1+2 
      JSB EXEC      AND GO TELL THE OPERATOR
      DEF *+5       THAT WE WILL SUSPEND THE
      DEF D2        PROGRAM UNTIL HE HAS
      DEF D1        READ THE CURRENT PAGE 
      DEF BU        BEFORE WE WILL ERASE !! 
      DEF LBU 
      JSB EXEC      SUSPEND THE PROGRAM ! 
      DEF *+2 
      DEF D7
      JSB ERASE 
      DEF *+2 
      DEF .LU,I     DO A ERASE WITH SUSPENTION
      LDA SAVY      MAKE NEW GUN
      IOR SAVX
      STA LOC 
      JMP CRLF,I
      SKP 
* 
**
**      SUBROUTINE TO ASK WHERE NEXT CHARACTER WILL BE
**   DISPLAYED. 
**   CALLING SEQUENCE : 
**      CALL WHERE(IX,IY) 
**         IX,IY = COORDINATES OF NEXT CHARACTER
**
* 
IX    BSS 1 
IY    BSS 1 
WHERE NOP 
      JSB .ENTR 
      DEF IX
      LDA LOC       GET THE LOCATION
      AND B377
      STA IX,I      SET IT IN PROG
      LDA LOC 
      ALF,ALF 
      AND B377
      STA IY,I
      JMP WHERE,I 
      SKP 
* 
**   *****   D A T A   *****
* 
B     EQU 1 
XEQT  EQU 1717B 
* 
MD1   DEC -1
MD3   DEC -3
MD8   DEC -8
MD16  DEC -16 
MB140 OCT -140
MB370 OCT -370
MB400 OCT -400
* 
D1    DEC 1 
D2    DEC 2 
D7    DEC 7 
D12   DEC 12
B40   OCT 40
B100  OCT 100 
B177  OCT 177 
B377  OCT 377 
B4001 OCT 4001
M1774 OCT 177400
B172D OCT 172000
* 
LBU   DEC -18 
BU    ASC 4,E-O-P : 
BU1   BSS 3 
BU2   ASC 2,SUSP
LOC   BSS 1 
CRLFF BSS 1 
CHCNT BSS 1 
CHRCD BSS 1 
CNT3  BSS 1 
CNT8  BSS 1 
CNT16 BSS 1 
SAVX  BSS 1 
SAVY  BSS 1 
OB    BSS 26
POB   BSS 1 
LOB   BSS 1 
      HED <ASCII CHARACTER LIBRARY> 
* 
**   THE FOLLOWING IS THE CHARACTER LIBRARY.  THE FIRST ENTRY IS
**   THE SYMBOL FOR AN UNKNOWN CHARACTER CODE. THE REMAINING
**   ENTRIES ARE IN STANDARD ASCII NUMERICAL ORDER. 
* 
********** DO NOT REARRANGE THIS TABLE ********** 
* 
      SUP 
TABEL DEF *+1       STARTING ADDRESS OF CHAR LIBRARY. 
* 
      OCT 0,0,0 
EXCL  OCT 1,174401,0
QUOTE OCT 360,0,170000
POUND OCT 22377,22044,177444
DOLR  OCT 61221,177621,47000
PRCNT OCT 41244,44022,22502 
AMP   OCT 7161,110632,63011 
APOST OCT 20,160100,0 
OPRN  OCT 74,41201,100400 
CPRN  OCT 201,100502,36000
AST   OCT 44452,16034,25111 
PLUS  OCT 10,4076,4010
COMMA OCT 1,416,2000
MINUS OCT 10,4010,4010
PER   OCT 2,3402,0
DIV   OCT 1004,4020,20100 
ZERO  OCT 36102,100601,41074
ONE   OCT 501,177401,400
TWO   OCT 40603,102611,110541 
THREE OCT 41201,100621,124506 
FOUR  OCT 6024,22104,177404 
FIVE  OCT 170621,110621,110616
SIX   OCT 17045,44611,4406
SEVEN OCT 100200,107620,120300
EIGHT OCT 67221,110621,110556 
NINE  OCT 60221,110621,111174 
COLON OCT 0,41347,41000 
SEMI  OCT 1,147304,0
LESS  OCT 20,24104,101000 
EQUAL OCT 44,22044,22044
GREAT OCT 202,42050,10000 
QUES  OCT 40201,105621,110140 
AT    OCT 77201,114645,114570 
AEE   OCT 37510,104210,44077
BEE   OCT 177621,110621,110556
C     OCT 77201,100601,100546 
D     OCT 100777,100601,100576
E     OCT 177621,110621,110601
F     OCT 177620,110220,100200
G     OCT 77201,100611,104516 
H     OCT 177420,10020,10377
I     OCT 100601,177601,100400
J     OCT 3001,401,776
K     OCT 177410,14044,41201
L     OCT 177401,401,401
M     OCT 177500,34070,40377
N     OCT 177440,10010,2377 
O     OCT 77201,100601,100576 
P     OCT 177610,104210,104160
Q     OCT 77201,100605,101175 
R     OCT 177610,104214,105161
S     OCT 61221,110621,104506 
T     OCT 100200,177600,100000
U     OCT 177001,401,776
V     OCT 160034,1403,16340 
W     OCT 177402,16034,1377 
X     OCT 141444,14030,22303
Y     OCT 140040,17437,20300
Z     OCT 101605,104621,120701
OBRAK OCT 377,100601,100400 
SLANT OCT 40040,10010,2002
BRAK2 OCT 201,100601,177400 
UPARO OCT 40,40377,40040
BKARO OCT 10070,52020,10020 
* 
CH#R  EQU CHAR              BORROWED BY RSV FROM TV INTERFACE SOURCE TO AVOUD NAME COLISION WITH CHAR ON RTE-B
*
* 
**
**      SUBROUTINE TO OUTPUT CHARACTERS ON A 1331C STORAGE SCOPE. 
**      TO BE CALLED FROM BASIC. Roberto Sancho Apr/2017
**
**   CALLING SEQUENCE : 
**      CALL CHARS(LU,IX,IY,IASC)
**         LU = LOGICAL UNIT NUMBER OF SCOPE
**         IX,IY = COORDINATES OF UPPER LEFT POINT OF FIRST CHAR
**         IASC = BASIC LITERAL OR STRING VARIABLE ADDR (LENGHT IN FIRST WORD)
**
* 
.LU1  BSS 1 
.X1   BSS 1 
.Y1   BSS 1 
IASC  BSS 1 
CHARS NOP 
      JSB .ENTR 
      DEF .LU1
*
      LDA IASC,I   GET STRING LEN
      AND B377     ISOLATE 
      STA IALEN
      ISZ IASC     SKIP LEN
*... CALL CHAR LIBRARY ROUTINE ...
      SPC 1 
      JSB CH#R     CALL 
      DEF *+6       THE 
      DEF .LU1,I      ACTUAL 
      DEF .X1,I        CHAR
      DEF .Y1,I         LIBRARY
      DEF IASC,I         ROUTINE.
      DEF IALEN      
*
      JMP CHARS,I    AND RETURN
* 
TEMP  BSS 1
IALEN BSS 1
      END 
