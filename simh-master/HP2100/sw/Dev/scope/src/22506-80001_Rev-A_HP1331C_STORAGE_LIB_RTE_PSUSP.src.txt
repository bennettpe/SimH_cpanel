ASMB,R,B,L
      NAM PSUSP,7 
      ENT PSUSP 
      EXT .ENTR,EXEC
* 
**
**      WITH THIS SUBROUTINE YOU CAN SUSPEND A PROGRAM FOR
**   A CERTAIN TIME. THE SUBROUTINE CHECKS IF THE PROGRAM 
**   WAS IN THE TIME LIST, AND IN THIS CASE THE OLD TIME
**   VALUES ARE RESTORED. IF THE CURRENT TIME IS LARGER 
**   THAN THE OLD VALUES, THE SUBROUTINE MAKES THE
**   NESSESARY CORRECTIONS (ADDS THE MULTIPLE) UNTIL
**   THE NEXT TIME IS LARGER THAN THE CURRENT TIME. 
**      CALLING SEQUENCE :
**      CALL PSUSP(IRES,IMUL) 
**   WHERE :
**      IRES : TIME RESOLUTION : 1 = 10 MS
**                                2 = SECONDS   ETC...
**      IMUL : MULTIPLE 0-999 
**
**                     WIM ROELANDTS, HP BRUSSELS 
**
* 
      SKP 
RES   BSS 1 
MUL   BSS 1 
PSUSP NOP 
      JSB .ENTR 
      DEF RES 
* 
      JSB EXEC
      DEF *+3 
      DEF D11       GET THE TIME
.ITIM DEF ITIM
      LDA ITIM+4
      STA SDAY      SAVE THE DAY
      LDA XEQT      GET CURRENT ID ADDRESS
      ADA D17       SET TO TIME VALUES
      STA POIN
      LDA POIN,I
      ALF,RAR 
      STA TL        SAVE TIME LIST BIT
      AND D7        THIS IS RESOLUTION
      STA SRES      SAVE IT 
      LDA POIN,I    GET MULTIPLE
      AND B7777 
      STA SMUL
      ISZ POIN
      LDA POIN,I    GET MILLI SECS
      ADA D100      POSITIF 
      STA SMSEC 
      ISZ POIN
      LDA POIN,I    GET SECONDS 
      ADA D60 
      STA SSEC
      ISZ POIN
      LDA POIN,I    GET MINUTES 
      ADA D60 
      STA SMIN
      ISZ POIN
      LDA POIN,I
      ADA D24       GET HOURS 
      STA SHR 
      LDA MUL,I     GET THE MULTIPLE
      SSA,RSS 
      CMA,INA       IN EACH CASE NEGATIF
      SZA,RSS       MAY NOT BE POSITIF
      CCA           REPLACE BY -1 IF ZERO 
      STA MUL 
      JSB EXEC      SUSPEND THE PROGRAM FOR 1 SECOND
      DEF *+6 
      DEF D12 
      DEF D0
      DEF RES,I 
      DEF D0
      DEF MUL 
      LDA TL        WAS THE PROGRAM IN THE TIME LIST
      SSA,RSS 
      JMP PSUSP,I   NO, RETURN
ER1   JSB EXEC      GET THE TIME
      DEF *+3 
      DEF D11 
      DEF ITIM
      ISZ ITIM      BUMP MILLI SECS 
      LDA MD5       SEE IF CURRENT TIME 
      STA CNT       IS LOWER THAN NEXT EXEC TIME
      LDA .BUE
      ADA D4
      STA PBUE      SET EXEC TIME POINTER 
      LDB .ITIM 
      ADB D4        SET CURRENT POINTER 
ER2   LDA B,I       GET CURRENT TIME
      CMA,INA       NEGATIF 
      ADA PBUE,I    ADD EXEC TIME 
      SSA           EXEC > CURRENT ?
      JMP ER3       NO, SO GO BUMP EXEC TIME
      SZA           EXEC = CURRENT
      JMP ER5       NO, SO MUST BE GREATER, OK!!
      CCA           YES, TEST NEXT ONE
      ADA PBUE
      STA PBUE
      ADB MD1 
      ISZ CNT       ALL DONE
      JMP ER2 
ER3   CCA           YES, SO EXEC<= CURRENT
      ADA .BUE      BUMP EXEC TIME
      ADA SRES
      STA PBUE
      LDB .COBU     SET CONSTANT BUFFER POINTER 
      ADB SRES
      STB PCOBU 
      LDA SMUL      GET MULTIPLE
ER4   CLB 
      ADA PBUE,I
      STA PBUE,I    SAVE NEW VALUE
      DIV PCOBU,I   DIVIDE BY MAX 
      SZA,RSS       BELOW MAX ? 
      JMP ER1       YES, CHECK AGAIN
      STB PBUE,I    SAVE REMAINDER AS NEW VALUE 
      ISZ PBUE      BUMP POINTERS 
      ISZ PCOBU 
      JMP ER4       AND UPDATE THE REST 
ER5   JSB EXEC      ALL OK, RESTORE THE TIME VALUES 
      DEF *+9 
      DEF D12 
      DEF D0
      DEF SRES
      DEF SMUL
      DEF SHR 
      DEF SMIN
      DEF SSEC
      DEF SMSEC 
      JMP PSUSP,I   AND RETURN/E
      SKP 
* 
**   *****   D A T A     *****
* 
B     EQU 1 
XEQT  EQU 1717B 
* 
D0    DEC 0 
D4    DEC 4 
D7    DEC 7 
D11   DEC 11
D12   DEC 12
D17   DEC 17
MD1   DEC -1
MD5   DEC -5
D100  DEC 100 
D60   DEC 60
      DEC 60
D24   DEC 24
B7777 OCT 7777
* 
.COBU DEF D100-1
.BUE  DEF SMSEC 
* 
TL    BSS 1 
POIN  BSS 1 
PBUE  BSS 1 
CNT   EQU TL
PCOBU EQU POIN
SRES  BSS 1 
SMUL  BSS 1 
SMSEC BSS 1 
SSEC  BSS 1 
SMIN  BSS 1 
SHR   BSS 1 
SDAY  BSS 1 
ITIM  BSS 5 
      END 
