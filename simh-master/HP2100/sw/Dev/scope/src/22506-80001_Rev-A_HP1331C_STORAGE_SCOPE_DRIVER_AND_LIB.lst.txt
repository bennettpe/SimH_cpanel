
*
--> Assemble RSFLG
PTP: creating new file
LG,40

*ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L,F
**  NO ERRORS*





























































 PAGE 0002 #01  <<SAVE RESOURCES FLAG ROUTINE>> 


0001                ASMB,R,B,L,F
0003  00000               NAM RSFLG,7 
0004* 
0005                      ENT RSFLG,#RSFG 
0006                      EXT .ENTR 
0007* 
0008* 
0009*  THIS ROUTINE IS USED BY CERTAIN BASIC DEVICES SUBROUTINES TO 
0010*   SET A FLAG(#RSFG). THIS FLAG IS INTEROGATED BY 'CALSB' WHICH IS 
0011*   THE BASIC SUBROUTINE PARAMETER PASSING MODULE. IF THIS
0012*   FLAG IS SET BY CALLING THIS ROUTINE THEN BASIC WILL 
0013*   PERFORM A SAVE RESOURCES TERMINATION. IF THIS ROUTINE IS NOT
0014*   CALLED (WHICH IS THE NORMAL CASE) THEN BASIC WILL PERFORM A 
0015*   SERIAL RE-USABLE TERMINATION. 
0016* 
0017*  THE ROUTINES THAT NEED TO CALL THIS ROUTINE ARE DEFINED AS 
0018*   THOSE THAT STORE VARIABLES LOCALLY OR MODIFY THEMSELVES IN
0019*   ANY WAY WHAT-SO-EVER. AN EXAMPLE OF THIS WHERE A USER CALLS 
0020*   A DEVICE SUBROUTINE TO STORE A DEVICE LOGICAL UNIT NUMBER 
0021*   LOCALLY FOR USE BY SUBSEQUENT SUBROUTINE CALLS. 
0022* 
0023* 
0024  00000 000000  RSFLG NOP 
0025  00001 016001X       JSB .ENTR 
0026  00002 000000R       DEF RSFLG 
0027  00003 002404        CLA,INA       SET FLAG FOR SAVE RESOURCE
0028  00004 072006R       STA #RSFG       TERMINATION 
0029  00005 126000R       JMP RSFLG,I 
0030* 
0031  00006 177777  #RSFG DEC -1
0032                      END 
**  NO ERRORS*
























$END ASMB     

*
--> Assemble 22505-80001_Rev-A_HP1331C_STORAGE_SCOPE_DRIVER_FOR_RTE_DVR47
PTP: creating new file
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01  <1331C STORAGE SCOPE RTE DRIVER - WR> 


0001                ASMB,R,B,L
0003  00000               NAM DVR47 
0004                      ENT I.47,C.47 
0005* 
0006**
0007**     THIS DRIVER FOR A 1331C STORAGE OSCILLOSCOPE DOES NOT
0008**   WORK UNDER INTERRUPT. IN ORDER NOT TO BLOCK HIGHER PRIORITY
0009**   DEVICES, KEEP THE BUFFER LENGTH SMALL !
0010**
0011**   WRITE :
0012**      JSB EXEC
0013**      DEF *+5 
0014**      DEF RECOD    -> = DEC 2 
0015**      DEF IFUN     -> = LOGICAL UNIT NUMBER 
0016**      DEF BUF      -> = BUFFER WHICH CONTAINS PACKED DATA (X&Y) 
0017**      DEF LEN      -> = LENGTH (POS = WORDS, NEG = CHARS) 
0018**       <- NORMAL RETURN 
0019**
0020**   ERASE :
0021**      JSB EXEC
0022**      DEF *+3 
0023**      DEF RECOD    -> = DEC 3 (CONTROL REQUEST) 
0024**      DEF IFUN    -> = OCT 20XX  (XX = LU#) 
0025**       <- NORMAL RETURN 
0026**   THE PROGRAM MUST SUSPEND ITSELF DURING 1 SECOND, SO THAT THE 
0027**   ERASE CAN BE DONE. 
0028**
0029**                                WIM ROELANDTS, HP BRUSSELS
0030**
0031* 
0032  00000 000000  I.47  NOP 
0033* 
0034** CONFIGURE THE DRIVER 
0035* 
0036  00001 032065R       IOR COTA      MAKE OTA
0037  00002 072030R       STA OTA1
0038  00003 042062R       ADA B300      MAKE CLF
0039  00004 072050R       STA CLF1
0040* 
0041  00005 161665        LDA EQT6,I    GET REQUEST CODE
0042  00006 012061R       AND B77 
0043  00007 052056R       CPA D2        WRITE ? 
0044  00010 026015R       JMP WRIT      YES, GO DO IT 
0045  00011 052057R       CPA D3        CONTROL (ERASE)?
0046  00012 026042R       JMP CONTR 
0047  00013 002404        CLA,INA       NONE OF THESE, REJECT 
0048  00014 126000R       JMP I.47,I
0049* 
0050** DO OUTPUT
0051* 
0052  00015 161666  WRIT  LDA EQT7,I    GET BUFFER ADDRESS
0053  00016 072066R       STA POIN      SAVE IN POINTER 
0054  00017 161667        LDA EQT8,I    GET LENGTH
0055  00020 002003        SZA,RSS       ZERO ?
0056  00021 026033R       JMP FIN       YES, TERMINATE
0057  00022 002021        SSA,RSS       WORDS OR CHARS ?







 PAGE 0003 #01  <1331C STORAGE SCOPE RTE DRIVER - WR> 


0058  00023 003005        CMA,INA,RSS   WORDS, MAKE NEGATIF 
0059  00024 001100        ARS           CHARS, DIVIDE BY 2
0060  00025 072067R       STA LEN       SAVE AS COUNTER 
0061* 
0062  00026 162066R GO    LDA POIN,I    GET A DATA
0063  00027 036066R       ISZ POIN      BUMP POINTER
0064  00030 102600  OTA1  OTA 0         GET IT OUT
0065  00031 036067R       ISZ LEN       ALL DONE ?
0066  00032 026026R       JMP GO        NO, CONTINUE
0067  00033 165667  FIN   LDB EQT8,I    YES, TERMINATE
0068  00034 006021        SSB,RSS       MAKE LOG
0069  00035 026040R       JMP *+3 
0070  00036 005100        BRS 
0071  00037 007004        CMB,INB 
0072  00040 062060R RET4  LDA D4        DO IMMEDIATE COMPLETION 
0073  00041 126000R       JMP I.47,I















































 PAGE 0004 #01  <1331C STORAGE SCOPE RTE DRIVER - WR> 


0075* 
0076** DO ERASE 
0077* 
0078  00042 161665  CONTR LDA EQT6,I    GET RQUEST CODE 
0079  00043 012063R       AND B177H     ISOLATE FUNCTION
0080  00044 052064R       CPA B2000     FOR THIS ONE ?
0081  00045 026050R       JMP CLF1      YES, GO DO IT 
0082  00046 062056R       LDA D2        NO, REJECT
0083  00047 126000R       JMP I.47,I
0084* 
0085  00050 103100  CLF1  CLF 0 
0086  00051 006400        CLB 
0087  00052 026040R       JMP RET4


0089* 
0090** DUMMY CONTINUATOR
0091* 
0092  00053 000000  C.47  NOP 
0093  00054 002404        CLA,INA 
0094  00055 126053R       JMP C.47,I










































 PAGE 0005 #01  <1331C STORAGE SCOPE RTE DRIVER - WR> 


0096* 
0097**     ***   D A T A   ***
0098* 
0099  00056 000002  D2    DEC 2 
0100  00057 000003  D3    DEC 3 
0101  00060 000004  D4    DEC 4 
0102  00061 000077  B77   OCT 77
0103  00062 000300  B300  OCT 300 
0104  00063 017700  B177H OCT 17700 
0105  00064 002000  B2000 OCT 2000
0106  00065 102600  COTA  OTA 0 
0107  00066 000000  POIN  NOP 
0108  00067 000000  LEN   NOP 
0109* 
0110  01665         EQT6  EQU 1665B 
0111  01666         EQT7  EQU 1666B 
0112  01667         EQT8  EQU 1667B 
0113                      END 
**  NO ERRORS*





































$END ASMB     

*LG,40

*
--> Assemble 22506-80001_Rev-A_HP1331C_STORAGE_LIB_RTE_CHAR
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01  <CHARACTER GENERATOR - RTE> 


0001                ASMB,R,B,L
0003  00000               NAM CHAR,7
0004                      ENT CHAR,CH#R,CHARS,WHERE 
0005                      EXT EXEC,.ENTR,ERASE
0006* 
0007**
0008**      SUBROUTINE TO OUTPUT CHARACTERS ON A 1331C STORAGE SCOPE. 
0009**   CALLING SEQUENCE : 
0010**      CALL CHAR(LU,IX,IY,IASC,N)
0011**         LU = LOGICAL UNIT NUMBER OF SCOPE
0012**         IX,IY = COORDINATES OF UPPER LEFT POINT OF FIRST CHAR
0013**         IASC = ADDRESS OF ASCII BUFFER 
0014**         N = NUMBER OF CHARACTERS : 
0015**             IF > 0 : OUTPUT N CHARS + CR/LF
0016**                = 0 : OUTPUT CR/LF ONLY 
0017**                < 0 : OUTPUT N CHARS (WITHOUT CR/LF)
0018**
0019**                              WIM ROELANDTS, HP BRU 
0020**
0021* 
0022  00000 000000  .LU   BSS 1 
0023  00001 000000  .X    BSS 1 
0024  00002 000000  .Y    BSS 1 
0025  00003 000000  .BUF  BSS 1 
0026  00004 000000  NUM   BSS 1 
0027  00005 000000  CHAR  NOP 
0028  00006 016002X       JSB .ENTR 
0029  00007 000000R       DEF .LU 
0030  00010 162004R       LDA NUM,I 
0031  00011 072271R       STA CRLFF     SAVE AS FLAG
0032  00012 002002        SZA           ONLY  CR/LF ? 
0033  00013 026016R       JMP CH1       NO, CONTINUE
0034  00014 016144R       JSB CRLF      YES, GO DO IT 
0035  00015 126005R       JMP CHAR,I    AND RETURN
0036* 
0037**  MAKE CHARACTER COUNTER
0038* 
0039  00016 002021  CH1   SSA,RSS       NEG ? 
0040  00017 003004        CMA,INA       NO, MAKE NEG
0041  00020 072272R       STA CHCNT 
0042* 
0043**   MAKE STARTING LOCATION 
0044* 
0045  00021 162001R       LDA .X,I      GET X 
0046  00022 012252R       AND B377      TRUNCATE
0047  00023 072277R       STA SAVX      SAVE FOR LATER
0048  00024 162002R       LDA .Y,I
0049  00025 012252R       AND B377
0050  00026 001727        ALF,ALF 
0051  00027 072300R       STA SAVY
0052  00030 032277R       IOR SAVX
0053  00031 072270R       STA LOC       THIS IS OUR STARTING LOCATION 
0054* 
0055**   SET BUFFER POINTERS
0056* 
0057  00032 062003R       LDA .BUF







 PAGE 0003 #01  <CHARACTER GENERATOR - RTE> 


0058  00033 000066        CLE,ELA 
0059  00034 072003R       STA .BUF      SET UPPER/LOWER FLAG
0060  00035 062123R       LDA .OB 
0061  00036 072333R       STA POB 
0062  00037 066003R CHA1  LDB .BUF
0063  00040 004065        CLE,ERB 
0064  00041 160001        LDA B,I 
0065  00042 002041        SEZ,RSS       UPPER ? 
0066  00043 001727        ALF,ALF 
0067  00044 012251R       AND B177      ISOLATE CHAR
0068  00045 036003R       ISZ .BUF      BUMP POINTER
0069* 
0070** NOW WE HAVE CHAR : FIND DOTS 
0071* 
0072  00046 002003        SZA,RSS       CHAR IS ASCII 0?
0073  00047 026037R       JMP CHA1      YES, SKIP THIS CHAR 
0074  00050 042240R       ADA MB140     LEGAL ASCII CHAR
0075  00051 002021        SSA,RSS 
0076  00052 026055R       JMP INVAL     NO
0077  00053 042250R       ADA B100      CHECK LOWER LIMIT 
0078  00054 002020        SSA 
0079  00055 002400  INVAL CLA           INVALID, REPLACE BY SPACE 
0080  00056 072273R       STA CHRCD 
0081  00057 001000        ALS 
0082  00060 042273R       ADA CHRCD     * 3 
0083  00061 042335R       ADA TABEL     THIS IS THE CORRECT ADDRESS 
0084  00062 072273R       STA CHRCD 
0085  00063 062235R       LDA MD3       SET UP :
0086  00064 072274R       STA CNT3      3 WORD COUNTER
0087  00065 062270R       LDA LOC       GET GUN LOCATION
0088  00066 066237R CHA2  LDB MD16      SET UP :
0089  00067 076276R       STB CNT16     16 BIT COUNTER
0090  00070 066236R       LDB MD8 
0091  00071 076275R       STB CNT8      8 BIT COUNTER 
0092  00072 166273R       LDB CHRCD,I   GET A LIBRARY WORD
0093  00073 036273R       ISZ CHRCD 
0094  00074 006021  CHA3  SSB,RSS       BIT SET ? 
0095  00075 026100R       JMP CHA4      NO, GO TO NEXT
0096  00076 172333R       STA POB,I     YES, STORE VALUE IN OUTPUT BUFFE
0097  00077 036333R       ISZ POB 
0098  00100 005200  CHA4  RBL           POSITION NEXT BIT 
0099  00101 042242R       ADA MB400     DECREMENT Y 
0100  00102 036276R       ISZ CNT16     16 BITS DONE ?
0101  00103 026140R       JMP CHA5      NO
0102  00104 042253R       ADA B4001     YES, RESET Y, INC X 
0103  00105 036274R       ISZ CNT3      ALL THREE WORDS DONE ?
0104  00106 026066R       JMP CHA2      NO
0105  00107 042244R       ADA D2        YES, ADD SPACE
0106  00110 072270R       STA LOC       SAVE AS NEXT GUN
0107* 
0108**   OUTPUT THE CHARACTER 
0109* 
0110  00111 066333R       LDB POB       CALCULATE THE LENGTH
0111  00112 062123R       LDA .OB 
0112  00113 072333R       STA POB       RESET THE POINTER 
0113  00114 003004        CMA,INA 







 PAGE 0004 #01  <CHARACTER GENERATOR - RTE> 


0114  00115 040001        ADA B         DIFFERENCE IS LENGTH
0115  00116 072334R       STA LOB       SAVE AS BUFFER LENGTH 
0116  00117 016001X       JSB EXEC      GO OUTPUT IT
0117  00120 000125R       DEF *+5 
0118  00121 000244R       DEF D2
0119  00122 100000R       DEF .LU,I 
0120  00123 000301R .OB   DEF OB
0121  00124 000334R       DEF LOB 
0122  00125 062270R       LDA LOC 
0123  00126 012252R       AND B377      ISOLATE X 
0124  00127 042241R       ADA MB370     ROOM ENOUGH ? 
0125  00130 002021        SSA,RSS 
0126  00131 016144R       JSB CRLF      NO, DO CR/LF
0127  00132 036272R CHA6  ISZ CHCNT     FINISHED ?
0128  00133 026037R       JMP CHA1      RETURN TO DO NEXT XHAR
0129  00134 062271R FINIS LDA CRLFF     CR/LF TO DO ? 
0130  00135 002021        SSA,RSS 
0131  00136 016144R       JSB CRLF      YES, DO IT
0132  00137 126005R       JMP CHAR,I
0133  00140 036275R CHA5  ISZ CNT8      8 BITS DONE ? 
0134  00141 026074R       JMP CHA3      NO
0135  00142 042253R       ADA B4001     YES RESET Y, INC X
0136  00143 026074R       JMP CHA3
0137* 
0138** DO A CR/LF AND CHECK FOR END OF PAGE 
0139* 
0140  00144 000000  CRLF  NOP 
0141  00145 062270R       LDA LOC 
0142  00146 012242R       AND MB400     ISOLATE Y 
0143  00147 000040        CLE 
0144  00150 042255R       ADA B172D     STILL ROOM ENOUGH ON PAGE 
0145  00151 002041        SEZ,RSS       E SET ? 
0146  00152 026161R       JMP EOP       NO, END OF PAGE 
0147  00153 032277R       IOR SAVX      ADD OLD GUN 
0148  00154 072270R       STA LOC       THIS IS NEW GUN 
0149  00155 000040        CLE 
0150  00156 042255R       ADA B172D     CHECK IF STILL ROOM FOR CHAR
0151  00157 002040        SEZ           E SET ? 
0152  00160 126144R       JMP CRLF,I    YES, STILL ROOM ENOUGH
0153* 
0154**   END OF PAGE : SUSPEND THE PROGRAM
0155* 
0156  00161 000000  EOP   NOP 
0157*** 
0158*** MODIFIED BY RSV: REMOVED EOP SCREEN ERASE 
0159*** 
0160  00162 126144R       JMP CRLF,I
0161*** 
0162*** MODIFIED BY RSV: REMOVED EOP SCREEN ERASE 
0163*** 
0164  00163 065717        LDB XEQT      GET CURRENT PROGRAM ID ADDRESS
0165  00164 046246R       ADB D12       POSITION FOR NAME 
0166  00165 160001        LDA B,I       GET FIRST PART
0167  00166 072263R       STA BU1 
0168  00167 006004        INB 
0169  00170 160001        LDA B,I       GET SECOND PART 







 PAGE 0005 #01  <CHARACTER GENERATOR - RTE> 


0170  00171 072264R       STA BU1+1 
0171  00172 006004        INB 
0172  00173 160001        LDA B,I       GET LAST PART 
0173  00174 012254R       AND M1774     ISOLATE 5TH CHAR
0174  00175 032247R       IOR B40       ADD A SPACE 
0175  00176 072265R       STA BU1+2 
0176  00177 016001X       JSB EXEC      AND GO TELL THE OPERATOR
0177  00200 000205R       DEF *+5       THAT WE WILL SUSPEND THE
0178  00201 000244R       DEF D2        PROGRAM UNTIL HE HAS
0179  00202 000243R       DEF D1        READ THE CURRENT PAGE 
0180  00203 000257R       DEF BU        BEFORE WE WILL ERASE !! 
0181  00204 000256R       DEF LBU 
0182  00205 016001X       JSB EXEC      SUSPEND THE PROGRAM ! 
0183  00206 000210R       DEF *+2 
0184  00207 000245R       DEF D7
0185  00210 016003X       JSB ERASE 
0186  00211 000213R       DEF *+2 
0187  00212 100000R       DEF .LU,I     DO A ERASE WITH SUSPENTION
0188  00213 062300R       LDA SAVY      MAKE NEW GUN
0189  00214 032277R       IOR SAVX
0190  00215 072270R       STA LOC 
0191  00216 126144R       JMP CRLF,I









































 PAGE 0006 #01  <CHARACTER GENERATOR - RTE> 


0193* 
0194**
0195**      SUBROUTINE TO ASK WHERE NEXT CHARACTER WILL BE
0196**   DISPLAYED. 
0197**   CALLING SEQUENCE : 
0198**      CALL WHERE(IX,IY) 
0199**         IX,IY = COORDINATES OF NEXT CHARACTER
0200**
0201* 
0202  00217 000000  IX    BSS 1 
0203  00220 000000  IY    BSS 1 
0204  00221 000000  WHERE NOP 
0205  00222 016002X       JSB .ENTR 
0206  00223 000217R       DEF IX
0207  00224 062270R       LDA LOC       GET THE LOCATION
0208  00225 012252R       AND B377
0209  00226 172217R       STA IX,I      SET IT IN PROG
0210  00227 062270R       LDA LOC 
0211  00230 001727        ALF,ALF 
0212  00231 012252R       AND B377
0213  00232 172220R       STA IY,I
0214  00233 126221R       JMP WHERE,I 









































 PAGE 0007 #01  <CHARACTER GENERATOR - RTE> 


0216* 
0217**   *****   D A T A   *****
0218* 
0219  00001         B     EQU 1 
0220  01717         XEQT  EQU 1717B 
0221* 
0222  00234 177777  MD1   DEC -1
0223  00235 177775  MD3   DEC -3
0224  00236 177770  MD8   DEC -8
0225  00237 177760  MD16  DEC -16 
0226  00240 177640  MB140 OCT -140
0227  00241 177410  MB370 OCT -370
0228  00242 177400  MB400 OCT -400
0229* 
0230  00243 000001  D1    DEC 1 
0231  00244 000002  D2    DEC 2 
0232  00245 000007  D7    DEC 7 
0233  00246 000014  D12   DEC 12
0234  00247 000040  B40   OCT 40
0235  00250 000100  B100  OCT 100 
0236  00251 000177  B177  OCT 177 
0237  00252 000377  B377  OCT 377 
0238  00253 004001  B4001 OCT 4001
0239  00254 177400  M1774 OCT 177400
0240  00255 172000  B172D OCT 172000
0241* 
0242  00256 177756  LBU   DEC -18 
0243  00257 042455  BU    ASC 4,E-O-P : 
      00260 047455  
      00261 050040  
      00262 035040  
0244  00263 000000  BU1   BSS 3 
0245  00266 051525  BU2   ASC 2,SUSP
      00267 051520  
0246  00270 000000  LOC   BSS 1 
0247  00271 000000  CRLFF BSS 1 
0248  00272 000000  CHCNT BSS 1 
0249  00273 000000  CHRCD BSS 1 
0250  00274 000000  CNT3  BSS 1 
0251  00275 000000  CNT8  BSS 1 
0252  00276 000000  CNT16 BSS 1 
0253  00277 000000  SAVX  BSS 1 
0254  00300 000000  SAVY  BSS 1 
0255  00301 000000  OB    BSS 26
0256  00333 000000  POB   BSS 1 
0257  00334 000000  LOB   BSS 1 

















 PAGE 0008 #01  <ASCII CHARACTER LIBRARY> 


0259* 
0260**   THE FOLLOWING IS THE CHARACTER LIBRARY.  THE FIRST ENTRY IS
0261**   THE SYMBOL FOR AN UNKNOWN CHARACTER CODE. THE REMAINING
0262**   ENTRIES ARE IN STANDARD ASCII NUMERICAL ORDER. 
0263* 
0264********** DO NOT REARRANGE THIS TABLE ********** 
0265* 
0266                      SUP 
0267  00335 000336R TABEL DEF *+1       STARTING ADDRESS OF CHAR LIBRARY
0268* 
0269  00336 000000        OCT 0,0,0 
0270  00341 000001  EXCL  OCT 1,174401,0
0271  00344 000360  QUOTE OCT 360,0,170000
0272  00347 022377  POUND OCT 22377,22044,177444
0273  00352 061221  DOLR  OCT 61221,177621,47000
0274  00355 041244  PRCNT OCT 41244,44022,22502 
0275  00360 007161  AMP   OCT 7161,110632,63011 
0276  00363 000020  APOST OCT 20,160100,0 
0277  00366 000074  OPRN  OCT 74,41201,100400 
0278  00371 000201  CPRN  OCT 201,100502,36000
0279  00374 044452  AST   OCT 44452,16034,25111 
0280  00377 000010  PLUS  OCT 10,4076,4010
0281  00402 000001  COMMA OCT 1,416,2000
0282  00405 000010  MINUS OCT 10,4010,4010
0283  00410 000002  PER   OCT 2,3402,0
0284  00413 001004  DIV   OCT 1004,4020,20100 
0285  00416 036102  ZERO  OCT 36102,100601,41074
0286  00421 000501  ONE   OCT 501,177401,400
0287  00424 040603  TWO   OCT 40603,102611,110541 
0288  00427 041201  THREE OCT 41201,100621,124506 
0289  00432 006024  FOUR  OCT 6024,22104,177404 
0290  00435 170621  FIVE  OCT 170621,110621,110616
0291  00440 017045  SIX   OCT 17045,44611,4406
0292  00443 100200  SEVEN OCT 100200,107620,120300
0293  00446 067221  EIGHT OCT 67221,110621,110556 
0294  00451 060221  NINE  OCT 60221,110621,111174 
0295  00454 000000  COLON OCT 0,41347,41000 
0296  00457 000001  SEMI  OCT 1,147304,0
0297  00462 000020  LESS  OCT 20,24104,101000 
0298  00465 000044  EQUAL OCT 44,22044,22044
0299  00470 000202  GREAT OCT 202,42050,10000 
0300  00473 040201  QUES  OCT 40201,105621,110140 
0301  00476 077201  AT    OCT 77201,114645,114570 
0302  00501 037510  AEE   OCT 37510,104210,44077
0303  00504 177621  BEE   OCT 177621,110621,110556
0304  00507 077201  C     OCT 77201,100601,100546 
0305  00512 100777  D     OCT 100777,100601,100576
0306  00515 177621  E     OCT 177621,110621,110601
0307  00520 177620  F     OCT 177620,110220,100200
0308  00523 077201  G     OCT 77201,100611,104516 
0309  00526 177420  H     OCT 177420,10020,10377
0310  00531 100601  I     OCT 100601,177601,100400
0311  00534 003001  J     OCT 3001,401,776
0312  00537 177410  K     OCT 177410,14044,41201
0313  00542 177401  L     OCT 177401,401,401
0314  00545 177500  M     OCT 177500,34070,40377







 PAGE 0009 #01  <ASCII CHARACTER LIBRARY> 


0315  00550 177440  N     OCT 177440,10010,2377 
0316  00553 077201  O     OCT 77201,100601,100576 
0317  00556 177610  P     OCT 177610,104210,104160
0318  00561 077201  Q     OCT 77201,100605,101175 
0319  00564 177610  R     OCT 177610,104214,105161
0320  00567 061221  S     OCT 61221,110621,104506 
0321  00572 100200  T     OCT 100200,177600,100000
0322  00575 177001  U     OCT 177001,401,776
0323  00600 160034  V     OCT 160034,1403,16340 
0324  00603 177402  W     OCT 177402,16034,1377 
0325  00606 141444  X     OCT 141444,14030,22303
0326  00611 140040  Y     OCT 140040,17437,20300
0327  00614 101605  Z     OCT 101605,104621,120701
0328  00617 000377  OBRAK OCT 377,100601,100400 
0329  00622 040040  SLANT OCT 40040,10010,2002
0330  00625 000201  BRAK2 OCT 201,100601,177400 
0331  00630 000040  UPARO OCT 40,40377,40040
0332  00633 010070  BKARO OCT 10070,52020,10020 
0333* 
0334  00005         CH#R  EQU CHAR              BORROWED BY RSV FROM TV 
0335* 
0336* 
0337**
0338**      SUBROUTINE TO OUTPUT CHARACTERS ON A 1331C STORAGE SCOPE. 
0339**      TO BE CALLED FROM BASIC. ROBERTO SANCHO APR/2017
0340**
0341**   CALLING SEQUENCE : 
0342**      CALL CHARS(LU,IX,IY,IASC) 
0343**         LU = LOGICAL UNIT NUMBER OF SCOPE
0344**         IX,IY = COORDINATES OF UPPER LEFT POINT OF FIRST CHAR
0345**         IASC = BASIC LITERAL OR STRING VARIABLE ADDR (LENGHT IN F
0346**
0347* 
0348  00636 000000  .LU1  BSS 1 
0349  00637 000000  .X1   BSS 1 
0350  00640 000000  .Y1   BSS 1 
0351  00641 000000  IASC  BSS 1 
0352  00642 000000  CHARS NOP 
0353  00643 016002X       JSB .ENTR 
0354  00644 000636R       DEF .LU1
0355* 
0356  00645 162641R       LDA IASC,I   GET STRING LEN 
0357  00646 012252R       AND B377     ISOLATE  
0358  00647 072662R       STA IALEN 
0359  00650 036641R       ISZ IASC     SKIP LEN 
0360*... CALL CHAR LIBRARY ROUTINE ...

0362  00651 016005R       JSB CH#R     CALL 
0363  00652 000660R       DEF *+6       THE 
0364  00653 100636R       DEF .LU1,I      ACTUAL  
0365  00654 100637R       DEF .X1,I        CHAR 
0366  00655 100640R       DEF .Y1,I         LIBRARY 
0367  00656 100641R       DEF IASC,I         ROUTINE. 
0368  00657 000662R       DEF IALEN       
0369* 
0370  00660 126642R       JMP CHARS,I    AND RETURN 







 PAGE 0010 #01  <ASCII CHARACTER LIBRARY> 


0371* 
0372  00661 000000  TEMP  BSS 1 
0373  00662 000000  IALEN BSS 1 
0374                      END 
**  NO ERRORS*



















































$END ASMB     

*
--> Assemble 22506-80001_Rev-A_HP1331C_STORAGE_LIB_RTE_ERASE
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01


0001                ASMB,R,B,L
0002  00000               NAM ERASE,7 
0003                      ENT ERASE 
0004                      EXT .ENTR,EXEC,PSUSP
0005* 
0006**
0007**      SUBROUTINE TO ERASE THE STORAGE OSCILLOSCOPE
0008**   1331C. THE ERASE IS DONE, AND THEN THE PROGRAM IS
0009**   SUSPENDED DURING 1 SECOND. THE SUBROUTINE CHECKS IF THE
0010**   PROGRAM WAS IN THE TIME LIST, AND THEN THE OLD TIME VALUES 
0011**   ARE REPLACED.
0012**
0013**   CALLING SEQUENCE : 
0014**      CALL ERASE(ILU) 
0015**         ILU = LOGICAL UNIT NUMBER OF SCOPE.
0016**
0017**                         WIM ROELANDTS, HP BRUSSELS 
0018**
0019* 


0021  00000 000000  .LU   BSS 1 
0022  00001 000000  ERASE NOP 
0023  00002 016001X       JSB .ENTR 
0024  00003 000000R       DEF .LU 
0025  00004 162000R       LDA .LU,I 
0026  00005 032017R       IOR B2000 
0027  00006 072000R       STA .LU 
0028  00007 016002X       JSB EXEC      DO ERASE
0029  00010 000013R       DEF *+3 
0030  00011 000016R       DEF D3
0031  00012 000000R       DEF .LU 
0032*** 
0033***   RSV: COMMENTED OUT PSUS AS RTE-B DOES NOT SUPPORT TIME EXEC CA
0034*** 
0035***      JSB PSUSP     GO SUSPEND THE PROGRAM 
0036***      DEF *+3  
0037***      DEF D2        FOR 1 SECOND 
0038***      DEF D1 
0039  00013 126001R       JMP ERASE,I 


0041* 
0042**   ***   D A T A   ***
0043* 
0044  00014 000001  D1    DEC 1 
0045  00015 000002  D2    DEC 2 
0046  00016 000003  D3    DEC 3 
0047  00017 002000  B2000 OCT 2000
0048                      END 
**  NO ERRORS*





$END ASMB     

*
--> Assemble 22506-80001_Rev-A_HP1331C_STORAGE_LIB_RTE_POINT
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01


0001                ASMB,R,B,L
0002  00000               NAM POINT,7 
0003                      ENT POINT,PSET
0004                      EXT EXEC,.ENTR
0005* 
0006**
0007**      THIS SUBROUTINE WILL OUTPUT A NUMBER OF POINTS
0008**   ON A STORAGE OSCILLOSCOPE HP 1331C. THE COORDINATES ARE
0009**   GIVEN IN TWO ARRAYS, AND MUST BE INTEGER. THE COORDINATES
0010**   ARE SIMPLY TRUNCATED TO 8 BITS, AND NO CHECK IS DONE.
0011**
0012**      CALLING SEQUENCE : CALL POINT(LU,IX,IY,INUM)
0013**      WHERE : LU = LOGICAL UNIT NUMBER OF SCOPE.
0014**              IX = BUFFER WHICH CONTAINS THE X-COORDINATES
0015**              IY = BUFFER WHICH CONTAINS THE Y-COORDINATES
0016**              INUM = NUMBER OF POINTS.
0017**
0018**                       WIM ROELANDTS, HP BRUSSEL
0019**
0020* 











































 PAGE 0003 #01


0022  00000 000000  LU    BSS 1 
0023  00001 000000  IX    BSS 1 
0024  00002 000000  IY    BSS 1 
0025  00003 000000  INUM  BSS 1 
0026  00004 000000  POINT NOP 
0027  00005 016002X       JSB .ENTR 
0028  00006 000000R       DEF LU
0029* 
0030  00007 162003R       LDA INUM,I    GET NUMBER TO DO
0031  00010 003004        CMA,INA 
0032  00011 072003R       STA INUM      SAVE AS COUNTER 
0033  00012 062051R GO    LDA .BUF      SET UP :
0034  00013 072102R       STA PBUF      BUFFER POINTER
0035  00014 062100R       LDA MD10
0036  00015 072103R       STA CNT       BUFFER COUNTER
0037  00016 002400        CLA 
0038  00017 072104R       STA LEN       NUMBER OF POINTS
0039  00020 162001R GO1   LDA IX,I      GET A 'X' 
0040  00021 036001R       ISZ IX
0041  00022 012101R       AND B377      TRUNCATE TO 8 LOWER BITS
0042  00023 070001        STA B 
0043  00024 162002R       LDA IY,I      GET A 'Y' 
0044  00025 036002R       ISZ IY
0045  00026 012101R       AND B377
0046  00027 001727        ALF,ALF       MOVE UP 
0047  00030 030001        IOR B         AND ADD 'X' 
0048  00031 172102R       STA PBUF,I    STORE IN BUFFER 
0049  00032 036102R       ISZ PBUF      BUMP POINTER
0050  00033 036104R       ISZ LEN       BUMP LENGTH 
0051  00034 036003R       ISZ INUM      ALL DONE ?
0052  00035 026040R       JMP GO2       NO, THEN CONTINUE 
0053  00036 016044R       JSB OUT       YES, GET THEM OUT 
0054  00037 126004R       JMP POINT,I   AND RETURN
0055  00040 036103R GO2   ISZ CNT       BUFFER FULL ? 
0056  00041 026020R       JMP GO1       NO, GET ANOTHER POINT 
0057  00042 016044R       JSB OUT       YES, GET IT OUT 
0058  00043 026012R       JMP GO        AND CONTINUE
0059* 
0060** OUTPUT SUBROUTINE
0061* 
0062  00044 000000  OUT   NOP 
0063  00045 016001X       JSB EXEC
0064  00046 000053R       DEF *+5 
0065  00047 000077R       DEF D2
0066  00050 100000R       DEF LU,I
0067  00051 000105R .BUF  DEF BUF 
0068  00052 000104R       DEF LEN 
0069  00053 126044R       JMP OUT,I 















 PAGE 0004 #01


0071* 
0072**
0073**      THIS SUBROUTINE WILL OUTPUT A POINT ON A STORAGE  
0074**   OSCILLOSCOPE HP 1331C. THE COORDINATES ARE GIVEN IN TWO  
0075**   INTEGERS.  
0076**
0077**      CALLING SEQUENCE : CALL PSET(LU,IX,IY)
0078**      WHERE : LU = LOGICAL UNIT NUMBER OF SCOPE.
0079**              IX = CONTAINS THE X-COORDINATES 
0080**              IY = CONTAINS THE Y-COORDINATES 
0081**
0082**                       ROBERTO SANCHO, APR 2017 
0083**
0084* 

















































 PAGE 0005 #01


0086  00054 000000  LU1   BSS 1 
0087  00055 000000  IX1   BSS 1 
0088  00056 000000  IY1   BSS 1 
0089  00057 000000  PSET  NOP 
0090  00060 016002X       JSB .ENTR 
0091  00061 000054R       DEF LU1 
0092* 
0093  00062 062076R       LDA D1
0094  00063 003004        CMA,INA 
0095  00064 072003R       STA INUM      POINTS COUNTER = 1
0096  00065 062054R       LDA LU1       COPY POINT PARAMS 
0097  00066 072000R       STA LU
0098  00067 062055R       LDA IX1 
0099  00070 072001R       STA IX
0100  00071 062056R       LDA IY1 
0101  00072 072002R       STA IY
0102  00073 062057R       LDA PSET
0103  00074 072004R       STA POINT     FIX RETURN ADDRESS
0104  00075 026012R       JMP GO        GO TO POINT 
0105* 
0106**   ***   D A T A   ***
0107* 
0108  00001         B     EQU 1 
0109  00076 000001  D1    DEC 1 
0110  00077 000002  D2    DEC 2 
0111  00100 177766  MD10  DEC -10 
0112  00101 000377  B377  OCT 377 
0113* 
0114  00102 000000  PBUF  BSS 1 
0115  00103 000000  CNT   BSS 1 
0116  00104 000000  LEN   BSS 1 
0117  00105 000000  BUF   BSS 10
0118                      END 
**  NO ERRORS*






















$END ASMB     

*
--> Assemble 22506-80001_Rev-A_HP1331C_STORAGE_LIB_RTE_LINES
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01


0001                ASMB,R,B,L
0002  00000               NAM LINES,7 
0003                      ENT LINES 
0004                      EXT .ENTR,EXEC
0005* 
0006**      SUBROUTINE TO OUTPUT A LINE ON THE STORAGE SCOPE
0007**   HP 1331C.
0008**   CALLING SEQUENCE : 
0009**      CALL LINES(LU,IX1,IY1,IX2,IY2)
0010**      WHERE : 
0011**        LU = LOGICAL UNIT NUMBER OF SCOPE.
0012**        IX1,IY1 = COORDINATES OF FIRST POINT. 
0013**        IX2,IY2 = COORDINATES OF SECOND POINT.
0014**   A LINE WILL BE DRAWN BETWEEN THE 2 POINTS. 
0015**
0016**                        WIM ROELANDTS, HP BRUSSELS
0017**
0018* 













































 PAGE 0003 #01


0020  00000 000000  .LU   BSS 1 
0021  00001 000000  IX1   BSS 1 
0022  00002 000000  IY1   BSS 1 
0023  00003 000000  IX2   BSS 1 
0024  00004 000000  IY2   BSS 1 
0025  00005 000000  LINES NOP 
0026  00006 016001X       JSB .ENTR 
0027  00007 000000R       DEF .LU 
0028* 
0029  00010 162003R       LDA IX2,I 
0030  00011 012163R       AND B377
0031  00012 072003R       STA IX2 
0032  00013 162001R       LDA IX1,I 
0033  00014 012163R       AND B377
0034  00015 070001        STA B 
0035  00016 005727        BLF,BLF       MOVE UP TO GIVE ROOM
0036  00017 076001R       STB IX1       SAVE AS GUN LOCATION
0037  00020 003004        CMA,INA       CALCULATE DIFFERENCE
0038  00021 042003R       ADA IX2 
0039  00022 072171R       STA DX
0040  00023 002020        SSA           AND ABSOLUTE DIFFERNCE
0041  00024 003004        CMA,INA 
0042  00025 072170R       STA ADX 
0043* 
0044  00026 162004R       LDA IY2,I 
0045  00027 012163R       AND B377
0046  00030 072004R       STA IY2 
0047  00031 162002R       LDA IY1,I 
0048  00032 012163R       AND B377
0049  00033 070001        STA B 
0050  00034 005727        BLF,BLF 
0051  00035 076002R       STB IY1 
0052  00036 003004        CMA,INA 
0053  00037 042004R       ADA IY2 
0054  00040 072172R       STA DY        DO SAME FOR Y 
0055  00041 002021        SSA,RSS       MAKE NEGATIF
0056  00042 003004        CMA,INA 
0057  00043 042170R       ADA ADX       TO SEE WHICH IS BIGGEST 
0058  00044 002020        SSA 
0059  00045 026054R       JMP ONEY      DY IS BIGGEST 
0060  00046 062171R       LDA DX        DX IS BIGGEST, GO CALCULATE 
0061  00047 066172R       LDB DY        THE INCREMENT 
0062  00050 016125R       JSB CALC
0063  00051 072174R       STA DDY 
0064  00052 076173R       STB DDX 
0065  00053 026061R       JMP LIN1
0066  00054 062172R ONEY  LDA DY
0067  00055 066171R       LDB DX        DY IS BIGGEST, GET INCREMENT
0068  00056 016125R       JSB CALC
0069  00057 072173R       STA DDX 
0070  00060 076174R       STB DDY 
0071* 
0072**   NOW WE HAVE INCREMNTS, DO THE OUTPUT 
0073* 
0074  00061 062122R LIN1  LDA .BUF      SET BUFFER POINTER
0075  00062 072170R       STA PBUF







 PAGE 0004 #01


0076  00063 062165R       LDA MD10      BUFFER COUNTER
0077  00064 072003R       STA CNT 
0078  00065 002400        CLA           WORD COUNTER
0079  00066 072004R       STA LEN 
0080  00067 062001R LIN2  LDA IX1       GET AN X VALUE
0081  00070 042173R       ADA DDX       ADD INCREMENT 
0082  00071 072001R       STA IX1       SAVE FOR NEXT 
0083  00072 001727        ALF,ALF 
0084  00073 012163R       AND B377      ISOLATE THE X VALUE 
0085  00074 070001        STA B 
0086  00075 062002R       LDA IY1       DO SAME FOR Y 
0087  00076 042174R       ADA DDY 
0088  00077 072002R       STA IY1 
0089  00100 012166R       AND M1774     ISOLATE UPPER PART
0090  00101 030001        IOR B         ADD X VALUE 
0091  00102 172170R       STA PBUF,I    SAVE IN BUFFER
0092  00103 036170R       ISZ PBUF
0093  00104 036004R       ISZ LEN 
0094  00105 036167R       ISZ TEL1
0095  00106 026111R       JMP LIN3
0096  00107 016115R       JSB OUT 
0097  00110 126005R       JMP LINES,I   ALL DONE !
0098  00111 036003R LIN3  ISZ CNT       BUFFER FULL ? 
0099  00112 026067R       JMP LIN2      NO, CONTINUE
0100  00113 016115R       JSB OUT       YES, GET IT EMPTY 
0101  00114 026061R       JMP LIN1      AND CONTINUE





































 PAGE 0005 #01


0103* 
0104**   ***   S U B R O U T I N E S   ***
0105* 
0106* 
0107**   OUTPUT SUBROUTINE
0108* 
0109  00115 000000  OUT   NOP 
0110  00116 016002X       JSB EXEC
0111  00117 000124R       DEF *+5 
0112  00120 000162R       DEF D2        OUTPUT
0113  00121 100000R       DEF .LU,I 
0114  00122 000175R .BUF  DEF BUF 
0115  00123 000004R       DEF LEN 
0116  00124 126115R       JMP OUT,I     AND RETURN
0117* 
0118** SUBROUTINE TO DO THE CALCULATIONS OF THE INCREMENT 
0119** ON ENTRY : <A> = LARGEST DIFFERENCE (DL) 
0120**            <B> = SMALLEST DIFFERNCE (DS) 
0121** ON RETURN : <A> = SMALLEST INCREMENT (DDS = (DS*400B)/ABS(DL)) 
0122**             <B> = LARGEST INCREMENT (DDL = +/- 400B) 
0123* 
0124  00125 000000  CALC  NOP 
0125  00126 076170R       STB ADX 
0126  00127 070001        STA B 
0127  00130 007004        CMB,INB       <B> = - DL
0128  00131 002003        SZA,RSS       LARGEST = 0?
0129  00132 026156R       JMP ONEP      YES, DO ONE POINT ONLY !
0130  00133 002120        CLE,SSA       NEGATIF ? 
0131  00134 002300        CCE           YES, SET E
0132  00135 002020        SSA           NEGATIF ? 
0133  00136 101100        SWP           YES, SET POSITIF IN A, NEGATIF I
0134  00137 072004R       STA DIVI      SAVE A AS DIVISOR 
0135  00140 076167R       STB TEL1      AND B AS COUNTER
0136  00141 066164R       LDB B400      GET LARGEST INCREMENT 
0137  00142 002040        SEZ           WAS POSITIF ? 
0138  00143 007004        CMB,INB       NO, SET INCREMENT NEGATIF 
0139  00144 062170R       LDA ADX       GET SMALLEST AGAIN
0140  00145 076170R       STB ADX       SAVE LARGEST INCREMENT
0141  00146 006400        CLB 
0142  00147 002020        SSA           NEGATIF ? 
0143  00150 007400        CCB           YES, SET B ALSO NEGATIF 
0144  00151 001727        ALF,ALF 
0145  00152 100400        DIV DIVI      DIVIDE BY LARGEST 
      00153 000004R 
0146  00154 066170R       LDB ADX 
0147  00155 126125R       JMP CALC,I
0148* 
0149  00156 003400  ONEP  CCA 
0150  00157 072167R       STA TEL1
0151  00160 002400        CLA 
0152  00161 126125R       JMP CALC,I












 PAGE 0006 #01


0154* 
0155**   ***   D A T A   ***
0156* 
0157* 
0158  00001         B     EQU 1 
0159* 
0160  00162 000002  D2    DEC 2 
0161  00163 000377  B377  OCT 377 
0162  00164 000400  B400  OCT 400 
0163  00165 177766  MD10  DEC -10 
0164  00166 177400  M1774 OCT 177400
0165* 
0166  00167 000000  TEL1  BSS 1 
0167  00170 000000  ADX   BSS 1 
0168  00171 000000  DX    BSS 1 
0169  00172 000000  DY    BSS 1 
0170  00173 000000  DDX   BSS 1 
0171  00174 000000  DDY   BSS 1 
0172  00175 000000  BUF   BSS 10
0173  00170         PBUF  EQU ADX 
0174  00003         CNT   EQU IX2 
0175  00004         LEN   EQU IY2 
0176  00004         DIVI  EQU IY2 
0177                      END 
**  NO ERRORS*































$END ASMB     

*
--> Assemble 22506-80001_Rev-A_HP1331C_STORAGE_LIB_RTE_PSUSP
ON,ASMB,99







 PAGE 0001


0001                ASMB,R,B,L
**  NO ERRORS*





























































 PAGE 0002 #01


0001                ASMB,R,B,L
0002  00000               NAM PSUSP,7 
0003                      ENT PSUSP 
0004                      EXT .ENTR,EXEC
0005* 
0006**
0007**      WITH THIS SUBROUTINE YOU CAN SUSPEND A PROGRAM FOR
0008**   A CERTAIN TIME. THE SUBROUTINE CHECKS IF THE PROGRAM 
0009**   WAS IN THE TIME LIST, AND IN THIS CASE THE OLD TIME
0010**   VALUES ARE RESTORED. IF THE CURRENT TIME IS LARGER 
0011**   THAN THE OLD VALUES, THE SUBROUTINE MAKES THE
0012**   NESSESARY CORRECTIONS (ADDS THE MULTIPLE) UNTIL
0013**   THE NEXT TIME IS LARGER THAN THE CURRENT TIME. 
0014**      CALLING SEQUENCE :
0015**      CALL PSUSP(IRES,IMUL) 
0016**   WHERE :
0017**      IRES : TIME RESOLUTION : 1 = 10 MS
0018**                                2 = SECONDS   ETC...
0019**      IMUL : MULTIPLE 0-999 
0020**
0021**                     WIM ROELANDTS, HP BRUSSELS 
0022**
0023* 








































 PAGE 0003 #01


0025  00000 000000  RES   BSS 1 
0026  00001 000000  MUL   BSS 1 
0027  00002 000000  PSUSP NOP 
0028  00003 016001X       JSB .ENTR 
0029  00004 000000R       DEF RES 
0030* 
0031  00005 016002X       JSB EXEC
0032  00006 000011R       DEF *+3 
0033  00007 000160R       DEF D11       GET THE TIME
0034  00010 000206R .ITIM DEF ITIM
0035  00011 062212R       LDA ITIM+4
0036  00012 072205R       STA SDAY      SAVE THE DAY
0037  00013 061717        LDA XEQT      GET CURRENT ID ADDRESS
0038  00014 042162R       ADA D17       SET TO TIME VALUES
0039  00015 072175R       STA POIN
0040  00016 162175R       LDA POIN,I
0041  00017 001723        ALF,RAR 
0042  00020 072174R       STA TL        SAVE TIME LIST BIT
0043  00021 012157R       AND D7        THIS IS RESOLUTION
0044  00022 072177R       STA SRES      SAVE IT 
0045  00023 162175R       LDA POIN,I    GET MULTIPLE
0046  00024 012171R       AND B7777 
0047  00025 072200R       STA SMUL
0048  00026 036175R       ISZ POIN
0049  00027 162175R       LDA POIN,I    GET MILLI SECS
0050  00030 042165R       ADA D100      POSITIF 
0051  00031 072201R       STA SMSEC 
0052  00032 036175R       ISZ POIN
0053  00033 162175R       LDA POIN,I    GET SECONDS 
0054  00034 042166R       ADA D60 
0055  00035 072202R       STA SSEC
0056  00036 036175R       ISZ POIN
0057  00037 162175R       LDA POIN,I    GET MINUTES 
0058  00040 042166R       ADA D60 
0059  00041 072203R       STA SMIN
0060  00042 036175R       ISZ POIN
0061  00043 162175R       LDA POIN,I
0062  00044 042170R       ADA D24       GET HOURS 
0063  00045 072204R       STA SHR 
0064  00046 162001R       LDA MUL,I     GET THE MULTIPLE
0065  00047 002021        SSA,RSS 
0066  00050 003004        CMA,INA       IN EACH CASE NEGATIF
0067  00051 002003        SZA,RSS       MAY NOT BE POSITIF
0068  00052 003400        CCA           REPLACE BY -1 IF ZERO 
0069  00053 072001R       STA MUL 
0070  00054 016002X       JSB EXEC      SUSPEND THE PROGRAM FOR 1 SECOND
0071  00055 000063R       DEF *+6 
0072  00056 000161R       DEF D12 
0073  00057 000155R       DEF D0
0074  00060 100000R       DEF RES,I 
0075  00061 000155R       DEF D0
0076  00062 000001R       DEF MUL 
0077  00063 062174R       LDA TL        WAS THE PROGRAM IN THE TIME LIST
0078  00064 002021        SSA,RSS 
0079  00065 126002R       JMP PSUSP,I   NO, RETURN
0080  00066 016002X ER1   JSB EXEC      GET THE TIME







 PAGE 0004 #01


0081  00067 000072R       DEF *+3 
0082  00070 000160R       DEF D11 
0083  00071 000206R       DEF ITIM
0084  00072 036206R       ISZ ITIM      BUMP MILLI SECS 
0085  00073 062164R       LDA MD5       SEE IF CURRENT TIME 
0086  00074 072174R       STA CNT       IS LOWER THAN NEXT EXEC TIME
0087  00075 062173R       LDA .BUE
0088  00076 042156R       ADA D4
0089  00077 072176R       STA PBUE      SET EXEC TIME POINTER 
0090  00100 066010R       LDB .ITIM 
0091  00101 046156R       ADB D4        SET CURRENT POINTER 
0092  00102 160001  ER2   LDA B,I       GET CURRENT TIME
0093  00103 003004        CMA,INA       NEGATIF 
0094  00104 142176R       ADA PBUE,I    ADD EXEC TIME 
0095  00105 002020        SSA           EXEC > CURRENT ?
0096  00106 026117R       JMP ER3       NO, SO GO BUMP EXEC TIME
0097  00107 002002        SZA           EXEC = CURRENT
0098  00110 026142R       JMP ER5       NO, SO MUST BE GREATER, OK!!
0099  00111 003400        CCA           YES, TEST NEXT ONE
0100  00112 042176R       ADA PBUE
0101  00113 072176R       STA PBUE
0102  00114 046163R       ADB MD1 
0103  00115 036174R       ISZ CNT       ALL DONE
0104  00116 026102R       JMP ER2 
0105  00117 003400  ER3   CCA           YES, SO EXEC<= CURRENT
0106  00120 042173R       ADA .BUE      BUMP EXEC TIME
0107  00121 042177R       ADA SRES
0108  00122 072176R       STA PBUE
0109  00123 066172R       LDB .COBU     SET CONSTANT BUFFER POINTER 
0110  00124 046177R       ADB SRES
0111  00125 076175R       STB PCOBU 
0112  00126 062200R       LDA SMUL      GET MULTIPLE
0113  00127 006400  ER4   CLB 
0114  00130 142176R       ADA PBUE,I
0115  00131 172176R       STA PBUE,I    SAVE NEW VALUE
0116  00132 100400        DIV PCOBU,I   DIVIDE BY MAX 
      00133 100175R 
0117  00134 002003        SZA,RSS       BELOW MAX ? 
0118  00135 026066R       JMP ER1       YES, CHECK AGAIN
0119  00136 176176R       STB PBUE,I    SAVE REMAINDER AS NEW VALUE 
0120  00137 036176R       ISZ PBUE      BUMP POINTERS 
0121  00140 036175R       ISZ PCOBU 
0122  00141 026127R       JMP ER4       AND UPDATE THE REST 
0123  00142 016002X ER5   JSB EXEC      ALL OK, RESTORE THE TIME VALUES 
0124  00143 000154R       DEF *+9 
0125  00144 000161R       DEF D12 
0126  00145 000155R       DEF D0
0127  00146 000177R       DEF SRES
0128  00147 000200R       DEF SMUL
0129  00150 000204R       DEF SHR 
0130  00151 000203R       DEF SMIN
0131  00152 000202R       DEF SSEC
0132  00153 000201R       DEF SMSEC 
0133  00154 126002R       JMP PSUSP,I   AND RETURN/E









 PAGE 0005 #01


0135* 
0136**   *****   D A T A     *****
0137* 
0138  00001         B     EQU 1 
0139  01717         XEQT  EQU 1717B 
0140* 
0141  00155 000000  D0    DEC 0 
0142  00156 000004  D4    DEC 4 
0143  00157 000007  D7    DEC 7 
0144  00160 000013  D11   DEC 11
0145  00161 000014  D12   DEC 12
0146  00162 000021  D17   DEC 17
0147  00163 177777  MD1   DEC -1
0148  00164 177773  MD5   DEC -5
0149  00165 000144  D100  DEC 100 
0150  00166 000074  D60   DEC 60
0151  00167 000074        DEC 60
0152  00170 000030  D24   DEC 24
0153  00171 007777  B7777 OCT 7777
0154* 
0155  00172 000164R .COBU DEF D100-1
0156  00173 000201R .BUE  DEF SMSEC 
0157* 
0158  00174 000000  TL    BSS 1 
0159  00175 000000  POIN  BSS 1 
0160  00176 000000  PBUE  BSS 1 
0161  00174         CNT   EQU TL
0162  00175         PCOBU EQU POIN
0163  00177 000000  SRES  BSS 1 
0164  00200 000000  SMUL  BSS 1 
0165  00201 000000  SMSEC BSS 1 
0166  00202 000000  SSEC  BSS 1 
0167  00203 000000  SMIN  BSS 1 
0168  00204 000000  SHR   BSS 1 
0169  00205 000000  SDAY  BSS 1 
0170  00206 000000  ITIM  BSS 5 
0171                      END 
**  NO ERRORS*


















$END ASMB     

