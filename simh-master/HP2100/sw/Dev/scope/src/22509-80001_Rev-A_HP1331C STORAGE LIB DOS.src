ASMB,R,B,L
      HED <CHARACTER GENERATOR - DOS> 
      NAM CHAR,7
      ENT CHAR,WHERE
      EXT EXEC,.ENTR,ERASE
* 
**
**      SUBROUTINE TO OUTPUT CHARACTERS ON A 1331C STORAGE SCOPE. 
**   CALLING SEQUENCE : 
**      CALL CHAR(LU,IX,IY,IASC,N)
**         LU = LOGICAL UNIT NUMBER OF SCOPE
**         IX,IY = COORDINATES OF UPPER LEFT POINT OF FIRST CHAR
**         IASC = ADDRESS OF ASCII BUFFER 
**         N = NUMBER OF CHARACTERS : 
**             IF > 0 : OUTPUT N CHARS + CR/LF
**                = 0 : OUTPUT CR/LF ONLY 
**                < 0 : OUTPUT N CHARS (WITHOUT CR/LF)
**
**                              WIM ROELANDTS, HP BRU 
**
* 
.LU   BSS 1 
.X    BSS 1 
.Y    BSS 1 
.BUF  BSS 1 
NUM   BSS 1 
CHAR  NOP 
      JSB .ENTR 
      DEF .LU 
      LDA NUM,I 
      STA CRLFF     SAVE AS FLAG
      SZA           ONLY  CR/LF ? 
      JMP CH1       NO, CONTINUE
      JSB CRLF      YES, GO DO IT 
      JMP CHAR,I    AND RETURN
* 
**  MAKE CHARACTER COUNTER
* 
CH1   SSA,RSS       NEG ? 
      CMA,INA       NO, MAKE NEG
      STA CHCNT 
* 
**   MAKE STARTING LOCATION 
* 
      LDA .X,I      GET X 
      AND B377      TRUNCATE
      STA SAVX      SAVE FOR LATER
      LDA .Y,I
      AND B377
      ALF,ALF 
      STA SAVY
      IOR SAVX
      STA LOC       THIS IS OUR STARTING LOCATION 
* 
**   SET BUFFER POINTERS
* 
      LDA .BUF
      CLE,ELA 
      STA .BUF      SET UPPER/LOWER FLAG
      LDA .OB 
      STA POB 
CHA1  LDB .BUF
      CLE,ERB 
      LDA B,I 
      SEZ,RSS       UPPER ? 
      ALF,ALF 
      AND B177      ISOLATE CHAR
      ISZ .BUF      BUMP POINTER
* 
** NOW WE HAVE CHAR : FIND DOTS 
* 
      ADA MB140     LEGAL ASCII CHAR
      SSA,RSS 
      JMP INVAL     NO
      ADA B100      CHECK LOWER LIMIT 
      SSA 
INVAL CLA           INVALID, REPLACE BY SPACE 
      STA CHRCD 
      ALS 
      ADA CHRCD     * 3 
      ADA TABEL     THIS IS THE CORRECT ADDRESS 
      STA CHRCD 
      LDA MD3       SET UP :
      STA CNT3      3 WORD COUNTER
      LDA LOC       GET GUN LOCATION
CHA2  LDB MD16      SET UP :
      STB CNT16     16 BIT COUNTER
      LDB MD8 
      STB CNT8      8 BIT COUNTER 
      LDB CHRCD,I   GET A LIBRARY WORD
      ISZ CHRCD 
CHA3  SSB,RSS       BIT SET ? 
      JMP CHA4      NO, GO TO NEXT
      STA POB,I     YES, STORE VALUE IN OUTPUT BUFFER 
      ISZ POB 
CHA4  RBL           POSITION NEXT BIT 
      ADA MB400     DECREMENT Y 
      ISZ CNT16     16 BITS DONE ?
      JMP CHA5      NO
      ADA B4001     YES, RESET Y, INC X 
      ISZ CNT3      ALL THREE WORDS DONE ?
      JMP CHA2      NO
      ADA D2        YES, ADD SPACE
      STA LOC       SAVE AS NEXT GUN
* 
**   OUTPUT THE CHARACTER 
* 
      LDB POB       CALCULATE THE LENGTH
      LDA .OB 
      STA POB       RESET THE POINTER 
      CMA,INA 
      ADA B         DIFFERENCE IS LENGTH
      STA LOB       SAVE AS BUFFER LENGTH 
      JSB EXEC      GO OUTPUT IT
      DEF *+5 
      DEF D2
      DEF .LU,I 
.OB   DEF OB
      DEF LOB 
      LDA LOC 
      AND B377      ISOLATE X 
      ADA MB370     ROOM ENOUGH ? 
      SSA,RSS 
      JSB CRLF      NO, DO CR/LF
CHA6  ISZ CHCNT     FINISHED ?
      JMP CHA1      RETURN TO DO NEXT XHAR
FINIS LDA CRLFF     CR/LF TO DO ? 
      SSA,RSS 
      JSB CRLF      YES, DO IT
      JMP CHAR,I
CHA5  ISZ CNT8      8 BITS DONE ? 
      JMP CHA3      NO
      ADA B4001     YES RESET Y, INC X
      JMP CHA3
* 
** DO A CR/LF AND CHECK FOR END OF PAGE 
* 
CRLF  NOP 
      LDA LOC 
      AND MB400     ISOLATE Y 
      CLE 
      ADA B172D     STILL ROOM ENOUGH ON PAGE 
      SEZ,RSS       E SET ? 
      JMP EOP       NO, END OF PAGE 
      IOR SAVX      ADD OLD GUN 
      STA LOC       THIS IS NEW GUN 
      CLE 
      ADA B172D     CHECK IF STILL ROOM FOR CHAR
      SEZ           E SET ? 
      JMP CRLF,I    YES, STILL ROOM ENOUGH
* 
**   END OF PAGE : SUSPEND THE PROGRAM
* 
EOP   JSB EXEC      GO TELL THE OPERATOR
      DEF *+5       THAT WE WILL SUSPEND THE
      DEF D2        PROGRAM UNTIL HE HAS
      DEF D1        READ THE CURRENT PAGE 
      DEF BU        BEFORE WE WILL ERASE !! 
      DEF LBU 
      JSB EXEC      SUSPEND THE PROGRAM ! 
      DEF *+2 
      DEF D7
      JSB ERASE 
      DEF *+2 
      DEF .LU,I     DO A ERASE WITH SUSPENTION
      LDA SAVY      MAKE NEW GUN
      IOR SAVX
      STA LOC 
      JMP CRLF,I
      SKP 
* 
**
**      SUBROUTINE TO ASK WHERE NEXT CHARACTER WILL BE
**   DISPLAYED. 
**   CALLING SEQUENCE : 
**      CALL WHERE(IX,IY) 
**         IX,IY = COORDINATES OF NEXT CHARACTER
**
* 
IX    BSS 1 
IY    BSS 1 
WHERE NOP 
      JSB .ENTR 
      DEF IX
      LDA LOC       GET THE LOCATION
      AND B377
      STA IX,I      SET IT IN PROG
      LDA LOC 
      ALF,ALF 
      AND B377
      STA IY,I
      JMP WHERE,I 
      SKP 
* 
**   *****   D A T A   *****
* 
B     EQU 1 
XEQT  EQU 1717B 
* 
MD1   DEC -1
MD3   DEC -3
MD8   DEC -8
MD16  DEC -16 
MB140 OCT -140
MB370 OCT -370
MB400 OCT -400
* 
D1    DEC 1 
D2    DEC 2 
D7    DEC 7 
D12   DEC 12
B40   OCT 40
B100  OCT 100 
B177  OCT 177 
B377  OCT 377 
B4001 OCT 4001
M1774 OCT 177400
B172D OCT 172000
* 
BU    ASC 4,E-O-P :_
LBU   DEC -8
LOC   BSS 1 
CRLFF BSS 1 
CHCNT BSS 1 
CHRCD BSS 1 
CNT3  BSS 1 
CNT8  BSS 1 
CNT16 BSS 1 
SAVX  BSS 1 
SAVY  BSS 1 
OB    BSS 26
POB   BSS 1 
LOB   BSS 1 
      HED <ASCII CHARACTER LIBRARY> 
* 
**   THE FOLLOWING IS THE CHARACTER LIBRARY.  THE FIRST ENTRY IS
**   THE SYMBOL FOR AN UNKNOWN CHARACTER CODE. THE REMAINING
**   ENTRIES ARE IN STANDARD ASCII NUMERICAL ORDER. 
* 
********** DO NOT REARRANGE THIS TABLE ********** 
* 
      SUP 
TABEL DEF *+1       STARTING ADDRESS OF CHAR LIBRARY. 
* 
      OCT 0,0,0 
EXCL  OCT 1,174401,0
QUOTE OCT 360,0,170000
POUND OCT 22377,22044,177444
DOLR  OCT 61221,177621,47000
PRCNT OCT 41244,44022,22502 
AMP   OCT 7161,110632,63011 
APOST OCT 20,160100,0 
OPRN  OCT 74,41201,100400 
CPRN  OCT 201,100502,36000
AST   OCT 44452,16034,25111 
PLUS  OCT 10,4076,4010
COMMA OCT 1,416,2000
MINUS OCT 10,4010,4010
PER   OCT 2,3402,0
DIV   OCT 1004,4020,20100 
ZERO  OCT 36102,100601,41074
ONE   OCT 501,177401,400
TWO   OCT 40603,102611,110541 
THREE OCT 41201,100621,124506 
FOUR  OCT 6024,22104,177404 
FIVE  OCT 170621,110621,110616
SIX   OCT 17045,44611,4406
SEVEN OCT 100200,107620,120300
EIGHT OCT 67221,110621,110556 
NINE  OCT 60221,110621,111174 
COLON OCT 0,41347,41000 
SEMI  OCT 1,147304,0
LESS  OCT 20,24104,101000 
EQUAL OCT 44,22044,22044
GREAT OCT 202,42050,10000 
QUES  OCT 40201,105621,110140 
AT    OCT 77201,114645,114570 
AEE   OCT 37510,104210,44077
BEE   OCT 177621,110621,110556
C     OCT 77201,100601,100546 
D     OCT 100777,100601,100576
E     OCT 177621,110621,110601
F     OCT 177620,110220,100200
G     OCT 77201,100611,104516 
H     OCT 177420,10020,10377
I     OCT 100601,177601,100400
J     OCT 3001,401,776
K     OCT 177410,14044,41201
L     OCT 177401,401,401
M     OCT 177500,34070,40377
N     OCT 177440,10010,2377 
O     OCT 77201,100601,100576 
P     OCT 177610,104210,104160
Q     OCT 77201,100605,101175 
R     OCT 177610,104214,105161
S     OCT 61221,110621,104506 
T     OCT 100200,177600,100000
U     OCT 177001,401,776
V     OCT 160034,1403,16340 
W     OCT 177402,16034,1377 
X     OCT 141444,14030,22303
Y     OCT 140040,17437,20300
Z     OCT 101605,104621,120701
OBRAK OCT 377,100601,100400 
SLANT OCT 40040,10010,2002
BRAK2 OCT 201,100601,177400 
UPARO OCT 40,40377,40040
BKARO OCT 10070,52020,10020 
* 
      END 
ASMB,R,B,L
      NAM ERASE,7 
      ENT ERASE 
      EXT .ENTR,EXEC
* 
**
**      SUBROUTINE TO ERASE THE STORAGE OSCILLOSCOPE
**   1331C. THE ERASE IS DONE, AND THEN THE PROGRAM IS
**   IN A WAIT LOOP DURING 1 SECOND.
**
**   CALLING SEQUENCE : 
**      CALL ERASE(ILU) 
**         ILU = LOGICAL UNIT NUMBER OF SCOPE.
**
**                         WIM ROELANDTS, HP BRUSSELS 
**
* 
      SPC 2 
.LU   BSS 1 
ERASE NOP 
      JSB .ENTR 
      DEF .LU 
      LDA .LU,I 
      IOR B2000 
      STA .LU 
      JSB EXEC      DO ERASE
      DEF *+3 
      DEF D3
      DEF .LU 
      CLA           WAIT DURING 1 SECOND
      LDB MD4 
      INA,SZA 
      JMP *-1 
      INB,SZB 
      JMP *-3 
      JMP ERASE,I 
      SPC 2 
* 
**   ***   D A T A   ***
* 
D1    EQU 54B 
D2    EQU 55B 
D3    EQU 56B 
MD4   EQU 47B 
B2000 OCT 2000
      END 
ASMB,R,B,L
      NAM POINT,7 
      ENT POINT 
      EXT EXEC,.ENTR
* 
**
**      THIS SUBROUTINE WILL OUTPUT A NUMBER OF POINTS
**   ON A STORAGE OSCILLOSCOPE HP 1331C. THE COORDINATES ARE
**   GIVEN IN TWO ARRAYS, AND MUST BE INTEGER. THE COORDINATES
**   ARE SIMPLY TRUNCATED TO 8 BITS, AND NO CHECK IS DONE.
**
**      CALLING SEQUENCE : CALL POINT(LU,IX,IY,INUM)
**      WHERE : LU = LOGICAL UNIT NUMBER OF SCOPE.
**              IX = BUFFER WHICH CONTAINS THE X-COORDINATES
**              IY = BUFFER WHICH CONTAINS THE Y-COORDINATES
**              INUM = NUMBER OF POINTS.
**
**                       WIM ROELANDTS, HP BRUSSEL
**
* 
      SKP 
LU    BSS 1 
IX    BSS 1 
IY    BSS 1 
INUM  BSS 1 
POINT NOP 
      JSB .ENTR 
      DEF LU
* 
      LDA INUM,I    GET NUMBER TO DO
      CMA,INA 
      STA INUM      SAVE AS COUNTER 
GO    LDA .BUF      SET UP :
      STA PBUF      BUFFER POINTER
      LDA MD10
      STA CNT       BUFFER COUNTER
      CLA 
      STA LEN       NUMBER OF POINTS
GO1   LDA IX,I      GET A 'X' 
      ISZ IX
      AND B377      TRUNCATE TO 8 LOWER BITS
      STA B 
      LDA IY,I      GET A 'Y' 
      ISZ IY
      AND B377
      ALF,ALF       MOVE UP 
      IOR B         AND ADD 'X' 
      STA PBUF,I    STORE IN BUFFER 
      ISZ PBUF      BUMP POINTER
      ISZ LEN       BUMP LENGTH 
      ISZ INUM      ALL DONE ?
      JMP GO2       NO, THEN CONTINUE 
      JSB OUT       YES, GET THEM OUT 
      JMP POINT,I   AND RETURN
GO2   ISZ CNT       BUFFER FULL ? 
      JMP GO1       NO, GET ANOTHER POINT 
      JSB OUT       YES, GET IT OUT 
      JMP GO        AND CONTINUE
* 
** OUTPUT SUBROUTINE
* 
OUT   NOP 
      JSB EXEC
      DEF *+5 
      DEF D2
      DEF LU,I
.BUF  DEF BUF 
      DEF LEN 
      JMP OUT,I 
      SKP 
* 
**   ***   D A T A   ***
* 
B     EQU 1 
D2    DEC 2 
MD10  DEC -10 
B377  OCT 377 
* 
PBUF  BSS 1 
CNT   BSS 1 
LEN   BSS 1 
BUF   BSS 10
      END 
ASMB,R,B,L
      NAM LINES,7 
      ENT LINES 
      EXT .ENTR,EXEC
* 
**      SUBROUTINE TO OUTPUT A LINE ON THE STORAGE SCOPE
**   HP 1331C.
**   CALLING SEQUENCE : 
**      CALL LINES(LU,IX1,IY1,IX2,IY2)
**      WHERE : 
**        LU = LOGICAL UNIT NUMBER OF SCOPE.
**        IX1,IY1 = COORDINATES OF FIRST POINT. 
**        IX2,IY2 = COORDINATES OF SECOND POINT.
**   A LINE WILL BE DRAWN BETWEEN THE 2 POINTS. 
**
**                        WIM ROELANDTS, HP BRUSSELS
**
* 
      SKP 
.LU   BSS 1 
IX1   BSS 1 
IY1   BSS 1 
IX2   BSS 1 
IY2   BSS 1 
LINES NOP 
      JSB .ENTR 
      DEF .LU 
* 
      LDA IX2,I 
      AND B377
      STA IX2 
      LDA IX1,I 
      AND B377
      STA B 
      BLF,BLF       MOVE UP TO GIVE ROOM
      STB IX1       SAVE AS GUN LOCATION
      CMA,INA       CALCULATE DIFFERENCE
      ADA IX2 
      STA DX
      SSA           AND ABSOLUTE DIFFERNCE
      CMA,INA 
      STA ADX 
* 
      LDA IY2,I 
      AND B377
      STA IY2 
      LDA IY1,I 
      AND B377
      STA B 
      BLF,BLF 
      STB IY1 
      CMA,INA 
      ADA IY2 
      STA DY        DO SAME FOR Y 
      SSA,RSS       MAKE NEGATIF
      CMA,INA 
      ADA ADX       TO SEE WHICH IS BIGGEST 
      SSA 
      JMP ONEY      DY IS BIGGEST 
      LDA DX        DX IS BIGGEST, GO CALCULATE 
      LDB DY        THE INCREMENT 
      JSB CALC
      STA DDY 
      STB DDX 
      JMP LIN1
ONEY  LDA DY
      LDB DX        DY IS BIGGEST, GET INCREMENT
      JSB CALC
      STA DDX 
      STB DDY 
* 
**   NOW WE HAVE INCREMNTS, DO THE OUTPUT 
* 
LIN1  LDA .BUF      SET BUFFER POINTER
      STA PBUF
      LDA MD10      BUFFER COUNTER
      STA CNT 
      CLA           WORD COUNTER
      STA LEN 
LIN2  LDA IX1       GET AN X VALUE
      ADA DDX       ADD INCREMENT 
      STA IX1       SAVE FOR NEXT 
      ALF,ALF 
      AND B377      ISOLATE THE X VALUE 
      STA B 
      LDA IY1       DO SAME FOR Y 
      ADA DDY 
      STA IY1 
      AND M1774     ISOLATE UPPER PART
      IOR B         ADD X VALUE 
      STA PBUF,I    SAVE IN BUFFER
      ISZ PBUF
      ISZ LEN 
      ISZ TEL1
      JMP LIN3
      JSB OUT 
      JMP LINES,I   ALL DONE !
LIN3  ISZ CNT       BUFFER FULL ? 
      JMP LIN2      NO, CONTINUE
      JSB OUT       YES, GET IT EMPTY 
      JMP LIN1      AND CONTINUE
      SKP 
* 
**   ***   S U B R O U T I N E S   ***
* 
* 
**   OUTPUT SUBROUTINE
* 
OUT   NOP 
      JSB EXEC
      DEF *+5 
      DEF D2        OUTPUT
      DEF .LU,I 
.BUF  DEF BUF 
      DEF LEN 
      JMP OUT,I     AND RETURN
* 
** SUBROUTINE TO DO THE CALCULATIONS OF THE INCREMENT 
** ON ENTRY : <A> = LARGEST DIFFERENCE (DL) 
**            <B> = SMALLEST DIFFERNCE (DS) 
** ON RETURN : <A> = SMALLEST INCREMENT (DDS = (DS*400B)/ABS(DL)) 
**             <B> = LARGEST INCREMENT (DDL = +/- 400B) 
* 
CALC  NOP 
      STB ADX 
      STA B 
      CMB,INB       <B> = - DL
      SZA,RSS       LARGEST = 0?
      JMP ONEP      YES, DO ONE POINT ONLY !
      CLE,SSA       NEGATIF ? 
      CCE           YES, SET E
      SSA           NEGATIF ? 
      SWP           YES, SET POSITIF IN A, NEGATIF IN B 
      STA DIVI      SAVE A AS DIVISOR 
      STB TEL1      AND B AS COUNTER
      LDB B400      GET LARGEST INCREMENT 
      SEZ           WAS POSITIF ? 
      CMB,INB       NO, SET INCREMENT NEGATIF 
      LDA ADX       GET SMALLEST AGAIN
      STB ADX       SAVE LARGEST INCREMENT
      CLB 
      SSA           NEGATIF ? 
      CCB           YES, SET B ALSO NEGATIF 
      ALF,ALF 
      DIV DIVI      DIVIDE BY LARGEST 
      LDB ADX 
      JMP CALC,I
* 
ONEP  CCA 
      STA TEL1
      CLA 
      JMP CALC,I
      SKP 
* 
**   ***   D A T A   ***
* 
* 
B     EQU 1 
* 
D2    DEC 2 
B377  OCT 377 
B400  OCT 400 
MD10  DEC -10 
M1774 OCT 177400
* 
TEL1  BSS 1 
ADX   BSS 1 
DX    BSS 1 
DY    BSS 1 
DDX   BSS 1 
DDY   BSS 1 
BUF   BSS 10
PBUF  EQU ADX 
CNT   EQU IX2 
LEN   EQU IY2 
DIVI  EQU IY2 
      END 
