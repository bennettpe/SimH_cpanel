ASMB,L,C
 HED RTE BASIC 'POINT' INTERFACE                   A-91200-16002-2
* 
*     NAME:   RTE BASIC 'POINT' INTERFACE 
*     SOURCE: 91200-18002 (FILE 2)
*     BINARY: 91200-16002 (MODULE 2)
*     PGMR:   L.W.S. ADDED TO LIBRARY BY DENTON ANDERSON
*               REV.B(1603) IS FOR COLOR OPERATION. 
*               REV.C(1648) IS FOR POWER FAIL - AUTO RESTART. 
* 
P     NAM PNTS,7 91200-16002 REV 1648 -- 761124 
      ENT PNTS
      EXT .ENTR,POINT,IFIX
      SUP PRESS EXTRANEOUS LISTING
      SPC 1 
*   THIS ROUTINE SERVES AS AN INTERFACE BETWEEN THE TV LIBRARY
*   ROUTINE 'POINT' AND A BASIC CALLING PROGRAM.  IT ACCEPTS A
*   CONTIGUOUS ARRAY OF FLOATING-POINT X & Y SCREEN COORDINATES,
*   CONVERTS EACH TO INTEGER, AND SENDS UP TO 64 PAIRS OF COORD-
*   INATES TO THE ROUTINE 'POINT' AT A TIME.  THE BASIC USER MUST 
*   SET UP THE ARRAY OF X & Y COORDINATES AS FOLLOWS: 
* 
*              A(1)   =  FIRST X COORDINATE 
*              A(2)   =  FIRST Y COORDINATE 
*              A(3)   = SECOND X COORDINATE 
*              A(4)   = SECOND Y COORDINATE 
*                .         .
*                .         .
*                .         .
*              A(N-1) = LAST X COORDINATE 
*              A(N)   = LAST Y COORDINATE 
* 
*  THE BASIC USER THEN CALLS IT AS FOLLOWS: 
* 
*    10 CALL PNTS(A(1),N,M,P) 
* 
* 
*       A(1) --> FIRST WORD OF ARRAY OF POINTS
* 
*       N    --> NUMBER OF POINTS (X,Y PAIRS) 
* 
*       M    --> DISPLAY MODE 
* 
*       P    --> POWER FAIL INDICATOR 
      SKP 
*  TYPICAL BASIC PROGRAM
*  ---------------------
* 
*   10 DIM A(400) 
*   15 VIDLU(12,0)
*   20 FOR I=1 TO 400 STEP 2
*   30 A(I)=((I+1)/2)-1 
*   40 A(I+1)=((I+1)/2)-1 
*   50 NEXT I 
*   60 CALL PNTS(A(1),200,3,P)
*   70 IF P#0 THEN 15 
*   80 END
* 
*   THE ABOVE EXAMPLE CALLS THE POINT LIBRARY ROUTINE WITH 200 PAIRS
*   OF X & Y COORDINATES.  IMPORTANT:  WHEN SUPPLYING THE ARRAY 
*   NAME, IT MUST BE SPECIFIED AS AN ARRAY. 
* 
*  BRANCH & MNEMONIC TABLE CONSIDERATIONS 
*  -------------------------------------- 
* 
*  THE FOLLOWING TYPE OF ENTRY MUST BE MADE:
* 
*  FOR RTE-B:  PNTS(R,I,I,V)
* 
*  FOR REAL TIME BASIC:  PNTS(RA,I,I,IV)
* 
*  THE ENTRY POINT MUST BE 'PNTS' WITH FOUR PARAMETERS EXACTLY
*  AS SHOWN.
      SKP 
BUFER NOP           REAL ARRAY ADRS FOR POINTS. 
NUMBR DEF B1        NUMBER OF (X,Y) POINTS. 
MODE  DEF ZERO      SCREEN DISPLAY MODE.
PFL   NOP           POWER FAIL INDICATOR. 
      SPC 1 
PNTS  NOP  << ENTRY >>
      JSB .ENTR   GET PARAMETER ADDRESSES.
      DEF BUFER 
      SPC 1 
      LDA NUMBR,I  SET USERS POINT COUNT. 
      SZA,RSS      IF =0, RETURN. 
      JMP PNTS,I
      CMA,INA      SET NEGATIVE.
      STA NUMBR 
      LDA PFL       TRANSFER POWER FAIL INDICATOR 
      STA PFAIL       ADDRESS FOR NEXT CALL.
      SPC 1 
NEXTB LDA BUFAD    INITIALIZE INTERNAL POINT BUFFER ADDRESS.
      STA BUF 
      LDA M64      SET-UP LOOP
      STA COUNT    CONTROL FOR 64 POINTS. 
      CLA          INITIALIZE ACTUAL BUFFER COUNT.
      STA NPT 
      SPC 1 
NEXTP JSB GETP     GET A REAL X-COORDINATE & FIX. 
      STA XY       SAVE FOR LATER MERGE WITH Y-COORDINATE.
      JSB GETP     GET A REAL Y-COORDINATE & FIX. 
      ALF,ALF      POSITION Y IN HIGH 8 BITS. 
      IOR XY       MERGE TO FORM (Y,X)
      STA BUF,I    PUT AWAY IN INTERNAL BUFFER. 
      ISZ NUMBR    LAST USER POINT ?
      RSS          NO.
      JMP DUMP     YES, DUMP TO TV.?
      ISZ COUNT    64 PAIRS ? 
      RSS 
      JMP DUMP     DUMP TO TV.
      ISZ BUF      BUMP INTERNAL BUFFER ADDRESS.
      ISZ NPT      UPDATE NUMBER OF POINTS. 
      JMP NEXTP    GET NEXT POINT.
      SPC 1 
DUMP  ISZ NPT      UPDATE ACTUAL NUMBER OF POINTS.
      JSB POINT    SEND 
      DEF *+5        64 (OR LESS) 
      DEF BUFFR       PAIRS 
      DEF NPT             OF
      DEF MODE,I            POINTS. 
PFAIL NOP 
      SPC 1 
      LDA NUMBR     TIME TO 
      SZA,RSS         GET OUT?
      JMP DONE          YES!
      JMP NEXTB         NO, START NEXT BUFFER.
      SKP 
DONE  LDA DEFB1     RE-ESTABLISH DEFAULTS 
      STA NUMBR       / 
      LDA DEF0        / 
      STA MODE        / 
      CLA             / 
      STA PFL         / 
      JMP PNTS,I    ALL FINISHED!!
      SPC 2 
GETP  NOP         < GET NEXT REAL POINT & FIX > 
      DLD BUFER,I  GET THE FLOATING-POINT VALUE.
      JSB IFIX     CONVERT TO INTEGER 
      LDB BUFER     UPDATE USER'S BUFFER ADDRESS. 
      ADB .2
      STB BUFER 
      JMP GETP,I   RETURN.
      SPC 2 
DEFB1 DEF B1
B1    OCT 1 
.2    DEC 2 
XY    NOP         HOLDS FORMED (Y,X) POINT
M64   DEC -64     MAXIMUM POINT CONTROL VALUE 
NPT   NOP         ACTUAL NUMBER OF POINTS IN BUFFER 
COUNT NOP         BUFFER LOOP CONTROL VALUE 
DEF0  DEF ZERO
ZERO  OCT 0 
BUF   NOP         USERS BUFFER ADDRESSR ADDRESS 
BUFAD DEF *+1      INTERNAL POINT BUFFER
BUFFR BSS 64       POINT BUFFER AREA. 
      SPC 1 
      END
