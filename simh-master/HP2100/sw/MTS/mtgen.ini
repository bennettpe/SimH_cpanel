set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS
; set mp  debug=IOBUS
; set drc debug=IOBUS

echo
echo ***
echo *** MTS - Magnetic Tape System (1970) 
echo *** Generation
echo ***
echo

; generates a new MTS system
;
; Sw installed:
;   CAT        - List tape catalog
;   EDIT       - Editor
;   ALGOL      - Algol Compiler
;   ASMB       - Assembler
;   FTN        - Fortran II
;   BASIC      - HP BASIC
;

set cpu 2116 
set cpu 16k
set cpu eau

set dpd dis
set drd dis
set msd dis
set mtd dis

set ptr sc=21
set ptp sc=22
set tty sc=14
set tty autolf
send after=200k
send delay=30k

set lpt sc=16

set msd sc=26
set msd ena

set clk sc=13

; Preparation of Basic Control System (BCS) 

echo ---> Load Module BCS Prepare Control System
att ptr -q mtgen/bcs/20021-60001_Rev-C_PREPARE_CONTROL_SYSTEM.abs
boot ptr

; tty select code = 14
d s 14

go 2000 until "HS INP?" 
send '21\r'
go until "HS PUN?" 
send '22\r'
go until "FWA MEM?" 
send '110\r'
go until "LWA MEM?" 
send '35777\r'
go

echo ---> Load Module BCS MT Driver (D.23) HP7970
att ptr -q mtgen/bcs/13023-60001_Rev-B_BCS_HP7970_MT_DRIVER_D.23.rel
; attach ptr -q mtgen/bcs/20022_BCS_HP3030_MAG_TAPE_DRIVER_D.22.rel
go
 
echo ---> Load Module BCS TTY Driver (D.00) 
att ptr -q mtgen/bcs/20017-60001_Rev-C_BCS_TTY_DRIVER_D.00.rel
go
echo ---> Load Module BCS PTR Driver (D.01) 
att ptr -q mtgen/bcs/20005-01_BCS_TAPE_READER_DRIVER_D.01.rel
go
echo ---> Load Module BCS PTP Driver (D.02) 
att ptr -q mtgen/bcs/20006-01_BCS_TAPE_PUNCH_DRIVER_D.02.rel
go
echo ---> Load Module BCS LPT Driver (D.12) 
att ptr -q mtgen/bcs/24273-60001_Rev-A_BCS_HP2610A-2614A_LINE_PRINTER_DRIVER_D.12.rel
go
echo ---> Load Module BCS IOC
att ptr -q mtgen/bcs/24173-60001_Rev-A_BCS_INPUT_OUTPUT_CONTROL.rel
go

send "21,D.01\r"
send "22,D.02\r"
send "14,D.00\r"
send "16,D.12\r"
send "26,D.23,D\r"
send "26,D.23,D,U1\r"
send "/E\r"


; 21,D.01 is the EQT 7 (the first in list) -> D.01 is PTR papertape reader
; 22,D.02 is EQT 10 (7 octal + 1 = 10 octal) -> D.02 is PTP papertape punch
; 14,D.00 is EQT 11 -> D.00 -> tty terminal
; 26,D.23,D    is EQT 13 -> D.23 -> mag tape 
; 26,D.23,D,U1 is EQT 14 -> mag tape with file protect
; next the EQT number should be suppiled: so, KYBD is 11, etc

go until "-KYBD?" 
send '11\r'
go until "-TTY?" 
send '11\r'
go until "-LIB?" 
send '13\r'
go until "-PUNCH?" 
send '10\r'
go until "-INPUT?" 
send '7\r'
go until "-LIST?" 
send '12\r'
go until "DMA?" 
send '6,7\r'
go

echo ---> Load Module BCS LOADR
att -q -e ptr mtgen/bcs/20018-60001_Rev-1430_BCS_RELOCATING_LOADER.rel
go

send "4,103004\r"
send "5,106005\r"
send "14,31,I.00\r"
send "15,31,I.00\r"
send "16,32,I.12\r"
send "21,33,I.01\r"
send "22,34,I.02\r"
send "26,35,I.23\r"
send "27,36,C.23\r"
send "77,102077\r"
send "/E\r"
go

att ptp -n -q mtgen/bcs_mts.abs
echo ---> Punch Prepared BCS Module
go

; HALT instruction 102077, P: 02763 (LIA 1)

det -q ptp

; Preparation of SIO (Simple Input/Output) Standard and Non-Standard Modules
; load teleprinter, papertapertape reader, papertape punch SIO drivers

echo ---> Load Module SIO TTY Driver
att ptr -q mtgen/sio/20330-01_16K_SIO_BUFFERED_TELPRINTER_DRIVER.abs
boot ptr

; tty select code = 14
reset
d s 14
go 2

echo ---> Load Module SIO PTR Driver
att ptr -q mtgen/sio/20319-60001_Rev-A_16K_SIO_TAPE_READER_DRIVER.abs
boot ptr

; ptr select code = 21
d s 21
go 2

echo ---> Load Module SIO PTP Driver
att ptr -q mtgen/sio/20320-60001_Rev-A_16K_SIO_TAPE_PUNCH_DRIVER.abs
boot ptr

; ptp select code = 22
d s 22
go 2

; run SYSTEM DUMP to generate the Standard SIO drivers tape for MTS

echo ---> Load Module SIO SDUMP
att ptr -q mtgen/sio/20335-60001_Rev-B_16K_SIO_SYSTEM_DUMP.abs
boot ptr

att ptp -n -q mtgen/S.SIO.abs
echo ---> Punch Configured SIO.S Module
go 2

det -q ptp

; now prepare non-standar driver, with tty, lpr, ptp

echo ---> Load Module SIO TTY Driver
att ptr -q mtgen/sio/20330-01_16K_SIO_BUFFERED_TELPRINTER_DRIVER.abs
boot ptr

; tty select code = 14
d s 14
go 2

echo ---> Load Module SIO LPT Driver
att ptr -q mtgen/sio/24270-60001_Rev-A_16K_SIO_HP2610A-2614_LINE_PRINTER_DRIVER.abs
boot ptr

; lpt select code = 16
d s 16
go 2

echo ---> Load Module SIO PTP Driver
att ptr -q mtgen/sio/20320-60001_Rev-A_16K_SIO_TAPE_PUNCH_DRIVER.abs
boot ptr

; ptp select code = 22
d s 22
go 2

; run SYSTEM DUMP to generate the Non-Standard SIO drivers tape for MTS

echo ---> Load Module SIO SDUMP
att ptr -q mtgen/sio/20335-60001_Rev-B_16K_SIO_SYSTEM_DUMP.abs
boot ptr

att ptp -q -n mtgen/PR-TY.abs
echo ---> Punch Configured PR-TY SIO Module
go 2

det -q ptp

; Created the Standard and non standard SIO drivers for
; MTS (Magnetic Tape System)


; configure tape basic

echo ---> Load Module BASIC Prepare 
att ptr -q mtgen/sw/basprepare.abs
boot ptr
echo ---> Load Module HP BASIC 
att ptr -q mtgen/sw/hpbasic.abs
boot ptr

att ptp -q -n mtgen/basic.abs

d s 14
go 2 until "PHOTO READER I/O ADDRESS?" 
send "21\r"
go until "PUNCH I/O ADDRESS?" 
send "22\r"
go until "SYSTEM DUMP I/O ADDRESS?" 
send "22\r"
go until "CORE SIZE?" 
send "16\r"
go

echo ---> Punch Configured Basic
det -q ptp

; Created configured basic to be used from
; MTS (Magnetic Tape System)

; Preparation of MTS Bootstrap 
echo ---> Load Module SIO.S Driver
att ptr -q mtgen/s.sio.abs
boot ptr
echo ---> Load Module SIO MT Driver HP7970
att ptr -q mtgen/sio/13022-60001_Rev-B_16K_SIO_HP7970A_MT_DRIVER.abs
boot ptr

; mt select code = 26
reset
d s 26
go 2

echo ---> Load Module MTS BOOT
att ptr -q mtgen/mts/20595-60001_Rev-B_16K_MT_SYSTEM_BOOTSTRAP.abs
boot ptr
d s 0 
go 2

echo ---> Load Module SIO SDUMP
att ptr -q mtgen/sio/20335-60001_Rev-B_16K_SIO_SYSTEM_DUMP.abs
boot ptr

att ptp -n -q mtgen/tmp.conf_bootstrap.abs

d s 100000
echo ---> Punch Prepared MTS Bootstrap Module
go 2

det -q ptp

; created the Prepared (configured) MTS Bootstrap Papertape
; Prepare PTS program, generate MTS tape

att msc -n -q tmp.MTS.tape

echo ---> Load Module PTS Prepare Tape System
att ptr -q mtgen/pts/24016-60001_Rev-A_PREPARE_TAPE_SYSTEM.abs
boot ptr

; configure MT SIO driver for PTS

echo ---> Load Module SIO MT Driver HP7970
att ptr -q mtgen/sio/13022-60001_Rev-B_16K_SIO_HP7970A_MT_DRIVER.abs
boot ptr
; mt select code = 26
reset
d s 26
go 2

; start PTS 
; tty select sc=14
d s 14

echo ---> Load Module MTS .IPL.
att ptr -q mtgen/mts/20595-60002_Rev-B_16K_MT_SYSTEM_IPL.abs

; input programs from ptr -> select code 21
go 100 until "PROGRAM INPUT DEVICE S.C.= ?" 
send "21\r"
go until "I.D. NAME:" 
send ".IPL.\r"
go until "S.A." 
send "77\r"
go

go until "I.D. NAME:" 
send "S.SIO\r"
go until "S.A." 
send "77\r"
go

echo ---> Load Configured SIO.S Module
att ptr -q mtgen/S.SIO.abs

go until "I.D. NAME:" 
send "X-REF\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module X-REF
att ptr -q mtgen/sw/xref.abs

go until "I.D. NAME:" 
send "ASMB-CS\r"
go until "S.A." 
send "120\r"
go

echo ---> Load SW Module Extended ASMB - Control Statement through keyboard
att ptr -q mtgen/mts/dummy.abs

go until "I.D. NAME:" 
send "ASMB\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module Extended ASMB
att ptr -q mtgen/sw/extasmb.abs

go until "I.D. NAME:" 
send "ALGOL\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module ALGOL
att ptr -q mtgen/sw/algol.abs

go until "I.D. NAME:" 
send "EDIT\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module Symbolic Editor
att ptr -q mtgen/sw/symedit.abs

go until "I.D. NAME:" 
send "FTN-CS\r"
go until "S.A." 
send "50\r"
go

echo ---> Load SW Module Fortan - Control Statement through keyboard
att ptr -q mtgen/mts/dummy.abs

go until "I.D. NAME:" 
send "FTN\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module Fortan (pass 1)
att ptr -q mtgen/sw/fortran1.abs

go until "I.D. NAME:" 
send "PR-TY\r"
go until "S.A." 
send "100\r"
go

echo ---> Load Non Standard SIO Module TY-PR-PU
att ptr -q mtgen/PR-TY.abs

go until "I.D. NAME:" 
send "ONLINE\r"
go until "S.A." 
send "77\r"
go

echo ---> Option to input source program through keyboard
att ptr -q mtgen/mts/20595-80003_B_ONLINE.abs

go until "I.D. NAME:" 
send "BYLIST\r"
go until "S.A." 
send "77\r"
go

echo ---> Option to bypass list output
att ptr -q mtgen/mts/20595-80003_B_BYLIST.abs

go until "I.D. NAME:" 
send "BYPUNCH\r"
go until "S.A." 
send "77\r"
go

echo ---> Option to bypass punch output
att ptr -q mtgen/mts/20595-80003_B_BYPUNCH.abs

go until "I.D. NAME:" 
send "FTN2\r"
go until "S.A." 
send "100\r"
go

echo ---> Load SW Module Fortan (pass 2)
att ptr -q mtgen/sw/fortran2.abs

go until "I.D. NAME:" 
send "LOADR\r"
go until "S.A." 
send "2\r"
go

echo ---> Load Prepared BCS (includes Relocatable Loader)
att ptr -q mtgen/bcs_mts.abs

go until "I.D. NAME:" 
send "BASIC\r"
go until "S.A." 
send "100\r"
go

echo ---> Load Configured BASIC 
att ptr -q mtgen/basic.abs

go until "I.D. NAME:" 
send "CAT\r"
go until "S.A." 
send "100\r"
go

echo ---> Load LOCUS Contributed MTS TAPE CATALOG
att ptr -q mtgen/mts/22446-80001_A_MTS_CAT.abs

go until "I.D. NAME:" 
send "FILE2\r"
go until "S.A." 
send "77\r"
go

echo ---> Load LOCUS Contributed MTS TAPE CATALOG FILE2 Overlay
att ptr -q mtgen/mts/22446-80001_A_MTS_CAT_FILE2.abs

; end of file1

go until "I.D. NAME:" 
send "/E\r"
go

;now load relocatable libs in file2

echo ---> Load BCS Relocatable Library
att ptr -q mtgen/bcs/24145-60001_Rev-B_BCS_RELOCATABLE_LIBRARY_(EAU).rel
go

d s 100000
go

det -q all

; Tape with File1 and File2 generated in tmp.MTS.tap
; PaperTape tmp.conf_bootstrap.abs created and prepared

echo
echo ***
echo *** System generated 
echo *** Boot and test the system
echo ***
echo

reset

att lpt -q lpt.txt
att msc -q tmp.MTS.tape

att ptr -q mtgen/tmp.conf_bootstrap.abs
boot ptr
echo

d s 100000

go 100 until "*SET ALL SWITCH REGISTER BITS TO ZERO(0)." 
d s 0

; run LOCUS user contributed sw to list contents of tape 
; MTS does not provide a directory listing command :-(

; List only absolute programs in FILE1
go until "*NEXT?" 
send ":PROG,CAT\r"

; List absolute programs in FILE1 and relocatable libraries in file2
go until "*NEXT?" 
send ":PROG,CAT,FILE2\r"

; BASIC test run

go until "*NEXT?" 
send ":PROG,BASIC\r"
go until "READY" 

set tty noautolf

send '10 PRINT "BASIC HOLA"\r'
send '20 END\r'
send 'RUN\r'
go until "READY" 
send "BYE\r"
go until "*NEXT?" 

set tty autolf

send ":PAUSE\r"
go


; List papertape file 

att ptr -q Sample/Sample.ASMB.txt

go until "*NEXT?" 
send ":PROG,EDIT\r"
go until "EDIT FILE DEVICE?" 
send "/T\r"
send "/L\r"
send "/E\r"
go until "SYMBOLIC FILE SOURCE DEVICE?" 
send "/P\r"
go until "**END-OF-TAPE" 
send "/E\r"
go until "*NEXT?" 
send ":PAUSE\r"
go

; go here after CPU stops on :PAUSE command
; Load source file from papertape and save to mag tape

att ptr -q Sample/Sample.ASMB.txt

go until "*NEXT?" 
send ":PROG,EDIT\r"
go until "EDIT FILE DEVICE?" 
send "/T\r"
send "/E\r"
go until "SYMBOLIC FILE SOURCE DEVICE?" 
send "/P\r"
go until "SYMBOLIC FILE DESTINATION DEVICE?" 
send "/M\r"
go until "**END-OF-TAPE" 
send "/E\r"
go until "*NEXT?" 
send ":PAUSE\r"
go

; go here after CPU stops on :PAUSE command

; assemble file from magtape -> switch 2 = on to input from magtape. Else input from paper tape
; attach output paper tape

att ptp -q -n prog.abs
d s 4

go until "*NEXT?" 
send ":PROG,ASMB\r"
go until "*NEXT?" 
send ":PAUSE\r"
go

det -q ptp
del -q prog.abs

; compile and run algol prog. 
; - Source file in paper tape, 
; - compiled rel file in papertape
; - library to link to from Mag Tape
; - linked ready to run program in core mem

att ptr -q Sample/Sample.ALGOL.txt
att ptp -n -q prog.rel

d s 0
go until "*NEXT?" 
send ":PROG,ALGOL\r"
go until "*NEXT?" 
send ":PAUSE\r"
go

det -q ptp
att ptr -q prog.rel
att ptp -n -q prog.abs

; d s 40000 <-- save program to .abs file
; d s 0     <-- run program in core
d s 0 
go until "NEXT?" 
send ":PROG,LOADR\r"
go

; Stops after *LOAD to continue loading files or to finish loading
; d s 0 <--- att ptr tape; d s 0; cont to load the .rel papertape
; d s 1 <--- print undef symbols and halts to allow attach more paper tapes
; d s 2 <--- resolve symbols, and go on even if still undefined (marked with 000000)
; d s 4 <--- link with lib, resolve symbols, and halts if symbols undef to allow attach more paper tapes
d s 4
go

; Stops after *LST to configure mode: save to .abs or run in core
; d s 0      <-- to print entry point list 
; d s 100000 <-- to not print 
d s 0
go

; print *RUN and stops
; just issue cont to run the compiled program
; then pause to continue script

go until "*NEXT?" 
send ":PAUSE\r"
go

att ptr -q Sample/Sample.FTN.txt
att ptp -n -q prog.rel

d s 0
go until "*NEXT?" 
send ":PROG,FTN\r"
go until "*NEXT?" 
send ":PAUSE\r"
go

det -q ptp
att ptr -q prog.rel
att ptp -n -q prog.abs

; d s 40000 <-- save program to .abs file
; d s 0     <-- run program in core
d s 0 
go until "NEXT?" 
send ":PROG,LOADR\r"
go

; Stops after *LOAD to continue loading files or to finish loading
; d s 0 <--- att ptr tape; d s 0; cont to load the .rel papertape
; d s 1 <--- print undef symbols and halts to allow attach more paper tapes
; d s 2 <--- resolve symbols, and go on even if still undefined (marked with 000000)
; d s 4 <--- link with lib, resolve symbols, and halts if symbols undef to allow attach more paper tapes
d s 4
go

; Stops after *LST to configure mode: save to .abs or run in core
; d s 0      <-- to print entry point list 
; d s 100000 <-- to not print 
d s 0
go

; prinst *RUN and stops
; just issue cont to run the compiled program
; then pause to continue script

go until "*NEXT?" 
send ":PAUSE\r"
go

; Successfull test. Copy as production tape

det -q all
del -q prog.abs
del -q prog.rel
copy -q tmp.MTS.tape                   MTS.tape
copy -q mtgen/tmp.conf_bootstrap.abs   mtgen/conf_bootstrap.abs
del  -q tmp.MTS.tape
del  -q mtgen/tmp.conf_bootstrap.abs   

echo
echo
echo ***
echo *** Generation finished 
echo ***

if "%1"=="QUIT" quit
echo
echo *** Press Enter to quit
set env -p "   " a
echo
 
echo
quit
goto end

:end