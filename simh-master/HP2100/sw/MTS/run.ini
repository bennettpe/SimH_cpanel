
set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS
; set mp  debug=IOBUS
; set drc debug=IOBUS

if "%1"=="" goto nolang
if "%2"=="" goto noprog
if not exist "%2" goto prognotfound
if "%3"=="" goto noprogname
:progok

echo
echo ***

if "%1"!="ALGOL" goto pa1
   echo *** Algol for MTS
   goto pa0
:pa1
if "%1"!="FTN" goto pa2
   echo *** Fortran II for MTS
   goto pa0
:pa2
if "%1"!="ASMB" goto pa3
   echo *** Assembler for MTS
   goto pa0
:pa3
goto nolang

:pa0

echo *** Compile, Link and Run "%2" 
echo *** Prog name "%3"
echo ***
echo

; the prog name can be found in source file:
; algol:    HPAL,L,"TEN"   --> prog name is TEN
; fortran:  PROGRAM HELLO  --> prog name is HELLO
; assembler: NAM HELLO,3   --> prog name is HELLO

set cpu 2116 
set cpu 16k
set cpu eau

set dpd dis
set drd dis
set msd dis
set mtd dis

set ptr sc=21
set ptp sc=22
set tty sc=14

set tty autolf
set console del=177
set console pchar=23400
send after=200k
send delay=30k

set lpt sc=16

set msd sc=26
set msd ena

set clk sc=13

att lpt -n -q lpt.txt
att msc -q MTS.tape

att ptr -q mtgen/conf_bootstrap.abs
boot ptr

d s 100000

go 100 until "*SET ALL SWITCH REGISTER BITS TO ZERO(0)." 
d s 0

go until "*NEXT?" 

att ptr -q %2
att ptp -n -q prog.rel

if "%1"!="ALGOL" goto pb1

   send ":PROG,ALGOL\r"
   go until "*NEXT?" 
   send ":PAUSE\r"
   go
   goto pb0

:pb1
if "%1"!="FTN" goto pb2

   send ":PROG,FTN\r"
   go until "*NEXT?" 
   send ":PAUSE\r"
   go
   goto pb0

:pb2
if "%1"!="ASMB" goto pb3

   send ":PROG,ASMB\r"
   go until "*NEXT?" 
   send ":PAUSE\r"
   go
   goto pb0

:pb3
goto nolang

:pb0

det -q ptp
att ptr -q prog.rel
att ptp -n -q prog.abs

; d s 40000 <-- save program to .abs file
; d s 0     <-- run program in core
d s 0 
go until "NEXT?" 
send ":PROG,LOADR\r"
go

; Stops after *LOAD to continue loading files or to finish loading
; d s 0 <--- att ptr tape; d s 0; cont to load the .rel papertape
; d s 1 <--- print undef symbols and halts to allow attach more paper tapes
; d s 2 <--- resolve symbols, and go on even if still undefined (marked with 000000)
; d s 4 <--- link with lib, resolve symbols, and halts if symbols undef to allow attach more paper tapes
d s 4
go

; Stops after *LST to configure mode: save to .abs or run in core
; d s 0      <-- to print entry point list 
; d s 100000 <-- to not print 
d s 0
go

; print *RUN and stops
; just issue cont to run the compiled program
; then pause to continue script

go until "*NEXT?" 
send ":PAUSE\r"
go


:endjob

det -q all
del -q prog.rel
del -q prog.abs

echo
echo
goto end


:noprog
echo
echo Missing file.txt as parameter of script
echo
goto end

:prognotfound
echo
echo File "%2" not found
echo
goto end

:noprogname
echo
echo Missing program name. The program name is specified in the
echo source code PROGRAM, HPAL or NAM statement
echo
goto end

:nolang
echo
echo Missing languaje to use. Can be ALG, FTN or ASMB 
echo
goto end

:end 


