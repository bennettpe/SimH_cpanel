Logging to file "log.txt"

***
*** MTS - Magnetic Tape System (1970)
*** Generation
***

---> Load Module BCS Prepare Control System

HALT instruction 102077, P: 37712 (NOP)


HS INP?
21
HS PUN?
22


FWA MEM?
110
LWA MEM?
35777


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS MT Driver (D.23) HP7970


D.23 
 34422 35777


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS TTY Driver (D.00)


D.00 
 33650 34421


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS PTR Driver (D.01)


D.01 
 33306 33647


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS PTP Driver (D.02)


D.02 
 32775 33305


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS LPT Driver (D.12)


D.12 
 32076 32774


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS IOC


IOC  
 31651 32075


* TABLE ENTRY 

EQT?

HALT instruction 102011, P: 04005 (CLA)
21,D.01
22,D.02
14,D.00
16,D.12
26,D.23,D
26,D.23,D,U1
/E


SQT?
-KYBD?
11
-TTY?
11
-LIB?
13
-PUNCH?
10
-INPUT?
7
-LIST?
12


DMA?
6,7


* LOAD

HALT instruction 102000, P: 02041 (JMP 613)
---> Load Module BCS LOADR


LOADR
 27216 31611


 INTERRUPT LINKAGE ?



HALT instruction 102011, P: 02303 (JSB 2122)
4,103004
5,106005
14,31,I.00
15,31,I.00
16,32,I.12
21,33,I.01
22,34,I.02
26,35,I.23
27,36,C.23
77,102077
/E


.SQT.  31612
.EQT.  31620
D.23   34422
I.23   35541
C.23   35562
DMAC1  32072
DMAC2  32073
.BUFR  32022
IOERR  32051
D.00   33650
I.00   34042
D.01   33306
I.01   33426
D.02   32775
I.02   33112
D.12   32076
I.12   32605
.IOC.  31651
XEQT   32071
XSQT   32070
HALT   31577
.LDR.  30760
.MEM.  31604
LST    27247


*SYSTEM LINK
 00110 00352




*BCS ABSOLUTE OUTPUT

HALT instruction 102000, P: 02746 (LDA 3110)
---> Punch Prepared BCS Module

HALT instruction 102077, P: 02763 (LIA 1)
---> Load Module SIO TTY Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 37401 (JMP 37400)
---> Load Module SIO PTR Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 37234 (JMP 37233)
---> Load Module SIO PTP Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 37133 (JMP 37132)
---> Load Module SIO SDUMP

HALT instruction 102077, P: 37712 (NOP)
---> Punch Configured SIO.S Module

HALT instruction 102077, P: 35040 (JMP 35000)
---> Load Module SIO TTY Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 37401 (JMP 37400)
---> Load Module SIO LPT Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 36020 (JMP 36000)
---> Load Module SIO PTP Driver

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 37133 (JMP 37132)
---> Load Module SIO SDUMP

HALT instruction 102077, P: 37712 (NOP)
---> Punch Configured PR-TY SIO Module

HALT instruction 102077, P: 35040 (JMP 35000)
---> Load Module BASIC Prepare

HALT instruction 102077, P: 37712 (NOP)
---> Load Module HP BASIC

HALT instruction 102077, P: 37712 (NOP)

 PHOTO READER I/O ADDRESS? 21
 PUNCH I/O ADDRESS? 
22
 SYSTEM DUMP I/O ADDRESS?
22
 CORE SIZE? 
16

HALT instruction 102077, P: 16562 (JMP 16547)
---> Punch Configured Basic
---> Load Module SIO.S Driver

HALT instruction 102077, P: 37712 (NOP)
---> Load Module SIO MT Driver HP7970

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 36117 (LDA 36132)
---> Load Module MTS BOOT

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 00340 (JMP 337)
---> Load Module SIO SDUMP

HALT instruction 102077, P: 37712 (NOP)
---> Punch Prepared MTS Bootstrap Module

HALT instruction 102077, P: 35040 (JMP 35000)
---> Load Module PTS Prepare Tape System

HALT instruction 102077, P: 37712 (NOP)
---> Load Module SIO MT Driver HP7970

HALT instruction 102077, P: 37712 (NOP)

HALT instruction 102077, P: 36117 (LDA 36132)
---> Load Module MTS .IPL.


                   PREPARE TAPE SYSTEM


PROGRAM INPUT DEVICE S.C.= ?
21

ABSOLUTE PROGRAMS, FILE#1.

LOAD THESE TWO(2) MODULES FIRST:

.IPL.
S.SIO


I.D. NAME:
.IPL.
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)

I.D. NAME:
S.SIO
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load Configured SIO.S Module

I.D. NAME:
X-REF
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module X-REF

I.D. NAME:
ASMB-CS
S.A.
120
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Extended ASMB - Control Statement through keyboard

I.D. NAME:
ASMB
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Extended ASMB

I.D. NAME:
ALGOL
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module ALGOL

I.D. NAME:
EDIT
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Symbolic Editor

I.D. NAME:
FTN-CS
S.A.
50
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Fortan - Control Statement through keyboard

I.D. NAME:
FTN
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Fortan (pass 1)

I.D. NAME:
PR-TY
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load Non Standard SIO Module TY-PR-PU

I.D. NAME:
ONLINE
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Option to input source program through keyboard

I.D. NAME:
BYLIST
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Option to bypass list output

I.D. NAME:
BYPUNCH
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Option to bypass punch output

I.D. NAME:
FTN2
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load SW Module Fortan (pass 2)

I.D. NAME:
LOADR
S.A.
2
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load Prepared BCS (includes Relocatable Loader)

I.D. NAME:
BASIC
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load Configured BASIC

I.D. NAME:
CAT
S.A.
100
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load LOCUS Contributed MTS TAPE CATALOG

I.D. NAME:
FILE2
S.A.
77
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load LOCUS Contributed MTS TAPE CATALOG FILE2 Overlay

I.D. NAME:
/E
*EOF

RELOCATABLE LIBRARY, FILE#2.

* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
---> Load BCS Relocatable Library
* LOAD

HALT instruction 102057, P: 00673 (JMP 666,I)
*EOF

*END

HALT instruction 102077, P: 00100 (JMP 110)

***
*** System generated
*** Boot and test the system
***


HALT instruction 102077, P: 37712 (NOP)



               HP MAGNETIC TAPE SYSTEM


*BATCH OPTION ENABLED.

*SET ALL SWITCH REGISTER BITS TO ZERO(0).

*NEXT?
:PROG,CAT

FILE 1 ABSOLUTE PROGRAMS: 
.IPL.     
S.SIO     
X-REF     
ASMB-CS   
ASMB      
ALGOL     
EDIT      
FTN-CS    
FTN       
PR-TY     
ONLINE    
BYLIST    
BYPUNCH   
FTN2      
LOADR     
BASIC     
CAT       
FILE2     
LE2     
*NEXT?
:PROG,CAT,FILE2

FILE 1 ABSOLUTE PROGRAMS: 
.IPL.     
S.SIO     
X-REF     
ASMB-CS   
ASMB      
ALGOL     
EDIT      
FTN-CS    
FTN       
PR-TY     
ONLINE    
BYLIST    
BYPUNCH   
FTN2      
LOADR     
BASIC     
CAT       
FILE2     
LE2     

FILE 2 RELOCATABLE LIBRARY


EAU.B 


MEMRY 
ENTRY POINTS
.ALC. .CLR. .RTN. 
EXTERNAL REF
.MEM. 


FRMTR 
ENTRY POINTS
.BIO. .DIO. .DTA. .IAR. .IOI. .IOR. .RAR. OLDIO 
EXTERNAL REF
.FLUN .IOC. .PACK ENDIO FLOAT IFIX  


CODE  
ENTRY POINTS
ACODE CODE  


MAGTP 
ENTRY POINTS
BFINP BFOUT CLEAR GAP3  IEOF  IEOT  IERR  ISOT  IUNIT IWRDS LOCAL RWSTB 
EXTERNAL REF
.ENTR .IOC. 


%ANH  
ENTRY POINTS
%ANH  
EXTERNAL REF
TANH  


%XP   
ENTRY POINTS
%XP   
EXTERNAL REF
EXP   


%IN   
ENTRY POINTS
%IN   
EXTERNAL REF
SIN   


%OS   
ENTRY POINTS
%OS   
EXTERNAL REF
COS   


%AN   
ENTRY POINTS
%AN   
EXTERNAL REF
TAN   


%BS   
ENTRY POINTS
%BS   
EXTERNAL REF
ABS   


%LOG  
ENTRY POINTS
%LOG  
EXTERNAL REF
ALOG  


%QRT  
ENTRY POINTS
%QRT  
EXTERNAL REF
SQRT  


%IGN  
ENTRY POINTS
%IGN  
EXTERNAL REF
ADRES GETAD SIGN  


%LOAT 
ENTRY POINTS
%LOAT 
EXTERNAL REF
FLOAT 


%FIX  
ENTRY POINTS
%FIX  
EXTERNAL REF
IFIX  


%TAN  
ENTRY POINTS
%TAN  
EXTERNAL REF
ATAN  


%ABS  
ENTRY POINTS
%ABS  
EXTERNAL REF
IABS  


%SIGN 
ENTRY POINTS
%SIGN 
EXTERNAL REF
ADRES GETAD ISIGN 


%AND  
EXTERNAL REF
ADRES GETAD 


%OR   
ENTRY POINTS
%OR   
EXTERNAL REF
ADRES GETAD 


%OT   
ENTRY POINTS
%OT   


%SSW  
ENTRY POINTS
%SSW  
EXTERNAL REF
ISSW  


TANH  
ENTRY POINTS
TANH  
EXTERNAL REF
ABS   EXP   ..FCM .FAD  .FDV  .FLUN .FMP  .FSB  .PWR2 


TAN   
ENTRY POINTS
TAN   
EXTERNAL REF
..FCM .CHEB .ERRR .FAD  .FDV  .FMP  .FSB  .IENT .PWR2 FLOAT 


ATAN  
ENTRY POINTS
ARCTA ATAN  
EXTERNAL REF
.CHEB .FDV  .FMP  .FSB  


.RTOR 
ENTRY POINTS
.RTOR 
EXTERNAL REF
EXP   .ERRR .FMP  ALOG  


EXP   
ENTRY POINTS
EXP   
EXTERNAL REF
.ERRR .FAD  .FDV  .FMP  .FSB  .IENT .PWR2 FLOAT 


SQRT  
ENTRY POINTS
SQRT  
EXTERNAL REF
.ERRR .FAD  .FDV  .FLUN .FMP  .PWR2 


ALOG  
ENTRY POINTS
LN    ALOG  
EXTERNAL REF
.ERRR .FAD  .FDV  .FLUN .FMP  .FSB  .MANT FLOAT 


WCSIO 
ENTRY POINTS
WREAD WWRIT 
EXTERNAL REF
.ENTR .IOC. 


SICOS 
ENTRY POINTS
COS   SIN   
EXTERNAL REF
..FCM .CHEB .ERRR .FAD  .FMP  .FSB  .IENT .PWR2 FLOAT 


CHEBY 
ENTRY POINTS
.CHEB 
EXTERNAL REF
.FAD  .FMP  .FSB  


SIGN  
ENTRY POINTS
SIGN  
EXTERNAL REF
..FCM 


ABS   
ENTRY POINTS
ABS   
EXTERNAL REF
..FCM 


..FCM 
ENTRY POINTS
..FCM 
EXTERNAL REF
..DLC 


..DLC 
ENTRY POINTS
..DLC 
EXTERNAL REF
.FSB  


FADSB 
ENTRY POINTS
.FAD  .FSB  
EXTERNAL REF
.FLUN .PACK 


PTAPE 
ENTRY POINTS
PTAPE 
EXTERNAL REF
.ENTR .IOC. 


INDEX 
ENTRY POINTS
.INDA .INDR 
EXTERNAL REF
.IOC. ENDIO 


.RTOI 
ENTRY POINTS
.RTOI 
EXTERNAL REF
.ERRR .FDV  .FMP  


.ITOI 
ENTRY POINTS
.ITOI 
EXTERNAL REF
.ERRR 


.PRAM 
ENTRY POINTS
.PRAM 


FDV   
ENTRY POINTS
.FDV  
EXTERNAL REF
.FLUN .PACK 


FMP   
ENTRY POINTS
.FMP  
EXTERNAL REF
.FLUN .PACK 


.MAP. 
ENTRY POINTS
.MAP. 


.IENT 
ENTRY POINTS
.IENT 
EXTERNAL REF
.FLUN FLOAT IFIX  


FLOAT 
ENTRY POINTS
FLOAT 
EXTERNAL REF
.PACK 


.PACK 
ENTRY POINTS
.PACK 


LEADR 
ENTRY POINTS
LEADR 
EXTERNAL REF
.ENTR .IOC. 


.ENTR 
ENTRY POINTS
.ENTR 


ENTIE 
ENTRY POINTS
.RND  ENTIE 


.EAU. 
ENTRY POINTS
.DIV  .DLD  .DST  .MPY  


GETAD 
ENTRY POINTS
ADRES GETAD 


IFIX  
ENTRY POINTS
IFIX  
EXTERNAL REF
.FLUN 


ERR0  
ENTRY POINTS
ERR0  


EXEC  
ENTRY POINTS
EXEC  
EXTERNAL REF
.STOP 


.PAUS 
ENTRY POINTS
.PAUS 
EXTERNAL REF
.IOC. ENDIO 


.STOP 
ENTRY POINTS
.STOP 
EXTERNAL REF
.IOC. ENDIO HALT  


ISIGN 
ENTRY POINTS
ISIGN 


.ERRR 
ENTRY POINTS
.ERRR 
EXTERNAL REF
.IOC. ENDIO 


PWR2  
ENTRY POINTS
.PWR2 
EXTERNAL REF
.FLUN 


.GOTO 
ENTRY POINTS
.GOTO 


.SWCH 
ENTRY POINTS
.SWCH 


.FLUN 
ENTRY POINTS
.FLUN 


MANT  
ENTRY POINTS
.MANT 


IAND  
ENTRY POINTS
IAND  


IOR   
ENTRY POINTS
IOR   


IABS  
ENTRY POINTS
IABS  


OVF   
ENTRY POINTS
OVF   


ISSW  
ENTRY POINTS
ISSW  


ENDIO 
ENTRY POINTS
ENDIO 
EXTERNAL REF
.IOC. 


.TAPE 
ENTRY POINTS
.TAPE 
EXTERNAL REF
.IOC. 


CLRIO 
ENTRY POINTS
CLRIO 
EXTERNAL REF
.IOC. 
*NEXT?
:PROG,BASIC

READY
10 PRINT "BASIC HOLA"
20 END
RUN
BASIC HOLA

READY
BYE
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,EDIT


                    HP SYMBOLIC EDITOR


EDIT FILE DEVICE?
/T

*
/L
/E

SYMBOLIC FILE SOURCE DEVICE?
/P

0001  ASMB,A,L,B,T,C
0002        ORG 77B
0003  RET   HLT 77B
0004        ORG 100B
0005        JMP START
0006        BSS 4
0007  LWA   OCT 125
0008        BSS 2
0009  MSG   ASC 6,TEST OUTPUT.
0010  LEN   OCT 14
0011  ADDR  DEF MSG
0012  START LDA LEN
0013        LDB ADDR
0014        JSB 102B,I
0015        CLA
0016        JMP RET
0017        END


**END-OF-TAPE 
*
/E

*END
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,EDIT


                    HP SYMBOLIC EDITOR


EDIT FILE DEVICE?
/T

*
/E

SYMBOLIC FILE SOURCE DEVICE?
/P

SYMBOLIC FILE DESTINATION DEVICE?
/M


**END-OF-TAPE 
*
/E

*END
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,ASMB
 PAGE 0001


0001                ASMB,A,L,B,T,C
LEN     000116
LWA     000105
MSG     000110
RET     000077
ADDR    000117
START   000120
**  NO ERRORS*
 PAGE 0002 #01


0001                ASMB,A,L,B,T,C
0002  00077               ORG 77B
0003  00077 102077  RET   HLT 77B
0004  00100               ORG 100B
0005  00100 024120        JMP START
0006  00101 000000        BSS 4
0007  00105 000125  LWA   OCT 125
0008  00106 000000        BSS 2
0009  00110 052105  MSG   ASC 6,TEST OUTPUT.
      00111 051524  
      00112 020117  
      00113 052524  
      00114 050125  
      00115 052056  
0010  00116 000014  LEN   OCT 14
0011  00117 000110  ADDR  DEF MSG
0012  00120 060116  START LDA LEN
0013  00121 064117        LDB ADDR
0014  00122 114102        JSB 102B,I
0015  00123 002400        CLA
0016  00124 024077        JMP RET
0017                      END
**  NO ERRORS*
                   CROSS-REFERENCE SYMBOL TABLE


 **ORG    ****     0002     0004   

 ADDR     0011     0013   

 LEN      0010     0012   

@LWA      0007   

 MSG      0009     0011   

 RET      0003     0016   

 START    0012     0005   
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,ALGOL
PAGE  001


001 02000 HPAL,L,B,"PROG"
002 02000 & EQT FOR THIS SYSTEM (LU = LOGICAL UNIT)
003 02000 & EQT?	     IS	...
004 02000 & 21,D.01 -> LU 07 (OCTAL) ON SELECT CHANNEL (SC) 21 
005 02000 &         -> D.01 -> PAPER TAPE READER
006 02000 & 22,D.02 -> LU 10 -> D.02 -> PAPER TAPE PUNCH
007 02000 & 14,D.00 -> LU 11 -> D.00 -> TTY
008 02000 & 16,D.12 -> LU 12 -> D.12 -> LINE PRINTER
009 02000 & 26,D.23,D -> LU 13 -> D.23 -> MAG TAPE
010 02000 & 26,D.23,D,U1 -> LU 14 -> MAG TAPE BUT WITH
011 02000 &                          FILE PROTECT FEATURE ENABLED
012 02000 & 
013 02000 & THE STANDARD EQUIPEMENT (SQT) IS SET ACCORDING TO EQT
014 02000 & -KYBD?  -> LU 01 -> KEYBOARD
015 02000 & 11         IS SET TO LU 11, THE TTY. 
016 02000 & -TTY?   -> LU 02 -> TTY
017 02000 & 11         IS SET ALSO TO LU 11, THE TTY. 
018 02000 &            WRITE(1, ...) PRINTS ON CONSOLE SCREEN
019 02000 & -LIB?   -> LU 03 -> RELOCATABLE LIBRARY
020 02000 & 13         IS SET TO LU 13, THE MAGETAPE (NO PROTECT). 
021 02000 &            LOADR PROGRAM SEARCH THE LIBRARIES ON TAPE
022 02000 & -PUNCH? 
023 02000 & 10
024 02000 & -INPUT?
025 02000 & 7
026 02000 & -LIST?
027 02000 & 12
028 02000 & 
029 02000 & SO, IN ALGOL
030 02000 & 
031 02000 & READ(1, ...) READS THE CONSOLE KEYBOARD
032 02000 &   NOTE: WRITE(1, ...) PRINTS TO KEYBOARD, BUT AS KEYBOARD IS THE 
033 02000 &   TTY DEVICE, ALSO PRINTS ON CONSOLE SCREEN
034 02000 & WRITE(2, ...) PRINTS ON TTY (THE CONSOLOE SCREEN)
035 02000 &   NOTE: READ(2, ...) READS THE SCREEN, BUT AS IS THE TTY DEVICE, 
036 02000 &   ALSO READS THE KEYBOARD
037 02000 & REWIND 3 REWINDS THE TAPE. TAPE IS ALSO LU 13 (13 OCTAL,=1*8+3=11 
038 02000 &   DECIMAL), SO REWIND 11 ALSO ADDRESS THE MAG TAPE
039 02000 &   LOGICAL UNIT 12 (14 OCTAL) IS ALSO THE MAG TAPE BUT USING THE 
040 02000 &   FILE PROTECT FEATURE 
041 02000 & 
042 02000 BEGIN
043 02003    WRITE(2,#("ALGOL HOLA"));
044 02021 END$

PROGRAM= 000022 BASE PAGE= 000002  ERRORS=000
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,LOADR
 
 
  PROG 
 
 
 02000 02021
 
 
 00353 00354
 
 
*LOAD

HALT instruction 102001, P: 31437 (CLB)
 
 
  FRMTR
 
 
 02022 04444
 
 
 00355 00642
 
 
  FLOAT
 
 
 04445 04451
 
 
  .PACK
 
 
 04452 04546
 
 
 00643 00652
 
 
  IFIX 
 
 
 04547 04600
 
 
 00653 00655
 
 
  .STOP
 
 
 04601 04615
 
 
  .FLUN
 
 
 04616 04626
 
 
 00656 00657
 
 
  ENDIO
 
 
 04627 04635
 
 
*LST

HALT instruction 102000, P: 31534 (LIB 1)
.IOC.  31651
.SQT.  31612
.MEM.  31604
.BUFR  32022
HALT   31577
.DIO.  04016
.DTA.  04130
.STOP  04601
.BIO.  04075
.IAR.  03752
.IOI.  03676
.IOR.  03646
.RAR.  03726
OLDIO  02230
.FLUN  04616
.PACK  04452
ENDIO  04627
FLOAT  04445
IFIX   04547
 
 
 *LINKS
 01744 01777
 
 
*RUN

HALT instruction 102000, P: 31567 (JSB 222,I)
ALGOL HOLA
STOP
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,FTN
FTN,B,L 
C 
      PROGRAM HELLO 
      WRITE(1,99) 
C 
   99 FORMAT("HELLO FROM FORTRAN II")
      STOP
      END
      END$
?*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)
*NEXT?
:PROG,LOADR
 
 
  HELLO
 
 
 02000 02035
 
 
*LOAD

HALT instruction 102001, P: 31437 (CLB)
 
 
  FRMTR
 
 
 02036 04460
 
 
 00353 00640
 
 
  FLOAT
 
 
 04461 04465
 
 
  .PACK
 
 
 04466 04562
 
 
 00641 00650
 
 
  IFIX 
 
 
 04563 04614
 
 
 00651 00653
 
 
  .STOP
 
 
 04615 04631
 
 
  .FLUN
 
 
 04632 04642
 
 
 00654 00655
 
 
  ENDIO
 
 
 04643 04651
 
 
  CLRIO
 
 
 04652 04656
 
 
*LST

HALT instruction 102000, P: 31534 (LIB 1)
.IOC.  31651
.SQT.  31612
.MEM.  31604
.BUFR  32022
HALT   31577
HELLO  02000
CLRIO  04652
.DIO.  04032
.DTA.  04144
.STOP  04615
.BIO.  04111
.IAR.  03766
.IOI.  03712
.IOR.  03662
.RAR.  03742
OLDIO  02244
.FLUN  04632
.PACK  04466
ENDIO  04643
FLOAT  04461
IFIX   04563
 
 
 *LINKS
 01740 01777
 
 
*RUN

HALT instruction 102000, P: 31567 (JSB 222,I)
HELLO FROM FORTRAN II
STOP
*NEXT?
:PAUSE

HALT instruction 102077, P: 35606 (JMP 35515)


***
*** Generation finished
***

*** Press Enter to quit


Goodbye
Log file closed
