ASMB,R,L,C
      HED **  RTE-B BASIC BRANCH TABLE  **  A-29102-60011-1 REV. A
      NAM BRTBL,7  29102-60011 REV. A 
**********************************************************************
* 
*     RTE-B STANDARD BRANCH TABLE 
* 
**********************************************************************
* 
*     LIST:  A-29102-60011-1
*     SOURCE   29102-80011
*     RELOC:   29102-60011
* 
* 
* 
*     FOR EACH ENTRY IN THE BRANCH TABLE THERE IS A ONE TO ONE
*     CORRESPONDANCE TO ENTRIES IN THE MNEMONIC TABLE. THUS 
*     ANY ADDITIONS/DELETIONS TO THIS TABLE MUST REFLECT A
*     CORRESPONDING ADDITION/DELETION TO THE MNEMONIC TABLE.
* 
* 
**********************************************************************
* 
* 
      ENT XNFO             START OF PARAM TYPE TABLE
      ENT SBTBL            START OF BRANCH TABLE
      ENT STDCL            END OF SUBROUTINE CALL 
      ENT .RUNA 
      ENT FCNEX 
      ENT .LOGA 
      ENT .EXPA 
      ENT LSBTB            END OF FUNCTION TABLE
      ENT DEVEX            START OF DEVICE EXECUTION TABLE
* 
*******DEFINE EXTERNAL SUBROUTINE ENTRY POINTS HERE*******
* 
      EXT TIME,SSETP,SSTRT,DSABL,ENABL,TRNON,RGAIN,SGAIN,NORM 
      EXT PACER,AIRDV,AISQV,EINP,ELIST,ETTYS,EREED
      EXT RDNBR,ETRAP,$DEL,$RUN,$SAVE,$MERG,$LOAD,$LST,$TIM 
      EXT $REW,$SKPF,$WEOF
      EXT ETAB,SIN,COS,TAN,ATAN,ALOG,EXP,ABS,SQRT,EINT,ERND,ESGN
      EXT ESWR,IERR 
      EXT PHOT1 
      SUP 
* 
      SKP 
* 
**********************************************************************
* 
* 
*     THE FOLLOWING TABLE CONSISTS OF ONE WORD ENTRIES
*     DEFINING THE PARAMETER TYPE (REAL OR INTEGER) FOR 
*     EACH SUBROUTINE ENTRY IN THE SBTBL TABLE. ORDER 
*     OF ENTRIES MUST BE IN PRECISE CORRESPONDANCE TO 
*     THOSE OF THE SBTBL TABLE. IF NO CALL PARAMETERS EXIT AS 
*     INTEGERS,THEN DUMMY ENTRY POINTS, "FRTFX" & "FRTF2" MAY BE
*     SUPLIED HERE TO PREVENT LOADRING OF THE FIXED POINT 
*     INTERFACE ROUTINE. FORMAT IS AS FOLLOWS:
* 
*          OCT I R77 665 544 332 211
* 
*     WHRE: "11" REFERS TO THE FIRST PARAMETER, "22" TO THE 
*     SECOND, ETC. IF LEFT BIT IS SET, PARAMETER WILL BE
*     CONVERTED TO INTEGER BEFORE SUBROUTINE ENTRY. IF RIGHT
*     BIT IS SET, PARAMETER IS TO BE CONVERTED TO FLOATING
*     POINT AT SUBROTUINE EXIT. IF RIGHT BIT IS SET, LEFT BIT 
*     MUST ALSO BE SET. 
* 
*     "I" IF SET, DENOTES AN INTEGER VALUED FORTRAN FUNCTION
*     RETURNING A VALUE IN THE A-REGISTER.
* 
*     "R" IF SET, DENOTES A REAL VALUED FORTRAN FUNCTION
*     RETURNING A VALUE IN THE A & B REGISTERS
* 
* 
**********************************************************************
* 
* 
XNFO  EQU *                START OF PARAMETER TABLE 
* 
*     DEFINE CALL PARAMETERS HERE 
* 
      OCT 0        TIME(R)
      OCT 12       SETP(I,I)
      OCT 2        START(I,R) 
      OCT 2        DSABL(I) 
      OCT 2        ENABL(I) 
      OCT 2        TRNON(I,R) 
      OCT 2         RGAIN(I,R)
      OCT 2         SGAIN(I,R)
      OCT 0         NORM
      OCT 52        PACER(I,I,I)
      OCT 302       AIRDV(I,R,R,IV) 
      OCT 312       AISQV(I,I,R,IV) 
      SKP 
* 
* 
**********************************************************************
* 
* 
*     THE FOLLOWING TABLE DEFINES EXECUTION ENTRY POINTS
*     FOR EACH CALLABLE SUBROUTINE AVAILABLE TO BASIC.
*     ENTRIES ARE ORDERED IN CONJUNCTION WITH THE XNFO
*     ABOVE, AND WITH THE MNEMONIC TABLE. ENTRIES ARE AS FOLLOWS: 
* 
*        OCT 0 000 000 PPP 000 000
*        DEF <ENTRY>
* 
*     WHERE P          = NUMBER OF PARAMETERS 
*           <ENTRY>    = ENTRY POINT OF SUBROUTINE
* 
* 
**********************************************************************
* 
SBTBL EQU * 
* 
*     CALL STATEMENTS START HERE
* 
* 
      OCT 100 
      DEF TIME             TIME(T)
* 
      OCT 200 
      DEF SSETP    SETP(S,P)
* 
      OCT 200 
      DEF SSTRT    START(S,DELAY) 
* 
      OCT 100 
      DEF DSABL    DSABL(S) 
* 
      OCT 100 
      DEF ENABL    ENABL(S) 
* 
      OCT 200 
      DEF TRNON    TRNON(S,TIME)
* 
      OCT 200 
      DEF RGAIN     RGAIN(CHANL,GAIN) 
* 
      OCT 200 
      DEF SGAIN     SGAIN(CHANL,GAIN) 
* 
      OCT 0 
      DEF NORM      NO PARAMS 
* 
      OCT 300 
      DEF PACER     PACER(RATE) 
* 
      OCT 400 
      DEF AIRDV     AIRDV(NUM,CHANLS,DATA,ERR)
* 
      OCT 400 
      DEF AISQV     AISQV(NUM,SCHAN,DATA,ERR) 
* 
      SKP 
* 
**********************************************************************
* 
* 
*     THE FOLLOWING TABLE CONSISTS OF SUBROUTINE ENTRY
*     POINTS FOR THE SPECIAL STATEMENT ENTRIES IN THE 
*     MNEMONIC TABLE. ENTRIES ARE AS FOLLOWS
* 
*        OCT 0 000 000 000 000 000
*        DEF <ENTRY>
* 
*     WHERE  <ENTRY>  = SUBROUTINE ENTRY POINT
* 
* 
**********************************************************************
* 
STDCL EQU * 
* 
* 
*     STATEMENTS WITH NON-STANDARD SYNTAX START HERE
* 
      OCT 0 
      DEF EINP             EXECUTE INPUT STATEMENT
* 
      OCT 0 
      DEF ELIST            EXECUTE PRINT STATEMENT
* 
      OCT 0 
      DEF ETTYS              EXECUTE PRINT# STATEMENT 
* 
      OCT 0 
      DEF EREED    READ STATEMENT 
* 
      OCT 0 
      DEF RDNBR    READ# LU; STATEMENT
* 
      OCT 0 
      DEF ETRAP    TRAP STATEMENT 
* 
      SKP 
* 
**********************************************************************
* 
* 
*     THE FOLLOWING TABE DEFINES ENTRY POINTS FOR EXECUTION 
*     OF COMMANDS. TABLE ENTRIES ARE AS FOLLOWS:
* 
*        OCT 0 000 000 000 000 000
*        DEF <ENTRY>
* 
*     WHERE: <ENTRY>  = ENTRY POINT FOR EXECUTION 
* 
**********************************************************************
* 
*     SYSTEM COMMANDS START HERE
* 
* 
      OCT 0 
      DEF $DEL             DELETE COMMAND 
* 
.RUNA OCT 0 
      DEF $RUN             RUN COMMAND
* 
      OCT 0 
      DEF $SAVE            SAVE COMMAND 
* 
      OCT 0 
      DEF $MERG            MERGE COMMAND
* 
      OCT 0 
      DEF $LOAD            LOAD COMMAND 
* 
      OCT 0 
      DEF $LST             LIST COMMAND 
* 
      OCT 0 
      DEF $TIM             SET TIME COMMAND 
* 
      OCT 0 
      DEF $REW             REWIND COMMAND 
* 
      OCT 0 
      DEF $SKPF            SKIP FILE COMMAND
* 
      OCT 0 
      DEF $WEOF            WRITE END OF FILE COMMAND
* 
      SKP 
* 
**********************************************************************
* 
* 
*     THE FOLLOWING TABE DEFINES ENTRY POINTS FOR EXECUTION 
*     OF FUNCTIONS. TABLE ENTRIES ARE AS FOLLOWS: 
* 
*        OCT F 000 000 PPP 000 000
*        DEF <ENTRY>
* 
*     WHERE: F         = 1 IF FUNCTION HAS "JSB ERR0" RETURN
*            P         = NUMBER OF PARAMTERS
*            <ENTRY>   = ENTRY POINT FOR EXECUTION
* 
* 
**********************************************************************
* 
FCNEX EQU * 
* 
*     START FUNCTION ENTRY POINTS HERE
* 
      OCT 100 
      DEF ETAB             EXECUTE TAB FUCTION
* 
      OCT 100100
      DEF SIN              EXECUTE SINE FUNCTION
* 
      OCT 100100
      DEF COS              EXECUTE COSIN FUNCTION 
* 
      OCT 100100
      DEF TAN              EXECUTE TANGENT FUNCTION 
* 
      OCT 100 
      DEF ATAN             EXECUTE ARC TANGENT FUNCTION 
* 
.LOGA OCT 100100
      DEF ALOG             EXECUTE NATURAL LOG FUNCTION 
* 
.EXPA OCT 100100
      DEF EXP              EXECUTE EXPONENTIAL FUNCTION 
* 
      OCT 100 
      DEF ABS              EXECUTE ABSOLUTE FUNCTION
* 
      OCT 100100
      DEF SQRT             EXECUTE SQUARE ROOT FUNCTION 
* 
      OCT 100 
      DEF EINT             EXECUTE INTIER FUNCTION
* 
      OCT 100 
      DEF ERND             EXECUTE RANDOM NUMBER FUNCTION 
* 
      OCT 100 
      DEF ESGN             EXECUTE SIGN FUNCTION
* 
      OCT 100 
      DEF ESWR             EECUTE SWITCH REG FUNCTION 
* 
      OCT 100 
      DEF IERR             EXECUTE ERROR FUNCTION 
* 
LSBTB EQU *                END OF BRANCH TABLE
* 
      SKP 
**********************************************************************
* 
*     THE FOLLOWING TABLE DEFINES EXECUTION ENTRY POINTS
*     FOR THE COMMAND DEVICE TABLE. ENTRIES AR AS FOLLOWS:
* 
*            OCT 0
*            DEF <ENTRY>
* 
*     WHERE:  <ENTRY> = EXECUTION ENTRY FOR COMMANDS
* 
**********************************************************************
* 
*     COMMAND DEVICE EXECUTION
* 
DEVEX EQU * 
* 
      OCT 0         TAPE READER 
      DEF PHOT1 
* 
* 
**********************************************************************
* 
* 
* 
      END 
