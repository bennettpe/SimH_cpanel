ASMB,R,F,L,C
      HED ***RTE-B TRAP TBL MANIP. ROUTINES A-29102-60012-1 REV. A
      NAM TRLIB,6      29102-60012
********************************************************************* 
* 
* 
*     LISTING:      A29102-60012-1
*     SOURCE:       29102-80012 
*     RELOC:        29102-60012 
* 
* 
********************************************************************* 
* 
* ENTRY POINTS: 
* 
      ENT TRPNT,FINDS,FINDT,TRMAK,TRDEL 
      ENT TRPNO,SEKNO,PRINO 
      ENT TRTBL,TRPTR,TRNXT,TREND,TRFLG 
      ENT TRMSK,PRMSK,TRAP# 
* 
************************************************************************
* 
* 
* EXTERNAL REFERENCES:
* 
      EXT $LIBR,$LIBX,EXEC
* 
************************************************************************
      SKP 
***** 
* 
** FINDS ** FIND TRAP TABLE ENTRY WITH GIVEN SEQUENCE NUMBER
* 
*     LDA SEQUENCE NUMBER 
*     JSB FINDS 
*     RETURN1  NO SUCH ENTRY FOUND
*     RETURN2  ENTRY FOUND, TRPTR AND .B. POINT TO IT 
* 
*  NOTE:  TRPTR NOT ALTERED IF ENTRY NOT FOUND
* 
***** 
* 
FINDS NOP 
      JSB $LIBR    THIS IS PRIVILEGED ROUTINE 
      NOP 
      STA BSCT1     SAVE SEQUENCE NUMBER
      LDB TRNXT     USE .B. FOR TRAP TABLE POINTER
      CPB TRTBL     IS TABLE EMPTY? 
      JMP FNDS3     YES, RETURN (P+1) 
FNDS1 ADB M2        MOVE TO NEXT ENTRY
      LDA 1,I       GET SEQ NBR FROM ENTRY
      ELA,CLE,ERA   IGNORE TRAP BIT 
      CPA BSCT1     DO SEQ NBRS MATCH?
      JMP FNDS2     YES, FOUND IT 
      CPB TRTBL     NO, IS TABLE EXHAUSTED? 
      JMP FNDS3     TABLE EXHAUSTED, RETURN (P+1) 
      JMP FNDS1     MORE ENTRIES, CHECK THEM
* 
** COME HERE WHEN ENTRY FOUND 
* 
FNDS2 ISZ FINDS     SET UP SUCCESS RETURN 
      STB TRPTR     SET TRAP TABLE POINTER
FNDS3 JSB $LIBX    RETURN 
      DEF FINDS 
      SKP 
***** 
* 
** FINDT ** FIND TRAP TABLE ENTRY WITH GIVEN TRAP NBR 
* 
*     LDA TRAP NUMBER (POSITIONED IN WORD)
*     JSB FINDT 
*     RETURN1  ENTRY NOT FOUND WITH THAT TRAP NBR 
*     RETURN2  FOUND, TRPTR AND .B. POINT TO IT 
* 
*  NOTE:  TRPTR NOT ALTERED IF ENTRY NOT FOUND
* 
***** 
* 
FINDT NOP 
      JSB $LIBR    THIS IS PRIVILEGED ROUTINE 
      NOP 
      STA BSCT1      AND SAVE FOR LATER COMPARISON
      LDB TRNXT     VSE .B. FOR TRAP TABLE POINTER
      CPB TRTBL     IF TABLER IS EMPTY, 
      JMP FNDT3      RETURN (P+1) 
FNDT1 ADB M1        MOVE TO NEXT ENTRY
      LDA 1,I  GET WORD WITH TRAP NBR 
      AND TRMSK     EXTRACT TRAP NBR
      CPA BSCT1     DO THEN MATCH?
      JMP FNDT2     YES 
      ADB M1        NO, POINT TO BEGINNING OF ENTRY 
      CPB TRTBL      IS THE TABLE EXHAUSTED 
      JMP FNDT3     YES, RETURN (P+1) 
      JMP FNDT1     NO, CHECK NEXT ENTRY
FNDT2 ISZ FINDT     SET UP SUCCESS EXIT 
      ADB M1        MOVE TO FIRST WORD OF ENTRY 
      STB TRPTR     SET TRAP TABLE POINTER
FNDT3 JSB $LIBX    RETURN 
      DEF FINDT 
      SKP 
* 
***** 
* 
** TRDEL ** DELETE FROM TRAP TABLE THE ENTRY AT TRPTR 
* 
*     JSB TRDEL 
*     RETURN
* 
***** 
* 
TRDEL NOP 
      JSB $LIBR    THIS IS PRIVILEGED ROUTINE 
      NOP 
      LDB TRNXT     IF ENTRY TO BE DELETED
      CPB TRPTR      IS LAST+1 ENTRY, 
      JMP TRDE2       RETURN IMMEDIATELY
      ADB M2        DECREMENT END OF TABLE POINTER
      STB TRNXT      TO POINT TO NEW LAST+1 LOCATION
TRDE1 LDB TRPTR 
      CPB TRNXT     IF END OF TABLE 
      JMP TRDE2      RETURN  (P+1)
      ADB B2
      DLD 1,I       GET ENTRY AT TRPTR + 1 ENTRY
      DST TRPTR,I    STORE IT AS TRPIR ENTRY
      ISZ TRPTR     BUMP TRPTR TO NEXT ENTRY
      ISZ TRPTR 
      JMP TRDE1     LOOP
TRDE2 JSB $LIBX    RETURN 
      DEF TRDEL 
      SKP 
***** 
* 
** TRMAK ** MAKE A TRAP TABLE ENTRY, ORDERED BY PRIORITY
* 
*     SEQNO= SEQUENCE NBR (TRAP BIT MAY BE SET) 
*     PRINO= PRIORITY 
*     TRPNO= TRAP NUMBER (ALREADY POSITIONED IN WORD) 
*     JSB TRMAK 
*     RETURN1  NO ROOM FOR ENTRY
*     RETURN2  ENTRY MADE (TRPTR POINTS TO IT)
* 
* NOTE: NEW ENTRIES ARE AUTOMATICALLY ENABLED 
* 
***** 
* 
TRMAK NOP 
      JSB $LIBR    THIS IS PRIVILEGED ROUTINE 
      NOP 
      LDB TRNXT     IS THE TABLE
      CPB TREND      ALREADY FULL?
      JMP TRMK3     YES, RETURN (P+1) 
      ISZ TRMAK     NO, SET UP SUCCESS RETURN 
      STB TRPTR     SET POINTER TO END OF TABLE 
      ADB B2
      STB TRNXT     BUMP TRNXT TO REFLECT NEW ENTRY 
      LDB TRPTR 
TRMK1 CPB TRTBL     ARE WE TO OTHER END OF TABLE? 
      JMP TRMK2     YES, MAKE ENTRY HERE
      ADB M1        NO, MUST TEST FOR SORTING ORDER 
      LDA 1,I       GET SECOND WORD OF ENTRY
      AND PRMSK      EXTRACT PRIORITY 
      CMA,INA       IF PRIORITY OF
      ADA PRINO      ENTRY IS EQUAL OR HIGHER 
      SSA,RSS       THAN PRIORITY OF NEW ENTRY. 
      JMP TRMK2     MAKE ENTRY HERE 
      ADB M1         ELSE MOVE THIS ENTRY 
      DLD 1,I         DOWN ONE TO ALLOW PROPER
      DST TRPTR,I      ORDERING OF NEW ENTRY
      LDB TRPTR     MOVE
      ADB M2         POINTER TO 
      STB TRPTR       NEXT ENTRY
      JMP TRMK1        AND CONTINUE 
* 
** COME HERE TO ACTUALLY MAKE ENTRY 
* 
TRMK2 LDA SEQNO     STORE SEQUENCE NUMBER IN FIRST
      LDB TRPTR 
      STA 1,I       WORD OF ENTRY 
      LDA PRINO     GET PRIORITY (BITS 0-7) 
      IOR TRPNO      INCLUDE TRAP NUMBER (BITS 8-14)
      IOR BIT15       SET ENABLE BIT
      INB           STORE SECOND
      STA 1,I        WORD OF ENTRY
      STB TRFLG     ENABLE TRAP TABLE SEARCH
TRMK3 JSB $LIBX    RETURN 
      DEF TRMAK 
      SKP 
***** 
* 
** TRPNT ** SET A BIT IN THE TRAP TABLE 
* 
*     LDA TRAP NUMBER 
*     JSB TRPNT 
*     RETURN1       TRAP TABLE FULL & THIS ENTRY NOT THERE ALREADY
*     RETURN2       SUCCESS 
* 
* NOTE: IF NO ENTRY WITH THAT TRAP NBR EXISTS, THIS 
*       ROUTINE WILL MAKE ONE WITH PRIORITY 99 AND
*       WITH THE ENABLE BIT AND THE SEQ NBR CLEARED.
* 
******
* 
TRPNT NOP 
      JSB $LIBR    THIS IS PRIVILEGED ROUTINE 
      NOP 
      ALF,ALF 
      STA TRPNO     SAVE TRAP NBR 
      JSB FINDT     FIND ENTRY WITH THAT TRAP NBR 
      JMP TRPN1     NOT FOUND 
      LDA TRPTR,I   FOUND,
      IOR BIT15    SET TRAP BIT 
      STA TRPTR,I   AND UPDATE ENTRY
      STA TRFLG     ENABLE TRAP TABLE SEARCH
TRPN2 ISZ TRPNT 
TRPN3 JSB $LIBX    RETURN 
      DEF TRPNT 
* 
** HERE IF MUST CREATE NEW ENTRY
* 
TRPN1 CLA           DEFAULT 
      STA SEQNO      SEQUENCE NBR 
      LDA D99       DEFAULT 
      STA PRINO      PRIORITY 
      JSB TRMAK     MAKE ENTRY
      JMP TRPN3     NO ROOM, RETURN (P+1) 
      LDB TRPTR     GET 
      INB            SECOND WORD
      LDA 1,I         OF ENTRY
      ELA,CLE,ERA   CLEAR ENABLE BIT
      STA 1,I 
      JMP TRPN2     RETURN (P+2) (PONT CHANGE TRFLG)
      SKP 
****************************************************
* 
*******************  TRAP TABLE  *******************
* 
*     WORD 1:   BIT  15        TRAP BIT 
*               BITS 14-0      SEQUENCE NUMBER
* 
*     WORD 2:   BIT  15        ENABLE BIT 
*               BITS 14-8      TRAP NUMBER
*               BITS  7-0      PRIORITY 
* 
* 
TRTBL DEF *+1       POINTER TO BEGINNING OF TABLE 
      BSS 32        ALLOW FOR 16 ENTRIES
TREND DEF *         POINTER TO END+1 OF TABLE 
TRPTR NOP           GENERAL USE TABLE POINTER 
TRNXT NOP           POINTER TO NEXT FREE ENTRY
TRFLG NOP           FLAG, 0=DONT NEED TO EXAMINE TBL
* 
**************************************************
* 
BSCT1 NOP           TEMPORARY 
SEQNO NOP           SEQUENCE NUMBER 
PRINO NOP           PRIORITY
TRPNO NOP           TRAP NBR POSITIONED BITS 14-8 
TRMSK OCT 77400     MASK FOR TRAP NBR 
PRMSK OCT 377       MASK FOR PRIORITY 
TRAP# OCT 0         TRAP NO. USED BY TTY EVENT SENSE ROUTINE
D99   DEC 99
B2    OCT 2 
M1    DEC -1
M2    DEC -2
BIT15 OCT           100000
SEKNO EQU SEQNO 
      END 
