SPL,L,O,T 
      NAME RTBTG(3,90)
! 
! 
!     SOURCE:    29102-80018
!     RELOC:     29102-60018
!     LISTING:   A-29102-60018-1
! 
! 
!   RTBTG --------- CORE VERSION
! 
! 
!   RTBTG IS AN INTERACTIVE TABLE CONFIGURATOR FOR RTE-B
! 
! 
!***************************************************************
! 
!   INITIALIZATION PHASE
! 
!***************************************************************
! 
      LET BUFFR BE INTEGER(60),EXTERNAL     !GENERAL BUFFER 
      LET WSAA,IDEC,INWS,CSAC BE PSEUDO,EXTERNAL,DIRECT 
      LET CMDLU,CMCNT,RBILU BE INTEGER,EXTERNAL 
      LET OUTLU,LSTLU BE INTEGER,GLOBAL 
      LET SYSIN,SYSPR,SYSPU,SYSOP BE INTEGER(4) 
      INITIALIZE SYSIN,SYSPR,SYSPU,SYSOP TO 5,"SYSIN ",5,"SYSPR ",\ 
        5,"SYSPU ",5,"SYSOP"
      LET C2313,C6940 BE SUBROUTINE,EXTERNAL,DIRECT 
      LET HEADR BE INTEGER(14)
      INITIALIZE HEADR TO 25,"* RTE-B TABLE GENERATOR *"
      LET LSUBS BE INTEGER(13)
      INITIALIZE LSUBS TO 23,"* LIST OF SUBROUTINES *"
      LET LNAMS BE INTEGER(9) 
      INITIALIZE LNAMS TO 15,"LIST B&M TABLE?"
      LET LFUNC BE INTEGER(12)
      INITIALIZE LFUNC  TO 21,"* LIST OF FUNCTIONS *" 
      LET LDEVS BE INTEGER(11)
      INITIALIZE LDEVS TO 19,"* LIST OF DEVICES *"
      LET DSUBS BE INTEGER(12)
      INITIALIZE DSUBS TO 22,"* DELETE SUBROUTINES *" 
      LET DFUNC BE INTEGER(11)
      INITIALIZE DFUNC TO 20,"* DELETE FUNCTIONS *" 
      LET DDEVS BE INTEGER(10)
      INITIALIZE DDEVS TO 18,"* DELETE DEVICES *" 
      LET ASUBS BE INTEGER(11)
      INITIALIZE ASUBS TO 19,"* ADD SUBROUTINES *"
      LET AFUNC BE INTEGER(10)
      INITIALIZE AFUNC TO 17,"* ADD FUNCTIONS *"
      LET ADEVS BE INTEGER(9) 
      INITIALIZE ADEVS TO 15,"* ADD DEVICES *"
      LET ENDBM BE INTEGER(13)
      INITIALIZE ENDBM TO 23,"* END RTE-B TABLE GEN *"
      LET TAPMS BE INTEGER(14)
      INITIALIZE TAPMS TO 26,"* PUT B&M TAPE IN READER *" 
      LET RUNMS BE INTEGER(10)
      INITIALIZE RUNMS TO 18,"* THEN PRESS RUN *" 
      LET PUNMS BE INTEGER(10)
      INITIALIZE PUNMS TO 17,"* TURN ON PUNCH *"
      LET TEARM BE INTEGER(18)
      INITIALIZE TEARM TO 34,"* TEAR OFF INSTRUMENT TABLE TAPE *" 
      LET LINEL BE INTEGER(17)
      INITIALIZE LINEL TO 32,"WHAT IS LIST DEVICE LINE LENGTH?" 
      LET ERR1 BE INTEGER(9)
      INITIALIZE ERR1 TO 16,"ILLEGAL RESPONSE"
      LET SPACE BE INTEGER(2) 
      INITIALIZE SPACE TO 1," " 
      LET CMDIN,FWRIT,FOPEN,FSTOP,FPAUS BE SUBROUTINE,EXTERNAL
      LET NAMM,NAMB,EXTM,EXTB,ENTM,ENTB,DBLM,DBLB BE INTEGER,GLOBAL 
      LET RELFM BE SUBROUTINE,EXTERNAL,DIRECT 
      LET STPRG,DIAG BE SUBROUTINE,EXTERNAL,DIRECT
      LET READ,WRITE,LISTT,LEADR BE SUBROUTINE,DIRECT 
      LET LCNT BE INTEGER,EXTERNAL
      LET OUTRL,ADDN BE SUBROUTINE,EXTERNAL 
      LET LISTN BE SUBROUTINE,EXTERNAL,DIRECT !LIST NAMES 
! 
! 
! 
! 
! 
RTBTG:CALL FOPEN(RBILU,ERR,SYSIN,300K)
      CALL FOPEN(LSTLU,ERR,SYSPR) 
      CALL FOPEN(OUTLU,ERR,SYSPU,100K)
      CALL FOPEN(CMDLU,ERR,SYSOP,400K)
! 
      FRLST,NAM,NAMM,NAMB,EXTM,EXTB,ENTM,ENTB,DBLM,DBLB_0 
! 
! 
! 
      CALL WRITE(HEADR)     !HEADER MESSAGE 
! 
      CALL WRITE(PUNMS)    !TURN ON PUNCH MESSAGE 
! 
! 
! 
!     THIS MODULE INITIALIZES WORKSPACE IN MEMORY 
! 
      LET FRLST BE INTEGER,GLOBAL ! FREE WORKSPACE LIST POINTER 
      LET FIRST BE INTEGER,GLOBAL ! SMALLEST ADDRESS NOT USED 
      LET LAST  BE INTEGER,GLOBAL ! LARGEST  ADDRESS NOT USED 
      LET WKTOP BE INTEGER,GLOBAL ! LARGEST USABLE ADDRESS=7MOD8
      LET WKMIN BE INTEGER,GLOBAL ! SMALLEST ADDRESS EVER ALLOCATED 
! 
! 
      LAST,WKTOP,WKMIN_26677K 
      FIRST_LAST-5000K !WORK SPACE SET TO 5000K WORDS 
! 
! 
      CALL FWRIT(OUTLU,ERR,0,-1)  !WRITE LEADER 
      CALL LEADR  !WRITE LEADER 
! 
! 
      CALL C2313  !GENERATE 2313 TABLES 
      CALL C6940  !GENERATE 6949 TABLES 
! 
! 
      CALL LEADR  !WRITE TRAILER
! 
      CALL WRITE(TEARM)     !TEAR OFF TAPE MESSAGE
! 
      CALL WRITE(TAPMS)     !LOAD B&M TAPE MESSAGE
! 
      CALL WRITE(RUNMS)     !PRESS RUN MESSAGE
! 
      CALL FPAUS
! 
!************************************************************** 
! 
      CALL RELFM(NAMM,ENTM,EXTM,DBLM) 
! 
!************************************************************** 
! 
!  READ IN AND STORE RELOCATABLE FOR BRANCH TABLE 
! 
!************************************************************** 
! 
      CALL RELFM(NAMB,ENTB,EXTB,DBLB) 
! 
! 
! 
! 
! LIST NAMES OF SUBROUTINES,FUNCTIONS AND DEVICES 
! 
      CALL LISTT
! 
!DELETE SUBROUTINES 
! 
      CALL WRITE(DSUBS) 
BMC5: CALL READ?[GOTO BMC2] 
      CALL LISTN(0,NAM) 
      GOTO BMC5 
! 
!DELETE FUNCTIONS 
! 
BMC2: CALL WRITE(DFUNC) 
BMC6: CALL READ?[GOTO BMC3] 
      CALL LISTN(1,NAM) 
      GOTO BMC6 
! 
!DELETE FUNCTIONS 
! 
BMC3: CALL WRITE(DDEVS) 
BMC7: CALL READ?[GOTO BMC4] 
      CALL LISTN(2,NAM) 
      GOTO BMC7 
! 
!ADD A CALL 
! 
BMC4: CALL WRITE(ASUBS) 
BMC9: CALL READ?[GOTO BMC8] 
      CALL ADDN(0,NAM)
      GOTO BMC9 
! 
! ADD A FUNCTION
! 
BMC8: CALL WRITE(AFUNC) 
BMC12:CALL READ?[GOTO BMC10]
      CALL ADDN(1,NAM)
      GOTO BMC12
! 
! ADD A DEVICE
! 
BMC10:CALL WRITE(ADEVS) 
BMC13:CALL READ?[GOTO BMC14]
      CALL ADDN(2,NAM)
      GOTO BMC13
! 
!ERROR MESSAGE FOR LINE LENGTH ERROR
! 
ERRL: DIAG(ERR1)
! 
! SET LINE PRINTER LINE LENGTH
! 
BMC14:CALL WRITE(LINEL) 
      CALL READ?[GOTO BMC11]
      CSAC(NAM)_" " !INSERT LINE TERMINATOR 
      LNLEN_IDEC(NAM,1)?[GOTO ERRL] 
      IF LNLEN<72 THEN[GOTO ERRL] 
      IF LNLEN>132 THEN[GOTO ERRL]
      INWS(DBLM,LCNT)_-(LNLEN+1) !INSERT IN MNEMONIC TABLE
! 
! LIST NAMES OF SUBROUTINE,FUNCTIONS AND DEVICES
! 
BMC11:CALL LISTT
! 
! END OF RTBTG
! 
      CALL WRITE(ENDBM) 
!OUTPUT RELOCATABLE TAPE CONTAINING B AND M TABLES
! 
      CALL FWRIT(OUTLU,ERR,0,-1)   !WRITE LEADER
! 
      CALL OUTRL(NAMM,ENTM,EXTM,DBLM) 
      CALL OUTRL(NAMB,ENTB,EXTB,DBLB) 
! 
      CALL LEADR  !WRITE LEADER 
      CALL FPAUS
      GOTO RTBTG   !CONTINUE AT START 
! 
!INPUT COMMAND
! 
READ: SUBROUTINE FEXIT,DIRECT 
      STPRG(NAM)
      CALL CMDIN(BUFFR(2),ERR)
      BUFFR(1)_(CMCNT+1)/2   !WORD COUNT
      IF BUFFR(2)="/E" THEN FRETURN 
      WSAA(NAM)_@BUFFR
      RETURN
      END 
! 
! LIST NAMES SUBROUTINE 
! 
LISTT:SUBROUTINE DIRECT 
! 
!LIST B&M TABLE?
! 
LIST0:CALL WRITE(LNAMS) 
      CALL READ 
      IF INWS(NAM,1)="NO" THEN RETURN 
      IF INWS(NAM,1)="YE" THEN GOTO LIST1,\ 
        ELSE GOTO LIST0 
! 
! LIST NAMES OF SUBROUTINES 
! 
LIST1:CALL WRITE(LSUBS) 
      CALL LISTN(0,0) 
! 
!LIST NAMES OF FUNCTIONS
! 
      CALL WRITE(LFUNC) 
      CALL LISTN(1,0) 
! 
!LIST NAMES OF DEVICES
! 
      CALL WRITE(LDEVS) 
      CALL LISTN(2,0) 
! 
      RETURN
      END 
! 
!WRITE A MESSAGE ROUTINE
! 
WRITE:SUBROUTINE(BUF)DIRECT,GLOBAL
      CALL FWRIT(CMDLU,ERR,SPACE) 
      CALL FWRIT(CMDLU,ERR,BUF) 
      RETURN
      END 
! 
! WRITE OUT LEADER
! 
LEADR:SUBROUTINE DIRECT 
      CALL FWRIT(OUTLU,ERR,0,-1)
      RETURN
      END 
      END RTBTG 
END$
