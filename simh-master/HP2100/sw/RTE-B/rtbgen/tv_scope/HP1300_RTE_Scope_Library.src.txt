ASMB,R,B,L
      NAM SCLIB,7
      ENT PLOTB, ERASE, DISPT, LINES, CHAR,CH#R,CHARS
      EXT .ENTR,EXEC
* 
*     BUFFER CLEAR ROUTINE
* 
CLEAR NOP         ENTRY/EXIT
      LDA DIBUF   GET BUFFER ADDRESS
      SZA,RSS     IS IT > 0? (PLOTB CALLED?)
      JMP CLEAR,I  NO, RETURN TO MAIN PROGRAM 
      JSB RSBUF
      CLA         SET A = 0 
LOOPC STA PNTRX,I SAVE IN BUFFER LOCATION
      ISZ PNTRX   INDEX PNTR TO NEXT LOCATION 
      ISZ CNTRX   INDEX POINT CNTR, IS IT = 0?
      JMP LOOPC    NO, RETURN & CLEAR NEXT LOCATION 
      JSB RSBUF
      JMP CLEAR,I RETURN TO MAIN PROGRAM
* 
*     RESET BUFFER ROUTINE
* 
RSBUF NOP
      LDA DIBUF   GET BUFFER ADDRESS
      STA PNTRX   RESET PLOT TO BEGINNING
      LDA DILEN   INITIALIZE POINT COUNTER
      STA CNTRX   RESET PLOT BUFFER COUNTER 
      JMP RSBUF,I
* 
* 
*         PLOTB ENTRY POINT 
* 
* 
.LU   BSS 1 
.BUF  BSS 1 
PTNUM BSS 1 
PLOTB NOP         
      JSB .ENTR   
      DEF .LU
      LDA .LU,I
      SZA
      RSS
      JMP PL01
      JSB EXEC      SEND BUFFER TO DRIVER
       DEF *+5      
       DEF D2 
       DEF .LU,I 
       DEF .BUF,I
       DEF PTNUM,I
PL01  LDA .BUF
      STA DIBUF     SET DISPLAY BUFFER
      LDA PTNUM,I
      CMA,INA       MAKE BUF LEN NEGATIVE 
      STA DILEN     SET DISPLAY BUFFER LENGHT
      JSB RSBUF     RESET BUFFER
      JMP PLOTB,I   RETURN TO CALLING PROGRAM 
* 
* 
*         DISPT ENTRY POINT 
* 
* 
.X    BSS 1 
.Y    BSS 1 
DISPT NOP         
      JSB .ENTR   
      DEF .X
*
      LDA DIBUF   GET BUFFER ADDRESS
      SZA,RSS     IS IT > 0? (PLOTB CALLED?)
      JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
      LDB .X,I GET X-VALUE 
      SSB         IS IT < 0?
      JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
      STB TEMP    SAVE IT 
      ADB DM256   SUBTRACT 256 FROM IT
      SSB,RSS     IS RESULT < 0?
      JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
      LDB .Y,I    GET Y-VALUE 
      SSB         IS IT < 0?
      JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
      LDA 1       LOAD IT INTO A
      ADA DM256   SUBTRACT 256 FROM IT
      SSA,RSS     IS RESULT < 0?
      JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
      LDA TEMP    GET X-VALUE AGAIN 
      ALF,ALF     MOVE IT TO UPPER 8 BITS 
      IOR 1       MERGE IT WITH Y-VALUE 
      ALF,ALF     ROTATE AGAIN TO SET Y IN UPPER BITS
      SZA,RSS     IS IT 0-0?
      JMP DISPT,I  YES, RETURN TO CALLING PROGRAM 
      STA PNTRX,I STORE IT IN PLOT BUFFER 
      ISZ PNTRX   INDEX POINTER TO NEXT LOCATION
      ISZ CNTRX   INDEX POINT CNTR, IS IT = 0?
      JMP DISPT,I  NO, RETURN TO CALLING PROGRAM
* 
      JSB RSBUF 
      JMP DISPT,I RETURN TO CALLING PROGRAM 
* 
* 
*         ERASE ENTRY POINT 
* 
* 
ERASE NOP         ENTRY/EXIT
      JSB CLEAR   CLEAR PLOT BUFFER 
      JMP ERASE,I RETURN TO CALLING PROGRAM 
* 
*     CONSTANTS 
*
DIBUF OCT 0         DISPLAY BUFFER
DILEN BSS 1         DISPLAY BUFFER LENGHT
PNTRX BSS 1       ADDR IN BUF FOR NEXT POINT
CNTRX BSS 1       ROOM LEFT IN BUF
TEMP  BSS 1 
* 
DM1   DEC -1
DM256 DEC -256
D1    DEC 1 
D2    DEC 2 
D128  DEC 128 
D256  DEC 256 
* 
B     EQU 1 
* 
* 
*         LINES ENTRY POINT 
* 
* 
IX1   BSS 1 
IY1   BSS 1 
IX2   BSS 1 
IY2   BSS 1 
.MD   BSS 1 
LINES NOP 
      JSB .ENTR 
      DEF IX1
* 
      LDA .MD,I     GET MODE
      SSA,RSS       IS IT < OR = 0? 
      SZA,RSS 
      CLA           YES, SET TO 0
      AND B3
      STA .MD
      SZA,RSS       IS MODE=0?
      JMP LXY       YES, SKIP MASK SETUP
      CMA,INA       MAKE MODE NEGATIVE 
      STA PTXY
      CLA           INIT MASK
LMSK  ALS           SHIFT LEFT AND
      INA           ADD ONE BIT
      STA LNMSK     SAVE MASK FOR LINE
      ISZ PTXY      
      JMP LMSK
LXY   LDA IX2,I 
      AND B377
      STA IX2 
      LDA IX1,I 
      AND B377
      STA B 
      BLF,BLF       MOVE UP TO GIVE ROOM
      STB IX1       SAVE AS GUN LOCATION
      CMA,INA       CALCULATE DIFFERENCE
      ADA IX2 
      STA DX
      SSA           AND ABSOLUTE DIFFERNCE
      CMA,INA 
      STA ADX 
* 
      LDA IY2,I 
      AND B377
      STA IY2 
      LDA IY1,I 
      AND B377
      STA B 
      BLF,BLF 
      STB IY1 
      CMA,INA 
      ADA IY2 
      STA DY        DO SAME FOR Y 
      SSA,RSS       MAKE NEGATIF
      CMA,INA 
      ADA ADX       TO SEE WHICH IS BIGGEST 
      SSA 
      JMP ONEY      DY IS BIGGEST 
      LDA DX        DX IS BIGGEST, GO CALCULATE 
      LDB DY        THE INCREMENT 
      JSB CALC
      STA DDY 
      STB DDX 
      JMP LIN1
ONEY  LDA DY
      LDB DX        DY IS BIGGEST, GET INCREMENT
      JSB CALC
      STA DDX 
      STB DDY 
* 
**   NOW WE HAVE INCREMNTS, DO THE OUTPUT 
* 
LIN1  LDA IX1       GET AN X VALUE
      ADA DDX       ADD INCREMENT 
      STA IX1       SAVE FOR NEXT 
      ALF,ALF 
      AND B377      ISOLATE THE X VALUE 
      STA B 
      LDA IY1       DO SAME FOR Y 
      ADA DDY 
      STA IY1 
      AND M1774     ISOLATE UPPER PART
      IOR B         ADD X VALUE 
      SZA,RSS       IS IT 0-0?
      JMP LIN3      YES, SKIP POINT
      LDB .MD       GET MODE
      SZB,RSS       IS MODE = 0?
      JMP LIN2       YES, DRAW POINT
      STA PTXY      NO, SAVE POINT AND
      LDA TEL1      CHECK TEL1 TO SEE IF POINT
      AND LNMSK     MUST BE DRAW OR NOT 
      SZA           MASK RESULT IS 0?
      JMP LIN3       NO, SKIP THIS POINT
      LDA PTXY
LIN2  JSB ADDPT     STORE POINT IN BUFFER 
LIN3  ISZ TEL1
      JMP LIN1
      JMP LINES,I   ALL DONE !
* 
**   ***   S U B R O U T I N E S   ***
* 
** SUBROUTINE TO ADD A POINT TO DISPLAY BUFFER WITH
** WRAP TO BEGGINNING IF IT GETS FULL
*
ADDPT NOP
      STA PNTRX,I   STORE POINT IN PLOT BUFFER 
      ISZ PNTRX     INDEX POINTER TO NEXT LOCATION
      ISZ CNTRX     INDEX POINT CNTR, IS IT = 0?
      JMP ADDPT,I    NO, RETURN
      STA PTXY
      JSB RSBUF      YES, BUFFER FULL: RESET BUF
      LDA PTXY
      JMP ADDPT,I     AND RETURN

** SUBROUTINE TO DO THE CALCULATIONS OF THE INCREMENT 
** ON ENTRY : <A> = LARGEST DIFFERENCE (DL) 
**            <B> = SMALLEST DIFFERNCE (DS) 
** ON RETURN : <A> = SMALLEST INCREMENT (DDS = (DS*400B)/ABS(DL)) 
**             <B> = LARGEST INCREMENT (DDL = +/- 400B) 
* 
CALC  NOP 
      STB ADX 
      STA B 
      CMB,INB       <B> = - DL
      SZA,RSS       LARGEST = 0?
      JMP ONEP      YES, DO ONE POINT ONLY !
      CLE,SSA       NEGATIF ? 
      CCE           YES, SET E
      SSA           NEGATIF ? 
      SWP           YES, SET POSITIF IN A, NEGATIF IN B 
      STA DIVI      SAVE A AS DIVISOR 
      STB TEL1      AND B AS COUNTER
      LDB B400      GET LARGEST INCREMENT 
      SEZ           WAS POSITIF ? 
      CMB,INB       NO, SET INCREMENT NEGATIF 
      LDA ADX       GET SMALLEST AGAIN
      STB ADX       SAVE LARGEST INCREMENT
      CLB 
      SSA           NEGATIF ? 
      CCB           YES, SET B ALSO NEGATIF 
      ALF,ALF 
      DIV DIVI      DIVIDE BY LARGEST 
      LDB ADX 
      JMP CALC,I
* 
ONEP  CCA 
      STA TEL1
      CLA 
      JMP CALC,I
      SKP 
* 
**   ***   D A T A   ***
* 
* 
B3    OCT 3
B377  OCT 377 
B400  OCT 400 
M1774 OCT 177400
* 
TEL1  BSS 1 
ADX   BSS 1 
DX    BSS 1 
DY    BSS 1 
DDX   BSS 1 
DDY   BSS 1 
DIVI  BSS 1
PTXY  BSS 1
LNMSK BSS 1
* 
* 
*         CHAR ENTRY POINT 
* 
* 
CX    BSS 1 
CY    BSS 1 
CBUF  BSS 1 
CNUM  BSS 1 
CHAR  NOP 
      JSB .ENTR 
      DEF CX
      LDA CNUM,I    CHARACTER COUNTER
      CMA,INA        MAKE NEG
      STA CNUM 
* 
**   MAKE STARTING LOCATION 
* 
      LDA CX,I      GET X 
      AND B377      TRUNCATE
      STA SAVX      SAVE FOR LATER
      LDA CY,I
      AND B377
      ALF,ALF 
      STA SAVY
      IOR SAVX
      STA LOC       THIS IS OUR STARTING LOCATION 
* 
**   SET BUFFER POINTERS
* 
      LDA CBUF
      CLE,ELA 
      STA CBUF      SET UPPER/LOWER FLAG
CHA1  LDB CBUF
      CLE,ERB 
      LDA B,I 
      SEZ,RSS       UPPER ? 
      ALF,ALF 
      AND B177      ISOLATE CHAR
      ISZ CBUF      BUMP POINTER
* 
** NOW WE HAVE CHAR : FIND DOTS 
* 
      SZA,RSS       CHAR IS ASCII 0?
      JMP CHA1      YES, SKIP THIS CHAR
      ADA MB140     LEGAL ASCII CHAR
      SSA,RSS 
      JMP INVAL     NO
      ADA B100      CHECK LOWER LIMIT 
      SSA 
INVAL CLA           INVALID, REPLACE BY SPACE 
      STA CHRCD 
      ALS 
      ADA CHRCD     * 3 
      ADA TABEL     THIS IS THE CORRECT ADDRESS 
      STA CHRCD 
      LDA MD3       SET UP :
      STA CNT3      3 WORD COUNTER
      LDA LOC       GET GUN LOCATION
CHA2  LDB MD16      SET UP :
      STB CNT16     16 BIT COUNTER
      LDB MD8 
      STB CNT8      8 BIT COUNTER 
      LDB CHRCD,I   GET A LIBRARY WORD
      ISZ CHRCD 
CHA3  SSB,RSS       BIT SET ? 
      JMP CHA4       NO, GO TO NEXT
      JSB ADDPT      YES, STORE VALUE IN OUTPUT BUFFER 
CHA4  RBL           POSITION NEXT BIT 
      ADA MB400     DECREMENT Y 
      ISZ CNT16     16 BITS DONE ?
      JMP CHA5      NO
      ADA B4001     YES, RESET Y, INC X 
      ISZ CNT3      ALL THREE WORDS DONE ?
      JMP CHA2      NO
      ADA D2        YES, ADD SPACE
      STA LOC       SAVE AS NEXT GUN
CHA6  ISZ CNUM      FINISHED ?
      JMP CHA1      RETURN TO DO NEXT XHAR
FINIS JMP CHAR,I
CHA5  ISZ CNT8      8 BITS DONE ? 
      JMP CHA3      NO
      ADA B4001     YES RESET Y, INC X
      JMP CHA3
* 
**   *****   D A T A   *****
* 
MD1   DEC -1
MD3   DEC -3
MD8   DEC -8
MD16  DEC -16 
MB140 OCT -140
MB370 OCT -370
MB400 OCT -400
* 
D7    DEC 7 
D12   DEC 12
B40   OCT 40
B100  OCT 100 
B177  OCT 177 
B4001 OCT 4001
B172D OCT 172000
* 
LOC   BSS 1 
CHRCD BSS 1 
CNT3  BSS 1 
CNT8  BSS 1 
CNT16 BSS 1 
SAVX  BSS 1 
SAVY  BSS 1 
* 
**   THE FOLLOWING IS THE CHARACTER LIBRARY.  THE FIRST ENTRY IS
**   THE SYMBOL FOR AN UNKNOWN CHARACTER CODE. THE REMAINING
**   ENTRIES ARE IN STANDARD ASCII NUMERICAL ORDER. 
* 
********** DO NOT REARRANGE THIS TABLE ********** 
* 
      SUP 
TABEL DEF *+1       STARTING ADDRESS OF CHAR LIBRARY. 
* 
      OCT 0,0,0 
EXCL  OCT 1,174401,0
QUOTE OCT 360,0,170000
POUND OCT 22377,22044,177444
DOLR  OCT 61221,177621,47000
PRCNT OCT 41244,44022,22502 
AMP   OCT 7161,110632,63011 
APOST OCT 20,160100,0 
OPRN  OCT 74,41201,100400 
CPRN  OCT 201,100502,36000
AST   OCT 44452,16034,25111 
PLUS  OCT 10,4076,4010
COMMA OCT 1,416,2000
MINUS OCT 10,4010,4010
PER   OCT 2,3402,0
DIV   OCT 1004,4020,20100 
ZERO  OCT 36102,100601,41074
ONE   OCT 501,177401,400
TWO   OCT 40603,102611,110541 
THREE OCT 41201,100621,124506 
FOUR  OCT 6024,22104,177404 
FIVE  OCT 170621,110621,110616
SIX   OCT 17045,44611,4406
SEVEN OCT 100200,107620,120300
EIGHT OCT 67221,110621,110556 
NINE  OCT 60221,110621,111174 
COLON OCT 0,41347,41000 
SEMI  OCT 1,147304,0
LESS  OCT 20,24104,101000 
EQUAL OCT 44,22044,22044
GREAT OCT 202,42050,10000 
QUES  OCT 40201,105621,110140 
AT    OCT 77201,114645,114570 
AEE   OCT 37510,104210,44077
BEE   OCT 177621,110621,110556
C     OCT 77201,100601,100546 
D     OCT 100777,100601,100576
E     OCT 177621,110621,110601
F     OCT 177620,110220,100200
G     OCT 77201,100611,104516 
H     OCT 177420,10020,10377
I     OCT 100601,177601,100400
J     OCT 3001,401,776
K     OCT 177410,14044,41201
L     OCT 177401,401,401
M     OCT 177500,34070,40377
N     OCT 177440,10010,2377 
O     OCT 77201,100601,100576 
P     OCT 177610,104210,104160
Q     OCT 77201,100605,101175 
R     OCT 177610,104214,105161
S     OCT 61221,110621,104506 
T     OCT 100200,177600,100000
U     OCT 177001,401,776
V     OCT 160034,1403,16340 
W     OCT 177402,16034,1377 
X     OCT 141444,14030,22303
Y     OCT 140040,17437,20300
Z     OCT 101605,104621,120701
OBRAK OCT 377,100601,100400 
SLANT OCT 40040,10010,2002
BRAK2 OCT 201,100601,177400 
UPARO OCT 40,40377,40040
BKARO OCT 10070,52020,10020 
* 
CH#R  EQU CHAR              BORROWED BY RSV FROM TV INTERFACE SOURCE TO AVOID NAME COLISION WITH CHAR ON RTE-B
*
* 
*         CHARS ENTRY POINT 
*
* 
CX1   BSS 1 
CY1   BSS 1 
IASC  BSS 1 
CHARS NOP 
      JSB .ENTR 
      DEF CX1
*
      LDA IASC,I   GET BASIC STRING LEN
      AND B377     ISOLATE 
      STA IALEN
      ISZ IASC     SKIP 1ST WORD (THE LEN) IN IASC
      JSB CH#R     CALL 
      DEF *+5       THE 
      DEF CX1,I       CHAR
      DEF CY1,I        LIBRARY
      DEF IASC,I         ROUTINE.
      DEF IALEN      
      JMP CHARS,I    AND RETURN
* 
IALEN BSS 1
      END 


      LDA IASC,I   GET STRING LEN
      AND B377     ISOLATE 
      STA IALEN
      ISZ IASC     SKIP LEN
      JSB CH#R     CALL 
      DEF *+6       THE 
      DEF .LU1,I      ACTUAL 
      DEF .X1,I        CHAR
      DEF .Y1,I         LIBRARY
      DEF IASC,I         ROUTINE.
      DEF IALEN      
*
      JMP CHARS,I    AND RETURN
* 
TEMP  BSS 1
IALEN BSS 1
      END 
