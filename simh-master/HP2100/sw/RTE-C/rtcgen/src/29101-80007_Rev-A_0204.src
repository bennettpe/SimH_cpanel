      LDA ALBUF     SET OFFSET ADDRESS
      STA SETAD     TO THE CLEARED BUFFER 
      LDB ALBUF     ADDRESS OF IN BUFFER
      JSB BUFCL     CLEAR BUFFER TO OCTAL ZEROS 
      OCT 0 
      LDA EQTA      START ADDR OF AREA TO BE CLEARED
      LDB BPCLR     END ADDRESS 
      JSB SETCR     CLEAR LOWER HALF
      LDA BPCLR 
      LDB BKLWA 
      JSB SETCR     CLEAR UPPER HALF
SMLWA LDA P8
      LDB MESS3     MESS3 = ADDR: LWA MEM?
      JSB AREAD,I   PRINT MESSAGE, GET REPLY
      LDA P5        SET FOR 5 OCTAL DIGITS INPUT
      JSB DOCON     GET DIGITS, RETURN OCTAL
      JMP SMLWA     REPEAT INPUT
      LDA OCTNO     GET LWAM
      STA TEMP3     SAVE FOR FWA SYS MEMORY PROCESSING
      STA SETAD,I   PUT IN BUFFER 
      LDA BKORG     ADDRESS OF BK LWAM
      LDB A         ADDRESS INTO B
      JSB SETCR     OUTPUT ABSOLUTE 
      LDA BKLWA     THE OTHER BP REFERENCE
      LDB A 
      JSB SETCR     OUTPUT TO ABS 
* 
      JSB SPACE 
GETAV LDA P11       PRINT:
      LDB MES34     "FWA SYS MEM?" 
      JSB AREAD,I   GET THE ANSWER
      LDA P5        SET FOR 5 OCTAL DIGITS. 
      JSB DOCON     CONVERT TO OCTAL. 
      JMP SYMER     -ERROR. 
      JMP SETAV     OK , SET BOUNDARY.
* 
SYMER JSB INERA,I 
      JMP GETAV     -REPEAT REQUEST 
* 
SETAV LDA OCTNO     IF NUMBER 
      STA SYMAD 
      SZA,RSS       EQ 0, LEAVE FWA 
      JMP SETA1 
      LDB TEMP3     SUBTRACT ORIG.
      CMA,INA 
      ADB A          NEW VALUE
      SSB            ERROR IF 
      JMP SYMER      NEW > LWAM 
*                                        CLEAR RTS BP AREA
      LDA SYMAD     GET START OF SYS MEMORY 
      ADA N1        ADJUST FOR LWAM 
      RSS 
SETA1 LDA TEMP3     DEFAULT TO LWAM 
      STA .MEM4     UPPER LOAD BOUNDS 
*                                         SET PRIV CHAN IN BP 
      LDA PIOC      PRIV. INT CHANNEL 
      STA SETAD,I   PUT IN BUFFER 
      LDA DUMMY     ADDRESS WHERE TO GO IN BP 
      LDB A 
      JSB SETCR     GO SET IT IN BP 
*                                        GO REL SYS MODULES 
      JSB SPACE     NEW LINE
      LDA P12       PRINT:
      LDB MES2      "REL SYS MODS"
      JSB AOTLY,I   PRINT 
*                                     RELOCATE FROM RTS/2100 LOADER 
      LDA LWAM      SET START OF INT PROG NAME TBL
      STA OPT.3     LAST ADDRESS OF LST STORAGE 
      LDA P2
      STA .XFER     NON ZERO TO LOAD SYS MODULES
      JSB CLBPL     CLEAR BASE PAGE LINKS 
      STA PNAME     CLEAR NAME FLAG 
      STA LOCC      CLEAR LOCC IN LOADER
      STA BPLOC     SAME FOR BPLOC
      JSB PRCMD     GO RELOCATE SYS MODULES 
      JMP BEGIN     ERROR FROM LOADER, TRY AGAIN
      LDA LOCC      UPDATE FWAM 
      STA .MEM3     FWAM
      LDA BPLOC     UPDATE FWABP
      STA .MEM1 
      LDA LST 
      STA LSTSV     SAVE FOR RELOCATION ERROR 
      LDA UEXFL     WERE THERE ANY UNDEFINED? 
      SZA,RSS 
      JMP *+4       NO CONTINUE 
RELSE LDA ERR33     YES,PRINT:
      JSB ERROR     "ERR AD"
      JMP BEGIN     START RTSGN OVER
      LDB A$STR 
      JSB SSTBL     WAS $STRT LOADED? 
      JMP RELSE     NO, ERROR,
      LDA LST4      YES, GET STARTING ADDRESS 
      LDA A,I 
      STA STRAD     SAVE IT FOR CLEAN-UP AT END OF RTSGN
      LDB A$CIC     $CIC NAME 
      JSB SSTBL     WAS $CIC LOADED?
      JMP RELSE     NO, ERROR, START OVER 
      LDA LST4      BUILD A BP LINK FOR $CIC
      LDA A,I 
      STA SETAD,I   OUTPUT BP LINK
      LDA .MEM1                 FOR $CIC
      LDB A 
      JSB SETCR 
      LDB LST5
      LDA .MEM1 
      STA A$CIA     SAVE FOR JSB INSTRUCTION
      STA B,I 
      ISZ .MEM1     BUMP TO NEXT LINK 
      JMP AGNIO,I   YES, GO BUILD I/O TABLES
* 
* 
* 
*                                   NUMERICAL INPUT CONTROL 
* 
*  THE DOCON SUBROUTINE ANALYZES THE INPUT FOR THE
*  CHANNEL NO., TBG CHANNEL NO., AND LAST 
*  WORD OF AVAILABLE MEMORY.
* 
*  CALLING SEQUENCE:
*    A = MAX NO. OF CHARACTERS PERMITTED IN RESPONSE. 
*        THE SIGN OF A DETERMINES THE CONVERSION FROM 
*        ASCII TO OCTAL (POS.) OR DECIMAL (NEG.). 
*    B = IGNORED
*    JSB DOCON
* 
*  RETURN:
*    (N+1): CONTENTS OF A AND B ARE DESTROYED.  AN INVALID
*           CHARACTER HAS BEEN DETECTED IN THE RESPONSE, OR 
*           THE RESPONSE CONTAINS AN INVALID NO. CHARACTERS.
*           THE MESSAGE IS TO BE REPEATED ON RETURN.
*    (N+2): A = CONVERTED RESULT
* 
DOCON NOP 
      JSB AGETO,I   GET OCTAL/DECIMAL, RETURN OCTAL 
      JMP *+4       INVALID DIGIT 
      JSB AGETA,I   GET NEXT CHAR FROM LBUF 
      CPA ZERO      CHAR = ZERO? (END OF BUFFER)
      JMP *+3       YES - CONTINUE
      JSB INERR     INVALID DIGIT ENTRY 
      JMP DOCON,I   RETURN
      ISZ DOCON     INCR RETURN ADDRESS 
      LDA OCTNO     GET CONVERTED NUMBER
      JMP DOCON,I   RETURN
      SKP 
* 
*                                   INVALID TTY RESPONSE
* 
*  THE INERR SUBROUTINE PRINTS THE DIAGNOSTIC FOR INVALID 
*  RESPONSES DURING THE INITIALIZATION SECTION. 
* 
*  CALLING SEQUENCE:
*    A = IGNORED
*    B = IGNORED
*    JSB INERR
* 
*  RETURN: CONTENTS OF A AND B ARE DESTROYED. 
* 
INERR NOP 
      LDA ERR10     SET INVALID DEVICE ERROR CODE 
      JSB ERROR     PRINT ERROR MESSAGE 
      JMP INERR,I   RETURN
* 
*                                 CLEAR BASE PAGE LINKS 
* 
*  CALLING SEQUENCE:
*    A = IGNORED
*    B = IGNORED
*    JSB CLBPL
* 
* 
*  RETURN:  A IS CLEARED, B IS DESTROYED
* 
* 
CLBPL NOP 
      LDA N1020     CLEAR 
      STA WDCNT         BASE PAGE 
      CLA 
      LDB BPAG4               LINKAGE 
      STA B,I                      AREA 
      INB                             FOR LOADER. 
      ISZ WDCNT 
      JMP *-3 
      JMP CLBPL,I   ALL DONE, RETURN
      SKP 
* 
*                                   ALPHABETIC INPUT CONTROL
* 
*  THE SINIT SUBROUTINE ANALYZES THE RESPONSE FOR THE PROGRAM,
*  LIBRARY, AND PARAMETER INPUT.
* 
*  CALLING SEQUENCE:
*    A = IGNORED
*    B = IGNORED
*    JSB SINIT
* 
*  RETURN:
*    (N+1): AN INVALID SET OF CHARACTERS (NOT 1(TTY),5(PTR))
*           OR NO. OF CHARACTERS HAS BEEN DETECTED. 
*           AFTER PRINTING THE DIAGNOSTIC, A RETURN IS MADE TO
*           PERMIT THE MESSAGE TO BE REPEATED.  THE CONTENTS
*           OF A AND B ARE DESTROYED. 
*    (N+2): A = ADDRESS OF DESIGNATED INPUT DRIVER
*           B = DESTROYED 
* 
SINIT NOP 
      CLA,INA       SET MAX NO. DIGITS FOR GETNA
      JSB AGETN,I   MOVE LBUF TO TBUF 
      JSB AGETA,I   GET NEXT CHAR FROM LBUF 
      CPA ZERO      CHAR = ZERO? (END OF BUFFER)
      JMP *+3       YES - CONTINUE
CODIN JSB INERR     INVALID TTY RESPONSE
      JMP SINIT,I   RETURN - ERROR
      LDA TBUF      GET 2-CHARACTER CODE
      CPA TYTYP     TYPE = TTY? 
      JMP TYUN      YES - UNIT IS TELETYPE
      CPA PTTYP     TYPE = PT READER? 
      JMP PTUN      SET UNIT = PT READER
      JMP CODIN     INVALID PT, MT OR TY
TYUN  LDA DRTTY     DRTTY = TTY INPUT DRIVER ADDRESS
      RSS 
PTUN  LDA DRPTR     DRPTR = PT READER DRIVER ADDR 
PT.DV ISZ SINIT     INCR RETURN ADDRESS 
      JMP SINIT,I   RETURN
* 
TYTYP OCT 61
PTTYP OCT 65
* 
MES27 DEF MS27
MES34 DEF SYMES 
SYMES ASC 6,FWA SYS MEM?
MS27  ASC 4,FWA BP? 
MESS3 DEF *+1 
      ASC 5,LWA MEM?
MESS6 DEF *+1 
      ASC 5,PRAM INPT?
MES30 DEF *+1 
      ASC 5,TBG CHNL? 
A$STR DEF *+1 
      ASC 3,$STRT 
A$CIC DEF *+1 
      ASC 3,$CIC
* 
* 
ERPNT NOP           PRINT CONTENTS OF LBUF
      LDB PARAD     GET ADDRESS OF PARAMETER UNIT 
      CPB DRTTY     DEVICE = TTY? 
      JMP *+4       YES - OMIT PRINTING ON TTY
      LDA PARNO     PARNO = PARAMETER RECORD LENGTH 
      LDB ALBUF     ALBUF = BUFFER ADDRESS
      JSB DRKEY,I   PRINT PARAMETER RECORD
      JMP ERPNT,I   RETURN
      HED RTSGN  GENERATE I/O TABLES
      ORR 
* 
*                                   GENERATE I/O TABLES 
* 
*  THIS SECTION OF CODE GENERATES THE I/O TABLES
*  FOR THE SYSTEM.  THESE INCLUDE THE EQUIPMENT TABLE (EQT),
*  STANDARD DEVICE REFERENCE TABLE (DRT), AND INTERRUPT TABLE.
* 
*  THE EQT RECORDS HAVE THE FOLLOWING FORMAT: 
* 
*    N1,DVRN2<,D><,B><,T=>
* 
*  N1 = CHANNEL NO. (2 OCTAL DIGITS)
*  N2 = DRIVER CLASS. CODE (2 OCTAL DIGITS) 
*  D = DMA FLAG (OPTIONAL)
*  B = BUFFERING FLAG (OPTIONAL)
*  T = TIME-OUT VALUE TO BE ENTERED 
* 
*    IF T= IS ENTERED, A VALUE FOR THE DEVICE'S TIME-OUT
*    CLOCK MUST NEXT BE ENTERED.
*    THE OPERATOR MUST ENTER A POSITIVE DECIMAL NUMBER
*    OF UP TO FIVE DIGITS.  THIS IS THEN THE NUMBER OF
*    TIME BASE GENERATOR INTERRUPTS (10 MSEC INTERVALS) 
*    BETWEEN THE TIME IO IS INITIATED ON THE DEVICE AND 
*    THE TIME AFTER WHICH THE DEVICE SHOULD HAVE INTERRUPTED. 
*    IF THE DEVICE HAS NOT INTERRUPTED BY THIS TIME, IT 
*    IS CONSIDERED TO HAVE TIMED-OUT. 
* 
* 
*  EACH DRT RECORD CONSISTS OF A 2-DIGIT NO. SPECIFYING THE 
*  CORRESPONDING ENTRY IN THE EQUIPMENT TABLE 
*  AND AN OPTIONAL 1-DIGIT NO. SPECIFYING A 
*  SUBCHANNEL WITHIN THAT ENTRY.  FOR EXAMPLE, IN 
*  RESPONSE TO THE MESSAGE:  5 = ?, THE RESPONSE 6 INDICATES THAT 
*  THE LOGICAL UNIT NO. 5 IS TO USE DEVICE 6 IN EQT.
*  WHEREAS THE RESPONSE 6,2 INDICATES THAT THE
*  LOGICAL UNIT NO. 5 IS TO USE SUBCHANNEL 2 OF 
*  DEVICE 6 IN EQT. 
* 
* 
*  THE INT RECORDS HAVE ONE OF THE FOLLOWING FORMATS: 
* 
*    N1,EQT,N2
*    N1,PRG,NAME
*    N1,ENT,ENTRY 
*    N1,ABS,N3
* 
*  N1 = CHANNEL NO. (2 OCTAL DIGITS - MUST BE IN INCREASING ORDER)
*        EXCEPTION:    IF N1 = 04 (POWER - FAIL), 
*        THIS ENTRY DOES NOT HAVE TO BE IN ORDER.  ALSO,
*        ONLY AN ENT OR AN ABS TYPE ENTRY IS ACCEPTED 
*        FOR N1 = 04. 
*  N2 = EQT NO. 
*  NAME = PROGRAM NAME TO BE SCHEDULED
*  ENTRY = ENTRY POINT TO WHICH TRANSFER IS TO BE MADE
*  N3 = ABSOLUTE VALUE (6 OCTAL DIGITS) 
* 
* 
GENIO CLA 
      STA IDNOS     ID'S MADE 
      STA STRPN     START UP PROGRAM FLAG 
      STA CEQT      NOS OF EQT'S
      STA PROCT     NOS OF INT PROG ENTRIES 
      JSB SPACE     NEW LINE
      LDA .MEM3     FWAM
      STA AEQT      EQT STARTING ADDRESS
      STA PPREL 
      LDA P7        PRINT:
      LDB MES25     "EQT TBL" 
      JSB AOTLY,I 
      JSB SPACE     NEW LINE
* 
SEQT  JSB SPACE 
      LDA CEQT      EQT COUNT 
      INA 
      LDB MES6A     STUFF INTO PRINT BUFFER 
      JSB STFNM 
      LDA P9        PRINT:
      LDB MES6      "EQT XX =?" 
      JSB AREAD,I   AND INPUT DRIVER REQUEST
      LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA PTERM     CHARS= END ?
      JMP SSQTI     YES, TRY TO END 
      CPA REQT      REPEAT? 
      JMP GENIO     YES 
* 
      JSB GINIT     INITIALIZE BUFFER SCAN
      LDA P2
      JSB GETOC     GET 2 OCTAL DIGITS, CONVERT 
      JMP IOERR     INVALID DIGIT 
      JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA BLANK     CHAR = COMMA? 
      JMP CLDBU     YES - SET CHNL NO., CLEAR D,B,U 
IOERR LDA ERR24     SET CODE = INVALID CHNL IN EQT
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SEQT      GET NEXT EQT RECORD 
* 
CLDBU LDB OCTNO     GET I/O CHANNEL NO. 
      STB IOADD     SET I/O ADDRESS 
      ADB N8        IS CHAN EQ. LESS THAN 10? 
      SSB 
      JMP IOERR     YES, CHANNEL ERROR
      CLA 
      STA TIMWD     CLEAR TIME WORD 
      STA IODMA     CLEAR DMA FLAG
      STA IOBUF     CLEAR AUTOMATIC BUFFERING FLAG
      CCA 
      STA TFLAG     CLEAR TIME-OUT FLAG 
      CLA,INA 
      JSB GETNA     MOVE 1 CHAR TO RH TBUF POSITION 
      CPA CHARD     CHAR = D? 
      RSS           YES - CONTINUE
      JMP DVERR     INVALID DRIVER NAME 
      LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF (CHARS 2,3)
      CPA CHAVR     CHARS = VR? 
      JMP STYPE     YES - GET DRIVER TYPE 
DVERR LDA ERR25     SET CODE = INVALID DRIVER NAME
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SEQT      GET NEXT EQT RECORD 
STYPE LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      STA ASTYP     SAVE 2 ASCII CHARS FOR I.XX,C.XX
      STA ASCYP     SAVE FOR C.XX COMPARE 
      CCA 
      ADA CURAL     ADJUST CURRENT LBUF ADDR
      STA CURAL     RESET CURAL TO CONVERT TYPE 
      LDA P2
      JSB GETOC     GET 2 OCTAL CHARS, CONVERT
      JMP DVERR     INVALID DRIVER NAME 
      LDB OCTNO     GET DRIVER TYPE 
      BLF,BLF       ROTATE TO UPPER B 
      STB IOTYP     SET DRIVER TYPE 
      JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA ZERO      END OF BUFFER?
      JMP LISCN     SCAN FOR I.XX, C.XX 
      CPA BLANK     CHAR = COMMA? 
      RSS           YES - CONTINUE
      JMP DVERR     NO - INVALID DRIVER NAME
* 
      CCA 
      STA DFLAG     SET DMA-IN FLAG 
      STA BFLAG     SET BUFFERING-IN FLAG 
* 
INDBU CCA 
      STA CMFLG     SET COMMA FLAG = NO COMMA IN
      JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA CHARD     CHAR = D? 
      JMP SEDMA     YES - SET DMA CODE
      CPA CHARB     CHAR = B? 
      JMP SETBU     YES - SET BUFFERING CODE
      CPA CHART     CHAR = T? 
      JMP SETIM      YES - SET TIME-OUT FLAG
UNERR LDA ERR10     SET CODE = INVALID D,B,T
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SEQT      GET NEXT EQT RECORD 
SETIM ISZ TFLAG     SKIP - FIRST T ENTERED
      JMP UNERR     DUPLICATE T'S ENTERED 
      JSB GETAL     GET NEXT CHAR 
      CPA AEQUL     IS IT "=" ? 
      RSS           YES ACCEPT TIME VALUE 
      JMP UNERR     NO, ITS AN ERROR
      LDA N5        5 CHAR VALUE
      JSB GETOC     FETCH TIME OUT TIME 
      JMP UNERR     NUMBER IS NO GOOD 
      SZA           WAS ZERO INPUT? 
      CMA           ONE'S COMPLEMENT FOR THAT RTS 
      STA TIMWD     SAVE FOR OUTPUT 
EQTST JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA ZERO      END OF BUFFER?
      JMP LISCN     SCAN FOR I.XX, C.XX 
      CPA BLANK     CHAR = COMMA? 
      JMP INDBU     YES - GET NEXT D,B,U, ENTRY 
      JMP UNERR     NO - INVALID D,B,U CHARACTER
* 
SEDMA ISZ DFLAG     SKIP - FIRST D ENTERED
      JMP UNERR     DUPLICATE D'S ENTERED 
      LDA MSIGN     SET BIT 15 = 1 FOR DMA FLAG 
      STA IODMA     SET DMA CODE
      JMP EQTST     TEST FOR NEXT OPERAND 
* 
SETBU ISZ BFLAG     SKIP - FIRST B ENTERED
      JMP UNERR     DUPLICATE B'S ENTERED 
      LDA BIT14     SET BIT14 = 1 
      STA IOBUF     SET AUTOMATIC BUFFERING CODE
      JMP EQTST     TEST FOR NEXT OPERAND 
* 
LISCN LDB ASIDR     ADDRESS OF I.XX BUFFER
      JSB SSTBL     IS IT IN THE SYMBOL TABLE?
      JMP DVERR     NO
      LDA LST4      YES, GET THE ADDRESS
      LDA A,I 
      STA I.XX      SAVE FOR OUTPUT 
      LDB ASCDR     ADDRESS OF C.XX BUFFER
      JSB SSTBL     IS IT IN SYMBOL TABLE?
      JMP NOCXX     NO, USE ADDRESS OF I.XX 
      LDA LST4      YES, GET ADDRESS
      LDA A,I 
STCXX STA C.XX      SAVE DRIVER EXIT POINT
* 
      LDB ALBUF     CLEAR OUTPUT BUFFER 
      JSB BUFCL 
      OCT 0 
      LDA IODMA     GET DMA CODE
      IOR IOBUF     ADD BUFFERING CODE
      IOR IOADD     ADD CHANNEL NO. 
      STA LBUF+3    OUTPUT BUFFER 
      LDA I.XX
      STA LBUF+1    INT. ADDRESS
      LDA C.XX
      STA LBUF+2    COMPLETE ADDRESS
* 
      LDA IOTYP     GET EQUIPMENT TYPE CODE 
      AND M7000     ISOLATE UPPER 7 BITS
      SZA           SKIP - TYPE = 0,I 
      CLA,RSS       SET STATUS = 0, SKIP
      LDA BLANK     SET STATUS = 40(8)
      IOR IOTYP     ADD EQUIPMENT TYPE CODE 
      STA LBUF+4
      LDA TIMWD     WAS A TIME INPUT ?
      SZA 
      STA LBUF+13   YES, SAVE IT IN EQT 
      LDA PPREL     GET CURRENT EQT ADDRESS 
      LDB A 
      ADB P14       ADDRESS OF END OF EQT 
      STB PPREL 
      JSB SETCR     OUTPUT IN ABS 
      ISZ PPREL     BUMP TO NEXT EQT ENTRY
      ISZ CEQT      INCR EQT ENTRY COUNT
      JMP SEQT      PROCESS NEXT EQT RECORD 
* 
      SPC 1 
NOCXX LDA I.XX      C.XX NOT FOUND SO USE 
      JMP STCXX     I.XX ADDRESS
* 
SSQTI LDA CEQT      ANY EQT'S BEEN LOADED?
      SZA 
      JMP SSQT      YES, CAN END
      LDA ERR10     NO,AT LEAST ONE REQUIRED
      JSB ERROR     PRINT: "ERR PA" 
      JMP SEQT      START OVER
* 
* 
* 
*                                   SET DEVICE REFERENCE TABLE (SQT)
* 
SSQT  JSB SPACE     NEW LINE
      LDA CEQT      GET NO. OF EQT'S
      ALF           MULT X16
      LDB CEQT      NO. OF EQT'S
      CMB,INB 
      ADA B         SUB. FOR X15
      ADA .MEM3     ADD ORIG REL ADDRESS
      STA PPREL     UPDATE REL ADDRESS
      STA ASQT      SAVE SQT ADDRESS
      CLA,INA 
      STA CSQT      SET SQT COUNT = 1 
      LDA P13 
      LDB MES26     MES26 = ADDR: *DEV REF TABLE
      JSB AOTLY,I   PRINT: * DEVICE REFERENCE TABLE 
* 
DEVRE LDA CSQT      GET CURRENT DEV REF NO. 
      LDB MES28 
      JSB STFNM     STUFF NUM IN BUFFER 
      JSB SPACE     NEW LINE
      LDA P11 
      LDB MES28     MES28 = ADDR: XX = EQT #? 
      JSB AREAD,I   GET SQT RECORD FROM TTY 
      LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA PTERM     CHARS = /E? 
      JMP SINTI     YES - SET INTERRUPT TABLE 
      CPA RDRT      REPEAT DRT? 
      JMP SSQT      YES, START OVER 
      CPA REQT      REPEAT EQT? 
      JMP GENIO     YES, GO BACK
      JSB GINIT     RE-INITIALIZE LBUF SCAN 
      LDA N3
      JSB GETOC     GET 2 DECIMAL DIGITS, CONVERT 
      JMP DRERR     INVALID DIGIT ENTERED 
      STA TEMPL     SAVE DEV. REF. NO.
      SZA,RSS       IF NO CHANNEL 
      JMP NOSUB     IGNOR SUBCHANNEL
      LDA CMFLG     COMMA ENCOUNTERED?
      SZA            YES - GO GET SUBCHANNEL
      JMP NOSUB      NO - DEFAULT IT TO ZERO
      INA 
      JSB GETOC     GET ONE OCTAL DIGIT 
      JMP DRERR 
      JSB GETAL     GET NEXT CHAR 
      CPA ZERO      END OF BUFFER?
      RSS           YES 
      JMP DRERR     NO, SHOULD BE BUT ISN'T 
      LDA OCTNO     GET SUB CHANNEL 
      RSS           SKIP OVER DEFAULT 
NOSUB CLA           DEFAULT TO ZERO 
      STA TEMPS     SAVE SUB CHANNEL
      ALF,ALF       SET SUBCHANNEL NO.
      ALF,RAR        INTO BITS 13 - 11
      STA TEMPH     SAVE SUBCHANNEL NO. 
      LDA TEMPL     GET DEV. REF. NO. 
      CMA,INA       COMPLEMENT
      ADA CEQT      ADD NO. EQT ENTRIES 
      SSA           SKIP IF VALID DEV. REF NO.
      JMP DRERR     INVALID DEV. REF. NO. (NO EQT)
      LDA TEMPL     GET DEV. REF NO.
      LDB CSQT      GET CURRENT SQT NO. 
      CPB P1        FIRST ENTRY?
      RSS           YES - CONTINUE
      JMP SETQT     PUT OUT DEV REF NO. TO SQT
      SZA,RSS       SKIP IF DEV REF IS NOT ZERO 
      JMP DRERR     INVALID DEV. REF. NO. 
      CMA,INA       COMPLEMENT CURRENT DEV. REF. NO.
      LDB AEQT      GET ADDRESS OF EQT
      INA,SZA,RSS   SKIP - DEV. REF. NOT 1
      JMP *+4       SET TTY CHANNEL NO. = FIRST EQT 
      ADB P15       ADJUST CURRENT EQT ADDRESS
      INA,SZA       SKIP - EQT FOUND
      JMP *-2       CONTINUE CURRENT EQT SEARCH 
      STB LBUF+1    SET EQT ADDR IN TTY CHANNEL 
      LDA TBCHN     TBG CHANNEL 
      STA LBUF      PUT IN OUT PUT BUFFER 
      LDA TBG       ADDRESS WHERE TO GO 
      LDB SYSTY 
      JSB SETCR     OUTPUT IN ABSOLUTE
* 
SETQT LDA TEMPL     GET DEV. REF. NO. 
      IOR TEMPH     SET IN SUBCHANNEL NO. 
      STA LBUF      FOR OUTPUT
      LDA PPREL     ABS ADDRESS 
      LDB A 
      JSB SETCR     GO BUILD ABS DATA 
      ISZ PPREL     INCR CURRENT RELOC ADDRESS
      ISZ CSQT      INCR CURRENT SQT COUNT
      JMP DEVRE     GET NEXT SQT ENTRY
DRERR LDA ERR27     SET CODE = INVALID DEV. REF. NO.
      JSB ERROR     PRINT DIAGNOSTIC
      JMP DEVRE     REPEAT INPUT
* 
TEMPL NOP 
TEMPH NOP 
TEMPS NOP 
* 
SINTI LDA CSQT      HAVE ANY DRT'S BEEN ENTERED?
      ADA N1
      STA CSQT
      SSA,RSS 
      JMP SINTT     YES, GO TO INT PROCESSING 
      JMP DRERR     NO, ERROR , START OVER
* 
      SKP 
*  ROUTINE TO INPUT TO BUFFER FROM TTY
* 
* 
READ  NOP 
      JSB LOUT
      LDA WONLY     WRITE ONLY FLAG 
      SZA,RSS       WRITE ONLY REQUEST? 
      JMP *+4       NO
      CLA 
      STA WONLY     CLEAR WONLY 
      JMP OTNLY,I 
      LDA P64 
      LDB ALBUF     GET ADDRESS OF LBUF 
      JSB PARAD,I       ENTRY FROM TTY
      SZA,RSS       SKIP - DATA INPUT 
      JMP *-4       REPEAT INPUT
      STA PARNO 
      INA 
      CLE,ERA 
      ADA ALBUF     BUILD ADDRESS OF NEXT 
      CLB 
      STB A,I       RESTOR WITH BLANK (0) 
      JSB ERPNT      CHECK FOR ECHO OF INPUT
      JSB GINIT     INITIALIZE LBUF SCAN
      JMP READ,I    RETURN
* 
* 
* 
*  OUTPUT ONLY ROUTINE
* 
OTNLY NOP 
      STB WONLY     SET THE WRITE ONLY FLAG 
      JMP READ+1
* 
      HED RTSGN  I/O TABLE GENERATION SUBROUTINES 
* 
*                                   GET CHAR FROM LBUF, RETURN IN A 
* 
*  THE FOLLOWING SUBROUTINE SUPPLIES THE CHARACTERS FOR 
*  GETNA AND GETOC. 
* 
*  CALLING SEQUENCE:
*    A = IGNORED
*    B = IGNORED
*    JSB GETAL
* 
*  RETURN:
*    A = CURRENT CHARACTER
*    B = DESTROYED
* 
GETAL NOP 
      LDA CMFLG     CMFLG = COMMA-IN FLAG 
      SZA,RSS       SKIP IF NO COMMA IN 
      JMP BLRET     RETURN BLANK
      LDB BUFUL     GET U/L FLAG
IGNOR LDA CURAL,I   GET CHAR FROM LBUF
      SZB           SKIP IF LOWER CHAR
      ALF,ALF       ROTATE TO LOWER 
      AND M377      ISOLATE LOWER CHAR
      CPA ZERO      END OF BUFFER?
      JMP GETAL,I   YES - RETURN WITH ZERO
      CMB,SZB       RESET U/L, SKIP IF UPPER CHAR 
      ISZ CURAL     INCR LBUF ADDRESS 
      CPA BLANK     CHAR = BLANK? 
      JMP IGNOR     IGNORE BLANKS 
      STB BUFUL     SAVE U/L FLAG 
      CPA COMMA     CHAR = COMMA? 
      ISZ CMFLG     RESET FLAG TO SHOW COMMA IN 
      JMP GETAL,I   RETURN WITH NON-BLANK CHAR
BLRET LDA BLANK     REPLACE WITH BLANK CHAR 
      JMP GETAL,I   RETURN WITH BLANK 
      SKP 
* 
*                                   MOVE ALPHA FROM LBUF TO TBUF
* 
*  THE FOLLOWING SUBROUTINE MOVES THE CHARACTERS FROM LBUF
*  TO TBUF. 
* 
*  CALLING SEQUENCE:
*    A = MAX. NO. OF CHARACTERS TO BE MOVED.  THE SIGN OF A 
*        DESIGNATES THE POSITION OF THE FIRST CHARACTER.
*        IF THE SIGN OF A IS POSITIVE, THE FIRST CHAR IS TO 
*        BE MOVED TO THE LOW CHAR IN TBUF.  IF A IS NEGATIVE, THE 
*        FIRST CHARACTER IS TO BE MOVED TO THE UPPER CHAR IN TBUF.
*    B = IGNORED
*    JSB GETNA
* 
*  RETURN:
*    A = FIRST CHAR (IF ONLY 1 CHAR) OR FIRST 2 CHARS MOVED.
*    B = DESTROYED
* 
GETNA NOP 
      CCE,SSA,RSS   SET E = 1 (EVEN) POSITION 
      CMA,CLE,INA   SET E = 0 (ODD) POSITION - COMP 
