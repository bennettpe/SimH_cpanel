SINTT JSB SPACE     NEW LINE
      LDA PPREL     GET CURRENT RELOCATION ADDR 
      STA AINT      SAVE INTERRUPT TABLE ADDRESS
      LDA P7
      LDB MES29     MES29 = ADDR. * INT TABLE 
      JSB AOTLY,I   PRINT: INT TBL
      LDA A$CIA     $CIC ADDRESS
      IOR IJSB      ADD JSB 0,I CODE
      STA JSCIC     SET JSB CIC,I CODE
      LDB ALBUF     GO STUFF BUFFER WITH JSB $CIC 
      JSB BUFCL 
JSCIC OCT 0         STUFF DATA
      CLA 
      STA PROCT 
      LDA P5        PG ZERO  INT START ADDRESS
      LDB LWABP 
      CMB,INB 
      ADB P58 
      SSB 
      JMP *+3 
      LDB LWABP 
      RSS 
      LDB P58       ADDRESS FIRST HALF
      JSB SETCR     OUTPUT JSB $CIC,I 
* 
      LDA HLTB4     SET HLT 4 INTO LOC 4
      STA LBUF      TO OUTPUT BUFFER
      LDA P4        ADDRESS 
      LDB A 
      JSB SETCR     OUTPUT HLT 4
      LDB P6        GET ADDR OF FIRST INT LOCATION
      STB TBREL     SET CURRENT BP ADDRESS
* 
SETIN CLA           NEW LINE
      JSB AREAD,I   GET INT RECORD FROM TTY 
      LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA PTERM     CHARS = -E? 
      JMP ENDIO     YES - I/O TABLES COMPLETE 
      CPA RINT      REPEAT INTERRUPT? 
      JMP SINTT     YES 
      CPA REQT      GO BACK TO EQT? 
      JMP GENIO     YES 
      CPA RDRT      REPEAT DRT? 
      JMP SSQT      YES 
      JSB GINIT     RE-INITIALIZE LBUF SCAN 
      LDA P2
      JSB GETOC     GET 2 OCTAL DIGITS, CONVERT 
      JMP CHERR     INVALID INT CHANNEL NO. DIGIT 
      JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA BLANK     CHAR = COMMA? 
      JMP SETCH     SAVE INT CHANNEL NO.
CHERR LDA ERR10     SET CODE = INVALID INT CHNL NO. 
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SETIN     REPEAT INT REC INPUT
* 
SETCH LDA OCTNO     GET INT CHANNEL NO. 
      STA INTCH     SAVE CHANNEL NO.
      ADA N4        CHAN L.T. 4?
      SSA 
      JMP CHERR     YES, CHANNEL ERROR
* 
      LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA CHREQ     CHARS = EQ? 
      JMP INTEQ     YES - PROCESS INT EQT RECORD
      CPA CHRPR     CHARS = PR? 
      JMP INTPR     YES - PROCESS INT PRG RECORD
      CPA CHREN     CHARS = EN? 
      JMP INTEN     YES - PROCESS INT ENT RECORD
      CPA CHRAB     CHARS = AB? 
      JMP INTAB     YES - PROCESS INT ABS RECORD
IMNEM LDA ERR09     SET CODE = INVALID INT MNEMONIC 
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SETIN     REPEAT INT REC INPUT
* 
INTEQ LDA N2
      JSB GETNA     MOVE NEXT 2 CHARS TO TBUF 
      CPA UTCHR     CHARS = T,BLANK?
      RSS           YES - CONTINUE
      JMP IMNEM     NO - INVALID INT MNEMONIC 
      LDA N2
      JSB GETOC     GET 2 DECIMAL DIGITS, CONVERT 
      JMP EQUER     INVALID EQT NO. IN INT REC
      LDB OCTNO     GET EQT TABLE ENTRY NO. 
      CMB,INB,SZB,RSS  SKIP - VALID LOWER LIMIT 
      JMP EQUER     INVALID EQT REFERENCE 
      STB TCHAR     SAVE EQT NO.
      ADB CEQT      ADD UPPER EQT REF. NO.
      SSB,RSS       SKIP - INVALID UPPER LIMIT
      JMP TSTIQ     TEST FOR FIRST EQT REFERENCE
EQUER LDA ERR31     SET CODE = INVALID EQT NO.
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SETIN     REPEAT INT REC INPUT
* 
TSTIQ LDB TCHAR     GET EQT REF. NO.
      LDA AEQT      GET ADDR OF EQT 
      INB,SZB,RSS   SKIP - NOT FIRST EQT REFERENCE
      JMP SEQTI     SET EQT ADDR IN INT TABLE 
      ADA P15       ADJUST FOR NEXT EQT ENTRY ADDR
      INB,SZB       SKIP - EQT ADDRESS FOUND
      JMP *-2       CONTINUE EQT SEARCH 
SEQTI LDB JSCIC     GET JSB CIC CODE
      JMP COMIN     SET INTERRUPT TABLE, LOCATION 
* 
INTPR LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA UGCHR     CHARS = G,BLANK?
      RSS           YES - CONTINUE
      JMP IMNEM     NO - INVALID INT MNEMONIC 
      LDA TBREL     FETCH CHANNEL 
      CMA,INA 
      ADA INTCH     ASSENDING ORDER?
      SSA,SZA 
      JMP IMNEM     NO, ERROR 
      LDA N5
      JSB GETNA     MOVE 5 CHARS TO TBUF
      LDA TBUF+2    NAME: 5 
      AND M7400     MASK OUT LOWER HALF 
      IOR INTCH     PUT IN CHN(SELECT CODE) 
      STA TBUF+2    SAVE IN TABLE 
      LDA ATBUF     ADDRESS OF NAME 
      JSB LDIPX     PUT IN TABLE
      CLA 
      LDB JSCIC 
      JMP COMIN 
* 
INTEN LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
      CPA UTCHR     CHARS = T, BLANK
      RSS           YES - CONTINUE
      JMP IMNEM     INVALID INT MNEMONIC
      LDA N5
      JSB GETNA     MOVE 5 CHARS TO TBUF
      LDB ATBUF     ADDR OF NAME
      JSB SSTBL     SEARCH SYMBOL TABLE 
      RSS           NOT FOUND, ERROR
      JMP SETE1     SET ENTRY POINT ADDRESS 
ENERR LDA ERR33     SET CODE = INVALID ENTRY POINT
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SETIN     REPEAT INT RECORD INPUT 
* 
SETE1 LDA LST5      HAS LINK BEEN MADE? 
      LDA A,I 
      SZA,RSS 
      JMP SETEN     NO, GO MAKE ONE 
      IOR IJSB     YES, FORM THE JSB FOR BP 
      STA B 
      CLA 
      JMP COMIN 
SETEN LDA LST4      GET BP LINK ADDRESS 
      LDA A,I 
      STA SETAD,I 
      LDA .MEM1     MAKE A BP LINK
      LDB A 
      JSB SETCR 
      LDB LST5
      LDA .MEM1 
      STA B,I 
      IOR IJSB      ADD JSB 0,I CODE
      STA B 
      CLA           SET INT ENTRY = ZERO
      ISZ .MEM1 
      JMP COMIN     SET INTERRUPT TABLE, LOCATION 
* 
INTAB LDA N2
      JSB GETNA     MOVE 2 CHARS TO TBUF
  
      RSS           YES - CONTINUE
      JMP IMNEM     NO - INVALID INT MNEMONIC 
      LDA P6
      JSB GETOC     GET 6 OCTAL DIGITS, CONVERT 
      JMP IMNEM     INVALID ABS DIGIT 
      CLA 
      LDB OCTNO     GET ABSOLUTE VALUE
* 
COMIN STA TBUF      SAVE INT TABLE CODE 
      STB TBUF+1    SAVE INT LOCATION CODE
      JSB GETAL     GET NEXT CHAR FROM LBUF 
      CPA ZERO      END OF BUFFER?
      RSS           YES, CONTINUE 
      JMP ENERR     NO, BUT SHOULD BE 
      LDA INTCH     GET INT CHANNEL NO. 
      CPA P4        SPECIAL PROCESSING
      JMP PFINT      IF TRAP CELL FOUR
      CMA,INA 
      ADA TBREL     ADD CURRENT ADDRESS 
      SZA,RSS       SKIP - NOT NEXT LOCATION
      JMP STINT     SET INTERRUPT TABLES, LOCATION
      SSA           SKIP - INVALID CHANNEL NO. ORDER
      JMP FILLI     FILL IN SKIPPED VALUES
EQERR LDA ERR24     SET CODE = INVALID INT CHNL ORDR
      JSB ERROR     PRINT DIAGNOSTIC
      JMP SETIN     GET NEXT INTERRUPT RECORD 
* 
PFINT LDA TBUF      IF TRAP CELL FOUR,
      SZA            ENTRY MUST BE AN 
      JMP CHERR      'ABS' OR AN 'ENT'
      LDA P4
      LDB TBUF+1    STORE INTO
      STB SETAD,I   TRAP CELL FOUR
      LDB A 
      JSB SETCR 
      JMP SETIN     GET NEXT INTERRUPT RECORD 
* 
HLTB4 OCT 103004    TRAP CELL DEFAULT VALUE 
* 
FILLI STA TCNT      SET NO. OF FILL-INS REQUIRED
      CLA           SET INTERRUPT TABLE ENTRY = ZERO
      STA SETAD,I 
      LDA PPREL     ADDRESS 
      LDB A 
      JSB SETCR 
      ISZ PPREL     INCR CURRENT INT TABLE ADDRESS
      ISZ TBREL     INCR CURRENT INT LOCATION ADDR
      ISZ TCNT      SKIP - ALL FILL-INS COMPLETE
      JMP FILLI+1   CONTINUE INT FILL-IN
* 
STINT LDB TBUF+1    GET INT LOCATION CODE 
      STB SETAD,I   PUT INT LOCATION CODE IN INT LOC
      ISZ TBREL     INCR CURRENT BP LOCATION ADDR 
      LDB TBREL     GET INT LOCATION ADDR 
      CMB,INB 
      ADB P64       ADD ADDR OF FIRST SYS LINK
      SSB           SKIP - INT LOCATION OVERFLOW
      JMP EQERR 
* 
NOBPO LDA TBREL     INT. ADDRESS PLUS ONE 
      ADA N1        ADJUST
      LDB A         ADDRESS 
      JSB SETCR     SET CORE
      LDA TBUF      GET INT TABLE CODE
      STA SETAD,I   TO OUT BUFFER 
      LDA PPREL     ADDRESS 
      LDB A 
      JSB SETCR     OUTPUT IT 
      ISZ PPREL     INCR CURRENT RELOCATION ADDR
      JMP SETIN     GET NEXT INT TABLE RECORD 
ENDIO LDA AINT      GET ADDRESS OF INT
      CMA,INA 
      ADA PPREL     ADD CURRENT RELOCATION ADDR 
      STA CINT      SAVE NO. INT ENTRIES
      JSB SPACE     NEW LINE
      JSB SPACE     NEW LINE
* 
*                                    OUTPUT EQTA THRU INTLG 
* 
      LDA AEQT      EQT START ADDRESS 
      STA LBUF
      LDA CEQT      NUMBER OF EQTS
      STA LBUF+1
      LDA ASQT      DRT START ADDRESS 
      STA LBUF+2
      LDA CSQT      NUMBER OF DRT'S 
      STA LBUF+3
      LDA AINT      INTERRUPT TABLE ADDRESS 
      STA LBUF+4
      LDA CINT      NUMBER OF INTERRUPT ENTRIES 
      STA LBUF+5
      LDA EQTA      START ADDRESS-ABS 
      LDB INTLG     END ADDRESS 
      JSB SETCR     GO BUILD ABS
      HED  BUILD ID'S AND KEY WORD TABLE
* 
*                                    GET ID'S AND BUILD KEY WORD TABLE
* 
      LDA PPREL     KEY WORD TABLE ADDRESS
      STA LBUF
      LDA KEYWD     ABS ADDRESS 
      LDB A 
      JSB SETCR 
      LDA PPREL 
      STA KEYAD     KEY WORD ADDRESS
KEYID LDA P8        PRINT:
      LDB MES42     "# ID SEGS?"
      JSB AREAD,I 
      LDA N2        GET TWO OCTAL 
      JSB GETOC 
      JMP IDWER     BAD NUMBER
      STA KEYCN     # OF ID SEGS TO KEY COUNT 
      SZA,RSS 
      JMP IDWER     DO NOT ACCEPT ID COUNT OF ZERO! 
      CMA,INA 
      ADA P99       OR GREATER THEN 99
      SSA 
      JMP IDWER 
      LDA KEYCN     RESTOR A
      ADA PPREL     ADD TO PRESENT LOCATION 
      INA           FOR ZERO END
      STA PPREL     UPDATE PPREL
      STA SYSAD     INITIAL ID SEG ADDRESS
      STA IDSAD     FIRST ID SEG ADDRESS
      JMP *+4 
IDWER LDA ERR10     PRINT:
      JSB ERROR     "ERR-PA"
      JMP KEYID     TRY AGAIN 
      JSB GETAL 
      SZA 
      JMP IDWER     NO, ERROR 
      LDA KEYCN     NOS OF KEY WORDS
      CMA,INA 
      STA WDCNT 
      LDA SYSAD 
      STA TEMP2 
      LDA KEYAD 
      STA TEMP3 
KYBLD LDA TEMP2     ADDRESS OF NEXT ID
      STA LBUF      ID ADDRESS
      LDA TEMP3     KEY WORD ADDRESS
      LDB A         INTO B
      ISZ TEMP3     BUMP TO NEXT KEY WORD ADDR
      JSB SETCR     OUT PUT TO ABS
      LDA TEMP2     UPDATE ID ADDRESS 
      ADA P28       SEG SIZE
      STA TEMP2 
      ISZ WDCNT     ALL DONE? 
      JMP KYBLD     NOT DONE YET
      STA PPREL     NEW RELOCATE ADDRESS
      CLA 
      STA LBUF      ZERO LAST KEY ENTRY 
      LDA KEYAD 
      ADA KEYCN     NOS OF KEY WORDS
      LDB A 
      JSB SETCR 
      LDB ALBUF     CLEAR BUFFER AREA 
      JSB BUFCL 
      OCT 0 
      LDA KEYCN     GET ID SEG COUNT
      CMA,INA 
      STA WDCNT     SAVE NEG
      LDA SYSAD     ADDRESS OF FIRST ID SEG 
      STA TEMP3 
CLOOP LDA TEMP3     STARTING ADDRESS
      LDB A 
      ADB P27       BUMP TO  LAST ADDR
      STB TEMP3     UPDATE
      STB LBUF
      ISZ LBUF      POINT TO NEXT ID SEG
      ISZ TEMP3           TO NEXT ADDR
      JSB SETCR     CLEAR ID SEGMENT
      ISZ WDCNT     ALL DONE? 
      JMP CLOOP     NO, DO MORE 
      LDA TEMP3 
      ADA N28       CLEAR 
      CLB               LAST
      STB LBUF             LINK 
      LDB A                   POINTER 
      JSB SETCR 
      HED  GET START-UP PROGRAM 
* 
*                                GET START-UP PROGRAM 
* 
      JSB SPACE 
      LDA P13       PRINT:
      LDB MES5      "STRT-UP PROG?" 
      JSB APARS,I   GO GET PARAMETERS 
      RSS 
      JMP RESLB     NO PARAMS WERE INPUT
      LDA TBUF      MOVE NAME 1,2 
      STA STRPN 
      LDA TBUF+1    NAME 3,4
      STA STRPN+1 
      LDA TBUF+2    NAME 5
      STA STRPN+2 
      LDA SYSAD      SEG ONE ADDRESS
      STA LBUF      PUT SEG INTO THE SCHEDULED LIST 
      LDA SKEDD     ADDRESS IN BASE PAGE
      LDB A 
      JSB SETCR     TO ABSOLUTE 
      LDA SYSAD     SEG ONE ADDRESS 
      ADA P28        UPDATE TO NEXT 
      STA SYSAD 
      ISZ IDNOS      BUMP NOS OF ID'S 
      HED  RELOCATE  RESIDENT LIBRARY 
* 
*                                   RELOCATE RESIDENT LIBRARY 
* 
RESLB JSB SPACE     START ON NEW LINE 
      LDA SYSAD 
      STA SETAD,I   FIRST DORMENT SEGMENT 
      LDA DORMT     DORMENT LIST POINTER
      LDB A 
      JSB SETCR     SET IT IN BP
      LDA PPREL     UP LOCC FOR RELOCATE
      STA .MEM3 
      STA SETAD,I   LIBRARY ORG TO BP 
      LDA LBORG 
      LDB A 
      JSB SETCR 
      CLA 
      STA PNAME 
      LDA P11       PRINT:
      LDB MES3      "REL RES LIB" 
      JSB AOTLY,I 
      LDA P2
      STA .XFER     MAKE NON-ZERO FOR LIBRARY 
      CLA 
      STA LOCC
      STA BPLOC 
      LDA LSTSV     RESTORE SYMBOL TABLE COUNT
      STA LST       IN THE LOADER 
      JSB CLBPL     CLEAR BASE PAGE LINKS 
      JSB PRCMD     GO TO LOADER
      JMP RESLB     LOADER ERROR, TRY AGAIN 
      LDA LOCC
      SZA,RSS 
      LDA .MEM3     RESTORE WITH SELF IF LOCC IS ZERO 
      STA .MEM3 
      STA SETAD,I   PUT IN BUFFER 
      LDA RTORG     BASE PAGE LOCATION
      LDB A 
      JSB SETCR     OUTPUT TO ABS 
      LDA BPLOC 
      SZA 
      STA .MEM1     UPDATE IF NON-ZERO
      LDA .MEM1     SET BASE PAGE LOWER LIMIT 
      STA LBUF      TO BUFFER 
      LDA P1647     SET BASE PAGE UPPER LIMIT 
      STA LBUF+1    TO BUFFER 
      LDA BPA1      FIRST BP ADDRESS
      LDB A 
      INB           LAST BP ADDRESS 
      JSB SETCR     SET TO BP COMM AREA 
      LDA LST       COUNT OF SYMBOLS
      STA LSTSV     SAVE FOR UPDATE AFTER EACH RELOCATE-CORE RES PROGS
* 
*                                    SET UP COMMON AREA 
* 
WDSCM JSB SPACE     NEW LINE
      LDA P14       PRINT:
      LDB MES7      "# WDS IN COMM?"
      JSB AREAD,I 
      LDA N5
      JSB GETOC     GET 5 DIGITS
      JMP WDERR     BAD NUMBER
      JSB GETAL     LOOK FOR END OF BUFFER
      SZA 
      JMP WDERR     NOT END ERROR, TRY AGAIN
      LDA OCTNO     GET VALUE 
      SZA,RSS 
      JMP RELRS 
      STA SETAD,I 
      LDA RTCOM     COMMON SIZE TO BP 
      LDB A 
      JSB SETCR 
      LDA .MEM3     UPDATE FWAC 
      STA .MEM5 
      ADA OCTNO     UPDATE LWAC 
      STA .MEM3 
      ADA N1
      STA .MEM6     LWAC
      JMP RELRS     GO REL CORE RES PROGS 
WDERR LDA ERR10     PRINT:
      JSB ERROR     "ERR-PA"
      JMP WDSCM     TRY AGAIN 
      HED  RELOCATE CORE RESIDENT PROGRAMS
* 
*                                     RELOCATE CORE RESIDENT PROGRAMS 
* 
RELRS JSB SPACE     NEW LINE
      JSB CLBPL     CLEAR PASE PAGE LINKS 
      STA PNAME 
      STA LOCC
      STA BPLOC 
      STA .XFER     CLEAR FOR CORE RES LOAD 
      LDA LSTSV     RESTORE BEFORE EACH RELOCATE
      STA LST 
      LDA P14       PRINT:
      LDB MES8      "REL USER PROGS"
      JSB AOTLY,I 
      JSB PRCMD     GO RELOCATE!!!!!
      JMP RELRS     LOADER ERROR, TRY AGAIN 
      LDA .XFER     WAS ZERO INPUT? 
      SZA,RSS 
      JMP SNAPO     YES, GO DO SNAPSHOT 
*                               CHANGE PARAMETERS 
SRFIN JSB SPACE 
      LDA P11       PRINT:
      LDB MES10     "ENTER PRAMS" 
      JSB APARS,I   GO GET PARAMS 
      RSS           PARAMS WERE INPUT 
      JMP SRFI5     NO PARAMS INPUT, NO CHANGE
      LDA TBUF      NAME 1,2
      STA PNAME 
      LDA TBUF+1    NAME 3,4
      STA PNAME+1 
      LDA TBUF+2    NAME 5
      STA PNAME+2 
      LDA IDAA      ADDRESS OF PARAMETERS 
      JSB UPNAM     UPDATE PARAMETERS 
SRFI5 CLA 
      STA WDCNT     CLEAR FOR FIRST TIME
      LDA APNAM 
      JSB SRIPX     SEARCH FOR DUPS 
      JMP *+7       FOUND ONE 
      LDA PNAME+2   MASK OUT LOWER BLANK
      AND M7400 
      STA PNAME+2   AND RESTORE 
      LDA PNAMA     THIS NAME NOT IN TABLE
      JSB LDIPX     SO, PUT IT THERE
      JMP SRFI6     CONTINUE PROCESSING 
      LDA IP3,I     IS THIS AN INT PRG? 
      AND M77 
      SZA 
      JMP SRFI6     YES, ITS OK 
      LDA ERRDU     NO, LOOKS LIKE A DUP ENTRY
      JSB ERROR 
      JMP SRFIN     TRY AGAIN 
* 
SRFI6 LDA STRPA     ADDRESS OF START UP NAME
      LDB PNAMA     JUST LOADED NAME
      JSB NACMP     COMPARE NAMES 
      JMP SRFI2     NO COMPARE
      CLA           DOES COMPARE
      STA STRPN     CLR STRT FLAG 
      LDA IDSAD     SEGMENT ADDRESS 
      CLB           POINTS TO ADDRESS 
      JSB GENID     GO BUILD ID SEGMENT 
      LDA IDSAD     GET ID SEG ADDRESS
      INA           POINT TO TEMPORARY STORAGE
      STA SETAD,I 
      ADA P9        WORD 11 IN SEG
      LDB A 
      JSB SETCR    ADD WORD TO SEG
      CLA,INA 
      STA SETAD,I 
      LDA IDSAD 
      ADA P15       PUT A 1 INTO WORD 16 OF THE SEG 
      LDB A 
      JSB SETCR 
      LDA IDSAD     GET CORRECT ID SEG ADDRESS
      JSB SRFI3     "PROGS" WERE ENTERED, GO LOOK FOR IT
      JMP RELRS     GO RELOCATE NEXT
* 
SRFI2 LDA IDNOS     ENTERED PROGS EXCEEDED ID SEGS? 
      CMA,INA 
      ADA KEYCN 
      SSA 
      JMP LSERR     IRRECOVERABLE ERROR YES!! 
      LDA SYSAD     GET CORRECT ID SEG ADDRESS
      JSB SRFI3     GO CHECK FOR INT-PRGS 
      LDA SYSAD     BUILD SEG IN THIS ADDRESS 
      LDB A 
      ADB P28       LOOK TO NEXT SEGMENT
      STB SYSAD     DYNAMIC SEG POINTER 
      JSB GENID     BUILD ID SEG
      ISZ IDNOS     UP NOS OF ID' INPUT 
      JMP RELRS     GO GET NEXT 
* 
SRFI3 NOP 
      STA PPREL     SAVE ID SEG ADDRESS 
      CLA 
      STA WDCNT     CLEAR FOR INITIAL ENTRY 
      LDA APNAM     ADDRESS OF INPUTTED PROG NAME 
SRFI4 JSB SRIPX     GO SEARCH 
      RSS           FOUND NAME
      JMP SRFI3,I   END OF TABLE
      LDA IP3,I     COMPARES,GET SC 
      AND M77 
      SZA,RSS 
      JMP SRFI4 
      ADA AINT      ADDRESS OF INTERRUPT TABLE
      ADA N6
      LDB PPREL     SET NEG OF ID ADDRESS 
      CMB,INB       INTO THE INTERRUPT TABLE
      STB SETAD,I 
      LDB A 
      JSB SETCR 
      LDA IP3,I 
      AND M7400 
      STA IP3,I     SHOW ENTRY AS USED
      JMP SRFI4     LOOK AGAIN
      HED SNAPSHOT OUTPUT FOR LOADER RELOCATION 
* 
*                                     SNAPSHOT OUTPUT 
* 
SNAPO LDA STRPN     WAS START-UP PRG REQUESTED? 
      SZA,RSS       BUT NOT LOADED
      JMP SNAP5     NO,GO CHECK FOR INT PRGS
      JSB SPACE 
      LDA P12       YES, PRINT: 
      LDB MES5      "STAR-UP PROG"
      JSB AOTLY,I 
      JSB SPACE 
      LDA P5        PRINT:
      LDB STRPA     START-UP PROG NAME
      JSB AOTLY,I 
      JSB SPACE 
      JMP RELRS     RELOCATE START-UP PROGRAM 
* 
SNAP5 CLA 
      STA PPREL     HEADER FLAG 
      STA WDCNT 
      LDA P1        NAME ADDRESS
SNAP6 JSB SRIPX     GO SEARCH 
      RSS           FOUND SOMETHING 
      JMP SNAP7     END OF TABLE
      LDA IP3,I     IS IT AN INT PRG NAME?
      AND M77 
      SZA,RSS 
      JMP SNAP6     NO, LOOK NEXT 
      LDA PPREL     HEADER BEEN PRINTED?
      SZA 
      JMP *+7       YES 
      JSB SPACE     NO, PRINT IT
      LDA P8        PRINT:
      LDB MES12     "INT PRG" 
      STA PPREL     SET HEADER FLAG 
      JSB AOTLY,I 
      JSB SPACE     NEW LINE
      LDA P5        PRINT:
      LDB IP1        PRG NAME 
      JSB AOTLY,I 
      JMP SNAP6     LOOK NEXT 
* 
SNAP7 LDA PPREL     ANY INT PRGS PRINTED? 
      SZA,RSS 
      JMP SNAP8     NO, CONTINUE
      JSB SPACE     YES, ASK IGNORE QUESTION
      LDA P7        PRINT:
      LDB MES13     "IGNORE?" 
      JSB AREAD,I   AND GET THE REPLY 
      CCA 
      STA CMFLG 
      JSB GETAL     FRIST LETTER OF REPLY 
      CPA ANO       AN "N" ?
      JMP RELRS     YES, TRY TO RELOCATE PRGS 
      CPA AYES      NO, IS IT A "Y" ? 
      JMP SNAP8     YES, PROCESS SNAPSHOT 
      LDA ERR10     WAS NEITHER 
      JSB ERROR     PRINT: "ERR-PA" 
      JMP SNAP7     TRY AGAIN 
* 
SNAP8 LDA JMP3I     SET STARTING JMP
      STA LBUF
      LDA STRAD     SET STARTING ADDRESS
      STA LBUF+1
      LDA P2
      LDB P3
      JSB SETCR 
*                                         SET FWA SYS MEM IN BP 
      LDA SYMAD     FWA SYS MEM 
      SZA,RSS 
      LDA .MEM3     DEFAULT TO FWAM, IF FWASM EQ 0. 
      STA LBUF+1    TO BUFFER 
      LDA .MEM3 
      STA LBUF
      LDB AVMEM     BP ADDRESS
      LDA B 
      ADA N1
      JSB SETCR     SET FWA SYS MEM INTO RTS BP 
      JSB SPACE 
SNAP2 LDA P9        PRINT:
      LDB MES9      "SNAPSHOT"
      JSB AREAD,I 
      CCA 
      STA CMFLG 
      JSB GETAL     GET RESPONSE
      CPA ANO       NO????? 
      JMP ENDGN     YEP, END OF RTS GEN 
      CPA AYES      YES???????
      JMP *+4       YES 
      LDA ERR10 
      JSB ERROR 
      JMP SNAP2     TRY AGAIN 
      JSB LTG       OUTPPUT LEADER
      JSB LTG 
      LDA .MEM.      FRIST ADDRESS
      STA MEMAD     .MEM. ADDRESS 
      LDA MEMOT     ADDRESS OF LABELS 
      STA LBLAD 
      LDA N6        NUMBER OF LABELS
      STA WDCNT 
      JSB GINIT     INITIALIZE BUFFER 
      CLA 
      STA MAXC      CLEAR WORD COUNT
      STA PROCT     CLEAR TOTAL COUNT 
SNAP1 LDA N4        NO OF CHARS 
      LDB BNDS      ADDRESS OF "-BOUNDS"
      JSB BUFUP    PUNCH ON TAPE
      JSB LBOUT     PUNCH LABELS
      LDA MEMAD,I  NEXT VALUE 
      LDB ATBUF    BUFFER TEMP STORAGE
      JSB ACONV,I  CONVERT TO OCTAL 
      LDA N3
      LDB ATBUF 
      JSB BUFUP     PUNCH VALUE 
      LDB MES25    FINISH LINE WITH "CRLF"
      JSB BUFUP 
      ISZ MEMAD    BUMP TO NEXT VALUE 
      ISZ WDCNT    MORE?
      JMP SNAP1    YES
* 
      LDA LST       NUMBER OF SYMBOLS 
      CMA,INA 
      STA WDCNT 
      LDA LSTA1     SYMBOL TABLE ADDRESS
      STA MEMAD 
SNAP4 LDA N3
      LDB ASET
      JSB BUFUP     PUNCH "-SET"
      LDA N2
      LDB MEMAD 
      JSB BUFUP     PUNCH SYMBOL NAME 
      ISZ MEMAD 
      ISZ MEMAD     MOVE TO END OF NAME 
      LDA MEMAD,I   GET LAST CHAR 
      AND M7400     MASK OUT LOWER
      IOR ASPCE     INSERT SPACE AS LAST CHAR 
      STA MEMAD,I   RESTORE 
      LDA N1
      LDB MEMAD 
      JSB BUFUP     PUNCH LAST CHAR 
      LDA N2
      LDB ASTOA     PUNCH " TO "
      JSB BUFUP 
      ISZ MEMAD     BUMP TO LST4
      LDA MEMAD,I 
      LDB ATBUF 
      JSB ACONV,I   CONVERT LST4 TO OCTAL 
      LDA N3
      LDB ATBUF 
      JSB BUFUP     PUNCH LST4
      LDB MES25 
      JSB BUFUP     FINISH WITH CRLF
      ISZ MEMAD 
      LDA MEMAD,I   GET LST5
      SZA,RSS       IS LST5 EQ. 0?
      JMP SNAP3     YES, SKIP LINKS 
      LDA N8
      LDB ASSTL 
      JSB BUFUP     PUNCH "-LINKS START AT" 
      LDA MEMAD,I 
      LDB IDAA      BUFFER ADDRESS
      JSB ACONV,I   CONVERT LST5
      LDA TBUF
      AND M377      MASK OUT SPACE AS FIRST CHAR
      IOR ACOMA     INSERT A COMMA
      STA TBUF      RESTORE, COMMA AS FIRST 
      LDA N3
      LDB IDAA
      JSB BUFUP     PUNCH LST5
      LDA N3
      LDB ATBUF 
      JSB BUFUP     PUNCH LST4
      LDB MES25 
      JSB BUFUP     FINISH WITH "CRLF"
SNAP3 ISZ MEMAD     UP TO NEXT SYMBOL 
      ISZ WDCNT     DONE? 
      JMP SNAP4     NO, DO NEXT 
* 
      LDA N8
      LDB ASET
      JSB BUFUP     PUNCH "-SET BPLOCC TO"
      LDA .MEM1 
      LDB ATBUF 
      JSB ACONV,I 
      LDA N3
      LDB ATBUF 
      JSB BUFUP     PUNCH BPLOC 
      LDB MES25     DUMP BUFFER 
      JSB BUFUP 
      LDA N3        END LINE WITH CRLF
      LDB ASET      ADDRESS OF "SET"
      JSB BUFUP     PUNCH"-SET" 
      LDA N2
      LDB ASLOC     ADDRESS OF "LOCC" 
      JSB BUFUP     PUNCH "LOCC"
      LDA N2
      LDB ASTOA 
      JSB BUFUP     PUNCH " TO "
      LDA .MEM3     FETCH FWAM
      LDB ATBUF 
      JSB ACONV,I   CONVERT TO ASCII
      LDA N3
      LDB ATBUF 
      JSB BUFUP     PUNCH VALUE OF FWAM 
      LDB MES25 
      JSB BUFUP    END LINE WITH CRLF 
      JMP ENDGN    GO TO END RTSGN ROUTINE
      HED  SNAPSHOT GENERATION SUBROUTINES
* 
* 
*                                OUTPUT LABEL ROUTINE 
* 
* 
*  CALLING SEQUENCE:
*    A AND B ARE IGNORED
*    JSB LBOUT
* 
*  RETURN: A AND B ARE DESTROYED
* 
LBOUT NOP 
      LDA N3
      LDB LBLAD     ADDRESS OF LABEL
      JSB BUFUP    PUNCH LABEL
      LDA LBLAD    UPDATE LABEL POINTER 
      ADA P3
      STA LBLAD 
      JMP LBOUT,I  RETURN 
* 
* 
*                                 LOAD AND DUMP THE PUNCH BUFFER
* 
* 
*  CALLING SEQUENCE:
*    A = NEG OF NO. OF WORDS TO LOAD
*    B = ADDRESS TO LOAD FROM 
*    JSB BUFUP
* 
*  RETURN:  A AND B ARE DESTROYED 
* 
BUFUP NOP 
      CPB MES25     DUMP BUFFER REQUEST?
      JMP BUFDN     YES 
      STA MAXC      NO, SAVE NO OF WORDS TO GO
      ADA PROCT     ACCUMULATE THE TOTAL
      STA PROCT 
      LDA B,I       GET THE WORD
      STA CURAL,I   PUT IN BUFFER 
      INB           BUMP SOURCE POINTER 
      ISZ CURAL     UP BUFFER POINTER 
      ISZ MAXC      ALL DONE? 
      JMP *-5 
      JMP BUFUP,I   ALL DONE, RETURN
* 
BUFDN LDA PROCT     GET NEG OF WORD COUNT 
      CMA,INA       MAKE POSITIVE 
      RAL           MULT BY TWO 
      LDB ALBUF     START ADDRESS OF BUFFER 
      JSB PCHX      GO PUNCH THE BUFFER 
      JSB GINIT     INITIALIZE BUFFER POINTERS
      CLA 
      STA MAXC
      STA PROCT 
      JMP BUFUP,I    RETURN 
* 
* 
* 
* 
ENDGN JSB SPACE     NEW LINE
      LDA P14       PRINT:
      LDB MES11    "RTSGN FINISHED" 
      JSB AOTLY,I 
      JSB LTG 
      HLT 77B 
      JMP *-1       GO NO FUTHER!!!!!!!!!!!!!!
      END START 
* 
