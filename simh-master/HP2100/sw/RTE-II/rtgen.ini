set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS
; set mp  debug=IOBUS
; set drc debug=IOBUS

echo
echo ***
echo *** RTE-II Operating System (1973) 
echo *** Generation
echo ***
echo

; generates a new RTE-II system
;
; Sw installed:
;   FMGR       - File manager
;   EDITR      - Editor
;   ALGOL      - Algol Compiler
;   ASMB, XREF - Assembler
;   FTN4       - Fortran IV
;   WHZAT      - Show Processes running

set cpu 2100
set cpu 32k
set cpu fp

; The CPU's I/O card cage is configured as follows:
;
;    SC  Device  Interface Description
;    --  ------  -----------------------------------------------------------
;    10   TBG    12539C Time Base Generator Interface
;    11   DPD    7900A Disc Drive / 13210A Disc Drive Interface Data Channel
;    12   DPC    7900A Disc Drive / 13210A Disc Drive Interface Command Channel
;    13   PTR    12597A-002 Tape Reader Interface
;    14   LPT    12845B Line Printer Interface
;    15   TTY    12531C Buffered Teleprinter Interface
;    16   PTP    12597A-005 Tape Punch Interface
;    17   MSD    13183B Digital Magnetic Tape Unit Interface Data Channel
;    20   MSC    13183B Digital Magnetic Tape Unit Interface Command Channel
;

set clk sc=10
set dpc sc=11
set ptr sc=13
set lpt sc=14
set tty sc=15
set ptp sc=16
set msd sc=17

; Configure disc drives as HP 7905A on unit 0
set ds0 7905

; Configure tape drive as 13183A interface (HP 7970E drive)
set msc 13183A

set tty autolf
send after=200k
send delay=30k

set dpc 13210A
set dpc sc=11
set dpc ena
att dpc0 -n -q tmp.RTE-II.disc

; Loading and configuring the 24K console SIO driver for SC 15
att PTR -q rtgen/29100-60050_Rev-A.abin
d s 0
boot ptr

d s 15
d p 2
go

; Loading and configuring the 24K paper tape reader SIO driver for SC 13
att ptr -q rtgen/29100-60019_Rev-A.abin
d s 0
boot ptr

d s 13
d p 2
go

; Loading and configuring the 24K paper tape punch SIO driver for SC 16
att ptr -q rtgen/29100-60020_Rev-A.abin
d s 0
boot ptr

d s 16
d p 2
go

; load RTGEN (92001-16013 1631  !2GN00 RTE II SYS  GEN 7900 DISC RTGEN)

att ptr -q rtgen/92001-16013_Rev-1631.abin
d s 0
boot ptr

; format user discs

d s 0
d p 100

; initialization phase

go until "MH DISC CHNL?" 
send "11\r"
go until "0?" 
send "203,0\r"
go until "1?" 
send "203,0\r"
go until "2?" 
send "203,0\r"
go until "3?" 
send "203,0\r"
go until "4?" 
send "/E\r"
go until "SECTORS/TRACK?" 
send "48\r"
go until "SYSTEM SUBCHNL?" 
send "0\r"
go until "SCRATCH SUBCHNL?" 
send "0\r"
go until "AUX DISC (YES OR NO OR # TRKS)?" 
send "YES\r"
go until "AUX DISC SUBCHNL?"
send "1\r"
go until "START SCRATCH?" 
send "100\r"
go until "TBG CHNL?" 
send "10\r"
go until "PRIV. INT. CARD ADDR?" 
send "0\r"
go until "FG SWAPPING?" 
send "YES\r"
go until "BG SWAPPING?" 
send "YES\r"
go until "FG CORE LOCK?" 
send "YES\r"
go until "BG CORE LOCK?" 
send "YES\r"
go until "SWAP DELAY?" 
send "50\r"
go until "LWA MEM?" 
send "77677\r"
go until "PRGM INPT?" 
send "PT\r"
go until "LIBR INPT?" 
send "PT\r"
go until "PRAM INPT?" 
send "TY\r"
go until "2?" 
send "NO\r"
go until "3?" 
send "NO\r"
go until "PUNCH BOOT?" 
send "NO\r"

go

goto start_module_load

:load_module
echo ---> Load Module %1
att ptr -q rtgen/%1
d s 0
expect "ERR" goto load_err
go
noexpect
return

:load_err
go until "\n"
echo
echo ERROR! *** Paper tape load error
echo .      *** Press Enter to quit
set env -p "      " a
echo
bye
return

:start_module_load

; Core Resident System
call load_module 92001-16012_Rev-1926.rbin	; %CR2SY RTE-II CORE RES. OP. SYSTEM 
call load_module 92001-16005_Rev-1926.rbin	; RTE System Library (%%SYLIB)
call load_module 92060-12005_Rev-2140.rbin	; RTE Compiler Library (%%CLIB)
call load_module 92001-16002_Rev-1732.rbin	; RTE-II Loader (%%LDR2)
call load_module 92002-12001_Rev-2001.rbin	; $BMON (FMGR, D.RTR) (%%BMPG1)
call load_module 92002-16006_Rev-2001.rbin	; $BALB Batch Monitor Library (%%BMLIB)
call load_module 92001-16029_Rev-1710.rbin	; RTE-II Command Program (%%$CMD2)
call load_module 92002-16010_Rev-2140.rbin	; RTE Standard Editor (%%EDITR)

; I/O Drivers 
call load_module 29029-60001_Rev-2301.rbin	; %%DVR00 MULTITERM DEVICE DRIVER (Tty, paper read, paper punch)
call load_module 92001-16020_Rev-1827.rbin	; 2607A Line Printer Driver (%%DVA12)
call load_module 92202-16001_Rev-2341.rbin	; 7970 Magnetic Tape Driver (%%DVR23)
call load_module 29013-60001_Rev-1710.rbin	; 7900 Disc Driver (%%DVR31)
call load_module 92001-16004_Rev-1926.rbin	; Power Fail Driver (%%2DP43)

; Assembler
call load_module 92060-12004_Rev-1639.rbin	; Assembler (%%ASMB)
call load_module 92060-16028_Rev-A.rbin		; Assembler Cross-Referencer (%%XREF)

; Algol
call load_module 24129-60001_Rev-1643.rbin	; ALGOL Compiler (%%ALGOL)
call load_module 24129-60002_Rev-C.rbin

; Fortran IV
call load_module 92060-16092_Rev-2026.rbin	; FORTRAN IV Compiler (%%FTN4)
call load_module 92060-16093_Rev-1913.rbin
call load_module 92060-16094_Rev-2026.rbin
call load_module 92060-16095_Rev-2001.rbin
call load_module 92060-16096_Rev-2026.rbin
call load_module 92060-16097_Rev-1913.rbin
call load_module 92060-16098_Rev-2026.rbin
call load_module 92060-16101_Rev-1913.rbin

; other files
call load_module 92001-16030_Rev-1726.rbin	; RTE-II WHZAT Program (%%WHZT2)
call load_module 92001-16014_Rev-1631.rbin	; Auto-Restart Program (%%AUTOR)
call load_module 24999-16171_Rev-1752.rbin	; Track Assignment Table Program (%%LTAT)
call load_module 92001-16031_Rev-1926.rbin	; RTE-II On-Line Generator (%%RT2G1)
call load_module 92060-16038_Rev-1826.rbin	; RTE Switch Program (%%SWTCH)
call load_module 24998-16001_Rev-1926.rbin	; RTE/DOS Relocatable Library (%%RLIB1)
call load_module 24998-16009_Rev-1926.rbin	; RTE/DOS Relocatable Library (%%RLIB2)
call load_module 24998-16011_Rev-1926.rbin	; RTE/DOS Relocatable Library (%%RLIB3)
call load_module 24998-16002_Rev-1926.rbin	; FORTRAN Formatter (%%FF4.N)

; Load .rel files terminated. 

; List undefined symbols if any

d s 1
go 

; Parameter input phase

; Set for current-page linking to prevent base-page overflow.

d s 040001

go until   "PARAMETERS" 
call type  "D.RTR,1,1"
call type  "WHZAT,2,1"
call type  "AUTOR,3,1"
call type  "/E"

call type2 "CHANGE ENTS?"                    ".MPY,RP,100200"
call type                                    ".DIV,RP,100400"
call type                                    ".DLD,RP,104200"
call type                                    ".DST,RP,104400"
call type                                    ".FAD,RP,105000"
call type                                    ".FSB,RP,105020"
call type                                    ".FMP,RP,105040"
call type                                    ".FDV,RP,105060"
call type                                    "IFIX,RP,105100"
call type                                    "FLOAT,RP,105120"
call type                                    "Z$DBL,RP,3"
call type                                    "/E"

call type2 "BLANK ID SEGMENTS?"              "10"
call type2 "OF BLANK BG SEG. ID SEGMENTS?"   "15"
call type2 "FWA BP LINKAGE?"                 "100"

; Table generation phase

call type2 "OF I/O CLASSES?"                 "10"
call type2 "LU MAPPINGS?"                    "10"
call type2 "RESOURCE NUMBERS?"               "20"
call type2 "BUFFER LIMITS (LOW, HIGH)?"      "100,400"

go until   "EQUIPMENT TABLE ENTRY" 
call type2 "EQT 01?"     "11,DVR31,D"
call type2 "EQT 02?"     "15,DVR00,B"
call type2 "EQT 03?"     "37,DVR00"
call type2 "EQT 04?"     "16,DVR02,B,T=500"
call type2 "EQT 05?"     "13,DVR01,T=500"
call type2 "EQT 06?"     "14,DVA12,B,T=100"
call type2 "EQT 07?"     "36,DVR00"
call type2 "EQT 08?"     "17,DVR23,D,B,T=6000"
call type2 "EQT 09?"     "4,DVP43"
call type2 "EQT 10?"     "/E"

go until   "DEVICE REFERENCE TABLE" 
call type2 " 1 = EQT #?"  "2,1"
call type2 " 2 = EQT #?"  "1,0"
call type2 " 3 = EQT #?"  "1,1"
call type2 " 4 = EQT #?"  "4"
call type2 " 5 = EQT #?"  "5"
call type2 " 6 = EQT #?"  "6"
call type2 " 7 = EQT #?"  "0"
call type2 " 8 = EQT #?"  "8"
call type2 " 9 = EQT #?"  "0"
call type2 "10 = EQT #?"  "1,2"
call type2 "11 = EQT #?"  "1,3"
call type2 "12 = EQT #?"  "9"
call type2 "13 = EQT #?"  "/E"

go until   "INTERRUPT TABLE" 
call type  "4,ENT,$POWR"
call type  "11,EQT,1"
call type  "12,EQT,1"
call type  "13,EQT,5"
call type  "14,EQT,6"
call type  "15,EQT,2"
call type  "16,EQT,4"
call type  "17,EQT,8"
call type  "20,EQT,8"
call type  "/E"

; System Boundaries Phase

call type2 "CHANGE  LIB ADDRS?"    "0"
call type2 "CHANGE  FG COMMON?"    "0"
call type2 "CHANGE FG RES ADD?"    "0"
call type2 "CHANGE FG DSC ADD?"    "32000"
call type2 "CHANGE BP LINKAGE?"    "0"
call type2 "CHANGE  SYS AVMEM?"    "36000"
call type2 "CHANGE BG BOUNDRY?"    "0"
call type2 "CHANGE BG COMMON ?"    "0"
call type2 "CHANGE BG RES ADD?"    "0"
call type2 "CHANGE BG DSC ADD?"    "0"
go

; detach discs in case of user want to copy then or to stop here to 
; continue interactively setting up the system

det -q all

; system generated in tmp.RTE-II.disc

echo
echo ***
echo *** System generated 
echo *** Boot and initialize discs
echo ***
echo

; now start RTE 
set tty noautolf 
reset

; attach again discs
att dpc0 -q tmp.RTE-II.disc
d s 0
boot dpc0

go until ":" 

; initialize cart Logical Unit 2: security code=RT, id label=SYS, start at track 100
send "IN,RT,-2,2,SYSTEM,100\r"
go until ":" 

; initialize cart Logical Unit 3: security code=RT, id label=AUX, start at track 0
send "IN,RT,-3,3,AUX,0\r"
go until ":" 

; change output device to console, so comand LI, CL, DL send output to console
; this change is only for this FMGR run. If exiting FMGR, on entering again we get again FMGR-006
; error. A new LL1, must ne issued. To make this change permanente, from RTE prompt "*", issue
; the command LU,6,2 that reassigns LU 6 = printer to EQT 2 (console)

; list cartridges (disc units)
send "LL,1\r"
go until ":" 
; list directory (on all carts)
send "CL\r"
go until ":" 
; list programs on system directory and blanck ID segments)
send "DL\r"
go until ":" 

; Load the system WELCOM file and example programs from magnetic tape.
att msc0 -q rtgen/installation.tape

send "ST,8,WELCOM:RT:2:4:-1\r"
go until "\n" 
go until ":" 
send "ST,8,&TENA:RT:2:4:-1\r"
go until "\n" 
go until ":"         
send "ST,8,&TENF:RT:2:4:-1\r"
go until "\n" 
go until ":"         
send "ST,8,%%LTAT:RT:2:5:-1,BR\r"
go until "\n" 
go until ":"         
send "ST,8,#RTGEN:RT:2:4:-1\r"
go until "\n" 
go until ":"         

; To compile the TENA program with the ALGOL compiler, the source file must first
; be moved to the logical source tracks, and a load-and-go area must be allocated
; to receive the compiled object code:

send "MS,&TENA\r"
go until "\n" 
go until ":"         
send "LG,10\r"
go until "\n" 
go until ":"         
send "RU,ALGOL,2,1,99\r"
go until "\n" 
go until "$END ALGOL"
go until ":"         
send "RU,LOADR,99,1\r"
go until "\n" 
go until "LOADR:$END"
go until ":"         
send "RU,TENA\r"
go until "\n:"         

; The FORTRAN IV compiler is a newer subsystem that supports direct specification
; of the source, list, and object files.  To compile the TENF program, run the
; FORTRAN IV compiler, specifying source input filename or LU, the listing output
; filename or LU, and relocatable output filename or LU, as follows:

send "RU,FTN4,&TENF,1,%%TENF\r"
go until "\n" 
go until "$END FTN4:"
go until ":"         
send "LG,10\r"
go until "\n" 
go until ":"         
send "MR,%%TENF\r"
go until "\n" 
go until ":"         
send "RU,LOADR,99,1\r"
go until "\n" 
go until "LOADR:$END"
go until ":"         
send "RU,TENF\r"
go until "\n:"         

; List disc contents

; list programs on system directory and blanck ID segments)
send "RU,LOADR,1,1,3\r"
; list cartridges (disc units) and list directory (on all carts)
go until "LOADR:$END" 
go until ":"
send "CL\r"
go until ":" 
send "DL\r"
go until ":" 

; quit file manager 
send "EX\r"
go until "END FMGR" 
go until "\n"

; send <cr> to claim the operating system prompt
send "\r"
go until "*"
send "RU,WHZAT\r"
go until "DOWN EQT"
go until "********"
go until "\n"
go until "\n"

; send <cr> to claim the operating system prompt
send "\r"
go until "*"

; Successfull test. Copy as production disk

det -q all
copy -q tmp.RTE-II.disc     RTE-II.disc
del  -q tmp.RTE-II.disc

echo
echo
echo ***
echo *** Generation finished 
echo ***

if "%1"=="QUIT" quit
echo
echo *** Press Enter to quit
set env -p "   " a
echo
 
echo
quit
goto end

:type
; simulate typing on tty. 
; %1 (parameter one) is the text to type 
send "%1"
send "\r"
go until "\n"
return

:type2
; simulate typing on tty. 
; %1 (parameter one) is the question to be replied with %2 (param two)
go until "%1"
send "%2"
send "\r"
go until "\n"
return

:end
