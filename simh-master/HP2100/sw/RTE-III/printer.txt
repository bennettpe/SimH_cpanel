 
 PAGE 0001


0001                ASMB,X,L  
**  NO ERRORS PASS#1 **RTE ASMB 760924**
 PAGE 0002 #01


0001                ASMB,X,L  
0002*001  SPL, L, M, O, T 
0003*002  ! 
0004*003        NAME DSPLY (3) "SPL DISPLAY REGISTER PROGRAM" 
0005  00000                 NAM DSPLY,3 SPL DISPLAY REGISTER PROGRAM  
0006  00000         .A.     EQU  0
0007  00001         .B.     EQU  1
0008                        EXT .ENTR 
0009                        EXT IFBRK 
0010                        EXT EXEC
0011  00000 000000  I       BSS 1 
0012  00001 000000  BREAK   BSS 1 
0013  00002 000000  CT      BSS 1 
0014  00003 005670  #1      OCT 005670
0015  00004 000000  BIT     BSS 1 
0016  00005 000000  N       BSS 1 
0017  00006 100000  #4      OCT 100000
0018  00007 000017  #5      OCT 000017
0019  00010 000006  #12     OCT 000006
0020*004  ! 
0021*005  !     THIS PROGRAM CAUSES A LIGHT ON THE DISPLAY REGISTER 
0022*006  !     TO MOVE BACK AND FORTH ON THE DISPLAY.
0023*007  ! 
0024*008  !     TO TERMINATE THE PROGRAM, SET ITS BREAK FLAG. 
0025*009  ! 
0026*010  !     ********** DECLARATION SECTION ********** 
0027*011  ! 
0028*012        LET I, BREAK BE INTEGER 
0029*013  ! 
0030*014        LET WAIT, UPDN BE SUBROUTINE
0031*015  ! 
0032*016        LET IFBRK BE FUNCTION, EXTERNAL, INTEGER
0033*017        LET EXEC BE SUBROUTINE, EXTERNAL
0034*018  ! 
0035*019  !     ********** CODE FOR LOCAL PROCEDURES ********** 
0036*020  ! 
0037*021  WAIT: SUBROUTINE
0038  00011 000000  WAIT    NOP 
0039  00012 016001X         JSB .ENTR 
0040  00013 000011R         DEF WAIT
0041*022  ! 
0042*023  !     THIS ROUTINE PROVIDES A WAIT LOOP TO ALLOW
0043*024  !     A LIGHT TO REMAIN ON FOR A SHORT WHILE. 
0044*025  ! 
0045*026        LET CT BE INTEGER 
0046*027  ! 
0047*028        CT _ 3000 
0048  00014 062003R         LDA #1
0049  00015 072002R         STA CT
0050*029        WHILE CT > 0 DO                  \
0051*         [ CT _ CT - 1 ] 
0052  00016 062002R #2      LDA CT
0053  00017 003004          CMA,INA 
0054  00020 002021          SSA,RSS 
0055  00021 026026R         JMP #3
0056  00022 003400          CCA 
 PAGE 0003 #01


0057  00023 042002R         ADA CT
0058  00024 072002R         STA CT
0059  00025 026016R         JMP #2
0060*030        RETURN
0061  00026 126011R #3      JMP WAIT,I
0062*031        END WAIT
0063*032  ! 
0064*033  ! 
0065*034  UPDN: SUBROUTINE
0066  00027 000000  UPDN    NOP 
0067  00030 016001X         JSB .ENTR 
0068  00031 000027R         DEF UPDN
0069*035  ! 
0070*036  !     THIS ROUTINE MOVES A LIGHT ON THE DISPLAY REGISTER
0071*037  !     FROM THE M.S.B. TO THE L.S.B TO THE M.S.B.
0072*038  ! 
0073*039        LET BIT, N BE INTEGER 
0074*040  ! 
0075*041        BIT _ 100000K 
0076  00032 062006R         LDA #4
0077  00033 072004R         STA BIT 
0078*042        N _ 15
0079  00034 062007R         LDA #5
0080  00035 072005R         STA N 
0081*043  ! 
0082*044  !     LIGHT FROM M.S.B. TO L.S.B. 
0083*045  ! 
0084*046        WHILE N > 0 DO                   \
0085*         [                              \
0086*         ASSEMBLE ["LDA BIT"; "OTA 1"]; \
0087*         BIT _ BIT -> 1;                \
0088*         N _ N - 1;                     \
0089*         WAIT;                          \
0090*         ] 
0091  00036 062005R #6      LDA N 
0092  00037 003004          CMA,INA 
0093  00040 002021          SSA,RSS 
0094  00041 026055R         JMP #7
0095  00042 062004R         LDA BIT 
0096  00043 102601          OTA 1 
0097  00044 062004R         LDA BIT 
0098  00045 001300          RAR 
0099  00046 072004R         STA BIT 
0100  00047 003400          CCA 
0101  00050 042005R         ADA N 
0102  00051 072005R         STA N 
0103  00052 016011R         JSB WAIT
0104  00053 000054R         DEF *+1 
0105  00054 026036R         JMP #6
0106*047        WAIT
0107  00055 016011R #7      JSB WAIT
0108  00056 000057R         DEF *+1 
0109*048        N _ 15
0110  00057 062007R         LDA #5
0111  00060 072005R         STA N 
0112*049  ! 
 PAGE 0004 #01


0113*050  !     LIGHT FROM L.S.B. TO M.S.B. 
0114*051  ! 
0115*052        WHILE N > 0 DO                   \
0116*         [                              \
0117*         ASSEMBLE ["LDA BIT"; "OTA 1"]; \
0118*         BIT _ BIT -< 1;                \
0119*         N _ N - 1;                     \
0120*         WAIT                           \
0121*         ] 
0122  00061 062005R #8      LDA N 
0123  00062 003004          CMA,INA 
0124  00063 002021          SSA,RSS 
0125  00064 026100R         JMP #9
0126  00065 062004R         LDA BIT 
0127  00066 102601          OTA 1 
0128  00067 062004R         LDA BIT 
0129  00070 001200          RAL 
0130  00071 072004R         STA BIT 
0131  00072 003400          CCA 
0132  00073 042005R         ADA N 
0133  00074 072005R         STA N 
0134  00075 016011R         JSB WAIT
0135  00076 000077R         DEF *+1 
0136  00077 026061R         JMP #8
0137*053        RETURN
0138  00100 126027R #9      JMP UPDN,I
0139*054        END UPDN
0140*055  ! 
0141*056  ! 
0142*057  !     ********** MAIN PROGRAM **********
0143*058  ! 
0144*059  DSPLY: BREAK _ IFBRK(I) 
0145  00101 000000  DSPLY   NOP 
0146  00102 016002X         JSB IFBRK 
0147  00103 000105R         DEF *+2 
0148  00104 000000R         DEF I 
0149  00105 072001R         STA BREAK 
0150*060  ! 
0151*061  !     LIGHT DISPLAY REGISTER UNTIL BREAK FLAG IS SET
0152*062  ! 
0153*063        WHILE BREAK = 0 DO               \    
0154*         [                              \
0155*         UPDN;                          \
0156*         BREAK _ IFBRK(I)               \
0157*         ] 
0158  00106 062001R #10     LDA BREAK 
0159  00107 002002          SZA 
0160  00110 026120R         JMP #11 
0161  00111 016027R         JSB UPDN
0162  00112 000113R         DEF *+1 
0163  00113 016002X         JSB IFBRK 
0164  00114 000116R         DEF *+2 
0165  00115 000000R         DEF I 
0166  00116 072001R         STA BREAK 
0167  00117 026106R         JMP #10 
0168*064        EXEC(6) 
 PAGE 0005 #01


0169  00120 016003X #11     JSB EXEC
0170  00121 000123R         DEF *+2 
0171  00122 000010R         DEF #12 
0172*065        END DSPLY 
0173                        END DSPLY 
**  NO ERRORS *TOTAL **RTE ASMB 760924**
  DSPLY  36002 36124  SPL DISPLAY REGISTER PROGRAM  
  
  .ENTR  36125 36214  750701  24998-16001 
  IFBRK  36215 36236  92001-16005 741120
  
  ENTRY POINTS
  
   *.ENTR  36134
   *IFBRK  36215
   *EXEC   12273
   *.ENTP  36125
   *.ZPRV  02001
   *$LIBR  12512
   *$LIBX  13310
  
   2 PAGES REQUIRED 
