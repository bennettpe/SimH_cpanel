ASMB,R
 NAM PASCS,3
* 
* PASCAL-S COMPILER FOR HP-RTE
* 
 EXT EXEC 
 SUP
..SSZ EQU 750  SIZE OF RUN-TIME STACK 
.T EQU 200       SIZE OF IDENTIFIER TABLE 
.AT EQU 30        SIZE OF ARRAY TABLE 
.BT EQU 20        SIZE OF BLOCK TABLE 
.S EQU 301        # OF WORDS FOR THE STRING TABLE 
.C2MX EQU 20       SIZE OF REAL CONSTANTS TABLE 
.CSMX EQU 30       MAX NUMBER OF CASES
* 
.PDNT EQU 31     # OF PREDEFINED ENTRIES
.TABS EQU 8      # OF WORDS PER ENTRY 
T ABS .PDNT-1 
TMAX ABS .T 
TAB DEF *+1      IDENTIFIER TABLE 
 ASC 5,          (* SENTINEL *) 
 OCT 1777,100000,0
 ASC 5,FALSE
 OCT 30000,100000,0 
 ASC 5,TRUE 
 OCT 30001,100000,-1
 ASC 5,REAL 
 OCT 22002,100000,1 
 ASC 5,CHAR 
 OCT 42003,100000,1 
 ASC 5,BOOLEAN
 OCT 32004,100000,1 
 ASC 5,INTEGER
 OCT 12005,100000,1 
 ASC 5,ABS
 OCT 24006,100000,0 
 ASC 5,SQR
 OCT 24007,100000,2 
 ASC 5,ODD
 OCT 34010,100000,4 
 ASC 5,CHR
 OCT 44011,100000,5 
 ASC 5,ORD
 OCT 14012,100000,6 
 ASC 5,SUCC 
 OCT 44013,100000,7 
 ASC 5,PRED 
 OCT 44014,100000,10
 ASC 5,ROUND
 OCT 14015,100000,11
 ASC 5,TRUNC
 OCT 14016,100000,12
 ASC 5,SIN
 OCT 24017,100000,13
 ASC 5,COS
 OCT 24020,100000,14
 ASC 5,EXP
 OCT 24021,100000,15
 ASC 5,LN 
 OCT 24022,100000,16
 ASC 5,SQRT 
 OCT 24023,100000,17
 ASC 5,ARCTAN 
 OCT 24024,100000,20
 ASC 5,EOF
 OCT 34025,100000,21
 ASC 5,EOLN 
 OCT 34026,100000,22
 ASC 5,RANDOM 
 OCT 24027,100000,23
 ASC 5,READ 
 OCT 3030,100000,1
 ASC 5,READLN 
 OCT 3031,100000,2
 ASC 5,WRITE
 OCT 3032,100000,3
 ASC 5,WRITELN
 OCT 3033,100000,4
 ASC 5,HALT 
 OCT 3034,100000,5
 ASC 5, 
 OCT 3035,100000,0
 REP .TABS
 BSS .T+1-.PDNT 
* 
* EVERY ENTRY IN THE IDENTIFIER TABLE TAB OCCUPIES .TABS
* WORDS. THERE ARE .T+1 ENTRIES (FROM 0 TO .T). EVERY 
* ENTRY HAS THE FOLLOWING FORMAT: 
* NAME (WORDS 1 TO 5); TYP (BITS 15-12), OBJ (BITS 11-9), 
* LINK (BITS 8-0) OF WORD 6; NORMAL (BIT 15), REF (BITS 
* 14-6), LEV (BITS 5-0) OF WORD 7; ADR (WORD 8).
* 
.ATAS EQU 5      # OF WORDS PER ENTRY 
AMAX ABS .AT
ATAB DEF *+1     ARRAY TABLE
 REP .ATAS
 BSS .AT
* 
* EVERY ENTRY IN THE ARRAY TABLE ATAB OCCUPIES .ATAS WORDS. 
* THERE ARE .AT ENTRIES (FROM 1 TO .AT). EVERY ENTRY HAS
* THE FOLLOWING FORMAT: 
* INXTYP (BITS 15-12), ELTYP (BITS 11-9), ELREF (BITS 8-0)
* OF WORD 1; LOW, HIGH, ELSIZE, SIZE ONE WORD EACH (IN OR-
* DER). 
* 
.BTAS EQU 4      # OF WORDS PER ENTRY 
BMAX ABS .BT
BTAB DEF *+1     BLOCK TABLE
 ABS .PDNT-1     INITIAL
 OCT 1,0,0       ENTRY
 REP .BTAS
 BSS .BT-1
* 
* EVERY ENTRY IN THE BLOCK TABLE BTAB OCCUPIES .BTAS WORDS. 
* THERE ARE .BT ENTRIES (FROM 1 TO .BT). EVERY ENTRY CON- 
* TAINS THE ELEMENTS LAST, LASTPAR, PSIZE, VSIZE, OCCU- 
* PYING ONE WORD EACH (IN ORDER). 
* 
SMAX ABS .S+.S-1 SIZE OF THE STRING TABLE 
STAB DEF *+1     STRING TABLE 
 BSS .S 
* 
* THE STRING TABLE CONTAINS CHARACTERS, INDEXED FROM 0 TO 
* SMAX (TWO CHARACTERS PER WORD). IF WE RESERVE .S WORDS, 
* SMAX IS 2*.S - 1. 
* 
.RSIZ EQU 2      # OF WORDS PER ENTRY 
C2MAX ABS .C2MX 
RCONS DEF *+1    REAL CONSTANTS' TABLE
 REP .RSIZ
 BSS .C2MX
* 
* EVERY ENTRY IN THE REAL CONSTANTS' TABLE OCCUPIES .RSIZ 
* WORDS. THERE ARE .C2MX ENTRIES (FROM 1 TO .C2MX). 
* 
.CMAX EQU 32767  SIZE OF CODE 
CMAX ABS .CMAX
* 
LUNIN DEC 1    STANDARD COMPILER INPUT UNIT 
LUNOU DEC 6    STANDARD COMPILER OUTPUT UNIT
LUNDA DEC 1    STANDARD PROGRAM INPUT UNIT
LULST DEC 6    STANDARD PROGRAM LIST UNIT 
LLIMT DEC 300  MAX # OF OUTPUT LINES (STANDARD) 
* 
XEQT EQU 1717B     ID SEGMENT ADDRESS 
* 
PASCS LDA 1,I    THE COMPILER IS STARTED PASSING
 SZA             TO THE PROGRAM PASCS FIVE OP-
 STA LUNIN       TIONAL PARAMETERS X,Y,Z,V,W. 
 INB             X,Y,Z AND V GIVE THE UNIT ASSI-
 LDA 1,I         GNMENTS FOR THE FILES: COMPILER
 SZA             INPUT, COMPILER OUTPUT, PROGRAM
 STA LUNOU       INPUT, AND PROGRAM OUTPUT. W IS
 INB             THE MAXIMUM NUMBER OF OUTPUT 
 LDA 1,I         LINES TO BE PRODUCED DURING
 SZA             EXECUTION. DEFAULT VALUES: 
 STA LUNDA       X=Z=1 Y=V=6 W=300. 
 INB
 LDA 1,I
 SZA
 STA LULST
 INB
 LDA 1,I
 SZA
 STA LLIMT
 JMP PASCC
* 
* WE COME HERE TO TERMINATE PASCS,
* RELEASING ALL TRACKS ALLOCATED TO IT. 
* 
.TERM JSB EXEC
 DEF *+3
 DEF RCD5 
 DEF RCDM1
 JSB EXEC 
 DEF *+2
 DEF RCD6 
* 
RCD5 DEC 5
RCD6 DEC 6
RCDM1 DEC -1
* 
* ROUTINES AND DATA OF COMMON USE 
* 
LINED BSS 60     LINE BUFFER
* 
GETAD NOP 
 LDA 0,I         TO GET TRUE ADDRESS THROUGH
 RAL,CLE,SLA,ERA AN INDIRECT CHAIN
 JMP *-2
 JMP GETAD,I
* 
GETBD NOP 
 LDB 1,I         TO GET TRUE ADDRESS THROUGH
 RBL,CLE,SLB,ERB AN INDIRECT CHAIN
 JMP *-2
 JMP GETBD,I
* 
MOVEO NOP        TO WRITE A LINE
 LDB MOVEO
 JSB GETBD
 LDA 1,I    CALL: JSB MOVEO 
 CMA,INA          DEF BUFF
 STA RLEN 
 INB        WHERE: BUFF DEC N 
 STB BUFAD              BSS M (N CHARS) 
 JSB EXEC   WRITE OUT THE BUFFER
 DEF *+5
 DEF D2 
 DEF LUNOU
BUFAD NOP   BUFFER ADDRESS
 DEF RLEN   RECORD LENGTH 
 ISZ MOVEO
 JMP MOVEO,I
* 
RLEN BSS 1
* 
INSRT NOP   INSERTS THE CHARACTER CH
 STA GARAG  AT THE (I+1)-ST PLACE 
 LDA INSRT  IN THE BUFFER BUF.
 JSB GETAD
 STA GARA2
 LDA GARAG
 CCE,SLA,RSS
 BLF,CLE,BLF
 ARS
 ADA GARA2
 STA GARAG     CALL: LDA I
 LDA 0,I             LDB CH 
 SEZ                 JSB INSRT
 ALF,ALF             DEF BUF
 AND .377 
 SEZ
 ALF,ALF
 ADA 1
 STA GARAG,I
 ISZ INSRT
 JMP INSRT,I
* 
GARAG BSS 1 
GARA2 BSS 1 
.377 OCT 377
* 
ADBUF NOP 
 LDA ADBUF    ADDS A CHARACTER CH IN THE
 JSB GETAD    FIRST EMPTY POSITION OF A 
 STA *+4      BUFFER. CALL: LDB CH
 ISZ *+3                    JSB ADBUF 
 LDA 0,I                    DEF BUFFER
 JSB INSRT    WHERE: BUFFER DEC N (NO OF CHARS
 NOP                      PRESENT)
 LDA ADBUF
 JSB GETAD
 ISZ 0,I
 ISZ ADBUF
 JMP ADBUF,I
* 
ADOUT NOP        ADDS A CHARACTER TO THE OUTPUT 
 AND .377        BUFFER (FIRST 8 BITS OF CHAR 
 LDB 0           ARE IGNORED). CALL: LDA CHAR 
 JSB ADBUF                           JSB ADOUT
 DEF OUTPT
 JMP ADOUT,I
* 
DCONV NOP       CONVERTS THE BINARY NUMBER N
 CMB,INB        TO ASCII (M DIGITS). THE
 STB CHCNT      RESULT IS ADDED TO BUF
 LDB DCONV
 JSB GETBD
 STB WHERE
 INB
 STB WHATS
 LDB PUNT1
 ADB CHCNT
 STB PUNTS
 CLB
 STB LDZRO
 STB SFLAG
 STB SIGN.
 SSA,RSS
 JMP *+3
 ISZ SIGN.
 CMA,INA
 ISZ CHCNT
 RSS
 JMP *+3
 JSB CONV1
 JMP *-4
 ISZ LDZRO
 JSB CONV1
 ISZ DCONV
 JMP DCONV,I
CONV1 NOP 
 CLB
 ADA PUNTS,I
 SSA
 JMP *+3
 INB
 JMP *-4
 CMA,INA
 ADA PUNTS,I
 CMA,INA
 STA GARA1
 SZB
 JMP *+3
 CPB LDZRO
 JMP *+4
 ISZ LDZRO
 ISZ SFLAG
 ADB D20B 
 ADB D40B 
 JSB ADBUF
WHERE NOP 
 CLB,INB
 CPB SFLAG
 RSS
 JMP WHICH
 CPB SIGN.
 RSS
 JMP WHICH
 LDB MINAS
 LDA WHERE,I
 ADA DM2
 JSB INSRT
WHATS NOP 
WHICH LDA GARA1 
 ISZ PUNTS
 JMP CONV1,I
* 
GARA1 BSS 1 
SIGN. BSS 1 
SFLAG BSS 1 
CHCNT BSS 1 
LDZRO BSS 1 
PUNTS BSS 1 
 DEC -32768 
 DEC -10000 
 DEC -1000
 DEC -100 
 DEC -10
 DEC -1 
PUNT1 DEF * 
* 
SETAD NOP 
 AND D77B 
 CLB
 CLE,ERA
 ERB
 CLE,ERA
 ERB
 RBL,RBL
 ADB SETAD,I
 CMA
 STA BITKN
 CLA,INA
 RAR
 RAL
 ISZ BITKN
 JMP *-2
 ISZ SETAD
 JMP SETAD,I
* 
BITKN BSS 1 
* 
INSET NOP 
 LDB INSET    CALL: LDA N 
 JSB GETBD          JSB INSET 
 STB *+2            DEF X 
 JSB SETAD       -RETURN IF N NOT IN X -
 NOP             -RETURN IF N IN X -
 AND 1,I
 ISZ INSET
 SZA
 ISZ INSET
 JMP INSET,I
* 
WRILN NOP        PRINTS OUT THE OUTPUT
 JSB MOVEO       BUFFER AND CLEARS IT.
 DEF OUTPT
 CLA
 STA OUTPT
 JMP WRILN,I
* 
OUTPT OCT 0     OUTPUT BUFFER LENGTH (:=0)
 BSS 68         IN CHARACTERS, AND BUFFER.
* 
MOVES NOP         THE PROCEDURE MOVES COPIES
 STA SAVE1        A BUFFER INTO ANOTHER.
 LDA MOVES
 JSB GETAD
 CMA,INA
 STA SAVE2
 ISZ MOVES
MOVE1 LDA SAVE1,I 
 STA 1,I
 INB
 ISZ SAVE1
 ISZ SAVE2
 JMP MOVE1
 JMP MOVES,I
* 
SAVE1 BSS 1 
SAVE2 BSS 1 
* 
TWEEQ NOP 
 LDB TWEEQ,I   TESTS A NUMBER X 
 CMB,INB       TO SEE WHETHER IT IS BETWEEN 
 ISZ TWEEQ     TWO OTHER NUMBERS Y AND Z. 
 ADB 0         CALL:LDA X 
 SSB           JSB TWEEQ
 JMP *+5       ABS Y
 LDB 0         ABS Z
 CMB,INB       -RETURN IF Y<=X<=Z 
 ADB TWEEQ,I   -RETURN IF NOT 
 SSB
 ISZ TWEEQ
 ISZ TWEEQ
 JMP TWEEQ,I
* 
LETTR NOP         LDA CH
 JSB TWEEQ        JSB LETTR 
 OCT 101,132      - RET IF CH IS A LETTER 
 JMP LETTR,I      - RET IF NOT
 ISZ LETTR
 JMP LETTR,I
* 
DIGIT NOP         AS PROCEDURE LETTR
 JSB TWEEQ        (CHECKS FOR DIGITS) 
 OCT 60,71
 JMP DIGIT,I
 ISZ DIGIT
 JMP DIGIT,I
* 
OTPAD DEF OUTPT+7 
* 
* STANTYPSYS=[NOTYP,INTS,REALS,BOOLS,CHARS] 
* 
STYPS OCT 3,1,1,1 
* 
KKKKK BSS 1 
* 
OTNUM NOP 
 LDB D5 
 JSB DCONV
 DEF OUTPT
 JMP OTNUM,I
* 
SIXBL NOP 
 JSB WRILN
 LDA DM6
 STA KKKKK
 LDA BLANK
 JSB ADOUT
 ISZ KKKKK
 JMP *-3
 JMP SIXBL,I
* 
EXPSN BSS 1       SIGN OF EXPONENT PART 
EXVAL BSS 1       VALUE OF EXPONENT (DECIMAL) 
IDNUM BSS 1       TO BUILD A NUMBER IN. 
IDNU1 BSS 1 
EXPF BSS 1        BINARY EXPONENT 
FCNT BSS 1        COUNTS FRACTION DIGITS
TTTTT BSS 1       TEMPORARY STORAGE 
TTTT1 BSS 1 
TENTH OCT 146314  0.8 BINARY (...)
* 
NORML NOP     NORML LEFT JUSTIFIES THE
 SZA,RSS      NUMBER IN A AND B.
 SZB
 JMP NRML1    IF IT IS ZERO, EXIT 
 STA EXPF     WITH BINARY EXPONENT EXPF=0.
NRML3 STA IDNUM 
 STB IDNU1
 JMP NORML,I
NRML1 SSA        IF HIGH BIT IS NOT SET 
 JMP NRML2
 CLE,ELB
 ELA             SHIFT LEFT 
 STA IDNUM
 CCA             SUBTRACT 1 FROM EXP AND
 ADA EXPF 
 STA EXPF        LOOP BACK
 LDA IDNUM
 JMP NRML1
NRML2 CLE,ERA    IF HIGH BIT IS SET,
 ERB             SHIFT RIGHT
 ISZ EXPF        ADD 1 TO EXPF
 JMP NRML3
 JMP NRML3       AND EXIT 
* 
MPY NOP      MULTIPLIES TWO 16-BIT
 STA TTTTT   NUMBERS IN REGISTERS A 
 LDA D16
 CMA,INA     AND B, PRODUCING A 
 STA TTTT1   32-BIT RESULT IN A 
 CLA         AND B (HIGH PART IN A).
 CLE,SLB
 ADA TTTTT
 ERA
 ERB
 ISZ TTTT1
 JMP *-5
 JMP MPY,I
* 
* ROUTINES FOR TABLE ACCESSES 
* 
LINK BSS 1     (LINK) 
OBJ BSS 1      (ORD(OBJ)) 
TYP BSS 1      (ORD(TYP)) 
REF BSS 1      (REF)
NORMA BSS 1    (ORD(NORMAL))
LEV BSS 1      (LEV)
ADR BSS 1      (ADR)
NAME BSS 5     (NAME) 
WORD1 BSS 3 
* 
TABSC NOP     THE CALL
 JSB TABAD        LDA I 
 LDA TABGA        JSB TABSC 
 LDB NAMAD    UNPACKS THE VARIOUS FIELDS
 JSB MOVES    OF TAB[I], PUTTING THEM 
 DEC 5        INTO THE PLACES 
 LDA TABGA    LINK,OBJ,...,NAME   ABOVE.
 ADA D5 
 STA TABGA
 LDA TABGA,I
 AND .777 
 STA LINK 
 LDA TABGA,I
 ALF,ALF
 RAR
 AND D7 
 STA OBJ
 LDA TABGA,I
 ALF
 AND D17B 
 STA TYP
 ISZ TABGA
 LDA TABGA,I
 AND D77B 
 STA LEV
 LDA TABGA,I
 CLB
 SSA
 INB
 STB NORMA
 ALF,ALF
 RAL,RAL
 AND .777 
 STA REF
 ISZ TABGA
 LDA TABGA,I
 STA ADR
 JMP TABSC,I
* 
TABGA BSS 1 
NAMAD DEF NAME
.777 OCT 777
* 
TABAD NOP   GIVEN THE CALL: 
 ADA 0           LDA I
 ADA 0           JSB TABAD
 ADA 0      TABAD RETURNS IN TABGA
 ADA TAB    THE ADDRESS OF TAB[I].
 STA TABGA
 JMP TABAD,I
* 
TABPK NOP     THE CALL: LDA I 
 JSB TABAD              JSB TABPK 
 LDA TYP     REPACKS INTO THE VARIOUS 
 ALF,RAR     FIELDS OF TAB[I] WHAT
 IOR OBJ     IS CONTAINED IN THE WORDS
 ALF,ALF     LINK,OBJ,...,NAME  ABOVE.
 RAL
 IOR LINK 
 STA WORD1
 LDA NORMA
 ALF,ALF
 RAL
 IOR REF
 ALF,ALF
 RAR,RAR
 IOR LEV
 STA WORD1+1
 LDA ADR
 STA WORD1+2
 LDA NAMAD
 LDB TABGA
 JSB MOVES
 DEC 8
 JMP TABPK,I
* 
INXTP BSS 1   (INXTYP)
ELTYP BSS 1   (ELTYP) 
ELREF BSS 1   (ELREF) 
NAMEM BSS 1 
LOW BSS 1     (LOW) 
HIGH BSS 1    (HIGH)
ELSIZ BSS 1   (ELSIZE)
SIZE BSS 1    (SIZE)
* 
ATASC NOP  LIKE TABSC, FOR ATAB.
 JSB ATAAD
 LDA TABGA,I
 AND .777 
 STA ELREF
 LDA TABGA,I
 ALF
 AND D17B 
 STA INXTP
 LDA TABGA,I
 ALF,ALF
 RAR
 AND D7 
 STA ELTYP
 LDA TABGA
 INA
 LDB LOWAD
 JSB MOVES
 DEC 4
 JMP ATASC,I
* 
LOWAD DEF LOW 
NAMEX DEF NAMEM 
* 
ATAAD NOP     LIKE TABAD, FOR ATAB. 
 ADA DM1
 STA TABGA
 ADA 0
 ADA 0
 ADA TABGA
 ADA ATAB 
 STA TABGA
 JMP ATAAD,I
* 
ATAPK NOP         LIKE TABPK, FOR ATAB. 
 JSB ATAAD
 LDA INXTP
 ALF,RAR
 IOR ELTYP
 ALF,ALF
 RAL
 IOR ELREF
 STA NAMEM
 LDA NAMEX
 LDB TABGA
 JSB MOVES
 DEC 5
 JMP ATAPK,I
* 
LAST BSS 1
LASTP BSS 1 
PSIZE BSS 1 
VSIZE BSS 1 
LASAD DEF LAST
* 
BTASC NOP      LIKE ATASC, FOR BTAB.
 JSB BTAAD
 LDA TABGA
 LDB LASAD
 JSB MOVES
 DEC 4
 JMP BTASC,I
* 
BTAAD NOP 
 ADA DM1
 ADA 0
 ADA 0
 ADA BTAB 
 STA TABGA
 JMP BTAAD,I
* 
BTAPK NOP 
 JSB BTAAD
 LDA LASAD
 LDB TABGA
 JSB MOVES
 DEC 4
 JMP BTAPK,I
* 
RCOSC NOP    AS ABOVE, BUT FOR RCONS
 JSB RCOAD
 LDA TABGA,I
 ISZ TABGA
 LDB TABGA,I
 STA RCNST
 STB RCNST+1
 JMP RCOSC,I
* 
RCNST BSS 2 
* 
RCOPK NOP 
 JSB RCOAD
 LDA RCNST
 STA TABGA,I
 ISZ TABGA
 LDA RCNST+1
 STA TABGA,I
 JMP RCOPK,I
* 
RCOAD NOP 
 ADA DM1
 ADA 0
 ADA RCONS
 STA TABGA
 JMP RCOAD,I
* 
F BSS 1 
X DEC 0 
Y DEC 0 
* 
STAAD NOP    THE CALL LDA X, JSB STAAD, WITH X=BYTE 
 CLE,ERA     POSITION IN STAB, RETURNS A=WORD ADDRESS,
 ADA STAB    E=0(HIGH),1(LOW), FOR THE BYTE PLACE IN
 JMP STAAD,I THE WORD.
* 
STAIN NOP    THE CALL LDA I, LDB CH, JSB STAIN, INSERTS 
 JSB INSRT   CH AT THE I+1 - ST PLACE IN THE STRING 
 DEF STAB,I  TABLE STAB 
 JMP STAIN,I
* 
D1 DEC 1
D2 DEC 2
D4 DEC 4
D5 DEC 5
D7 DEC 7
D17B OCT 17 
D20B OCT 20 
D40B OCT 40 
D55B OCT 55 
D77B OCT 77 
D105B OCT 105 
D16 DEC 16
DM1 DEC -1
DM2 DEC -2
DM6 DEC -6
* 
MINAS EQU D55B
BLANK EQU D40B
VARIA EQU D1    VARIABLE
EEEEE EQU D105B THE LETTER E
* 
 EXT %READ,COR.A
* 
 DEC -6,-5,-4,-3,-2,-1
. DEC 0 
 DEC 1,2,3,4,5,6,7,8,9,10 
 DEC 11,12,13,14,15,16,17 
 DEC 18,19,20,21,22,23,24 
 DEC 25,26,27,28,29,30,31 
 DEC 32,33,34,35,36,37,38 
 DEC 39,40,41,42,43,44,45 
 DEC 46,47,48,49,50,51,52 
 DEC 53,54,55,56,57,58,59 
 DEC 60,61,62,63,64,65,66 
 DEC 67,68,69,70,71,72,73 
 DEC 74,75,76,77,78,79,80 
 DEC 81,82,83,84,85,86,87 
 DEC 88,89,90,91,92,93,94 
 DEC 95,96,97,98,99,100 
 DEC 101,102,103,104,105
 DEC 106,107,108,109,110
 DEC 111,112,113,114,115
 DEC 116,117,118,119,120
 DEC 121,122,123,124,125
 DEC 126,127,128,129,130
* 
RNUM BSS 2       REAL FROM INSYMBOL 
LC OCT 0         PROGRAM LOCATION COUNTER (:=0) 
LL OCT 0         LENGTH OF CURRENT LINE (:=0) 
CC OCT 0         CHARACTER COUNTER (:=0)
ERRPS OCT 0      ERRPOS (:=0) 
CH OCT 40        LAST CHAR READ (:=' ') 
ERRS OCT 0,0,0,0 ERRS (:=[])
* 
LLNG DEC -120    -(MAX NO. OF CHARS IN INPUT LINE)
* 
NEXTC NOP      PROCEDURE NEXTCH;
 LDA CC 
 CPA LL 
 RSS
 JMP EXTRC
AGAIN JSB %READ 
 DEF *+5
 DEF LUNIN
LINEP DEF LINE
 DEF LLNG 
 CLB
 SZB
 JMP NOTEF
 JSB WRILN
 LDA LUNIN
 CPA .+2
 JMP EXITT
 JSB ASKIN
 RSS
 JMP AGAIN
EXITT JSB TYPEM 
 DEF MSG4 
 JSB MOVEO
 DEF MSG4 
EXITZ JSB ERMSG 
 JMP .TERM
MSG4 DEC 20 
 ASC 10, PROGRAM INCOMPLETE 
 ASC 10, ****************** 
NOTEF STB LL
 CLA
 STA CC 
 CPA ERRPS
 JMP SKIPT
 LDA SKFLG
 SZA
 JSB ENDSK
 JSB WRILN
 CLA
 STA ERRPS
SKIPT CLA 
 STA TLINE
 LDA LC 
 LDB .+6
 JSB DCONV
 DEF TLINE
 LDA TLINE
 ADA .+2
 ADA LL 
 STA TLINE
 JSB MOVEO
 DEF TLINE
 ISZ LL 
EXTRC ISZ CC
 LDB CC 
 CPB LL 
 JMP GETBL
 CCA
 ADA 1
 CLE,ERA
 ADA LINEP
 LDA 0,I
 SEZ,RSS
 ALF,ALF
 AND .377 
 STA CH 
 JMP NEXTC,I
GETBL LDA BLANK 
 JMP *-3
* 
ENDSK NOP    PROCEDURE ENDSKIP; 
 LDA CC 
 CMA,INA
 ADA ERRPS
 SSA,RSS
 JMP *+5
 LDA MINAS
 JSB ADOUT
 ISZ ERRPS
 JMP *-8
 CLA
 STA SKFLG
 JMP ENDSK,I
* 
TLINE BSS 1   NO OF CHARS IN THE LINE 
LCCON BSS 3   TO CONTAIN LC IN ASCII
 ASC 1,       (6 DIGITS=  3   WORDS) +
LINE BSS 60   2 BLANKS + THE INPUT LINE.
* 
EMPTS NOP           TESTS A SET TO SEE IF 
 LDA EMPTS,I        IT IS EMPTY.
 ISZ EMPTS    CALL: JSB EMPTS 
 LDB 0,I            DEF SET 
 SZB               -RETURN IF NOT EMPTY-
 JMP EMPTS,I       -RETURN IF EMPTY-
 INA
 LDB 0,I
 SZB
 JMP EMPTS,I
 INA
 LDB 0,I
 SZB
 JMP EMPTS,I
 INA
 LDB 0,I
 SZB
 JMP EMPTS,I
 ISZ EMPTS
 JMP EMPTS,I
* 
UNION NOP            FORMS THE UNION OF TWO SETS. 
 LDA UNION,I         CALL:JSB UNION 
 STA UNIX                 DEF X 
 ISZ UNION                DEF Y 
 LDA UNION,I              DEF Z 
 STA UNIY            EFFECT: Z:=X+Y.
 ISZ UNION
 LDA UNION,I
 STA UNIZ1
 STA UNIZ2
 JSB CLSET
UNIZ1 NOP 
 LDA .+64 
 CMA,INA
 STA KOUNT
 CCA
 STA ELEM 
UNI ISZ ELEM
 LDA ELEM 
 JSB INSET
UNIX NOP
 RSS
 JMP EXIST
 LDA ELEM 
 JSB INSET
UNIY NOP
 JMP UNICL
EXIST LDA ELEM
 JSB ADSET
UNIZ2 NOP 
UNICL ISZ KOUNT 
 JMP UNI
 ISZ UNION
 JMP UNION,I
* 
KOUNT BSS 1 
ELEM BSS 1
* 
CLSET NOP           DOES X:=[]
 LDB CLSET,I        CALL: JSB CLSET 
 CLA                       DEF X
 STA 1,I           WHERE X BSS 4  (A SET) 
 INB
 STA 1,I
 INB
 STA 1,I
 INB
 STA 1,I
 ISZ CLSET
 JMP CLSET,I
* 
ADSET NOP         DOES X:=X+[N].
 LDB ADSET,I      CALL: LDA N 
 STB *+2                JSB ADSET 
 JSB SETAD              DEF X 
 NOP
 IOR 1,I
 STA 1,I
 ISZ ADSET
 JMP ADSET,I
* 
* ELEMENT BITS FOR SETS : 
* WORD 1: ELEMENTS 60,56,52,...,4,0  IN BITS 15-0 
* WORD 2: ELEMENTS 61,57,53,...,5,1  IN BITS 15-0 
* WORD 3: ELEMENTS 62,58,54,...,6,2  IN BITS 15-0 
* WORD 4: ELEMENTS 63,59,55,...,7,3  IN BITS 15-0 
* 
ERMSG NOP         PROCEDURE ERRORMSG; 
 JSB WRILN
 JSB MOVEO
 DEF MSG2 
 CLA
 STA KKKKK
 LDA ERMAX
 CMA,INA
 STA ERCNT
 LDA MSG
 STA MSGCN
CYCLE LDA KKKKK 
 JSB INSET
 DEF ERRS 
 JMP CLOYE
 CLA
 STA TLINE
 LDA KKKKK
 LDB .+2
 JSB DCONV
 DEF TLINE
 LDA LCCON
 STA KCONV
 LDA MSGCN
 LDB MESS1
 JSB MOVES
FIVE DEC 5
 JSB MOVEO
 DEF MSG3 
CLOYE LDA FIVE
 ADA MSGCN
 STA MSGCN
 ISZ KKKKK
 ISZ ERCNT
 JMP CYCLE
 JSB CLSET
 DEF ERRS 
 JMP ERMSG,I
* 
MSG2 DEC 10 
 ASC 5, KEY WORDS 
MSG3 DEC 22 
 ASC 4, 
KCONV BSS 1 
 ASC 1, 
MESSG BSS 5 
MESS1 DEF MESSG 
ERMAX DEC 59
ERCNT BSS 1 
MSGCN BSS 1 
* 
MSG DEF *+1 
 ASC 5,UNDEF ID 
 ASC 5,MULTI DEF
 ASC 5,IDENTIFIER 
 ASC 5,PROGRAM
 ASC 5,)
 ASC 5,:
 ASC 5,SYNTAX 
 ASC 5,IDENT, VAR 
 ASC 5,OF 
 ASC 5,(
 ASC 5,ID, ARRAY
 ASC 5,[
 ASC 5,]
 ASC 5,.. 
 ASC 5,;
 ASC 5,FUNC. TYPE 
 ASC 5,=
 ASC 5,BOOLEAN
 ASC 5,CONVAR TYP 
 ASC 5,TYPE 
 ASC 5,PROG.PARAM 
 ASC 5,TOO BIG
 ASC 5,.
 ASC 5,TYP (CASE) 
 ASC 5,CHARACTER
 ASC 5,CONST ID 
 ASC 5,INDEX TYPE 
 ASC 5,INDEXBOUND 
 ASC 5,NO ARRAY 
 ASC 5,TYPE ID
 ASC 5,UNDEF TYPE 
 ASC 5,NO RECORD
 ASC 5,BOOLE TYPE 
 ASC 5,ARITH TYPE 
 ASC 5,INTEGER
 ASC 5,TYPES
 ASC 5,PARAM TYPE 
 ASC 5,VARIAB ID
 ASC 5,STRING 
 ASC 5,NO.OF PARS 
 ASC 5,REAL NUMBR 
 ASC 5,TYPE 
 ASC 5,REAL TYPE
 ASC 5,INTEGER
 ASC 5,VAR, CONST 
 ASC 5,VAR, PROC
 ASC 5,TYPES (:=) 
 ASC 5,TYP (CASE) 
 ASC 5,TYPE 
 ASC 5,STORE OVFL 
 ASC 5,CONSTANT 
 ASC 5,:= 
 ASC 5,THEN 
 ASC 5,UNTIL
 ASC 5,DO 
 ASC 5,TO DOWNTO
 ASC 5,BEGIN
 ASC 5,END
 ASC 5,FACTOR 
* 
FATAL CCB         PROCEDURE FATAL 
 ADA 1
 LDB 0
 BLS,BLS
 ADA 1
 ADA MEBAS
 STA TEMP 
 JSB WRILN
 JSB ERMSG
 LDA TEMP 
 LDB MEDES
 JSB MOVES
 DEC 5
 JSB MOVEO
 DEF MESOV
 JMP .TERM
TEMP BSS 1
MEBAS DEF *+1 
 ASC 5,IDENTIFIER 
 ASC 5,PROCEDURES 
 ASC 5,REALS
 ASC 5,ARRAYS 
 ASC 5,LEVELS 
 ASC 5,CODE 
 ASC 5,STRINGS
 ASC 5,EXTERNALS
* 
MEDES DEF MED1
MESOV DEC 44
 ASC 10, COMPILER TABLE FOR 
MED1 BSS 5
 ASC 7, IS TOO SMALL
* 
ERROR NOP        PROCEDURE ERROR(N:INTEGER);
 STA TEMPO
 LDA ERRPS
 SZA
 JMP TESTB
 LDA BLANK
 JSB ADOUT
 LDA .-5
 STA FCOUN
 LDA ASTAR
 JSB ADOUT
 ISZ FCOUN
 JMP *-3
TESTB LDB CC
 CMB,INB
 ADB ERRPS
 SSB,RSS
 JMP ERROR,I
 STB TEMPI
 LDA TEMPO
 JSB ADSET
 DEF ERRS 
 LDA BLANK
 JSB ADOUT
 ISZ TEMPI
 JMP *-3
 LDA UPARR
 JSB ADOUT
 LDA TEMPO
 LDB .+2
 JSB DCONV
 DEF OUTPT
 LDA CC 
 ADA .+3
 STA ERRPS
 JMP ERROR,I
* 
FCOUN BSS 1 
ASTAR EQU .+52B        *
UPARR EQU .+136B       UP ARROW 
TEMPO BSS 1 
TEMPI BSS 1 
* 
INSYM NOP       PROCEDURE INSYMBOL; 
INSY1 LDA CH     1:WHILE CH=' ' 
 CPA BLANK           DO NEXTC;
 JSB DBLNK       SEE IF NEXT NONBLANK 
 JSB LETTR           IS A LETTER
 JMP IDENS       (THEN LOOK FOR AN IDENTIFIER)
 JSB DIGIT           OR A DIGIT 
 JMP NUMBR       (THEN LOOK FOR A NUMBER) 
 CPA COLAS           OR A : 
 JMP COLTR       (THEN CHECK IT ISN'T :=) 
 CPA LESSS           OR A < 
 JMP LESTR       (THEN LOOK FOR <= OR <>) 
 CPA GREAT           OR A > 
 JMP GRETR       (THEN LOOK FOR >= ALSO)
 CPA POINT           OR A . 
 JMP POITR       (THEN CHECK FOR ..)
 CPA QUOTE       IF IT IS A QUOTE, LOOK 
 JMP QUOTR       FOR STRINGS. 
 CPA LPAAS       IF IT IS A (, LOOK FOR COMMENTS. 
 JMP LPATR       OTHERWISE CONVERT SINGLE CHARS 
 LDB PLUS   + 
 CPA PLUAS
 JMP EXSYM
 LDB MINUS   -
 CPA MINAS
 JMP EXSYM
 LDB TIMES   *
 CPA ASTAR
 JMP EXSYM
 LDB RDIV   / 
 CPA DIVAS
 JMP EXSYM
 LDB RPARE   )
 CPA RPAAS
 JMP EXSYM
 LDB EQL =
 CPA EQUAL
 JMP EXSYM
 LDB COMMA   ,
 CPA COMAS
 JMP EXSYM
 LDB LBRAC   [
 CPA LBRAS
 JMP EXSYM
 LDB RBRAC   ]
 CPA RBRAS
 JMP EXSYM
 LDB SEMIC   ;
 CPA SEMAS
 JMP EXSYM    APART FROM THE ABOVE, ALL 
 LDA .+24     OTHER CHARACTERS ARE
 JSB ERROR    ILLEGAL 
 JSB NEXTC
 JMP INSY1
EXSYM STB SY     EXIT FROM INSYMBOL 
 JSB NEXTC    (LOOK-AHEAD ONE CHAR) 
 JMP INSYM,I
EXSY1 STA SY    OTHER EXIT (LOOK-AHEAD
 JMP INSYM,I   ALREADY PROVIDED)
* 
COLTR JSB NEXTC    MULTIPLE SYMBOLS STARTING BY 
 LDB BECOM         A COLON
 CPA EQUAL
 JMP EXSYM
 LDA COLON
 JMP EXSY1
* 
LESTR JSB NEXTC MULTIPLE SYMBOLS STARTING BY
 LDB LEQ        A  <
 CPA EQUAL
 JMP EXSYM
 LDB NEQ
 CPA GREAT
 JMP EXSYM
 LDA LSS
 JMP EXSY1
* 
GRETR JSB NEXTC    MULTIPLE SYMBOLS STARTING BY 
 LDB GEQ           A   >
 CPA EQUAL
 JMP EXSYM
 LDA GTR
 JMP EXSY1
* 
POITR JSB NEXTC    MULTIPLE SYMBOLS STARTING BY 
 LDB COLON         A   .
 CPA POINT
 JMP EXSYM
 LDA PERIO
 JMP EXSY1
* 
* PASCAL BASIC SYMBOLS
* 
BECOM EQU .+52    :=
COLON EQU .+38    : 
LEQ EQU .+36    <=
NEQ EQU .+45    <>
LSS EQU .+35     <
GEQ EQU .+34     >= 
GTR EQU .+33     >
PERIO EQU .+37     .
STRIN EQU .+32   STRING 
CHARC EQU .+31   CHARCON
LPARE EQU .+46    ( 
PLUS EQU .+40     + 
MINUS EQU .+41     -
TIMES EQU .+42      * 
RDIV EQU .+43      /
RPARE EQU .+47     )
EQL EQU .+44    = 
COMMA EQU .+50    , 
LBRAC EQU .+48     [
RBRAC EQU .+49    ] 
ANDSY EQU .+1     & 
SEMIC EQU .+51    ; 
INTCO EQU .+29     INTCON 
REALC EQU .+30    REALCON 
IDENT EQU .+39   IDENT
NOTSY EQU .+15   NOTSY
IDIV EQU .+6    IDIV
IMOD EQU .+14  IMOD 
ORSY EQU .+17   ORSY
CONSY EQU .+5    CONSTSY
TYPSY EQU .+24  TYPESY
VARSY EQU .+26   VARSY
FUNSY EQU .+12   FUNCTIONSY 
PROSY EQU .+18   PROCEDURESY
ARRSY EQU .+2     ARRAYSY 
PRGSY EQU .+19    PROGRAMSY 
BEGSY EQU .+3    BEGINSY
IFSY EQU .+13     IFSY
CASSY EQU .+4    CASESY 
REPSY EQU .+21    REPEATSY
WHISY EQU .+27     WHILESY
FORSY EQU .+11   FORSY
ENDSY EQU .+10     ENDSY
ELSSY EQU .+9    ELSESY 
UNTSY EQU .+25    UNTILSY 
OFSY EQU .+16     OFSY
DOSY EQU .+8    DOSY
TOSY EQU .+23   TOSY
DOWSY EQU .+7     DOWNTOSY
THESY EQU .+22   THENSY 
EXTSY EQU .+28   EXTERNAL (FORTRAN) SYMBOL
* 
* ASCII CHARACTERS
* 
SEMAS EQU .+73B       ; 
RPAAS EQU .+51B   ) 
COLAS EQU .+72B   : 
LESSS EQU .+74B   < 
EQUAL EQU .+75B   = 
GREAT EQU .+76B   > 
POINT EQU .+56B   . 
QUOTE EQU .+47B   ' 
LPAAS EQU .+50B   ( 
PLUAS EQU .+53B   + 
DIVAS EQU .+57B   / 
COMAS EQU .+54B   , 
LBRAS EQU .+133B  [ 
RBRAS EQU .+135B  ] 
* 
DBLNK NOP           SKIP THE BLANKS 
 JSB NEXTC
 CPA BLANK
 JMP *-2
 JMP DBLNK,I
* 
.200B EQU .+200B    CONSTANT FOR ROUND-OFF
SY BSS 1            LAST SYMBOL READ IN 
INUM BSS 1          INTEGER FROM INSYMBOL 
SX OCT 0            POINTER INTO STAB (:=0) 
SLENG BSS 1         STRING LENGTH 
KQUOT BSS 1         TEMPORARY STORAGE 
* 
IDADR DEF ID     ADDRESS OF IDENTIFIER BUFFER 
ALNG EQU .+10    MAX NO. OF CHARS IN IDENTIFIERS. 
IDBUF BSS 1 
ID BSS 5         IDENTIFIER BUFFER
NKW EQU .+28     NUMBER OF KEYWORDS 
* 
KEY DEF *+1      KEYWORDS 
 ASC 5,AND
 ASC 5,ARRAY
 ASC 5,BEGIN
 ASC 5,CASE 
 ASC 5,CONST
 ASC 5,DIV
 ASC 5,DOWNTO 
 ASC 5,DO 
 ASC 5,ELSE 
 ASC 5,END
 ASC 5,FOR
 ASC 5,FUNCTION 
 ASC 5,IF 
 ASC 5,MOD
 ASC 5,NOT
 ASC 5,OF 
 ASC 5,OR 
 ASC 5,PROCEDURE
 ASC 5,PROGRAM
 ASC 5,RECORD 
 ASC 5,REPEAT 
 ASC 5,THEN 
 ASC 5,TO 
 ASC 5,TYPE 
 ASC 5,UNTIL
 ASC 5,VAR
 ASC 5,WHILE
 ASC 5,FORTRAN
* 
NKWCN BSS 1 
KEYAD BSS 1 
KSY BSS 1 
* 
QUOTR CLA 
 STA KQUOT
QUOT2 JSB NEXTC 
 CPA QUOTE
 RSS
 JMP QUOT1
 JSB NEXTC
 CPA QUOTE     '' MEANS ' 
 RSS
 JMP QUOT3
QUOT1 LDA .+7 
 LDB SX 
 ADB KQUOT
 CPB SMAX    STRING TABLE OVERFLOW
 JMP FATAL
 LDA 1
 LDB CH 
 JSB STAIN   INSERT CHARACTER IN STAB 
 ISZ KQUOT
 LDB CC 
 CPB .+1     A STRING CANNOT EXTEND 
 RSS         BEYOND THE END OF LINE.
 JMP QUOT2
 CLA
 STA KQUOT
QUOT3 LDA KQUOT 
 CPA .+1
 JMP QUOT4
 CPA .       NULL STRING
 JMP QUOT5
 LDA SX 
 STA INUM 
 LDA KQUOT
 STA SLENG
 ADA SX 
 STA SX 
 LDA STRIN
 JMP EXSY1   EXIT 
QUOT4 LDA SX
 JSB STAAD
 LDA 0,I     EXTRACT CHARACTER INSERTED 
 SEZ,RSS
 ALF,ALF
 STA INUM 
QUOT6 LDA CHARC   IT IS A SINGLE CHAR 
 JMP EXSY1
QUOT5 LDA .+38
 JSB ERROR        ERROR 
 CLA
 STA INUM 
 JMP QUOT6
* 
* TREATMENT OF COMMENTS 
* 
LPATR JSB NEXTC 
 CPA ASTAR
 JMP LPAT1
 LDA LPARE       IT IS NOT A COMMENT
 JMP EXSY1
LPAT1 JSB NEXTC  IT IS A COMMENT
LPAT2 CPA ASTAR   ... SKIP IT ... 
 RSS
 JMP LPAT1
 JSB NEXTC        LOOK FOR  *)
 CPA RPAAS
 RSS
 JMP LPAT2
 JSB NEXTC
 JMP INSY1        GO AND PICK NEXT CHAR 
* 
* AUXILIARY ROUTINES
* 
LIT99 NOP 
LIT1 ISZ FCNT 
 LDB EXPF 
 SZB
 JMP LIT10
 LDA CH 
 AND .+17B
 STA TTTTT
 LDA IDNUM
 LDB IDNU1
 CLE,ELB
 ELA
 CLE,ELB
 ELA
 SEZ,RSS
 SSA
 JMP LIT10
 ADA IDNUM
 ADB IDNU1
 SEZ
 CLE,INA
 CLE,ELB
 ELA
 SEZ,RSS
 SSA
 JMP LIT10
 ADB TTTTT
 SEZ
 CLE,INA
 SSA
 JMP LIT10
 STA IDNUM
 STB IDNU1
 RSS
LIT10 ISZ EXPF
 JSB NEXTC
 JSB DIGIT
 JMP LIT1 
 JMP LIT99,I
* 
* TREATMENT OF NUMBERS
* 
NUMBR CLA 
 STA IDNUM
 STA IDNU1
 STA EXPF 
 STA EXVAL
 STA EXPSN
 STA FCNT 
 LDA INTCO
 STA SY 
 JSB LIT99
 CLB
 STB FCNT 
 CPA POINT
 JMP TPOIN
 CPA EEEEE
 JMP TEEEE
LIT5 LDA IDNUM
 SZA
 JMP LIT15
 LDB IDNU1
 SSB
 JMP LIT15
 STB INUM 
 JMP INSYM,I
LIT66 LDA COLAS 
 STA CH 
 JMP LIT5 
LIT15 LDA .+21
 JSB ERROR
 CLA
 STA INUM 
 JMP INSYM,I
TPOIN JSB NEXTC 
 CPA POINT
 JMP LIT66
 LDB REALC
 STB SY 
 JSB DIGIT
 JMP *+5
 LDA .+40 
 JSB ERROR
 LDA CH 
 RSS
 JSB LIT99
 CPA EEEEE
 RSS
 JMP LIT51
LIT98 JSB NEXTC 
 CPA PLUAS
 JMP LIT17
 CPA MINAS
 JMP LIT18
LIT19 JSB DIGIT 
 JMP LIT50
LIT88 LDA .+40
 JSB ERROR
 JMP LIT51
LIT18 ISZ EXPSN 
LIT17 JSB NEXTC 
 JMP LIT19
LIT50 LDB EXVAL 
 BLS,BLS
 ADB EXVAL
 BLS
 AND .+17B
 ADA 1
 STA EXVAL
 JSB NEXTC
 JSB DIGIT
 JMP LIT50
LIT51 LDA EXVAL 
 LDB EXPSN
 SZB
 CMA,INA
 ADA EXPF 
 LDB FCNT 
 CMB,INB
 ADA 1
 STA EXVAL
 LDA .+31 
 STA EXPF 
 LDA IDNUM
 LDB IDNU1
 SZA,RSS
 SZB
 JMP LIT54
LIT77 STA RNUM
 STA RNUM+1 
 JMP INSYM,I
TEEEE LDB REALC 
 STB SY 
 JMP LIT98
LIT54 JSB NORML 
 LDA EXVAL
 SZA
 JMP LIT53
 LDB IDNUM
 LDA IDNU1
 CLE
 ADA .200B
 SEZ
 CLE,INB
 ALF,ALF
 AND .377 
 ALF,ALF
 STA TTTT1
 SSB,RSS
 JMP *+3
 RBR
 CLA,INA,RSS
 CLA
 ADA EXPF 
 STB RNUM 
 JSB TWEEQ
 DEC -128     EMIN
 DEC 127      EMAX
 JMP EXPOK
 SSA,RSS
 JMP LIT88
 CLA
 JMP LIT77
EXPOK RAL 
 AND .377 
 IOR TTTT1
 STA RNUM+1 
 JMP INSYM,I
LIT53 SSA 
 JMP LIT55
 ADA .-1
 STA EXVAL
 LDA EXPF 
 ADA .+3
 STA EXPF 
 LDA IDNUM
 LDB IDNU1
 CLE,ERA
 ERB
 CLE,ERA
 ERB,CLE
 ADB IDNU1
 SEZ
 INA
 ADA IDNUM
 JMP LIT54
LIT55 INA 
 STA EXVAL
 LDA .-3
 ADA EXPF 
 STA EXPF 
 LDA IDNU1
 LDB TENTH
 JSB MPY
 CLE
 ADB 0
 SEZ
 INA
 STA IDNU1
 LDA IDNUM
 LDB TENTH
 JSB MPY
 CLE
 ADB 0
 ADB IDNU1
 SEZ
 INA
 JMP LIT54
* 
* TREATMENT OF IDENTIFIERS
* 
IDENS CLA 
 STA IDBUF
 LDA ALNG 
 CMA,INA
 STA TTTTT
 LDB BLANK
 JSB ADBUF
 DEF IDBUF
 ISZ TTTTT
 JMP *-4
 CLA
 STA IDBUF
IDBLD JSB IDPAK 
 JSB NEXTC
 JSB LETTR
 JMP IDBLD
 JSB DIGIT
 JMP IDBLD
 LDA KEY
 STA KEYAD
 CLA,INA
 STA KSY
 LDA NKW
 CMA,INA
 STA NKWCN
 LDB KEYAD
LOOKA LDA IDADR 
 JSB COMPA
 DEC 5
 JMP KWFND
 ISZ NKWCN
 JMP INCRK
 LDA IDENT
 JMP EXSY1
INCRK LDB KEYAD 
 ADB FIVE 
 STB KEYAD
 ISZ KSY
 JMP LOOKA
KWFND LDA KSY 
 JMP EXSY1
* 
IDPAK NOP 
 LDA IDBUF
 CPA ALNG 
 JMP IDPAK,I
 LDB CH 
 JSB ADBUF
 DEF IDBUF
 JMP IDPAK,I
* 
COMPA NOP       COMPARES TWO BUFFERS. 
 STA TZZZZ
 LDA COMPA,I
 CMA,INA
 STA TZZZ1
 ISZ COMPA
COMPZ LDA TZZZZ,I 
 CPA 1,I
 JMP *+3
 ISZ COMPA
 JMP COMPA,I
 ISZ TZZZZ
 INB
 ISZ TZZZ1
 JMP COMPZ
 JMP COMPA,I
TZZZZ BSS 1 
TZZZ1 BSS 1 
* 
TYPEM NOP      TO TYPE A MESSAGE
 LDA TYPEM,I   CALL: JSB TYPEM
 STA TYPE2           DEF .MESS
 INA           WHERE: 
 STA TYPE.     .MESS DEC N
 JSB EXEC            ASC N,<2*N CHARS>
 DEF *+5
 DEF .+2
 DEF .+1
TYPE. NOP 
TYPE2 NOP 
 ISZ TYPEM
 JMP TYPEM,I
* 
JFILS EQU 1767B    SOURCE FILE INDICATOR
* 
VERIF LDA JFILS    IF THE SOURCE FILE 
 SZA               IS AVAILABLE,THEN
 JMP COMPI         GO AND GET IT. 
 JSB TYPEM     OTHERWISE TYPE 
 DEF .MES1     AN ERROR MESSAGE 
 JMP .TERM     AND TERMINATE
* 
.400B OCT 400     TO GET AN ECHO ON TTY 
* 
COMPW LDA LUNIN   ECHO ON 
 ADA .400B
 STA LUNIN
 JMP COMPI
* 
.MES1 DEC 6 
 ASC 6, EMPTY JFILE 
A OCT 0 A:=0
B OCT 1 B:=1
C1 BSS 1 C1 
C2 OCT 0 C2:=0; 
* 
.LMAX EQU 15  MAX NUMBER OF LEVELS (SAME IN PADDD)
* 
DIPLY DEF *+1   DISPLAY[0:LMAX] 
 OCT 1          DISPLAY[0]:=1;
 BSS .LMAX      LMAX=15 
LMAX ABS .LMAX
* 
IFLAG OCT 0   IFLAG:=FALSE; 
OFLAG OCT 0   OFLAG:=FALSE; 
SKFLG OCT 0    SKIPFLAG:=FALSE; 
PRNAM DEF *+1 
 BSS 5         PROGNAME 
* 
* TYPES 
* 
NOTYP EQU .    NOTYP
INTS EQU .+1   INTS 
REALS EQU .+2  REALS
BOOLS EQU .+3  BOOLS
CHARS EQU .+4  CHARS
ARAYS EQU .+5  ARRAYS 
RECDS EQU .+6  RECORDS
* 
* OBJECTS 
* 
KONST EQU .   KONSTANT
TYPE1 EQU .+2 TYPE1 
PROZE EQU .+3 PROZEDURE 
FUNKT EQU .+4 FUNKTION
* 
* SYMBOL SETS.
* CONSTBEGSYS=[PLUS MINUS INTCON REALCON CHARCON IDENT] 
* TYPBEGSYS=[IDENT ARRAYSY RECORDSY]
* BLOCKBEGSYS=[CONSTSY TYPESY VARSY PROCEDURESY FUNCTIONSY BEGINSY] 
* FACBEGSYS=[INTCON REALCON CHARCON IDENT LPARENT NOTSY]
* STATBEGSYS=[BEGINSY IFSY WHILESY REPEATSY FORSY CASESY] 
* 
COBES OCT 2000,2200,200,1200   CONSTBEGSYS
TYBES OCT 40,0,1,1000          TYPBEGSYS
BLBES OCT 110,2,120,1          BLOCKBEGSYS
FABES OCT 0,200,4200,1210      FACBEGSYS
STBES OCT 2,50,0,105           STATBEGSYS 
* 
CSMAX ABS .CSMX 
* 
PASBI ASC 3,PASBIN
* 
PRUNZ DEF NAMRC 
PRUNW DEF NAMRC+3 
NAMRC DEC 44
 OCT 20000,0,0,0,0,-1 
 OCT 0,0,3,143,0,0,0,0,0,0
 ASC 27, POUR FAIRE TOUTES SORTES D'OPERATIONS D'ARITHMETIQUE 
* 
PRUNA DEF *+1 
 DEC 60 
 OCT 100023,0,51525,41060,30001,51525,41060,30402,51525,41060,31003 
 OCT 51525,41060,31404,51525,41060,32005,51525,41060,32406,51525,41060
 OCT 33007,51525,41060,33410,51525,41060,34011,51525,41060,34412,51525
 OCT 41061,30013,51525,41061,30414,51525,41061,31015,51525,41061,31416
 OCT 51525,41061,32017,51525,41061,32420,51525,41061,33021,51525,41061
 OCT 33422,51525,41061,34023
* 
PRUNB DEF *+1 
 DEC 60 
 OCT 100023,0,51525,41061,34424,51525,41062,30025,51525,41062,30426 
 OCT 51525,41062,31027,51525,41062,31430,51525,41062,32031,51525,41062
 OCT 32432,51525,41062,33033,51525,41062,33434,51525,41062,34035,51525
 OCT 41062,34436,51525,41063,30037,51525,41063,30440,51525,41063,31041
 OCT 51525,41063,31442,51525,41063,32043,51525,41063,32444,51525,41063
 OCT 33045,51525,41063,33446
* 
PRUNC DEF *+1 
 DEC 60 
 OCT 100023,0,51525,41063,34047,51525,41063,34450,51525,41064,30051 
 OCT 51525,41064,30452,51525,41064,31053,51525,41064,31454,51525,41064
 OCT 32055,51525,41064,32456,51525,41064,33057,51525,41064,33460,51525
 OCT 41064,34061,51525,41064,34462,51525,41065,30063,51525,41065,30464
 OCT 51525,41065,31065,51525,41065,31466,51525,41065,32067,51525,41065
 OCT 32470,51525,41065,33071
* 
PRUND DEF *+1 
 DEC 30 
 OCT 100011,0,51525,41065,33472,51525,41065,34073,51525,41065,34474 
 OCT 51525,41066,30075,51525,41066,30476,51525,41066,31077,51525,41066
 OCT 31500,51525,41066,32101,51525,41066,32502
* 
LIOPZ DEC 0 
* 
WRBRE NOP 
 LDB 0,I
 STB *+3
 LDB FNBNP
 JSB MOVES
 NOP
 JSB WRBIN
 JMP WRBRE,I
* 
ENRC DEF *+1
 OCT 4,120001,0,0 
TARC DEF *+1
 OCT 7,40001,0,52101,41040,20000,0
ATARC DEF *+1 
 OCT 7,40001,0,40524,40502,20000,0
BTARC DEF *+1 
 OCT 7,40001,0,41124,40502,20000,0
STARC DEF *+1 
 OCT 7,40001,0,51524,40502,20000,0
RCORC DEF *+1 
 OCT 7,40001,0,51103,47516,51400,0
RELBS DEF *+1 
 OCT 7,40001,0,51105,46102,51400,0
LUNRC DEF *+1 
 OCT 7,40001,0,46125,47104,40400,0
LULRC DEF *+1 
 OCT 7,40001,0,46125,46123,52000,0
LLIRC DEF *+1 
 OCT 7,40001,0,46114,44515,52000,0
TSIRC DEF *+1 
 OCT 7,40001,0,52123,44440,20000,0
SRC.. DEF *+1 
 OCT 7,40001,0,51440,20040,20000,0
STKRC DEF *+1 
 OCT 7,40001,0,51524,45523,55000,0
* 
ADWZ BSS 1
W.W BSS 1 
PAR1 BSS 1
PAR2 BSS 1
PAR3 BSS 1
PAR4 BSS 1
PAR5 BSS 1
..TB ABS .TABS
..AT ABS .ATAS
..BT ABS .BTAS
..RC ABS .RSIZ
* 
MAKTB NOP 
 CLB
 JSB BREC 
 LDA PAR1 
 ADA .+6
 LDB PCNTR
 STB 0,I
 LDA PAR1 
 JSB WRBRE
 JMP MAKTB,I
* 
MAKTC NOP 
 JSB MAKTB
 LDA PAR2 
 STA INST 
 CLA
 CLB,INB
 JSB BREC 
 CLB
 JSB BREC 
 JMP MAKTC,I
* 
MAKTA NOP 
 JSB MAKTB
 LDA PCNTR
 INA
 STA INST 
 CLA,INA
 CLB,INB
 JSB BREC 
 LDA PAR2 
 STA ADWZ 
 LDA PAR3 
 STA IDUML
....1 LDA IDUML 
 CPA PAR4 
 JMP ....2
 ISZ IDUML
 NOP
 CLA
 STA W.W
....4 LDA W.W 
 CPA PAR5 
 JMP ....1
 ISZ W.W
 LDA ADWZ,I 
 STA INST 
 CLA
 CLB,INB
 JSB BREC 
 ISZ ADWZ 
 JMP ....4
....2 CLB 
 JSB BREC 
 JMP MAKTA,I
* 
PASCC LDA XEQT
 JSB COR.A
 STA STUFF
 JSB WRILN
 JSB MOVEO
 DEF MSG13     PRINT HEADING
 JSB WRILN
 JSB WRILN
 LDB LUNIN
 CPB .+2
 JMP VERIF
 CPB .+1
 JMP COMPW
COMPI JSB WRILN 
 JSB INSYM
 LDA SY 
 CPA PRGSY
 RSS
 JMP ERTHR
 JSB INSYM
 LDA SY 
 CPA IDENT
 RSS
 JMP ERTWO
 LDA IDADR
 LDB PRNAM
 JSB MOVES
 DEC 5
 LDA IDADR
 LDB TEST0
 JSB COMPA
 DEC 5
 ISZ LIOPZ
 EXT OPEN 
 JSB OPEN 
 DEF *+4
 DEF ICDB 
 DEF IERR 
 DEF PASBI
 LDA IDADR
 LDB PRUNW
 JSB MOVES
 DEC 3
 LDA PRUNZ
 JSB WRBRE
 LDA PRUNA
 JSB WRBRE
 LDA PRUNB
 JSB WRBRE
 LDA PRUNC
 JSB WRBRE
 LDA PRUND
 JSB WRBRE
 JSB INSYM
 LDA SY 
 CPA LPARE
 RSS
 JMP ERNIN
* 
COSRC JSB INSYM 
 LDA SY 
 CPA IDENT
 RSS
 JMP ERTWB
 LDA IDADR
 LDB FINPU
 JSB COMPA
 DEC 5
 JMP IFTRU
 LDA IDADR
 LDB FOUTP
 JSB COMPA
 DEC 5
 JMP OFTRU
 CLA
 JSB ERROR
 JMP BIFUN
* 
TEST0 DEF *+1 
 ASC 5,TEST0
FINPU DEF *+1 
 ASC 5,INPUT
FOUTP DEF *+1 
 ASC 5,OUTPUT 
* 
ERTHR LDA .+3 
 JSB ERROR
 JMP BLENT
ERTWO LDA .+2 
 JMP *-3
ERNIN LDA .+9 
 JSB ERROR
 LDA SY 
 JMP DOUNT
ERTWB LDA .+2 
 JSB ERROR
 JMP PRUNT
IFTRU CLA,INA 
 STA IFLAG
 JMP BIFUN
OFTRU CLA,INA 
 STA OFLAG
BIFUN JSB INSYM 
PRUNT LDA SY
 CPA COMMA
 JMP COSRC
DOUNT CPA RPARE 
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
 LDA OFLAG
 SZA
 JMP *+3
 LDA .+20 
 JSB ERROR
BLENT LDA LWAVM     INITIALIZE STACK. 
 INA
 STA STOP 
 INA
 STA ST2ND
 INA
 STA ST3RD
 JSB UNION
 DEF BLBES
 DEF STBES
 DEF FSYS.
 CLA
 CLB,INB
 RSS
 DEF FSYS.
 JSB BLOCK
 LDB LUNIN
 CPB .+1
 JMP TOENG
TOEND JSB %READ 
 DEF *+5
 DEF LUNIN
 DEF LINE 
 DEF LLNG 
 CLB
 SZB
 JMP TOEND
TOENG LDA .+22
 LDB SY 
 CPB PERIO
 RSS
 JSB ERROR
 LDA .+31 
 JSB EMIT 
 CLB
 JSB BREC 
 LDA .+2
 JSB BTASC
 LDA VSIZE
 CMA,INA
 ADA STKSZ
 SSA,RSS
 JMP *+3
 LDA .+49 
 JSB ERROR
 LDA PRNAM
 LDB TEST0
 JSB COMPA
 DEC 5
 JSB PRTAB
 LDA TARC 
 STA PAR1 
 LDA TAB
 STA PAR2 
 CCA
 STA PAR3 
 LDA T
 STA PAR4 
 LDA ..TB 
 STA PAR5 
 JSB MAKTA
 LDA ATARC
 STA PAR1 
 LDA ATAB 
 STA PAR2 
 CLA
 STA PAR3 
 LDA A
 STA PAR4 
 LDA ..AT 
 STA PAR5 
 JSB MAKTA
 LDA BTARC
 STA PAR1 
 LDA BTAB 
 STA PAR2 
 CLA
 STA PAR3 
 LDA B
 STA PAR4 
 LDA ..BT 
 STA PAR5 
 JSB MAKTA
 LDA STARC
 STA PAR1 
 LDA STAB 
 STA PAR2 
 CCA
 STA PAR3 
 CCA
 ADA SX 
 ARS
 STA PAR4 
 CLA,INA
 STA PAR5 
 JSB MAKTA
 LDA RCORC
 STA PAR1 
 LDA RCONS
 STA PAR2 
 CLA
 STA PAR3 
 LDA C2 
 STA PAR4 
 LDA ..RC 
 STA PAR5 
 JSB MAKTA
 LDA LUNRC
 STA PAR1 
 LDA LUNDA
 STA PAR2 
 JSB MAKTC
 LDA LULRC
 STA PAR1 
 LDA LULST
 STA PAR2 
 JSB MAKTC
 LDA LLIRC
 STA PAR1 
 LDA LLIMT
 STA PAR2 
 JSB MAKTC
 LDA TSIRC
 STA PAR1 
 CLA,INA
 INA
 JSB BTASC
 CCA
 ADA VSIZE
 STA PAR2 
 JSB MAKTC
 LDA STKRC
 STA PAR1 
 LDA STKSZ
 STA PAR2 
 JSB MAKTC
 CLA,INA
 JSB BTASC
 LDA LAST 
 STA SRE1 
 LDA SRC..
 STA PAR1 
 LDA SREG 
 STA PAR2 
 CLA
 STA PAR3 
 LDA .+10 
 STA PAR4 
 CLA,INA
 STA PAR5 
 JSB MAKTA
 LDA .+4
 CMA,INA
 ADA STKSZ
 ADA 0
 ADA PCNTR
 STA PCNTR
 LDA RELBS
 STA PAR1 
 JSB MAKTB
 CLA
 STA INST 
 CLA,INA
 CLB,INB
 JSB BREC 
 CLB
 JSB BREC 
 CLA,INA
 JSB BTASC
 LDA LAST 
 JSB TABSC
 LDA ADR
 LDB ENRC 
 ADB .+3
 STA 1,I
 LDA ENRC 
 JSB WRBRE
 JSB WRITF
 DEF *+4
 DEF ICDB 
 DEF IERR 
 DEF PNBUF
 EXT CLOSE
 JSB CLOSE
 DEF *+2
 DEF ICDB 
 JSB EMPTS
 DEF ERRS 
 JMP EXITZ
 JMP .TERM
* 
MSG13 DEC 38
 ASC 19,1PASCAL-S FOR HP-2100 (RTE) VERSION 1 
STKSZ ABS ..SSZ+..SSZ   STACKSIZE 
FSYS. BSS 4 
* 
ASKIN NOP 
 JSB TYPEM
 DEF .MORE
 JSB EXEC 
 DEF *+5
 DEF .+1
 DEF .401B
 DEF LINED
 DEF .-2
 LDA LINED
 CPA NOASC
 JMP ASKIN,I
 CPA YEASC
 RSS
 JMP ASKIN+1
 ISZ ASKIN
 JMP ASKIN,I
* 
.MORE DEC 13
 ASC 13, ANOTHER TEXT FOLLOWING ? 
NOASC ASC 1,NO
YEASC ASC 1,YE
.401B OCT 401 
* 
SREG DEF *+1
 DEC 0,0,0,0,0,0,-1,0 
SRE1 DEC 0,0
* 
FSYS BSS 4
ISFUN BSS 1 
LEVEL BSS 1     PROCEDURE BLOCK.
DX BSS 1
PRT BSS 1 
PRB BSS 1 
XBLOK BSS 1 
BLOCK NOP 
 JSB STACK
FSYSP DEF FSYS
BACKB JSB UNSTK 
 STA ISFUN
 STB LEVEL
 LDA BLOCK
 ADA .-2
 LDA 0,I
 LDB FSYSP
 JSB MOVES
 DEC 4
 LDA .+5
 STA DX 
 LDA T
 STA PRT
 LDA .+5
 LDB LEVEL
 CMB,INB
 ADB LMAX 
 SSB
 JMP FATAL
 JSB CLSET
 DEF BLSET
 LDA LPARE
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA .+14 
 JSB TEST 
 DEF BLSET
 DEF FSYS 
 JSB ENTBL
 LDA LEVEL
 ADA DIPLY
 LDB B
 STB 0,I
 STB PRB
 LDA PRT
 JSB TABSC
 LDA NOTYP
 STA TYP
 LDA PRB
 STA REF
 LDA PRT
 JSB TABPK
 LDA SY 
 CPA LPARE
 RSS
 JMP *+5
 LDA .-2
 ADA LEVEL
 SSA,RSS
 JSB PRLST
 LDA PRB
 JSB BTASC
 LDA T
 STA LASTP
 LDA DX 
 STA PSIZE
 LDA PRB
 JSB BTAPK
 LDA ISFUN
 SZA,RSS
 JMP BLMID
 LDA SY 
 CPA COLON
 RSS
 JMP BLMIP
 JSB INSYM
 LDA SY 
 CPA IDENT
 RSS
 JMP BLMIQ
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA XBLOK
 JSB INSYM
 LDA XBLOK
 SZA,RSS
 JMP BLMID
 LDA XBLOK
 JSB TABSC
 LDA OBJ
 CPA TYPE1
 JMP *+4
 LDA .+29 
 JSB ERROR
 JMP BLMID
 LDA TYP
 JSB INSET
 DEF STYPS
 JMP *+10 
 LDA TYP
 STA TYPBL
 LDA PRT
 JSB TABSC
 LDA TYPBL
 STA TYP
 LDA PRT
 JSB TABPK
 JMP *+3
 LDA .+15 
 JSB ERROR
 JMP BLMID
BLMIP LDA .+5 
 JSB ERROR
 JMP BLMID
BLMIQ LDA FSYSP 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
BLSEP DEF BLSET 
 LDA .+2
 JSB SKIP 
 DEF BLSET
BLMID LDA SY
 CPA SEMIC
 JMP *+4
 LDA .+14 
 JSB ERROR
 RSS
 JSB INSYM
 LDA SY 
 CPA EXTSY
 JMP EXTDO   EXTERNAL BODY OF PROCEDURE 
RPBLK LDA SY
 CPA CONSY
 JSB CNDEC
 LDA SY 
 CPA TYPSY
 JSB TYDEC
 LDA SY 
 CPA VARSY
 JSB VRDEC
 LDA PRB
 JSB BTASC
 LDA DX 
 STA VSIZE
 LDA PRB
 JSB BTAPK
WHBLK LDA SY
 CPA PROSY
 RSS
 CPA FUNSY
 RSS
 JMP *+3
 JSB PRDEC
 JMP WHBLK
 JSB CLSET
 DEF BLSET
 LDA BEGSY
 JSB ADSET
 DEF BLSET
 JSB UNION
 DEF BLBES
 DEF STBES
 DEF BLSEM
 LDA .+56 
 JSB TEST 
 DEF BLSET
 DEF BLSEM
 LDA SY 
 JSB INSET
 DEF STBES
 JMP RPBLK
 LDA PRT
 JSB TABSC
 LDA LC 
 STA ADR
 LDA PRT
 JSB TABPK
 JSB INSYM
 JSB CSTMT
OWBLK LDA SY
 CPA SEMIC
 JMP *+4
 JSB INSET
 DEF STBES
 JMP WHEXT
 LDA SY 
 CPA SEMIC
 JMP *+4
 LDA .+14 
 JSB ERROR
 RSS
 JSB INSYM
 JSB CSTMT
 JMP OWBLK
WHEXT LDA SY
 CPA ENDSY
 JMP *+4
 LDA .+57 
 JSB ERROR
 RSS
 JSB INSYM
EXTRT LDA FSYSP 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA PERIO
 JSB ADSET
 DEF BLSET
 JSB CLSET
 DEF BLSEM
 LDA .+6
 JSB TEST 
 DEF BLSET
 DEF BLSEM
 JMP BACKB
TYPBL BSS 1 
BLSET BSS 4 
BLSEM BSS 4 
CSTMT NOP 
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA ENDSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
 JMP CSTMT,I
* 
PRLST NOP     PROCEDURE PARAMETERLIST;
 JSB INSYM
 LDA NOTYP
 STA TP1
 CLA
 STA RF1
 STA SZ1
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 JSB CLSET
 DEF BLSEM
 LDA RPARE
 JSB ADSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSEM
 LDA VARSY
 JSB ADSET
 DEF BLSEM
 LDA .+7
 JSB TEST 
 DEF BLSEM
 DEF BLSET
WHPRL LDA SY
 CPA IDENT
 RSS
 CPA VARSY
 RSS
 JMP WHPRX
 CLB
 STB VALPR
 CPA VARSY
 JMP *+3
 ISZ VALPR
 RSS
 JSB INSYM
 LDA T
 STA T01
 JSB ENTVA
 LDA SY 
 CPA COMMA
 RSS
 JMP *+4
 JSB INSYM
 JSB ENTVA
 JMP *-6
 LDA .+5
 LDB SY 
 CPB COLON
 JMP *+3
 JSB ERROR
 JMP PRLLL
 JSB INSYM
 LDA SY 
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP PRMMM
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA XP1
 JSB INSYM
 LDA XP1
 SZA,RSS
 JMP PRMMM
 JSB TABSC
 LDA .+29 
 LDB OBJ
 CPB TYPE1
 JMP *+3
 JSB ERROR
 JMP PRMMM
 LDA TYP
 STA TP1
 LDA REF
 STA RF1
 LDA VALPR
 CLB,INB
 SZA
 LDB ADR
 STB SZ1
PRMMM LDA FSYSP 
 LDB BLSEP
 JSB MOVES
 DEC 4
 JSB CLSET
 DEF BLSEM
 LDA SEMIC
 JSB ADSET
 DEF BLSEM
 LDA RPARE
 JSB ADSET
 DEF BLSEM
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 LDA .+14 
 JSB TEST 
 DEF BLSEM
 DEF BLSET
PRLLL LDA T 
 CMA,INA
 ADA T01
 SSA,RSS
 JMP PRZWZ
 ISZ T01
 LDA T01
 JSB TABSC
 LDA TP1
 STA TYP
 LDA RF1
 STA REF
 LDA VALPR
 STA NORMA
 LDA DX 
 STA ADR
 LDA LEVEL
 STA LEV
 LDA T01
 JSB TABPK
 LDA SZ1
 ADA DX 
 STA DX 
 JMP PRLLL
PRZWZ LDB SY
 CPB RPARE
 JMP WHPRL
 CPB SEMIC
 JMP *+4
 LDA .+14 
 JSB ERROR
 CPB COMMA
 JSB INSYM
 JSB CLSET
 DEF BLSEM
 LDA IDENT
 JSB ADSET
 DEF BLSEM
 LDA VARSY
 JSB ADSET
 DEF BLSEM
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA RPARE
 JSB ADSET
 DEF BLSET
 LDA .+6
 JSB TEST 
 DEF BLSEM
 DEF BLSET
 JMP WHPRL
WHPRX LDA .+4 
 LDB SY 
 CPB RPARE
 JMP *+3
 JSB ERROR
 JMP PRLST,I
 JSB INSYM
 JSB CLSET
 DEF BLSEM
 LDA SEMIC
 JSB ADSET
 DEF BLSEM
 LDA COLON
 JSB ADSET
 DEF BLSEM
 LDA .+6
 JSB TEST 
 DEF BLSEM
 DEF FSYS 
 JMP PRLST,I
* 
TP1 BSS 1 
RF1 BSS 1 
SZ1 BSS 1 
XP1 BSS 1 
T01 BSS 1 
VALPR BSS 1 
TYDEC NOP    PROCEDURE TYPEDECLARATION; 
 JSB INSYM
 JSB CLSET
 DEF BLSEM
 LDA IDENT
 JSB ADSET
 DEF BLSEM
 LDA .+2
 JSB TEST 
 DEF BLSEM
 DEF BLBES
TYDCW LDA SY
 CPA IDENT
 RSS
 JMP TYDEC,I
 LDA TYPE1
 JSB ENTER
 DEF ID 
 LDA T
 STA T01
 JSB INSYM
 LDB SY 
 CPB EQL
 JMP *+5
 LDA .+16 
 JSB ERROR
 LDA SY 
 CPA BECOM
 JSB INSYM
 JSB TYCAL
 LDA T01
 JSB TABSC
 LDA TP1
 STA TYP
 LDA RF1
 STA REF
 LDA SZ1
 STA ADR
 LDA T01
 JSB TABPK
 JSB TESTS
 JMP TYDCW
TYCAL NOP 
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+5
 DEF BLSET
 DEF TP1
 DEF RF1
 DEF SZ1
 JSB TYPSB
 JMP TYCAL,I
* 
ELTP BSS 1
ELRF BSS 1
ELSZ BSS 1
FTYP BSS 4
TPTYP BSS 1 
RF BSS 1
SZ BSS 1
XTYP BSS 1
OFFST BSS 1 
T0 BSS 1
T1 BSS 1
LOWA BSS 3
HIGHA BSS 3 
AREF BSS 1
ARSZ BSS 1
* 
TYPSB NOP  PROCEDURE TYP
 JSB STACK
 DEF ELTP 
BACKT JSB UNSTK 
 SZA
 JMP ARATP
 LDA TYPSB
 ADA .-5
 STA TYPSB
 LDA TYPSB,I
 LDB FTYPA
 JSB MOVES
 DEC 4
 ISZ TYPSB
 LDA TYPSB
 JSB GETAD
 STA TPTYP
 ISZ TYPSB
 LDA TYPSB
 JSB GETAD
 STA RF 
 ISZ TYPSB
 LDA TYPSB
 JSB GETAD
 STA SZ 
 LDA NOTYP
 STA TPTYP,I
 CLA
 STA RF,I 
 STA SZ,I 
 LDA .+10 
 JSB TEST 
 DEF TYBES
FTYPA DEF FTYP
 LDA SY 
 JSB INSET
 DEF TYBES
 JMP BACKT
 LDA SY 
 CPA IDENT
 JMP TYPS1
 CPA ARRSY
 JMP TYPS2
 JSB INSYM
 JSB ENTBL
 LDA RECDS
 STA TPTYP,I
 LDA B
 STA RF,I 
 LDA .+5
 LDB LEVEL
 CPB LMAX 
 JMP FATAL
 ISZ LEVEL
 LDA LEVEL
 ADA DIPLY
 LDB B
 STB 0,I
 CLA
 STA OFFST
WHTYP LDA SY
 CPA ENDSY
 JMP WHTYX
 CPA IDENT
 JMP *+9
 CPA SEMIC
 JMP TYPS3
 CPA COLON
 JMP TYPS3
 JSB INSET
 DEF FTYP 
 JMP TYPS3
 JMP WHTYX
 LDA T
 STA T0 
 JSB ENTVA
 LDA SY 
 CPA COMMA
 RSS
 JMP *+4
 JSB INSYM
 JSB ENTVA
 JMP *-6
 CPA COLON
 JMP *+4
 LDA .+5
 JSB ERROR
 RSS
 JSB INSYM
 LDA T
 STA T1 
 LDA FTYPA
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA ENDSY
 JSB ADSET
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+5
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 DEF ST3RD,I
 JSB TYPSB
WHTYY LDA T1
 CMA,INA
 ADA T0 
 SSA,RSS
 JMP TYPS3
 ISZ T0 
 LDA T0 
 JSB TABSC
 LDA ELTP 
 STA TYP
 LDA ELRF 
 STA REF
 CLA,INA
 STA NORMA
 LDA OFFST
 STA ADR
 LDA T0 
 JSB TABPK
 LDA OFFST
 ADA ELSZ 
 STA OFFST
 JMP WHTYY
TYPS3 LDB SY
 CPB ENDSY
 JMP WHTYX
 CPB SEMIC
 JMP *+5
 LDA .+14 
 JSB ERROR
 LDB SY 
 CPB COMMA
 JSB INSYM
 JSB CLSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 LDA ENDSY
 JSB ADSET
 DEF BLSET
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA .+6
 JSB TEST 
 DEF BLSET
 DEF FTYP 
 JMP WHTYP
WHTYX LDA RF,I
 JSB BTASC
 LDA OFFST
 STA VSIZE
 CLA
 STA PSIZE
 LDA RF,I 
 JSB BTAPK
 LDA OFFST
 STA SZ,I 
 JSB INSYM
 CCA
 ADA LEVEL
 STA LEVEL
TYPS4 JSB CLSET 
 DEF BLSET
 LDA .+6
 JSB TEST 
 DEF FTYP 
 DEF BLSET
 JMP BACKT
TYPS1 JSB GTLOC 
 DEF ID 
 LDA LOC
 STA XTYP 
 SZA,RSS
 JMP TYPS5
 JSB TABSC
 LDA OBJ
 CPA TYPE1
 RSS
 JMP TYPS6
 LDA TYP
 STA TPTYP,I
 LDA REF
 STA RF,I 
 LDA ADR
 STA SZ,I 
 LDA .+30 
 LDB TPTYP,I
 CPB NOTYP
 JSB ERROR
 JMP TYPS5
TYPS6 LDA .+29
 JSB ERROR
TYPS5 JSB INSYM 
 JMP TYPS4
TYPS2 JSB INSYM 
 LDA SY 
 CPA LBRAC
 JMP *+5
 LDA .+11 
 JSB ERROR
 LDA SY 
 CPA LPARE
 JSB INSYM
 LDA ARAYS
 STA TPTYP,I
 CLA,INA
 JMP *+3
 DEF RF,I 
 DEF SZ,I 
 JSB TYPSB
 JMP TYPS4
* 
ARATP LDA TYPSB    PROCEDURE ARRAYTYP 
 ADA .-3
 STA TYPSB
 LDA TYPSB
 JSB GETAD
 STA AREF 
 ISZ TYPSB
 LDA TYPSB
 JSB GETAD
 STA ARSZ 
 LDA FTYPA
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA RBRAC
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 LDA OFSY 
 JSB ADSET
 DEF BLSET
 JSB CNSTT
 DEF BLSET
 DEF LOWA 
 LDA LOWA 
 CPA REALS
 RSS
 JMP *+7
 LDA .+27 
 JSB ERROR
 LDA INTS 
 STA LOWA 
 CLA
 STA LOWA+1 
 LDA SY 
 CPA COLON
 JMP *+4
 LDA .+13 
 JSB ERROR
 RSS
 JSB INSYM
 LDA FTYPA
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA RBRAC
 JSB ADSET
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 LDA OFSY 
 JSB ADSET
 DEF BLSET
 JSB CNSTT
 DEF BLSET
 DEF HIGHA
 LDA HIGHA
 CPA LOWA 
 JMP *+5
 LDA .+27 
 JSB ERROR
 LDA LOWA+1 
 STA HIGHA+1
 LDA LOWA 
 STA *+4
 LDA LOWA+1 
 LDB HIGHA+1
 JSB ENTAR
 NOP
 LDA A
 STA AREF,I 
 LDA SY 
 CPA COMMA
 RSS
 JMP *+10 
 JSB INSYM
 LDA ARAYS
 STA ELTP 
 CLA,INA
 JMP *+3
 DEF ST2ND,I
 DEF ST3RD,I
 JSB TYPSB
 JMP ARATW
 CPA RBRAC
 JMP *+5
 LDA .+12 
 JSB ERROR
 LDA SY 
 CPA RPARE
 JSB INSYM
 LDA SY 
 CPA OFSY 
 JMP *+4
 LDA .+8
 JSB ERROR
 RSS
 JSB INSYM
 CLA
 JMP *+5
 DEF FTYP 
 DEF STOP,I 
 DEF ST2ND,I
 DEF ST3RD,I
 JSB TYPSB
ARATW LDA AREF,I
 JSB ATASC
 LDA LOW
 CMA,INA
 ADA HIGH 
 INA
 LDB ELSZ 
 JSB MPY
 STB ARSZ,I 
 STB SIZE 
 LDA ELTP 
 STA ELTYP
 LDA ELRF 
 STA ELREF
 LDA ELSZ 
 STA ELSIZ
 LDA AREF,I 
 JSB ATAPK
 JMP BACKT
* 
VRDEC NOP   PROCEDURE VARIABLEDECLARATION;
 JSB INSYM
WHVRD LDA SY
 CPA IDENT
 RSS
 JMP VRDEC,I
 LDA T
 STA T01
 JSB ENTVA
 LDA SY 
 CPA COMMA
 RSS
 JMP *+4
 JSB INSYM
 JSB ENTVA
 JMP *-6
 CPA COLON
 JMP *+4
 LDA .+5
 JSB ERROR
 RSS
 JSB INSYM
 LDA T
 STA XP1
 JSB TYCAL
WHVRA LDA XP1 
 CMA,INA
 ADA T01
 SSA,RSS
 JMP WHVRX
 ISZ T01
 LDA T01
 JSB TABSC
 LDA TP1
 STA TYP
 LDA RF1
 STA REF
 LDA LEVEL
 STA LEV
 LDA DX 
 STA ADR
 CLA,INA
 STA NORMA
 LDA T01
 JSB TABPK
 LDA DX 
 ADA SZ1
 STA DX 
 JMP WHVRA
WHVRX JSB TESTS 
 JMP WHVRD
* 
ISFPD BSS 1 
PRDEC NOP     PROCEDURE PROCDECLARATION;
 JSB STACK
 DEF ISFPD
BACKP JSB UNSTK 
 CLA
 STA ISFPD
 LDA SY 
 CPA FUNSY
 ISZ ISFPD
 JSB INSYM
 LDA SY 
 CPA IDENT
 JMP PRDE1
 LDA .+2
 JSB ERROR
 CLA
 STA IDBUF
 LDA ALNG 
 CMA,INA
 STA TTTTT
 LDB BLANK
 JSB ADBUF
 DEF IDBUF
 ISZ TTTTT
 JMP *-4
PRDE1 LDB ISFPD 
 LDA FUNKT
 SZB,RSS
 LDA PROZE
 JSB ENTER
 DEF ID 
 LDA T
 JSB TABSC
 CLA,INA
 STA NORMA
 LDA T
 JSB TABPK
 JSB INSYM
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA ISFPD
 LDB LEVEL
 INB
 RSS
 DEF BLSET
 JSB BLOCK
 LDA SY 
 CPA SEMIC
 JMP *+4
 LDA .+14 
 JSB ERROR
 RSS
 JSB INSYM
 LDA .+32 
 ADA ISFPD
 JSB EMIT 
 JMP BACKP
* 
SKIP NOP PROCEDURE SKIP 
 JSB ERROR
 LDA SKIP,I 
 ISZ SKIP 
 STA *+5
 CLA,INA
 STA SKFLG
SKIPL LDA SY
 JSB INSET
 NOP
 RSS
 JMP *+3
 JSB INSYM
 JMP SKIPL
 LDA SKFLG
 SZA
 JSB ENDSK
 JMP SKIP,I 
* 
TEST NOP PROCEDURE TEST 
 STA TESTN
 LDA TEST,I 
 ISZ TEST 
 STA *+3
 LDA SY 
 JSB INSET
 NOP
 JMP *+3
 ISZ TEST 
 JMP TEST,I 
 LDA *-4
 STA *+6
 LDA TEST,I 
 ISZ TEST 
 STA *+2
 JSB UNION
 NOP
 NOP
 DEF S1S2L
 LDA TESTN
 JSB SKIP 
 DEF S1S2L
 JMP TEST,I 
* 
TESTN BSS 1 
S1S2L BSS 4 
* 
TESTS NOP     PROCEDURE TESTSEMICOLON;
 LDA SY 
 CPA SEMIC
 JMP *+7
 LDA .+14 
 JSB ERROR
 LDA SY 
 CPA COMMA
 RSS
 CPA COLON
 JSB INSYM
 LDA BLBEA
 LDB TESTY
 JSB MOVES
 DEC 4
 LDA IDENT
 JSB ADSET
TESTY DEF TESTZ 
 LDA .+6
 JSB TEST 
 DEF TESTZ
 DEF FSYS 
 JMP TESTS,I
* 
BLBEA DEF BLBES 
TESTZ BSS 4 
* 
ENTER NOP     PROCEDURE ENTER 
 STA KENTE
 LDA .+1
 LDB T
 CPB TMAX 
 JMP FATAL
 CLA
 JSB TABSC
 LDA ENTER,I
 LDB NAMAD
 JSB MOVES
 DEC 5
 CLA
 JSB TABPK
 LDA DIPLY
 ADA LEVEL
 LDA 0,I
 JSB BTASC
 LDA LAST 
 STA JENTE
 STA LENTE
WENTE JSB TABSC 
 LDA ENTER,I
 LDB NAMAD
 JSB COMPA
 DEC 5
 JMP *+4
 LDA LINK 
 STA JENTE
 JMP WENTE
 LDA JENTE
 SZA
 JMP ERENT
 ISZ T
 LDA T
 JSB TABSC
 LDA ENTER,I
 LDB NAMAD
 JSB MOVES
 DEC 5
 LDA LENTE
 STA LINK 
 LDA KENTE
 STA OBJ
 LDA NOTYP
 STA TYP
 LDA LEVEL
 STA LEV
 CLA
 STA REF
 STA ADR
 LDA T
 JSB TABPK
 LDA LEVEL
 ADA DIPLY
 LDA 0,I
 STA KENTE
 JSB BTASC
 LDA T
 STA LAST 
 LDA KENTE
 JSB BTAPK
 JMP *+3
ERENT LDA .+1 
 JSB ERROR
 ISZ ENTER
 JMP ENTER,I
* 
KENTE BSS 1 
JENTE BSS 1 
LENTE BSS 1 
* 
GTLOC NOP    FUNCTION LOC 
 LDA LEVEL
 STA KENTE
 CLA VALUE
 JSB TABSC
 LDA GTLOC,I
 LDB NAMAD
 JSB MOVES
 DEC 5
 CLA
 JSB TABPK
RPLOC LDA KENTE 
 ADA DIPLY
 LDA 0,I
 JSB BTASC
 LDA LAST 
 STA JENTE
WHLOC JSB TABSC 
 LDA NAMAD
 LDB GTLOC,I
 JSB COMPA
 DEC 5
 JMP *+4
 LDA LINK 
 STA JENTE
 JMP WHLOC
 CCA
 ADA KENTE
 STA KENTE
 SSA
 JMP *+4
 LDA JENTE
 SZA,RSS
 JMP RPLOC
 CLA
 LDB JENTE
 SZB,RSS
 JSB ERROR
 LDA JENTE
 STA LOC
 ISZ GTLOC
 JMP GTLOC,I
* 
LOC BSS 1 
* 
ENTVA NOP     PROCEDURE ENTERVARIABLE;
 LDA SY 
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP ENTVA,I
 LDA VARIA
 JSB ENTER
 DEF ID 
 JSB INSYM
 JMP ENTVA,I
* 
CNDEC NOP   PROCEDURE CONSTANTDECLARATION;
 JSB INSYM
 JSB CLSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 LDA .+2
 JSB TEST 
 DEF BLSET
 DEF BLBES
WHCND LDA SY
 CPA IDENT
 RSS
 JMP CNDEC,I
 LDA KONST
 JSB ENTER
 DEF ID 
 JSB INSYM
 LDA SY 
 CPA EQL
 JMP *+5
 LDA .+16 
 JSB ERROR
 LDA SY 
 CPA BECOM
 JSB INSYM
 LDA FSYSP
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA IDENT
 JSB ADSET
 DEF BLSET
 JSB CNSTT
 DEF BLSET
 DEF CCNST
 LDA T
 JSB TABSC
 CLA
 STA REF
 LDA CCNST
 STA TYP
 CPA REALS
 JMP *+3
 LDA CCNS1
 JMP *+5
 LDA CCNS1
 LDB CCNS1+1
 JSB ENTRL
 LDA C1 
 STA ADR
 LDA T
 JSB TABPK
 JSB TESTS
 JMP WHCND
* 
CCNST BSS 1 
CCNS1 BSS 2 
* 
CNSTT NOP   PROCEDURE CONSTANT
 LDA CNSTT,I
 STA CNSTP
 STA CNSTQ
 STA CNSTR
 ISZ CNSTT
 LDA CNSTT,I
 STA CADRL
 ISZ CNSTT
 LDA NOTYP
 STA CADRL,I
 CLB
 LDA CADRL
 INA
 STB 0,I
 LDA .+50 
 JSB TEST 
 DEF COBES
CNSTP NOP 
 LDA SY 
 JSB INSET
 DEF COBES
 JMP CNSTT,I
 LDA SY 
 CPA CHARC
 JMP CNSTZ
 CLA
 STA SIGNC
 LDA SY 
 CPA PLUS 
 JMP *+5
 CPA MINUS
 RSS
 JMP *+3
 ISZ SIGNC
 JSB INSYM
 LDA SY 
 CPA IDENT
 JMP CNSTA
 CPA INTCO
 JMP CNSTB
 CPA REALC
 JMP CNSTC
 LDA .+50 
 JSB SKIP 
CNSTR NOP 
 JMP CNSTX
CNSTA JSB GTLOC 
 DEF ID 
 LDA LOC
 SZA,RSS
 JMP CNSTD
 JSB TABSC
 LDA OBJ
 CPA KONST
 JMP *+4
 LDA .+25 
 JSB ERROR
 JMP CNSTD
 LDA TYP
 STA CADRL,I
 ISZ CADRL
 CPA REALS
 JMP *+7
 LDA SIGNC
 LDB ADR
 SZA
 CMB,INB
 STB CADRL,I
 JMP CNSTD
 LDA ADR
 JSB RCOSC
CNSTE LDA SIGNC 
 SZA,RSS
 JMP *+5
 LDB RCNST
 LDA RCNST+1
 JSB COMPQ
 JMP *+3
 LDB RCNST
 LDA RCNST+1
 STB CADRL,I
 ISZ CADRL
 STA CADRL,I
CNSTD JSB INSYM 
 JMP CNSTX
CNSTB LDA INTS
 STA CADRL,I
 ISZ CADRL
 LDA SIGNC
 LDB INUM 
 SZA
 CMB,INB
 STB CADRL,I
 JSB INSYM
 JMP CNSTX
CNSTC LDA REALS 
 STA CADRL,I
 LDA RNUM 
 STA RCNST
 LDA RNUM+1 
 STA RCNST+1
 ISZ CADRL
 JMP CNSTE
CNSTZ LDA CHARS 
 STA CADRL,I
 LDA INUM 
 ISZ CADRL
 STA CADRL,I
 JSB INSYM
CNSTX JSB CLSET 
 DEF BLSEM
 LDA .+6
 JSB TEST 
CNSTQ NOP 
 DEF BLSEM
 JMP CNSTT,I
* 
CADRL BSS 1 
SIGNC BSS 1 
* 
COMPQ NOP  COMPUTES THE NEGATIVE OF A FLOATING POINT
 CMB,CLE   NUMBER.
 XOR HIMSK
 ADA .400B
 SEZ,RSS
 JMP COMPQ,I
 INB
 CPB BIT15
 JMP *+4
 CPB PCMSK
 RSS
 JMP COMPQ,I
 ADB PCMSK
 SLA,RAR
 IOR XSEXP
 SSB,RSS
 INA,RSS
 ADA .-1
 RAL
 AND .377 
 JMP COMPQ,I
* 
HIMSK OCT 177400
BIT15 OCT 100000
PCMSK OCT 140000
XSEXP OCT 77600 
* 
STACK NOP    WHEN A ROUTINE MUST BE CALLED
 STA TQQQQ   FROM WITHIN ITSELF, ITS
 STB TQQQQ+1 ENTRY POINT (PROG) FOR 
 LDA .-2     THIS PURPOSE MUST BE 
 ADA STACK   WRITTEN AS FOLLOWS:
ST2 STA ST1    TEMPS BSS N (ROUTINE'S DATA) 
 LDA ST1,I     PROG  NOP (REENTRY POINT)
 JSB PUSHQ           JSB STACK
 LDA ST1             DEF TEMPS
 CPA STACK,I    BACK JSB UNSTK (REEXIT CALL)
 JMP *+3          <ROUTINE BODY>
 ADA .-1         ... WHERE, TO REEXIT, WE 
 JMP ST2         DO    JMP BACK 
 LDA TQQQQ
 LDB TQQQQ+1
 ISZ STACK
 ISZ STACK
 JMP STACK,I
* 
TQQQQ BSS 2 
* 
UNSTK NOP    FOR REEXIT FROM A REENTRANT
 STA TQQQQ   ROUTINE
 STB TQQQQ+1
 LDB UNSTK
 ADB .-4
 STB ST1
 ADB .+2
 LDB 1,I
ST3 LDA STOP,I
 ISZ STOP 
 ISZ ST2ND
 ISZ ST3RD
 STA 1,I
 CPB ST1
 JMP *+3
 INB
 JMP ST3
 LDB TQQQQ+1
 STA TQQQQ+1
 LDA TQQQQ
 JMP TQQQQ+1,I
* 
ST1 BSS 1 
STOP BSS 1    STACK TOP.
ST2ND BSS 1   SECOND PLACE IN STACK 
ST3RD BSS 1   THIRD PLACE IN STACK
* 
PUSHQ NOP   PUSHES CONTENTS OF REGISTER A 
 CCB        INTO THE STACK
 ADB STOP 
 CPB STUFF
 JMP OVFLO
 STB STOP 
 CCB
 ADB ST2ND
 STB ST2ND
 CCB
 ADB ST3RD
 STB ST3RD
 STA STOP,I 
 JMP PUSHQ,I
* 
STUFF BSS 1  END OF STACK (STUFF<STOP, NORMALLY)
* 
OVFLO JSB TYPEM    STACK OVERFLOW 
 DEF MSG8 
 JMP .TERM
MSG8 DEC 8
 ASC 8, STACK OVERFLOW
* 
ENTAR NOP  PROCEDURE ENTERARRAY 
 STA L
 STB H
 LDA ENTAR,I
 STA TPZZZ
 ISZ ENTAR
 LDA .+27 
 LDB L
 CMB,INB
 ADB H
 SSB
 JSB ERROR
 LDA .+4
 LDB A
 CPB AMAX 
 JMP FATAL
 ISZ A
 LDA A
 JSB ATASC
 LDA TPZZZ
 STA INXTP
 LDA L
 STA LOW
 LDA H
 STA HIGH 
 LDA A
 JSB ATAPK
 JMP ENTAR,I
* 
L BSS 1 
H BSS 1 
TPZZZ BSS 1 
* 
ENTBL NOP   PROCEDURE ENTERBLOCK; 
 LDA .+2
 LDB B
 CPB BMAX 
 JMP FATAL
 ISZ B
 LDA B
 JSB BTASC
 CLA
 STA LAST 
 STA LASTP
 LDA B
 JSB BTAPK
 JMP ENTBL,I
* 
ENTRL NOP   PROCEDURE ENTERREAL 
 STA RCNST
 STB RCNST+1
 STA XPARA
 STB XPARA+1
 LDA .+3
 CCB
 ADB C2MAX
 CPB C2 
 JMP FATAL
 LDA C2 
 INA
 JSB RCOPK
 CLA
 STA C1 
ENTLP ISZ C1
 LDA C1 
 JSB RCOSC
 LDA RCNST
 LDB RCNST+1
 CPA XPARA
 RSS
 JMP ENTLP
 CPB XPARA+1
 RSS
 JMP ENTLP
 LDB C1 
 LDA C2 
 CMA,INA
 ADA 1
 SSA,RSS
 STB C2 
 JMP ENTRL,I
* 
XPARA BSS 2 
* 
EMIT NOP PROCEDURE EMIT 
 JSB EMITA
 STA F
 LDA LC 
 JSB GENER
 ISZ LC 
 JMP EMIT,I 
* 
EMITA NOP 
 LDB LC 
 CPB CMAX 
 RSS
 JMP EMITA,I
 LDA .+6
 JMP FATAL
* 
EMIT1 NOP    PROCEDURE EMIT1
 STB Y
 JSB EMITA
 STA F
 LDA LC 
 JSB GENER
 ISZ LC 
 ISZ LC 
 JMP EMIT1,I
* 
EMIT2 NOP   PROCEDURE EMIT2 
 STA F
 STB X
 JSB EMITA
 LDA EMIT2,I
 STA Y
 ISZ EMIT2
 LDA LC 
 JSB GENER
 ISZ LC 
 ISZ LC 
 ISZ LC 
 JMP EMIT2,I
* 
PRTAB NOP    PROCEDURE PRINTTABLES; 
 JSB WRILN
 JSB MOVEO
 DEF MSG9 
 CLA,INA
 JSB BTASC
 LDA LAST 
 STA IDUML
PRLOP LDA IDUML 
 CPA T
 JMP NXLAB
 ISZ IDUML
 LDA IDUML
 JSB TABSC
 JSB SIXBL
 LDA IDUML
 JSB OTNUM
 LDA BLANK
 JSB ADOUT
 LDA NAMAD
 LDB OTPAD
 JSB MOVES
 DEC 5
 LDA OUTPT
 ADA .+10 
 STA OUTPT
 LDA LINK 
 JSB OTNUM
 LDA OBJ
 JSB OTNUM
 LDA TYP
 JSB OTNUM
 LDA REF
 JSB OTNUM
 LDA NORMA
 JSB OTNUM
 LDA LEV
 JSB OTNUM
 LDA ADR
 JSB OTNUM
 JMP PRLOP
* 
IDUML BSS 1 
IDUMZ BSS 1 
* 
MSG9 DEC 58 
 ASC 14,0IDENTIFIERS           LINK 
 ASC 15, OBJ  TYP  REF  NRM  LEV  ADR 
MSG10 DEC 32
 ASC 16,0BLOCKS     LAST LPAR PSZE VSZE 
MSG11 DEC 46
 ASC 13,0ARRAYS     XTYP ETYP EREF
 ASC 10, LOW HIGH ELSZ SIZE 
* 
NXLAB JSB WRILN 
 JSB MOVEO
 DEF MSG10
 CLA
 STA IDUML
PRCYC LDA IDUML 
 CPA B
 JMP OTLAB
 ISZ IDUML
 LDA IDUML
 JSB BTASC
 JSB SIXBL
 LDA IDUML
 JSB OTNUM
 LDA LAST 
 JSB OTNUM
 LDA LASTP
 JSB OTNUM
 LDA PSIZE
 JSB OTNUM
 LDA VSIZE
 JSB OTNUM
 JMP PRCYC
OTLAB JSB WRILN 
 JSB MOVEO
 DEF MSG11
 CLA
 STA IDUML
PRAGA LDA IDUML 
 CPA A
 JMP PRTEX
 ISZ IDUML
 LDA IDUML
 JSB ATASC
 JSB SIXBL
 LDA IDUML
 JSB OTNUM
 LDA INXTP
 JSB OTNUM
 LDA ELTYP
 JSB OTNUM
 LDA ELREF
 JSB OTNUM
 LDA LOW
 JSB OTNUM
 LDA HIGH 
 JSB OTNUM
 LDA ELSIZ
 JSB OTNUM
 LDA SIZE 
 JSB OTNUM
 JMP PRAGA
PRTEX JSB WRILN 
 JMP PRTAB,I
* 
JSBIN OCT 16000 
* 
GENER NOP 
 STA PCNTR
 LDA IDUMZ
 CPA PCNTR
 JMP *+3
 CLB
 JSB BREC 
 LDA LIOPZ
 SZA,RSS
 JMP *+7
 LDA BLANK
 JSB ADOUT
 LDA PCNTR
 JSB OTNUM
 LDA F
 JSB OTNUM
 LDA F
 CPA .+13 
 RSS
 JMP *+4
 STA INST 
 CLA
 JMP *+5
 INA
 IOR JSBIN
 STA INST 
 LDA .+4
 CLB,INB
 JSB BREC 
 LDA F
 ADA .-4
 SSA,RSS
 JMP *+14 
 LDA LIOPZ
 SZA,RSS
 JMP *+5
 LDA X
 LDB .+2
 JSB DCONV
 DEF OUTPT
 LDA X
 STA INST 
 CLA
 CLB,INB
 JSB BREC 
 JMP *+8
 LDA LIOPZ
 SZA,RSS
 JMP *+5
 LDA BLANK
 JSB ADOUT
 LDA BLANK
 JSB ADOUT
 LDA F
 CPA .+64 
 JMP *+6
 LDA .+31 
 CMA,INA
 ADA F
 SSA,RSS
 JMP *+13 
 LDA LIOPZ
 SZA,RSS
 JMP *+4
 LDA Y
 JSB OTNUM
 JSB WRILN
 LDA Y
 STA INST 
 CLA
 CLB,INB
 JSB BREC 
 JMP *+11 
 LDA LIOPZ
 SZA,RSS
 JMP *+8
 LDA .-5
 STA KKKKK
 LDA BLANK
 JSB ADOUT
 ISZ KKKKK
 JMP *-3
 JSB WRILN
 LDA PCNTR
 STA IDUMZ
 JMP GENER,I
* 
FSYSS BSS 4 
ISTMN BSS 1 
STMNT NOP           PROCEDURE STATEMENT 
 JSB STACK
FSYSZ DEF FSYSS 
BACKS JSB UNSTK 
 LDA STMNT
 ADA .-2
 LDA 0,I
 LDB FSYSZ
 JSB MOVES
 DEC 4
 LDA SY 
 CPA IDENT
 JMP STMN1
 JSB INSET
 DEF STBES
 JMP STMCL
 LDA SY 
 CPA BEGSY
 JMP STMN2
 CPA IFSY 
 JMP STMN3
 CPA CASSY
 JMP STMN4
 CPA WHISY
 JMP STMN5
 CPA REPSY
 JMP STMN6
 CPA FORSY
 JMP STMN7
STMCL JSB CLSET 
 DEF BLSEM
 LDA .+14 
 JSB TEST 
 DEF FSYSS
 DEF BLSEM
 JMP BACKS
STMN1 JSB GTLOC 
 DEF ID 
 LDA LOC
 STA ISTMN
 JSB INSYM
 LDA ISTMN
 SZA,RSS
 JMP STMCL
 JSB TABSC
 LDA OBJ
 CPA KONST
 JMP STMN8
 CPA TYPE1
 JMP STMN8
 CPA VARIA
 JMP STMN9
 CPA PROZE
 JMP STM10
 CPA FUNKT
 JMP STM11
STMN2 JSB COMST 
 JMP STMCL
STMN3 JSB IFSST 
 JMP STMCL
STMN4 JSB CASST 
 JMP STMCL
STMN5 JSB WHIST 
 JMP STMCL
STMN6 JSB REPST 
 JMP STMCL
STMN7 JSB FORST 
 JMP STMCL
STMN8 LDA .+45
 JSB ERROR
 JMP STMCL
STMN9 LDA LEV 
 LDB ADR
 JSB ASIGN
 JMP STMCL
STM10 LDA LEV 
 SZA,RSS
 JMP STM12
 LDA .+2
 JMP *+3
 DEF FSYSS
 DEF ISTMN
 JSB FUNGN
 JMP STMCL
STM11 LDA LEVEL 
 ADA DIPLY
 LDA 0,I
 CPA REF
 RSS
 JMP STMN8
 LDA LEV
 INA
 CLB
 JSB ASIGN
 JMP STMCL
STM12 LDA ADR 
 JSB STPRC
 JMP STMCL
* 
COSTT NOP 
 JSB STACK
 DEF COSTT
RTCOS JSB UNSTK 
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA ENDSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
 JMP RTCOS
* 
COMST NOP     PROCEDURE COMPOUNDSTATEMENT 
 JSB STACK
 DEF COMST
RTCOM JSB UNSTK 
 JSB INSYM
 JSB COSTT
 LDA SY 
 CPA SEMIC
 JMP *+7
 JSB INSET
 DEF STBES
 JMP *+7
 LDA .+14 
 JSB ERROR
 RSS
 JSB INSYM
 JSB COSTT
 JMP *-11 
 LDA SY 
 CPA ENDSY
 JMP *+4
 LDA .+57 
 JSB ERROR
 RSS
 JSB INSYM
 JMP RTCOM
* 
LV BSS 1
AD BSS 1
XITTP BSS 1 
XITRF BSS 1 
YITTP BSS 1 
YITRF BSS 1 
FASIG BSS 1 
ASIGN NOP    PROCEDURE ASSIGNMENT 
 JSB STACK
 DEF LV 
RTASI JSB UNSTK 
 STA LV 
 STB AD 
 LDA ISTMN
 JSB TABSC
 LDA TYP
 STA XITTP
 LDA REF
 STA XITRF
 CLA
 STA FASIG
 LDA NORMA
 SZA,RSS
 ISZ FASIG
 LDA AD 
 STA *+4
 LDA FASIG
 LDB LV 
 JSB EMIT2
 NOP
 LDA SY 
 CPA LBRAC
 RSS
 CPA LPARE
 RSS
 CPA PERIO
 RSS
 JMP ASIG1
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA BECOM
 JSB ADSET
 DEF BLSET
 LDA EQL
 JSB ADSET
 DEF BLSET
 CLA,INA
 JMP *+4
 DEF BLSET
 DEF XITTP
 DEF XITRF
 JSB FUNGN
ASIG1 LDA SY
 CPA BECOM
 JMP *+5
 LDA .+51 
 JSB ERROR
 LDA SY 
 CPA EQL
 JSB INSYM
 CLA
 JMP *+4
 DEF FSYSS
 DEF YITTP
 DEF YITRF
 JSB FUNGN
 LDA XITTP
 CPA YITTP
 RSS
 JMP ASIG2
 JSB INSET
 DEF STYPS
 JMP *+4
 LDA .+38 
 JSB EMIT 
 JMP RTASI
 LDA XITRF
 CPA YITRF
 JMP *+4
 LDA .+46 
 JSB ERROR
 JMP RTASI
 LDA XITTP
 CPA ARAYS
 RSS
 JMP *+7
 LDA XITRF
 JSB ATASC
 LDB SIZE 
 LDA .+23 
 JSB EMIT1
 JMP RTASI
 LDA XITRF
 JSB BTASC
 LDB VSIZE
 JMP *-6
ASIG2 LDA XITTP 
 CPA REALS
 RSS
 JMP ASIG3
 LDA YITTP
 CPA INTS 
 RSS
 JMP ASIG3
 LDA .+26 
 CLB
 JSB EMIT1
 LDA .+38 
 JSB EMIT 
 JMP RTASI
ASIG3 LDA NOTYP 
 CPA XITTP
 JMP RTASI
 CPA YITTP
 JMP RTASI
 LDA .+46 
 JSB ERROR
 JMP RTASI
* 
XIFTP BSS 1 
XIFRF BSS 1 
LC1IF BSS 1 
LC2IF BSS 1 
IFSST NOP   PROCEDURE IFSTATEMENT;
 JSB STACK
 DEF XIFTP
RETIF JSB UNSTK 
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA THESY
 JSB ADSET
 DEF BLSET
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XIFTP
 DEF XIFRF
 JSB FUNGN
 LDA XIFTP
 CPA BOOLS
 RSS
 CPA NOTYP
 JMP *+3
 LDA .+17 
 JSB ERROR
 LDA LC 
 STA LC1IF
 ISZ LC 
 ISZ LC 
 LDA SY 
 CPA THESY
 JMP *+5
 LDA .+52 
 JSB ERROR
 LDA SY 
 CPA DOSY 
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA ELSSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
 LDA SY 
 CPA ELSSY
 RSS
 JMP IFSS1
 JSB INSYM
 LDA LC 
 STA LC2IF
 ISZ LC 
 ISZ LC 
 LDA .+11 
 STA F
 LDA LC 
 STA Y
 LDA LC1IF
 JSB GENER
 RSS
 DEF FSYSS
 JSB STMNT
 LDA .+10 
 STA F
 LDA LC 
 STA Y
 LDA LC2IF
 JSB GENER
 JMP RETIF
IFSS1 LDA .+11
 STA F
 LDA LC 
 STA Y
 LDA LC1IF
 JSB GENER
 JMP RETIF
* 
CASDM BSS 1 
CTBVA DEF CTBV1 
CTBLC DEF CTBL1 
EXTTB DEF EXTT1 
* 
XCSTP BSS 1 
XCSRF BSS 1 
ICAST BSS 1 
JCAST BSS 1 
KCAST BSS 1 
LC1CA BSS 1 
CTBV1 BSS .CSMX 
CTBL1 BSS .CSMX 
EXTT1 BSS .CSMX 
CASST NOP    PROCEDURE CASESTATEMENT; 
 JSB STACK
 DEF XCSTP
RTCAS JSB UNSTK 
 JSB INSYM
 CLA
 STA ICAST
 STA JCAST
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA OFSY 
 JSB ADSET
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XCSTP
 DEF XCSRF
 JSB FUNGN
 LDA XCSTP
 CPA INTS 
 RSS
 CPA BOOLS
 RSS
 CPA CHARS
 RSS
 CPA NOTYP
 JMP *+3
 LDA .+23 
 JSB ERROR
 LDA LC 
 STA LC1CA
 ISZ LC 
 ISZ LC 
 LDA SY 
 CPA OFSY 
 JMP *+4
 LDA .+8
 JSB ERROR
 RSS
 JSB INSYM
 JSB ONECA
 LDA SY 
 CPA SEMIC
 RSS
 JMP *+4
 JSB INSYM
 JSB ONECA
 JMP *-6
 LDA .+12 
 STA F
 LDA LC 
 STA Y
 LDA LC1CA
 JSB GENER
 CLA
 STA KCAST
CALOP LDA KCAST 
 CPA ICAST
 JMP EXCAL
 ISZ KCAST
 CCA
 ADA KCAST
 ADA CTBVA
 LDB 0,I
 LDA .+13 
 JSB EMIT1
 CCA
 ADA KCAST
 ADA CTBLC
 LDB 0,I
 LDA .+13 
 JSB EMIT1
 JMP CALOP
EXCAL LDA .+10
 CLB
 JSB EMIT1
 CLA
 STA KCAST
CACYC LDA KCAST 
 CPA JCAST
 JMP OTCAL
 ISZ KCAST
 CCA
 ADA KCAST
 ADA EXTTB
 LDA 0,I
 STA CASDM
 LDA .+10 
 STA F
 LDA LC 
 STA Y
 LDA CASDM
 JSB GENER
 JMP CACYC
OTCAL LDA SY
 CPA ENDSY
 JMP *+4
 LDA .+57 
 JSB ERROR
 RSS
 JSB INSYM
 JMP RTCAS
* 
ONECA NOP 
 JSB STACK
 DEF ONECA
RTONE JSB UNSTK 
 LDA SY 
 JSB INSET
 DEF COBES
 JMP RTONE
 JSB CALAB
 LDA SY 
 CPA COMMA
 RSS
 JMP *+4
 JSB INSYM
 JSB CALAB
 JMP *-6
 LDA SY 
 CPA COLON
 JMP *+4
 LDA .+5
 JSB ERROR
 RSS
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA ENDSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
 ISZ JCAST
 CCB
 ADB EXTTB
 ADB JCAST
 LDA LC 
 STA 1,I
 ISZ LC 
 ISZ LC 
 JMP RTONE
* 
CALAB NOP 
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 JSB CNSTT
 DEF BLSET
 DEF LABTP
 LDA LABTP
 CPA XCSTP
 JMP *+4
 LDA .+47 
 JSB ERROR
 JMP CALAB,I
 LDA .+6
 LDB ICAST
 CPB CSMAX
 JMP FATAL
 ISZ ICAST
 CLA
 STA KCALA
 CCA
 ADA ICAST
 ADA CTBVA
 LDB LABTI
 STB 0,I
 CCA
 ADA ICAST
 ADA CTBLC
 LDB LC 
 STB 0,I
 ISZ KCALA
 CCA
 ADA KCALA
 ADA CTBVA
 LDA 0,I
 CPA LABTI
 RSS
 JMP *-7
 LDA ICAST
 CMA,INA
 ADA KCALA
 SSA,RSS
 JMP CALAB,I
 LDA .+1
 JSB ERROR
 JMP CALAB,I
* 
LABTP BSS 1 
LABTI BSS 2 
KCALA BSS 1 
* 
XRPTP BSS 1 
XRPRF BSS 1 
LC1RP BSS 1 
REPST NOP    PROCEDURE REPEATSTATEMENT; 
 JSB STACK
 DEF XRPTP
RTREP JSB UNSTK 
 LDA LC 
 STA LC1RP
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA UNTSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
WHRPS LDA SY
 CPA SEMIC
 JMP *+7
 JSB INSET
 DEF STBES
 JMP WHRPX
 LDA .+14 
 JSB ERROR
 RSS
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA SEMIC
 JSB ADSET
 DEF BLSET
 LDA UNTSY
 JSB ADSET
 DEF BLSET
 RSS
 DEF BLSET
 JSB STMNT
 JMP WHRPS
WHRPX LDA SY
 CPA UNTSY
 JMP *+4
 LDA .+53 
 JSB ERROR
 JMP RTREP
 JSB INSYM
 CLA
 JMP *+4
 DEF FSYSS
 DEF XRPTP
 DEF XRPRF
 JSB FUNGN
 LDA XRPTP
 CPA BOOLS
 RSS
 CPA NOTYP
 JMP *+3
 LDA .+17 
 JSB ERROR
 LDA .+11 
 LDB LC1RP
 JSB EMIT1
 JMP RTREP
* 
XWHTP BSS 1 
XWHRF BSS 1 
LC1WH BSS 1 
LC2WH BSS 1 
WHIST NOP   PROCEDURE WHILESTATEMENT; 
 JSB STACK
 DEF XWHTP
RTWHS JSB UNSTK 
 JSB INSYM
 LDA LC 
 STA LC1WH
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XWHTP
 DEF XWHRF
 JSB FUNGN
 LDA XWHTP
 CPA BOOLS
 RSS
 CPA NOTYP
 JMP *+3
 LDA .+17 
 JSB ERROR
 LDA LC 
 STA LC2WH
 ISZ LC 
 ISZ LC 
 LDA SY 
 CPA DOSY 
 JMP *+4
 LDA .+54 
 JSB ERROR
 RSS
 JSB INSYM
 RSS
 DEF FSYSS
 JSB STMNT
 LDA .+10 
 LDB LC1WH
 JSB EMIT1
 LDA .+11 
 STA F
 LDA LC 
 STA Y
 LDA LC2WH
 JSB GENER
 JMP RTWHS
* 
CVT BSS 1 
XFRTP BSS 1 
XFRRF BSS 1 
IFORS BSS 1 
FFORS BSS 1 
LC1FR BSS 1 
LC2FR BSS 1 
FORST NOP   PROCEDURE FORSTATEMENT; 
 JSB STACK
 DEF CVT
RTFOR JSB UNSTK 
 JSB INSYM
 LDA SY 
 CPA IDENT
 RSS
 JMP FORS1
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA IFORS
 JSB INSYM
 LDA IFORS
 SZA
 JMP *+4
 LDA INTS 
 STA CVT
 JMP FORS2
 JSB TABSC
 LDA OBJ
 CPA VARIA
 RSS
 JMP FORS3
 LDA TYP
 STA CVT
 LDA NORMA
 SZA,RSS
 JMP *+8
 LDA ADR
 STA *+4
 CLA
 LDB LEV
 JSB EMIT2
 NOP
 JMP *+3
 LDA .+37 
 JSB ERROR
 LDA CVT
 CPA NOTYP
 JMP FORS2
 CPA INTS 
 JMP FORS2
 CPA BOOLS
 JMP FORS2
 CPA CHARS
 JMP FORS2
 LDA .+18 
 JSB ERROR
 JMP FORS2
FORS3 LDA .+37
 JSB ERROR
 LDA INTS 
 STA CVT
 JMP FORS2
FORS1 LDA FSYSZ 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA BECOM
 JSB ADSET
 DEF BLSET
 LDA TOSY 
 JSB ADSET
 DEF BLSET
 LDA DOWSY
 JSB ADSET
 DEF BLSET
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 LDA .+2
 JSB SKIP 
 DEF BLSET
FORS2 LDA SY
 CPA BECOM
 RSS
 JMP FORS4
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA TOSY 
 JSB ADSET
 DEF BLSET
 LDA DOWSY
 JSB ADSET
 DEF BLSET
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XFRTP
 DEF XFRRF
 JSB FUNGN
 LDA XFRTP
 CPA CVT
 JMP FORS5
 LDA .+19 
 JSB ERROR
 JMP FORS5
FORS4 LDA FSYSZ 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA TOSY 
 JSB ADSET
 DEF BLSET
 LDA DOWSY
 JSB ADSET
 DEF BLSET
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 LDA .+51 
 JSB SKIP 
 DEF BLSET
FORS5 LDA .+14
 STA FFORS
 LDA SY 
 CPA TOSY 
 JMP *+6
 CPA DOWSY
 RSS
 JMP FORS6
 LDA .+16 
 STA FFORS
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XFRTP
 DEF XFRRF
 JSB FUNGN
 LDA XFRTP
 CPA CVT
 JMP FORS7
 LDA .+19 
 JSB ERROR
 JMP FORS7
FORS6 LDA FSYSZ 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA DOSY 
 JSB ADSET
 DEF BLSET
 LDA .+55 
 JSB SKIP 
 DEF BLSET
FORS7 LDA LC
 STA LC1FR
 ISZ LC 
 ISZ LC 
 LDA SY 
 CPA DOSY 
 JMP *+4
 LDA .+54 
 JSB ERROR
 RSS
 JSB INSYM
 LDA LC 
 STA LC2FR
 RSS
 DEF FSYSS
 JSB STMNT
 LDA FFORS
 INA
 LDB LC2FR
 JSB EMIT1
 LDA FFORS
 STA F
 LDA LC 
 STA Y
 LDA LC1FR
 JSB GENER
 JMP RTFOR
* 
NSTPR BSS 1 
ISTPR BSS 1 
FSTPR BSS 1 
XSPTP BSS 1 
XSPRF BSS 1 
YSPTP BSS 1 
YSPRF BSS 1 
STPRC NOP   PROCEDURE STANDPROC 
 JSB STACK
 DEF NSTPR
RTSTP JSB UNSTK 
 STA NSTPR
 CPA .+1
 JMP STPR1
 CPA .+2
 JMP STPR1
 CPA .+3
 JMP STPR2
 CPA .+4
 JMP STPR2
 CPA .+5
 JMP STP11
STPR1 LDA IFLAG 
 SZA
 JMP *+5
 LDA .+20 
 JSB ERROR
 CLA,INA
 STA IFLAG
 LDA SY 
 CPA LPARE
 RSS
 JMP STPR3
RPSTP JSB INSYM 
 LDA SY 
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP STPR4
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA ISTPR
 JSB INSYM
 LDA ISTPR
 SZA,RSS
 JMP STPR4
 JSB TABSC
 LDA OBJ
 CPA VARIA
 JMP *+4
 LDA .+37 
 JSB ERROR
 JMP STPR4
 LDA TYP
 STA XSPTP
 LDA REF
 STA XSPRF
 CLA
 STA FSTPR
 LDA NORMA
 SZA,RSS
 ISZ FSTPR
 LDA ADR
 STA *+4
 LDA FSTPR
 LDB LEV
 JSB EMIT2
 NOP
 LDA SY 
 CPA LBRAC
 RSS
 CPA LPARE
 RSS
 CPA PERIO
 RSS
 JMP STPR5
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA,INA
 JMP *+4
 DEF BLSET
 DEF XSPTP
 DEF XSPRF
 JSB FUNGN
STPR5 LDA XSPTP 
 CPA INTS 
 RSS
 CPA REALS
 RSS
 CPA CHARS
 RSS
 CPA NOTYP
 RSS
 JMP *+5
 LDA .+27 
 LDB XSPTP
 JSB EMIT1
 JMP STPR4
 LDA .+41 
 JSB ERROR
STPR4 JSB CLSET 
 DEF BLSEM
 LDA COMMA
 JSB ADSET
 DEF BLSEM
 LDA RPARE
 JSB ADSET
 DEF BLSEM
 LDA .+6
 JSB TEST 
 DEF BLSEM
 DEF FSYSS
 LDA SY 
 CPA COMMA
 JMP RPSTP
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
STPR3 LDA NSTPR 
 CPA .+2
 RSS
 JMP RTSTP
 LDA .+62 
 JSB EMIT 
 JMP RTSTP
STPR2 LDA SY
 CPA LPARE
 RSS
 JMP STPR6
STPR7 JSB INSYM 
 LDA SY 
 CPA STRIN
 RSS
 JMP *+9
 LDA .+24 
 LDB SLENG
 JSB EMIT1
 LDA .+28 
 LDB INUM 
 JSB EMIT1
 JSB INSYM
 JMP STPR8
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XSPTP
 DEF XSPRF
 JSB FUNGN
 LDA XSPTP
 JSB INSET
 DEF STYPS
 RSS
 JMP *+3
 LDA .+41 
 JSB ERROR
 LDA SY 
 CPA COLON
 RSS
 JMP STPR9
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF YSPTP
 DEF YSPRF
 JSB FUNGN
 LDA YSPTP
 CPA INTS 
 JMP *+3
 LDA .+43 
 JSB ERROR
 LDA SY 
 CPA COLON
 RSS
 JMP STP10
 LDA XSPTP
 CPA REALS
 JMP *+3
 LDA .+42 
 JSB ERROR
 JSB INSYM
 LDA FSYSZ
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF YSPTP
 DEF YSPRF
 JSB FUNGN
 LDA YSPTP
 CPA INTS 
 JMP *+3
 LDA .+43 
 JSB ERROR
 LDA .+37 
 JSB EMIT 
 JMP STPR8
STP10 LDA .+30
 LDB XSPTP
 JSB EMIT1
 JMP STPR8
STPR9 LDA .+29
 JMP *-4
STPR8 LDA SY
 CPA COMMA
 JMP STPR7
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
STPR6 LDA NSTPR 
 CPA .+4
 RSS
 JMP RTSTP
 LDA .+63 
 JSB EMIT 
 JMP RTSTP
STP11 LDA .+31
 JSB EMIT 
 JMP RTSTP
* 
YEXTP BSS 1 
YEXRF BSS 1 
OPEXP BSS 1 
FSYEX BSS 4 
XEXTP BSS 1 
XEXRF BSS 1 
FSYSL EQU FSYEX 
VSLTP BSS 1 
VSLRF BSS 1 
JSELE BSS 1 
ASELE EQU OPEXP 
XSLTP EQU YEXTP 
FSYCA EQU FSYEX 
ICALL EQU OPEXP 
XCATP EQU YEXTP 
XCARF EQU YEXRF 
LTPCA EQU JSELE 
CPCAL BSS 1 
KCALL BSS 1 
XSMTP BSS 1 
XSMRF BSS 1 
XTRTP BSS 1 
XTRRF BSS 1 
XFCTP BSS 1 
XFCRF BSS 1 
XSFTP BSS 1 
XSFRF BSS 1 
IFACT EQU JSELE 
FFACT EQU KCALL 
NSTDF EQU OPEXP 
* 
FUNGN NOP 
 JSB STACK
 DEF YEXTP
RTFUN JSB UNSTK 
 CPA .
 JMP EXPRE
 CPA .+1
 JMP SELEC
 CPA .+2
 JMP CALL 
 CPA .+3
 JMP SMPEX
 CPA .+4
 JMP TERM 
 CPA .+5
 JMP FACTR
 CPA .+6
 JMP STDFN
EXPRE LDA FUNGN  PROCEDURE EXPRESSION 
 ADA .-4
 STA FUNGN
 LDA FUNGN,I
 LDB FSYE.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XEXTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XEXRF
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA EQL
 JSB ADSET
 DEF BLSET
 LDA NEQ
 JSB ADSET
 DEF BLSET
 LDA LSS
 JSB ADSET
 DEF BLSET
 LDA LEQ
 JSB ADSET
 DEF BLSET
 LDA GTR
 JSB ADSET
 DEF BLSET
 LDA GEQ
 JSB ADSET
 DEF BLSET
 LDA .+3
 JMP *+4
 DEF BLSET
 DEF XEXTP,I
 DEF XEXRF,I
 JSB FUNGN
 LDA SY 
 CPA EQL
 RSS
 CPA NEQ
 RSS
 CPA LSS
 RSS
 CPA LEQ
 RSS
 CPA GTR
 RSS
 CPA GEQ
 RSS
 JMP RTFUN
 STA OPEXP
 JSB INSYM
 LDA .+3
 JMP *+4
FSYE. DEF FSYEX 
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
 LDA XEXTP,I
 CPA NOTYP
 RSS
 CPA INTS 
 RSS
 CPA BOOLS
 RSS
 CPA CHARS
 RSS
 JMP EXPR1
 CPA YEXTP
 RSS
 JMP EXPR1
 LDA .+45 
EXPR6 LDB OPEXP 
 CPB EQL
 JMP EXPR2
 INA
 CPB NEQ
 JMP EXPR2
 INA
 CPB LSS
 JMP EXPR2
 INA
 CPB LEQ
 JMP EXPR2
 INA
 CPB GTR
 JMP EXPR2
 INA
 CPB GEQ
 JMP EXPR2
EXPR2 JSB EMIT
EXPR7 LDA BOOLS 
 STA XEXTP,I
 JMP RTFUN
EXPR1 LDA XEXTP,I 
 CPA INTS 
 RSS
 JMP EXPR3
 LDA REALS
 STA XEXTP,I
 LDA .+26 
 LDB .+1
 JSB EMIT1
 JMP EXPR4
EXPR3 LDA YEXTP 
 CPA INTS 
 RSS
 JMP EXPR4
 LDA REALS
 STA YEXTP
 LDA .+26 
 LDB .
 JSB EMIT1
EXPR4 LDA XEXTP,I 
 CPA REALS
 RSS
 JMP EXPR5
 LDA YEXTP
 CPA REALS
 RSS
 JMP EXPR5
 LDA .+39 
 JMP EXPR6
EXPR5 LDA .+35
 JSB ERROR
 JMP EXPR7
* 
SELEC LDA FUNGN   PROCEDURE SELECTOR
 ADA .-4
 STA FUNGN
 LDA FUNGN,I
 LDB FSYL.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA VSLTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA VSLRF
RPSEL LDA SY
 CPA PERIO
 RSS
 JMP SELE1
 JSB INSYM
 LDA SY 
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP RPSCL
 LDA VSLTP,I
 CPA RECDS
 JMP *+4
 LDA .+31 
 JSB ERROR
 JMP SELE2
 LDA VSLRF,I
 JSB BTASC
 LDA LAST 
 STA JSELE
 CLA
 JSB TABSC
 LDA IDADR
 LDB NAMAD
 JSB MOVES
 DEC 5
 CLA
 JSB TABPK
 LDA JSELE
 JSB TABSC
 LDA NAMAD
 LDB IDADR
 JSB COMPA
 DEC 5
 JMP *+4
 LDA LINK 
 STA JSELE
 JMP *-8
 LDA JSELE
 SZA,RSS
 JSB ERROR
 JSB TABSC
 LDA TYP
 STA VSLTP,I
 LDA REF
 STA VSLRF,I
 LDA ADR
 STA ASELE
 SZA,RSS
 JMP *+4
 LDA .+9
 LDB ASELE
 JSB EMIT1
SELE2 JSB INSYM 
 JMP RPSCL
SELE1 LDA SY
 CPA LBRAC
 JMP *+3
 LDA .+11 
 JSB ERROR
RPSE1 JSB INSYM 
 LDA FSYL.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA RBRAC
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
 LDA VSLTP,I
 CPA ARAYS
 JMP *+4
 LDA .+28 
 JSB ERROR
 JMP RPS1C
 LDA VSLRF,I
 STA ASELE
 JSB ATASC
 LDA INXTP
 CPA XSLTP
 JMP *+4
 LDA .+26 
 JSB ERROR
 JMP SELE3
 LDB ELSIZ
 LDA .+20 
 CPB .+1
 RSS
 INA
 LDB ASELE
 JSB EMIT1
SELE3 LDA ELTYP 
 STA VSLTP,I
 LDA ELREF
 STA VSLRF,I
RPS1C LDA SY
 CPA COMMA
 JMP RPSE1
 CPA RBRAC
 JMP *+5
 LDA .+12 
 JSB ERROR
 LDA SY 
 CPA RPARE
 JSB INSYM
RPSCL LDA SY
 CPA LBRAC
 JMP RPSEL
 CPA LPARE
 JMP RPSEL
 CPA PERIO
 JMP RPSEL
 JSB CLSET
 DEF BLSET
 LDA .+6
 JSB TEST 
FSYL. DEF FSYSL 
 DEF BLSET
 JMP RTFUN
* 
CALL LDA FUNGN    PROCEDURE CALL
 ADA .-3
 STA FUNGN
 LDA FUNGN,I
 LDB FSYC.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN,I
 LDA 0,I
 STA ICALL
 LDA .+18 
 LDB ICALL
 JSB EMIT1
 LDA ICALL
 JSB TABSC
 LDA REF
 JSB BTASC
 LDA LASTP
 STA LTPCA
 LDA ICALL
 STA CPCAL
 LDA SY 
 CPA LPARE
 RSS
 JMP CALL1
RPCAL JSB INSYM 
 LDA LTPCA
 CMA,INA
 ADA CPCAL
 SSA
 JMP *+4
 LDA .+39 
 JSB ERROR
 JMP CALL2
 ISZ CPCAL
 LDA CPCAL
 JSB TABSC
 LDA NORMA
 SZA,RSS
 JMP CALL3
 LDA FSYC.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
 LDA CPCAL
 JSB TABSC
 LDA XCATP
 CPA TYP
 RSS
 JMP CALL4
 LDA REF
 CPA XCARF
 JMP *+4
 LDA .+36 
 JSB ERROR
 JMP CALL2
 LDA XCATP
 CPA ARAYS
 RSS
 JMP *+7
 LDA XCARF
 JSB ATASC
 LDB SIZE 
 LDA .+22 
 JSB EMIT1
 JMP CALL2
 CPA RECDS
 RSS
 JMP CALL2
 LDA XCARF
 JSB BTASC
 LDB VSIZE
 JMP *-9
CALL4 CPA INTS
 RSS
 JMP CALL5
 LDA CPCAL
 JSB TABSC
 LDA TYP
 CPA REALS
 RSS
 JMP CALL5
 LDA .+26 
 CLB
 JSB EMIT1
 JMP CALL2
CALL5 LDA XCATP 
 CPA NOTYP
 JMP CALL2
 LDA .+36 
 JSB ERROR
 JMP CALL2
CALL3 LDA SY
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP CALL2
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA KCALL
 JSB INSYM
 LDA KCALL
 SZA,RSS
 JMP CALL2
 JSB TABSC
 LDA OBJ
 CPA VARIA
 JMP *+3
 LDA .+37 
 JSB ERROR
 LDA TYP
 STA XCATP
 LDA REF
 STA XCARF
 LDA ADR
 STA *+7
 CLA
 LDB NORMA
 SZB,RSS
 INA
 LDB LEV
 JSB EMIT2
 NOP
 LDA SY 
 CPA LBRAC
 RSS
 CPA LPARE
 RSS
 CPA PERIO
 RSS
 JMP CALL6
 LDA FSYC.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA COLON
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA,INA
 JMP *+4
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
CALL6 LDA CPCAL 
 JSB TABSC
 LDA TYP
 CPA XCATP
 RSS
 JMP *+4
 LDA REF
 CPA XCARF
 JMP CALL2
 LDA .+36 
 JSB ERROR
CALL2 JSB CLSET 
 DEF BLSET
 LDA COMMA
 JSB ADSET
 DEF BLSET
 LDA RPARE
 JSB ADSET
 DEF BLSET
 LDA .+6
 JSB TEST 
 DEF BLSET
FSYC. DEF FSYCA 
 LDA SY 
 CPA COMMA
 JMP RPCAL
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
CALL1 LDA LTPCA 
 CMA,INA
 ADA CPCAL
 SSA,RSS
 JMP *+3
 LDA .+39 
 JSB ERROR
 LDA ICALL
 JSB TABSC
 LDA REF
 JSB BTASC
 CCB
 ADB PSIZE
 LDA .+19 
 JSB EMIT1
 LDA LEVEL
 CMA,INA
 ADA LEV
 SSA,RSS
 JMP RTFUN
 LDA LEVEL
 STA *+4
 LDA .+3
 LDB LEV
 JSB EMIT2
 NOP
 JMP RTFUN
* 
RSTYP NOP   FUNCTION RESULTTYPE 
 STA ARSTY
 STB BRSTY
 CMA,INA
 ADA REALS
 CMB,INB
 ADB REALS
 SSA
 RSS
 SSB
 RSS
 JMP *+5
 LDA .+33 
 JSB ERROR
 LDA NOTYP
 JMP RSTYP,I
 LDA ARSTY
 LDB BRSTY
 CPA NOTYP
 JMP *-5
 CPB NOTYP
 JMP *-7
 CPA INTS 
 RSS
 JMP *+8
 CPB INTS 
 JMP RSTYP,I
 LDA .+26 
 LDB .+1
 JSB EMIT1
 LDA REALS
 JMP RSTYP,I
 CPB INTS 
 RSS
 JMP *+4
 LDA .+26 
 LDB .
 JSB EMIT1
 LDA REALS
 JMP RSTYP,I
* 
ARSTY BSS 1 
BRSTY BSS 1 
* 
SMPEX LDA FUNGN PROCEDURE SIMPLEEXPRESSION
 ADA .-4
 STA FUNGN
 LDA FUNGN,I
 LDB FSYE.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XSMTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XSMRF
 LDA SY 
 CPA PLUS 
 RSS
 CPA MINUS
 RSS
 JMP SMPE1
 STA OPEXP
 JSB INSYM
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA PLUS 
 JSB ADSET
 DEF BLSET
 LDA MINUS
 JSB ADSET
 DEF BLSET
 LDA .+4
 JMP *+4
 DEF BLSET
 DEF XSMTP,I
 DEF XSMRF,I
 JSB FUNGN
 LDA XSMTP,I
 CMA,INA
 ADA REALS
 SSA,RSS
 JMP *+4
 LDA .+33 
 JSB ERROR
 JMP SMPE2
 LDA .+36 
 LDB OPEXP
 CPB MINUS
 JSB EMIT 
 JMP SMPE2
SMPE1 LDA FSYE. 
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA PLUS 
 JSB ADSET
 DEF BLSET
 LDA MINUS
 JSB ADSET
 DEF BLSET
 LDA ORSY 
 JSB ADSET
 DEF BLSET
 LDA .+4
 JMP *+4
 DEF BLSET
 DEF XSMTP,I
 DEF XSMRF,I
 JSB FUNGN
SMPE2 LDA SY
 CPA PLUS 
 RSS
 CPA MINUS
 RSS
 CPA ORSY 
 RSS
 JMP RTFUN
 STA OPEXP
 JSB INSYM
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA PLUS 
 JSB ADSET
 DEF BLSET
 LDA MINUS
 JSB ADSET
 DEF BLSET
 LDA ORSY 
 JSB ADSET
 DEF BLSET
 LDA .+4
 JMP *+4
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
 LDA OPEXP
 CPA ORSY 
 RSS
 JMP SMPE3
 LDA XSMTP,I
 CPA BOOLS
 RSS
 JMP *+8
 LDA YEXTP
 CPA BOOLS
 RSS
 JMP *+4
 LDA .+51 
 JSB EMIT 
 JMP SMPE2
 LDA XSMTP,I
 CPA NOTYP
 JMP *+6
 LDA YEXTP
 CPA NOTYP
 JMP *+3
 LDA .+32 
 JSB ERROR
 LDA NOTYP
 STA XSMTP,I
 JMP SMPE2
SMPE3 LDA XSMTP,I 
 LDB YEXTP
 JSB RSTYP
 STA XSMTP,I
 CPA NOTYP
 JMP SMPE2
 CPA INTS 
 RSS
 JMP *+8
 LDA .+52 
SMPE4 LDB OPEXP 
 CPB PLUS 
 RSS
 INA
 JSB EMIT 
 JMP SMPE2
 CPA REALS
 RSS
 JMP SMPE2
 LDA .+54 
 JMP SMPE4
* 
TERM LDA FUNGN  PROCEDURE TERM
 ADA .-4
 STA FUNGN
 LDA FUNGN,I
 LDB FSYE.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XTRTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XTRRF
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA TIMES
 JSB ADSET
 DEF BLSET
 LDA RDIV 
 JSB ADSET
 DEF BLSET
 LDA IDIV 
 JSB ADSET
 DEF BLSET
 LDA IMOD 
 JSB ADSET
 DEF BLSET
 LDA ANDSY
 JSB ADSET
 DEF BLSET
 LDA .+5
 JMP *+4
 DEF BLSET
 DEF XTRTP,I
 DEF XTRRF,I
 JSB FUNGN
WHTRM LDA SY
 CPA TIMES
 RSS
 CPA RDIV 
 RSS
 CPA IDIV 
 RSS
 CPA IMOD 
 RSS
 CPA ANDSY
 RSS
 JMP RTFUN
 STA OPEXP
 JSB INSYM
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA TIMES
 JSB ADSET
 DEF BLSET
 LDA RDIV 
 JSB ADSET
 DEF BLSET
 LDA IDIV 
 JSB ADSET
 DEF BLSET
 LDA IMOD 
 JSB ADSET
 DEF BLSET
 LDA ANDSY
 JSB ADSET
 DEF BLSET
 LDA .+5
 JMP *+4
 DEF BLSET
 DEF STOP,I 
 DEF ST2ND,I
 JSB FUNGN
 LDA OPEXP
 CPA TIMES
 RSS
 JMP TERM1
 LDA XTRTP,I
 LDB YEXTP
 JSB RSTYP
 STA XTRTP,I
 CPA NOTYP
 JMP WHTRM
 CPA INTS 
 RSS
 JMP *+4
 LDA .+57 
 JSB EMIT 
 JMP WHTRM
 CPA REALS
 RSS
 JMP WHTRM
 LDA .+60 
 JSB EMIT 
 JMP WHTRM
TERM1 CPA RDIV
 RSS
 JMP TERM2
 LDA XTRTP,I
 CPA INTS 
 RSS
 JMP *+6
 LDA .+26 
 LDB .+1
 JSB EMIT1
 LDA REALS
 STA XTRTP,I
 LDA YEXTP
 CPA INTS 
 RSS
 JMP *+6
 LDA .+26 
 LDB .
 JSB EMIT1
 LDA REALS
 STA YEXTP
 LDA XTRTP,I
 CPA REALS
 RSS
 JMP *+8
 LDA YEXTP
 CPA REALS
 RSS
 JMP *+4
 LDA .+61 
 JSB EMIT 
 JMP WHTRM
 LDA .+33 
TERM4 LDB NOTYP 
 CPB XTRTP,I
 RSS
 CPB YEXTP
 RSS
 JSB ERROR
 LDA NOTYP
 STA XTRTP,I
 JMP WHTRM
TERM2 CPA ANDSY 
 RSS
 JMP TERM3
 LDA XTRTP,I
 CPA BOOLS
 RSS
 JMP *+8
 LDA YEXTP
 CPA BOOLS
 RSS
 JMP *+4
 LDA .+56 
 JSB EMIT 
 JMP WHTRM
 LDA .+32 
 JMP TERM4
TERM3 LDA XTRTP,I 
 CPA INTS 
 RSS
 JMP *+12 
 LDA YEXTP
 CPA INTS 
 RSS
 JMP *+8
 LDA .+58 
 LDB OPEXP
 CPB IDIV 
 RSS
 INA
 JSB EMIT 
 JMP WHTRM
 LDA .+34 
 JMP TERM4
* 
FACTR LDA FUNGN  PROCEDURE FACTOR 
 ADA .-4
 STA FUNGN
 LDA FUNGN,I
 LDB FSYE.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XFCTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XFCRF
 LDA NOTYP
 STA XFCTP,I
 CLA
 STA XFCRF,I
 LDA .+58 
 JSB TEST 
 DEF FABES
 DEF FSYEX
WHFAC LDA SY
 JSB INSET
 DEF FABES
 JMP RTFUN
 LDA SY 
 CPA IDENT
 RSS
 JMP FACT1
 JSB GTLOC
 DEF ID 
 LDA LOC
 STA IFACT
 JSB INSYM
 LDA IFACT
 JSB TABSC
 LDA OBJ
 CPA KONST
 RSS
 JMP FACT3
 LDA TYP
 STA XFCTP,I
 CLA
 STA XFCRF,I
 LDA .+24 
 LDB XFCTP,I
 CPB REALS
 INA
 LDB ADR
 JSB EMIT1
 JMP FACT2
FACT3 CPA VARIA 
 RSS
 JMP FACT4
 LDA TYP
 STA XFCTP,I
 LDA REF
 STA XFCRF,I
 LDA SY 
 CPA LBRAC
 RSS
 CPA LPARE
 RSS
 CPA PERIO
 RSS
 JMP FACT5
 CLA
 STA FFACT
 LDA NORMA
 SZA,RSS
 ISZ FFACT
 LDA ADR
 STA *+4
 LDA FFACT
 LDB LEV
 JSB EMIT2
 NOP
 CLA,INA
 JMP *+4
 DEF FSYEX
 DEF XFCTP,I
 DEF XFCRF,I
 JSB FUNGN
 LDA XFCTP,I
 JSB INSET
 DEF STYPS
 JMP FACT2
 LDA .+34 
 JSB EMIT 
 JMP FACT2
FACT5 LDA XFCTP,I 
 JSB INSET
 DEF STYPS
 RSS
 JMP *+7
 CLA
 LDB NORMA
 SZB,RSS
 INA
 STA FFACT
 JMP *+3
 CLA,INA
 JMP *-6
 LDA ADR
 STA *+4
 LDA FFACT
 LDB LEV
 JSB EMIT2
 NOP
 JMP FACT2
FACT4 CPA FUNKT 
 RSS
 JMP FACT6
 LDA TYP
 STA XFCTP,I
 LDA LEV
 SZA,RSS
 JMP *+7
 LDA .+2
 JMP *+3
 DEF FSYEX
 DEF IFACT
 JSB FUNGN
 JMP FACT2
 LDA .+6
 JMP *+6
 DEF FSYEX
 DEF XFCTP,I
 DEF XFCRF,I
 DEF ADR
 DEF IFACT
 JSB FUNGN
 JMP FACT2
FACT6 CPA TYPE1 
 RSS
 JMP FAC13
 LDA SY 
 CPA LPARE
 JMP *+4
 LDA .+9
 JSB ERROR
 RSS
 JSB INSYM
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XFCTP,I
 DEF XFCRF,I
 JSB FUNGN
 LDA IFACT
 JSB TABSC
 LDA TYP
 STA XFCTP,I
 LDA SY 
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
 JMP FACT2
FAC13 LDA .+44
 JSB ERROR
 JMP FACT2
FACT1 LDA SY
 CPA CHARC
 JMP FACT9
 CPA INTCO
 JMP FAC10
 CPA REALC
 JMP FACT8
 JMP FACT7
FACT8 LDA REALS 
 STA XFCTP,I
 LDA RNUM 
 LDB RNUM+1 
 JSB ENTRL
 LDA .+25 
 LDB C1 
 JSB EMIT1
 JMP FAC11
FACT9 LDA CHARS 
 RSS
FAC10 LDA INTS
 STA XFCTP,I
 LDA .+24 
 LDB INUM 
 JSB EMIT1
FAC11 CLA 
 STA XFCRF,I
 JSB INSYM
 JMP FACT2
FACT7 CPA LPARE 
 RSS
 JMP FAC12
 JSB INSYM
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XFCTP,I
 DEF XFCRF,I
 JSB FUNGN
 LDA SY 
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
 JMP FACT2
FAC12 CPA NOTSY 
 RSS
 JMP FACT2
 JSB INSYM
 LDA .+5
 JMP *+4
 DEF FSYEX
 DEF XFCTP,I
 DEF XFCRF,I
 JSB FUNGN
 LDA XFCTP,I
 CPA BOOLS
 RSS
 JMP *+4
 LDA .+35 
 JSB EMIT 
 JMP FACT2
 LDA .+32 
 LDB XFCTP,I
 CPB NOTYP
 RSS
 JSB ERROR
FACT2 LDA .+6 
 JSB TEST 
 DEF FSYEX
 DEF FABES
 JMP WHFAC
* 
STDFN LDA FUNGN  PROCEDURE STANDFCT 
 ADA .-6
 STA FUNGN
 LDA FUNGN,I
 LDB FSYE.
 JSB MOVES
 DEC 4
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XSFTP
 ISZ FUNGN
 LDA FUNGN
 JSB GETAD
 STA XSFRF
 ISZ FUNGN
 LDA FUNGN,I
 LDA 0,I
 STA NSTDF
 ISZ FUNGN
 LDA FUNGN,I
 LDA 0,I
 STA IFACT
 LDA NSTDF
 CPA .+19 
 JMP STDF8
 LDA SY 
 CPA LPARE
 JMP *+4
 LDA .+9
 JSB ERROR
 RSS
 JSB INSYM
 LDA .+17 
 CMA,INA
 ADA NSTDF
 SSA,RSS
 JMP STDF1
 LDA FSYE.
 LDB BLSEP
 JSB MOVES
 DEC 4
 LDA RPARE
 JSB ADSET
 DEF BLSET
 CLA
 JMP *+4
 DEF BLSET
 DEF XSFTP,I
 DEF XSFRF,I
 JSB FUNGN
 JSB CLSET
 DEF BLSET
 LDA NSTDF
 CPA .
 JMP STDF2
 CPA .+2
 JMP STDF2
 CPA .+4
 JMP STDF3
 CPA .+5
 JMP STDF3
 CPA .+6
 JMP STDF4
 CPA .+7
 JMP STDF5
 CPA .+8
 JMP STDF5
 LDA INTS 
 JSB ADSET
 DEF BLSET
 LDA REALS
 JSB ADSET
 DEF BLSET
 LDA XSFTP,I
 CPA INTS 
 RSS
 JMP STDF7
 LDA .+26 
 CLB
 JSB EMIT1
 JMP STDF7
STDF2 LDA INTS
 JSB ADSET
 DEF BLSET
 LDA REALS
 JSB ADSET
 DEF BLSET
 LDA IFACT
 JSB TABSC
 LDA XSFTP,I
 STA TYP
 LDA IFACT
 JSB TABPK
 LDA XSFTP,I
 CPA REALS
 ISZ NSTDF
 JMP STDF7
STDF3 LDA INTS
 JSB ADSET
 DEF BLSET
 JMP STDF7
STDF4 LDA INTS
 JSB ADSET
 DEF BLSET
 LDA BOOLS
 JSB ADSET
 DEF BLSET
 LDA CHARS
 JSB ADSET
 DEF BLSET
 JMP STDF7
STDF5 LDA CHARS 
 JSB ADSET
 DEF BLSET
 LDA BOOLS
 JSB ADSET
 DEF BLSET
 LDA INTS 
 JSB ADSET
 DEF BLSET
 LDA IFACT
 JSB TABSC
 LDA XSFTP,I
 STA TYP
 LDA IFACT
 JSB TABPK
STDF7 LDA XSFTP,I 
 JSB INSET
 DEF BLSET
 JMP *+5
 LDA .+8
 LDB NSTDF
 JSB EMIT1
 JMP STDF6
 LDA .+48 
 LDB XSFTP,I
 CPB NOTYP
 RSS
 JSB ERROR
 JMP STDF6
STDF1 LDA SY
 CPA IDENT
 JMP *+4
 LDA .+2
 JSB ERROR
 JMP STDF8
 LDA IDADR
 LDB FINPU
 JSB COMPA
 DEC 5
 JMP *+4
 CLA
 JSB ERROR
 RSS
 JSB INSYM
STDF8 LDA .+8 
 LDB NSTDF
 JSB EMIT1
STDF6 LDA IFACT 
 JSB TABSC
 LDA TYP
 STA XSFTP,I
 LDA NSTDF
 CPA .+19 
 JMP RTFUN
 LDA SY 
 CPA RPARE
 JMP *+4
 LDA .+4
 JSB ERROR
 RSS
 JSB INSYM
 JMP RTFUN
* 
LWAVM EQU 1777B  CONTAINS ADDRESS OF LAST AVAIL WORD. 
* 
* BREC OUTPUTS (TO THE BINARY FILE PASBIN)
* THE BINARY WORD INST. THE CALL   JSB BREC 
* MEANS   OUTPUT, IF B-REGISTER=0 
* ADD WORD TO BUFFER, IF B-REGISTER=1 
* AN ABSOLUTE ELEMENT (A-REGISTER=0)
* A PROGRAM RELOCATABLE ELEMENT (A-REG=1) 
* OR AN EXTERNAL REFERENCE (A-REG=4)
BREC NOP
 STA TZ 
 LDA PNBUF
 SZB
 JMP HBR10
 SZA,RSS
 JMP BREC,I 
HBR06 LDA HSVST,I 
 ALF,RAR
 ISZ HRCNT
 JMP *-2
 RAL
 STA HSVST,I
 JSB WRBIN
 JMP BREC,I 
HBR10 SZA 
 JMP HBR20
 LDA WORD2
 STA PNBUF+1
 LDA PCNTR
 STA PNBUF+3
 LDA D4 
 STA PNBUF
 LDA FBPN4
 STA HSTOR
 LDA M5 
 STA HRCNT
 LDA M54
 STA HCNTB
HBR20 ISZ PCNTR 
 LDA HRCNT
 CPA M5 
 RSS
 JMP HBR25
 LDA HSTOR
 STA HSVST
 CLA
 STA HSVST,I
 ISZ HSTOR
 ISZ PNBUF
HBR25 ISZ PNBUF+1 
 LDA HSVST,I
 ALF,RAR
 IOR TZ 
 STA HSVST,I
 ISZ HRCNT
 JMP HBR30
 RAL
 STA HSVST,I
 LDA M5 
 STA HRCNT
 CCA
 CPA HCNTB
 JMP HBR30
 ISZ HCNTB
HBR30 LDA INST
 STA HSTOR,I
 ISZ HSTOR
 ISZ PNBUF
 ISZ HCNTB
 JMP BREC,I 
 JMP HBR06
* 
WRBIN NOP 
 LDA PNBUF
 STA HCNTB
 CMA,INA
 INA
 STA TZ 
 LDA FNBNP
 STA BREG 
 LDA PNBUF
 ALF,ALF
 STA PNBUF
 CLA
 INB
 ADA BREG,I 
 ISZ TZ 
 JMP *-3
 STA PNBUF+2
 EXT WRITF
 JSB WRITF
 DEF *+5
 DEF ICDB 
 DEF IERR 
 DEF PNBUF
 DEF HCNTB
 CLA
 STA PNBUF
 STA PNBUF+2
 JMP WRBIN,I
* 
ICDB BSS 144
IERR BSS 1
M54 DEC -54 
M5 DEC -5 
PCNTR BSS 1 
WORD2 OCT 60100 
FBPN4 DEF PNBUF+4 
FNBNP DEF PNBUF 
BREG EQU 1
PNBUF DEC 0 
 BSS 1
 DEC 0
 BSS 57 
TZ BSS 1
HSVST BSS 1 
HSTOR BSS 1 
HRCNT BSS 1 
INST BSS 1
HCNTB BSS 1 
* 
.NPAR BSS 1 
EXTNO OCT 102   # OF LAST EXTERNAL SYMBOL 
PROAD DEF PRONO 
PROPO DEF *+1 
 OCT 6,100001,0 
PRONO BSS 2 
PROST BSS 1 
* 
EXTDO LDA .+8 
 LDB EXTNO
 CPB .377 
 JMP FATAL
 CLB
 JSB BREC 
 LDA PRT
 JSB TABSC
 LDA LC 
 STA ADR
 LDA PRT
 JSB TABPK
 LDA NAMAD
 LDB PROAD
 JSB MOVES
 DEC 3
 LDA PROST
 ALF,ALF
 AND .377 
 ALF,ALF
 LDB EXTNO
 INB
 STB EXTNO
 ADA 1
 STA PROST
 LDA PROPO
 JSB WRBRE
 CLB
 JSB BREC 
 LDA REF
 JSB BTASC
 LDB PSIZE
 ADB .-5
 STB .NPAR
 LDA .+64    CALL SUB64 
 JSB EMIT1
 CCA
 ADA EXTNO
 JSB EMIT 
 LDA PRB
 JSB BTASC
 LDA DX 
 STA VSIZE
 LDA PRB
 JSB BTAPK
 CLA
 JSB BUTTF
 LDA PRT
 STA CPCA 
 JSB TABSC
 LDA REF
 JSB BTASC
 LDA LASTP
 STA LPCA 
EXTRP CMA,INA 
 ADA CPCA 
 SSA,RSS
 JMP EXTOK
 ISZ CPCA 
 LDA CPCA 
 JSB TABSC
 CLA,CCE
 LDB NORMA
 SZB
 CLE
 ERA
 JSB BUTTF
 LDA LPCA 
 JMP EXTRP
EXTOK LDA ISFUN 
 SZA,RSS
 JMP *+3
 LDA .+65 
 JSB EMIT 
 JSB INSYM
 JMP EXTRT
* 
BUTTF NOP 
 STA INST 
 CLA
 CLB,INB
 JSB BREC 
 ISZ LC 
 JMP BUTTF,I
* 
CPCA BSS 1
LPCA BSS 1
* 
 END PASCS
