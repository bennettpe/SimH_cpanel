
;Load Real Time BASIC
;called by rtgen.ini script

; Set 10 traks for temp
send "LG,10\r" 
; load basic paper tapes (ptr = LU 5)
go until ":" 
att ptr -q rtgen/bas/92101-12001_Rev-2140_0103_BASIC.rel
send "MR,5\r"
go until ":" 
att ptr -q rtgen/bas/92101-12001_Rev-2140_0203_BASIC.rel
send "MR,5\r"
go until ":" 
att ptr -q rtgen/bas/92101-12001_Rev-2140_0303_BASIC.rel
send "MR,5\r"
go until ":" 
det -q ptr
; params for LOADR
; 99=load from LG area
; 1=list device. 1=console
; 9=opcode. 9=background addition
; 18001 = requiered size in pages 18
;         partition assigned. 00=none assigned (default)
;         1 is main program plus segments
; 2=listing. List only progam name and bounds
send "RU,LOADR,99,1,9,18001,2\r"
go until "LOADR:$END"
go until ":" 
send "SP,BASIC\r"

; generate the Table Generator Program

go until ":" 
send "LG,10\r" 
go until ":" 
att ptr -q rtgen/bas/92101-16008_Rev-2013_RTETG.rel
send "MR,5\r"
go until ":" 
att ptr -q rtgen/bas/92101-16024_Rev-2013_BATG3_TRANSFER_FILE_BUILDER_RTE-III.rel
send "MR,5\r"
go until ":" 
det -q ptr
send "RU,LOADR,99,1,9,1\r"
go until "LOADR:$END"
go until ":" 
send "SP,RTETG\r"

; load file with routines for Task Scheduller, to be used if necessary by RTETG

go until ":" 
att ptr -q rtgen/bas/92101-16013_Rev-A_BASIC_TASK_SCHED_(SCHEDR).rbin
send "ST,5,SCHEDR,BR\r"
go until ":" 
det -q ptr

; load file with routines for Plotter, to be used if necessry by RTETG

att ptr -q rtgen/plotter/92409-60001_Rev-1622_PLOTR.rel
send "ST,5,PLOTR::::-1,BR\r"
go until "-1"
go until ":" 
det -q ptr

; Test run

send "RU,BASIC\r"
go until "READY"
send '10 PRINT "HOLA RT BASIC"\r'
send '20 END\r'
send 'RUN\r'
go until "READY"
send "BYE\r"
go until ":" 

if "%TV_INTERFACE%" == "TRUE" goto begin_tbl_gen 
if "%PLOTTER%"      == "TRUE" goto begin_tbl_gen
goto end_tbl_gen

; begin interface table generation
:begin_tbl_gen

; load Table generatog command file from paper tape (ptr = LU 5)
att ptr -q rtgen/bas/Table_Generator_Command_File_TV.txt
send "ST,5,BTGCMD::::-1\r"
go until "-1"
go until ":" 
det -q ptr

; Now execute Table generaton program
send "RU,RTETG,BTGCMD,1\r"
go until "$END RTETG"
go until ":"
; Display on screen contents of generated transfer file
send "DU,TRFL,1\r"
go until "::"

; for unknown reasons, the generated TRFL has a caveat:
; on second LOADR command and following, instead of
;     LOADR,99,  1, 006, 0000
; it is generated
;     LOADR,99,  1,..06, 0000    where "." is the NUL (ascii 00) character
; the NUL character is not printed when file is listed/dumped to 
; console. the commands appears as
;     LOADR,99,  1,06, 0000    
; and seems correct. But on execution, the NUL char puzzles LOADR.
; LOADR executes correcty but DOES NOT save the resulting file
; as permamente file in disc. This can be see with command LOADR,1,1,3:
; only first LOADR has stored somenting as permanent file. 
;
; to solve this problem, we will use the interactive editor to 
; replace the NUL NUL char sequence with " 0" sequence as it sould be

send "RU,EDITR\r"
go until "/"
; load TRFL file
send "TRFL\r"
go until "/"
; list 99 lines
send "L99\r"
go until "/"
; goto line 0
send "0\r"
go until "/"
; set replace NUL NUL by " 0"
; "\x00" is replaced by NUL (ascii char 00) by SimH SCP
send "X\x00\x00/ 0\r"
go until "\n"
go until "/"
; execute the replace up to line 99
send "99\r"
go until "/"
; go back to line 0
send "0\r"
go until "/"
; list the result
send "L99\r"
go until "/"
; save file to disk 
send "ER\r"
go until ":"
; now the TRLF file is fixed and ready to be executed

; Execute transfer file
send "TR,TRFL\r"
go until "::"
go until ":"
send "RU,BASIC\r"
go until ">"
send 'TABLES BTBL,MTBL\r'
go until ">"
send 'CALLS\r'
go until "\n>"


if "%TV_INTERFACE%" != "TRUE" goto end_tv_bas_test

; Check TV subroutine calls 

send 'DELETE\r'
go until "\n>"
send '100 PRINT "HOLA RTE-III TV INTERFACE"\r'
go until "\n>"
send '110 CALL VIDLU(13,0)\r'
go until "\n>"
send '120 CALL ERASE\r'
go until "\n>"
send '200 FOR A=1 TO 100\r'
go until "\n>"
send '210 CALL PSET(RND(1)*255,RND(1)*255,RND(1)*8)\r'
go until "\n>"
send '220 NEXT A\r'
go until "\n>"
send '300 LET C=0\r'
go until "\n>"
send '310 FOR A=1 TO 100\r'
go until "\n>"
send '320 IF C>7 LET C=0\r'
go until "\n>"
send '330 CALL PLINE(RND(1)*255,RND(1)*255,RND(1)*255,RND(1)*255,C)\r'
go until "\n>"
send '340 C=C+1\r'
go until "\n>"
send '350 NEXT A\r'
go until "\n>"
send '400 LET P=0\r'
go until "\n>"
send '410 CALL VAREA(8,8,100,10,0,1,P)\r'
go until "\n>"
send '420 CALL CHARS(10,10,"HOLA RTE-III TV",1,0,0,0,P)\r'
go until "\n>"
send '900 END\r'
go until "\n>"
send "LIST\r"
go until "\n>"

set tv ena
set tv on

send "RUN\r"
go until ">"

:end_tv_bas_test
set tv off

att ptr -q rtgen/bas/Table_Generator_Command_File_TV.txt

if "%PLOTTER%" != "TRUE" goto end_plotter_bas_test

; Check Plotter subroutine calls 

send 'DELETE\r'
go until ">"

att ptr -q test_run/Sample1_Plotter.bas.txt
send 'LOAD\r'
go until ">"
det -q ptr

send "LIST\r"
go until '900'
go until ">"

set plotter ena
set plotter on
set plotter pensize=1


send "RUN\r"
go until ">"

:end_plotter_bas_test
set plotter off

send "BYE\r"
go until ":" 

:end_tbl_gen



