SPL,L,M,O,T 
! 
      NAME DSPLY (3) "SPL DISPLAY REGISTER PROGRAM" 
! 
!     THIS PROGRAM CAUSES A LIGHT ON THE DISPLAY REGISTER 
!     TO MOVE BACK AND FORTH ON THE DISPLAY.
! 
!     TO TERMINATE THE PROGRAM, SET ITS BREAK FLAG. 
! 
!     ********** DECLARATION SECTION ********** 
! 
      LET I, BREAK BE INTEGER 
! 
      LET WAIT, UPDN BE SUBROUTINE
! 
      LET IFBRK BE FUNCTION, EXTERNAL, INTEGER
      LET EXEC BE SUBROUTINE, EXTERNAL
! 
!     ********** CODE FOR LOCAL PROCEDURES ********** 
! 
WAIT: SUBROUTINE
! 
!     THIS ROUTINE PROVIDES A WAIT LOOP TO ALLOW
!     A LIGHT TO REMAIN ON FOR A SHORT WHILE. 
! 
      LET CT BE INTEGER 
! 
      CT _ 3000 
      WHILE CT > 0 DO                  \
        [ CT _ CT - 1 ] 
      RETURN
      END WAIT
! 
! 
UPDN: SUBROUTINE
! 
!     THIS ROUTINE MOVES A LIGHT ON THE DISPLAY REGISTER
!     FROM THE M.S.B. TO THE L.S.B TO THE M.S.B.
! 
      LET BIT, N BE INTEGER 
! 
      BIT _ 100000K 
      N _ 15
! 
!     LIGHT FROM M.S.B. TO L.S.B. 
! 
      WHILE N > 0 DO                   \
        [                              \
        ASSEMBLE ["LDA BIT"; "OTA 1"]; \
        BIT _ BIT -> 1;                \
        N _ N - 1;                     \
        WAIT;                          \
        ] 
      WAIT
      N _ 15
! 
!     LIGHT FROM L.S.B. TO M.S.B. 
! 
      WHILE N > 0 DO                   \
        [                              \
        ASSEMBLE ["LDA BIT"; "OTA 1"]; \
        BIT _ BIT -< 1;                \
        N _ N - 1;                     \
        WAIT                           \
        ] 
      RETURN
      END UPDN
! 
! 
!     ********** MAIN PROGRAM **********
! 
DSPLY: BREAK _ IFBRK(I) 
! 
!     LIGHT DISPLAY REGISTER UNTIL BREAK FLAG IS SET
! 
      WHILE BREAK = 0 DO               \    
        [                              \
        UPDN;                          \
        BREAK _ IFBRK(I)               \
        ] 
      EXEC(6) 
      END DSPLY 
END$

