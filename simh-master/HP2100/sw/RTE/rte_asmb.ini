set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout

; set clk debug=CSRW;PSERV;IOBUS
; set tty debug=CSRW;SERV;PSERV;XFER;IOBUS
; set ptr debug=SERV;XFER;IOBUS
; set ptp debug=CSRW;SERV;XFER;IOBUS
; set cpu debug=INSTR;DATA;FETCH;REG;OPNDEXEC;NOOS
; set mp  debug=IOBUS
; set drc debug=IOBUS

echo
echo ***
echo *** RTE Operating System 
echo *** Assemble and Punch a .rel program
echo ***
echo

; usage:
;
; rte_asmb.ini    aaa.scr.txt         -> generates aaa.src.txt.rel
; rte_asmb.ini    aaa.scr.txt  bbb    -> generates bbb.rel
; rte_asmb.ini    aa1.scr.txt  aa2.scr.txt ...  bbb    -> generates bbb.rel

set cpu 2116

set cpu 32k
SET CPU EAU

set ptr sc=10
set clk sc=11
set tty sc=16
set ptp sc=17
set lpt sc=20

; aoutlf only needed for sysgen
set tty noautolf
send after=200k
send delay=30k

; 13210A Fixed Head Disk Controller (DPC, DPD) with 7900 Disk 

set dpd dis
set drc dis

set dpc 13210A
set dpc sc=22
set dpc ena
att dpc -q RTE_MH.disc

; Run the paper tape bootstrap

att ptr -e -q rtgen/mh_boot.abs
boot ptr

d s 0
go 100

; Boot to assemble system sources and generate papertapes

goto start

:asmb1
echo
echo --> Assemble %1
att ptr -q %1
att ptp -n -q %1.rel
send "ON,ASMB,99\r"
go until "$END ASMB     "
send "\r"
go until "*" 
return

:asmb2
echo
echo --> Assemble %1
att ptr -q %1
att ptp -q nul
send "ON,ASMB,99\r"
go until "$END ASMB     "
send "\r"
go until "*" 
return

:start

send after=200k
send delay=30k

go until "SET TIME\r"
send "\r"
go until "*" 

; reserve 40 tracks for Load and Go
send "LG,40\r"
go until "\n" 
send "\r"
go until "*" 

:asmb0
call asmb2 %1
if "%2"=="" goto punch
shift
if "%2"=="" goto punch
goto asmb0

:punch
echo
echo 
att ptp -n -q %1.rel
echo 

send "ON,FMGR\r"
go until ":"
send "PU,FIL1\r"
go until ":"
send "SA,LG,FIL1\r"
go until ":"
send "DU,FIL1,4\r"
go until ":"
send "PU,FIL1\r"
go until ":"
send "EX\r"
go until "END FMGR"
send "\r"
go until "*"

:asmb_end
det -q ptp

send "TI\r\r"
go until "*"

 
echo
goto end


:end
