ASMB,R,B,L,Z,C DOS/RT ASSEMBLER FEBRUARY 1970 
      HED ***  DOS/RT ASMBD  FALL 1971  *** 
      NAM ASMBD,5,99
      ENT ASMBD 
      EXT ?ASMB,?BPKU,?PKUP,?RSTA,?SETM,?SEGM,?ASM1 
      EXT ?MESX,?BFLG,?LFLG,?TFLG,?FLGS,?AFLG 
      EXT ?X,?Z,?LWA,?RFLG,?ICSA,?LSTL,?SECT
      EXT ?LGFL,?LUNI,?XRFI,?NEAU,?HA38 
      EXT ?FP,?FPT
*             ****************************
*             * TEMPORARY AND FLAG REGION*
*             ****************************
B     EQU 1 
TEMP  BSS 7 
      SUP  SUPPRESS EXTENDED LISTING
...1  DEC 1,2,3,4,5,6,7 
.12   DEC 12,13,14,15,16,17 
..M1  DEC -1,-2,-3,-4,-5,-6 
L     OCT 50,51,52,53,54,55,56  ( ) * + , - .
.9    DEC 9 
.29   DEC 29  (35B) 
.M8   DEC -8
.M15  DEC -15 
.M29  DEC -29 
BLNK  OCT 40        LOWER BLANK,UPPER 0 (=40B)
.IL   ASC 1,IL
.MBLN ASC 1,M 
.NO   ASC 1,NO
.OP   ASC 1,OP
.OV   ASC 1,OV
.UN   ASC 1,UN
BLNS  ASC 1,        ASCII BLANKS
TW10  OCT 176000    ADDRESS MASK
.1000 OCT 1000
BIT15 OCT 100000
.E    OCT 105 
.B    OCT 102 
      DEF *+1  ADDR OF RC
RC    ASC 5,E R B C X
.1    EQU ...1
NAMI  DEF NAME      LOC'N FOR TEMP SYMBOL STARAGE 
NAME  OCT 0,0,0,0   OPLK UXAGE
#     EQU TEMP     SAME AS DATA ORIGIN
      BSS 36          FOR TEMPORARY BELOW 
PASS  EQU #+115B   PASS FLAG(0=PASS 1  AND 1=PASS2) 
PLCN  EQU #+117B   PROGRAM LOCATION COUNTER 
PLEN  EQU #+120B LIT LENGTH PASS 1/LIT ORG PASS 2 
PNTR  EQU #+121B L POINTS AT LAST OER CURRENT CHAR. 
      SPC 1 
*             * I/O STATEMENT BUFFER *
*             *(INPUXFFER(BUFF) STARTS IN 11TH WORD)* 
IOBF  BSS 63B 50 WRDS+EOS BUFF. 
BUFF  EQU IOBF+12B 
PBUF  OCT 10400,20000,0  START OF PUNCH BUFR(NAM FMT
      ASC 3,
      OCT 0,0,0,0,143,0,0,0,0,0,0 
      BSS 43        REST OF PUNCH BUFFER
      SKP
      OCT 5757      FOR ASMB CHECK
ASMBD LDA ?ICSA 
      CMA,INA 
      STA ?LSTL 
      CLA 
      STA PASS      SET PASS FLAG=0 (PASS 1)
      JSB ?RSTA     READ AND PRINT CONTROL STATEMENT
* 
*             * TEST FOR 'ASMB' IN FIRST 4 POSITIONS *
* 
      LDA BUFF
      CMA,INA
      ADA BUFF+1 
      CPA ASMBD-1   =5757B (I.E. =ASMB?)
      JMP COPS      YES 
* 
*             * CONTROL STATEMENT ERROR ROUTINE * 
* 
CSER  LDA .CS       'CONTROL' STATEMENT'ERROR 
      LDB .CS+1 
      JSB ?MESX     PRINT MESSAGE 
      JMP ?ASMB     ASSEMBLER EXIT
* 
*             * TEST FOR CONTROL OPTIONS (A,B,L,R,T)
* 
COPS  LDA .1+4      (5) 
      STA PNTR  SET PNTR = 5 
      CLA           INITIALIZE
      STA XFOPT       X OR F OPTION COUNT 
COPUP JSB ?PKUP     GET NEXT CHARACTER
      CPA BLNK  DONE ? 
      JMP G  YES
      SZA,RSS   CHAR=0? 
      JMP G     YES, 0K 
      CPA L+4 COMMA?
      RSS        -YES- 
      JMP CSER  -NO- ERROR 
      JSB ?BPKU     SKIP BLANKS 
      LDB ?FLGS     LOC'N OF CONTROL CHAR SET 
      CPA .B        =B? (PUNCH) 
      JMP BCON      YES 
      CPA .L        =L? (LIST)
      INB 
      CPA .R        =R? (RELOC.-NOT NECESSARY)
      ADB ...1+1 YES
      CPA .T        =T? (SYMBOL TABLE PRINT)
      ADB ...1+2 YES
      CPA .N       IS IT FOR IFN? 
      ADB ...1+3 YES
      CPA .Z       IS IT FOR IFZ? 
      ADB .1+3
      CPA .A        =A? (ABSOLUTE ASSEMBLY?)
      ADB .1+4      YES 
      CPA .C       =C? (CROSS REF. TABLE?)
      ADB .1+5      YES(HOWEVER, IGNORED BY RTS)
      CPB ?FLGS     SKIP IF ANY OPTION FOUND
      JMP XTST     NO NICE MATCH SO FAR 
BCON  STA 1,I SET OPTION FLAG 
      ISZ PNTR BUMP PNTR FOR NEXT CHAR. 
      JMP COPUP     GO FOR NEXT OPTION
.L    OCT 114 
.N    OCT 116       'N' 
.R    OCT 122       ASCII 'R' 
.T    OCT 124       ASCII 'T' 
.Z    OCT 132       'Z' 
.A    OCT 101       'A' 
.C    OCT 103 
.X    OCT  130
.F    OCT 106 
XFOPT DEC 0 
CNTX  DEC -12 
DESTN DEF ?FP 
AS.FI OCT 43111 
DESLO DEF ?FPT
MVLC  DEF *+1 
      OCT 43101,42026,105000,43104,53026,105060 
      OCT 43115,50026,105040,43123,41026,105020 
CS.CK NOP 
      LDA XFOPT     LOAD A WITH OPTION FLAG 
      SZA           SKIP IF FLAG 0
      JMP CSER      IF 1 PRINT CS ERROR 
      INA           INCREMENT VALUE OF FLAG 
      STA XFOPT     SAVE IN FLAG POSITION 
      JMP CS.CK,I   RETURN
FMOVE JSB CS.CK     GO CHECK LEGAL OPTION 
      LDB DESTN     LOAD B WITH TABLE POINTER 
      ELB,CLE,ERB   CLEAR INDIRECT BIT
      LDB B,I       PUT POINTER ADDR. IN B
      LDA AS.FI     LOAD A WITH ASCII "FI"
      STA B,I       STORE IN FIX PART OF TABLE
      LDB DESLO     LOAD B WITH SECOND TABLE POINTER
      ELB,CLE,ERB   CLEAR INDIRECT BIT
      LDB B,I       PUT POINTER ADDR. IN B
TMOV2 LDA MVLC,I    LOAD FIRST WORD 
      STA B,I       STORE IN TABLE
      ISZ MVLC      INCREMENT TO NEXT WORD
      INB           INCREMENT POINTER 
      ISZ CNTX      INCREMENT COUNT, SKIP IF 0
      JMP TMOV2     RETURN FOR NEXT WORD
      JMP BCON+1    RETURN
* 
XTST  CPA .F        IS OPTION =F
      JMP FMOVE     YES, GO CHANGE TABLE
      CPA .X        IS OPTION =X
      JMP TMOVE     YES, GO CHANGE TABLE
      JMP CSER      NO, PRINT CONTROL STATEMENT ERR 
TMOVE JSB CS.CK     CHECK IF F BEFORE 
      LDB DESLC     MOVE N-EAU OPCODE VALUES
      ELB,CLE,ERB   CLEAR INDIRECT BIT FROM TBL PNTR
      LDB B,I       PUT POINTER ADDRESS IN B
TMOV1 LDA MOVLC,I    OPCODE TABLE IN ASMB.. 
      STA B,I       STORE NEW VALUE INTO OPCODE TBL.
      ISZ MOVLC 
      INB           BUMP TABLE POINTER
      ISZ COUNX    IS TABLE ALL MOVED?
      JMP TMOV1    NO,  GO MOVE ANOTHER WORD. 
      JMP BCON+1
COUNX DEC -13      LENGTH OF NEW TABLE
DESLC DEF ?NEAU    LOCATION OF OPCODE VALUE DESTIN. 
MOVLC DEF *+1      NON-EAU OPCODE VALUES FOR TABLE. 
      OCT 42111,53006    DIV
      DEF ?HA38 
      OCT 42114,42006    DLD
      DEF ?HA38 
      OCT 42123,52006    DST
      DEF ?HA38 
      OCT 46520,54406    MPY
      DEF ?HA38 
      OCT 0        END OF NEW TABLE 
*             * TEST FOR COMPATABILITY AMONG THE OPTIONS *
* 
G     LDB ?BFLG     PUNCH FLG 
      ADB ?LFLG     LIST FLG
      ADB ?TFLG    'T' FLG
      ADB ?LGFL     LOAD/GO FLAG
     SZB,RSS
     JMP CSER  ERROR - NO OUTPUT OPTION 
      LDB ?AFLG 
      LDA ?RFLG 
      SZB,RSS      'A' SET? 
      JMP *+3       NO
      SZA           YES-IS 'R' SET? 
      JMP CSER      YES - CONTROL CONFLICT
      LDA ?X        GET FWA OF AVAILABLE CORE 
      SZB           'A' SET?
      LDA ?Z        YES - GET FWA FOR ABS. ASSMBLY. 
     CMA,INA
      ADA ?LWA      LWA-FWA AVAIL MEM. IN A 
     INA      A NOW = SYMBOL TBL LENGTH 
* 
*         * CLEAR SYMBOL TABLE *
* 
      CCE           E=1 
      SZB           ABS. ASSY?
      CLE           YES - E=0 
      LDB ?Z        GET FWA OF ABSOL ASSY.
      SEZ           SKIP IF ABS. ASSY.
      LDB ?X        FWA OF SYM TBL TO 'B' 
      JSB ?SETM 
      NOP           SET SYMBOL TABLE TO ZERO
*             ********************* 
*             * START PASS 1 HERE * 
*             ********************* 
      LDA ?LUNI    GET INPUT LUN
      CPA .1+1     IS IT THE DISC?
      RSS          YES
      CLA          NO 
      STA ?XRFI    SET XREF INPUT FLAG... 
      LDA TW10
      STA ?ASM1     SET FLAG FOR 'INIT' PROCESSING
      CLA 
      STA PASS      SET PASS 'FLAG FOR PASS 1 
      STA PLCN      INITIALIZE PROG LOC'N COUNTER 
      STA PLEN      CLEAR LITERAL LENGTH FLAG 
      LDA ABSA      SEG. CALL FOR ABSOLUTE
      LDB ?AFLG 
      SZB,RSS       ABS. ASSY? - SKIP IF TRUE.
      LDA *+2        PICK UP CODE FOR ASMB1 
      JMP ?SEGM     GO TO LOAD THE NEXT SEGMENT 
      ASC 1,1 
ABSA  ASC 1,4 
.CS   ASC 2,CS
      END ASMBD 
