ASMB,R,L,B,C   *R/T DRIVER <00> TELETYPEWRITER* 
      HED ** RTE DRIVER DVR00 29029-60001 REV 1543 **                 
      NAM DVR00,0 29029-60001 DATE CODE 1543  
* 
      ENT I.00,C.00,I.01,C.01,I.02,C.02 
      EXT $LIST 
******************************************************************
*  (C) COPYRIGHT HEWLETT-PACKARD COMPANY 1975.  ALL RIGHTS
*  RESERVED. NO PART OF THIS PROGRAM MAY BE PHOTOCOPIED 
*  REPRODUCED OR TRANSLATED INTO ANOTHER PROGRAM LANGUAGE WITHOUT 
*  THE PRIOR WRITTEN CONSENT OF HEWLETT-PACKARD COMPANY.
******************************************************************
* 
****** PROGRAM  DESCRIPTION ******
* 
*    DRIVER 00  OPERATES UNDER THE CONTROL OF THE 
* I/O CONTROL MODULE OF THE REAL-TIME EXECUTIVE.
* THIS DRIVER IS RESPONSIBLE FOR CONTROLLING DATA 
* TRANSMISSION WITH A TELETYPE ASR 33/35 WITH THE 
* 2116 PARALLEL INTERFACE. <00> IS THE EQUIPMENT
* CODE ASSIGNED TO THIS TYPE OF DEVICE. I.00 IS 
* THE ENTRY POINT FOR THE *INITIATION* SECTION AND
* C.00 FOR THE *COMPLETION* SECTION.
* 
*  - THE INITIATION SECTION IS CALLED FROM I/O
*    CONTROL TO INITIALIZE A DEVICE AND INITIATE
*    A DATA TRANSFER OR CONTROL FUNCTION. 
* 
*      CALLING SEQUENCE:
* 
*           - ADDRESSES OF DEVICE EQT ENTRY 
*             SET IN "EQT1-EQT15" - 
* 
*           (A) = I/O ADDRESS OF DEVICE 
* 
*        (P)   JSB  I.00
*        (P+1) - RETURN - 
* 
*               (A) = 0, OPERATION INITIATED, OR
*               (A) = REJECT CODE:
* 
*                    2, ILLEGAL CONTROL REQUEST,
*                       OR CONTROL FUNCTION HAS 
*                       BEEN DONE (E.G., SET EOT
*                       STATUS).
* 
* 
*  - THE COMPLETION SECTION IS CALLED BY CENTRAL
*    INTERRUPT CONTROL TO CONTINUE OR COMPLETE
*    AN OPERATION.
* 
*      CALLING SEQUENCE:
* 
*           - ADDRESSES OF DEVICE EQT ENTRY 
*             SET IN "EQT1-EQT15" - 
* 
*           (A) = I/O ADDRESS OF DEVICE 
* 
*        (P)   JSB  C.00
*        (P+1) -- COMPLETION RETURN   --
*        (P+2) -- CONTINUATION RETURN --
* 
*         - COMPLETION RETURN:
*            (A) = 0, SUCCESSFUL COMPLETION WITH
*               (B) = # WORDS OR CHARS. TRANSFERRED 
*            (A) = 2 IF SIMULATED EOT ENCOUNTERED,
*            (A) = 4 IF TIME OUT OCCURED. 
*               (B) = 0 
* 
*         - CONTINUATION RETURN: REGISTERS
*               MEANINGLESS.
* 
* 
*  - RECORD FORMATS:
* 
*     ASCII (INPUT): A STRING OF CHARACTERS TERMIN- 
*     -----          ATED BY A LINE-FEED. IF THE
*                    REQUESTED LENGTH IS FULFILLED
*                    BEFORE A LINE FEED, THE RE-
*                    MAINING CHARACTERS ARE IGNORED 
*                    UNTIL A LINE-FEED IS INPUT.
*                    THE 8-LEVEL BIT (BIT 07) IS
*                    SET = 0 FOR 7-BIT ASCII CODE.
* 
*         SPECIAL CHARACTER PROCESSING: 
* 
*          RETURN - ALWAYS IGNORED AND IS NOT 
*                   TRANSMITTED TO USER BUFFER
*          LINE-FEED - IGNORED IF INPUT BEFORE
*                   THE FIRST VALID CHARACTER 
*                   OF A RECORD; RECORD TERMINATOR
*                   AT THE END OF A RECORD AND IS 
*                   NOT TRANSMITTED TO BUFFER OR
*                   COUNTED.
*         CONTROL/A  - DELETES PREVIOUS CHARACTER 
*           BACKSPACE (CRT) OR CONTROL/Y -DELETES PREVIOUS CHARACTER
*           CONTROL/H 
*          RUB-OUT    - DELETES CURRENT RECORD; 
*                       AFTER LINE-FEED IS INPUT, 
*                       NEXT RECORD IS READ.
*          CONTROL/D  - FOURCES EOT IF ENTERED AT ANY TIME
* 
*     ASCII (OUTPUT): A STRING OF CHARACTERS, THE 
*     -----          NUMBER DESIGNATED BY THE 
*                    "BUFFER LENGTH" IN THE REQUEST,
*                    TERMINATED BY A RETURN AND 
*                    LINE-FEED (SUPPLIED BY THE 
*                    DRIVER). 
* 
*                     SPECIAL PROCESSING FOR ASCII
*                     OUTPUT IS PROVIDED IF BIT 09
*                     IN THE CONTROL WORD = 1. THIS 
*                     MEANS THAT THE ASCII INFOR- 
*                     MATION IS TO BE PUNCHED INSTEAD 
*                     OF PRINTED ON AN ASR-35.
* 
*         SPECIAL CHARACTER PROCESSING: 
* 
*          LEFT-ARROW:  IF A LEFT-ARROW IS THE
*                    LAST CHARACTER IN THE USER 
*                    BUFFER, THE RETURN/LINE-FEED 
*                    AND ARROW CODES ARE NOT OUTPUT.
* 
*          A ZERO BUFFER LENGTH CAUSES ONLY A 
*                    RETURN/LINE-FEED TO BE OUTPUT. 
* 
* 
*     BINARY (INPUT): A STRING OF CHARACTERS
*     ------          SPECIFIED BY THE BUFFER 
*                     "LENGTH" IN THE REQUEST.
* 
*                   "V-FORMAT": IF THE "V" FIELD
*                    IN THE CONTROL WORD OF THE 
*                    REQUEST = 1, THE LENGTH OF 
*                    THE RECORD IS DESIGNATED (IN 
*                    WORDS) BY THE FIRST CHARACTER
*                    OF THE RECORD. THE WORD COUNT
*                    INCLUDES THE FIRST WORD. IF
*                    THE WORD COUNT IS LARGER THAN
*                    THE BUFFER LENGTH, THE BUFFER
*                    LENGTH IS USED.
* 
*     BINARY (OUTPUT): A STRING OF CHARACTERS 
*     ------          SPECIFIED BY THE BUFFER 
*                     "LENGTH" IN THE REQUEST.
*                     FOUR (4) FEED-FRAMES ARE
*                     OUTPUT AT THE END OF THE
*                     END TO SERVE AS AN INTER- 
*                     RECORD GAP. 
* 
* 
*  -  SIMULATED END-OF-TAPE: IF CONTROL/D IS ENTERED DURING A NORMAL
*     --------- --- -- ----  ASCII READ OR IF 30 FEED-FRAMES
*                            (ZEROS) ARE INPUT
*                            BEFORE THE FIRST CHAR- 
*                            ACTER OF A RECORD, AN
*                            EOT INDICATION IS
*                            SET IN THE STATUS FIELD
*                            (BIT 05 OF WORD 5) OF
*                            THE EQT ENTRY AND THE
*                            INPUT TERMINATED. IF 
*                            THE EOT BIT IS SET 
*                            WHEN THE CONDITION IS
*                            ENCOUNTERED, THE EOT 
*                            IS IGNORED AND CHARS 
*                            ARE INPUT UNTIL A
*                            RECORD IS STARTED (I.E,
*                            LEADER IS AUTOMATICALLY
*                            SKIPPED AFTER EOT).
* 
*     SPECIAL FORMAT BIT:THE SPECIAL FORMAT BIT(10) ALLOWS
*                        READING OF NONSTANDARD TAPE FORMATS
*                        IF SET AND V IS NOT SET THEN NO
*                        LEADER WILL BE SKIPPED ON READS
*                        AND ON BINARY OUTPUT THE INTERRECORD 
*                        FOUR FEED FRAMES WILL BE SUPPRESSED. 
*                        IN ADDITION ALL CHARACTERS INA AN ASCII
*                        EXCEPT THE TERMINAL LINE FEED ARE PASSED 
*                        TO THE USER BUFFER AND ARE COUNTED.
*                        IF ON INPUT THE V-BIT IS SET THE 
*                        RECORD WILL BE PROCESSED AS AN ABSOLUTE
*                        BINARY RECORD IN THAT 3 WILL BE ADDED
*                        TO THE WORD COUNT IN THE FIRST NON-ZERO
*                        CHARACTER.  THE V-BIT IS NOT TESTED
*                        FOR OUTPUT SO THE FOUR FEED-FRAMES WILL
*                        BE SUPPRESSED AS IF THE V-BIT WERE NOT . 
* 
*  -  CONTROL FUNCTIONS ACCEPTED: 
* 
*     10 - TEN INCHES OF ZEROS (FEED-FRAMES) ARE
*         OUTPUT FOR LEADER/TRAILER.
* 
*     11 - LINE SPACING: THE PARAMETER WORD OF THE
*           REQUEST DETERMINES THE NUMBER OF
*           LINE-FEEDS TO BE OUTPUT.
* 
*     07 - THE EOT STATUS BIT IS SET TO ALLOW 
*          "LEADER" TO BE SKIPPED ON THE NEXT 
*          INPUT REQUEST. 
* 
* 
*  -  SYSTEM TELETYPE PROCESSING: THE SYSTEM
*              TELETYPE IS ALWAYS LEFT IN THE 
*              "INPUT STATE" WITH CONTROL SET/
*              FLAG CLEARED TO LEAVE THE KEYBOARD 
*              ACTIVE.  IF A KEY IS STRUCK WITH 
*              NO INPUT IN EFFECT, THE FLAG 
*              "OPATN" IN BASE PAGE IS SET NON- 
*              ZERO. IF A KEY IS STRUCK DURING
*              AN OUTPUT OPERATION TO THE SYSTEM
*              TTY, THE FLAG IS SET.
* 
* 
* -   SPECIAL PROCESSING
      SPC 1 
*          THIS DRIVER HAS BEEN MODIFIED TO CORRECTLY DRIVE 
*          THE PUNCH AND PHOTO READER.  IT ALSO CHECKS FOR
*          BUSY STATUS ON THE TTY INTERFACE AND TAKES THE 
*          ACTION NEEDED TO AVOID LOSS OF SYNC. 
      SPC 1 
* -  2762 PRINTER PROCESSING
      SPC 1 
*         THE 2762 PRINTER REQUIRES THE FOLLOWING SPECIAL ACTIONS:
*          1. STALL CHARACTERS ARE PROVIDED ON THE END OF EACH OUTPUT.
*          THE NUMBER  OF STALLS IS A FUNCTION OF WHETHER IT IS A 
*           2762 A OR B AND THE # OF CHARACTERS PREVIOUSLY TPUT 
*          IN THE LINE. 
*          2. CONTROL/H IS SENT AS PART OF BACKSPACE PROCESSING 
*          INSTEAD OF CONTROL/Y.
      SPC 1 
*         THE ABOVE PROCESSING IS DONE FOR
*         DEVICES WITH ODD SUBCHANNELS. 
*         (SEE BELOW FOR MEANING OF OTHER SUBCHANNEL BITS)
     SPC 2
*  -  EOT/TIME OUT OPTIONS
      SPC 1 
*     TIME OUT IS INTERCEPTED BY THIS DRIVER AND EOT DETECTED BY
*     IT.  THE CALLER WILL ALWAYS RECEIVE THE 
*     STATUS APPROPIATE TO
*     THE CONDITION, HOWEVER THE SYSTEM NEED NOT BE NOTIFIED OF 
*     THE CONDITION.  THE DRIVER ANDS THE UNIT NUMBER WITH THE
*     A REGISTER PRIOR TO A COMPLETION RETURN THUS THE SUBCHANNEL 
*     DEFINES THE POSSIBLE ERRORS SENT TO THE SYSTEM. 
*     TIME OUT IS 4 AND EOT IS 2 THUS:
      SPC 1 
*     IF EOT IS TO PUT THE DEVICE DOWN SET SUBCHANNEL TO 2,3,6,OR 7.
*     IF TIME OUT IS TO PUT THE DEVICE DOWN SET 
*     SUBCHANNEL 4,5,6 OR 7.
      SPC 1 
*     THIS DOES NOT AFFECT THE NOT-READY ERROR CAUSED BY LOW TAPE 
*     ON THE PUNCH SINCE THIS IS DETECTED AT INITIATION.
      SPC 1 
*     THE ABOVE INPLIES TT A ZERO OR 1 SUBCHANNEL TTY OR PHOTO
*     READER IS ONLY SET DOWN BY AN OPERATOR "DN" REQUEST.
      SPC 2 
*  -  PROGRAM SCHEDULING
      SPC 1 
*          IF A PROGRAM IS LINKED TO THE TRAP CELL FOR ONE OR 
*          MORE OF THE EQT ENTRIES FOR THIS DRIVER THEN THAT
*          TTY IS A TERMINAL. 
* 
*          A TERMINAL, WHEN ENABLED, MAY SCHEDULE THE SO LINKED 
*          PROGRAM (MAY BE A DIFFERENT PROGRAM FOR EACH TERMINAL) 
*          BY STRIKING ANY KEY AND TIME 
*          THAT THE TTY IS NOT DOING INPUT
*          ( THE SAME AS GETTING SYSTEM ATTENTION).  IF THE 
*          TERMINAL IS THE SYSTEM TTY THE SYSTEM ATTENTION FLAG 
*          IS SET AND THE PROGRAM IS NOT SCHEDULED. 
*          WHEN THE PROGRAM RUNS A CALL TO RMPAR WILL RECOVER 
*          WORDS 4 THRU 8 OF THE EQT OF THE INTERRUPTING
*          TTY,  THAT IS EQT4 IS SET IN THE PROGRAMS B REG. 
      SPC 1 
* - BUFFER FLUSHING 
      SPC 1 
*          A BUFFER FLUSH CALL HAS BEEN IMPLEMENTED.  AFTER THIS
*          CALL ALL WRITES AND ACTION (I.E. LEADER AND PAGING)
*          CONTROL REQUESTS ARE IGNORED UNTIL EITHER: 
      SPC 1 
*              1.) THE QUE IS EMPTY OR
*              2.) A RESTORE CONTROL REQUEST IS PROCESSED OR
*              3.) AN INPUT REQUEST IS PROCESSED. 
* - ADDED REQUESTS
       SPC 1
*        CONTROL SUBFUNCTION           ACTION 
      SPC 1 
*             20                ENABLE TERMINAL 
   SPC 1
*             21                DISABLE TERMINAL
      SPC 1 
*             22                SET TIME OUT ( THE EXTRA CONTROL
*                               WORD IS TO BE THE NEW TIME OUT) 
      SPC 1 
*             23                CLEAR THE OUTPUT QUE (BUFFER FLUSH) 
      SPC 1 
*             24                RESTORE OUTPUT PROCESSING 
*                               THIS REQUEST NEED ONLY BE GIVEN IF
*                               SOME OF THE BUFFER IS TO BE SAVED.
      SPC 1 
* - EQT USAGE - 
* 
*     EQT5  STATUS BITS ARE USED AS FOLLOWS:
* 
* BIT 0 - NOT USED. 
* BIT 1 - TERMINAL IS ENABLED (1)/DISABLED (0)
* BIT 2 - A STALL IS REQUIRED/INPROGRESS. 
* BIT 3 - NOT USED. 
* BIT 4 - NOT USED. 
* BIT 5 - EOT FLAG. 
* BIT 6 - NOT USED. 
* BIT 7 - BUFFER FLUSH IS IN PROGRESS (NEVER SEEN BY A USER). 
* 
*     EQT6  FUNCTION BITS AS SEEN IN THE CALL, I.E.:
* 
* BIT 6 - BINARY OR M BIT 
* BIT 7 - VARIABLE LENGTH BINARY OR (V) BIT 
* BIT 8 - ECHO BIT SET TO ECHO ON INPUT (E) BIT 
* BIT 9 - PUNCH BIT SET TO PUNCH ASCII. 
* BIT 10- HONEST BIT (SEE ABOVE) (H) BIT. 
* 
*     EQT7  USER BUFFER LENGTH
* 
*     EQT8  USER BUFFER ADDRESS.
* 
*     EQT9  RUNNING CHARACTER ADDRESS,POINTS AT NEXT CHARACTER. 
* 
* EQT10  ADDRESS OF LAST CHARACTER IN USER BUFFER FOR READ/WRITE
*        ALSO OPERATION COUNT ON LEADER AND SPACING CONTROL OPS.
* 
* EQT11  STALL COUNTER - EOT COUNTER - RECORD GAP COUNTER.
*        RESIDUE COUNTER ON VARIABLE LENGTH BINARY READS. 
* 
* EQT12  ADDRESS TO GO TO ON INTERRUPT. 
* 
* EQT13  -1 IF NOT A TERMINAL ELSE ID SEG ADDRESS OF TERMINAL PROG. 
      HED <DVR00  **INITIATION SECTION**> 
* 
********* INITIATION  SECTION **********
* 
* 
I.00  NOP 
I.01  EQU I.00
I.02  EQU I.00
* 
      STA NXQU      SAVE THE SELECT CODE
      JSB SETIO    SET I/O INSTRUCTIONS FOR UNIT. 
      LDA DIMX      SET UP C.XX FOR CONTINUATION
      STA C.00      RETURN
* 
      LDA EQT13,I   GET SCHEDULE FLAG 
      SZA           DEFINED?? 
      JMP CONT      YES CONTINUE
      LDA NXQU      NO SO SET UP
      ADA N6        INDEX INTO THE INTBLE 
      ADA INTBA     TO GET THE SCEDULE WORD 
      LDB A,I       GET THE WORD
      CMB,CLE,SSB,INB SET POSITIVE   IF EQT THEN
      CCB,CCE       SET TO -1  IE NO PGM TO BE SCHEDULED
      STB EQT13,I   SAVE FOR PGM CALL 
      LDB EQT1      SET EQT ADDRESS IN
      STB A,I       THE INTERRUPT TABLE 
      LDA EQT4,I    SET THE "I WILL HANDLE TIME OUT"
      IOR BIT12     BIT IN EQT4 
      STA EQT4,I    RESTORE THE WORD
      SPC 1 
CONT  LDA EQT6,I    GET REQUEST CONTROL WORD
.23B  OCT 23 RAR    ROTATE TO TEST FOR
      SSA,SLA       CONTROL REQUEST 
      JMP CONTL     - CONTROL REQUEST - 
* 
      LDB EQT5,I
      BLF,BLF       CHECK IF IGNOR BIT IS SET 
      SLA,ELA       IF READ SKIP E=1/0 READ/WRITE 
      SSB,RSS       IF WRITE AND FLUSHING,SKIP
      JMP NSET      FAILED ONE OF THE CONDITIONS
* 
      JSB NXQU      GO TEST THE CONDITIONS
IMCOM LDA .4        THEN DO AN
      JMP I.00,I    IMMEADIATE EXIT 
      SPC 1 
.4    OCT 4 
BIT12 OCT 10000 
DIMX  DEF IMCOM 
N36   DEC -36       MAX STALL COUNT FOR 2762B 
NULCT NOP 
N6    DEC -6
N7    DEC -7
      SKP 
* 
* CONSTRUCT DEVICE PROGRAM CODE ACCORDING TO REQUEST
* 
NSET  LDB PRINT     SET FOR PRINT 
      SEZ           IF READ REQUEST 
      ADB BIT13     SET TO KEYBOARD 
      RBR,ELB       SET LEAST B 1/0 READ/WRITE
* 
      LDA EQT7,I    CONVERT BUFFER ADDRESS TO EVEN
      RAL            CHARACTER ADDRESS AND SET
      STA EQT9,I     AS CURRENT BUFFER ADDRESS. 
      LDA EQT8,I    GET BUFFER LENGTH.
      CMA,SSA,INA,RSS IF CHARACTERS SPECIFIED,
      JMP D02.1      USE VALUE. 
.20B  OCT 20 ALS    CONVERT WORDS TO CHARACTERS.
      CMA,INA        MAKE NEGATIVE
D02.1 SLB,RSS       SKIP ZERO CHECK 
      JMP D02.3     IF WRITE
      SZA,RSS       IF CHAR. COUNT = ZERO, SET = -1 
      CLE,INA        FOR SYSTEM PROTECTION. 
D02.3 ADA EQT9,I    SET ADDRESS OF LAST CHAR. 
      STA EQT10,I   IN EQT 10 
      SPC 1 
      LDA EQT6,I   POSITION CONTROL 
      ALF,ALF       INFORMATION 
.22B  OCT 22 RAL    FIELD FOR EXAMINATION 
      CCE,SLB      IF REQUEST IS FOR INPUT, 
      JMP D01       GO TO SELECT DEVICE CONDITIONS. 
* 
      RAL,SLA,RAR   IF BINARY MODE, 
      JMP D00        GO TO SELECT PUNCH UNIT. 
B1100 ARS           ROTATE "P" BIT TO 
      RAR,SLA        BIT 00, TEST BIT.
D00   ADB MPUNC     IF PUNCH SUBTRACT TO THE PUNCH
      CLA,INA       SET A TO ILLEGAL DRIVER TYPE FOR THIS REQUEST 
      JMP D02        FOR PUNCH ASCII (P=1). 
* 
D01   ERA,SLA,RAR   IF KEYBOARD MODE SELECTED,
      ADB BIT13     TURN ON THE ECHO BIT
      SEZ,CME,RSS   IF V-BIT SKIP HONIST BIT SET E
      RAR,ERA       ELSE HONEST BIT TO E
      LDA .2        ILLEGAL TYPE CODE TO A
* 
*  INITIALIZE FLAGS,EOT COUNTER ECT.
* 
D02   CPA TEMP5     IF ILLEGAL CALL FOR THIS DRIVER 
      JMP ILCOD      TYPE GO REJECT  THE CALL 
* 
      LDA EOTC     FOR INPUT, SET  EOT  COUNTER 
      CME,SLB       ELSE SKIP 
      STA EQT11,I 
      SPC 1 
      LDA WCONT     SET UP THE CONTINUE ADD 
* 
* SELECT DEVICE OPERATING CONDITIONS - DEVICE 
*  NEEDS TO BE SELECTED ONLY ONCE FOR EACH
*  OPERATION. 
* 
D02.6 STA EQT12,I   SET RETURN ADDRESS IN EQT 12. 
      LDA TEMP3     GET THE TTY STATUS
      SLB,RSS       SKIP IF READ
      SSA,RSS       IF WRITE SKIP IF BUSY 
IO1   OTB TTY       SEND SET UP COMMAND UNLESS BUSY.
      SEZ,SLB       IF READ 
      JMP D23.1     GO DO READ THING
      SLB           IF HONEST INPUT 
      JMP D21.2     GO DO HONEST READ THING 
      CLE,SSA,RSS   IF NOT BUSY 
      JMP D19       GO OUTPUT FIRST CHARACTER 
      JSB INCR      GO WAIT FOR INTERRUPT!
      JMP CONT      TRY TO SET UP AGAIN 
      SPC 2 
ILCOD CLA,INA       ILLEGAL REQUEST EXIT
      JMP I.00,I    TAKE ACCEPT RETURN
      SPC 2 
N4    OCT -4
MPUNC OCT -10000
BIT13 OCT 20000 
PUNCH OCT 110000
PRINT OCT 120000
WCONT DEF D31       ADDRESS OF OUTPUT PROCESSOR 
      SPC 3 
NXQU  NOP 
      LDA EQT1,I    IF THE LAST REQUEST IN THE QUEUE
      LDA A,I       THEN CLEAR
      CLE,SZA       THE IGNOR BIT 
      JMP NXQU,I    NOT LAST REQUEST SO EXIT
      LDA EQT5,I    LAST REQUEST SO CLEAR 
      AND NT204     THE IGNOR BIT 
      STA EQT5,I    RESET THE WORD
      JMP NXQU,I    AND RETURN
      SPC 2 
NT204 OCT 177577
B200  OCT 200 
.11B  OCT 11
.21B  OCT 21
.24B  OCT 24
EOTC  DEC -29 
      SKP 
* 
* CONTROL REQUEST PROCESSING
* 
CONTL LSR 5         ROTATE CONTROL BITS TO LOW PART OF WORD 
      AND B177      ISOLATE FUNCTION FIELD. 
      LDB EQT7,I    GET THE EXTRA CONTROL WORD
      SSB,RSS       IF POSITIVE 
      CMB,INB       SET NEGATIVE
      CPA .10B     FIELD = <10> TO GENERATE 
      JMP D05       LEADER (10 INCHES OF BLANK TAPE)
      CPA .11B     FIELD = <11> FOR LINE
      JMP D06       SPACING 
      CPA .7       IF FUNCTION = 7, GO TO SET 
      JMP EOTSM     SIMULATED EOT STATS.
      CPA .20B      IF 20 THEN
      JMP ON        GO TURN ON THIS TERMINAL
      CPA .21B      IF 21 
      JMP OFF       GO TURN OF THIS TERMINAL
      CPA .22B      IF 22 THEN
      JMP TIME      GO SET THE TIME OUT PRAMETER
      CPA .23B      IGNOR REQUEST?
      JMP CLBUF     YES GO EFFECT A BUFFER CLEAR
      CPA .24B      RESTORE NORMAL I/O? 
      JMP RSTOR     YES GO RESTORE IT 
* 
REJ   JSB NXQU     CHECK FOR EMPTY QUE
* 
      LDA .2        SET (A) = 2 FOR ILLEGAL CONTROL 
      JMP I.00,I    - RETURN FOR REJECT-
* 
CLBUF LDA B200      SET THE FLUSH FLAG
.10B  SLA           SKIP
* 
EOTSM LDA B40       SET BIT 05 (EOT STATUS) TO
IOR5  IOR EQT5,I    SKIP LEADER ON
ST5   STA EQT5,I     NEXT INPUT, CAUSE REJECT RETURN
* 
* REQUEST ERROR - CAUSE REJECT RETURN TO I/O CONTROL
* 
      JMP REJ       DO ILLEGAL REJECT 
* 
ON    LDA EQT13,I   GET THE ID ADDRESS
      INA,SZA       IF NO ADDRESS THEN SKIP (A=0) 
      JSB D30       ENABLE THE INTERRUPT
      RAL,CLE,ELA   ROTATE SIGN TO BIT 1
      JMP IOR5      GO STORE IT 
      SPC 1 
OFF   LDA N3        GET NOT OF BIT 1. 
AND5  AND EQT5,I    MASK BIT OUT OF STATUS
      JMP ST5       GO RESTORE IT IN THE EQT
* 
TIME  STB EQT14,I   SET THE NEW TIME OUT IN THE EQT.
      JMP REJ       GO TO THE REJECT EXIT 
* 
N100  DEC -100
* 
* LEADER/TRAILER GENERATOR
* 
D05   RSS  OR NOP IF 2762 
      JMP REJ       REJECT LEADR REQUEST FOR 2762 
      SPC 1 
      LDA N100     SET INDEX COUNTER FOR FEED FRAMES
      STA EQT9,I    = -100. 
      LDB PUNCH 
      CLA          (A) = 0 FOR
      JMP D07       FEED FRAME. 
* 
* RESTOR NORMAL OPERATION  I,E . STOP IGNORING REQUESTS 
* 
RSTOR LDA NT204     GET THE MASK TO A 
      JMP AND5      GO MASK AND RESTORE EQT5
* 
* LINE SPACING
* 
D06   SZB,RSS      PROTECT AGAINST
      CCB,CLE       A ZERO VALUE. 
      STB EQT9,I   SET INDEX. 
      LDA FLINF    (A) = LINE FEED CODE 
      LDB PRINT 
D07   STA EQT10,I  SET ACTION CODE, 
      LDA EQT5,I     CHECK THE IGNOR BIT
      AND B200       SET
      SZA 
      JMP REJ        YES REJECT THE REQUEST 
      CLA,INA       IF TYPE 
      CPA TEMP5     IS O1 
      JMP REJ       THEN REJECT THE CONTROL 
      LDA DFCNT     SET UP THE INTERRUPT ADDRESS IN A 
      JMP D02.6      NO  RETURN TO START OUTPUT,(B)00=0 
      SPC 3 
FLINF OCT 412       LINE FEED WITH FLAG SET 
DFCNT DEF D39 
B177  OCT 177 
N9    DEC -9
      HED <CONFIGURATION SECTION>                 A-29029-91001-1 
* SUBROUTINE:  <SETIO>
* 
*  PURPOSE: TO CONFIGURE THE I/O INSTRUCTIONS 
*           IN THE DRIVER TO REFERENCE THE
*           SUBJECT TELETYPE. 
* 
*  CALL:      (A)05-00 CONTAINS I/O ADDRESS 
*       (P)    JSB  SETIO 
*       (P+1)  -RETURN- (REGISTERS MEANINGLESS) 
* 
SETIO NOP 
TEMP2 EQU SETIO 
      IOR LIB      COMBINE <LIB> WITH I/O ADDRESS 
      STA IO3       AND SET.
IO3   LIB TTY       GET THE CHARACTER AND 
TEMP3 EQU IO3       SAVE IT 
      STB TEMP3 
* 
      XOR B4300    CONSTRUCT  <OTA> INSTRUCTION.
      STA IO2 
      STA IO6 
      STA IO9 
* 
      IOR B1100      CONSTRUCT  <STC,C> INSTRUCTION 
      STA IO4 
      STA IO7 
* 
      IOR B4000    CONSTRUCT  <CLC> INSTRUCTION.
      STA IO5 
      XOR B1100 
      STA IO1       STORE OTB INSTRUCTION 
      LDA EQT4,I     CONFIGURE FOR THE 2762 
      ALF,ALF       ROTATE THE LEAST
      RAL,ELA        SUBCHANNEL BIT TO E
      LDB N7        DELAY COUNT FOR 30CPS 
      AND .10B      EXTRACT BIT9
      SZA 
      LDB N36       DELAY COUNT FOR 120CPS
      STB NULCT     STALL COUNT FOR 2762 A OR B 
      LDA RSS        GET A RSS TO A 
      CLB,SEZ        NOP TO B 
      SWP            SWAP IF 2762 
      STA D05        SET SWITCH 2 
      STA D20.1      SET SWITCH 4 
      STB SW5        SET SWITCH 5 
      LDA EQT5,I    SET UP
      ALF,ALF       THE DVR NUMBER
      AND .3        IN
      STA TEMP5     TEMP5 
* 
      JMP SETIO,I 
      SPC 2 
B4300 OCT 4300
B4000 OCT 4000
.7    OCT 7 
.2    OCT 2 
LIB   LIB 0 
      HED < DRIVER 00  *COMPLETION SECTION*>      A-29029-91001-1 
* 
********* COMPLETION  SECTION **********
* 
* 
C.00  NOP 
C.02  EQU C.00
C.01  EQU C.00
* 
      JSB SETIO    SET I/O INSTRUCTIONS FOR UNIT. 
* 
      LDA EQT1,I    GET THE QUE WORD
      CCE,SZA       IF NO QUE THEN SKIP 
      JMP D19       QUE SO GO HANDLE I/O FUNCTION 
      STA EQT15,I   SET TIME OUT TO ZERO (NO ACTIVE RQ) 
      JSB SCHD      NO QUE SO A SCHEDULE OR ATTN. 
      JMP EXIT      GO TAKE CONTINUATION EXIT 
* 
D19   LDA EQT4,I     CHECK FOR TIME OUT 
      ALF             IF TIME OUT ENTRY 
      SSA                TEST BIT 11
      JMP TMX1         GO DO TIME OUT EXIT. 
      LDB EQT6,I    GET REQUEST CONTROL WORD -
      RBR,SLB,BLF   IF OUTPUT GO DO OUTPUT
      JMP D20        CHECKS 
D19.1 RBL,CLE,RBL   POSITION THE WORD 
      ELB,BLF       H - BIT TO E,M - BIT TO B(00) 
      LDA SW2       SET SWITCH FOR JMP OUT1 
      STA SWTCH 
      LDA B40       SET A TO ASCII BLANK
      SLB,ERB       H TO B(15),V TO B(00) M TO E-REG
      CLA           IF BINARY WIPE THE BLANK
      STA FILL      SET FILL CHARACTER
      STB TEMP2     SET TEMP2 :H---P:E:V: 
      LDA TEMP3     GET CHAR  :15--2:1:0: 
      SPC 1 
      SEZ,RSS       IF ASCII REMOVE 
      AND B177       THE 8-LEVEL BIT. 
      LDB EQT12,I   GET THE RETURN ADDRESS AND
      JMP B,I       GO TO IT. 
      SPC 3 
D20   LDA TEMP3     GET THE CHARACTER 
      SEZ,CLE,RSS   IF FIRST OUTPUT 
      JMP D20.2     GO TEST FOR EOT ON PUNCH
      SPC 1 
      AND B377      MASK OUT THE CHARACTER
      CPA B377      IF RUBOUT 
      RSS           SKIP;ELSE 
      JSB SCHD      SCHEDULE THE PROG OR SET ATTN.
* 
D20.0 LDA EQT5,I    ANY PENDING STALLS? 
      AND .4        BIT2 SET IF YES 
D20.1 RSS OR NOP IF 2762
      SZA,RSS       ANY REQUIRED? 
      JMP D19.1     NO SO CONTINUE
      SPC 1 
      LDA EQT5,I    CLEAR STALL FLAG IN BIT2
      AND N6
      STA EQT5,I    AND RESET IN EQT5 
      SPC 1 
      LDA EQT12,I   GET CURRENT RETURN ADDRESS
      STA OUTCR     AND SET IT FOR OUTCR
      ISZ EQT11,I   STALLING COUNT ZERO YET?
      JMP STAL2     NO GO OUTPUT THE RUB OUT
* 
      LDA LINF      ADD L F AFTER ALL STALLS OUT
SWTCH NOP           JMP D19.I IF STALLS AT START OF LINE
*                   JMP OUT1 IF STALL AT END OF LINE
      SPC 1 
D20.2 AND B60       MASK TO THE EOT BITS
      CMA,CLE,INA   SET E IF NOT EOT
      LDA SW1       SET SWITCH FOR JMP D19.1
      STA SWTCH 
      LDA N3        3 STALLS AT START IS ENOUGH 
      STA EQT11,I 
      LDA .2        CHECK IF DVR02
      CPA TEMP5     ? 
      SEZ,CCE,INA    IE EOT AND DVR02 SKIP
      JMP D20.1     CHECK IF 2762 
      JMP I.00,I    ILLEGAL CALL REJECT IT. 
      SPC 2 
SW1   JMP D19.1     INITIAL STALLS
SW2   JMP OUT1      END OF LINE STALLS
      SPC 1 
*     INPUT SECTION 
* 
D23.1 JSB INCR      GO GET A CHARACTER. 
      SZA          IF NON-ZERO CHARACTER, 
      JMP D21       PROCESS.
* 
* CHECK FOR POSSIBLE EOT CONDITION
* 
      LDA EQT5,I    IF EOT FLAG 
      AND B40       ALREADY SET 
      SZA,RSS       IGNOR LEADER
      ISZ EQT11,I  INDEX EOT COUNTER. 
      JMP D23.1      -INDEX NOT ZERO, TRY NEXT CHAR.
      SPC 1 
D23.2 CLB           SET (B) = 0 FOR EOT AND GO
      JMP D28       TO STATUS COMPLETION SECTION. 
* 
* PROCESS  INPUT  CHARACTER 
* 
D21   SEZ,RSS       IF ASCII GO 
      JMP D22       DO ASCII THING. 
* 
* VARIABLE LENGTH CHECK AND PROCESSING
* 
      LDB TEMP2    CONTINUE IF
      SLB,RSS       INPUT RECORD IS 
      JMP D23        NOT VARIABLE LENGTH
      SSB           TEST THE HONEST BIT 
      ADA .3        ADD THREE IF ABSOLUTE 
* 
B60   CLE,ALS      CONVERT TO # CHARACTERS, 
      ADA EQT9,I    ADD CHARACTER BUFFER ADDRESS
      STA B         SAVE POSSIBLE NEW EOR ADDRESS 
      CMA,INA       SUBTRACT FROM CURRENT EOR ADDRESS 
      ADA EQT10,I   AND IF
      SSA,RSS       BUFFER IS BIG ENOUGH
      STB EQT10,I   SET UP TO READ THE WHOLE RECORD 
      STA EQT11,I   SAVE OVERAGE FOR EOR SKIPPING 
      LDA TEMP3      RESTORE CHAR. TO A.
      JMP D23       GO STORE THE CHARACTER. 
      SPC 1 
B31   OCT 31
.1    DEC 1 
.3    DEC 3 
      SPC 1 
D21.2 JSB INCR      GET THE NEXT CHAR.
      SEZ           IF BINARY 
      JMP D23       GO STORE IT 
* 
* ASCII INPUT PROCESSING
* 
D22   LDB TEMP3     IF TTY IS BUSY HE IS
      SSB           TOO FAST FOR US SO
      JMP D24       GO RUB HIM OUT!!
      CPA RETN      IF RETURN THEN
      JMP ASEOL     GO DO EOR PROCESSING
* 
      LDB TEMP2     IF HONEST MODE
      SSB           THEN
      JMP D23       GO STORE THE CHARACTER
      CPA B177
      JMP D24       - RUBOUT -
      CPA LINF
      JMP D21.2      - LINE FEED -
      CPA .10B      IF TRUE BACKSPACE OR IF 
      RSS 
      CPA B31       CONTROL Y (2600 BACKSPACE)
RSS   RSS            SKIP TO CONTROL A PROCESSOR
      CPA .1
      JMP D25       - CONTROL/A - 
      CPA .4        EOT SIMULATE INPUT? 
      JMP D23.2      YES GO SET EOT.
* 
* STORE CHARACTER IN USER BUFFER
* 
D23   LDB EQT9,I    GET CURRENT BUFFER ADDRESS. 
      CPB EQT10,I   IF BUFFER FULL
      JMP D21.2     GO GET NEXT CHAR. 
      CLE,ERB       CONVERT TO WORD ADDR., CHARACTER
      ISZ EQT9,I    POSITION IN E,  INDEX ADDRESS.
      SEZ,RSS       SHIFT TO UPPER POSITION IF
      ALF,SLA,ALF    EVEN ADDRESS AND SKIP
      XOR B,I         IF ODD ADDRESS ADD OLD CHAR.
      XOR FILL      ADD/DELETE FILL CHARACTER 
      STA B,I        REPLACE FULL WORD
* 
      LDA FILL      GET ASCII/BINARY FLAG 
      LDB EQT9,I
      CPB EQT10,I   LAST CHARACTER? 
      SZA           IF LAST CHAR. AND BINARY SKIP 
      JMP D21.2     ELSE GO GET THE NEXT ONE
* 
      LDB TEMP2     IF NOT VARIABLE LENGTH
      LDA EQT11,I   OR IF BUFFER WAS LONG ENOUGH
      SSA           THEN
      SLB,RSS       GO
      JMP D27       DO BINARY EOR TERMINATE 
* 
D23.0 JSB INCR      GET A CHARACTER 
      ISZ EQT11,I   STEP COUNT
      JMP D23.0     GO GET NEXT ONE 
      JMP D27       DONE GO EXIT
* CONTINUATION EXIT 
* 
INCR  NOP           WAIT FOR CHARACTER ROUTINE
      LDB INCR      RETURN ADDRESS TO B 
CXT1  STB EQT12,I   SAVE THE RETURN ADDRESS IN EQT12
IO4   STC TTY       SET DEVICE TO INPUT NEXT CHAR.
      SPC 1 
      CLA           SET A FOR ACCEPT
EXIT  ISZ C.00      STEP RETURN ADDRESS 
      JMP C.00,I    -RETURN TO INTERRUPT CONTROL -
      SPC 1 
*                                  ATTENTION INTERRUPT PROCESSOR
SCHD  NOP           ENTER HERE IF SCHEDULE INTERRUPT
FILL  EQU SCHD
      STB TURN          SAVE B REGISTER 
      LDB EQT1      IF DEVICE IS
      CPB SYSTY     THE SYSTEM TTY
      JMP OPF       GO SET THE OPERATOR FLAG
      LDB EQT13,I   ELSE GET THE ADDRESS OF THE ID
      LDA EQT5,I    AND THE ENABLE FLAG.
      RAR,SLA       IF OFF OR 
      SSB           IF NEGATIVE 
      JMP SCH+1     NOT SET UP SO IGNORE
      STB SCH       SET FOR THE LIST CALL 
      ADB .15       GET THE STATUS WORD 
      LDB B,I       GET THE STATUS
      SZB           IF NOT DORMANT
      JMP SCH+1     NOT SET UP ,SO IGNORE.
      LDA SCH       CACULATE THE B-REG
      ADA LINF       ADDRESS IN THE ID SEG. 
      LDB EQT4      SET THE B REG TO POINT TO EQT4
      STB A,I        SO HE KNOWS "WHO DONE IT". 
      JSB $LIST     ELSE SCHEDULE THE PGM 
      OCT 101 
SCH   NOP 
      CLE,RSS       SKIP
* 
OPF   ISZ OPATN     SET THE OPERATOR ATTENTION FLAG 
      LDB TURN      RESTORE B AND 
      JMP SCHD,I    RETURN
     SPC 2
TURN  NOP           ROUTINE TO RESET FOR OUTPUT 
      CLA,INA       FIRST TEST FOR DVR01
      CPA TEMP5     IF DVR01
      JMP TURN,I    EXIT P+1  NOP 
      CCB            COMPUTE CALL 
      ADB TURN      ADDRESS AND 
      LDA TEMP3     IF TTY IS BUSY
      SSA            THEN 
      JMP CXT1      GO WAIT FOR END OF CYCLE
      ISZ TURN      ELSE EXIT P+2 
      LDA PRINT     GET THE PRINT COMMAND 
IO2   OTA TTY       SEND TO THE INTERFACE 
      JMP TURN,I    RETURN P+2
      SPC 2 
B40   OCT 40
B377  OCT 377 
RETN  OCT 15
LINF  OCT 12
LINFF OCT 612 
.15   DEC 15
\     OCT 134 
      SPC 3 
* RUB-OUT CODE PROCESSOR  (DELETION OF ASCII RECORD)
* 
D24   JSB TURN      TURN CARD AROUND TO OUTPUT
      JMP CONT      DVR01 SO GO RESTART 
      LDA \         OUTPUT "\"
      JSB OUTCR     THEN
      LDA RETN      RETURN
      JSB OUTCR 
      LDA LINFF     LINE FEED 
      JSB OUTCR 
      JMP CONT      GO SET UP FOR INPUT AGAIN 
* 
* CONTROL/A PROCESSOR  (CHARACTER DELETION) 
* 
D25   LDA EQT7,I   IF CONTROL/A 
      RAL            IF FIRST 
      CPA EQT9,I    NON-ZERO CHARACTER INPUT, 
      JMP D24       TREAT AS RUBOUT 
* 
      CCB           -1 TO A 
      ADB EQT9,I   SUBTRACT 1 FORM
      STB EQT9,I    CHARACTER ADDRESS.
      CLE,ERB       GET THE LAST CHARACTER INPUT
      LDA B,I       AND 
      AND HCHAR     MASK OUT THE LOW END
      ADA FILL      PUT IN THE FILL CHARACTER 
      STA B,I       RESET THE WORD
      JSB TURN      TURN THE DEVICE AROUND
      JMP D21.2     DVR01 SO GO CONTINUE INPUT
      LDA ARROW     SENT A "_"
      JSB OUTCR      AND
      LDA B31        A 2600 BACKSPACE 
      JSB OUTCR 
      LDA KEYBD     RESET FOR INPUT 
      LDB TEMP2     IF ECHO 
      RBR,SLB       THEN
      ADA BIT13     ADD THE PRINT BACK BIT
      JSB OUTCR     REPROGRAM AND START INPUT 
      JMP D22       CONTINUE INPUT
* 
ASEOL JSB TURN      TURN THE CARD AROUND
* 
      CLA,RSS       DVR01 SKIP A CHARACTER
      LDA LINFF 
      JSB OUTCR     ELSE SEND A LINE FEED TO THE TTY
      HED < STATUS AND COMPLETION SECTION*>       A-29029-91001-1 
* 
* STATUS AND TRANSMISSION COMPLETION SECTION
* 
D27   LDB EQT9,I    COMPUTE THE NO
      CMB,INB       OF CHARACTERS TRANSMITTED 
      ADB EQT7,I    FROM THE
      ADB EQT7,I    FINAL BUFFER ADDRESS
      LDA EQT8,I    IF WORDS
      SSA,RSS       THEN
      BRS           CONVERT TO WORDS
      CMB,INB,SZB,RSS SET POSITIVE IF ZERO
      JMP CONT      GO TRY AGAIN
* 
D28   CLA,CCE       UNLESS
      LDA B40       SET THE EOT BIT 
D28.1 IOR EQT5,I    IN THE EQT
      AND NT204     REMOVE THE IGNOR BIT. 
      SEZ,SZB       IF NO EOT THEN
      XOR B40        CLEAR IT 
      STA EQT5,I
      CLA,CME       SET NORMAL STATUS 
      SEZ,SZB,RSS   IF EOT DETECTED, SET
      LDA .2         RETURN STATUS = 2 FOR EOT. 
TMX   STA SW5       FOR RETURN TO INTERRUPT CONTROL.
* 
* COMPLETION EXIT SECTION 
* 
CXT2  CLC 0        CLEAR DEVICE CONTROL 
IO5   EQU CXT2
* 
      LDA EQT5,I    GET THE ON/OFF FLAG 
      RAR,SLA       IF ON THEN
      JSB D30       SET UP THE INTERFACE
      LDA SYSTY    IF DEVICE IS SYSTEM
      CPA EQT1      TELETYPE, GO TO SET DEVICE
      JSB D30       FOR INPUT KEYBOARD MODE.
* 
      LDA EQT4,I    GET THE SUBCHANNEL TO 
      ALF,ALF        LOW
      RAL,RAL         A AND 
      AND SW5          MASK THE RETURN CODE 
      SPC 1 
      JMP C.00,I   EXIT TO INTERRUPT CONTROL. 
* 
TMX1  LDA .4        SET A TO THE TIME OUT CODE
      CLB           SET TLOG TO ZERO
      JMP TMX       GO EXIT 
      SPC 1 
D30   NOP 
TEMP5 EQU D30 
      LDA KEYBD     SET SYSTEM TELETYPE IN INPUT
IO6   OTA TTY       MODE. 
IO7   STC TTY,C 
      JMP D30,I     RETURN
      HED <WRITE OUTPUT PROCESSOR>                A-29029-91001-1 
HCHAR OCT 177400
KEYBD OCT 140000
      SPC 1 
* 
* WRITE REQUEST PROCESSOR 
* 
EOLT  LDB TEMP2     GET FLAG WORD 
      SSB           IF HONEST MODE
      JMP OUT       SEND THE CHAR.
      LDB FILL      IF
      SZB,RSS       BINARY
      JMP OUT       GO SEND THE WORD
      CPA ARROW     IF "_" THEN 
      JMP D36       INHIBIT THE TRANSMISSION
      SPC 1 
OUT   JSB OUTCR     SEND THE CHARACTER
D31   LDB EQT9,I    GET THE BUFFER ADDRESS
      CPB EQT10,I   IF BUFFER EXAUSTED
      JMP D33       GO CLEAN UP 
      ISZ EQT9,I   INDEX FOR NEXT CHAR. 
      CLE,ERB      CONVERT TO WORD ADDR.
      LDA B,I      GET WORD AND 
      SEZ,RSS       POSITION PROPER 
      ALF,ALF       CHARACTER IN A(07-00).
      AND B377     REMOVE UPPER POSITION DATA.
      LDB EQT9,I    IF THIS IS LAST CHAR
      CPB EQT10,I   THEN
      JMP EOLT      GO PROCESS END OF LINE
      JMP OUT       GO SEND THE CHARACTER 
* 
* 
* OUTPUT CHARACTER TO PRINTER/PUNCH UNIT
* 
OUTCR NOP           CHARACTER OUTPUT ROUTINE
* 
SW5   NOP OR RSS IF 2762
      JMP OUT1     RETURN TO INTERRUPT CONTROL. 
      SPC 2 
      CPA B31       IF 2600 BACKSPACE AND A 
      LDA .10B      2762 SET TRUE BACKSPACE 
      CLB           SET UP THE STALL COUNT FOR
      CPA LINF      A 2762   LINE FEED? 
      JMP STALX     FIND HOW MANY STALL NEEDED
      CPA FLINF     IF CONTROL LINE FEEDS 
      LDB N9        USE MAX STALL FOR 2762B 
STAL  SSB,RSS       ANY STALLS REQUIRED?
      JMP OUT1       NONE OF THE ABOVE GO DO IT 
      STB EQT11,I    SET THE STALL COUNT
STAL2 LDB EQT5,I     AND THE
      ADB .4         STALL FLAG 
      STB EQT5,I     IN THE EQT 
      LDA B377      STALL CODE
      SPC 1 
OUT1  LDB OUTCR     SET RETURN ADDRESS IN B 
IO9   OTA TTY       OUTPUT CHARACTER TO CARD. 
      JMP CXT1       GO RETURN
      SPC 1 
STALX LDB EQT7,I    WORD BUFFER ADDRESS 
      RBL           CONVERT TO CHARS
      CMB,INB       MAKE IT NEG 
      ADB EQT9,I    ADD CURRENT CHAR ADDRESS
      ADB NULCT     ADD MAX STALL COUNT 
      JMP STAL
ARROW OCT 137     "_" 
N3    DEC -3
      SPC 3 
* 
* END-OF-RECORD PROCESSING
* 
D33   LDA TEMP2    CHECK MODE 
      SSA           OF TRANSFER.
      JMP D36       - HONEST - GO EXIT
* 
      LDA FILL      BINARY OR ASCII?
      SZA,RSS 
      JMP D34       - BINARY -
* 
      LDA RETN      OUTPUT FIRST A
      JSB OUTCR      RETURN 
* 
      LDA LINF      LINE FEED WITH DELAY
      JSB OUTCR     A LINE FEED 
      JMP D36       GO SET TLOG AND EXIT
* 
D34   STA EQT10,I  *BINARY RECORD*  OUTPUT
      LDA N4         4 FEED FRAMES FOR
      STA EQT9,I     EOR. 
* 
D39   LDA EQT10,I   GET THE CHARACTER 
      JSB OUTCR     SEND THE CHAR.
      ISZ EQT9,I    STEP THE COUNT
      JMP D39       GO OUTPUT THE CHARACTER 
* 
* END OF OUTPUT PROCESSING
* 
D36   LDB EQT8,I   SET (B) = TRANSMISSION 
      SSB           LOG AS POSITIVE # OF WORDS OR 
      CMB,INB        CHARACTERS.
      CLA,CLE      SET COMPLETION INDICATOR 
      JMP D28.1 
* 
      HED <EQU'S AND ECT.>                        A-29029-91001-1 
      SPC 3 
* 
* HANDY EQU'S FOR VARIOUS GOODIES.
* 
A     EQU 0        DEFINE SYMBOLIC REFERENCE FOR
B     EQU 1         A AND B REGISTERS.
TTY   EQU 14
* 
      SPC 3 
* 
*** SYSTEM BASE PAGE  COMMUNICATION  AREA *** 
* 
.     EQU 1650B     ESTABLISH ORIGIN OF AREA
* 
* 
* I/O MODULE/DRIVER COMMUNICATION 
* 
EQT1  EQU .+8      ADDRESSES
EQT2  EQU .+9 
EQT3  EQU .+10      OF
EQT4  EQU .+11
EQT5  EQU .+12      CURRENT 
EQT6  EQU .+13
EQT7  EQU .+14      11-WORD 
EQT8  EQU .+15
EQT9  EQU .+16      EQT 
EQT10 EQU .+17
EQT11 EQU .+18      ENTRY 
EQT12 EQU .+81
EQT13 EQU .+82
EQT14 EQU .+83
EQT15 EQU .+84
* 
INTBA EQU .+4 
* 
SYSTY EQU .+21     EQT ENTRY ADDRESS OF SYSTEM TTY
* 
* 
* SYSTEM MODULE COMMUNICATION FLAGS * 
* 
OPATN EQU .+52     OPERATOR/KEYBOARD ATTENTION FLAG 
* 
      ORG *         DRIVER LENGTH 
      END 
