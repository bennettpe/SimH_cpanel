ASMB,B,R,L,C
      HED RTE FILE MANAGER DIRECTORY ROUTINE **************** 
      NAM D.RTR,2,1 
      EXT EXEC,PRTN,P.PAS 
      SUP 
*            RTE FMP DIRECTORY ROUTINE    NOV/72**GAA 
* 
* THIS PROGRAM IS THE CENTRAL MANAGER OF THE RTE FILE MANAGEMENT
* SYSTEM. IT OWNS THE DIRECTORY AND PERFORMS ALL WRITES 
* ON IT.
* 
* PROGRAM WISHING TO ACCESS THE DIRECTORY 
* SCHEDULE (WITH WAIT) THIS PROGRAM.
* 
* CALLS ARE AS FOLLOWS (P1,P2,P3,P4,P5 ARE THE PASSED PARAMETERS):
* 
* 
* 1. OPEN 
*     P1. 1,ID      CALLER'S ID SEGMENT ADDRESS WITH SIGN BIT SET 
*     P2. E,NAME(1,2) E(BIT 15) INDICATES EXCLUSIVE OPEN IF SET 
*     P3. 0,NAME(3,4) 
*     P4. 0,NAME(5,6) 
*     P5. -LU,+CARTRIDGE LABEL,0   IF ZERO SEARCH ALL MOUNTED CARTRIDGES
* 
* 2. CLOSE
*     P1. ID        CALLER'S ID SEGMENT ADDRESS 
*     P2. 0,-(NO. SECTORS TO BE DELETED),+ PURGE EXTENTS ONLY 
*     P3. TR,LU 
*     P4. OFFSET,SECTOR  / DIRECTORY ADDRESS
*     P5. 0         INDICATES CLOSE 
* 
* 3. CREAT
*     P1. ID
*     P2. TR,LU     DATA TRACK ADDRESS
*     P3. -LU,+CARTRIDGE,0    SEE 1.P5. 
*     P4. 
*     P5. 1         INDICATES CREAT 
* 
* 4. CHANGE NAME
*     P1. ID
*     P2. TR,LU     DATA TRACK ADDRESS
*     P3. TR,LU         \ 
*     P4. OFFSET,SECTOR \ DIRECTORY ADDRESS OF FILE BEING RENAMED 
*     P5. 2         INDICATES NAME CHANGE CALL
* 
* 6. SET,CLEAR LOCK ON DISC 
*     P1. ID
*     P2. 
*     P3. -LU,+CARTRIDGE  (0 NOT LEGAL)  DISC TO BE LOCKED
*     P4. 
*     P5. 3 FOR SET  5 FOR CLEAR
* 
* 7. GENERATE,PACK,UPDATE CALL
*     P1. ID
*     P2. TR,LU     DATA TRACK ADDRESS
*     P3. -LU,+CARTRIDGE  (0 NOT LEGAL)  DISC TO BE UPDATED 
*     P4. S,#SEC/TRACK   S(BIT 15)=1 IF DISC DIRECTORY UPDATE 
*     P5. 7         INDICATES GENERATE CALL.
* 
* 8. EXTENSION OPEN 
*     P1. ID
*     P2. EXTENSION NUMBER
*     P3. TR,LU        \
*     P4. OFFSET,SECTOR \DIRECTORY ADDRESS OF MASTER ENTRY
*     P5. 6,8       INDICATES EXTENSION REQUEST (READ,WRITE)
* 
* 9. PACK 
*     P1. ID
*     P2. TR,LU     DATA TRACK ADDRESS
*     P3. -LU,+CARTRIDGE    SEE GENERATE
*     P4. RELATIVE DIRECTORY SECTOR (1 ONLY) TO BE CHANGED
*     P5. 9 
      SKP 
* DATA TRACK FORMAT FOR CREAT AND CHANGE NAME 
*     1. NAME(1,2) \
*     2. NAME(3,4)  > OR NEW NAME 
*     3. NAME(5,6) /
*     4. TYPE 
*     5.
*     6.
*     7. #SECTORS REQUESTED OR -1 FOR REST OF DISC
*     8. RECORD SIZE (TYPE 2 FILES) 
*     9. SECURITY CODE
* 
* 
* WORD FORMATS FOR DOUBLE DUTY WORDS
* 
*  15...6 5..0       15...8 7...0 
*  TRACK ^ LU        OFFSET^SECTOR
*                   #SEC/TR^SECTOR
* 
* RETURN PARAMETERS 
*     R1. ERROR CODE    IF >0 THEN #SEC IN CREAT OR TYPE IN OPEN
*     R2. TR,LU        \
*     R3. OFFSET,SECTOR \ DIRECTORY ADDRESS - OPEN & CREATE CALLS 
*     R4. TR              / FILE ADDRESS ON OPEN & CREATE CALLS 
*     R5. #SEC/TR,SECTOR /
* 
* ERROR CODES 
*     0 OR POSITIVE -NO ERROR 
*    -1              DISC DOWN
*    -2              DUPLICATE NAME 
*    -3              FILE NOT FOUND 
*    -5              READ EXTENT OPEN AND EXTENT NOT FOUND
*    -6              CARTRIDGE NOT FOUND
*    -8              FILE IS CURRENTLY OPEN (ALSO FOR REJECT LOCK)
*    -9              FILE CURRENTLY OPEN TO THE SAME PROGRAM
*    -11             FILE NOT OPEN (CLOSE)
*    -13             DISC LOCKED
*    -14             DIRECTORY FULL 
* 
*    -101            ILLEGAL PARAMETERS IN CALL 
*    -102            ILLEGAL CALL SEQUENCE (LOCK NOT REQUESTED FIRST) 
      SKP 
BUF   BSS 128 
PRAMA DEF P1
      SPC 2 
BEGIN LDA B         PRAM ADDRESS TO A 
      CLB,CCE       SET UP TO MOVE PRAMS
      ERB           AND 
      JSB P.PAS     GO GET THEM 
N5    DEC -5
P1    NOP 
P2    NOP 
P3    NOP 
P4    NOP 
P5    NOP 
      SPC 1 
      LDA P1        GET THE FIRST PRAM
      LDB KEYWD     AND THE ADDRESS OF THE ID SEG 
      RAL,CLE,ERA   LIST; CLEAR POSSIBLE SIGN BIT 
      STA ID        SAVE ID SEG ADDRESS 
TEST  LDA B,I       SEARCH FOR
      INB             ID ADDRESS IN 
      SZA,RSS          KEY WORD LIST
      JMP EXIT2         END OF LIST; ERR EXIT 
      CPA ID             THIS ONE?
      INA, RSS             YES SKIP 
      JMP TEST              NO; TRY NEXT ONE
      LDB A,I       FOUND; GET WAIT ID ADDRESS
      ADA .14       A_STATUS ADDRESS
      LDA A,I        A_STATUS 
      CPB XEQT      IF WAITING ON THIS PGM
      CLB           SET B_0 
      ALF,SLA       IF WAIT BIT IS SET
      SZB            AND WAITING FOR THIS PGM SKIP
      JMP EXIT2        ELSE EXIT - ILLEGAL CALL 
      SPC 2 
      STB TMP1
      LDA ABUF      SET LOCK SEARCH FOR FIRST 
      STA DIRAD     ENTRY 
      SPC 1 
*     THE LOCK ROUTINE SEARCHES THE DISC DIRECTORY FOR THE
*     REFERENCED DISC.
* 
*     FOR THE FIRST CALL DIRAD SHOULD POINT AT THE
*     FIRST WORD IN ABUF.  SUBSEQUENTLY LOCK
*     WILL UPDATE DIRAD EACH CALL.
* 
*     WITH THE EXCEPTION OF THE DISC DIRECTORY UPDATE THE DISC
*     MUST BE FOUND.  IN THIS CASE, EXIT IS TO THE CREAT ROUTINE
* 
*     ON EXIT ATRAK CONTAINS THE DIRECTORY TRACK
*              ALU     CONTAINS THE DIRECTORY LU
*              A       CONTAINS THE LOCK WORD 
* 
*     ON SUBSEQUENT CALLS IF THE DISC ID WAS 0, THE NEXT
*     DISC IS RETURNED.  IF THE DISC ID WAS NOT 0,
*     A NOT FOUND EXIT IS TAKEN.
* 
NEXT  LDA P5        GET THE ID -BIT 15 INDICATE DISC
      LDB P1        ID IN P5
      SSB           ID IN P5? 
      JMP LOCK0     YES; SKIP 
      CCE,SLA,RSS   NO; P5 IS FUNCTION EVEN?
      JMP LOCK3     YES; GO EXTRACT LU
      LDA P3        NO; LU IS IN P3 
LOCK0 CMA,CCE,SSA,INA E_0 INDICATES CARTRIDGE LABEL 
      CMA,CLE,INA     E_1 INDICATES LU(SET +) 
      LDB TMP1      GET PREVIOUS ID 
      STA TMP1      STORE ID
      CME,SZB       IF NOT A  ZERO, ID ON SECOND
      JMP EX6       CALL TAKE -6 EXIT 
      SPC 1 
      RAL,ERA       SET SIGN BIT IF A LABEL SEARCH
      STA TMP2      AND SET FOR COMPARE 
      SPC 1 
LOCK6 JSB RDPS      READ THE PARAMETER SECTOR 
      LDA TMP2      SET THE FOUND BIT IN E IF 
      CMA,CLE,INA   A ZERO ID 
      LDB DIRAD     GET CURRENT DIRECTORY ADD.
LOCK2 LDA B,I       GET FIRST WORD
      SZA,RSS       IF 0 THEN END 
      JMP LOCK5     SO GO CHECK FOR  DIRECTORY
      STA ALU       UPDATE; ELSE SAVE LU
      CPA TMP2      IS THIS THE REQUIRED DISC?
      CCE           YES  SET E TO 1 TO INDICATE FOUND 
      INB           STEP TO TRACK ADDRESS AND 
      LDA B,I       SET 
      STA ATRAK     IN ATRAK
      INB           STEP TO 
      LDA B,I       LABEL AND FETCH 
      IOR SIGN      SET SIGN FOR COMPARE
      SEZ,INB,RSS   STEP TO LOCK ADDRESS SKIP IF FOUND
      CPA TMP2      IS THIS THE REQUESTED DISC? 
      JMP LOCK4     YES; GO EXIT
      INB           NO; STEP TO NEXT ONE
      JMP LOCK2     AND GO CHECK IT 
      SPC 2 
LOCK3 LDA P3        LU AND TRACK IN P3
      AND B77       MASK TO LU
      STA TMP2      SAVE LU 
      STA B         SAVE LU IN B FOR TEST 
      XOR P3        MASK TO TRACK 
      ALF,RAL       ROTATE TO 
      RAL,ALF       LOW A AND 
      STA DITR      SAVE THE TRACK
      CPB RDPS      DO WE HAVE THIS ONE ALREADY?
      JMP DECOD     YES  SO GO DECODE THE REQUEST 
      JMP LOCK6     NO  SO GO LOOK FOR IT 
      SPC 2 
LOCK4 STB DIRAD     FOUND - UPDATE CURRENT
      ISZ DIRAD     ADDRESS FOR NEXT TIME 
      LDA B,I       LOCK TO A 
      SZA           IF NOT LOCKED 
      CPA ID        OR LOCKED TO CALLER 
      JMP DECOD     SKIP
      LDA TMP1      ELSE IF 
      SZA,RSS       MULTI-DISC SEARCH 
      JMP NEXT      CONTINUE
      JMP EX13      ELSE EXIT LOCKED DISC 
      SPC 2 
DECOD LDA P1        IF OPEN 
      SSA           REQUEST 
      JMP OPEN      GO OPEN 
      LDA P5        ELSE
      SSA           CHECK REQUEST CODE
      JMP EX101     NEGATIVE - EXIT 
      ADA N10 
      SSA,RSS 
      JMP EX101     GREATER THAN 9 - EXIT 
      ADA TABAD     INDEX INTO THE FUNCTION 
      JMP A,I       GO EXECUTE THE FUNCTION 
      SPC 2 
TABAD DEF TABA+10 
TABA  JMP CLOSE     0 
      JMP CREAT     1 
      JMP CNAM      2 
      JMP RLOCK     3 
      JMP EX101     4 
      JMP ULOCK     5 
      JMP EXOPN     6 
      JMP GEN       7 
      JMP EXOPN     8 
      JMP PACK      9 
      SPC 5 
* 
*  RDPS     READ THE DISC DIRECTORY 
* 
RDPS  NOP 
      JSB WCSR      WRITE CURRENT SECTOR BLOCK
      INA           A_2 
      STA DRLU      SET  FOR LU2 - SYS DISC 
      CCA           COMPUTE LAST TRACK
      ADA TATSD     ADDRESS AND 
      STA TRACK     SET 
      CLA           SET SECT ADDRESS TO 
      STA SECT      ZERO
      JSB RWSUB     READ THE BLOCK
      JMP RDPS,I    RETURN
      SPC 5 
* 
*  WCSR     WRITE CURRENT BLOCK 
* 
WCSR  NOP 
      LDA WCS       GET WRITE FLAG
      ISZ RW        SET REQUEST CODE TO WRITE 
      SZA           IF NOT WRITTEN ON SKIP
      JSB RWSUB     ELSE WRITE THE BLOCK
      CLA,INA       RESET REQUEST CODE TO 
      STA RW        READ
      JMP WCSR,I    AND EXIT (A=1)
      SPC 2 
RW    NOP 
DRLU  NOP 
      SPC 2 
* 
*  RWSUB     ROUTINE TO READ OR WRITE A TWO-SECTOR BLOCK
* 
RWSUB NOP 
      DLD RW        FETCH THE NEW POINTERS
      ADB PRC 
      STB RPRM
      SLA,RSS       IF WRITE THEN 
      JMP RWSU1     GO DO IT
      CPB LDRLU     ELSE IF 
      LDB N7        SAME BLOCK AS 
      LDA TRACK     CURRENT ONE 
      CPA LTRAC     THEN
      INB 
      LDA SECT      NO
      CPA LSECT     ACTION IS 
      CLE,INB 
      CPB N5        REQUIRED SO 
      JMP RWSUB,I   RETURN
RWSU1 JSB EXEC      NOT SAME BLOCK  CALL EXEC 
      DEF RTN       RETURN
      DEF RW        READ WRITE CODE 
      DEF RPRM      LU
ABUF  DEF BUF       BUFFER
      DEF .128      128 WORDS 
      DEF TRACK     ON TRACK &
      DEF SECT      SECTOR
RTN   CLA,CLE       CLEAR THE WRITE 
      STA WCS       FLAG
      LDA DRLU      SET UP LAST POINTERS FOR NEXT TIME
      STA LDRLU 
      LDA TRACK     SAVE THE TRACK
      STA LTRAC     ADDRESS AND THE 
      LDA SECT      SECTOR
      STA LTRAC+1   ADDRESS 
      CPB .128      DISC ERR? 
      JMP RWSUB,I   NO - RETURN 
      STA LDRLU     YES; SET NOT IN CORE FLAG 
      JMP EX1       YES - TAKE DISC ERR EXIT
      SPC 2 
LDRLU NOP 
LTRAC NOP 
LSECT NOP 
      SKP 
OPEN  DLD P3        SET NAME WORDS 2 AND  3 
      DST NAME+1    INTO THE NAME BUFFER
      LDA P2        SET NAME WORD1
      RAL,CLE,ERA   LESS POSSIBLE SIGN BIT
      STA NAME      INTO THE NAME BUFFER
      JSB SETDR     SET UP TO READ THE DIRECTORY
      JSB N.SHR     GO FIND THE FILE
      JMP NEXT      NOT FOUND - TRY NEXT DISC 
      JSB SETAD     FOUND - GO SET THE ADDRESSES
      JSB FLAG      CHECK THE OPEN FLAGS
      LDB COUN2     IF 7 OPENS
      CPB .7        THEN NO ROOM SO 
      JMP EX8       EXIT
      LDA P2        IF EXCLUSIVE OPEN 
      CLE,SSA,RSS   THEN SKIP 
      JMP OPEN3     NON EXCLUSIVE  SKIP 
      CCE,SZB       IF ANY OPENS THEN 
      JMP EX8       REJECT EXCLUSIVE OPEN 
OPEN3 LDB SC        GET THE FLAG ADDRESS LESS ONE 
OPEN5 INB           SEARCH FOR OPEN SPOT IN FLAG LIST 
      LDA B,I       GET FLAG WORD 
      SSA           IF SIGN BIT SET THEN
      JMP EX8       FILE IS EXCLUSIVELY OPEN TO SOME ONE
      SZA           THIS WORD?
      JMP OPEN5     NO; GO TRY NEXT ONE 
      LDA P1        YES; GET THE ID ADDRESS 
      RAL,ERA       SET THE EXCLUSIVE/NON-EXCLUSIVE 
      STA B,I       FLAG AND PUT IN THE DIRECTORY 
      STA WCS       SET TO WRITE THE BLOCK
OPEN4 LDA TYPE,I   SET UP THE RETURN PARAMETERS 
CREX  JSB RPRM      SET THE RETURN PRAMS
EXIT  JSB WCSR      WRITE THE SECTOR
      JSB PRTN      PASS THE RETURN PRAMS 
      DEF *+2       AND 
      DEF R1        THEN
EXIT2 JSB EXEC      COMPLETE
      DEF *+2 
      DEF .6
      SPC 2 
* 
*     EXTENSION OPEN ROUTINE
* 
EXOPN JSB DIRCK     GO READ IN THE MASTER DIRECTORY ENTRY 
      CLA           CLEAR THE 
      STA ID        OPEN FLAG WORD
      LDA P2        SET THE 
      SZA,RSS       IF AFTER THE MAIN THEN
      JMP OPEN4     WE HAVE IT ALREADY
      ALF,ALF       EXTENSION NO FOR POSSIBLE 
      STA GSEC      EXTENSION CREAT 
      JSB EXSHR     SEARCH FOR THE REQUIRED EXTENT
      JMP EXOPT     NOT FOUND SO GO TEST IF READ
      ALF,ALF       EXTENT NO TO A
      AND B377      MASK
      CPA P2        THIS IT?
      JMP OPEN4     YES SO GO RETURN THE PRAMS
CSER  LDA TYPE      NO SO CONTINUE
      JMP NSHR4     THE SEARCH
      SPC 1 
EXOPT LDB P5        IF EXTENT OPEN IS FOR 
      CPB .8        WRITE THE GO CREAT THE EXTENT 
      JMP CREA0     GO EXIT 
      LDA N5        ELSE RETURN ILLEGAL RECORD ERROR
      JMP CREX      GO EXIT 
      SPC 2 
.8    DEC 8 
.14   DEC 14
ANAME DEF NAME
ATRAK NOP 
SIGN  OCT 100000
      SPC 2 
* 
*  SETDR     ROUTINE TO SET UP TO READ A DIRECTORY
* 
SETDR NOP 
      JSB WCSR      WRITE CURRENT SECT
      CCA           SET FIRST 
      STA FIRST     FLAG TO INDICATE FIRST BLOCK
      LDA ATRAK     SET THE TRACK 
      STA TRACK     ADDRESS 
      LDA ALU       AND THE LU
      STA DRLU      ADDRESS 
      CPA .2        IF LU=2 
      CLA,RSS       USE ZERO
      LDA N14       ELSE -14 (UDAD ADDS 14) 
      STA SECT      SET THE SECTOR
      JMP SETDR,I   RETURN
N14   DEC -14 
* 
* N.SHR     DIRECTORY SEARCH ROUTINE
*           TARGET NAME IN NAME 
      UNL 
PRC   OCT 74000 
      LST 
*           RETURNS:
*           P+1  END OF DIRECTORY   A=NEXT ADDR. (IF A=0 END OF SPACE)
*           P+2  FOUND RETURN   A=ENTRY ADDR. 
* 
N.SHR NOP 
      JSB RDNXB     READ THE DIRECTORY
      JMP N.SHR,I   END OF DISC RETURN
NSHR0 LDA ABUF      SET A TO THE BUFFER ADDRESS 
      LDB N8        SET COUNT FOR THE NO. IN A BLOCK
      STB COUN1 
NSHR1 CCE           SET FOUND FLAG (E=1)
      LDB ANAME     SET THE NAME ADDRESS
      STB TMP2      IN TMP2 
      LDB N3        SET FOR 3-WORD NAME 
      STB COUN2 
NSHR2 LDB A,I       GET A NAME WORD 
      SZB,RSS       IF ZERO - END OF DIRECTORY
      JMP N.SHR,I   SO EXIT 
      CPB TMP2,I    MATCH?
      INA,RSS       YES - SET FOR NEXT WORD SKIP
      CLE,INA       NO  - SET NOT FOUND - STEP NAME 
      ISZ TMP2      STEP LOCATIONS
      ISZ COUN2     AND COUNT MORE NAME 
      JMP NSHR2     YES; GO DO IT 
      CLB,SEZ,CCE,INB  NO; FOUND? 
      JMP NSHR3     YES; GO TAKE FOUND EXIT 
NSHR4 ADA .13       NO; SET FOR NEXT ENTRY
      ISZ COUN1     DONE WITH BLOCK?
      JMP NSHR1     NO; DO NEXT ENTRY 
      JMP N.SHR+1   YES; GO READ NEXT BLOCK 
NSHR3 ADB N.SHR     FOUND - STEP RETURN ADDRESS 
      ADA N3        ADJUST TO START OF ENTRY
      JMP B,I       RETURN
* 
* SETAD     TO SET UP ADDRESSES FOR DIRECTORY ENTRY IN BUF AT 
*           ADDRESS POINTED TO BY A 
* 
* 
SETAD NOP 
      CLB,CLE 
      JSB P.PAS 
N10   DEC -10 
DIRA  NOP 
      NOP 
      NOP 
TYPE  NOP 
TRAKA NOP 
SECTA NOP 
#SEC  NOP 
RL    NOP 
SC    NOP 
FLAGA NOP 
      JMP SETAD,I 
      SPC 2 
      SPC 2 
RPRM  NOP 
      STA R1        SET FIRST RETURN PRAM 
      LDA TRACK     TRACK,LU
      LSL 6         TO
      ADA ALU       RETURN
      STA R2        TWO 
      LDA ABUF      OFFSET
      CMA,INA       AND 
      ADA DIRA      SECTOR
      ALF,ALF       TO
      ADA SECT      RETURN
      STA R3        3 
      LDA TRAKA,I   TRACK OF FILE TO
      STA R4        RETURN 4
      LDA SECTA,I   GET THE SECTOR ADDRESS
      AND B377      ISOLATE IT
      LDB #SECT     GET THE NUMBER OF SECTORS /TRACK
      BLF,BLF       ROTATE AND
      ADA B         COMBINE WITH THE SECTOR 
      STA R5        RETURN 5
      JMP RPRM,I
      SPC 2 
R1    NOP 
R2    NOP 
R3    NOP 
R4    NOP 
R5    NOP 
      SPC 2 
* 
* RDNXB     READ NEXT DIRECTORY BLOCK 
* 
RDNXB NOP 
      JSB UDAD      UPDATE THE ADDRESSES
      JMP RDNXB,I   END OF DIRECTORY RETURN 
      JSB RWSUB     READ THE BLOCK
      ISZ RDNXB     STEP TO OK RETURN 
      ISZ FIRST     FIRST BLOCK?
      JMP RDNXB,I   NO; SO RETURN 
      SPC 1 
      CLE 
      JSB DPMM
      JMP RDNXB,I   RETURN
* 
* UDAD  --  UPDATE THE DIRECTORY ADDRESS
* 
UDAD  NOP 
      JSB WCSR      WRITE CURRENT BLOCK 
      LDA .14       A_14
      ADA SECT      ADD  7  TO THE SECTOR 
      CLB           PREPARE FOR DIVIDE
      DIV #SECT     DIVIDE BY THE NO OF SECTORS0TRACK 
      STB SECT      SET THE NEW SECTOR ADDRESS
      SZA           IF NO ROLLOVER OR 
      SZB           IF SECTOR IS ZERO THEN SKIP (NEW TRACK) 
      JMP UDAD1     ELSE GO EXIT
      SPC 1 
      CCB           SET TO DECREMENT TRACK
      CLA           SET A FOR ERROR RETURN
      ADB TRACK     ADDRESS 
      CPB LTR       OUT OF DIRECTORY? 
      JMP UDAD,I    YES SO RETURN 
      STB TRACK     SET THE NEW TRACK 
UDAD1 ISZ UDAD      STEP RETURN 
      JMP UDAD,I    TAKE OR RETURN
      SPC 2 
LTR   NOP 
NXSCA DEF BUF+5 
      SPC 2 
* DPMM  MOVE DISC PARAMETERS FOR CURRENT UNIT 
*           CALLING SEQUENCE
* 
*           E=0  -  SAVE PARAMETERS 
*           E=1  -  MOVE PARAMETERS BACK
* 
* 
DPMM  NOP 
      LDA NXSCA 
      LDB SIGN
      JSB P.PAS 
N11   DEC -11 
NXSEC NOP 
#SECT DEC 96
LASTR NOP 
#TRK  NOP 
NXTR  NOP 
BAD1  NOP 
BAD2  NOP 
BAD3  NOP 
BAD4  NOP 
BAD5  NOP 
BAD6  NOP 
      NOP 
      LDB #TRK
      ADB TRACK     COMPUTE THE ADDRESS OF TRACK
      STB LTR       ELSE SET THE ADDRESS
      LDB DRLU      SAVE THE CURRENT LU 
      STB RDPS      FOR CORE RESIDENT SPEED 
      JMP DPMM,I
      SPC 5 
* 
*  FLAG     CHECKS FOR OPEN FLAGS 
*           ASSUMES FLAGA POINTS TO THE FLAG AREA 
* 
FLAG  NOP 
      CLA           CLEAR THE OPEN COUNT
      STA COUN2     AND 
      LDA N7        SET TO TEST 
      STA COUN1     THE OPEN FLAGS
      LDB FLAGA     GET THE FLAG ADDRESS
FLAG1 LDA B,I       GET OPEN FLAG 
      RAL,CLE,ERA   REMOVE POSSIBLE EXCLUSIVE BIT 
      JSB DORM      TEST FOR DORMANT
      ISZ COUN2     STEP OPEN FLAG COUNT
      INB           STEP TO NEXT ENTRY
      ISZ COUN1     STEP COUNT; END OF FLAGS? 
      JMP FLAG1     NO; TRY NEXT ONE
      JMP FLAG,I    YES; RETURN 
      SPC 5 
* 
*  DORM     CHECK TO SEE IF PROGRAM IS DORMANT
* 
*                ID ADDRESS IN A
*                LOCATION TO BE SET TO ZERO'S ADDRESS INB 
*                   RETURN P+1 IF NOT DORMANT; ELSE P+2 
DORM  NOP 
      STB TMP2      SAVE B REG
      CCE,SZA,RSS   IF ZERO THEN JUST RETURN P+2
      CLE,RSS       SO SKIP   ELSE
      CPA ID        IF OPEN TO THIS PGM  FORCE CLOSE
      JMP DORM1     SO GO EXIT
      LDB KEYWD     MAKE SURE THE FLAG POINTS 
      STB RWSUB     TO A VALID
DORM2 LDB RWSUB,I   ID SEGMENT
      CPB A         THIS ONE? 
      JMP DORM3     YES CONTINUE
      ISZ RWSUB     NO TRY THE NEXT ONE 
      SZB           IF END THEN 
      JMP DORM2 
      JMP DORM1     NOT VALID  GO CLEAR FLAG
DORM3 ADA .8        ADDRESS OF SUSPEND POINT
      LDB A,I       TO B
      CMB,CLE,INB,SZB,RSS   IF ZERO (DORMANT) E_1 
DORM1 ISZ DORM              ELSE SKIP 
      LDB TMP2      RESTORE BREG
      CLA,SEZ       CHANGE TO DORMANT 
      STA B,I       SET TO ZERO 
      SEZ           AND 
      STB WCS       SET WRITE FLAG
      JMP DORM,I    RETURN
      SPC 2 
EX1   CLA,INA,RSS 
EX2   LDA .2
      RSS 
EX6   LDA .6
      RSS 
EX8   LDA .8
      RSS 
EX13  LDA .13 
      RSS 
EX14  LDA .14 
      CMA,INA,RSS 
EX11  LDA N11 
      JMP CREX
      SPC 2 
.7    DEC 7 
.13   DEC 13
.128  DEC 128 
B77   OCT 77
N8    DEC -8
FIRST NOP 
COUN1 NOP 
COUN2 NOP 
BTRA  DEF BAD1
BADTR NOP 
      SKP 
CREAT JSB RDPAS     READ THE SKELETON DIRECTORY 
      LDA ID       SET UP EXCLUSIVE OPEN FLAG 
      ADA SIGN     ADD THE EXCLUSIVE BIT
      STA ID        SAVE IT 
      CLA          CLEAR THE EXTENT FLAG
      STA GSEC      SAVE IT FOR THE DIRECTORY 
      LDA ABUF      MOVE IT 
      JSB MOVE1     THE SAVE AREA 
      JSB SETDR     SET TO READ THE DIRECTORY 
      JSB N.SHR     SEARCH FOR THE NAME 
CREA0 CCE,RSS       NOT FOUND SKIP
      JMP EX2       FOUND - TAKE DUP NAME EXIT
      SZA,RSS       IF DIRECTORY FULL 
      JMP EX14      TAKE EXIT 
      JSB SETAD     SET THE ADDRESSES 
      CCE 
      LDA DIRA      MOVE IN 
      JSB MOVE1 
      LDA ID        SET THE OPEN FLAG 
      STA FLAGA,I 
      LDB BTRA      SET THE BAD TRACK 
      STB BADTR     POINTER 
      LDB NXSEC     GET THE NEXT TRACK
      LDA NXTR      AND SECT
CREA1 STA TRAKA,I   SET THE TRACK 
      ADB GSEC      ADD THE EXTENT WORD 
      STB SECTA,I   SET THE SECT/EXTENT 
      LDB #SEC,I    GET THE REQUEST SIZE
      LDA BADTR,I   AND THE FIRST BAD TRACK 
      SZA           IF GOOD SKIP
      SSB,RSS       ELSE IF REST OF DISC SKIP 
      JMP CREA2     GO CALCULATE SIZE 
CREA3 INA           BAD TRACK ON REST OF DISC RQ
      ISZ BADTR     SET FILE ABOVE IT AND 
      CLB           TRY AGAIN 
      JMP CREA1 
      SPC 2 
CREA2 SSB           IF REST OF DISC 
      JMP CREA5     JMP 
      JSB NXT/S     COMPUTE THE NEXT TRACK AND SECTOR 
      STA SETAD     SECTOR - SAVE LAST TRACK
      LDA BADTR,I   GET LAST AVAILABLE TRACK
      SZA,RSS       IF NOT BAD
      LDA LASTR     THE LAST ON DISC+1
      CMA,INA       SUBTRACT FROM 
      ADA SETAD     LAST FILE TRACK 
      SSA           0 OR +? 
      JMP CREA4     YES; IT FITS
      LDA BADTR,I   NO; WON'T FIT 
      SZA           WAS IT A BAD TRACK? 
      JMP CREA3     YES; TRY ABOVE IT 
      LDA GSEC      IF EXTENT CREAT 
      SZA,RSS       THEN SKIP TO ERROR EXIT 
      JMP NEXT      ELSE TRY NEXT DISC
      JMP EX6       NO ROOM FOR EXTENT EXIT 
      SPC 2 
CREA4 LDA SETAD     IT FIT SO 
CREA6 STA NXTR      UPDATE THE NEXT 
      STB NXSEC     TRACK AND SECTOR
      ISZ WCS       SET THE WRITE FLAG
      LDA #SEC,I    GET THE RETURN PRAM 
      JSB RPRM      AND GO SET UP THE RETURN
      JSB SETDR     SET UP TO READ FIRST
      STA FIRST     DIRECTORY BLOCK 
      JSB RDNXB     READ IT 
.2    DEC 2 
      CCE           MOVE NEW
      JSB DPMM      NEXT TRACK AND SECT WORDS 
      ISZ WCS       IN - SET TO WRITE 
      JMP EXIT      AND EXIT
      SPC 2 
CREA5 LDA TRAKA,I   REQUEST FOR REST OF DISC
      CMA,INA       COMPUTE THE 
      ADA LASTR     NUMBER OF 
      MPY #SECT     SECTORS 
      LDB SECTA,I   AVAILABLE 
      CMB,INB       AND 
      ADA B         SET 
      STA #SEC,I    IN THE FILE ENTRY 
      SZA,RSS       IF ZERO 
      JMP NEXT      TRY NEXT DISC 
      LDA LASTR     ELSE PRESET TO CLOSE
      CLB           THE DISC
      JMP CREA6     AND GO WRAP IT UP 
      SPC 2 
* 
* 
* MOVE1/2     TO MOVE DIRECTORY ENTRIES TO/FROM 
*             THE LOCAL SAVE AREA DEFINED 
*             HEREIN. 
* 
*             CALLING SEQUENCE: 
* 
*             E=0   TO THIS SAVE AREA 
*             E=1   FROM THIS SAVE AREA 
* 
*             A = ADDRESS OF OTHER AREA 
* 
*             MOVE1   MOVES 9 WORDS 
*             MOVE2   MOVES 3 WORDS 
* 
MOVE1 NOP 
      LDB SIGN      SET B TO MOVE WORDS 
      JSB P.PAS     CALL TO MOVE
N9    DEC -9        9 WORDS 
NAME  BSS 9 
CSEC  EQU NAME+5
      JMP MOVE1,I   RETURN
      SPC 2 
MOVE2 NOP 
      LDB SIGN      SET B FOR MOVE
      JSB P.PAS     CALL TO MOVE
N3    DEC -3        3 
      BSS 3         WORDS 
      JMP MOVE2,I   RETURN
      SPC 2 
GTRK  NOP 
GLU   NOP 
GSEC  NOP 
G#SEC NOP 
      SKP 
GEN   JSB TESTL     TEST LEGALITY OF CALL 
      JSB SETDR     SET UP TO ACCESS THE DIRECTORY
      JSB RDPAS     READ THE PASSED DATA
      JSB UDAD      UPDATE DIRECTORY ACCESS 
      JMP CREX      END GO EXIT 
      CLE           SET E FOR DPMM CALL 
      ISZ FIRST     FIRST SECTOR? 
      RSS           NO; SKIP
      JSB DPMM      YES; GO EXTRACT THE DISC PRAMS
      ISZ WCS       SET TO WRITE
      JSB WCSR      WRITE THE SECTORS 
      JMP RDPA2     GO GET THE NEXT BLOCK 
      SPC 2 
TESTL NOP 
      LDA B,I       GET THE LOCK
      LDB TMP1      IF LOCKED 
      CPA ID        TO CALLER 
      SZB,RSS       AND CORRECT DISC SPEC SKIP
      JMP EX102     ELSE TAKE ERROR EXIT
      JMP TESTL,I 
      SPC 5 
* 
* RDPAD     READ THE PASSED DATA
* 
RDPAS NOP 
      LDA P2        GET THE ADDRESS 
      AND B77       ISOLATE THE LU
      STA GLU       AND SET 
      XOR P2        ISOLATE THE TRACK 
      ALF,RAL       ROTATE TO 
      RAL,ALF       LOW A 
      STA GTRK      AND SET 
      LDA P4        GET THE #SECTORS/TRACK
      RAL,CLE,ERA   ELIMINATE THE SIGN
      STA G#SEC     AND SET 
      CLA           SET FOR SECTOR
      STA GSEC      ZERO
RDPA2 STA LDRLU     SHOW THE BLOCK NOT IN CORE
      JSB EXEC      READ THE SECTORS
      DEF GRTN
      DEF .1
      DEF GLU 
      DEF BUF 
      DEF .128
      DEF GTRK
      DEF GSEC
GRTN  CPB .128      DISC ERROR? 
      RSS           NO; CONTINUE
      JMP EX1       YES; TAKE DISC ERR EXIT 
      LDA GSEC      UPDATE THE
      ADA .2        DISC ADDRESS
      CPA G#SEC     END OF TRACK? 
      CLA           YES - USE 0 SECT. 
      STA GSEC      SET SECTOR
      CLE,SZA,RSS   IF EOT
      ISZ GTRK      STEP TRACK ADDRESS
      JMP RDPAS,I   RETURN
      SKP 
      SPC 5 
LOCK5 LDA P4        END OF DIRECTORY
      LDB P5        IF GEN CALL 
      CPB .7        AND 
      SSA,RSS       SIGN BIT SET SKIP 
      JMP EX6       ELSE - NOT FOUND EXIT 
      JSB RDPAS     NEW DIRECTORY FOR DISCS - READ
      JMP EXIT3     GO WRITE AND EXIT 
      SPC 3 
PACK  JSB TESTL     TEST LEGALITY OF CALL 
      JSB SETPR     SET UP THE DISC PARAMETERS
      LDA P4        GET RELATIVE DOUBLE SECT
      CMA,INA,SZA,RSS  SET NEGATIVE IF ZERO 
      JMP PACK2     SKIP
      STA COUN1     SET COUNT 
PACK1 JSB UDAD      BUMP ADDRESS
      JMP EX101     END OF DIRECTORY EXIT 
      ISZ COUN1     STEP COUNTER; DONE? 
      JMP PACK1     NO; GO BUMP AGIN
PACK2 JSB RDPAS     YES; READ THE NEW SECT. 
EXIT3 ISZ WCS       SET WRITE FLAG
EXIT4 CLA           AND TAKE
      JMP CREX      ACCEPT EXIT 
      SPC 2 
ID    NOP 
TMP1  NOP 
TMP2  NOP 
DIRAD NOP 
TRACK NOP 
SECT  NOP 
WCS   NOP 
ALU   NOP 
DITR  NOP 
      SKP 
RLOCK LDA TMP1      DISC MUST BE SPECIFIED
      SZA,RSS 
      JMP EX101     NOT SPECIFIED - EXIT
      JSB SETDR     SET TO SEARCH FOR OPEN FLAGS
ROCK1 JSB RDNXB     READ ENTRY
      JMP ROCK4     END OF DIRECTORY - GRANT LOCK 
      LDA N8        SET COUNTER FOR 8 ENTRIES 
      STA EXSH
      LDA ABUF      SET A_ADDRESS OF FIRST
ROCK2 LDB A,I       END OF
      SSB           IF PURGED 
      JMP ROCK3     IGNOR 
      SZB,RSS       DIRECTORY?
      JMP ROCK4     YES; GRAND LOCK 
      JSB SETAD     NO; SET ENTRY ADDRESSES 
      JSB FLAG      TEST FOR FLAGS
      LDB COUN2     ANY 
      SZB           SET?
      JMP EX8       YES; REJECT LOCK
      LDA DIRA      NO; GET ADDRESS TO A
ROCK3 ADA .16       STEP TO NEXT ENTRY
      ISZ EXSH      END OF BLOCK? 
      JMP ROCK2     NO; TRY NEXT ENTRY
      JMP ROCK1     YES; TRY NEXT BLOCK 
      SPC 2 
ROCK4 JSB RDPS      LOCK GRANTABLE; READ DISC 
      LDA ID        DIRECTORY AND 
      CCB           SET 
      ADB DIRAD     THE 
ROCK5 STA B,I       LOCK
      JMP EXIT3     EXIT
      SPC 5 
ULOCK CLA           UNLOCK - CLEAR
      JMP ROCK5     AND GO SET IT 
      SPC 2 
EX101 LDA N102
      INA,RSS 
EX102 LDA N102
      JMP CREX
      SPC 2 
N102  DEC -102
.16   DEC 16
B377  OCT 377 
N7    DEC -7
      SKP 
CNAM  JSB RDPAS    CHANGE NAM - READ NEW NAME 
      LDA ABUF      MOVE IT TO
      JSB MOVE2     LOCAL SAVE AREA 
      LDA ABUF      SET UP THE NAME 
      JSB MOVE1     FOR DUP CHECK 
      JSB SETDR     SET UP TO READ THE DIRECTORY
      JSB N.SHR     SEARCH FOR DUPLICATE NAME 
      RSS           NOT FOUND  SO SKIP
      JMP EX2       TAKE DUP NAME EXIT
      JSB DIRCK     GO GET DIRECTORY ENTRY
      LDA FLAGA,I   OPEN EXCLUSIVELY
      RAL,CLE,ERA   CLEAR EXCLUSIVE BIT AND SAVE IN E 
      CPA P1        TO CALLER?
      SEZ,CCE,RSS   YES SKIP
      JMP EX102     NO; REJECT
CNAM1 LDA DIRA      YES; MOVE 
      JSB MOVE2     THE NEW NAME IN 
      JSB EXSH      SEARCH FOR EXTENT OF THIS FILE
      JMP CNAM1     YES  GO SET NEW NAME
      SPC 2 
EXSH  NOP           DIRECTOR SEARCH FOR EXTENTS TO MODIFY 
      ISZ WCS       SET THE WRITE FLAG
      JSB EXSHR    SEARCH FOR EXTENT
      JMP EXIT4     NOT FOUND SO EXIT 
      JMP EXSH,I    FOUND RETURN
      SPC 5 
* 
* DIRCK     READ A DIRECTORY ENTRY - SET FLAGS
*           CHECK OPEN FLAGS ETC. 
* 
DIRCK NOP 
      LDA ALU       DO WE ALREADY 
      CPA RDPS      HAVE THE DISC SPECS?
      RSS           YES  SO SKIP SET UP 
      JSB SETPR     SET UP THE DISC PARAMETERS
      LDA DITR      SET 
      STA TRACK     TRACK 
      LDA P4        GET THE PASSED
      AND B377      SECTOR
      STA SECT      AND SET IT
      XOR P4        NOW GET THE 
      ALF,ALF       OFFSET
      ADA ABUF      ADD THE BUFFER ADDRESS
      JSB SETAD     SET DIRECTORY ADDRESSES 
      JSB RWSUB     READ THE BLOCK
      LDA DIRA      MOVE THE ENTRY TO LOCAL 
      JSB MOVE1     STORAGE 
      JMP DIRCK,I 
      SKP 
      SPC 5 
CLOSE JSB DIRCK     CLOSE; GET THE SECTOR 
      LDA N7        SET FOR 7 ENTRIES 
CLOS1 LDB FLAGA,I   FIND
      RBL,CLE,ERB   CALLERS 
      CPB ID        FLAG
      JMP CLOS2     FOUND 
      ISZ FLAGA     NOT; YET TRY NEXT ONE 
      INA,SZA       MORE? 
      JMP CLOS1     YES; OK 
      JMP EX11      NO; ERR - NOT OPEN TO CALLER
      SPC 2 
CLOS2 CLA           FOUND; CLEAR THE
      STA FLAGA,I   FLAG
      LDA P2        GET TRUNCATE CODE 
      SZA           IF ZERO THEN SKIP  NO ACTION
      SEZ,RSS       EXCLUSIVE OPEN? 
      JMP EXIT3     NO; EXIT
      SSA,RSS       IF POSITIVE THEN
      JMP EXPUR     GO PURGE THE EXTENTS
      ADA #SEC,I    CALCULATE NEW FILE SIZE 
      SLA,RSS       IGNOR IF ODD SECTOR COUNT 
      SSA           IF RESULT LESS THAN ZERO
      JMP EXIT3     THEN IGNOR IT 
      CCE,SZA,RSS   IF ZERO 
      JMP PURGE     GO PURGE
      STA TMP2      SAVE THE NEW SIZE 
      JSB LAST?     LAST FILE?
      CLE,RSS       NO, CLEAR E  SKIP 
      CCE           YES; SET E
      LDA TMP2      SET THE NEW SIZE
      STA #SEC,I    IN THE DIRECTORY
      SEZ,RSS       IF NOT THE LAST ENTRY 
      JMP EXPUR     GO PURGE ANY EXTENTS
      JMP PURG8     ELSE GO UPDATE DISC PRAMS 
      SPC 5 
NXT/S NOP           CACULATE THE NEXT TRACK AND SECTOR
      LDB #SEC,I    GET THE FILE SIZE 
      LDA SECTA,I   GET THE NO OF SECTORS IN THE FILE 
      AND B377     ISOLATE
      ADB A         SUM 
      ASR 16        EXTEND TO A 
      DIV #SECT     DIVIDE BY THE NO SECT PER TRACK 
      ADA TRAKA,I   ADD THE CURRENT TRACK ADDRESS 
      JMP NXT/S,I   RETURN A=NEXT TRACK,B=NEXT SECTOR 
      SPC 5 
EXSHR NOP           EXTENT SEARCH ROUTINE 
      LDB DEF       SET RETURN ADDRESS IN 
      STB N.SHR     NAME SEARCH ROUTINE 
      JMP NSHR0    GO TO NAME SEARCH
DEF   DEF *+1       RETURN ADDRESS FOR NAME SHEARCH 
      JMP EXSHR,I   NOT FOUND SO EXIT 
      JSB SETAD     FOUND  SET THE ADDRESSES
      LDB EXSHR     STEP THE RETURN ADDRESS 
      CCE,INB       AND 
      LDA SECTA,I   MAKE SURE THIS IS NOT THE MAIN
      CPA CSEC      SAME AS MAIN? 
      JMP CSER      YES SO TRY AGAIN
      JMP B,I       RETURN
      SPC 2 
LAST? NOP 
      LDB TYPE,I    IF TYPE SIX FILE
      CPB .6        THEN TREAT
      JMP LAST?,I   AS NOT LAST 
      JSB NXT/S     COMPUTE THE NEXT TRACK AND SECTOR 
      CPA NXTR      SAME TRACK? 
      CCA           YES; A_1
      CPB NXSEC     SAME AS NEXT SECTOR?
      INA,SZA       YES; WAS IT SAME TRACK ALSO?
      JMP LAST?,I   NO; NOT LAST FILE  EXIT P+1 
      ISZ LAST?     YES; LAST FILE
      JMP LAST?,I   EXIT P+2
      SPC 3 
SETPR NOP           READ AND SET UP THE DISC PARAMETERS 
      JSB SETDR     SET UP TO ACCESS THE DIR
      JSB RDNXB     READ AND SET PRAMS
N16   DEC -16 
      JMP SETPR,I   RETURN TO CALLER
      SPC 2 
.6    DEC 6 
      SKP 
PURGE CCA 
PURG0 STA DIRA,I    SET PURGE FLAG
      JSB LAST?     LAST FILE?
      JMP EXPUR     NO; GO CHECK FOR EXTENTS
PURG2 STA DIRA,I    MAKE ENTRY AVAILABLE
      LDA DIRA      IS THIS THE FIRST 
      STA WCS          SET TO WRITE CURRENT BLOCK 
      CPA ABUF      ENTRY IN THE CURRENT BLOCK? 
      JMP PURG5     YES; GO READ PREVIOUS BLOCK 
PURG7 ADA N16       NO; BACK UP TO PREVIOUS 
      JSB SETAD     ENTRY; FIND FIRST UNPURGED
      LDB TYPE,I    CHECK TYPE
      LDA DIRA,I    ENTRY 
      CPB .6        IF TYPE SIX FILE
      CCE           DO NOT ATTEMPT RECOVERY 
      SZB           TYPE ZERO - IF SO SKIP
      SEZ,INA,SZA,RSS   PURGED? 
      JMP PURG2     YES; TRY PREVIOUS ENTRY 
      SPC 1 
      SSA           FOUND ENTRY - IS IT THE 
      JMP PURG3     DISC SPEC ENTRY? - YES JUMP 
PURG8 JSB NXT/S     NO; CACULATE THE NEXT TRACK AND SECT
      JMP CREA6     GO SET, WRITE & EXIT
      SPC 2 
PURG3 LDA TRAKA,I  SET TO SHOW
      CLB           NEXT AVAILABLE SECT 
      JMP CREA6     IS FIRST SECTOR 
      SPC 1 
PURG5 JSB WCSR      WRITE CURRENT SECTOR
      LDB SECT      GET SECTOR ADDRESS
      SZB,RSS       IF START OF TRACK 
      ISZ TRACK     DIRECTORY TRACK 
      ADB N14       SUBTRACT 14 SECTORS 
      SSB           IF NEGATIVE THEN
      ADB #SECT     ADD THE NO. PER TRACK 
      STB SECT      SET NEW SECTOR ADDRESS
      JSB RWSUB     READ THE BLOCK
      LDA ABUF      SET ADDRESS FOR 
      ADA .128      LAST ENTRY
      JMP PURG7     IN THE BLOCK
      SPC 2 
EXPUR JSB EXSH      SEARCH FOR EXTENTS TO PURGE 
      JMP PURGE     GO PURGE EXTENT 
      SKP 
* P.PAS     EXTERNAL
*           CALLING SEQUENCE
* 
*           E_0 FOR SETUP 
*           E_1 TO MOVE OUT 
* 
*           B_0 TO SET ADDRESS
*           B_100000 TO SET PARAMETERS
* 
*           A = ADDRESS OF FROM-TO AREA 
* 
*           JSB P.PAS 
*           DEC -N       NO. OF PARAMETERS TO BE MOVED
*           BSS N        AREA SET UP OR MOVED OUT 
      SPC 2 
.1    DEC 1 
A     EQU 0 
B     EQU 1 
.     EQU 1650B 
KEYWD EQU .+7 
TATSD EQU .+70
XEQT  EQU .+39
LN    EQU * 
      END BEGIN 
