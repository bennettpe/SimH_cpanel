ASMB,B,R,L,C
      HED RTE -FMGR  MAIN 
      NAM FMGR,3,90 
      EXT FM.ER,CLOS.,EXEC,MSS.,C.BUF 
      ENT IFLG.,CAD.,FM.AB,D.,CUSE.,PARS. 
      ENT SEG.R,P.SEG,INI1.,INI2.,I.BUF,O.BUF 
      ENT N.OPL,P.RAM,TTY.,NO.RD,NOCM.
      SPC 3 
O.BUF BSS 144       GENERAL OUTPUT DCB
I.BUF BSS 144       GENERAL INPUT DCB 
      ORG O.BUF     PUT INITIALIZE CODE IN DCB
FMGR  LDA XEQT      GET THE 
      ADA .12       FIRST TWO 
      LDA A,I       CHARACTERS  OF PGMS 
      STA SEG       NAME AND SET FOR SEGMENT CALLS. 
      JMP ITCAL     GO LOAD THE INITILIZE SEGMENT 
INI1. JSB MSS.      INIT SEGMENT COMES HERE IF
      DEF *+2        SYSTEM INITILIZE IS NEEDED 
      DEF IFLG.       SEND  FMGR 00X (5 OR 3) MESSAGE 
      LDA AS1BL     SET TO LOAD 
      JMP PSEGC     AND LOAD THE PARSE SEGMENT
INI2. CPB ASIN      SEGMENT  RETURNS HERE AFTER 
      JMP SEGLD     READING AND PARSING-EXPECTED INPUT JUMP 
      CPB AS??      WAS ??  INPUT?
      JMP CAL??     YES -GO SET UP AND CALL ?? ROUTINE
      JSB MSS.      NO! ILLEGAL RESPONCE
      DEF *+2        SEND  FMGR 004 
      DEF .4
CAL?? LDA .4        ?? CALL FROM INIT-SET MS TO 4 
      STA MS          TO FOURCE FMGR 004 MESSAGE
      JMP SEGLD     GO TO GENERAL  CALL ROUTINE 
      JMP INI1.     TRY AGAIN 
      SPC 1 
INIT2 LDA MS        HERE AFTER  INIT CALL ON IN 
      SZA            SKIP IF  OK
      JMP INI1.     NO - TRY AGAIN
      SPC 1 
ITCAL CLA           SET UP TO CALL THE INITIALIZE 
      STA CAD.      ROUTINE 
      LDA AS2BL     FIRST ROUTINE IN SEGMENT TWO
      JMP PSEGC     GO LOAD THE SEGMENT AND CALL IT 
      SPC 1 
AS??  ASC 1,??
ASIN  ASC 1,IN
AS2BL ASC 1,2 
.4    OCT 4 
.12   DEC 12
TEST  EQU I.BUF-*   MAKE SURE ABOVE CODE IS IN O.BUF
      ORR 
FM.AB JSB CLOS.     COMMAND LOOP - ENTRY
      DEF *+2           CLOSE 
      DEF I.BUF         INPUT FILE
      JSB CLOS.         CLOSE 
      DEF *+2 
      DEF O.BUF         OUTPUT FILE 
INIT0 LDA AS1BL     INITILIZE SEGMENT CALL ENTRY POINT
      CPA CUSE.         IF PARSE SEGMENT STILL IN 
      JMP P.SEG         CORE THEN SKIP SEGMENT CALL 
PSEGC STA CUSE.         ELSE SET UP 
SEGLD JSB EXEC          AND 
      DEF *+3           LOAD
      DEF .8            PARSE 
      DEF SEG           SEGMENT 
P.SEG CLA           NORMAL PARSE SEGMENT RETURN POINT 
      STA MS            CLEAR THE ERROR FLAG
      JSB PARS.,I       CALL TO READ & PARSE A COMMAND
      DEF *+1 
      SEZ,RSS           E=I = SEGMENT ABSENT
      JMP CALLR         E=0 = ROUTINE IN CORE 
      JMP SEGLD         SEGMENT ABSENT SO GO LOAD 
SEG.R ADA CAD.      ALL SEGMENTS OTHER THAN PARSE 
      LDA A,I 
      STA CAD.       RETURN HERE WITH A= DEF TABLE ADDRESS
CALLR JSB CAD.,I        CALL THE ROUTINE
      DEF *+4          PASSING
      DEF NOCM.         THE NUMBER OF PARAMETRS 
      DEF P.RAM         THE TABLE ADDRESS 
      DEF MS            THE ERROR FLAG ADDRESS
      LDA MS            IF THERE IS NO
      SZA,RSS           ERROR THEN
      JMP IFTST         JUMP
      JSB MSS.          ELSE
      DEF *+2            PRINT
      DEF MS            FMGR MS 
IFTST LDA IFLG.         IF INITILIZE ROUTINE
      SZA               IN CONTROL
      JMP INIT2         GO CONTINUE SYSTEM INITIALIZATION 
      JMP FM.AB         ELSE  READ  THE  NEXT COMMAND 
      SPC 2 
MS    NOP 
IFLG. NOP 
NO.RD NOP 
TTY.  OCT 1 
N.OPL BSS 10
P.RAM BSS 64
NOCM. NOP 
CAD.  NOP 
PARS. NOP 
.8    DEC 8 
ENDMS ASC 3, $END 
SEG   ASC 2,FMGR
CUSE. ASC 1,
AS1BL ASC 1,1 
D.    ASC 3,D.RTR 
A     EQU 0 
B     EQU 1 
XEQT  EQU 1717B 
      SPC 3 
      ORG *         LENGTH OF ROUTINE 
      END FMGR
