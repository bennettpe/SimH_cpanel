ASMB,B,X,L
*001  SPL, L, M, O
*002        NAME DL..(8)
        NAM DL..,8
.A.     EQU  0
.B.     EQU  1
        ENT DL..
        EXT .ENTR 
        EXT .DIV
        EXT .DRCT 
        EXT PK.DR 
        EXT D.SDR 
        EXT TMP.
        EXT O.BUF 
        EXT .E.R. 
        EXT BUF.
        EXT MSC.
        EXT .TTY
        EXT DR.RD 
        EXT LOCF
        EXT WRITF 
        EXT OPEN. 
        EXT CONV. 
        EXT IER.
        EXT D.RIO 
HEAD.   OCT 020040
        OCT 020111
        OCT 046101
        OCT 041075
H1      OCT 054531
        OCT 054531
H1.5    OCT 054531
H2      OCT 020116
        OCT 054124
        OCT 051075
        OCT 054130
H3      OCT 054130
H4      OCT 020116
        OCT 054123
        OCT 042503
        OCT 036530
H5      OCT 054130
H6      OCT 020043
        OCT 051505
        OCT 041457
        OCT 052122
        OCT 036530
H7      OCT 054130
H8      OCT 020114
        OCT 040523
        OCT 052040
        OCT 052122
        OCT 036440
        OCT 054130
H9      OCT 054130
H10     OCT 020043
        OCT 042122
        OCT 020124
        OCT 051075
H11     OCT 054130
HEA.1   OCT 020040
        OCT 047101
        OCT 046505
        OCT 020040
        OCT 020124
        OCT 054520
        OCT 042440
        OCT 021502
        OCT 046113
        OCT 051457
        OCT 046125
        OCT 020117
        OCT 050105
        OCT 047040
        OCT 052117
HEA.2   OCT 020040
        OCT 047101
        OCT 046505
        OCT 020040
        OCT 020124
        OCT 054520
        OCT 042440
        OCT 021502
        OCT 046113
        OCT 051457
        OCT 046125
        OCT 020123
        OCT 041517
        OCT 042105
        OCT 020124
        OCT 051101
        OCT 041513
        OCT 020123
        OCT 042503
        OCT 020040
        OCT 047520
        OCT 042516
        OCT 020124
        OCT 047440
EXEND   BSS 1 
DL      BSS 1 
LUPT    BSS 1 
T       BSS 1 
.3      OCT 000004
.4      OCT 000063
.5      OCT 000001
DIS     BSS 1 
BLK     BSS 1 
INDEX   BSS 1 
.8      OCT 000003
.9      OCT 000000
T2      BSS 1 
TTY     BSS 1 
TB      BSS 1 
BF      BSS 1 
.10     OCT 020040
.12     OCT 000066
P       BSS 1 
.14     OCT 177760
.15     OCT 041522
.16     OCT 036440
PK3     BSS 1 
.17     BSS 1 
.18     OCT 000005
PK9     BSS 1 
PK5     BSS 1 
PK6     BSS 1 
PK7     BSS 1 
PK8     BSS 1 
.19     OCT 000002
T6      BSS 1 
PK      BSS 1 
.23     DEF H1
.24     DEF H1.5
.25     OCT 077777
.26     OCT 000042
.29     OCT 000027
.30     OCT 000016
T5      BSS 1 
T4      BSS 1 
T3      BSS 1 
.34     OCT 000120
PK4     BSS 1 
.38     OCT 000077
.39     OCT 000012
.41     OCT 026440
.42     OCT 000377
.45     OCT 025440
.47     BSS 1 
.49     OCT 000007
.56     OCT 000014
.57     OCT 177400
.58     OCT 000055
.59     OCT 000040
.60     OCT 000121
L       BSS 1 
.65     OCT 177735
.66     OCT 177761
.67     OCT 000041
.68     OCT 177777
.71     OCT 000200
.72     OCT 000020
.73     BSS 1 
.74     BSS 1 
*003  ! 
*004  !     RTE FMGR DIRECTORY LIST MODULE
*005  ! 
*006  !     ENTERED ON COMMAND: 
*007  ! 
*008  !     DL,CR,MSC 
*009  ! 
*010  !     WHERE:
*011  !           CR IF GIVEN RESTRICTS THE LIST TO 
*012  !               THE GIVEN CARTRIDE
*013  ! 
*014  !           MSC IF GIVEN MUST BE THE MASTER 
*015  !               SECURITY CODE AND CAUSES THE
*016  !               EXPANDED LIST FORMAT. (SEE BELOW) 
*017  ! 
*018  !     FORMATS:
*019  ! 
*020  !     HEAD: 
*021  ! 
*022  !L1   CR=XXXXX
*023  !L2    ILAB=YYYYYY NXTR=XXXX NXSEC=XXX #SEC/TR=XXX
*024  !          LAST TR= XXXX #DR TR=XX
*025  ! 
*026  ! 
*027  ! 
*028  !     WHERE: CR IS FOLLOWED BY THE CARTRIDGE ID NUMBER
*029  !           YYYYYY IS THE CARTRIDGE LABEL 
*030  !           NXTR INDICATES THE NEXT TRACK 
*031  !           NXSEC   THE NEXT SECTOR 
*032  !           #SEC/TR  THE NO. OF SECTORS/TRACK 
*033  !           LAST TR THE LAST TRACK AND
*034  !           #DR TR  THE NUMBER OF DIRECTORY TRACKS
*035  ! 
*036  !     STANDARD (MSC NOT SUPPLIED):
*037  !L3   NAME   TYPE #BLKS/LU OPEN TO
*038  ! 
*039  !      FOLLOWED BY THE DIRECTORY ENTRIES
*040  ! 
*041  !     EXTENDED FORMAT (MSC SUPPLIED)
*042  !     NAME   TYPE #BLKS/LU SCODE TRACK SEC OPEN TO
*043  ! 
*044  ! 
*045  !     IF THE LIST DEVICE IS A TTY (TYPE 00 OR 05) 
*046  !       THE EXTENDED FORMAT MAY FOURCE TWO LINES
*047  !       (IF 7 PROGRMS HAVE THE FILE OPEN) 
*048  !     IF A PROGRAM HAS A FILE OPEN EXCLUSIVELY
*049  !     A - (MINUS SIGN) WILL FOLLOW THE PROGRAMS NAME
*050  !     IF AN ENTRY IS FOR AN EXTENT A + (PLUS SIGN)
*051  !        WILL BE PRINTED IN THE OPEN TO FIELD 
*052  !        FOLLOWED BY THE EXTENT NUMBER
*053  ! 
*054  ! 
*055  !     DEFINE EXTERNALS
*056  ! 
*057        LET PK.DR,D.SDR,TMP.,O.BUF,.E.R.,\
*       BUF.    BE INTEGER,EXTERNAL 
*058        LET HEAD.(4),H1(2),H1.5,H2(4),H3,H4(4),H5,H6(5),H7,H8(6),H9,
*           H10(4),H11    BE INTEGER
*059        LET HEA.1(15),HEA.2(24)  BE INTEGER 
*060        INITIALIZE HEAD.,H1,H1.5,H2,H3,H4,H5,H6,H7,H8,H9,H10,H11 TO 
*        "   ILAB=YYYYYY NXTR=XXXX NXSEC=XXX #SEC/TR=XXX LAST TR= XX"\
*           ,"XX #DR TR=XX" 
*061        INITIALIZE HEA.1 TO "  NAME   TYPE #BLKS/LU OPEN TO"
*062        INITIALIZE HEA.2 TO "  NAME   TYPE #BLKS/LU SCODE TRACK SEC 
*                           "OPEN TO "
*063  ! 
*064        LET MSC.,.TTY BE FUNCTION,EXTERNAL
*065  ! 
*066        LET DR.RD,LOCF,WRITF,OPEN.,CONV.,IER.,D.RIO\
*                          BE SUBROUTINE,EXTERNAL 
*067  ! 
*068  !     DEFINE INTERNALS
*069  ! 
*070        LET SETAD, WRIT, SPACE BE SUBROUTINE
*071  ! 
*072  !     DEFINE CONSTANTS
*073  ! 
*074        LET BLANK     BE CONSTANT (20040K)
*075        LET C.R       BE CONSTANT (41522K)!CR 
*076        LET EQ.BL     BE CONSTANT (36440K)!=
*077        LET MIN.B     BE CONSTANT (26440K)!-
*078        LET PLS.B     BE CONSTANT (25440K)!+
*079        LET MIN       BE CONSTANT (   55K)! - 
*080  ! 
*081  ! 
*082  DL..: SUBROUTINE(N,LIS,ER) GLOBAL 
N       NOP 
LIS     NOP 
ER      NOP 
DL..    NOP 
        JSB .ENTR 
        DEF N 
*083        EXEND_0 
        CLA 
        STA EXEND 
*084        DL_$(@LIS+1)      !SET DISC SPEC
        LDA LIS 
        INA 
        LDA .A.,I 
        STA DL
*085        LUPT_@D.SDR   !SET LU POINTER 
        JSB .DRCT 
        DEF D.SDR 
        STA LUPT
*086        DO[T_    @LIS+4   ;IF $T  THEN[IFNOT[\ !CHECK 
*           EXEND_MSC.($T)]THEN[ER_51;RETURN]]]!SECURITY
        LDA LIS 
        ADA .3
        STA T 
        LDA T,I 
        SZA,RSS 
        JMP .2
        JSB MSC.
        DEF *+2 
        DEF T,I 
        STA EXEND 
        SZA 
        JMP .2
        LDA .4
        STA ER,I
        JMP DL..,I
*087        D.RIO(1)
.2      JSB D.RIO 
        DEF *+2 
        DEF .5
*088  AGAIN:DIS_[IF DL THEN DL,ELSE -$LUPT] !GET DISC ID
AGAIN   LDA DL
        SZA,RSS 
        JMP .6
        LDA DL
        JMP .7
.6      LDB LUPT,I
        CMB,INB 
        LDA .B. 
.7      STA DIS 
*089        IFNOT DIS THEN RETURN          !END OF DIREC-DONE 
        SZA,RSS 
        JMP DL..,I
*090        BLK,INDEX_0 
        CLA 
        STA BLK 
        STA INDEX 
*091        T_ @TMP.+3
        JSB .DRCT 
        DEF TMP.
        ADA .8
        STA T 
*092        OPEN.(O.BUF,TMP.,$T,0) !OPEN LIST FILE
        JSB OPEN. 
        DEF *+5 
        DEF O.BUF 
        DEF TMP.
        DEF T,I 
        DEF .9
*093        LOCF(O.BUF,.E.R.,T,T,T,T,T2)    !GET LIST LU
        JSB LOCF
        DEF *+8 
        DEF O.BUF 
        DEF .E.R. 
        DEF T 
        DEF T 
        DEF T 
        DEF T 
        DEF T2
*094        TTY_.TTY(T2)                  !SET TTY FLAG 
        JSB .TTY
        DEF *+2 
        DEF T2
        STA TTY 
*095        TB_[BF_@BUF.]+1 
        JSB .DRCT 
        DEF BUF.
        STA BF
        INA 
        STA TB
*096        $BF_BLANK 
        LDA .10 
        STA BF,I
*097  NXBLK:DR.RD(1, DIS,BLK)?[IFNOT BLK THEN [ER_54;RETURN]\ 
*                          ,ELSE GO TO CLEAN]!READ BLOCK
NXBLK   JSB DR.RD 
        DEF *+4 
        DEF .5
        DEF DIS 
        DEF BLK 
        SEZ,RSS 
        JMP NXFIL 
        LDA BLK 
        SZA 
        JMP CLEAN 
        LDA .12 
        STA ER,I
        JMP DL..,I
*098  NXFIL:SETAD?[INDEX_0;BLK_BLK+1;GO TO NXBLK] !SET ADDRESSES
NXFIL   JSB SETAD 
        DEF *+1 
        SEZ,RSS 
        JMP .13 
        CLA 
        STA INDEX 
        LDA BLK 
        INA 
        STA BLK 
        JMP NXBLK 
*099        P_TB
.13     LDA TB
        STA P 
*100        IF INDEX+BLK-16 THEN GO TO FILEP !NOT FIRST JUMP
        LDA INDEX 
        ADA BLK 
        ADA .14 
        SZA 
        JMP FILEP 
*101        $P_C.R              !SET
        LDA .15 
        STA P,I 
*102        $(P+1)   _EQ.BL     !CR=XXXXX 
        LDA P 
        INA 
        LDB .16 
        STB .A.,I 
*103                            ! 
*104        CONV.($PK3,$(P+3),5)!IN BUFFER
        LDA P 
        ADA .8
        STA .17 
        JSB CONV. 
        DEF *+4 
        DEF PK3,I 
        DEF .17,I 
        DEF .18 
*105                            ! 
*106        WRIT($BF,4)             !WRITE ON LIST UNIT 
        JSB WRIT
        DEF *+3 
        DEF BF,I
        DEF .3
*107        CONV.($PK9,H3,4) !INSERT NEXT TRACK 
        JSB CONV. 
        DEF *+4 
        DEF PK9,I 
        DEF H3
        DEF .3
*108        CONV.($PK5,H5,3)        !   NEXT SECTOR 
        JSB CONV. 
        DEF *+4 
        DEF PK5,I 
        DEF H5
        DEF .8
*109        CONV.($PK6,H7,3)        !   #SECTORS/TRACK
        JSB CONV. 
        DEF *+4 
        DEF PK6,I 
        DEF H7
        DEF .8
*110        CONV.($PK7-$PK8-1,H9,4) !   LAST TRACK
        LDA PK8,I 
        CMA,INA 
        ADA PK7,I 
        CCB 
        ADB .A. 
        STB .17 
        JSB CONV. 
        DEF *+4 
        DEF .17 
        DEF H9
        DEF .3
*111        CONV.(-$PK8,H11,2)       !   #DIRICTORY TRACKS
        LDB PK8,I 
        CMB,INB 
        STB .17 
        JSB CONV. 
        DEF *+4 
        DEF .17 
        DEF H11 
        DEF .19 
*112        FOR T6_@H1 TO @H1.5 DO[ $T6_$PK AND 77777K;\
*                                 PK_PK+1]
        LDA .23 
        STA T6
        JMP .21 
.20     LDA T6
        INA 
        STA T6
.21     LDB T6
        CMB,INB 
        ADB .24 
        SSB 
        JMP .22 
        LDA PK,I
        AND .25 
        STA T6,I
        LDA PK
        INA 
        STA PK
        JMP .20 
*113        WRIT(HEAD.,34)
.22     JSB WRIT
        DEF *+3 
        DEF HEAD. 
        DEF .26 
*114        SPACE 
        JSB SPACE 
        DEF *+1 
*115        IF EXEND THEN WRIT(HEA.2,23) ,ELSE WRIT(HEA.1,14) 
        LDA EXEND 
        SZA,RSS 
        JMP .27 
        JSB WRIT
        DEF *+3 
        DEF HEA.2 
        DEF .29 
        JMP .28 
.27     JSB WRIT
        DEF *+3 
        DEF HEA.1 
        DEF .30 
*116        SPACE         !SPACE
.28     JSB SPACE 
        DEF *+1 
*117        T6_[T5_[T4_[T3_TB+2]+3]+3]+2   !SET POINTERS
        LDA TB
        ADA .19 
        STA T3
        ADA .8
        STA T4
        ADA .8
        STA T5
        ADA .19 
        STA T6
*118        GO TO NXFIL                    !START LIST
        JMP NXFIL 
*119  ! 
*120  FILEP:IF $PK<0 THEN GO TO NXFIL !PURGED ENTRY 
FILEP   LDB PK,I
        SSB 
        JMP NXFIL 
*121        IFNOT $PK THEN GO TO CLEAN ! END OF DIRECTORY 
        LDA PK,I
        SZA,RSS 
        JMP CLEAN 
*122        FOR T_TB TO TB+80 DO[$T_BLANK] !BLANK BUFFER
        LDA TB
        STA T 
        JMP .32 
.31     LDA T 
        INA 
        STA T 
.32     LDA TB
        ADA .34 
        CMA,INA 
        ADA T 
        CMA,INA 
        SSA 
        JMP .33 
        LDA .10 
        STA T,I 
        JMP .31 
*123        FOR T_TB TO T3 DO [$T_$PK;PK_PK+1]!SET NAME 
.33     LDA TB
        STA T 
        JMP .36 
.35     LDA T 
        INA 
        STA T 
.36     LDB T 
        CMB,INB 
        ADB T3
        SSB 
        JMP .37 
        LDA PK,I
        STA T,I 
        LDA PK
        INA 
        STA PK
        JMP .35 
*124        CONV.($PK3,$T4,5)                       !SET TYPE 
.37     JSB CONV. 
        DEF *+4 
        DEF PK3,I 
        DEF T4,I
        DEF .18 
*125        IF $PK3 THEN GO  TO NOT0    !IF TYPE ZERO 
        LDA PK3,I 
        SZA 
        JMP NOT0
*126        CONV.($PK4 AND 77K,$T5,2)   !CONVERT LU 
        LDA PK4,I 
        AND .38 
        STA .17 
        JSB CONV. 
        DEF *+4 
        DEF .17 
        DEF T5,I
        DEF .19 
*127        GO TO EXCK                  !ELSE 
        JMP EXCK
*128  NOT0: CONV.($PK6/2,$T5,5)         !CONVERT BLOCK SIZE 
NOT0    LDA PK6,I 
        CLB 
        SSA 
        CMB 
        JSB .DIV
        DEF .19 
        STA .17 
        JSB CONV. 
        DEF *+4 
        DEF .17 
        DEF T5,I
        DEF .18 
*129  ! 
*130  EXCK: IFNOT EXEND THEN GO TO NAMST !NOT EXTENDED JMP
EXCK    LDA EXEND 
        SZA,RSS 
        JMP NAMST 
*131  ! 
*132                                     !SET NAME LIST ORGIN 
*133  ! 
*134        T6_[PK_[PK6_[T2_[P_TB+10]+2]+3]+2]+2
        LDA TB
        ADA .39 
        STA P 
        ADA .19 
        STA T2
        ADA .8
        STA PK6 
        ADA .19 
        STA PK
        ADA .19 
        STA T6
*135        IF $PK8 <0 THEN [$P_MIN.B ;$PK8_-$PK8]
        LDB PK8,I 
        SSB,RSS 
        JMP .40 
        LDA .41 
        STA P,I 
        LDB PK8,I 
        CMB,INB 
        STB PK8,I 
*136        CONV.($PK8,$T2,5)             !SET SECURITY CODE
.40     JSB CONV. 
        DEF *+4 
        DEF PK8,I 
        DEF T2,I
        DEF .18 
*137        IFNOT $PK3 THEN GO TO NAMST !IF TYPE ZERO 
        LDA PK3,I 
        SZA,RSS 
        JMP NAMST 
*138        CONV.($PK4,$PK6,4)             !SKIP TRACK
        JSB CONV. 
        DEF *+4 
        DEF PK4,I 
        DEF PK6,I 
        DEF .3
*139        CONV.($PK5 AND 377K,$PK,3)     !AND SECTOR
        LDA PK5,I 
        AND .42 
        STA .17 
        JSB CONV. 
        DEF *+4 
        DEF .17 
        DEF PK,I
        DEF .8
*140  NAMST:T2_T6         !SET WORKING ADDRESS
NAMST   LDA T6
        STA T2
*141  ! 
*142        IF $PK3 THEN [IF [T_($PK5 -<8)AND 377K] THEN[\
*           $T6_PLS.B ;CONV.(T,$(T6+1),3);GO TO PRT] ]
        LDA PK3,I 
        SZA,RSS 
        JMP .44 
        LDA PK5,I 
        ALF,ALF 
        AND .42 
        STA T 
        SZA,RSS 
        JMP .44 
        LDA .45 
        STA T6,I
        LDA T6
        INA 
        STA .17 
        JSB CONV. 
        DEF *+4 
        DEF T 
        DEF .17,I 
        DEF .8
        JMP PRT 
*143  ! 
*144        REPEAT 7 TIMES DO THRU NAMSK
.44     LDA .49 
        STA .47 
.46     CCA 
        ADA .47 
        STA .47 
        LDB .47 
        SSB 
        JMP PRT 
*145  NAMSK:                   IF $[PK8_PK8+1]THEN[\
*             P_($PK8 AND 77777K)+12;FOR T_P TO P+2\
*                DO[ $T2_$T ;T2_T2+1];T_T2-1; \ 
*                  $T_($T AND 177400K)+[IF $PK8<0 THEN \
*                      MIN,ELSE 40K]] 
NAMSK   LDA PK8 
        INA 
        STA PK8 
        LDA .A.,I 
        SZA,RSS 
        JMP .55 
        LDA PK8,I 
        AND .25 
        ADA .56 
        STA P 
        STA T 
        JMP .51 
.50     LDA T 
        INA 
        STA T 
.51     LDA P 
        ADA .19 
        CMA,INA 
        ADA T 
        CMA,INA 
        SSA 
        JMP .52 
        LDA T,I 
        STA T2,I
        LDA T2
        INA 
        STA T2
        JMP .50 
.52     CCA 
        ADA T2
        STA T 
        LDA T,I 
        AND .57 
        STA .17 
        LDB PK8,I 
        SSB,RSS 
        JMP .53 
        LDA .58 
        JMP .54 
.53     LDA .59 
.54     ADA .17 
        STA T,I 
.55     JMP .46 
*146  PRT:  P_TB+81 
PRT     LDA TB
        ADA .60 
        STA P 
*147  LNCK: IF $[P_P-1]=BLANK THEN GO TO LNCK 
LNCK    CCA 
        ADA P 
        STA P 
        LDA .A.,I 
        CPA .10 
        JMP LNCK
*148        L_P-TB+1
        LDA TB
        CMA,INA 
        ADA P 
        INA 
        STA L 
*149        T_BF  !SET BUFFER ADDRESS 
        LDA BF
        STA T 
*150        IF L>34 THEN[WRIT($BF,34);L_L-15;T_TB+14;\
*                  FOR T6_T TO TB+33 DO $T6_BLANK]
        LDB L 
        ADB .65 
        SSB 
        JMP .64 
        JSB WRIT
        DEF *+3 
        DEF BF,I
        DEF .26 
        LDA L 
        ADA .66 
        STA L 
        LDA TB
        ADA .30 
        STA T 
        STA T6
        JMP .62 
.61     LDA T6
        INA 
        STA T6
.62     LDA TB
        ADA .67 
        CMA,INA 
        ADA T6
        CMA,INA 
        SSA 
        JMP .64 
        LDA .10 
        STA T6,I
        JMP .61 
*151        WRIT($T,L)  !  WRITE THE LINE 
.64     JSB WRIT
        DEF *+3 
        DEF T,I 
        DEF L 
*152        GO TO NXFIL 
        JMP NXFIL 
*153  ! 
*154  CLEAN:WRITF(O.BUF,.E.R.,T,-1) !END FILE 
CLEAN   JSB WRITF 
        DEF *+5 
        DEF O.BUF 
        DEF .E.R. 
        DEF T 
        DEF .68 
*155  ! 
*156        IFNOT DL THEN[LUPT_LUPT+4;GOTO AGAIN] 
        LDA DL
        SZA 
        JMP .69 
        LDA LUPT
        ADA .3
        STA LUPT
        JMP AGAIN 
*157  ! 
*158        RETURN
.69     JMP DL..,I
*159        END 
*160  ! 
*161  SETAD:SUBROUTINE FEXIT ! SET PACK DIRECTORY ENTRY 
SETAD   NOP 
        JSB .ENTR 
        DEF SETAD 
*162                         ! ADDRESSES
*163        IF INDEX=128 THEN FRETURN !END BLOCK EXIT 
        LDB INDEX 
        CPB .71 
        RSS 
        JMP .70 
        CCE 
        JMP SETAD,I 
*164        PK9_[PK8_[PK7_[PK6_[PK5_[PK4_[PK3_[PK_INDEX+@PK.DR]+\ 
*             3]+1]+1]+1]+1]+1]+1 !SET THE ADDRESSES
.70     JSB .DRCT 
        DEF PK.DR 
        ADA INDEX 
        STA PK
        ADA .8
        STA PK3 
        INA 
        STA PK4 
        INA 
        STA PK5 
        INA 
        STA PK6 
        INA 
        STA PK7 
        INA 
        STA PK8 
        INA 
        STA PK9 
*165        INDEX_INDEX+16   !STEP INDEX
        LDA INDEX 
        ADA .72 
        STA INDEX 
*166        RETURN
        CLE 
        JMP SETAD,I 
*167        END 
*168  ! 
*169  ! 
*170  WRIT: SUBROUTINE(BAD,NWORD) !WRITE N WORDS ON O.BUF 
BAD     NOP 
NWORD   NOP 
WRIT    NOP 
        JSB .ENTR 
        DEF BAD 
*171                          !IF NOT A TTY TWO BLANKS ARE
*172        WRITF(O.BUF,.E.R.,$(@BAD+TTY),NWORD+1-TTY)!ADDED
        LDA BAD 
        ADA TTY 
        LDB NWORD,I 
        INB 
        CMB,INB 
        ADB TTY 
        CMB,INB 
        STA .73 
        STB .74 
        JSB WRITF 
        DEF *+5 
        DEF O.BUF 
        DEF .E.R. 
        DEF .73,I 
        DEF .74 
*173        IER.                                  !AT THE 
        JSB IER.
        DEF *+1 
*174        RETURN                                !FRONT
        JMP WRIT,I
*175        END 
*176  ! 
*177  SPACE:SUBROUTINE
SPACE   NOP 
        JSB .ENTR 
        DEF SPACE 
*178        $TB_BLANK     !SET A 1 WORD BLANK 
        LDA .10 
        STA TB,I
*179        WRIT($BF,1)   !WRITE IT 
        JSB WRIT
        DEF *+3 
        DEF BF,I
        DEF .5
*180        RETURN        !RETURN 
        JMP SPACE,I 
*181        END 
*182  ! 
*183        END 
        END 
*184        END$
