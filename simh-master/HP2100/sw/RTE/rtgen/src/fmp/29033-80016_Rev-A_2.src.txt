ASMB,B,X,L
*001  SPL, L, M, O
*002        NAME   ST.DU(8) 
        NAM ST.DU,8 
.A.     EQU  0
.B.     EQU  1
        ENT DU..
        ENT ST..
        EXT .ENTR 
        EXT I.BUF 
        EXT O.BUF 
        EXT BUF.
        EXT N.OPL 
        EXT .E.R. 
        EXT CREA. 
        EXT OPEN. 
        EXT LOCF
        EXT EXEC
        EXT READF 
        EXT WRITF 
        EXT MSS.
        EXT IER.
        EXT CK.SM 
        EXT CLOSE 
        EXT D.AD
.1      OCT 177777
LI12    BSS 1 
LIS8    BSS 1 
LIS4    BSS 1 
.2      OCT 000004
LIS21   BSS 1 
LIS17   BSS 1 
LIS13   BSS 1 
LIS9    BSS 1 
LIS5    BSS 1 
LIS1    BSS 1 
OBUF    BSS 1 
SPDCB   BSS 1 
IBUF    BSS 1 
BUFF    BSS 1 
BUFA    BSS 1 
BF      BSS 1 
F1      BSS 1 
SIOI    BSS 1 
EOFF    BSS 1 
CK      BSS 1 
SIO     BSS 1 
FLG     BSS 1 
LDR     BSS 1 
.3      OCT 100000
SUBF    BSS 1 
F2      BSS 1 
TYP     BSS 1 
DUMP    BSS 1 
.4      OCT 000400
.7      OCT 177776
.8      OCT 000067
DT      BSS 1 
.9      OCT 000003
.11     OCT 046523
.12     OCT 020040
.13     OCT 040523
.15     OCT 041122
.16     OCT 000300
.17     OCT 000005
.19     OCT 041116
.21     OCT 041101
.22     OCT 002300
.23     OCT 000007
.24     OCT 046524
.26     OCT 051501
.28     OCT 044510
.29     OCT 000070
.32     OCT 000011
.33     BSS 1 
ID      BSS 1 
ISZ     BSS 1 
ILU     BSS 1 
INTY    BSS 1 
ISZ2    BSS 1 
.39     OCT 023417
.42     OCT 000100
.43     OCT 000010
.44     OCT 177775
.45     OCT 000000
.47     OCT 177677
SZ1     BSS 1 
SZ      BSS 1 
TY      BSS 1 
OPLS    BSS 1 
.48     OCT 000002
.56     OCT 001757
OLU     BSS 1 
OUTY    BSS 1 
.60     OCT 000006
ALN     BSS 1 
.67     OCT 000001
.68     OCT 000200
.70     OCT 177764
.85     OCT 177772
EQT5    BSS 1 
.87     OCT 000015
.89     OCT 037400
T       BSS 1 
*003  !     THIS IS THE RTE FMP FMGR ROUTINE TO STORE 
*004  !     AND DUMP FILES. 
*005  ! 
*006  !     DU,NAME,LU,OP1,OP2,OP3
*007  ! 
*008  !        O R
*009  ! 
*010  !     ST,LU,NAME,OP1,OP2,OP3,OP4
*011  ! 
*012  ! 
*013  !     W H E R E:
*014  ! 
*015  !     ST            IS STORE. 
*016  !     DU            IS DUMP.
*017  ! 
*018  !     NAME
*019  !     NAME          IS THE FILE TO BE STORED OR DUMPED. 
*020  ! 
*021  !     LU            IS EITHER THE SOURCE OR DESTINATION 
*022  !                   DEVICE AND MAY BE A FILE REFERENCE. 
*023  ! 
*024  !     OP1           IS A MEDIUM ASC CODE AS FOLLOWS:
*025  !                     AS   ASCII DATA 
*026  !                     BR   BINARY RELOCATABLE DATA
*027  !                     BA   BINARY ABSOLUTE DATA 
*028  !                     MT   MAG TAPE NORMAL FORMAT 
*029  !                     MS   MAG TAPE SIO FORMAT
*030  ! 
*031  !     OP2           IS AN END OF FILE OPTION
*032  !                   FLAG -- TWO ASC CHARACTERS: 
*033  !                     SA   SAVE END OF FILES IN THE 
*034  !                          NEW FILE.
*035  !                     IN   INHIBIT ALL LEADER, TRAILER, 
*036  !                          END OF FILE TRANSFERS; 
*037  !                          DOES NOT APPLY TO FINAL
*038  !                          EOF ON A DISC FILE.
*039  ! 
*040  !     OP3           IS THE NUMBER OF THE FIRST FILE 
*041  !                   TO BE TRANSFERRED (APPLIES TO 
*042  !                   FILES OF TYPE ZERO) (DEFAULT=1) 
*043  ! 
*044  !     OP4           IS THE NUMBER OF FILES TO BE
*045  !                   TRANSFERRED (APPLIES TO FILES 
*046  !                   OF TYPE ZERO) (DEFAULT= ) 
*047  ! 
*048  !     N O T E:      OP3 AND OP4 ARE RELATIVE TO CURRENT POSITION. 
*049  ! 
*050  !     DEFINE EXTERNALS
*051  ! 
*052        LET I.BUF,O.BUF,BUF. BE INTEGER,EXTERNAL
*053  ! 
*054        LET N.OPL,.E.R.      BE INTEGER,EXTERNAL
*055  ! 
*056        LET CREA.,OPEN.,LOCF,\
*           EXEC,READF,WRITF,\
*           MSS.,\
*           IER.,CK.SM,CLOSE BE SUBROUTINE,EXTERNAL 
*057  ! 
*058        LET D.AD             BE FUNCTION,EXTERNAL 
*059  ! 
*060        LET DU..,ST..        BE SUBROUTINE
*061  ! 
*062        LET SECT2     BE CONSTANT(1757K)
*063        LET AS        BE CONSTANT (40523K)
*064        LET BR        BE CONSTANT (41122K)
*065        LET BN        BE CONSTANT (41116K)
*066        LET BA        BE CONSTANT (41101K)
*067        LET MT        BE CONSTANT (46524K)
*068        LET MS        BE CONSTANT (46523K)
*069        LET IH        BE CONSTANT (44510K)
*070        LET SA        BE CONSTANT (51501K)
*071  ! 
*072  ST..: SUBROUTINE(NPD,LISTO,ERD)  GLOBAL 
NPD     NOP 
LISTO   NOP 
ERD     NOP 
ST..    NOP 
        JSB .ENTR 
        DEF NPD 
*073        ERD_ -1  !SET DUMP FLAG 
        CCA 
        STA ERD,I 
*074        DU..(NPD,LISTO,ERD) 
        JSB DU..
        DEF *+4 
        DEF NPD,I 
        DEF LISTO,I 
        DEF ERD,I 
*075        RETURN
        JMP ST..,I
*076        END 
*077  ! 
*078  DU..: SUBROUTINE(NPS,LISTS,ERS)  GLOBAL 
NPS     NOP 
LISTS   NOP 
ERS     NOP 
DU..    NOP 
        JSB .ENTR 
        DEF NPS 
*079        LI12_[LIS8_[LIS4_@LISTS+4]+4]+4 
        LDA LISTS 
        ADA .2
        STA LIS4
        ADA .2
        STA LIS8
        ADA .2
        STA LI12
*080  ! 
*081        LIS21_[LIS17_[LIS13_[LIS9_[LIS5_[LIS1_\ 
*         @LISTS+1]+4]+4]+4]+4]+4 
        LDA LISTS 
        INA 
        STA LIS1
        ADA .2
        STA LIS5
        ADA .2
        STA LIS9
        ADA .2
        STA LIS13 
        ADA .2
        STA LIS17 
        ADA .2
        STA LIS21 
*082  ! 
*083  !     PRESET DEFAULT OPTIONS
*084  ! 
*085        OBUF,SPDCB_D.AD(O.BUF) !SET DCB ADDRESS FOR SPACING 
        JSB D.AD
        DEF *+2 
        DEF O.BUF 
        STA OBUF
        STA SPDCB 
*086        IBUF_D.AD(I.BUF)  !SET INPUT DCB ADDRESS
        JSB D.AD
        DEF *+2 
        DEF I.BUF 
        STA IBUF
*087        BUFF,BUFA,BF_D.AD(BUF.) 
        JSB D.AD
        DEF *+2 
        DEF BUF.
        STA BUFF
        STA BUFA
        STA BF
*088        DO[F1,SIOI,EOFF,CK,SIO,FLG_0;LDR_100000K] 
        CLA 
        STA F1
        STA SIOI
        STA EOFF
        STA CK
        STA SIO 
        STA FLG 
        LDA .3
        STA LDR 
*089        DO[SUBF_400K;F2,TYP,DUMP_1] 
        LDA .4
        STA SUBF
        CLA,INA 
        STA F2
        STA TYP 
        STA DUMP
*090        IFNOT ERS+1 THEN [ERS,DUMP_0;SPDCB_IBUF] !SET STORE OPTIONS 
        LDA ERS,I 
        INA 
        SZA 
        JMP .5
        CLA 
        STA ERS,I 
        STA DUMP
        LDA IBUF
        STA SPDCB 
*091        IF NPS<2 THEN [ERS_55;RETURN] 
.5      LDB NPS,I 
        ADB .7
        SSB,RSS 
        JMP .6
        LDA .8
        STA ERS,I 
        JMP DU..,I
*092        DT_3   !SET DEFAULT TYPE
.6      LDA .9
        STA DT
*093  ! 
*094  !     ANALYZE OPTIONS 
*095  ! 
*096  !       FIRST THE TYPE FLAG 
*097  ! 
*098        IFNOT $LIS8 THEN GO TO ST3 !OPTION IS NULL GO TO CHECK NEXT 
        LDA LIS8,I
        SZA,RSS 
        JMP ST3 
*099        IF $LIS9 = MS THEN [SIO_1;BUFA_BF+1;\ 
*                              LIS9_LIS9+1] 
        LDB LIS9,I
        CPB .11 
        RSS 
        JMP .10 
        CLA,INA 
        STA SIO 
        LDA BF
        INA 
        STA BUFA
        LDA LIS9
        INA 
        STA LIS9
*100        IF $LIS9="  " THEN GO TO ST3
.10     LDB LIS9,I
        CPB .12 
        JMP ST3 
*101           IF $LIS9 = AS THEN GO TO ST3 
        LDB LIS9,I
        CPB .13 
        JMP ST3 
*102           IF $LIS9 = BR THEN[CK,SUBF_300K;\
*                        DT_5; GO TO ST3] 
        LDB LIS9,I
        CPB .15 
        RSS 
        JMP .14 
        LDA .16 
        STA CK
        STA SUBF
        LDA .17 
        STA DT
        JMP ST3 
*103           IF $LIS9 = BN THEN[SUBF_300K;   \
*                              GO TO ST3] 
.14     LDB LIS9,I
        CPB .19 
        RSS 
        JMP .18 
        LDA .16 
        STA SUBF
        JMP ST3 
*104        IF $LIS9 = BA THEN[CK,SUBF_2300K;TYP_0;\
*                         DT_7;GO TO ST3] 
.18     LDB LIS9,I
        CPB .21 
        RSS 
        JMP .20 
        LDA .22 
        STA CK
        STA SUBF
        CLA 
        STA TYP 
        LDA .23 
        STA DT
        JMP ST3 
*105        IF $LIS9 = MT THEN GO TO ST3
.20     LDB LIS9,I
        CPB .24 
        JMP ST3 
*106        IF $LIS9 = SA THEN[EOFF_1;GO TO ST2]
        LDB LIS9,I
        CPB .26 
        RSS 
        JMP .25 
        CLA,INA 
        STA EOFF
        JMP ST2 
*107        IF $LIS9 = IH THEN[LDR_0;GO TO ST2] 
.25     LDB LIS9,I
        CPB .28 
        RSS 
        JMP STER1 
        CLA 
        STA LDR 
        JMP ST2 
*108  ! 
*109  STER1:DO[ERS_56; RETURN]
STER1   LDA .29 
        STA ERS,I 
        JMP DU..,I
*110  ! 
*111  !     CHECK FOR OP2 
*112  ! 
*113  ST3:  IF $LI12#3 THEN GO TO ST2 
ST3     LDB LI12,I
        CPB .9
        RSS 
        JMP ST2 
*114  ! 
*115        IF $LIS13 = SA THEN[EOFF_1;GO TO ST5] 
        LDB LIS13,I 
        CPB .26 
        RSS 
        JMP .30 
        CLA,INA 
        STA EOFF
        JMP ST5 
*116        IF $LIS13 = IH THEN[LDR_0;GO TO ST5]
.30     LDB LIS13,I 
        CPB .28 
        RSS 
        JMP .31 
        CLA 
        STA LDR 
        JMP ST5 
*117  ! 
*118        GO TO STER1   !ILLEGAL OPTION 
.31     JMP STER1 
*119  !     OPT2          WAS FOUND IN OP1 LOCATION SO
*120  !                   ADJUST ADDRESSES AND SKIP 
*121  !                   OPT2 CHECK. 
*122  ! 
*123  ! 
*124  ST2:  DO[LIS21_[LIS17_LIS13]+4] 
ST2     LDA LIS13 
        STA LIS17 
        ADA .2
        STA LIS21 
*125  ST5:  OPEN.(I.BUF,$LIS1,N.OPL  ,SUBF+11K) 
ST5     LDA SUBF
        ADA .32 
        STA .33 
        JSB OPEN. 
        DEF *+5 
        DEF I.BUF 
        DEF LIS1,I
        DEF N.OPL 
        DEF .33 
*126        LOCF(I.BUF,.E.R.,ID,ID,ID,ISZ,ILU,INTY,ISZ2)
        JSB LOCF
        DEF *+10
        DEF I.BUF 
        DEF .E.R. 
        DEF ID
        DEF ID
        DEF ID
        DEF ISZ 
        DEF ILU 
        DEF INTY
        DEF ISZ2
*127        IER.
        JSB IER.
        DEF *+1 
*128        IF $LIS17>0 THEN F1_$LIS17-1
        LDB LIS17,I 
        CMB,INB 
        SSB,RSS 
        JMP .34 
        CCA 
        ADA LIS17,I 
        STA F1
*129        IF $LIS21>0 THEN F2_$LIS21, ELSE \
*          [IFNOT $LIS21 THEN [IF$LIS17>0 THEN GOTO ST6,ELSE[\
*                              IF    INTY THEN F2_9999]]] 
.34     LDB LIS21,I 
        CMB,INB 
        SSB,RSS 
        JMP .37 
        LDA LIS21,I 
        STA F2
        JMP ST6 
.37     LDA LIS21,I 
        SZA 
        JMP ST6 
        LDB LIS17,I 
        CMB,INB 
        SSB 
        JMP ST6 
        LDA INTY
        SZA,RSS 
        JMP ST6 
        LDA .39 
        STA F2
*130  ! 
*131  ST6:  SUBF_(SUBF AND 100K)+LDR+10K \SET OUTPUT FUNCTION 
*          OR[IF (INTY AND 177775K)=5 THEN 100K,ELSE 0] 
ST6     LDA SUBF
        AND .42 
        ADA LDR 
        ADA .43 
        STA .33 
        LDA INTY
        AND .44 
        CPA .17 
        RSS 
        JMP .40 
        LDA .42 
        JMP .41 
.40     LDA .45 
.41     IOR .33 
        STA SUBF
*132        IF $LIS9=AS THEN SUBF_SUBF AND 177677K
        LDB LIS9,I
        CPB .13 
        RSS 
        JMP .46 
        LDA SUBF
        AND .47 
        STA SUBF
*133  !     IF A STORE OPERATION CREAT THE FILE 
*134  ! 
*135        SZ1_[SZ_[TY_[OPLS_D.AD(N.OPL)+5]+2]+1]+1
.46     JSB D.AD
        DEF *+2 
        DEF N.OPL 
        ADA .17 
        STA OPLS
        ADA .48 
        STA TY
        INA 
        STA SZ
        INA 
        STA SZ1 
*136  ! 
*137        IFNOT ERS+2 THEN[ERS_0;GO TO ST12] !COPY CALL THE FILE IS OP
        LDA ERS,I 
        ADA .48 
        SZA 
        JMP .49 
        CLA 
        STA ERS,I 
        JMP ST12
*138        IF DUMP THEN GO TO ST10 
.49     LDA DUMP
        SZA 
        JMP ST10
*139  ! 
*140  !     SET DEFAULTS
*141  ! 
*142        IFNOT $TY THEN $TY_[IF INTY THEN INTY,\ 
*          ELSE DT] 
        LDA TY,I
        SZA 
        JMP .52 
        LDA INTY
        SZA,RSS 
        JMP .50 
        LDA INTY
        JMP .51 
.50     LDA DT
.51     STA TY,I
*143        IFNOT $SZ THEN $SZ_[IF INTY THEN ISZ->1,\ 
*                            ELSE $SECT2->2]
.52     LDA SZ,I
        SZA 
        JMP .55 
        LDA INTY
        SZA,RSS 
        JMP .53 
        LDA ISZ 
        RAR 
        JMP .54 
.53     LDA .56,I 
        RAR,RAR 
.54     STA SZ,I
*144        IFNOT $SZ1 THEN[IF INTY THEN $SZ1_ISZ2] 
.55     LDA SZ1,I 
        SZA 
        JMP .58 
        LDA INTY
        SZA,RSS 
        JMP .58 
        LDA ISZ2
        STA SZ1,I 
*145  ! 
*146  !     CREAT THE FILE
*147  ! 
*148        CREA.(O.BUF,$LIS5,$OPLS)?[GO TO ST10] 
.58     JSB CREA. 
        DEF *+4 
        DEF O.BUF 
        DEF LIS5,I
        DEF OPLS,I
        SEZ 
        JMP ST10
*149        GO TO ST12
        JMP ST12
*150  ST10:      OPEN.(O.BUF,$LIS5,$OPLS,SUBF)
ST10    JSB OPEN. 
        DEF *+5 
        DEF O.BUF 
        DEF LIS5,I
        DEF OPLS,I
        DEF SUBF
*151  ST12: LOCF(O.BUF,.E.R.,ID,ID,ID,ISZ,OLU,OUTY) 
ST12    JSB LOCF
        DEF *+9 
        DEF O.BUF 
        DEF .E.R. 
        DEF ID
        DEF ID
        DEF ID
        DEF ISZ 
        DEF OLU 
        DEF OUTY
*152        IER.
        JSB IER.
        DEF *+1 
*153        IF INTY=6 THEN $(IBUF+2),INTY_1 
        LDB INTY
        CPB .60 
        RSS 
        JMP .59 
        LDA IBUF
        ADA .48 
        CLB,INB 
        STB .A.,I 
        STB INTY
*154        IF OUTY=6 THEN $(OBUF+2),OUTY_1 
.59     LDB OUTY
        CPB .60 
        RSS 
        JMP .61 
        LDA OBUF
        ADA .48 
        CLB,INB 
        STB .A.,I 
        STB OUTY
*155  ! 
*156  !     BOTH IN AND OUT ARE OPEN -- 
*157  !     LEADER HAS BEEN PUNCHED IF NOT SUPPRESSED.
*158  ! 
*159  !     IF SIO STORE THEN SET IT UP 
*160  ! 
*161        IF SIO THEN [IFNOT DUMP THEN[\
*          SIO_0; SIOI_1;BUFF_[BUFA_BF]+1]] 
.61     LDA SIO 
        SZA,RSS 
        JMP .64 
        LDA DUMP
        SZA 
        JMP .64 
        CLA 
        STA SIO 
        CLA,INA 
        STA SIOI
        LDA BF
        STA BUFA
        INA 
        STA BUFF
*162  ! 
*163        UNTIL F1=0 DO[READF($SPDCB,.E.R.,$BUFA,1,ALN);IER.;\
*          IF ALN<1 THEN F1_F1- 1]
.64     LDB F1
        SZB,RSS 
        JMP ST15
        JSB READF 
        DEF *+6 
        DEF SPDCB,I 
        DEF .E.R. 
        DEF BUFA,I
        DEF .67 
        DEF ALN 
        JSB IER.
        DEF *+1 
        LDB ALN 
        ADB .1
        SSB,RSS 
        JMP .66 
        CCA 
        ADA F1
        STA F1
.66     JMP .64 
*164  ST15: READF(I.BUF,.E.R.,$BUFA,128,ALN)
ST15    JSB READF 
        DEF *+6 
        DEF I.BUF 
        DEF .E.R. 
        DEF BUFA,I
        DEF .68 
        DEF ALN 
*165        IF .E.R.= -12 THEN [ALN_ -1;GO TO ST16] 
        LDB .E.R. 
        CPB .70 
        RSS 
        JMP .69 
        CCA 
        STA ALN 
        JMP ST16
*166        IER.
.69     JSB IER.
        DEF *+1 
*167        IF ALN>0 THEN GO TO ST20 ! DATA?
        LDB ALN 
        CMB,INB 
        SSB 
        JMP ST20
*168  ! 
*169  !     NO DATA -- EITHER EOF OR ZERO REG 
*170  ! 
*171  ! 
*172  !     END OF XFER?
*173  ! 
*174  ST16: IFNOT ALN+1 THEN[IF INTY THEN[F2_0;\
*                 GO TO ST18]]!TRUE EOF-QUIT
ST16    LDA ALN 
        INA 
        SZA 
        JMP .72 
        LDA INTY
        SZA,RSS 
        JMP .72 
        CLA 
        STA F2
        JMP ST18
*175  ! 
*176        IF [F2_F2-1] THEN [IF EOFF THEN[ALN_-1;\
*                 GO TO ST22],ELSE GO TO ST25]
.72     CCA 
        ADA F2
        STA F2
        SZA,RSS 
        JMP ST18
        LDA EOFF
        SZA,RSS 
        JMP ST25
        CCA 
        STA ALN 
        JMP ST22
*177  ST18: ALN_-1
ST18    CCA 
        STA ALN 
*178        IF LDR  THEN GO TO ST22 
        LDA LDR 
        SZA 
        JMP ST22
*179  ! 
*180        GO TO EXIT   !DONE - NO EOF REQUIRED
        JMP EXIT
*181  ! 
*182  ST20: DO            [IF SIOI THEN [ALN_[\ 
*           IF $BUFA<0 THEN-$BUFA,ELSE\ 
*            ($BUFA+1)>-1];ID_BUFA+1],ELSE\ 
*              ID_BUFA ;IF CK THEN\ 
*                 CK.SM($ID,TYP)?[GO TO ABO]] 
ST20    LDA SIOI
        SZA,RSS 
        JMP .76 
        LDB BUFA,I
        SSB,RSS 
        JMP .74 
        LDB BUFA,I
        CMB,INB 
        LDA .B. 
        JMP .75 
.74     LDA BUFA,I
        INA 
        ARS 
.75     STA ALN 
        LDA BUFA
        INA 
        STA ID
        JMP .77 
.76     LDA BUFA
        STA ID
.77     LDA CK
        SZA,RSS 
        JMP .78 
        JSB CK.SM 
        DEF *+3 
        DEF ID,I
        DEF TYP 
        SEZ 
        JMP ABO 
*183        FLG_1  !SET FLAG TO SAY WE WROTE A RECORD 
.78     CLA,INA 
        STA FLG 
*184  ST22: IF ALN>0 THEN[IF SIO THEN[$BUFF_-ALN;ALN_ALN+1]],\
*         ELSE[IF F2 THEN[IF OUTY THEN ALN_0]]
ST22    LDB ALN 
        CMB,INB 
        SSB,RSS 
        JMP .82 
        LDA SIO 
        SZA,RSS 
        JMP .79 
        LDB ALN 
        CMB,INB 
        STB BUFF,I
        LDA ALN 
        INA 
        STA ALN 
.79     JMP .83 
.82     LDA F2
        SZA,RSS 
        JMP .83 
        LDA OUTY
        SZA,RSS 
        JMP .83 
        CLA 
        STA ALN 
*185        WRITF(O.BUF,.E.R.,$BUFF,ALN)
.83     JSB WRITF 
        DEF *+5 
        DEF O.BUF 
        DEF .E.R. 
        DEF BUFF,I
        DEF ALN 
*186        IF .E.R. = -6 THEN[MSS.(.E.R.);ID_-1;GO TO\ 
*                      ENDIT] 
        LDB .E.R. 
        CPB .85 
        RSS 
        JMP .84 
        JSB MSS.
        DEF *+2 
        DEF .E.R. 
        CCA 
        STA ID
        JMP ENDIT 
*187        IER.
.84     JSB IER.
        DEF *+1 
*188        IF ALN= -1 THEN[IFNOT F2 THEN GOTO EXIT,\ 
*                 ELSE GO TO ST25  ]
        LDB ALN 
        CPB .1
        RSS 
        JMP .86 
        LDA F2
        SZA 
        JMP ST25
        JMP EXIT
*189        IF ALN THEN GO TO ST15
.86     LDA ALN 
        SZA 
        JMP ST15
*190  ST25: EXEC (13, ILU,EQT5) 
ST25    JSB EXEC
        DEF *+4 
        DEF .87 
        DEF ILU 
        DEF EQT5
*191        IF(EQT5 AND 37400K)=400K THEN [MSS.(6);\
*            EXEC(7)] 
        LDA EQT5
        AND .89 
        CPA .4
        RSS 
        JMP .88 
        JSB MSS.
        DEF *+2 
        DEF .60 
        JSB EXEC
        DEF *+2 
        DEF .23 
*192        GO TO ST15
.88     JMP ST15
*193  ABO: DO[MSS.(7);ID_-1]
ABO     JSB MSS.
        DEF *+2 
        DEF .23 
        CCA 
        STA ID
*194  ENDIT:IF DUMP THEN RETURN 
ENDIT   LDA DUMP
        SZA 
        JMP DU..,I
*195        IFNOT OUTY THEN RETURN
        LDA OUTY
        SZA,RSS 
        JMP DU..,I
*196        CLOSE(O.BUF,.E.R.,$SZ-ID-1)  !CLOSE AND 
        LDA ID
        CMA,INA 
        ADA SZ,I
        CCB 
        ADB .A. 
        STB .33 
        JSB CLOSE 
        DEF *+4 
        DEF O.BUF 
        DEF .E.R. 
        DEF .33 
*197        IER.
        JSB IER.
        DEF *+1 
*198        RETURN
        JMP DU..,I
*199  ! 
*200  EXIT: LOCF(O.BUF,.E.R.,T,ID)
EXIT    JSB LOCF
        DEF *+5 
        DEF O.BUF 
        DEF .E.R. 
        DEF T 
        DEF ID
*201        IER.
        JSB IER.
        DEF *+1 
*202        IFNOT FLG THEN ID_-1
        LDA FLG 
        SZA 
        JMP .90 
        CCA 
        STA ID
*203        GO TO ENDIT 
.90     JMP ENDIT 
*204        END 
*205  ! 
*206  ! 
*207        END 
        END 
*208        END$
