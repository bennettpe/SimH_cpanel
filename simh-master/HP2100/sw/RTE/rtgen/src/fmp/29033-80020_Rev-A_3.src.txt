ASMB,B,X,L
*001  SPL, L, M, O
*002        NAME LOCK.(8) 
        NAM LOCK.,8 
.A.     EQU  0
.B.     EQU  1
        ENT LOCK. 
        EXT .ENTR 
        EXT MSS.
        EXT EXEC
        EXT DS.DF 
        EXT D.
A       OCT 000000
B       OCT 000001
XEQT    OCT 001717
.1      OCT 000011
.2      OCT 000000
AREG    BSS 1 
BREG    BSS 1 
*003  ! 
*004  !     THIS ROUTINE OBTAINS A LOCK AND RELEASES IT ON THE
*005  !     GIVEN DISC
*006        LET MSS.,EXEC BE SUBROUTINE ,EXTERNAL 
*007        LET DS.DF,D.   BE INTEGER,EXTERNAL
*008        INITIALIZE A,B,XEQT  TO 0,1,1717K 
*009  ! 
*010  ! 
*011  LOCK.:SUBROUTINE(DSID,RQ)GLOBAL,FEXIT  !ROUTINE TO REQUEST AND
DSID    NOP 
RQ      NOP 
LOCK.   NOP 
        JSB .ENTR 
        DEF DSID
*012  !                                      RELEASE DISC LOCKS 
*013  LOCK: EXEC(9,D.,$XEQT,0,DSID,0,RQ)  !CALL D.RTR TO GET THE LOCK 
LOCK    JSB EXEC
        DEF *+8 
        DEF .1
        DEF D.
        DEF XEQT,I
        DEF .2
        DEF DSID,I
        DEF .2
        DEF RQ,I
*014        DO[AREG_$A;BREG_$B;IF AREG THEN GOTO LOCK]!IF SCHEDULE PROBL
        LDA A,I 
        STA AREG
        LDA B,I 
        STA BREG
        LDA AREG
        SZA 
        JMP LOCK
*015        IF $BREG THEN[MSS.($BREG);FRETURN]! IF ERROR THEN ERROR RETU
        LDA BREG,I
        SZA,RSS 
        JMP .3
        JSB MSS.
        DEF *+2 
        DEF BREG,I
        CCE 
        JMP LOCK.,I 
*016        DS.DF_0       ! CORE COPY IF ANY IS WRONG NOW 
.3      CLA 
        STA DS.DF 
*017        RETURN!   ELSE GO  NORMAL RETURN
        CLE 
        JMP LOCK.,I 
*018        END 
*019        END 
        END 
*020        END$
