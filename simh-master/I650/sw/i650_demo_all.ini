
; demo all .ini scripts 

set console -n log=console.txt
; set debug -q stdout
set debug -q -n debug.txt
set cpu debug=cmd;data;detail
set mt debug=cmd;data;detail;exp
set dsk debug=cmd;data;detail;exp
; set cpanel debug=df;sdl;cmds;refresh

; cd \Tmp\SimH\Ok\IBM 650\sw
; do run_fortransit_cpanel.ini
; do run_sort_1_cpanel.ini 
; do i650_demo_all_cpanel.ini
; goto end


; uncomment any of them to simulate ibm 650 real speed
; set throttle 11k
; set throttle 55/5
; set fast 


at cpanel ../cpanel/ibm650_photo.ini

; setting the reel color on tapes. w=whit, g=grey, d=dark
; First letter is left reel, second one right reel. Default is /ww
set cpanel option=mt0/ww
set cpanel option=mt1/dw
set cpanel option=mt2/dd
set cpanel option=mt3/gw
set cpanel option=mt4/gg
set cpanel option=mt5/dg

; set cpanel option=cpu1954
; set cpanel option=cpupanels
; set cpanel option=CardReadPunch
set cpanel option=ramac
; set cpanel option=tape
; set cpanel option=ias

SET CPANEL OPTION=ShowInfo

; SET CPANEL SCALE=60
SET CPANEL SCALE=100
set cpanel on
set cpanel pos=170/70

; SET CPANEL SHOWFPS=1
; set cpanel debug=detail

; set cpu speed=max
set cpu speed=1.0
; set cpu speed=0.01

; goto testcount
; goto testtape
goto testsort
; goto testramac
; goto testall
; goto testfort
; goto testtap
; goto testrealspeed
; goto testbuild
; goto testssoap
goto end

:testcount

dep 0001  00 0000 0001
dep 1000  65 1001 1002
;        ral 1001
dep 1001  10 8001 8002
;        aup 8001 8002      
dep 1002  69 0001 8002 
;        ldd 0001 8002

dep ar 1000
go

:testtape
set cpu 2k
set cpu soapmne
set cpu CntrlUnit
set cpu StorageUnit
set cpanel option=mt1/wd
set cpanel option=mt2/gw*R
set cpanel option=mt3/gw
set cpanel option=mt4/gw*F
set cpanel option=mt5/gd*B
; read forwards
att mt1 -q -n sort/mt1.tap
; rewind
att mt2 -q -n sort/mt2.tap
; normal load
att mt3 -q -n sort/mt3.tap
; go fwd
att mt4 -q -n sort/mt4.tap
; go backwards
att mt5 -q sort/mt5.tap

dep 1000  06 8012 1001
;        wtn 8012 
dep 1001  55 8012 1100
;        rew 8012
dep 1100  27 9000 1106
;   loop set 9000
dep 1106  06 8011 1100
;        wtn 8011 

dep ar 1100
go
goto end


:testsort

; do run_sort_1.ini sort/data_deck_to_sort1.txt 
do run_sort_2.ini 

goto end
  

:testramac

set cpu CntrlUnit
set cpu StorageUnit
at dsk0 ramac0.dsk

; start rau disk1
dep 1000 60 1100 1001
; loop  ld  8003
dep 1001 69 8003 1002
;       rds 9000
dep 1002 86 9000 1003
;       ld  disk1
dep 1003 69 1100 1004
;       rds 9000
dep 1004 86 9000 1005
;       sup dsk+1
dep 1005 11 1101 1006
;       bmi start loop 
dep 1006 46 1000 1001
; disk1 0000 0 99 99 0
dep 1100 00 0009 9990
; dsk+1 0000 0 01 00 0
dep 1101 00 0000 1000
dep ar 1000
go
goto end


:testssoap
set cpu 1dskarm
do run_supersoap_ramac.ini supersoap/ssoap_main_core_src.txt
show cpu speed
goto end

:testbuild
do ../tests/i650_test.ini
goto end

:testrealspeed
set cpu 2k
set cdr1 wiring=8word
att cdr1 -q -l soap/soapII.dck
set cpu speed=1.0
; 1400 cards
d csw 70 1951 9999
d ar 8000
echo Start loading 1400 card deck 
!time /t
go
echo Read 1400 cards (real speed = 7min)
!time /t
show cpu speed
goto end

:testtap
do run_soap4.ini  soap/soap4_lib.txt   
at mt2 -q -n soaplib.tap
set cdr1 wiring=8WORD
att cdr1 -q -l deck_out.dck
att cdp1 -n -q deck_out_run.dck
set cdp1 echo, print, wiring=8WORD
d csw 7019519999
d ar 8000
go
set throttle 15/5
set cdr1 wiring=SOAPA
set cdp1 wiring=SOAPA
att cdr1 -q soap/soap4_example_lib_routines.txt
d ar 1000
go

goto end

:testfort
do run_fortransit.ini  fortransit/fortransit_example_2_src.txt  fortransit/fortransit_example_2_data.txt  
show cpu speed
goto end


:testall

echo
echo ===========================================================
echo test build_soap_from_source.ini
echo ===========================================================
echo generates soap assembly listing 
echo ===========================================================
echo 

do build_soap_from_source.ini
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test run_soap.ini
echo ===========================================================
echo example from manual
echo should print 0100 lines
echo ===========================================================
echo 

do run_soap.ini                 soap/soap_example_1_src.txt  1000
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test build_soap4_tap_lib.ini
echo ===========================================================
echo generate a library tape, assemble and run a prog that calls it
echo should display 38 0100 up to 38 6600
echo then assemble example
echo ===========================================================
echo

; build_soap4_tap_lib.ini calls run_soap4.ini, so no need to test it again
do build_soap4_tap_lib.ini
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test build_ssoap_ramac_from_decks.ini
echo ===========================================================
echo builds supersoap on ramac disk, then assemble example prog
echo ===========================================================
echo

do build_ssoap_ramac_from_decks.ini
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test assemble ssoap from source
echo ===========================================================
echo assemble original supersoap source 
echo ===========================================================
echo

do run_supersoap_ramac.ini supersoap/ssoap_main_core_src.txt
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test run_fds.ini
echo ===========================================================
echo generates 9 lines (numberes 1-9) with 3 colums of numbers
echo integer (1..9), float (1..9), sqrt (1..9)
echo last line is: 00 0000 0009  50 9000 0000  50 3000 0000 
echo ===========================================================
echo 

do run_fds.ini                  fds/example.txt
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo test run_ra.ini
echo ===========================================================
echo regional assembler assembles and run aprog to list on one column 5-word cards
echo listing is one column, words from 0900-0925, some 1960, 0990, 
echo more 1960s, 0401-0411. echo last line is: 0411  00 0000 0900
echo ===========================================================
echo 

do run_ra.ini                   regional/print_five_field_ctrl_cards.txt    regional/print_five_field_src.txt    0900    deck_in.dck
set env -P "Press Enter to continue . . . " dummy=cont

echo
echo ===========================================================
echo build_is_from_decks.ini
echo ===========================================================
echo build is from source deck
echo ===========================================================
echo 

do build_is_from_decks.ini      ntr    lbox
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_is.ini
echo ===========================================================
echo sieve of eratosthenes - print prime numbers < 50 (last one is 47)
echo ===========================================================
echo 

do run_is.ini                   bell/is_example_1_src.txt      
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_it.ini
echo ===========================================================
echo example from manual
echo should print one line: 200020005  6400000051   100050005          11  
echo ===========================================================
echo 

do run_it.ini                   it/it_example_1_src.txt    it/it_example_1_data.txt    
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_it.ini
echo ===========================================================
echo sieve of eratosthenes - print prime numbers < 50 (last one is 47)
echo ===========================================================
echo 


do run_it.ini                   it/it_example_2_src.txt    nul        
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test build_fortransit_pack.ini
echo ===========================================================
echo build fortransit funcion packs
echo ===========================================================
echo 

do build_fortransit_pack.ini
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_fortransit.ini
echo ===========================================================
echo example from manual - matrix multiplication
echo ===========================================================
echo 

do run_fortransit.ini           fortransit/fortransit_example_2_src.txt  fortransit/fortransit_example_2_data.txt  
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_fortransit.ini
echo ===========================================================
echo sieve of eratosthenes - print prime numbers < 50 (last one is 47)
echo ===========================================================
echo 

do run_fortransit.ini           fortransit/fortransit_example_1_src.txt  nul  
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_fortransit.ini
echo ===========================================================
echo test fortran functions (each one identified by a 1111 to 9999)
echo ===========================================================
echo 

do run_fortransit.ini           fortransit/fortransit_example_4_src.txt  
set env -P "Press Enter to continue . . . "  dummy=cont

echo
echo ===========================================================
echo test run_fortransit.ini
echo ===========================================================
echo list a fortran graphic!
echo ===========================================================
echo 

do run_fortransit.ini           fortransit/fortransit_example_5_src.txt  
set env -P "Press Enter to continue . . . "   dummy=cont

quit

goto end

:end
