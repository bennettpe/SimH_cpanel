
; set console -n -q log=log.txt 
; set debug -n -q debug.txt
; set debug stdout
; set cpu debug=cmd;data;detail
; set mt debug=cmd;data;detail;exp
; set dsk debug=cmd;data;detail;exp

; What this script does:
; - Load runnable sort program from tape mt5 
; - sort tape mt0 to mt1 using tapes and ramac
; - dump 10 prost records sorted from tape to cards

; mt5 and mt0 are generated with script run_sort_1.ini


set cpu 2k
set cpu soapmne

set cpu CntrlUnit
set cpu StorageUnit

if "%CPANEL%"=="1" goto chk_cp_ok1

echo
echo ERROR!
echo i650 compiled without control panel support. Build again 
echo with CPANEL, USE_SIM_VIDEO and HAVE_LIBSDL symbols defined 
echo
goto end

:chk_cp_ok1

if exist ../cpanel/ibm650_photo.ini goto chk_cp_ok2

echo
echo ERROR!
echo cannot find the control panel definition file
echo "../cpanel/ibm650_photo.ini" 
echo
goto end

:chk_cp_ok2

; start control panel

echo *** 
echo *** Start Control Panel GUI
echo *** 
echo *** HotKeys on GUI: +/-  Zoom In/Zoom Out (also ^+ and ^-)
echo ***                 ^Y   Toggle zoom 100%% <-> 50%%
echo ***                 ^T   Toggle flash on clickable controls
echo ***                 ^I   Toggle info panel (readable at 100%% and 50%% zoom)      
echo ***                 ^F   Fast mode: while pressed, accelerates cpu to max speed
echo *** 
echo ***           Click on control panel image and drag mouse to move the window
echo ***           Right click mouse to show a tooltip with image at 100% scale
echo *** 

att cpanel ../cpanel/ibm650_photo.ini
set cpanel option=ramac
set cpanel scale=25
set cpanel on
set cpanel pos=10/450

set cpanel option=mt0/dg
set cpanel option=mt1/wg
set cpanel option=mt2/gg
set cpanel option=mt3/gg
set cpanel option=mt4/dd
set cpanel option=mt5/dg

set cpu speed=1.0
set realtime

att mt0 -q -r sort/mt0.tap
att mt1 -q -n sort/mt1.tap
att mt2 -q -n sort/mt2.tap
att mt3 -q -n sort/mt3.tap
att mt4 -q -n sort/mt4.tap
att mt5 -q -r sort/mt5.tap

att dsk0 -n -q sort/ramac0.dsk

echo *** 
echo *** Mount MT5 and load sort prog from it
echo *** 

att cdr1 -q sort/load_mt5_card.dck
d csw 7019519999
d ar 8000
go

echo *** 
echo *** Run sort mt0 to mt1
echo *** 

set cdr1 wiring=8WORD
att cdr1 -q sort/cntr_cards_sort.dck

; set smode to 0 to use only tapes, set to 1 to sort using tapes and ramac
d 1010 1

d ar 1000
go
if ((prop!=01) || (ar!=0000)) goto sort_err

echo
echo DIST contents is rr000nnnnn, 
echo .    where rr=number of runs, nnnnn=number of records sorted
ex dist
echo

sh cpu speed

; now resume cpu execution to process next control card on sort_cntr_card.dck deck
; this card will transcribe (copy) 10 records from mt1 to mt2

echo *** 
echo *** Run transcribe mt1 to mt2 (only 10 records)
echo *** 

go
if ((prop!=01) || (ar!=0000)) goto sort_err

echo
echo DIST holds the ammount of tape records copied 
ex dist
echo

; resume cpu execution to process next control card on sort_cntr_card.dck deck
; this card will punch the sorted records

echo *** 
echo *** Run mt2 tape to card
echo *** 

set cdp1 wiring=8WORD
att cdp1 -q deck_out.dck
set cdp1 echo, print

go
if ((prop!=01) || (ar!=0000)) goto sort_err

echo
echo DIST holds the ammount of tape records dumped to cards
ex dist
echo

; Now execute any pending control cards pending on read hopper
if (CDR1RDHOPPER==0) goto sort_ok

echo *** 
echo *** Now execute any pending control cards in CDR1 input hopper
echo *** 
ex CDR1RDHOPPER

:sort1
if (CDR1RDHOPPER==0) goto sort_ok

go
if ((prop!=01) || (ar!=0000)) goto sort_err

echo
ex dist
echo

; control card executed ok because stops on HLT 0000
goto sort1

:sort_err
echo
echo WARNING!
echo End script because cpu not stop on HLT 0000, so there is an error
echo
goto end

:sort_ok

det all
del -q sort/ramac0.dsk

:end
