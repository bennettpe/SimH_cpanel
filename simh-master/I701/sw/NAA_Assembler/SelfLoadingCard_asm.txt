                                  Self Loading Binary Card Reading Program
  
                                  (c) April 2021 by Roberto Sancho

                                  Written to allow loading binary cards generated 
                                  by NAA SpeedEx assembler and Punch Binary Data 
                                  cards Program
                                   
                                  To be assembled with Ibm701Assembler.exe cross-assembler

LABEL--- S OPCODE--- OPADDR---    COMMENT   *NNNN -> octal number, else decimal number

           HEAD      NAA          Generate NAA Assembler source  
           HEAD      00000

0000     - COPY      0002         LOAD SELF LOADING CARD
         + R ADD     0003         BASED ON IBM BINARY IO SL05
         + ADD       0000         X
         - COPY      0004         X
         + STORE A   0003         X
         + TR        0001         LOOP UNTIL SELF LOAD CARD READ 
   
TTTT       EQU       0001         STORE TRANSFER LOC AT LOC 0001
LCPEND     EQU       0002         STORE END OF LOOP AT LOC 0002
RCKSUM     EQU       0002         STORE CHECKSUM READ FROM CARD AT LOC 0002
CKSUM      EQU       0004         STORE COMPUTED CHECKSUM AT LOC 0004
    
0006     + READ      2048         START READING BINARY CARD THAT FOLLOWS SELF LOADING ONE

           HEAD      01000

         - COPY      0000         STORE AT LOC 000 CONTROL WORD NNAAAA00TTTT WHERE 
         + TR        L10           NN=NUMBER OF FULLWORDS TO LOAD, AAAA=ADDR TO LOAD, TTTT=LOCATION TO TRANSFER TO
         + STOP      0006         END OF FILE STOP
L10      - R ADD     0000         GET CONTROL WORD
         - STORE     CKSUM        INIT CKSUM
         + STORE A   LCOPY        SET LOADING ADDRESS
         + A RIGHT   0030         GET NUMBER OF WORDS TO LOAD
         + A LEFT    0019
         + SUB       LCOPY
         + STORE     LCPEND     


LCOPY    - COPY      /   /        READ DATA WORD FROM CARD
         - L LEFT    0035
         - ADD       CKSUM        UPDATE CHECKSUM
         - STORE     CKSUM        X
         + R ADD     LCOPY        INCR DESTINATION ADDR
         + SUB       TWO          X
         + STORE     LCOPY        X
         + ADD       LCPEND       X
         + TR +      LCOPY        ELSE READ NEXT WORD FROM CARD

           HEAD      02000

LCKSUM   - COPY      RCKSUM       READ CHKSUM WORD FROM CARD (IS LAST WORD)
         - R ADD     RCKSUM       GET THE CHECKSUM IN CARD
         - SUB       CKSUM        IS THE SAME AS CALCULATED?
         + TR 0      LOK          YES, GO TO CARD LOADED OK
TWO      + STOP      0002         NO, CHECKSUM ERROR STOP
LOK      + R ADD     TTTT         GET TRANSFER LOC 
         + TR 0      0006         IF ZERO, GO TO READ NEXT CARD
         + STORE A   LTRA         ELSE TRANSFER TO THIS 
LTRA     + TR        /   /        LOCATION   
ONE      + STOP      0001         CONSTANT

                                  Usage:

                                  Used to load binary cards generated by NAA SpeedEx Assembler
                                  Execution continues on transfer address of loaded card, if any

                                  Program uses memory locations 0000 -> 00043 (octal), 0036 (decimal)

                                  Input Card Deck:
                                     a) Self Loading Card
                                     b) Binary Cards
                                     c) ...

                                  Operation: is a self-loading program:
                                     - Select load from card 
                                     - set address to 0000
                                     - press load button

   
                                  Normal Stops:
                                  - STOP 0006 AT IC 0011 on deck end of file (no more cards) if none of loaded cards
                                                         had a transfer address set

                                  Error stops:
                                  - STOP 0002 AT IC 0036 if checksum error

                                  Input card: Binary program card

                                      ------------------------------------------------------+ 
                                    /                                                       |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   +---------------+-------------+--------------+-----------+
                                   |          check sum          |              |           |
                                   +---------------+-------------+--------------+-----------+
                                   | instr 3       |   instr 4   |   ...        |  instr N  |
                                   +---------------+-------------+--------------+-----------+
                                   | NNaaaa        |   00tttt    |   instr 1    |  instr 2  |
                                   +---------------+-------------+--------------+-----------+
                                              control word

                                  where: NN   = number of full words of data
                                         aaaa = addr to store first fullword
                                         tttt = if not zero, this is last card, transfer to this location

                                  can hold up to 22 full words
                                  checksum is just the sum of control word + instr 1 + .. + instr N
                                  
                                   
