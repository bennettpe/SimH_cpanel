                                                             Self Loading Binary Card Reading Program
                             
                                                             (c) April 2021 by Roberto Sancho
                           
                                                             Written to allow loading binary cards generated 
                                                             by NAA SpeedEx assembler and Punch Binary Data 
                                                             cards Program
                                                              
                                                             To be assembled with Ibm701Assembler.exe cross-assembler
                           
                           
                                      HEAD      NAA          Generate NAA Assembler source  
                                      HEAD      00000
                           
OCT
0000 -37 0002              0000     - COPY      0002         LOAD SELF LOADING CARD
0001 +12 0003                       + R ADD     0003         BASED ON IBM BINARY IO SL05
0002 +11 0000                       + ADD       0000         X
0003 -37 0004                       - COPY      0004         X
0004 +15 0003                       + STORE A   0003         X
0005 +01 0001                       + TR        0001         LOOP UNTIL SELF LOAD CARD READ 
                              
                           TTTT       EQU       0001         STORE TRANSFER LOC AT LOC 0001
                           LCPEND     EQU       0002         STORE END OF LOOP AT LOC 0002
                           RCKSUM     EQU       0002         STORE CHECKSUM READ FROM CARD AT LOC 0002
                           CKSUM      EQU       0004         STORE COMPUTED CHECKSUM AT LOC 0004
                               
0006 +30 4000              0006     + READ      2048         START READING BINARY CARD THAT FOLLOWS SELF LOADING ONE
                           
                                      HEAD      01000
                           
0007 -37 0000                       - COPY      0000         STORE AT LOC 000 CONTROL WORD NNAAAA00TTTT WHERE 
0010 +01 0012                       + TR        L10           NN=NUMBER OF FULLWORDS TO LOAD, AAAA=ADDR TO LOAD, TTTT=LOCATION TO TRANSFER TO
0011 +00 0006                       + STOP      0006         END OF FILE STOP
0012 -12 0000              L10      - R ADD     0000         GET CONTROL WORD
0013 -14 0004                       - STORE     CKSUM        INIT CKSUM
0014 +15 0021                       + STORE A   LCOPY        SET LOADING ADDRESS
0015 +27 0036                       + A RIGHT   0030         GET NUMBER OF WORDS TO LOAD
0016 +26 0023                       + A LEFT    0019
0017 +05 0021                       + SUB       LCOPY
0020 +14 0002                       + STORE     LCPEND     
                           
                           
0021 -37 0000              LCOPY    - COPY      /   /        READ DATA WORD FROM CARD
0022 -24 0043                       - L LEFT    0035
0023 -11 0004                       - ADD       CKSUM        UPDATE CHECKSUM
0024 -14 0004                       - STORE     CKSUM        X
0025 +12 0021                       + R ADD     LCOPY        INCR DESTINATION ADDR
0026 +05 0036                       + SUB       TWO          X
0027 +14 0021                       + STORE     LCOPY        X
0030 +11 0002                       + ADD       LCPEND       X
0031 +03 0021                       + TR +      LCOPY        ELSE READ NEXT WORD FROM CARD
                           
                                      HEAD      02000
                           
0032 -37 0002              LCKSUM   - COPY      RCKSUM       READ CHKSUM WORD FROM CARD (IS LAST WORD)
0033 -12 0002                       - R ADD     RCKSUM       GET THE CHECKSUM IN CARD
0034 -05 0004                       - SUB       CKSUM        IS THE SAME AS CALCULATED?
0035 +04 0037                       + TR 0      LOK          YES, GO TO CARD LOADED OK
0036 +00 0002              TWO      + STOP      0002         NO, CHECKSUM ERROR STOP
0037 +12 0001              LOK      + R ADD     TTTT         GET TRANSFER LOC 
0040 +04 0006                       + TR 0      0006         IF ZERO, GO TO READ NEXT CARD
0041 +15 0042                       + STORE A   LTRA         ELSE TRANSFER TO THIS 
0042 +01 0000              LTRA     + TR        /   /        LOCATION   
0043 +00 0001              ONE      + STOP      0001         CONSTANT
                           
                                                             Usage:
                           
                                                             Used to load binary cards generated by NAA SpeedEx Assembler
                                                             Execution continues on transfer address of loaded card, if any
                           
                                                             Program uses memory locations 0000 -> 00043 (octal), 0036 (decimal)
                           
                                                             Input Card Deck:
                                                                a) Self Loading Card
                                                                b) Binary Cards
                                                                c) ...
                           
                                                             Operation: is a self-loading program:
                                                                - Select load from card 
                                                                - set address to 0000
                                                                - press load button
                           
                              
                                                             Normal Stops:
                                                             - STOP 0006 AT IC 0011 on deck end of file (no more cards) if none of loaded cards
                                                                                    had a transfer address set
                           
                                                             Error stops:
                                                             - STOP 0002 AT IC 0036 if checksum error
                           
                                                             Input card: Binary program card
                           
                                                                 ------------------------------------------------------+ 
                                                               /                                                       |
                                                              |                                                        |
                                                              |                                                        |
                                                              |                                                        |
                                                              |                                                        |
                                                              +---------------+-------------+--------------+-----------+
                                                              |          check sum          |              |           |
                                                              +---------------+-------------+--------------+-----------+
                                                              | instr 3       |   instr 4   |   ...        |  instr N  |
                                                              +---------------+-------------+--------------+-----------+
                                                              | NNaaaa        |   00tttt    |   instr 1    |  instr 2  |
                                                              +---------------+-------------+--------------+-----------+
                                                                         control word
                           
                                                             where: NN   = number of full words of data
                                                                    aaaa = addr to store first fullword
                                                                    tttt = if not zero, this is last card, transfer to this location
                           
                                                             can hold up to 22 full words
                                                             checksum is just the sum of control word + instr 1 + .. + instr N
                                                             
                                                              
