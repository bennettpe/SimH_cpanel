
                           SpeedEx 

                           Single Address Assembly Program
                           North American Aviation
                           program part 1

                           (c) July 1953 by Ed Law

                           listing at 102663105-05-01-acc.pdf, page 116
                           from Computer History Museum collection

                           program to be loaded with simh load SCP command

OCT                        DEC=Number are in decimal (default). OCT=Numbers are in octal

NNNN S OPNAME   OP ADDR    Remarks ... (max 79 chars)
                           
                           Set up initial contidition
                           lines 01010-01230
           
0050 +12 0365              01010 + R ADD     RA D1 00009  SET STARTING ADDRESS FOR FILE      (0272 file addr) = 4095. Addr to store next 
0051 +15 0272              01020 + STORE A   SA S1 12430  X                                    entry in file. grows upwards
0052 +12 0334              01030 + R ADD     RA S1 19001  SET ENTRANCE TO INITIAL 3 REGION   set to process 3 initial cards
0053 +15 0321              01040 + STORE A   SA S1 14070  X                                    
0054 +12 0343              01050 + R ADD     RA S1 19008  SET DR ADDR IN INITIAL 3 REGION    (0323 dr addr 3 region)=oct 46 (+38)
0055 +15 0323              01060 + STORE A   SA S1 16020  X                                    
0056 +12 0362              01080 + R ADD     RA D1 00006  CLEAR INFORMATION AREA             (0044) =   
0057 -14 0044              01090 - STORE     SR A2 00036  X                                    (0046) = 
0060 -14 0046              01100 - STORE     SR A2 00038  X                                      zero
0061 +12 0366              01110 + R ADD     RA D1 00010  SETUP FIRST VALUE FOR SEQUENCE CK  (0001) = 4095  
0062 +14 0001              01130 + STORE     SR A1 00001  X                                    
0063 +36 0106              01140 + SENSE     SS A1 00070  CHANGE TAPES IF 2 DOWN               
0064 +01 0070              01150 + TR        UT S1 01230  X                                    
0065 +12 0347              01160 + R ADD     RA S1 19012  X                                   store addr of tape 2 (dec 257, octal 0401) into                                 
0066 +15 0070              01170 + STORE A   SA S1 01230  X                                    in rew and write tape instr          
0067 +15 0257              01180 + STORE A   SA S1 12320  X                                    
0070 +34 0400              01230 + REWIND    RW A1 00256  INSURE THAT TAPE IS REWOUND          

                           Read card and convert to binary
                           lines 02010-10080
                           
0071 +32 4004              02010 + WRITE     WR A1 02052  INSURE THAT MQ NOT IN USE            
0072 +30 4000              02020 + READ      RD A1 02048  PREPARE TO READ CARD                 
0073 +12 0362              02030 + R ADD     RA D1 00006  CLEAR CARD CONVERSION COUNTERS      (0602..0610)=0    
0074 -14 0602              02040 - STORE     SR T2 00050  X                                    
0075 -14 0604              02050 - STORE     SR T2 00052  X                                    
0076 -14 0606              02060 - STORE     SR T2 00054  X                                    
0077 -14 0610              02070 - STORE     SR T2 00056  CLEAR CK SUM COUNTER                 
0100 +12 0335              02080 + R ADD     RA S1 19002  RESET INITIAL COPY LOOP ADDRESS     addr at instr 
0101 +15 0107              02090 + STORE A   SA S1 04010  X                                    set to loc oct 520 = row 9 of card image  
0102 +15 0110              02095 + STORE A   SA S1 04020  X                                    
0103 +15 0313              02100 + STORE A   SA S1 14010  X                                    
0104 +12 0336              02110 + R ADD     RA S1 19003  RESET TRANSFER ADDRESS               
0105 +15 0160              02120 + STORE A   SA S1 08180  X                                    
0106 +36 0100              02130 + SENSE     SS A1 00064  TURN OFF SENSE LIGHS                

0107 -37 0000              04010 - COPY      CS A2 /   /  COPY LEFT WORD                 copy 0520|4           -3- -7-                         
0110 -06 0000              04020 - R SUB     RS A2 /   /  TEST SIGN OF WORD JUST COPIED  acc=-370 000  XXXXxxxx.OO OOO .... | ..................      
0111 +03 0006              04030 + TR +      PT A1 00006  END OF FILE IF PLUS                                  

0112 +12 0107              04040 + R ADD     RA S1 04010  LEFT COPY ADDRESS              acc=-37 0520                   
0113 +15 0133              04050 + STORE A   SA S1 05010  ALTER LQ ADDRESS                     
0114 +15 0174              04060 + STORE A   SA S1 10010  STORE LEFT WORD ADDRESSES            
0115 +05 0355              04070 + SUB       SU D1 00001     FOR CK SUM                  acc=-37 0521
0116 +15 0175              04080 + STORE A   SA S1 10020  X                                    
0117 +05 0355              04090 + SUB       SU D1 00001  X                              acc=-37 0522      
0120 +15 0121              04100 + STORE A   SA S1 04120  ALTER RIGHT WORD COPY ADDRESS        
0121 -37 0000              04120 - COPY      CS A2 /   /  COPY RIGHT WORD                copy 0522                 
0122 +05 0356              04125 + SUB       SU D1 00002  X                              acc=-37 0524                                 
0123 +15 0107              04130 + STORE A   SA S1 04010  ALTER LEFT WORD COPY ADDRESS   
0124 +15 0110              04135 + STORE A   SA S1 04020  X                                    
0125 +06 0074              04140 + R SUB     RS S1 02040  RESET ADDRESSES IN CARD        acc=+store 0602      
0126 +15 0156              04150 + STORE A   SA S1 08160     CONVERSION LOOP                   
0127 +15 0157              04160 + STORE A   SA S1 08170  X                                    
0130 +11 0355              04170 + ADD       AD D1 00001  X                              acc=+store 0603                               
0131 +15 0161              04180 + STORE A   SA S1 08190  X                                    
0132 +15 0162              04190 + STORE A   SA S1 08200  X                                    
0133 -17 0000              05010 - LOAD MQ   LQ A2 /   /  SPACE LEFT ROW IMAGE           load mq 0520 get  left row mq=370 000     
0134 +24 0005              05020 + L LEFT    LL A1 00005  X .*echo ROW_IMAGE:Q           acc=37, mq=0      inserted one bit        
0135 +26 0001              05030 + A LEFT    AL A1 00001  X                              acc=76            -3- -7- v new bit inserted 
0136 +25 0006              05040 + L RIGHT   LR A1 00006  X                              mq=370000 000000  .OO OOO x .... | ..................          
0137 +12 0121              08010 + R ADD     RA S1 04120  TEST FOR ZERO ROW              acc=-37 0522                   
0140 +05 0337              08020 + SUB       SU S1 19004  X                              sub-770566 -> acc=44           
0141 +04 0152              08030 + TR 0      ZT S1 08120  X                              exit to 0152 if instr 0121 has addr 0566

0142 +02 0143              08040 + TR OV     OV S1 08050  RESET OVERFLOW INDICATOR       convert MQ=binary b1 b2 b3 b4 b5            
0143 +12 0364              08050 + R ADD     RA D1 00008  X .*echo MQ_to_convert:Q       SET END OF GROUP INDICATOR     to acc= decimal +11111: a 1 if bit n=1, a 0 if bit=0
0144 +24 0001              08060 + L LEFT    LL A1 00001  DIGIT INTO ACCUMULATOR         
0145 -02 0155              08070 - TR OV     OV S2 08150  LOOP END IF LAST DIGIT                     
0146 -14 0600              08080 - STORE     SR T2 00048  CONVERSION TO BINARY           
0147 +26 0002              08090 + A LEFT    AL A1 00002  X                              
0150 -11 0600              08100 - ADD       AD T2 00048  X                              
0151 +01 0144              08110 + TR        UT S1 08060  RETURN FOR NEXT DIGIT    
                  
0152 +12 0340              08120 + R ADD     RA S1 19005  ALTER TRANSFER FORK ADDRESS                
0153 +15 0160              08130 + STORE A   SA S1 08180  X                                          
0154 +01 0142              08140 + TR        UT S1 08040  RETURN TO CONVERSION                       

0155 +26 0022              08150 + A LEFT    AL A1 00018  POSITION CONVERTED GROUP                   Acc=+11111|0        
0156 +11 0000              08160 + ADD       AD A1 /   /  ADD SINGLE SUM CONVERSION CNTRS            add 0602|4
0157 +14 0000              08170 + STORE     SR A1 /   /  X                                          store 0602|4=+11111
0160 +01 0000              08180 + TR        UT A1 /   /  AVOID DBLE SUMS IF ROW 0 THRU 12           tr 0161
0161 +11 0000              08190 + ADD       AD A1 /   /  ADD DOUBLE SUM CONVERSION CNTRS            add 0603|5         
0162 +14 0000              08200 + STORE     SR A1 /   /  X                                          store 0603|5
0163 +06 0157              08210 + R SUB     RS S1 08170  ALTER SINGLE SUM ADDRESSES                 acc=-14 0602            
0164 +05 0356              08220 + SUB       SU D1 00002  X .*mo0602-6:Bit_Sum_Counters              acc=-14 0604
0165 +15 0156              08230 + STORE A   SA S1 08160  X                                          
0166 +15 0157              08240 + STORE A   SA S1 08170  X                                          
0167 +05 0355              08250 + SUB       SU D1 00001  ALTER DOUBLE SUM ADDRESSES                 acc=-14 0605|7|11
0170 +15 0161              08260 + STORE A   SA S1 08190  X                                          
0171 +15 0162              08270 + STORE A   SA S1 08200  X                                          
0172 +05 0077              08280 + SUB       SU S1 02070  LOOP END TEST                              acc-(-14 610)
0173 -03 0142              08290 - TR +      PT S2 08040  CONVERT NEXT GROUP                                         

0174 +06 0000              10010 + R SUB     RS A1 /   /  MINUS LFFT HALF WORD                        
0175 +05 0000              10020 + SUB       SU A1 /   /  MINUS RIGHT HALF WORD          
0176 +27 0022              10030 + A RIGHT   AR A1 00018                                             
0177 -11 0610              10040 - ADD       AD T2 00056  PREVIOUS PARTIAL CK SUM
0200 -14 0610              10050 - STORE     SR T2 00056  STORE NEW PARTIAL CK SUM                   
0201 +06 0174              10060 + R SUB     RS S1 10010  TEST FOR END OF CARD                       
0202 +11 0341              10070 + ADD       AD S1 19006  X                                         
0203 +03 0107              10080 + TR +      PT S1 04010  X                                          

                           Is punch pattern correct?
                           lines 12010-12050
                           
0204 +12 0602              12010 + R ADD     RA T1 00050  ADD SINGLE SUM CONVERSION CNTRS            
0205 +11 0604              12020 + ADD       AD T1 00052  X                                          
0206 +11 0606              12030 + ADD       AD T1 00054  X                                          
0207 +05 0357              12040 + SUB       SU D1 00003  SUBTRACT CONVERSION TEST SUM               
0210 -04 0213              12050 - TR 0      ZT S2 12100  TRANSFER IF CORRECT                        

                           No, punched pattern not correct
                           STOP 212(8), light 2
                           lines 12080-12090
                           
0211 +36 0102              12080 + SENSE     SS A1 00066  PUNCH PATTERN ERROR STOP                   
0212 +00 0071              12090 + STOP      ST S1 02010  X                                          

                           Yes, punched pattern correct
                           Obtain true operation code. Test for bad code
                           lines 12100-12263
                           
0213 +12 0362              12100 + R ADD     RA D1 00006  CLEAR HIGH ORDER OF CONVERTED       acc=0       
0214 +14 0602              12110 + STORE     SR T1 00050     SYMBOLIC OPERATION AND ADDR      reset to zero number of punches on card columns            
0215 +14 0604              12120 + STORE     SR T1 00052  X                                    counters on 0602, 0604, 0606     
0216 +14 0606              12130 + STORE     SR T1 00054  X                                         
0217 -17 0604              12140 - LOAD MQ   LQ T2 00052  OBTAIN SYM OPER AS DIVIDEND         mq=symb opcode on right halfword = 0|symbop
0220 -22 0362              12150 - DIV       DV D2 00006  DIVIDE BY TEN                       div by full word 0362 0363 = 0|10
0221 -14 0002              12160 - STORE     SR A2 00002  FIRST REMAINDER IS SYM SIGN         (0002 0003)=sign 1 or 2    
0222 +12 0362              12170 + R ADD     RA D1 00006  CLEAR ACCUMULATOR                   clear remainder in acc, MQ=symbop/10   
0223 -22 0362              12180 - DIV       DV D2 00006  DIVIDE BY TEN                          
0224 -14 0600              12190 - STORE     SR T2 00048  SECOND REMAINDER IS TYPE            (0600 0601)=type: A=1    
0225 -16 0004              12200 - STORE MQ  SQ A2 00004  CODED OPERATION AS FULL WORD        (0004 0005)=coded opcode    
0226 +12 0005              12210 + R ADD     RA A1 00005  CODED OPERATION AS HALF WORD           
0227 +11 0344              12220 + ADD       AD S1 19009  ADD BASE OF ASSEMBLY DATA               
0230 +15 0231              12230 + STORE A   SA S1 12240  ADDRESS OF TRUE OPERATION CODE          
0231 +12 0000              12240 + R ADD     RA A1 /   /  .*echo:Addr OBTAIN TRUE OPERATION CODE              
0232 +17 0362              12245 + LOAD MQ   LQ D1 00006  CLEAR MQ               
0233 +25 0027              12250 + L RIGHT   LR A1 00023  SHIFT OPERATION TO MQ               mq=5bit opcode | 12+18 bits 0
0234 -05 0360              12260 - SUB       SU D2 00004  SUBTRACT OPERATION CK CONSTANT          
0235 +04 0247              12263 + TR 0      ZT S1 12296  AVOID ERROR INDICATION IF OPERATION     

                           Bad code
                           STOP (237)8, light 3
                           lines 12266-12270

0236 +36 0103              12266 + SENSE     SS A1 00067  ERROR INDICATION NO SUCH OPERATION      
0237 +00 0240              12270 + STOP      ST S1 12273  X                                      
0240 +36 0107              12273 + SENSE     SS A1 00071  CONTINUE OR REREAD BAD OPERATION        
0241 +01 0243              12276 + TR        UT S1 12283  CONTINUE                                
0242 +01 0072              12280 + TR        UT S1 02020  REREAD BAD OPERATION CORRECTED          
                           
                           Leave marker to indicate bad op. code
                           lines 12283-12293

0243 +12 0355              12283 + R ADD     RA D1 00001  LEAVE INDICATION OF BAD OPERATION      
0244 +27 0021              12286 + A RIGHT   AR A1 00017  X                                       
0245 -11 0524              12290 - ADD       AD T2 00004  X                                      
0246 -14 0524              12293 - STORE     SR T2 00004  X                                       

                           Good op. code
                           Are symbolic decimal card in sequence?
                           lines  12296-12310

0247 +12 0603              12296 + R ADD     RA T1 00051  SEQUENCE CHECK OF LOCATIONS         (0603) = symbolic location value 00000 to 99999
0250 +05 0001              12300 + SUB       SU A1 00001  X                                   sub last loc number                                       
0251 +03 0255              12303 + TR +      PT S1 12313  SEQUENCE ERROR IF PLUS              if (last loc) <= (current loc) then error
0252 +12 0603              12305 + R ADD     RA T1 00051  REPLACE LAST WITH CURRENT LOCATION  set new value for last location
0253 +14 0001              12307 + STORE     SR A1 00001  X                                      
0254 +01 0257              12310 + TR        UT S1 12320  CONTINUE                                

                           No, symbolic decimal card not in sequence  
                           STOP (256)8, light 1
                           lines 12213-12216

0255 +36 0101              12313 + SENSE     SS A1 00065  SEQUENCE ERROR                         
0256 +00 0050              12316 + STOP      ST S1 01010  X                                       

                           Yes, symbolic decimal card in sequence  
                           Set up symbolic instruction. Send symbolic location to file
                           lines 12320-12430

0257 +32 0400              12320 + WRITE     WR A1 00256  PREPARE TO WRITE ON TAPE                
0260 +24 0043              12330 + L LEFT    LL A1 00035  SHIFT OPERATION BACK TO ACCUM                   
0261 +11 0601              12340 + ADD       AD T1 00049  ADD TYPE OF ADDRESS                    
0262 -11 0606              12350 - ADD       AD T2 00054  ADD SYM ADDR TO OPER AND TYPE           
0263 -14 0600              12360 - STORE     SR T2 00048  STORE OP AND TYPE AND ADDR          acc=XX000T|00AAAA  XX=opcode, T=addr type. AAAA=addr
0264 -12 0002              12370 - R ADD     RA A2 00002  SYMBOLIC SIGN                           
0265 +27 0001              12380 + A RIGHT   AR A1 00001  SHIFT FOR 1 OR 2 ODD OR EVEN           
0266 +04 0271              12390 + TR 0      ZT S1 12420  AVOID MINUS ACTION                       
0267 -06 0600              12400 - R SUB     RS T2 00048  ATTACH MINUS SIGN IF NEGATIVE           
0270 -14 0600              12410 - STORE     SR T2 00048  X                                   acc=[+|-]XX 000T 1 00 AAAA                                     
0271 +12 0603              12420 + R ADD     RA T1 00051  SYMBOLIC LOCATION                       
0272 +14 0000              12430 + STORE     SR A1 /   /  STORE IN FILE                       start at addr=4095, grows to lower addr                

                           Alter file address. Is file too large?
                           lines 12440-12500
                           
0273 +12 0272              12440 + R ADD     RA S1 12430  FILE ADDRESS                        decr current file addr
0274 +15 0047              12450 + STORE A   SA A1 00039  LAST FILE ADDRESS LEFT HERE         (0047)=last file addr    
0275 +15 0602              12460 + STORE A   SA T1 00050  FILE ADDRESS FOR TAPE WRITING       (0602)=addr to write to file
0276 +05 0355              12470 + SUB       SU D1 00001  ALTER FILE ADDRESS                  check file addr > to lower  
0277 +15 0272              12480 + STORE A   SA S1 12430  X                                    limit at addr 0614
0300 +05 0350              12490 + SUB       SU S1 19013  SUBTRACT FILE LOWER LIMIT               
0301 -03 0304              12500 - TR +      PT S2 13010  AVOID ERROR INDICATION                  

                           Yes, file too large
                           STOP (303)8, light 4
                           lines 12530-12540
                           
0302 +36 0104              12530 + SENSE     SS A1 00068  ERROR FILE TOO LARGE                   
0303 +00 0050              12540 + STOP      ST S1 01010  X                                       

                           No, file not too large
                           Write card image and converted instruction on tape
                           lines 13010-14070
                           
0304 +06 0600              13010 + R SUB     RS T1 00048  COMPLETE CHECK SUM                  ChkSum is (0600)=instr to assemble: [+|-]XX000T
0305 +05 0601              13020 + SUB       SU T1 00049  X                                       +(0601)=00AAAA=addr     
0306 +05 0602              13030 + SUB       SU T1 00050  X                                       +(0602)=addr in file
0307 +05 0603              13040 + SUB       SU T1 00051  X                                       +(0603)=symbolic location value 00000 to 99999
0310 +27 0022              13050 + A RIGHT   AR A1 00018  X                                   acc=0|chksum        
0311 -11 0610              13060 - ADD       AD T2 00056  X                                       +card checksum    
0312 -14 0604              13070 - STORE     SR T2 00052  X                                   (0604)=card chk | instr chk        
0313 -37 0000              14010 - COPY      CS A2 /   /  COPY WORD                           Save to tape card row9 left (addr 0520), 
0314 +12 0313              14020 + R ADD     RA S1 14010  ALTER COPY ADDRESS                    row9 right (addr 0522),       
0315 +05 0356              14030 + SUB       SU D1 00002  X                                     ...
0316 +15 0313              14040 + STORE A   SA S1 14010  X                                     row Y(12) right (addr 0604)      
0317 +05 0345              14050 + SUB       SU S1 19010  CHECK FOR END OF LOOP                       
0320 +03 0313              14060 + TR +      PT S1 14010  REMAIN IN LOOP IF PLUS                      
0321 +01 0000              14070 + TR        UT A1 /   /  FIRST THREE CARD GATE               after 3 first cards, set to TR to 0071 read next card                

                           For first 3 cards
                           Store initial information about program being assembled
                           lines 16010-16100 
                             
0322 +12 0601              16010 + R ADD     RA T1 00049  PLACE INITIAL INFORMATION           (0046)=len (in hwords) of temp area
0323 +14 0000              16020 + STORE     SR A1 /   /  X                                   (0045)=len (in hwords) of data area
0324 +12 0323              16030 + R ADD     RA S1 16020  ALTER SR ADDRESS                    (0044)=addr of program origin
0325 +05 0355              16040 + SUB       SU D1 00001  X                                           
0326 +15 0323              16050 + STORE A   SA S1 16020  X                                           
0327 +05 0346              16060 + SUB       SU S1 19011  TEST FOR LAST INITIAL SPEC                  
0330 +03 0071              16070 + TR +      PT S1 02010  RETURN TO NEXT CARD IF PLUS                
0331 +12 0333              16080 + R ADD     RA S1 16100  STOP USE OF REGION 16                      
0332 +15 0321              16090 + STORE A   SA S1 14070  X                                           
0333 -01 0071              16100 - TR        UT S2 02010  RETURN TO READ NEXT CARD                    

                           
0334 +00 0322              19001 + STOP      ST S1 16010  ENTRANCE TO INITIAL 3 REGION               
0335 +00 0520              19002 + STOP      ST T1 00000  9 LEFT ROW IMAGE ADDRESS                  
0336 +00 0161              19003 + STOP      ST S1 08190  DOUBLE SUM ADDITION INSTRUCTION            
0337 -37 0566              19004 - COPY      CS T2 00038  0 RIGHT ROW IMAGE ADDRESS                   
0340 +00 0163              19005 + STOP      ST S1 08210  AVOID DOUBLE SUM TRANSFER ADDR              
0341 +06 0574              19006 + R SUB     RS T1 00044  END OF CARD TEST ADDRFSS                    
0342 -37 0600              19007 - COPY      CS T2 00048  CARD IMAGE END TEST ADDRESS                
0343 +00 0046              19008 + STOP      ST A1 00038  FIRST SR ADDRESS IN INITIAL 3               
0344 +00 0354              19009 + STOP      ST D1 00000  BASE OF DATA REGION                         
0345 -37 0606              19010 - COPY      CS T2 00054  TAPE WRITING LOOP END TEST                  
0346 +14 0044              19011 + STORE     SR A1 00036  LAST INITIAL 3 TEST WORD                    
0347 +34 0401              19012 + REWIND    RW A1 00257  TAPE 2 ADDRESS                              
0350 +14 0614              19013 + STORE     SR A1 00396  FILE LOWER LIMIT TEST                       
0351 +00 0050              19997 + STOP      ST A1 00040  PROGRAM ORIGIN                              
0352 +00 0144              19998 + STOP      ST A1 00100  NUMBER HALF WORDS DATA                     
0353 +00 0072              19999 + STOP      ST A1 00058  NUMBER HALF WORDS TEMPORARY                 
                                             
                           DATA REGION

0354 + 010000                                    D1 00000  4096
0355 +      1                                    D1 00001  1
0356 +      2                                    D1 00002  2
0357 +  57573                                    D1 00003  Conversion test sum
0360 +000000 005252                              D2 00004  Operation test constant
0362 +      0                                    D1 00006  0 
0363 +     12                                    D1 00007  10 
0364 +     10                                    D1 00008  8 
0365 + 007777                                    D1 00009  4095 
0366 + 377777                                    D1 00010  131071
0367 +      0                                    D1 00011  Operation table
 
                           Two-letters menmonics table as defined by NAA Assembler
                           value: 2525 NN where NN is the opcode
 
0371 +2525 26              AL Accumulator Left shift    A LEFT
0372 +2525 11              AD ADd                       ADD
0375 +2525 13              AP Add as if Plus            ADD AB
0377 +2525 27              AR Accumulator Right shift   A RIGHT 
0401 +2525 15              SA Store Address             STORE A
0402 +2525 36              SS Sense and Skip            SENSE 
0403 +2525 00              ST Stop and Transfer         STOP
0404 +2525 05              SU SUbtract                  SUB
0407 +2525 07              SP Subtract as if Plus       SUB AB
0410 +2525 16              SQ Store MQ                  STORE MQ
0411 +2525 14              SR Store Result              STORE 
0414 +2525 37              CS Copy and Skip             COPY
0415 +2525 24              LL Long Left shift           L LEFT
0422 +2525 17              LQ Load MQ                   LOAD MQ
0423 +2525 25              LR Long Right shift          L RIGHT 
0425 +2525 35              DA set Drum Address          SET DR 
0427 +2525 01              UT Unconditional Transfer    TR
0431 +2525 22              DV DiVide                    DIV
0434 +2525 20              MY Multiply                  MPY
0435 +2525 21              MR Multiply and Round        MPY R 
0441 +2525 15              ET ExtracT                   EXTRACT
0444 +2525 33              EF write End of File         WRITE EF
0447 02525 10              NI No Instruction            NO OP
0455 +2525 02              OV OVerflow Transfer         TR OV
0461 +2525 32              WR WRite                     WRITE
0465 +2525 03              PT Plus Transfer             TR +
0501 +2525 00              YE Your Entry            
0507 +2525 12              RA Reset and Add             R ADD 
0510 +2525 06              RS Reset and Subtract        R SUB 
0511 +2525 04              ZT Zero Transfer             TR 0
0512 +2525 30              RD ReaD                      READ 
0513 +2525 23              RN RouNd                     ROUND
0514 +2525 34              RW ReWind                    REWIND
0517 +2525 31              RR Read in Reverse           READ B      D1 00099  Operation table end
                                             
                           TEMPORARY

0520 +      0                                    T2 0   Card Image
                                                 T2 46
                                                 T2 48  Conversion Working storage
                                                 T1 50  Conversion Summing Locations
                                                 T1 55
                                                 T1 56  Partial Checksum

0600 +      0              = instr to assemble: [+|-]XX000T  XX=opcode, T=addr type. 0600|06001 fullword is XX000T|00AAAA=addr     
0601 +      0              = symbolic addr type: A=1 (absolute), S=2 (Symbolic), T=3 (temp), D=4 (data)
0602 +      0              = +11111 (dec), a 1 means number of punches in column. Leftmost digit is card column 10. Also = addr to write to tape
0603 +      0              = symbolic location value 00000 to 99999
0604 +      0              = + 2221 (dec), a 1 means numb of punches in col. Leftmost digit is card column 15. >1 means alphabetic char
0605 +      0              = symbolic opcode (2 chars) + type (A, S, D, T) + sign of operation (1 or 2)
0606 +      0              = +11111 (dec), a 1 means number of punches. Leftmost digit is card column 19. 
0607 +      0              = symbolic address value 00000 to 99999


                                    Input card
                                    Column:
                                            10  15 17 19                      46
                                             v    v v v                       v
                                      ------------------------------------------------------+ 
                                    /        LLLLLMMTSAAAAA                   Comment       |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   |                                                        |
                                   +--------------------------------------------------------+

                                   where: LLLLL = decimal symbolic location
                                          MM    = alphabetic mnemonic opcode
                                          T     = type of address: A, S, T, D
                                          S     = sign of instrctions: 1=plus, 2=minus
                                          AAAAA = decimal symbolic address

 
                                   Sense Input Switch 5 controls the program printout
                                   If set up, assembled program is listed. 
                                   If set down, no listing is generated        
