
                           FEJ 015                           

                           Binary Loading Program 
                           Octionary Programming System 

                           Poughkeepsie laboratory
                           (c) 14 August 1952 by Floyd .E.Johnston

                           listing at 102663096-05-01-acc.pdf, page 182
                           from Computer History Museum collection

OCT                        DEC=Number are in decimal (default). OCT=Numbers are in octal

NNNN S OPNAME   OP ADDR    Remarks ... (max 79 chars)
                                                                                          
0000  -37  0002            0000   -   COPY       0002                   
0001   12  0003            0001       R Add      0003   Read in         
0002   11  0000            0002        Add       0000   next card       
0003  -37  0004            0003   -   Copy      (0004)                  
0004   15  0003            0004       Store A    0003                   
0005   01  0002            0005        Tr        0002                   
                                                                        
0006   12  0057             1.0       R Add      0057   Add firts adr .*mo0054-60  
0007   03  0011              .1        Tr +       1.3   & no. of instr  
0010   15  0012              .2       Store A     1.4   into check      
0011   11  0056              .3        Add       0056   Sum.            
0012   01  0025              .4        Tr       (2.10)                  
                                                                        
0013   12  0056             2.0       R Add      0056   All instrs?     
0014   04  0040              .1        Tr 0       3.0   Yes ->          
0015   05  0051              .2       Sub        0051   <- No           
0016   14  0056              .3       Store      0056                   
0017   12  0000              .4       R Add     (0000)  Store           
0020   14  0000              .5       Store     (0000)  instruction     
0021   12  0017              .6       R Add       2.4   Advance         
0022   11  0051              .7        Add       0051   adr part of     
0023   14  0017              .8       Store       2.4   2.4 by 1        
0024   12  0000              .9       R Add     (0000)                  
0025   14  0053             .10       Store      0053   Add             
0026  -12  0052             .11   -   R Add      0052    instruction    
0027   26  0001             .12       Acc Lt     0001     into    .*echo Add:f             
0030  -11  0054             .13   -    Add       0054      check  .*echo Add_chk:f       
0031  -14  0054             .14   -   Store      0054       sum         
0032   12  0057             .15       R Add      0057                   
0033   15  0020             .16       Store A     2.5   Set up          
0034   15  0024             .17       Store A     2.9   new location    
0035   11  0051             .18        Add       0051                   
0036   14  0057             .19       Store      0057                   
0037   01  0013             .20        Tr         2.0                   
                                                                        
0040  -12  0054             3.0   -   R Add      0054   Did card        
0041   04  0043              .1        Tr 0       4.0   load correctly? 
0042   00  0043              .2       Stop        4.0   <-No v Yes      
                                                                        
0043   12  0032             4.0       R Add      2.15   Reset this      
0044   11  0051              .1        Add       0051   program         
0045   15  0017              .2       Store A     2.4                   
0046   12  0031              .3       r Add      2.14                   
0047   30  4000              .4       Read       4000   Select CR       
0050   01  0004              .5        Tr        0004                   
                                                                        
0051   00  0001            0051        00        0001                   
0052   00  0000            0052        00        0000                   
0053   00  0000            0053        00        0000                   
0054  -00  0023            0054   -    00        0023   Check Sum       
0055   33  4242            0055        33        4242                   
0056   00  0054            0056        00        0054   No of Instrs    
0057   00  0000            0057        00        0000   First Adr.      
               


                               Usage:

                               Load binary program cards containing a check sum 
                               and loading address. The program to be loaded can
                               be punched with FEJ019 or NR9003

                               Will load any number of instructions at any designated 
                               addresses above octal 0133.

                               Input Card Deck:
                                  a) FEJ015 (1 self loading binary card)
                                  b) Binary program cards
                                  c) Control card (binary) - optional

                               Operation: FEJ015 is a self-loading program:
                                  - Select load from card 
                                  - set address to 0000
                                  - press load button

                               Normal Stops:
                                  - At IC 0003 on load sucessfully

                               Error stops:
                                  - At IC 0042 if checksum error
                               

                               Control Card: in row 9
                                  - Fourth half word: location to witch control is to be 
                                    transfered (must be negative)

                                      ------------------------------------------------------+
                                    /   |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    +------------+------------+------------+------------+
                                   |    |            |            |            |      D     |
                                   +----+------------+------------+------------+------------+

                               Punched binary cards format:

                                  - in row 9: 
                                        A & B = checksum
                                        C     = Number of instructions on this card
                                        D     = first address of this card. Must be greater
                                                or equal to octal 0134 (decimal 0092)  
                                  - in rows 8 to 0, X and Y: up to 44 instructions

                                      ------------------------------------------------------+
                                    /   |            |            |  ...       | instr 44   |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |  instr 5   |  ...       |            |            |
                                   |    |  instr 1   |  instr 2   |  instr 3   |  instr 4   |
                                   |    +------------+------------+------------+------------+
                                   |    |     A      |     B      |      C     |     D      |
                                   +----+------------+------------+------------+------------+

                       