
                           FEJ 019                           

                           Punch from Electrostatic Memory binary cards to be loaded
                           with FEJ 015 or FEJ 018 
                           Octionary Programming System 

                           Poughkeepsie laboratory
                           (c) 12 August 1952 by F.E.Johnston

                           listing at 102663096-05-01-acc.pdf, page 188
                           from Computer History Museum collection

OCT                        DEC=Number are in decimal (default). OCT=Numbers are in octal

NNNN S OPNAME   OP ADDR    Remarks ... (max 79 chars)
                                                                                          
0000  -37  0002            0000   -   COPY       0002                   
0001   12  0003            0001       R Add      0003   
0002   11  0000            0002        Add       0000   stor for
0003  -37  0004            0003   -   Copy       0004   ck sum
0004   15  0003            0004       Store A    0003   No of intr                
0005   01  0002            0005        Tr        0002   First adr.                
0006   30  4000            0006       Read       4000
0007   12  0011            0007       R Add      0011
0010   11  0000            0010        Add       0000
0011  -37  0060            0011   -   Copy       0060
0012   15  0011            0012       Store A    0011
0013   12  0011            0013       R Add      0011
0014   11  0017            0014        Add       0017
0015   03  0007            0015       TR +       0007
0016   01  0020            0016        TR         1.0
0017   37  0122            0017       Copy       0122

0020   30  4000             1.0       Read       4000   read in
0021  -37  0010              .1   -   Copy       0010   controls
0022   12  0011              .2       R Add      0011   figure No               Acc=B=last addr to punch
0023   11  0110              .3        Add        4.1   of instr                +1
0024   05  0010              .4        Sub       0010   from control            -A=first addr to punch
0025   14  0011              .5       Store      0011   card.                   -> (11) number of hwords to punch
0026   26  0050              .6       Acc L      0050   clear                   Set addr
0027  -14  0002              .7   -   Store      0002   mem.                      0002, 0003,0004, 0005
0030  -14  0004              .8   -   Store      0004                               to sero
0031   12  0010              .9       R Add      0010   get first adr           Acc=(10)=A=first addr to punch
0032   14  0005              .10      Store      0005   +store in                 0005=first addr to punch
0033   15  0041              .11      Store A     2.1   working
0034   15  0072              .12      Store A     3.4   locations
0035   11  0111              .13       Add        4.2   Advance Adr             +44 -> store back at 0010 
0036   15  0010              .14      Store A    0010   by 44 dec                as next addr to punch
0037   15  0112              .15      Store A     4.3   to detect end of card     and last addr of the current card
                                                                        
0040   32  2000             2.0       Write      2000
0041   12  0000              .1       R Add     (0000)                          get instr to be punched on card
0042   14  0115              .2       Store       4.6   Add instrs              -> (4.6 instr to be punched)
0043  -06  0114              .3   -   R Sub       4.5   goto check              update checksum (36 bits) at 0002
0044   26  0001              .4       Acc L      0001   sum.                     ck=ck + (instr << 1)
0045  -11  0002              .5   -    Add       0002                            intial value of ck=A=fisrt addr to punch
0046  -14  0002              .6   -   Store      0002
0047   12  0004              .7       R Add      0004   count instr             incr (0004) = punched 
0050   11  0110              .8        Add        4.1   4 store                  instructions 
0051   14  0004              .9       Store      0004                             counter
0052   12  0011              .10      R Add      0011   count down              decr (0011) = number of 
0053   05  0110              .11       Sub        4.1   from No                  hwords to punch
0054   14  0011              .12      Store      0011   of instructions
0055   04  0102              .13       TR 0      3.12   All? -> Yes             tr if all inst punched
0056   06  0041              .14      R Sub       2.1   v No                    incr addr pointer
0057   05  0110              .15       Sub        4.1   Test it                  to read next instr 
0060   15  0041              .16      Store A     2.1   Full card                 to punch 
0061   11  0112              .17       Add        4.3                           last addr of current card
0062   03  0041              .18       TR +       2.1   Yes v  No -> 2.1
0063   06  0004             2.19      R Sub      0004   Add first               compute checksum
0064   05  0005              .20       Sub       0005   Adr +
0065   27  0021              .21      Acc Rt     0021   No of instr
0066  -11  0002              .22  -    Add       0002   into check
0067  -14  0002              .23  -   Store      0002   Sum

0070  -37  0002             3.2   -   Copy       0002   ck sum                  start punching
0071  -37  0004              .3   -   Copy       0004   No instr - first adr
0072  -37  0000              .4   -   Copy      (0000)                          addr to punch
0073   12  0072              .5       R Add       3.4                           decr copy addr at 3.4  
0074   11  0000              .6        Add       0000   Punch                     by 2 and
0075   15  0072              .7       Store A     3.4    Next                       store back in 3.4
0076   11  0041              .8        Add        2.1     card                  
0077   26  0007              .9       Acc L      0007
0100   04  0026              .10       TR 0       1.6
0101   01  0072              .11       TR         3.4
0102   12  0113              .12      R Add       4.4                           end of punch: all instr punched
0103   14  0026              .13      Store       1.6   set to                  set instr 1.6 as TR 5.0
0104   12  0041              .14      R Add       2.1   discontinue             decr addr pointer
0105   11  0110              .15       Add        4.1   punching
0106   15  0041              .16      Store A     2.1 
0107   01  0063              .17       TR        2.19                           tr to update checksum

0110   00  0001             4.1        00        0001                           constant +1
0111   00  0054              .2        00        0054                           constant +44

0112   12  0000              .3       R Add      0000                           addr part = first addr to be punched on next card  
0113   01  0116              .4        TR         5.0                           
0114   00  0000              .5        00        0000                           zero
0115   00  0000              .6        00        0000                           instr to be punched

0116   30  4000             5.0       READ       4000
0117  -37  0000              .1       Copy       0000      
0120   01  0000              .2        TR        0000 
0121   00  0000              .3        00        0000 

                               Usage:

                               Punch from Electrostatic Memory to binary cards 
                           
                               Input Card Deck:
                                  a) FEJ018 (2 self loading binary cards)
                                  b) Control card (binary)

                               Operation: FEJ018 is a self-loading program:
                                  - Select load from card 
                                  - set address to 0000
                                  - press load button

                               Output:
                                  - Punched binary cards                               

                               Normal Stops:
                                  - At IC 0078 on termination (No cards stop)

                               Error stops:
                                  - At IC 0058 if B address is even (should be odd)
                               

                               Control Card: in row 9
                                  - First half word:  A = Address of first mem location to be pùnched
                                  - Second half word: B = Address of last mem location to be punched

                                    A must be even, B must be odd

                                      ------------------------------------------------------+
                                    /   |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    +------------+------------+------------+------------+
                                   |    |     A      |     B      |            |            |
                                   +----+------------+------------+------------+------------+


                               Punched binary cards format:

                                  - in row 9: 
                                        A & B = checksum
                                        C     = Number of instructions on this card
                                        D     = first address of this card
                                  - in rows 8 to 0, X and Y: up to 44 instructions

                                      ------------------------------------------------------+
                                    /   |            |            |  ...       | instr 44   |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |  instr 5   |  ...       |            |            |
                                   |    |  instr 1   |  instr 2   |  instr 3   |  instr 4   |
                                   |    +------------+------------+------------+------------+
                                   |    |     A      |     B      |      C     |     D      |
                                   +----+------------+------------+------------+------------+





                       