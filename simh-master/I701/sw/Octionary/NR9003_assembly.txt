             +010204                        
             +010204                        NR9003 ASSEMBLY
             +010204                        
             +010204                        SYMBOLIC ASSEMBLER FOR IBM 701
             +010204                        PART OF OCTIONARY PROGRAMMING SYSTEM
             +010204                        POUGHKEEPSIE LABORATORY
             +010204                        
             +010204                        ORIGINAL CODE (LOST) BY
             +010204                        NATHANIEL ROCHESTER, JULY 1952
             +010204                        
             +010204                        REWRITTEN BY ROBERTO SANCHO MAY 2021
             +010204                        USING USAGE DOC AT 102663096-05-01-ACC.PDF, PAGE 167
             +010204                        AND PROGRAM INNER WORKING DESCRIPTION DOC AT PAGE 84
             +010204                        FROM COMPUTER HISTORY MUSEUM COLLECTION
             +010204                        
             +010204                        TO BE ASSEMBLED WITH IBM701ASSEMBLER.EXE CROSS-ASSEMBLER
             +010204                        
             +010204                        
             +010204                        
             +010204                        
             +010209         0200           PROGRAM ORIGIN USED ALL MEMORY EXCEPT 0000-OCTAL 0308
             +010205               00       PROGRAM START
             +010204                        
             +010204                        SETUP INITIAL CONDITION
             +010204                        
             +010200010000+01030000         1.0   TR       3.0   TR TO PROG START
             +010201010100+100000           1.1   NOOP     0000  TO GUARANTEE VARS ALIGNED AT EVEN LOC
             +010204                        
             +010201010200+000000           CARD BUFFER: 48 HALF WORDS
             +010201010300+000000  
             +010201010400+000000  
             +010201010500+000000  
             +010201010600+000000  
             +010201010700+000000  
             +010201010800+000000  
             +010201010900+000000  
             +010201011000+000000  
             +010201011100+000000  
             +010201011200+000000  
             +010201011300+000000  
             +010201011400+000000  
             +010201011500+000000  
             +010201011600+000000  
             +010201011700+000000  
             +010201011800+000000  
             +010201011900+000000  
             +010201012000+000000  
             +010201012100+000000  
             +010201012200+000000  
             +010201012300+000000  
             +010201012400+000000  
             +010201012500+000000  
             +010201012600+000000  
             +010201012700+000000  
             +010201012800+000000  
             +010201012900+000000  
             +010201013000+000000  
             +010201013100+000000  
             +010201013200+000000  
             +010201013300+000000  
             +010201013400+000000  
             +010201013500+000000  
             +010201013600+000000  
             +010201013700+000000  
             +010201013800+000000  
             +010201013900+000000  
             +010201014000+000000  
             +010201014100+000000  
             +010201014200+000000  
             +010201014300+000000  
             +010201014400+000000  
             +010201014500+000000  
             +010201014600+000000  
             +010201014700+000000  
             +010201014800+000000  
             +010201014900+000000  
             +010204                        
             +010201015000+000000           NUMBER OF SYNONYNS DEFINED
             +010201015100+000000           NUMBER OF DRUM ASSIGN DEFINED
             +010201015200+000000           NUMBER OF INSTRUCTIONS IN BATCH
             +010201015300+000000           NUMBER OF SYMBOLIC ADDR UNDEFINED
             +010201015400+000000           NUMBER OF BATCHES SAVED IN TAPE
             +010201015500+000000           SET TO 1 IF PROGRAM ORIGIN IS ZERO
             +010204                        
             +010201015600+000000           CURRENT HEADING
             +010201015700+000000           CURRENT INSTR LOCATION
             +010201015800+000000           PREVIOUS INSTR SYMBOLIC LOCATION
             +010201015900+000000  
             +010204                        
             +010201016000+000000           CARD TYPE
             +010201016100+000000           OPCODE SIGN
             +010201016200+000000           SYMBOLIC LOCATION
             +010201016300+000000  
             +010201016400+000000           SYMBOLIC OPERATION ADDRESS
             +010201016500+000000  
             +010201016600+000000           OPERATION CODE
             +010201016700+000000           ACTUAL OPERATION ADDRESS
             +010204                        
             +010201016800+000000           TO CONVERT FROM/TO HALF
             +010201016900+000000           WORD TO/FROM FULLWORD
             +010204                        
             +010201017000+000000           START OF SYMBOL TABLE
             +010201017100+000000           FIRST ADDR IN FILE FREE TO STORE DATA (FILE HEAD)
             +010201017200+000000           ADDR OF START OF FILE
             +010201017300+000000           START ADDR IN FILE OF SYMB LOCATIONS TABLE
             +010204                        
             +010201017400+000000           START ADDR IN FILE OF DRUM ASSIGN DATA
             +010201017500+000000           START ADDR IN FILE OF SYNONYM DATA
             +010201017600+000000           LAST ADDR AVAILABLE FOR FILE
             +010201017700+000000           SET FIRST ADDR OF DATA IN CARD WHEN PUNCHING FEJ019 BIN CARD FORMAT
             +010204                        
             +010201017800-120000           1.78  R ADD    0000  END OF LOOP VALUE
             +010201017900-120000           1.79  R ADD    0000  END OF LOOP VALUE 2
             +010204                        
             +010201018000+000000           OUTPUT BINARY CARD BUFFER
             +010201018100+000000  
             +010201018200+000000           
             +010201018300+000000  
             +010201018400+000000  
             +010201018500+000000  
             +010201018600+000000  
             +010201018700+000000  
             +010201018800+000000  
             +010201018900+000000  
             +010201019000+000000  
             +010201019100+000000  
             +010201019200+000000  
             +010201019300+000000  
             +010201019400+000000  
             +010201019500+000000  
             +010201019600+000000  
             +010201019700+000000  
             +010201019800+000000  
             +010201019900+000000  
             +010201020000+000000  
             +010201020100+000000  
             +010201020200+000000  
             +010201020300+000000  
             +010201020400+000000  
             +010201020500+000000  
             +010201020600+000000  
             +010201020700+000000  
             +010201020800+000000  
             +010201020900+000000  
             +010201021000+000000  
             +010201021100+000000  
             +010201021200+000000  
             +010201021300+000000  
             +010201021400+000000  
             +010201021500+000000  
             +010201021600+000000  
             +010201021700+000000  
             +010201021800+000000  
             +010201021900+000000  
             +010201022000+000000  
             +010201022100+000000  
             +010201022200+000000  
             +010201022300+000000  
             +010201022400+000000  
             +010201022500+000000  
             +010201022600+000000  
             +010201022700+000000  
             +010201022800+000000           NUMBER OF WORDS IN OUTPUT BINARY CARD
             +010201022900+000000           LOAD ADDRESS FOR FEJ015 BINARY CARD
             +010204                        
             +010204                        FILE MEMORY MAP
             +010204                        .            <- FULL WORD ->
             +010204                        .           +--------------+
             +010204                        FILETOP --> |SYMBOLIC ADDR | FIRST ADDR OF FILE (SYMBOL TABLE) = FILESTRT = FISRT ADDR OF FILE
             +010204                        .           |ACTUAL LOC    |
             +010204                        .           |SYMBOLIC ADDR | SYMBOLIC ADDRESS ARE
             +010204                        .           |ACTUAL LOC    | 2 FULL WORDS LONG
             +010204                        .            ...
             +010204                        .           |SYMBOLIC ADDR | LAST SYMBOLIC ADDR
             +010204                        .           |ACTUAL LOC    | ACTUAL LOC = -1 IF SYMBOL DEFINED BUT UNRESOLVED
             +010204                        FILEHEAD -> |              | FIRST FREE LOC IN FILE
             +010204                        .             ...
             +010204                        .                   |
             +010204                        .                   V
             +010204                        
             +010204                        .                   ^
             +010204                        .                   |
             +010204                        FILEAD  --> |SLOC          | FIRST IN USE LOC IN FILE
             +010204                        .           |SADDR         | = LAST INSTR OF BATCH FROM READS CARD
             +010204                        .           |CURLOC |OPCDAD| 3 FULL WORDS PER INTRUCTION
             +010204                        .           |SLOC          | SYMBOLIC LOCATION
             +010204                        .           |SADDR         | SYMBOLIC ADDR (=0 IF ACTUAL ADDR SET)
             +010204                        .           |CURLOC |OPCDAD| CURLOC = ACTUAL LOCATION OF INSTRUCTION
             +010204                        .           |SLOC          |
             +010204                        .           |SADDR         |
             +010204                        .           |CURLOC |OPCDAD| OPCDAD = ACTUAL OPCODE + ACTUAL OPADDR OF INSTRUCTION
             +010204                        .            ...
             +010204                        .           |SLOC          | = FIRST INSTRUCTION OF BATCH FROM READ CARDS
             +010204                        .           |SADDR         |
             +010204                        .           |CURLOC |OPCDAD|
             +010204                        FILEDR  --> |SADDR         | = LAST DRUM ASSIGN CARD SYMBOLIC = FILESLOC = INITIAL VALUE FOR FILEAD PRIOR TO LOAD INSTR BATCH
             +010204                        .           |ACTUAL LOC    | ACTUAL LOCATION
             +010204                        .           |SADDR         | 2 FULL WORDS PER DRUM ASSIGN
             +010204                        .           |ACTUAL LOC    |
             +010204                        .            ...
             +010204                        .           |SADDR         |
             +010204                        .           |ACTUAL LOC    |
             +010204                        FILESY  --> |SADDR DO NOT  | = LAST SYNONYM CARD DO NOT USE THIS
             +010204                        .           |SADDR USE THIS| USE THIS SYMB ADDRESS
             +010204                        .           |SADDR DO NOT  | 2 FULL WORDS PER SYNONYM
             +010204                        .           |SADDR USE THIS|
             +010204                        .            ...
             +010204                        .           |SADDR DO NOT  |
             +010204                        .           |SADDR USE THIS|
             +010204                        FILELAST -> END OF MEM LOCATION 4096
             +010204                        
             +010201023000+000009           VALUE OF ROW 9
             +010201023100+000008           
             +010201023200+000007           
             +010201023300+000006           
             +010201023400+000005           
             +010201023500+000004           
             +010201023600+000003           
             +010201023700+000002           
             +010201023800+000001           VALUE OF ROW 1
             +010201023900+000010           VALUE OF ROW 0(TEN)
             +010201024000+000020           VALUE OF ROW X(11)
             +010201024100+000030           VALUE OF ROW Y(12) HIGH PUNCH
             +010204                        
             +010201024200+000010           MULTIPLIER BASE DEPENDING ON CHAR
             +010201024300+000008           FORMAT DECIMAL, OCTAL, ALPHA
             +010201024400+000100           
             +010201024500+010000           
             +010204                        
             +010201024600+000000           
             +010201024700+000019           
             +010201024800+000025           
             +010201024900+000048           
             +010204                        
             +010201025000-000001           
             +010201025100-000002           
             +010204                        
             +010201025200+000000           FORMAT OF CHARS TO READ
             +010201025300+000000           CURRENT COLUMN CHAR
             +010201025400+000000           GETCHRS RESULT VALUE
             +010201025500+000000  
             +010201025600+000000           ROW TO BE SENT TO PRINTER
             +010201025700+000000  
             +010204                        
             +010200025800+00023000         2.58  STOP     2.30  ADDR OF START OF ROW K VALUES (ROW 9)
             +010200025900+11024200         2.59  ADD      2.42  ADDR OF END ROW K VALUES (ROW 12 Y) + 1
             +010200026000+00024200         2.60  STOP     2.42  ADDR OF MBASE TABLE
             +010200026100+00010200         2.61  STOP     1.2   ADDR OF CARD BUFFER
             +010204                        
             +010200026200+00018000         2.62  STOP     1.80  ADDR OF OUTPUT BINARY CARD BUFFER
             +010204                        
             +010205               00       HEADING PROGRAM START
             +010204                        
             +010200030000+12024500         3.0   R ADD    2.45  SET LAST ADDR AVAILABLE FOR FILE
             +010200030100+14017600         3.1   STORE    1.76  X
             +010200030200+12024600         3.2   R ADD    2.46  RESET
             +010200030300-14015800         3.3   STORE    1.58  ... SYMBOLIC LOCATION OF PREVIOUS INSTRUCTION
             +010200030400+14015000         3.4   STORE    1.50  ... NUMBER OF SYNONYNS DEFINED
             +010200030500+14015100         3.5   STORE    1.51  ... NUMBER OF DRUM ASSIGN DEFINED
             +010200030600+14015200         3.6   STORE    1.52  ... NUMBER OF INSTRUCTIONS IN BATCH
             +010200030700+14015300         3.7   STORE    1.53  ... NUMBER OF SYMBOLIC ADDR UNDEFINED
             +010200030800+14015400         3.8   STORE    1.54  ... NUMBER OF BATCHES SAVED IN TAPE
             +010200030900+14015500         3.9   STORE    1.55  ... SET TO 1 IF PROGRAM ORIGIN IS ZERO
             +010200031000+14017500         3.10  STORE    1.75  ... START ADDR IN FILE OF SYNONYM DATA
             +010200031100+14017400         3.11  STORE    1.74  ... START ADDR IN FILE OF DRUM ASSIGN DATA
             +010200031200+14017300         3.12  STORE    1.73  ... START ADDR IN FILE OF SYMB LOCATIONS TABLE
             +010200031300+14022800         3.13  STORE    2.28  ... NUMBER OF WORDS IN OUTPUT BINARY CARD
             +010200031400+14022900         3.14  STORE    2.29  ... LOAD ADDRESS FOR FEJ015 BINARY CARD
             +010204                        
             +010200031500+12025000         3.15  R ADD    2.50  SET CURRENT LOC AND
             +010200031600+14015700         3.16  STORE    1.57  CURRENT HEADING
             +010200031700+14015600         3.17  STORE    1.56  AS UNDEFINED
             +010200031800+14017700         3.18  STORE    1.77  X
             +010200031900+12017600         3.19  R ADD    1.76  RESET FILE AS EMPTY
             +010200032000+14017200         3.20  STORE    1.72  X
             +010200032100+12500100         3.21  R ADD    50.1  SET FIRST ADDR OF FILE
             +010200032200+11023800         3.22  ADD      2.38  AS EVEN ADDR
             +010201032300+270019           3.23  A RIGHT  0019  X
             +010201032400+260019           3.24  A LEFT   0019  X
             +010200032500+14017000         3.25  STORE    1.70  RESET ADDR OF HEAD TO FILE
             +010200032600+14017100         3.26  STORE    1.71  X
             +010204                        
             +010204                        
             +010205               00       HEADING 
             +010204                        INIT READ CARD
             +010204                        
             +010201040000+322052           4.0   WRITE    2052  INSURE THAT MQ NOT IN USE
             +010201040100+302048           4.1   READ     2048  PREPARE TO READ CARD
             +010200040200+12024600         4.2   R ADD    2.46  CLEAR ...
             +010200040300+14016000         4.3   STORE    1.60  ... CARD TYPE
             +010200040400-14016200         4.4   STORE    1.62  ... SYMBOLIC LOCATION
             +010200040500-14016400         4.5   STORE    1.64  ... SYMBOLIC OPERATION ADDRESS
             +010200040600+14016100         4.6   STORE    1.61  ... OPCODE SIGN
             +010200040700+14016600         4.7   STORE    1.66  ... ACTUAL OPERATION CODE
             +010200040800+14016700         4.8   STORE    1.67  ... ACTUAL OPERATION ADDRESS
             +010200040900+12026100         4.9   R ADD    2.61  RESET TO INITIAL COPY LOOP ADDRESS
             +010200041000+15041100         4.10  STORE A  4.11  X
             +010204                        
             +010204                        READ CARD IN CDBUF
             +010204                        
             +010201041100-370000           4.11  COPY     0000  COPY WORD
             +010200041200+01041500         4.12  TR       4.15  X
             +010200041300+01310000         4.13  TR       31.0  END OF FILE
             +010200041400+01070000         4.14  TR       7.0   END OF CARD, PROCEED TO DECODE CARD
             +010200041500+11023700         4.15  ADD      2.37  INCR CDBUF ADDR
             +010200041600+15041100         4.16  STORE A  4.11  X
             +010200041700+01041100         4.17  TR       4.11  GO TO READ NEXT ROW
             +010204                        
             +010205               00       HEADING 
             +010204                        ROUTINES TO READ CARD
             +010204                        GETCHRS RETURNS IN ACC A 36BIT VALUE
             +010204                        GIVEN A FORMAT PARAMETER
             +010204                        
             +010200050000+11023700         5.0   ADD      2.37  GET CHARS FROM CARD USING FORMAT PARAM
             +010200050100+15050400         5.1   STORE A  5.4   SET FIRST PARAM ADDR
             +010200050200+11023800         5.2   ADD      2.38  X
             +010200050300+15056100         5.3   STORE A  5.61  SET ROUTINE EXIT
             +010201050400+120000           5.4   R ADD    0000  READ FIRST ROUTINE PARAM
             +010200050500+14025200         5.5   STORE    2.52  IS THE FORMAT OF CHARS TO GET
             +010200050600+12024600         5.6   R ADD    2.46  X
             +010200050700-14025400         5.7   STORE    2.54  RESET RESULT
             +010200050800+12025800         5.8   R ADD    2.58  RESET TO INITAL ROW 9 VALUE
             +010200050900+15052300         5.9   STORE A  5.23  X
             +010200051000+12024600         5.10  R ADD    2.46  RESET COLUMN CHAR
             +010200051100+14025300         5.11  STORE    2.53  X
             +010200051200+12026100         5.12  R ADD    2.61  RESET TO CARD ADDRESS INITAL ADDR
             +010200051300+15051700         5.13  STORE A  5.17  X
             +010200051400+12051800         5.14  R ADD    5.18  SELECT NEXT CARD COLUMN
             +010200051500+11023800         5.15  ADD      2.38  X
             +010200051600+15051800         5.16  STORE A  5.18  X
             +010201051700-170000           5.17  LOAD MQ  0000  READ ROWS LOOP
             +010201051800+240000           5.18  L LEFT   0000  SHIFT TO GET NCOL BIT
             +010200051900+12024600         5.19  R ADD    2.46  FROM ROW
             +010201052000+240001           5.20  L LEFT   0001  X
             +010200052100+04052500         5.21  TR 0     5.25  IF NO PUNCH TR PROCESS TO NEXT COL
             +010200052200+12025300         5.22  R ADD    2.53  HAS PUNCH, SO ADD K ROW VALUE
             +010201052300+110000           5.23  ADD      0000  TO CHAR
             +010200052400+14025300         5.24  STORE    2.53  X
             +010200052500+12051700         5.25  R ADD    5.17  SELECT NEXT LEFT ROW
             +010200052600+05023500         5.26  SUB      2.35  X
             +010200052700+14051700         5.27  STORE    5.17  X
             +010200052800+12052300         5.28  R ADD    5.23  SELECT NEXT K VALUE
             +010200052900+11023800         5.29  ADD      2.38  X
             +010200053000+15052300         5.30  STORE A  5.23  X
             +010200053100+05025900         5.31  SUB      2.59  CHECK IF END OF ROWS
             +010200053200+03053400         5.32  TR +     5.34  YES, CHAR READ
             +010200053300+01051700         5.33  TR       5.17  NO, LOOP FOR MORE ROWS
             +010200053400+12025300         5.34  R ADD    2.53  IF CHAR IS PUNCH AT ROW 0 (TEN)
             +010200053500+04055900         5.35  TR 0     5.59  SET IT TO ZERO. IF NO CHAR
             +010200053600+05023900         5.36  SUB      2.39  PUNCHED STOP
             +010200053700+04053900         5.37  TR 0     5.39  X
             +010200053800+11023900         5.38  ADD      2.39  X
             +010200053900+14025300         5.39  STORE    2.53  X .*ECHO CHAR:
             +010200054000+12024600         5.40  R ADD    2.46  GET LEFTMOST OCTAL DIGIT FROM FORMAT
             +010200054100+17025200         5.41  LOAD MQ  2.52  1=DEC, 2=OCT, 3=ALPHA
             +010201054200+240003           5.42  L LEFT   0003  X
             +010200054300+16025200         5.43  STORE MQ 2.52  X
             +010201054400+260017           5.44  A LEFT   0017  X
             +010200054500+05023800         5.45  SUB      2.38  NOW 0=DEC, 1=OCTAL, 3=ALPHA
             +010200054600+11026000         5.46  ADD      2.60  SET MBASE TO 10,8,40 DEPENDING
             +010200054700+15054900         5.47  STORE A  5.49  ON FORMAT
             +010200054800-17025400         5.48  LOAD MQ  2.54  RESULT (36B) = RESULT (36B) * MBASE (18B)
             +010201054900+200000           5.49  MPY      0000  +
             +010201055000-240017           5.50  L LEFT   0017  CHAR (18B)
             +010200055100-14025400         5.51  STORE    2.54  X
             +010200055200+12025300         5.52  R ADD    2.53  X
             +010201055300+270018           5.53  A RIGHT  0018  X
             +010200055400-11025400         5.54  ADD      2.54  X
             +010200055500-14025400         5.55  STORE    2.54  X
             +010200055600+12025200         5.56  R ADD    2.52  IF NO MORE FORMAT
             +010200055700+04056000         5.57  TR 0     5.60  DIGITS THEN FINISH ROUTINE
             +010200055800+01050800         5.58  TR       5.8   ELSE PROCESS NEXT COLUMN CHAR
             +010201055900+000001           5.59  STOP     0001  STOP BECAUSE INVALID FORMAT IN INPUT CARD
             +010200056000-12025400         5.60  R ADD    2.54  RETURN RESULT
             +010201056100+010000           5.61  TR       0000  ROUTINE EXIT .*ECHO RESULT:F
             +010204                        
             +010205               00       HEADING 
             +010204                        ROUTINES TO READ CARD
             +010204                        GETCHAR RETURNS IN ACC A 18BIT VALUE
             +010204                        JUST FOR NEXT CHAR
             +010204                        
             +010200060000+11023700         6.0   ADD      2.37  GET ONE CHAR FROM CARD
             +010200060100+15060600         6.1   STORE A  6.6   SET ROUTINE EXIT
             +010200060200+12060200         6.2   R ADD    6.2   CALL ROUTINE GETCHRS
             +010200060300+01050000         6.3   TR       5.0   TO GET JUST ONE
             +010201060400+300000           CHAR/DIGIT
             +010201060500+260018           6.5   A LEFT   0018  RESULT TO 18B IN ACC
             +010201060600+010000           6.6   TR       0000  ROUTINE EXIT
             +010204                        
             +010200060700+11023700         6.7   ADD      2.37  GET 2 DIGITS DECIMAL VALUE FROM CARD
             +010200060800+15061300         6.8   STORE A  6.13  SET ROUTINE EXIT
             +010200060900+12060900         6.9   R ADD    6.9   CALL ROUTINE GETCHRS
             +010200061000+01050000         6.10  TR       5.0   TO GET 2 DIGITS
             +010201061100+110000           DECIMAL VALUE
             +010201061200+260018           6.12  A LEFT   0018  RESULT TO 18B IN ACC
             +010201061300+010000           6.13  TR       0000  ROUTINE EXIT
             +010204                        
             +010200061400+11023700         6.14  ADD      2.37  GET 4 DIGITS DECIMAL VALUE FROM CARD
             +010200061500+15062000         6.15  STORE A  6.20  SET ROUTINE EXIT
             +010200061600+12061600         6.16  R ADD    6.16  CALL ROUTINE GETCHRS
             +010200061700+01050000         6.17  TR       5.0   TO GET 4 DIGITS
             +010201061800+110576           DECIMAL VALUE
             +010201061900+260018           6.19  A LEFT   0018  RESULT TO 18B IN ACC
             +010201062000+010000           6.20  TR       0000  ROUTINE EXIT
             +010204                        
             +010200062100+11023700         6.21  ADD      2.37  GET 6 CHARS SYMBOLIC ADDR FROM CARD
             +010200062200+15062600         6.22  STORE A  6.26  SET ROUTINE EXIT
             +010200062300+12062300         6.23  R ADD    6.23  CALL ROUTINE GETSYMB
             +010200062400+01050000         6.24  TR       5.0   TO GET SYMBOLIC LOC/ADDR
             +010201062500+130585           6 CHARS: DEC DIGIT + ALPHA + 4 X DEC DIGIT
             +010201062600+010000           6.26  TR       0000  ROUTINE EXIT
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE SOURCE CARD READ
             +010204                        LOAD OPCODE OPADDR SLOC SADDR ETC VARS
             +010204                        AND TRANSFER TO APPROPRIATE
             +010204                        HANDLING ROUTINES
             +010204                        
             +010200070000+12023000         7.0   R ADD    2.30  SET FIRST CARD COL TO GET
             +010200070100+15051800         7.1   STORE A  5.18  AS COL 10 (CARD TYPE)
             +010200070200+12070200         7.2   R ADD    7.2   CALL ROUTINE GETCHAR
             +010200070300+01060000         7.3   TR       6.0   TO GET CARD TYPE
             +010200070400+14016000         7.4   STORE    1.60  SAVE CARD TYPE
             +010200070500+12070500         7.5   R ADD    7.5   WRITE CARD IMAGE TO TAPE 0
             +010200070600+01220000         7.6   TR       22.0  X
             +010200070700+12016000         7.7   R ADD    1.60  
             +010200070800+05023300         7.8   SUB      2.33  CHECK IF CARD TYPE
             +010200070900+03072100         7.9   TR +     7.21  IS 0 TO 5 OR 9
             +010200071000+12071300         7.10  R ADD    7.13  AND TRANSFER TO THE
             +010200071100+11016000         7.11  ADD      1.60  CORRESPONDING
             +010200071200+11023800         7.12  ADD      2.38  
             +010200071300+15071400         7.13  STORE A  7.14  ENTRY POINT
             +010201071400+010000           7.14  TR       0000  X
             +010200071500+01080000         7.15  TR       8.0   TR TO DECODE TYPE 0 CARDS
             +010200071600+01080000         7.16  TR       8.0   TR TO DECODE TYPE 1 CARDS
             +010200071700+01100000         7.17  TR       10.0  TR TO DECODE TYPE 2 CARDS
             +010200071800+01100000         7.18  TR       10.0  TR TO DECODE TYPE 3 CARDS
             +010200071900+01130000         7.19  TR       13.0  TR TO DECODE TYPE 4 CARDS
             +010200072000+01130100         7.20  TR       13.1  TR TO DECODE TYPE 5 CARDS
             +010200072100+05023600         7.21  SUB      2.36  X
             +010200072200+04140000         7.22  TR 0     14.0  X
             +010201072300+000002           7.23  STOP     0002  STOP BECAUSE CARD TYPE INVALID. MUST BE 0-5 OR 9
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE SYMBOLIC INSTRUCTION CARD TYPE 0 AND 1
             +010204                        
             +010200080000+12080000         8.0   R ADD    8.0   CALL ROUTINE GETCHRS
             +010200080100+01062100         8.1   TR       6.21  TO GET SYMBOLIC LOC
             +010200080200-14016200         8.2   STORE    1.62  SAVE SYMBOLIC LOCATION
             +010200080300-05015800         8.3   SUB      1.58  STOP IF SYMB LOC OF PREVIOUS INSTRUCTION
             +010200080400+04080600         8.4   TR 0     8.6   IS SAME OF GREATER THAN CURRENT SYMB
             +010200080500+03080700         8.5   TR +     8.7   LOCATION
             +010201080600+000003           8.6   STOP     0003  STOP BECAUSE SYMBOLIC LOCATION NOT IN SEQUENCE
             +010200080700-12016200         8.7   R ADD    1.62  
             +010200080800-14015800         8.8   STORE    1.58  
             +010200080900+12015600         8.9   R ADD    1.56  SET HEADING IN SLOC
             +010201081000+260006           8.10  A LEFT   0006  X
             +010200081100-11016200         8.11  ADD      1.62  X
             +010200081200-14016200         8.12  STORE    1.62  X
             +010200081300+12081300         8.13  R ADD    8.13  
             +010200081400+01060000         8.14  TR       6.0   GET SIGN
             +010200081500+05024000         8.15  SUB      2.40  CAN BE (-) MINUS PUNCH ON ROW X(11)
             +010200081600+04082000         8.16  TR 0     8.20  CAN BE (+) PLUS PUNCH ON ROW Y(12) HIPUNCH
             +010200081700+05023900         8.17  SUB      2.39  IF COLUMN NOT PUNCHED INTERPRETED
             +010200081800+04082200         8.18  TR 0     8.22  AS PLUS. ANY OTHER PUNCH IN INVALID
             +010201081900+000004           8.19  STOP     0004  STOP BECAUSE INVALID OPCODE SIGN (MUST BE + OR -)
             +010200082000+12023800         8.20  R ADD    2.38  SIGN ZERO MEANS OPCODE POSITIVE
             +010200082100+14016100         8.21  STORE    1.61  SIGN ONE MEANS OPCODE NEGATIVE
             +010200082200+12082200         8.22  R ADD    8.22  CALL ROUTINE GETCHRS
             +010200082300+01050000         8.23  TR       5.0   TO GET OCTIONARY OPCODE
             +010201082400+220000           2 OCTAL DIGIT
             +010201082500+260018           8.25  A LEFT   0018  X
             +010200082600+14016600         8.26  STORE    1.66  X
             +010200082700+12015600         8.27  R ADD    1.56  CHECK IF SOME HEADING CARD HAS
             +010200082800+05025000         8.28  SUB      2.50  BEEN PROCESSED
             +010200082900+04091200         8.29  TR 0     9.12  X
             +010200083000+12016000         8.30  R ADD    1.60  
             +010200083100+04090000         8.31  TR 0     9.0   
             +010200083200+01090800         8.32  TR       9.8   
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE SYMBOLIC INSTRUCTION
             +010204                        CARD TYPE 0
             +010204                        
             +010200090000+12090000         9.0   R ADD    9.0   CALL ROUTINE GETSYMB
             +010200090100+01062100         9.1   TR       6.21  TO GET SYMBOLIC ADDR
             +010200090200-14016400         9.2   STORE    1.64  SAVE SYMBOLIC ADDR
             +010200090300+12015600         9.3   R ADD    1.56  SET HEADING IN SADDR
             +010201090400+260006           9.4   A LEFT   0006  X
             +010200090500-11016400         9.5   ADD      1.64  X
             +010200090600-14016400         9.6   STORE    1.64  X
             +010200090700+01180000         9.7   TR       18.0  ADD INSTRUCTION TO BATCH
             +010204                        
             +010204                        DECODE ACTUAL INSTRUCTION
             +010204                        CARD TYPE 1
             +010204                        
             +010200090800+12090800         9.8   R ADD    9.8   CALL ROUTINE GETN4
             +010200090900+01061400         9.9   TR       6.14  TO GET ACTUAL ADDR
             +010200091000+14016700         9.10  STORE    1.67  SAVE ACTUAL ADDR
             +010200091100+01180000         9.11  TR       18.0  ADD INSTRUCTION TO BATCH
             +010204                        
             +010201091200+000005           9.12  STOP     0005  STOP BECAUSE EXPECTING HEADING CARD BEFORE THIS ONE
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE DEFINE CARD TYPE 2 AND 3
             +010204                        
             +010200100000+12100000         10.0  R ADD    10.0  CALL ROUTINE GETCHRS
             +010200100100+01062100         10.1  TR       6.21  TO GET SYMBOLIC LOC
             +010200100200-14016200         10.2  STORE    1.62  SAVE SYMBOLIC LOCATION
             +010200100300+12024700         10.3  R ADD    2.47  SET NEXT COL AS CARD COLUMN
             +010200100400+15051800         10.4  STORE A  5.18  NUMBER 30
             +010200100500+12015700         10.5  R ADD    1.57  CHECK IF SOME E.M. ASSINGMENT CARD HAS
             +010200100600+05025000         10.6  SUB      2.50  BEEN PROCESSED
             +010200100700+04100900         10.7  TR 0     10.9  X
             +010201100800+000006           10.8  STOP     0006  STOP BECAUSE THIS CARD ONLY ALLOWED BEFORE ELECTROSTATIC ASSIGNEMENT CARD
             +010200100900+12016000         10.9  R ADD    1.60  X
             +010200101000+05023600         10.10 SUB      2.36  X
             +010200101100+04120000         10.11 TR 0     12.0  X
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE DEFINE SYNONYME
             +010204                        CARD TYPE 2
             +010204                        
             +010200110000+12110000         11.0  R ADD    11.0  CALL ROUTINE GETCHRS
             +010200110100+01062100         11.1  TR       6.21  TO GET SYMBOLIC ADDR
             +010200110200-14016400         11.2  STORE    1.64  SAVE SYMBOLIC ADDR
             +010200110300+12110300         11.3  R ADD    11.3  CALL ROUTINE GETNN
             +010200110400+01060700         11.4  TR       6.7   TO GET PREFIX 2
             +010201110500+260006           11.5  A LEFT   0006  APPLY PREFIX 2
             +010200110600-11016200         11.6  ADD      1.62  TO SYMB LOC (USE
             +010200110700-14016200         11.7  STORE    1.62  SYMB ADDR 2)
             +010200110800+12110800         11.8  R ADD    11.8  CALL ROUTINE GETNN
             +010200110900+01060700         11.9  TR       6.7   TO GET PREFIX 1
             +010201111000+260006           11.10 A LEFT   0006  APPLY PREFIX 1
             +010200111100-11016400         11.11 ADD      1.64  TO SYMB ADDR (DO NOT USE
             +010200111200-14016400         11.12 STORE    1.64  SYMB ADDR 1)
             +010200111300+12015100         11.13 R ADD    1.51  STOP IF SYNONIME CARD IS READ
             +010200111400+04111600         11.14 TR 0     11.16 AFTER A DRUM ASSIGN CARD
             +010201111500+000007           11.15 STOP     0007  STOP BECAUSE THIS CARD NOT ALLOWED AFTER A DRUM ASSIGN CARD
             +010200111600+12015700         11.16 R ADD    1.57  IF CURRENT LOCATION
             +010200111700+05025000         11.17 SUB      2.50  ASSIGNED THEN ERROR
             +010200111800+04160000         11.18 TR 0     16.0  ELSE ADD SYNONYM TO FILE
             +010201111900+000008           11.19 STOP     0008  STOP BECAUSE THIS CARD NOT ALLOWED AFTER ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE DEFINE DRUM ASSIGNEMENT
             +010204                        CARD TYPE 3
             +010204                        
             +010200120000+12120000         12.0  R ADD    12.0  CALL ROUTINE GETCHRS
             +010200120100+01061400         12.1  TR       6.14  TO GET ACTUAL ADDR
             +010200120200+14016700         12.2  STORE    1.67  SAVE ACTUAL ADDR
             +010200120300+12024800         12.3  R ADD    2.48  SET NEXT COL AS CARD COLUMN
             +010200120400+15051800         12.4  STORE A  5.18  NUMBER 36
             +010200120500+12120500         12.5  R ADD    12.5  CALL ROUTINE GETNN
             +010200120600+01060700         12.6  TR       6.7   TO GET PREFIX
             +010201120700+260006           12.7  A LEFT   0006  APPLY PREFIX
             +010200120800-11016200         12.8  ADD      1.62  TO SYMB LOC
             +010200120900-14016200         12.9  STORE    1.62  X
             +010200121000+12015700         12.10 R ADD    1.57  IF CURRENT LOCATION
             +010200121100+05025000         12.11 SUB      2.50  ASSIGNED THEN ERROR
             +010200121200+04170000         12.12 TR 0     17.0  ELSE ADD DRUM ASSIGN TO FILE
             +010201121300+000009           12.13 STOP     0009  STOP BECAUSE THIS CARD NOT ALLOWED AFTER ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE COMMENT
             +010204                        CARD TYPE 4
             +010204                        
             +010200130000+01040000         13.0  TR       4.0   PROCEED WITH NEXT CARD
             +010204                        
             +010204                        DECODE HEADING
             +010204                        CARD TYPE 5
             +010204                        
             +010200130100+12024800         13.1  R ADD    2.48  SET NEXT COL AS CARD COLUMN
             +010200130200+15051800         13.2  STORE A  5.18  NUMBER 36
             +010200130300+12130300         13.3  R ADD    13.3  CALL ROUTINE GETNN
             +010200130400+01060700         13.4  TR       6.7   TO GET PREFIX 1
             +010200130500+14015600         13.5  STORE    1.56  SAVE PREFIX 1
             +010200130600+12015700         13.6  R ADD    1.57  IF NO CURRENT LOCATION
             +010200130700+05025000         13.7  SUB      2.50  ASSIGNED THEN ERROR
             +010200130800+04131200         13.8  TR 0     13.12 
             +010200130900+12024600         13.9  R ADD    2.46  RESET SYMBOLIC LOCATION
             +010200131000-14015800         13.10 STORE    1.58  OF PREVIOUS INSTRUCTION
             +010200131100+01250000         13.11 TR       25.0  PROCESS INSTRUCTION BATCH
             +010204                        
             +010201131200+000010           13.12 STOP     0010  STOP BECAUSE EXPECTING ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        
             +010204                        
             +010205               00       HEADING 
             +010204                        DECODE ELECTROSTATIC ASSIGNEMENT
             +010204                        CARD TYPE 9
             +010204                        
             +010200140000+12024700         14.0  R ADD    2.47  SET NEXT COL AS CARD COLUMN
             +010200140100+15051800         14.1  STORE A  5.18  NUMBER 30
             +010200140200+12140200         14.2  R ADD    14.2  CALL ROUTINE GETN4
             +010200140300+01061400         14.3  TR       6.14  TO GET ORIGIN ADDR
             +010200140400+14015700         14.4  STORE    1.57  SAVE CURRENT LOCATION ASSIGNEMENT
             +010200140500+04140700         14.5  TR 0     14.7  SET ORG0FLAG IF PROGRAM ORIGIN IS ZERO
             +010200140600+01140900         14.6  TR       14.9  X
             +010200140700+12023800         14.7  R ADD    2.38  X
             +010200140800+14015500         14.8  STORE    1.55  X
             +010200140900+12025000         14.9  R ADD    2.50  INVALIDATE CURRENT HEADING
             +010200141000+14015600         14.10 STORE    1.56  TO FORCE HEADING CARD AS NEXT CARD
             +010200141100+01040000         14.11 TR       4.0   PROCEED WITH NEXT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        RESERVE N FULLWORDS IN FILE
             +010204                        STOP IF FILE FULL
             +010204                        RETURN IN ACC FILE ADDRESS TO STORE DATA
             +010204                        
             +010200150000+11023700         15.0  ADD      2.37  RESERVE N FULLWORDS IN FILE
             +010200150100+15150400         15.1  STORE A  15.4  SET ROUTINE PARAM ADDR
             +010200150200+11023800         15.2  ADD      2.38  X
             +010200150300+15151500         15.3  STORE A  15.15 SET ROUTINE EXIT
             +010201150400+120000           15.4  R ADD    0000  GET PARAM: NUMBER OF FULL
             +010200150500+14025300         15.5  STORE    2.53  WORDS TO STORE IN FILE
             +010200150600+12017200         15.6  R ADD    1.72  DECR FILE ADDRESS POINTER
             +010200150700+05025300         15.7  SUB      2.53  (FIRST FREE ADDR IN FILE)
             +010200150800+05025300         15.8  SUB      2.53  X
             +010200150900+05017100         15.9  SUB      1.71  CHECK IF OVERFLOWS
             +010200151000+03151300         15.10 TR +     15.13 FILE HEAD
             +010200151100+12016400         15.11 R ADD    1.64  .*MO0416-7
             +010201151200+000011           15.12 STOP     0011  STOP BECAUSE FILE FULL
             +010200151300+11017100         15.13 ADD      1.71  RETURN
             +010200151400+14017200         15.14 STORE    1.72  FILEAD IN ACC .*ECHO FILEAD:
             +010201151500+010000           15.15 TR       0000  
             +010204                        
             +010205               00       HEADING 
             +010204                        ADD SYNONYM TO FILE
             +010204                        
             +010200160000+12160000         16.0  R ADD    16.0  ADD SYNONYM TO FILE
             +010200160100+01150000         16.1  TR       15.0  RESERVE TWO FULL WORDS IN FILE
             +010201160200+000002           X
             +010200160300+15160700         16.3  STORE A  16.7  SET DEST ADDR FOR FW 1
             +010200160400+11023700         16.4  ADD      2.37  X
             +010200160500+15160900         16.5  STORE A  16.9  SET DEST ADDR FOR FW 2
             +010200160600-12016400         16.6  R ADD    1.64  STORE IN FILE            .*ECHO ADD_SYNONYM
             +010201160700-140000           16.7  STORE    0000  SYN DO NOT USE THIS ADDR .*ECHO DO_NOT_USE:F
             +010200160800-12016200         16.8  R ADD    1.62  STORE IN FILE
             +010201160900-140000           16.9  STORE    0000  SYN USE THIS ADDR        .*ECHO USE_THIS:F
             +010200161000+12015000         16.10 R ADD    1.50  INCR NUMBER OF
             +010200161100+11023800         16.11 ADD      2.38  SYNONYMS DEFINED
             +010200161200+14015000         16.12 STORE    1.50  X
             +010200161300+01040000         16.13 TR       4.0   PROCEED WITH NEXT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        ADD DRUM ASSIGN TO FILE
             +010204                        
             +010200170000+12170000         17.0  R ADD    17.0  ADD DRUM ASSIGN TO FILE
             +010200170100+01150000         17.1  TR       15.0  RESERVE TWO FULL WORDS IN FILE
             +010201170200+000002           X
             +010200170300+15170700         17.3  STORE A  17.7  SET DEST ADDR FOR FW 1
             +010200170400+11023700         17.4  ADD      2.37  X
             +010200170500+15170900         17.5  STORE A  17.9  SET DEST ADDR FOR FW 2
             +010200170600-12016200         17.6  R ADD    1.62  STORE IN FILE          .*ECHO ADD_DR_ASSIGN
             +010201170700-140000           17.7  STORE    0000  SADDR DEFINED          .*ECHO SADDR:F
             +010200170800+12016700         17.8  R ADD    1.67  STORE IN FILE
             +010201170900+140000           17.9  STORE    0000  ACTUAL ADDR OF SADDR   .*ECHO ADDR:
             +010200171000+12015100         17.10 R ADD    1.51  INCR NUMBER OF
             +010200171100+11023800         17.11 ADD      2.38  DRUM ASSINGN DEFINED
             +010200171200+14015100         17.12 STORE    1.51  X
             +010200171300+01040000         17.13 TR       4.0   PROCEED WITH NEXT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        ADD INSTRUCTION TO BATCH
             +010204                        
             +010200180000+12017500         18.0  R ADD    1.75  ADD INSTRUCTION TO BATCH
             +010200180100+04180300         18.1  TR 0     18.3  TRANSFER IF NO DRUM ASSIGN TO TEST
             +010200180200+01190000         18.2  TR       19.0  SET IF NEEDED FILE ADDR FOR SYNONYMS
             +010200180300+12017200         18.3  R ADD    1.72  AND DRUM ASSIGN
             +010200180400+14017400         18.4  STORE    1.74  START ADDR IN FILE OF DRUM ASSIGN DATA
             +010200180500+14017300         18.5  STORE    1.73  START ADDR IN FILE OF SIMBOLIC LOCATIONS
             +010200180600+11015100         18.6  ADD      1.51  
             +010200180700+11015100         18.7  ADD      1.51  
             +010200180800+11015100         18.8  ADD      1.51  
             +010200180900+11015100         18.9  ADD      1.51  
             +010200181000+14017500         18.10 STORE    1.75  START ADDR IN FILE OF SYNONYMS DATA
             +010204                        
             +010205               00       HEADING 
             +010204                        CHECK IF MUST SCAN SYNONYMS AND
             +010204                        DRUM ASSIGNS
             +010204                        
             +010200190000-12016400         19.0  R ADD    1.64  IF INSTR HAS NOT SYMBOLIC ADDR
             +010200190100+04210000         19.1  TR 0     21.0  SKIP SYN/DRUM ASSING SCAN
             +010204                        
             +010204                        SCAN SYNONYMS AND REPLACE
             +010204                        SADDR IF NEEDED
             +010204                        
             +010200190200+12015000         19.2  R ADD    1.50  IF NO SYNONYMS DEFINED
             +010200190300+04200000         19.3  TR 0     20.0  SKIP SYNONYMS SCAN
             +010200190400+12017500         19.4  R ADD    1.75  INIT LOOP AT FILE SCAN ADDRESS
             +010200190500+15190800         19.5  STORE A  19.8  X
             +010200190600+12017600         19.6  R ADD    1.76  END LOOP AT END OF MEM
             +010200190700+15017800         19.7  STORE A  1.78  X
             +010201190800-120000           19.8  R ADD    0000  GET SYN DO NOT USE THIS SADDR FROM FILE
             +010200190900-05016400         19.9  SUB      1.64  CHECK IF SADDR IS SAME AS THE ONE IN INSTR
             +010200191000+04191200         19.10 TR 0     19.12 YES, SYN FOUND, MUST REPLACE
             +010200191100+01191700         19.11 TR       19.17 NO, CHECK NEXT SYN
             +010200191200+12190800         19.12 R ADD    19.8  GET REPLACEMENT SADDR
             +010200191300+05023700         19.13 SUB      2.37  FROM FILE
             +010200191400+15191500         19.14 STORE A  19.15 X
             +010201191500-120000           19.15 R ADD    0000  AND USE IT FOR
             +010200191600-14016400         19.16 STORE    1.64  CURRENT INSTRUCTION
             +010200191700+12190800         19.17 R ADD    19.8  INCR AND LOOP
             +010200191800+05023500         19.18 SUB      2.35  X
             +010200191900+15190800         19.19 STORE A  19.8  X
             +010200192000+12190800         19.20 R ADD    19.8  MUST RELOAD TO HANDLE WRAP ARROUND ADDR 4096
             +010200192100+05017800         19.21 SUB      1.78  X
             +010200192200+04200000         19.22 TR 0     20.0  X
             +010200192300+01190800         19.23 TR       19.8  X
             +010204                        
             +010205               00       HEADING 
             +010204                        SCAN DRUM ASSIGN AND REPLACE
             +010204                        SADDR IF NEEDED
             +010204                        
             +010200200000+12015100         20.0  R ADD    1.51  IF NO DRUM ASSIGN DEFINED
             +010200200100+04210000         20.1  TR 0     21.0  SKIP DRUM ASSIGN SCAN
             +010200200200+12017400         20.2  R ADD    1.74  INIT LOOP AT FILE SCAN ADDRESS
             +010200200300+15200600         20.3  STORE A  20.6  X
             +010200200400+12017500         20.4  R ADD    1.75  END LOOP AT SYNONIM START ADDR
             +010200200500+15017800         20.5  STORE A  1.78  X
             +010201200600-120000           20.6  R ADD    0000  GET DRUM SLOC FROM FILE
             +010200200700-05016400         20.7  SUB      1.64  CHECK IF IS SAME AS THE SADDR IN INSTR
             +010200200800+04201000         20.8  TR 0     20.10 YES, ASSIGN FOUND, MUST REPLACE
             +010200200900+01201700         20.9  TR       20.17 NO, CHECK NEXT SYN
             +010200201000+12200600         20.10 R ADD    20.6  GET REPLACEMENT FOR SADDR
             +010200201100+05023700         20.11 SUB      2.37  FROM FILE
             +010200201200+15201300         20.12 STORE A  20.13 X
             +010201201300+120000           20.13 R ADD    0000  AND USE IT TO PUT ACTUAL ADDRESS
             +010200201400+14016700         20.14 STORE    1.67  IN INSTRUCTION
             +010200201500+12024600         20.15 R ADD    2.46  CLEAR SADDR TO MARK IT
             +010200201600-14016400         20.16 STORE    1.64  AS RESOLVED
             +010200201700+12200600         20.17 R ADD    20.6  INCR AND LOOP
             +010200201800+05023500         20.18 SUB      2.35  X
             +010200201900+15200600         20.19 STORE A  20.6  X
             +010200202000+12200600         20.20 R ADD    20.6  MUST RELOAD TO HANDLE WRAP ARROUND ADDR 4096
             +010200202100+05017800         20.21 SUB      1.78  X
             +010200202200+04210000         20.22 TR 0     21.0  X
             +010200202300+01200600         20.23 TR       20.6  X
             +010204                        
             +010205               00       HEADING 
             +010204                        ADD INSTR TO FILE
             +010204                        
             +010200210000+12210000         21.0  R ADD    21.0  ADD INSTR TO FILE
             +010200210100+01150000         21.1  TR       15.0  RESERVE THREE FULL WORDS IN FILE
             +010201210200+000003           X
             +010200210300+15211100         21.3  STORE A  21.11 SET DEST ADDR FOR FW 1
             +010200210400+11023700         21.4  ADD      2.37  X
             +010200210500+15211300         21.5  STORE A  21.13 SET DEST ADDR FOR FW 2
             +010200210600+11023700         21.6  ADD      2.37  X
             +010200210700+15211500         21.7  STORE A  21.15 SET DEST ADDR FOR HW 3
             +010200210800+11023800         21.8  ADD      2.38  X
             +010200210900+15212500         21.9  STORE A  21.25 SET DEST ADDR FOR HW 4
             +010200211000-12016200         21.10 R ADD    1.62  STORE IN FILE          .*ECHO ADD_INSTR
             +010201211100-140000           21.11 STORE    0000  SLOC OF INSTR          .*ECHO SLOC:F
             +010200211200-12016400         21.12 R ADD    1.64  STORE IN FILE
             +010201211300-140000           21.13 STORE    0000  SADDR OF INSTR         .*ECHO SADDR:F
             +010200211400+12015700         21.14 R ADD    1.57  STORE IN FILE
             +010201211500+140000           21.15 STORE    0000  ACTUAL LOC OF INSTR    .*ECHO CURLOC:
             +010200211600+12016600         21.16 R ADD    1.66  STORE IN FILE
             +010201211700+260012           21.17 A LEFT   0012  X
             +010200211800+11016700         21.18 ADD      1.67  X
             +010200211900+14025400         21.19 STORE    2.54  X
             +010200212000+12016100         21.20 R ADD    1.61  X
             +010200212100+04212400         21.21 TR 0     21.24 X
             +010200212200+06025400         21.22 R SUB    2.54  X
             +010200212300+14025400         21.23 STORE    2.54  X
             +010200212400+12025400         21.24 R ADD    2.54  X
             +010201212500+140000           21.25 STORE    0000  ACTUAL SIGN OPCODE OPADDR INSTR .*ECHO OP:O
             +010200212600+12015200         21.26 R ADD    1.52  INCR NUMBER OF INSTRUCTIONS DEFINED IN BATCH
             +010200212700+11023800         21.27 ADD      2.38  X
             +010200212800+14015200         21.28 STORE    1.52  X
             +010200212900+12015700         21.29 R ADD    1.57  INCR CURRENT LOC
             +010200213000+11023800         21.30 ADD      2.38  X
             +010200213100+14015700         21.31 STORE    1.57  X
             +010200213200+01040000         21.32 TR       4.0   PROCEED WITH NEXT CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        WRITE CARD BUFER (CARD IMAGE)
             +010204                        AND CURRENT LOC
             +010204                        INTO TAPE 0, THEN
             +010204                        GO TO READ NEXT CARD
             +010204                        
             +010200220000+11023700         22.0  ADD      2.37  WRITE CARD BUFER (CARD IMAGE)
             +010200220100+15222400         22.1  STORE A  22.24 IN TAPE 0
             +010201220200+320256           22.2  WRITE    0256  PREPARE TO WRITE ON TAPE 0
             +010200220300+12025000         22.3  R ADD    2.50  INIT CURRENT LOCATION
             +010200220400-14025400         22.4  STORE    2.54  X
             +010200220500+12016000         22.5  R ADD    1.60  IF CARD IS TYPE 0 OR 1 (INSTRUCTIONS)
             +010200220600+05023700         22.6  SUB      2.37  THEN SET CURRENT INSTR LOCATION
             +010200220700+03221000         22.7  TR +     22.10 X
             +010200220800+12015700         22.8  R ADD    1.57  SAVE AS SECOND FULL WORD CURLOC (OR -1)
             +010200220900-14025400         22.9  STORE    2.54  X .*ECHO WRTAPE_CARDIMAGE:
             +010200221000-37025400         22.10 COPY     2.54  X
             +010200221100+12026100         22.11 R ADD    2.61  RESET TO INITIAL COPY LOOP ADDRESS
             +010200221200+15221600         22.12 STORE A  22.16 FOR CARD BUFFER
             +010200221300+12221600         22.13 R ADD    22.16 X
             +010200221400+05024900         22.14 SUB      2.49  X
             +010200221500+14025400         22.15 STORE    2.54  X
             +010201221600-370000           22.16 COPY     0000  COPY WORD TO TAPE
             +010200221700+12221600         22.17 R ADD    22.16 X
             +010200221800+05023700         22.18 SUB      2.37  INCR CDBUF ADDR
             +010200221900+15221600         22.19 STORE A  22.16 X
             +010200222000+05025400         22.20 SUB      2.54  CHECK FOR END
             +010200222100+04222300         22.21 TR 0     22.23 X
             +010200222200+01221600         22.22 TR       22.16 LOOP
             +010201222300+322052           22.23 WRITE    2052  INSURE THAT MQ NOT IN USE
             +010201222400+010000           22.24 TR       0000  EXIT ROUTINE
             +010204                        
             +010204                        
             +010205               00       HEADING 
             +010204                        SCAN CURRENT INSTR BATCH LOOKING
             +010204                        FOR A SLOC THAT MATCHES SADDR
             +010204                        RETURN 0 IF NOT FOUND,
             +010204                        RETURN 1 IF FOUND (ACTUAL ADDR
             +010204                        STORED IN RESULT)
             +010204                        
             +010200230000+11023700         23.0  ADD      2.37  SCAN CURRENT INSTR BATCH LOOKING FOR A SLOC THAT MATCHES SADDR
             +010200230100+15233200         23.1  STORE A  23.32 SET ROUTINE EXIT
             +010204                        
             +010200230200+12017300         23.2  R ADD    1.73  SET END OF LOOP VALUE (FILEAD POINTS TO FIRST INSTR CARD OF BATCH)
             +010200230300+15017900         23.3  STORE A  1.79  X .*ECHO FILESLOC:
             +010200230400+05023300         23.4  SUB      2.33  X
             +010200230500+15231300         23.5  STORE A  23.13 X .*M4066-30F
             +010200230600+15230700         23.6  STORE A  23.7  X
             +010201230700-120000           23.7  R ADD    0000  CHECK FIRST
             +010200230800-05016400         23.8  SUB      1.64  X .*ECHO SCAN: IF SAME AS SADDR GOTO SADDR FOUND
             +010200230900+04232600         23.9  TR 0     23.26 IF SLOC LESS THAN SADDR THEN SADDR NOT IN CURRENT BATCH
             +010200231000+03232400         23.10 TR +     23.24 X
             +010204                        
             +010200231100+12017200         23.11 R ADD    1.72  INIT LOOP ADDR BATCH (FILEAD POINTS TO LAST INSTR OF BATCH)
             +010200231200+15231300         23.12 STORE A  23.13 THAT MATCH CURRENT INSTR SADDR
             +010204                        
             +010201231300-120000           23.13 R ADD    0000  GET SLOC FOR INSTR IN BATCH
             +010200231400-05016400         23.14 SUB      1.64  IF SAME AS SADDR GOTO SADDR FOUND
             +010200231500+04232600         23.15 TR 0     23.26 IF SLOC LESS THAN SADDR THEN SADDR NOT IN CURRENT BATCH
             +010200231600+03231800         23.16 TR +     23.18 X
             +010200231700+01232400         23.17 TR       23.24 X
             +010200231800+12231300         23.18 R ADD    23.13 CONTINUE SCANNING BATCH
             +010200231900+05023300         23.19 SUB      2.33  X
             +010200232000+15231300         23.20 STORE A  23.13 X
             +010200232100+05017900         23.21 SUB      1.79  X
             +010200232200+04232400         23.22 TR 0     23.24 END OF SCAN, NOT FOUND
             +010200232300+01231300         23.23 TR       23.13 X
             +010200232400+12024600         23.24 R ADD    2.46  SADDR NOT FOUND IN BATCH
             +010200232500+01233200         23.25 TR       23.32 X .*ECHO NOTFOUND
             +010200232600+12231300         23.26 R ADD    23.13 SADDR FOUND IN BATCH
             +010200232700+05023500         23.27 SUB      2.35  SO GET THE ACTUAL LOCATION OF THE INSTR FOUND
             +010200232800+15232900         23.28 STORE A  23.29 X
             +010201232900+120000           23.29 R ADD    0000  GET CURLOC
             +010200233000+14025400         23.30 STORE    2.54  RESULT IS THE ACTUAL LOCATION FOR SADDR
             +010200233100+12023800         23.31 R ADD    2.38  X .*ECHO FOUND_ADDR:
             +010201233200+010000           23.32 TR       0000  
             +010204                        
             +010205               00       HEADING 
             +010204                        SCAN SYMBOLIC ADDR FILE LOOKING
             +010204                        FOR A GIVEN SYMBOL SADDR
             +010204                        RETURN 0 IF NOT FOUND,
             +010204                        RETURN 1 IF FOUND (ACTUAL ADDR
             +010204                        STORED IN RESULT, MINUS1 IF SADDR
             +010204                        BUT IS UNRESOLVED YET)
             +010204                        
             +010200240000+11023700         24.0  ADD      2.37  SCAN SYMBOLIC ADDR FILE LOOKING FOR SADDR
             +010200240100+15242500         24.1  STORE A  24.25 SET ROUTINE EXIT
             +010204                        
             +010200240200+12017100         24.2  R ADD    1.71  SET END OF LOOP VALUE
             +010200240300+15017900         24.3  STORE A  1.79  X
             +010200240400+12017000         24.4  R ADD    1.70  INIT LOOP TOP OF FILE
             +010200240500+15240800         24.5  STORE A  24.8  THAT MATCH CURRENT INSTR SADDR
             +010200240600+05017100         24.6  SUB      1.71  
             +010200240700+04241700         24.7  TR 0     24.17 SYMBOL TABLE EMPTY, SO SYMBOL NOT FOUND
             +010204                        
             +010201240800-120000           24.8  R ADD    0000  GET SADDR NAME OF CURRENT SYMBOLIC ADDRESS
             +010200240900-05016400         24.9  SUB      1.64  IF SAME AS SEARCHED SADDR GOTO SYMBOL FOUND
             +010200241000+04241900         24.10 TR 0     24.19 X
             +010200241100+12240800         24.11 R ADD    24.8  CONTINUE SCANNING BATCH
             +010200241200+05023500         24.12 SUB      2.35  X
             +010200241300+15240800         24.13 STORE A  24.8  X
             +010200241400+05017900         24.14 SUB      1.79  X
             +010200241500+04241700         24.15 TR 0     24.17 END OF SCAN, NOT FOUND
             +010200241600+01240800         24.16 TR       24.8  X
             +010200241700+12024600         24.17 R ADD    2.46  SADDR NOT FOUND IN BATCH
             +010200241800+01242500         24.18 TR       24.25 X  .*ECHO NOTFOUND
             +010200241900+12240800         24.19 R ADD    24.8  SADDR FOUND IN BATCH
             +010200242000+05023700         24.20 SUB      2.37  SO GET THE ACTUAL LOCATION OF THE INSTR FOUND
             +010200242100+15242200         24.21 STORE A  24.22 X
             +010201242200+120000           24.22 R ADD    0000  GET ADDR
             +010200242300+14025400         24.23 STORE    2.54  RESULT IS THE ACTUAL LOCATION FOR SADDR
             +010200242400+12023800         24.24 R ADD    2.38  X  .*ECHO FOUND_ADDR:
             +010201242500+010000           24.25 TR       0000  
             +010204                        
             +010205               00       HEADING 
             +010204                        PROCESS INSTRUCTION BATCH
             +010204                        
             +010200250000+12015200         25.0  R ADD    1.52  IF NO INSTRUCTIONS IN THIS BATCH
             +010200250100+04040000         25.1  TR 0     4.0   PROCEED WITH NEXT CARD .*ECHO NINST_BATCH:
             +010204                        
             +010200250200+12017300         25.2  R ADD    1.73  GET END OF BATCH ADDR + 1 FULL WORD
             +010200250300+11023700         25.3  ADD      2.37  X .*MO7740-40F
             +010200250400+15017800         25.4  STORE A  1.78  SET AS END OF LOOP VALUE
             +010200250500+12017200         25.5  R ADD    1.72  INIT LOOP START AT FILEAD + 1 FULL WORD
             +010200250600+11023700         25.6  ADD      2.37  X
             +010200250700+15260000         25.7  STORE A  26.0  X
             +010204                        
             +010204                        SCAN BATCH TO RESOLVE LOCAL
             +010204                        SADDR REFERENCES
             +010204                        
             +010205               00       HEADING 
             +010201260000-120000           26.0  R ADD    0000  GET SYMBOLIC ADDR OF CURRENT INSTR IN SADDR
             +010200260100+04280000         26.1  TR 0     28.0  IF SADDR IS ZERO THEN NOTHING TO RESOLVE SO PROCEED TO NEXT INSTR
             +010200260200-14016400         26.2  STORE    1.64  X .*ECHO SEARCH_IN_BATCH_SLOC:F
             +010204                        
             +010200260300+12260300         26.3  R ADD    26.3  SCAN CURRENT INST BATCH LOOKING FOR A SLOC THAT MATCHES SADDR
             +010200260400+01230000         26.4  TR       23.0  RETURN 0 IF NOT FOUND, ACTUAL LOCATION IN RESULT IF FOUND
             +010200260500+04280000         26.5  TR 0     28.0  NOT FOUND SO PROCEED TO NEXT INSTR
             +010204                        
             +010204                        RESOLVE SADDR IN CURRENT
             +010204                        INST USING RESULT (CONTAINS THE ACTUAL LOCATION)
             +010204                        
             +010205               00       HEADING 
             +010200270000+12260000         27.0  R ADD    26.0  GET SADDR ADDRESS OF CURRENT INSTR SCANNED
             +010200270100+15270500         27.1  STORE A  27.5  X
             +010200270200+05023600         27.2  SUB      2.36  X
             +010200270300+15270700         27.3  STORE A  27.7  X
             +010200270400+12024600         27.4  R ADD    2.46  X
             +010201270500-140000           27.5  STORE    0000  CLEAR SADDR TO MARK IT AS RESOLVED
             +010200270600+12025400         27.6  R ADD    2.54  SET RESULT AS OPADDR FOR OPCODE
             +010201270700+150000           27.7  STORE A  0000  IN ACTUAL INSTRUCTION .*ECHO RM_SADDR_SET_OPADDR
             +010204                        
             +010205               00       HEADING 
             +010204                        SELECT NEXT INSTR FORM BATCH
             +010204                        
             +010200280000+12260000         28.0  R ADD    26.0  INCR POINTER TO SELECT SADDR
             +010200280100+05023300         28.1  SUB      2.33  OF NEXT INSTR IN BATCH
             +010200280200+15260000         28.2  STORE A  26.0  X
             +010200280300+12260000         28.3  R ADD    26.0  X
             +010200280400+05017800         28.4  SUB      1.78  CHECK END OF LOOP
             +010200280500+04290000         28.5  TR 0     29.0  
             +010200280600+01260000         28.6  TR       26.0  X
             +010204                        
             +010205               00       HEADING 
             +010204                        WRITE BATCH INTO TAPE 1
             +010204                        
             +010201290000+320257           29.0  WRITE    0257  PREPARE TO WRITE ON TAPE 1 .*ECHO BATCH_TO_TAPE_START
             +010200290100+12017300         29.1  R ADD    1.73  LOOP STARTS AT FIRST CARD IN BATCH
             +010200290200+05023300         29.2  SUB      2.33  (STORE FIRST IN FILE, SO IS AT FILESLOC)
             +010200290300+15290400         29.3  STORE A  29.4  FOR INSTRUCTION BATCH
             +010201290400-370000           29.4  COPY     0000  EACH INST IS 3 FULL WORDS
             +010200290500+11023700         29.5  ADD      2.37  STORE THEM IN TAPE
             +010200290600+15290700         29.6  STORE A  29.7  X
             +010201290700-370000           29.7  COPY     0000  X
             +010200290800+11023700         29.8  ADD      2.37  X
             +010200290900+15291000         29.9  STORE A  29.10 X
             +010201291000-370000           29.10 COPY     0000  X
             +010200291100+05023500         29.11 SUB      2.35  X
             +010200291200+05017200         29.12 SUB      1.72  X
             +010200291300+04300000         29.13 TR 0     30.0  EXIT IF END OF BATCH REACHED
             +010200291400+11017200         29.14 ADD      1.72  X
             +010200291500+01290200         29.15 TR       29.2  LOOP NEXT BATCH INSTR
             +010204                        
             +010205               00       HEADING 
             +010204                        
             +010201300000+322052           30.0  WRITE    2052  INSURE THAT MQ NOT IN USE
             +010200300100+12024600         30.1  R ADD    2.46  RESET NUM OF INSTR IN BATCH
             +010200300200+14015200         30.2  STORE    1.52  X
             +010200300300+12015400         30.3  R ADD    1.54  INCR NUMBER OF BATCHES SAVED IN TAPE
             +010200300400+11023800         30.4  ADD      2.38  
             +010200300500+14015400         30.5  STORE    1.54  X .*ECHO NBATCHES_IN_TAPE:
             +010204                        
             +010204                        STORE UNRESOLVED SADDR
             +010204                        OF BATCH INSTR INTO FILE TOP
             +010204                        
             +010200300600+12017300         30.6  R ADD    1.73  INIT LOOP ON BATCH INST
             +010200300700+11023700         30.7  ADD      2.37  X .*ECHO SCAN_UNRESOLVED
             +010200300800+15017800         30.8  STORE A  1.78  X
             +010200300900+12017200         30.9  R ADD    1.72  X
             +010200301000+11023700         30.10 ADD      2.37  X
             +010200301100+15301200         30.11 STORE A  30.12 X
             +010201301200-120000           30.12 R ADD    0000  GET SADDR
             +010200301300+04303300         30.13 TR 0     30.33 ZERO IF NO SYMBOLIC ADDR, GO TO NEXT INSTR
             +010200301400-14016400         30.14 STORE    1.64  X .*ECHO SCAN_SYMB:F
             +010204                        
             +010200301500+12301500         30.15 R ADD    30.15 SCAN SYMBOLIC ADDR FILE LOOKING FOR SADDR
             +010200301600+01240000         30.16 TR       24.0  RETURN 0 IF NOT FOUND, ACTUAL ADDR OF SYMBOL IN RESULT IF FOUND (RESULT IS MINUS1 IF FOUND BUF SADDR UNRESOLVED)
             +010200301700+05023800         30.17 SUB      2.38  X
             +010200301800+04303300         30.18 TR 0     30.33 IF FOUND (SYMB ALREADY IN SYMBOL TABLE) THEN PROCEED TO NEXT INSTR
             +010204                        
             +010200301900+12017100         30.19 R ADD    1.71  ADD SADDR TO UNRESOLVED SYMBOLS LIST
             +010200302000+15302600         30.20 STORE A  30.26 X
             +010200302100+11023700         30.21 ADD      2.37  X
             +010200302200+15302800         30.22 STORE A  30.28 X
             +010200302300+11023700         30.23 ADD      2.37  X
             +010200302400+14017100         30.24 STORE    1.71  X
             +010200302500-12016400         30.25 R ADD    1.64  X
             +010201302600-140000           30.26 STORE    0000  X .*ECHO ADD_AS_NORESOLVED:F
             +010200302700+12025000         30.27 R ADD    2.50  X
             +010201302800-140000           30.28 STORE    0000  X
             +010200302900+12015300         30.29 R ADD    1.53  INCR NUM OF UNDEFINED SYMBOLIC ADDR
             +010200303000+11023800         30.30 ADD      2.38  X
             +010200303100+14015300         30.31 STORE    1.53  X
             +010200303200+01303300         30.32 TR       30.33 X
             +010204                        
             +010200303300+12301200         30.33 R ADD    30.12 SELECT NEXT BATCH INSTR
             +010200303400+05023300         30.34 SUB      2.33  X
             +010200303500+15301200         30.35 STORE A  30.12 X
             +010200303600+12301200         30.36 R ADD    30.12 X
             +010200303700+05017800         30.37 SUB      1.78  EXIT IF END OF BATCH REACHED
             +010200303800+04304000         30.38 TR 0     30.40 X
             +010200303900+01301200         30.39 TR       30.12 LOOP TO PROCESS NEXT BATCH INSTR
             +010204                        
             +010200304000+12017300         30.40 R ADD    1.73  CLEAR BATCH INSTR NN FILE
             +010200304100+14017200         30.41 STORE    1.72  
             +010200304200+01040000         30.42 TR       4.0   PROCEED WITH NEXT CARD (FIRST CARD OF NEXT BATCH)
             +010204                        
             +010204                        
             +010205               00       HEADING 
             +010204                        END OF CARD READING SO PASS 1 FINISHED
             +010204                        WRITE END OF FILE
             +010204                        AND REWIND TAPES 0 AND 1
             +010204                        
             +010200310000+12015200         31.0  R ADD    1.52  X
             +010200310100+04310300         31.1  TR 0     31.3  X
             +010201310200+000012           31.2  STOP     0012  STOP BECAUSE MISSING A HEADING CARD AS PROGRAM END
             +010201310300+330256           31.3  WRITE EF 0256  X
             +010201310400+330257           31.4  WRITE EF 0257  X
             +010201310500+340256           31.5  REWIND   0256  X
             +010201310600+340257           31.6  REWIND   0257  X
             +010200310700+12015300         31.7  R ADD    1.53  GET NUM OF UNDEFINED SYMBOLIC ADDR
             +010200310800+04340200         31.8  TR 0     34.2  IF NO UNDEFINED SADDR PROCEES TO PASS 3
             +010200310900+12015400         31.9  R ADD    1.54  IF NUMBER OF BATCHES SAVED IN TAPE IS ONE
             +010200311000+05023800         31.10 SUB      2.38  THEN GOTO PASS3
             +010200311100+04340200         31.11 TR 0     34.2  
             +010204                        
             +010205               00       HEADING 
             +010204                        START OF PASS 2
             +010204                        LOAD BATCH FROM TAPE 1
             +010204                        
             +010201320000+100000           32.0  NOOP     0000  
             +010200320100+12017600         32.1  R ADD    1.76  RESET FILE AS EMPTY
             +010200320200+14017200         32.2  STORE    1.72  X
             +010200320300+14017300         32.3  STORE    1.73  X
             +010204                        
             +010201320400+300257           32.4  READ     0257  READ BATCH IN TAPE .*ECHO BATCH_START
             +010200320500-37016200         32.5  COPY     1.62  IN SLOC, SADDR, RESULT
             +010200320600+01320900         32.6  TR       32.9  X
             +010200320700+01340000         32.7  TR       34.0  END OF BATCHES
             +010200320800+01330000         32.8  TR       33.0  END OF RECORD SO GO TO SCAN BATCH JUST LOADED
             +010204                        
             +010200320900+12017200         32.9  R ADD    1.72  DECR FILE ADDRESS POINTER
             +010200321000+05023300         32.10 SUB      2.33  
             +010200321100+14017200         32.11 STORE    1.72  FILEAD IN ACC .*ECHO FILEAD:
             +010200321200+05017100         32.12 SUB      1.71  CHECK IF OVERFLOWS
             +010200321300+03321600         32.13 TR +     32.16 FILE HEAD
             +010200321400+12016400         32.14 R ADD    1.64  LAST SYMB ADDR STORED
             +010201321500+000011           32.15 STOP     0011  STOP BECAUSE FILE FULL
             +010204                        
             +010200321600-37016400         32.16 COPY     1.64  X
             +010204                        
             +010200321700+12017200         32.17 R ADD    1.72  ADD INSTR TO FILE
             +010200321800+15322500         32.18 STORE A  32.25 SET DEST ADDR FOR FW 1
             +010200321900+11023700         32.19 ADD      2.37  X
             +010200322000+15322700         32.20 STORE A  32.27 SET DEST ADDR FOR FW 2
             +010200322100+11023700         32.21 ADD      2.37  X
             +010200322200+15322900         32.22 STORE A  32.29 SET DEST ADDR FOR HW 3
             +010204                        
             +010200322300-37025400         32.23 COPY     2.54  X
             +010204                        
             +010200322400-12016200         32.24 R ADD    1.62  STORE IN FILE          .*ECHO READ_INSTR
             +010201322500-140000           32.25 STORE    0000  SLOC OF INSTR          .*ECHO SLOC:F
             +010200322600-12016400         32.26 R ADD    1.64  STORE IN FILE
             +010201322700-140000           32.27 STORE    0000  SADDR OF INSTR         .*ECHO SADDR:F
             +010200322800-12025400         32.28 R ADD    2.54  STORE IN FILE
             +010201322900-140000           32.29 STORE    0000  ACTUAL LOC OF INSTR    .*ECHO CURLOC_OPCODE:
             +010200323000+01320500         32.30 TR       32.5  
             +010204                        RESOLVE UNDEF SYMBOLS IN FILE USING BATCH INSTR SLOC
             +010204                        
             +010205               00       HEADING 
             +010200330000+12017100         33.0  R ADD    1.71  INIT FILEHED AND FILETOP TO
             +010200330100+15017800         33.1  STORE A  1.78  SACN ALL SYMBOLS
             +010200330200+12017000         33.2  R ADD    1.70  X
             +010200330300+15330400         33.3  STORE A  33.4  X
             +010204                        
             +010201330400-120000           33.4  R ADD    0000  GET SYMBOL TABLE SADDR
             +010200330500-14016400         33.5  STORE    1.64  
             +010200330600+12330400         33.6  R ADD    33.4  .*ECHO SCAN_SADDR:F
             +010200330700+05023700         33.7  SUB      2.37  
             +010200330800+15331200         33.8  STORE A  33.12 
             +010204                        
             +010200330900+12330900         33.9  R ADD    33.9  SCAN CURRENT INST BATCH LOOKING FOR A SLOC THAT MATCHES SADDR
             +010200331000+01230000         33.10 TR       23.0  RETURN 0 IF NOT FOUND, ACTUAL LOCATION IN RESULT IF FOUND
             +010200331100+04332800         33.11 TR 0     33.28 NOT FOUND SO PROCEED TO NEXT SYMBOL
             +010204                        
             +010201331200+120000           33.12 R ADD    0000  GET ACTUAL ADDR OF SYMBOL IN SYMBOL TABLE
             +010200331300+14016200         33.13 STORE    1.62  IF THE SADDR WAS UNDEFINED .*ECHO AT_LOC:
             +010200331400+05025000         33.14 SUB      2.50  THEN
             +010200331500+04332400         33.15 TR 0     33.24 TRANSFER TO BSCANDEF
             +010200331600+12016200         33.16 R ADD    1.62  IF THE SADDR WAS REDEFINED TWICE
             +010200331700+05025100         33.17 SUB      2.51  THEN
             +010200331800+04332800         33.18 TR 0     33.28 PROCEED TO NEXT SYMBOL
             +010204                        
             +010200331900+12016200         33.19 R ADD    1.62  SADDR SYMBOL IS ALREADY DEFINED. CHECK NOT REDEFINED WITH DIFFERENT ACTUAL ADDR
             +010200332000+05025400         33.20 SUB      2.54  
             +010200332100+04332800         33.21 TR 0     33.28 SAME ACTUAL ADDRESS SO PROCEED TO NEXT SYMBOL
             +010200332200+12025100         33.22 R ADD    2.51  SYMBOL REDEFINED SO STORE MINUS2 VALUE
             +010200332300+14025400         33.23 STORE    2.54  
             +010204                        
             +010200332400+12331200         33.24 R ADD    33.12 DEFINE ACTUAL ADDRESS FOR SYMBOL SADDR
             +010200332500+15332700         33.25 STORE A  33.27 
             +010200332600+12025400         33.26 R ADD    2.54  
             +010201332700+140000           33.27 STORE    0000  
             +010204                        
             +010200332800+12330400         33.28 R ADD    33.4  
             +010200332900+05023500         33.29 SUB      2.35  
             +010200333000+15330400         33.30 STORE A  33.4  
             +010200333100+05017800         33.31 SUB      1.78  
             +010200333200+04320100         33.32 TR 0     32.1  
             +010200333300+01330400         33.33 TR       33.4  
             +010204                        
             +010205               00       HEADING 
             +010204                        
             +010204                        REW TAPE 1, START PASS 3
             +010201340000+340257           34.0  REWIND   0257  
             +010200340100+01340200         34.1  TR       34.2  .*M1142-20F:SYMB_TABLE
             +010204                        LOAD BATCH FROM TAPE 1
             +010204                        
             +010200340200+12017600         34.2  R ADD    1.76  RESET FILE AS EMPTY
             +010200340300+14017200         34.3  STORE    1.72  X .*ECHO READ_BATCH_FROM_TAPE
             +010200340400+14017300         34.4  STORE    1.73  X
             +010204                        
             +010201340500+300257           34.5  READ     0257  READ INSTRUCTION FROM BATCH IN TAPE 1
             +010200340600-37016200         34.6  COPY     1.62  IN SLOC, SADDR, RESULT
             +010200340700+01341000         34.7  TR       34.10 X
             +010200340800+01373300         34.8  TR       37.33 END OF BATCHES
             +010200340900+01350000         34.9  TR       35.0  END OF RECORD SO GO TO PROCESS BATCH JUST LOADED
             +010204                        
             +010200341000+12017200         34.10 R ADD    1.72  DECR FILE ADDRESS POINTER
             +010200341100+05023300         34.11 SUB      2.33  
             +010200341200+14017200         34.12 STORE    1.72  FILEAD IN ACC .*ECHO FILEAD:
             +010200341300+05017100         34.13 SUB      1.71  CHECK IF OVERFLOWS
             +010200341400+03341700         34.14 TR +     34.17 FILE HEAD
             +010200341500+12016400         34.15 R ADD    1.64  LAST SYMB ADDR STORED
             +010201341600+000011           34.16 STOP     0011  STOP BECAUSE FILE FULL
             +010204                        
             +010200341700-37016400         34.17 COPY     1.64  X
             +010204                        
             +010200341800+12017200         34.18 R ADD    1.72  ADD INSTR TO FILE
             +010200341900+15342600         34.19 STORE A  34.26 SET DEST ADDR FOR FW 1
             +010200342000+11023700         34.20 ADD      2.37  X
             +010200342100+15342800         34.21 STORE A  34.28 SET DEST ADDR FOR FW 2
             +010200342200+11023700         34.22 ADD      2.37  X
             +010200342300+15343000         34.23 STORE A  34.30 SET DEST ADDR FOR HW 3
             +010204                        
             +010200342400-37025400         34.24 COPY     2.54  X
             +010204                        
             +010200342500-12016200         34.25 R ADD    1.62  STORE IN FILE        .*ECHO READ_INSTR
             +010201342600-140000           34.26 STORE    0000  SLOC OF INSTR        .*ECHO SLOC:F
             +010200342700-12016400         34.27 R ADD    1.64  STORE IN FILE
             +010201342800-140000           34.28 STORE    0000  SADDR OF INSTR       .*ECHO SADDR:F
             +010200342900-12025400         34.29 R ADD    2.54  STORE IN FILE
             +010201343000-140000           34.30 STORE    0000  ACTUAL LOC OF INSTR  .*ECHO CURLOC_OPCODE:F
             +010200343100+01340600         34.31 TR       34.6  
             +010204                        
             +010205               00       HEADING 
             +010204                        PROCESS INSTR FROM BATCH
             +010204                        
             +010200350000+12017300         35.0  R ADD    1.73  GET END OF BATCH ADDR + 1 FULL WORD
             +010200350100+05023500         35.1  SUB      2.35  X
             +010200350200+15350600         35.2  STORE A  35.6  SET AS START OF OF LOOP VALUE
             +010200350300+12017200         35.3  R ADD    1.72  INIT LOOP START AT FILEAD + 1 FULL WORD
             +010200350400+05023500         35.4  SUB      2.35  X
             +010200350500+15017800         35.5  STORE A  1.78  X .*ECHO PROCESS_BATCH
             +010204                        
             +010201350600-120000           35.6  R ADD    0000  GET SYMBOLIC ADDR OF CURRENT INSTR IN SADDR
             +010200350700-14016400         35.7  STORE    1.64  X    .*ECHO SADDR:F
             +010200350800+12350600         35.8  R ADD    35.6  X
             +010200350900+05023700         35.9  SUB      2.37  X
             +010200351000+15351100         35.10 STORE A  35.11 X
             +010201351100-120000           35.11 R ADD    0000  X
             +010200351200-14016800         35.12 STORE    1.68  GET CURLOC (FROM LEFT HWORD)
             +010200351300+12016800         35.13 R ADD    1.68  AND OPCODE (FROM RIGHT HWORD)
             +010200351400+14015700         35.14 STORE    1.57  X
             +010200351500+12016900         35.15 R ADD    1.69  X
             +010200351600+14016600         35.16 STORE    1.66  X
             +010204                        
             +010205               00       HEADING 
             +010204                        GET PUNCHED CARD FROM TAPE 0
             +010204                        
             +010200360000+12015700         36.0  R ADD    1.57  
             +010201360100+100000           36.1  NOOP     0000  .*ECHO CURLOC:
             +010200360200+12360200         36.2  R ADD    36.2  .*ECHO OPCODE:O
             +010200360300+01380000         36.3  TR       38.0  
             +010200360400+12025400         36.4  R ADD    2.54  
             +010200360500+05015700         36.5  SUB      1.57  .*ECHO CARD_LOC:
             +010200360600+04370000         36.6  TR 0     37.0  IF IS CARD BEING PROCESSED FROM BATCH, GO TO LOP3
             +010204                        
             +010200360700+12025400         36.7  R ADD    2.54  IF RESULT ID MINUS2 THEN IS EOF
             +010200360800+05025100         36.8  SUB      2.51  AND THEN TRANSFER TO PROCESS
             +010200360900+04373300         36.9  TR 0     37.33 END OF BATCHES
             +010204                        
             +010204                        
             +010200361000+12361000         36.10 R ADD    36.10 PRINT NON INSTR CARD
             +010200361100+01390000         36.11 TR       39.0  
             +010201361200+000000           NO ACTUAL CURLOC OPCODE
             +010200361300+01360000         36.13 TR       36.0  
             +010204                        
             +010205               00       HEADING 
             +010204                        RESOLVE UNDEF SADDR IN BATCH
             +010204                        INSTR USING SYMBOLS IN FILE
             +010204                        
             +010200370000-12016400         37.0  R ADD    1.64  GET SADDR OF INSTRCTION
             +010200370100+04371900         37.1  TR 0     37.19 IF ZERO IS AN ACTUAL ADDR (NOT SYMBOLIC) SO TRANSFER
             +010204                        
             +010200370200+12370200         37.2  R ADD    37.2  SCAN SYMBOLIC ADDR FILE LOOKING FOR SADDR
             +010200370300+01240000         37.3  TR       24.0  RETURN 0 IF NOT FOUND, ACTUAL ADDR OF SYMBOL IN RESULT IF FOUND (RESULT IS MINUS1 IF FOUND BUF SADDR UNRESOLVED)
             +010200370400+04372600         37.4  TR 0     37.26 IF NOT FOUND TR TO ERROR STOP (SHOULD NOT OCCURS)
             +010200370500+12025400         37.5  R ADD    2.54  IF FOUND BUT SADDR'S LOC IS -2 THEN
             +010200370600+05025100         37.6  SUB      2.51  THE SYMBOLIC SADDR HAS BEEN DEFINED TWICE WITH
             +010200370700+04371600         37.7  TR 0     37.16 TWO DIFFERENT LOCATIOS. TR TO SIGNAL IT
             +010200370800+12025400         37.8  R ADD    2.54  IF FOUND BUT SADDR'S LOC IS -1 THEN
             +010200370900+05025000         37.9  SUB      2.50  THE SYMBOLIC SADDR HAS NOT BEEN RESOLVED
             +010200371000+04371900         37.10 TR 0     37.19 LEAVE SADDR UNTOUCHED AND TRANSFER
             +010200371100+12025400         37.11 R ADD    2.54  AT LAST ... RESULT HOLDS THE ACTUAL LOCATION FOR SADDR
             +010200371200+15016600         37.12 STORE A  1.66  STORE IT IN OPCODE AS ACUAL ADDRESS
             +010200371300+12024600         37.13 R ADD    2.46  PUT ZERO ON SDAAR TO SIGNAL IT HAS BEEN
             +010200371400-14016400         37.14 STORE    1.64  RESOLVED
             +010200371500+01371900         37.15 TR       37.19 X
             +010200371600+12025100         37.16 R ADD    2.51  X
             +010200371700+14016400         37.17 STORE    1.64  X
             +010200371800+01371900         37.18 TR       37.19 X
             +010204                        
             +010200371900+12371900         37.19 R ADD    37.19 PRINT INST CARD
             +010200372000+01390000         37.20 TR       39.0  
             +010201372100+000001           WITH ACTUAL CURLOC OPCODE, ADDED TO OUTPUT BINARY CARD
             +010204                        
             +010200372200-12016400         37.22 R ADD    1.64  ZERO IS SADDR OK, POSITIVE IS UNDEF, NEGATIVE IS DEFINED TWICE
             +010200372300+04372700         37.23 TR 0     37.27 X
             +010200372400+03372600         37.24 TR +     37.26 STOP IF SADDR NOT OK
             +010201372500+000021           37.25 STOP     0021  STOP BECAUSE SADDR DEFINED TWICE
             +010201372600+000020           37.26 STOP     0020  STOP BECAUSE SADDR NOT FOUND
             +010204                        
             +010200372700+12350600         37.27 R ADD    35.6  INCR POINTER TO SELECT SADDR
             +010200372800+11023300         37.28 ADD      2.33  OF NEXT INSTR IN BATCH
             +010200372900+15350600         37.29 STORE A  35.6  X
             +010200373000+05017800         37.30 SUB      1.78  CHECK END OF LOOP
             +010200373100+04340200         37.31 TR 0     34.2  X
             +010200373200+01350600         37.32 TR       35.6  X
             +010204                        
             +010200373300+12373300         37.33 R ADD    37.33 PRINT INST CARD
             +010200373400+01390000         37.34 TR       39.0  FLUSH PENDING DATA TO OUTPUT BINARY CARD
             +010201373500+000002           
             +010200373600+01500000         37.36 TR       50.0  
             +010204                        
             +010205               00       HEADING 
             +010204                        READ CARD IMAGE FROM TAPE
             +010204                        SET CTYPE VARIABLE WITH CARD TYPE
             +010204                        SET RESULT VARIABLE WITH ITS ACTUAL LOCATION (CURLOC)
             +010204                        IF IS AN INSTRUCTION, SET -1 IF IS NOT AN
             +010204                        INSTRUCTION (COMMENT, HEADING, ...), SET -2 IF END OF FILE
             +010204                        
             +010200380000+11023700         38.0  ADD      2.37  READ CARD IMAGE FROM TAPE
             +010200380100+15381800         38.1  STORE A  38.18 X
             +010201380200+300256           38.2  READ     0256  PREPARE TO READ FROM TAPE 0
             +010200380300+12026100         38.3  R ADD    2.61  RESET TO INITIAL COPY LOOP ADDRESS
             +010200380400+15380900         38.4  STORE A  38.9  FOR CARD BUFFER
             +010200380500-37025400         38.5  COPY     2.54  X .*ECHO RDTAPE_CARDIMAGE
             +010200380600+01380900         38.6  TR       38.9  X
             +010200380700+01381600         38.7  TR       38.16 EXIT BECAUSE EOF
             +010200380800+01381800         38.8  TR       38.18 EXIT BECAUSE END OF RECORD
             +010201380900-370000           38.9  COPY     0000  COPY WORD FROM TAPE
             +010200381000+01381300         38.10 TR       38.13 X
             +010200381100+01381600         38.11 TR       38.16 EXIT BECAUSE EOF
             +010200381200+01381800         38.12 TR       38.18 EXIT BECAUSE END OF RECORD
             +010200381300+11023700         38.13 ADD      2.37  INCR CDBUF ADDR
             +010200381400+15380900         38.14 STORE A  38.9  X
             +010200381500+01380900         38.15 TR       38.9  X
             +010200381600+12025100         38.16 R ADD    2.51  SIGNAR EOF RETURNING
             +010200381700+14025400         38.17 STORE    2.54  VALUE -2 IN RESULT
             +010201381800+010000           38.18 TR       0000  EXIT ROUTINE
             +010204                        
             +010204                        
             +010205               00       HEADING 
             +010204                        PRINT CARD
             +010204                        IF PARAM IS ZERO IS A NON INSTRUCTION
             +010204                        IF PARAM IS ONE IS AN INSTRUCTION, ALSO
             +010204                        ADD THE INSTRUCTION TO THE PUNCH OUTPUT BUFFER
             +010204                        IF PARAM IS TWO FLUSH AND PUNCH OUTPUT BINARY CARD
             +010204                        
             +010200390000+11023700         39.0  ADD      2.37  
             +010200390100+15390400         39.1  STORE A  39.4  
             +010200390200+11023800         39.2  ADD      2.38  
             +010200390300+15490000         39.3  STORE A  49.0  
             +010201390400+120000           39.4  R ADD    0000  
             +010200390500+14490200         39.5  STORE    49.2  X .*ECHO PRINT_MODE:
             +010200390600+05023700         39.6  SUB      2.37  
             +010200390700+04460000         39.7  TR 0     46.0  
             +010204                        
             +010200390800+12026100         39.8  R ADD    2.61  RESET TO INITIAL COPY LOOP ADDRESS
             +010200390900+15391400         39.9  STORE A  39.14 FOR CARD BUFFER
             +010200391000+15392200         39.10 STORE A  39.22 X
             +010200391100+12391400         39.11 R ADD    39.14 X
             +010200391200+05024900         39.12 SUB      2.49  X
             +010200391300+14490100         39.13 STORE    49.1  X
             +010201391400-120000           39.14 R ADD    0000  REORDER COLUMNS IN CARD IMAGE
             +010201391500-250024           39.15 L RIGHT  0024  REMOVE OPCODE, CARD TYPE
             +010200391600+12024600         39.16 R ADD    2.46  PUT SYMBOLIC LOC AND SYMBOLIC ADDR ON LEFT
             +010201391700-240009           39.17 L LEFT   0009  OF CARD
             +010201391800-270003           39.18 A RIGHT  0003  X
             +010201391900-260001           39.19 A LEFT   0001  X
             +010201392000-240006           39.20 L LEFT   0006  X
             +010201392100-260022           39.21 A LEFT   0022  X
             +010201392200-140000           39.22 STORE    0000  X
             +010200392300+12391400         39.23 R ADD    39.14 X
             +010200392400+05023500         39.24 SUB      2.35  X
             +010200392500+15391400         39.25 STORE A  39.14 X
             +010200392600+15392200         39.26 STORE A  39.22 X
             +010200392700+05490100         39.27 SUB      49.1  X
             +010200392800+04393000         39.28 TR 0     39.30 X
             +010200392900+01391400         39.29 TR       39.14 X
             +010204                        
             +010200393000+12490200         39.30 R ADD    49.2  
             +010200393100+05023800         39.31 SUB      2.38  
             +010200393200+04400000         39.32 TR 0     40.0  
             +010200393300+01410000         39.33 TR       41.0  
             +010204                        
             +010205               00       HEADING 
             +010200400000+12023800         40.0  R ADD    2.38  ADD ACTUAL OPCODE AND OPADDR TO CARD IMAGE
             +010201400100+260016           40.1  A LEFT   0016  X
             +010200400200-14025600         40.2  STORE    2.56  X .*ECHO PRINT_SETOPCODE
             +010200400300+12016600         40.3  R ADD    1.66  PRINT ACTUAL CURLOC OPCODE
             +010201400400+250036           40.4  L RIGHT  0036  SHIFT INTO MQ .*ECHO OPCODE:O
             +010200400500+12015700         40.5  R ADD    1.57  X
             +010201400600+270018           40.6  A RIGHT  0018  X .*ECHO CURLOC:
             +010201400700+250012           40.7  L RIGHT  0012  X
             +010201400800+240003           40.8  L LEFT   0003  X
             +010201400900+260018           40.9  A LEFT   0018  X
             +010200401000+14025300         40.10 STORE    2.53  X .*ECHO PRINT_CHAR:
             +010200401100+12023000         40.11 R ADD    2.30  
             +010200401200+05025300         40.12 SUB      2.53  
             +010201401300+260002           40.13 A LEFT   0002  
             +010200401400+11023800         40.14 ADD      2.38  
             +010200401500+11026100         40.15 ADD      2.61  
             +010200401600+15402100         40.16 STORE A  40.21 
             +010200401700+15402200         40.17 STORE A  40.22 
             +010200401800-12025600         40.18 R ADD    2.56  
             +010201401900+270001           40.19 A RIGHT  0001  
             +010200402000-14025600         40.20 STORE    2.56  
             +010201402100+110000           40.21 ADD      0000  
             +010201402200+140000           40.22 STORE    0000  
             +010200402300-12025600         40.23 R ADD    2.56  
             +010201402400+260012           40.24 A LEFT   0012  
             +010200402500+04400800         40.25 TR 0     40.8  
             +010204                        
             +010205               00       HEADING 
             +010204                        
             +010201410000+360073           41.0  SENSE    0073  SWITCH 5 CONTROLS PROGRAM LISTING
             +010200410100+01410300         41.1  TR       41.3  PRINTING DESIRED
             +010200410200+01412200         41.2  TR       41.22 NO PRINTING DESIRED
             +010204                        
             +010201410300+320512           41.3  WRITE    0512  PREPARE TO WRITE CBUF ON PRINTER
             +010200410400+12490200         41.4  R ADD    49.2  
             +010200410500+04410700         41.5  TR 0     41.7  
             +010201410600+360517           41.6  SENSE    0517  SELECT HUB FOR SIGN AND DOTS
             +010200410700+12016600         41.7  R ADD    1.66  
             +010200410800+03411000         41.8  TR +     41.10 X .*ECHO OPCODE:O
             +010201410900+360518           41.9  SENSE    0518  SELECT HUB FOR MINUS
             +010200411000+12026100         41.10 R ADD    2.61  RESET TO INITIAL COPY LOOP ADDRESS
             +010200411100+15411500         41.11 STORE A  41.15 FOR CARD BUFFER
             +010200411200+12411500         41.12 R ADD    41.15 X .*ECHO PRINT
             +010200411300+05024900         41.13 SUB      2.49  X
             +010200411400+14490100         41.14 STORE    49.1  X
             +010201411500-370000           41.15 COPY     0000  COPY WORD TO PRINTER
             +010200411600+12411500         41.16 R ADD    41.15 X
             +010200411700+05023700         41.17 SUB      2.37  INCR CDBUF ADDR
             +010200411800+15411500         41.18 STORE A  41.15 X
             +010200411900+05490100         41.19 SUB      49.1  CHECK FOR END
             +010200412000+04412200         41.20 TR 0     41.22 
             +010200412100+01411500         41.21 TR       41.15 
             +010200412200+12490200         41.22 R ADD    49.2  
             +010200412300+04490000         41.23 TR 0     49.0  IF MODE ZERO EXIT ROUTINE
             +010204                        
             +010205               00       HEADING 
             +010200420000+12022800         42.0  R ADD    2.28  PUNCH CARD IF OUTPUT BUF IS FULL
             +010200420100+05024900         42.1  SUB      2.49  .*ECHO PUNCHOUTCOUNT:
             +010200420200+04470000         42.2  TR 0     47.0  
             +010204                        
             +010205               00       HEADING 
             +010200430000+12015500         43.0  R ADD    1.55  IS ONE IF PROGRAM ORIGIN IS ZERO
             +010200430100+04440000         43.1  TR 0     44.0  IS ZERO IF PUNCH OUTPUT IS IN PUNCH IN FEJ015 BIN CARD FORMAT
             +010200430200+01450000         43.2  TR       45.0  
             +010204                        
             +010205               00       HEADING 
             +010200440000+12022800         44.0  R ADD    2.28  PUNCH IN FEJ015 BIN CARD FORMAT
             +010200440100+04440800         44.1  TR 0     44.8  IF CARD IS EMPTY, RESERVE 4 HALF WORDS
             +010200440200+12015700         44.2  R ADD    1.57  IF CARD HAS ALREADY SOME INSTR, CHECK
             +010200440300+05490300         44.3  SUB      49.3  THERE IS NO GAPS IN ADDR OF INSTR
             +010200440400+05023800         44.4  SUB      2.38  X
             +010200440500+04450000         44.5  TR 0     45.0  TRANSFER TO ADD TO CARD BECAUSE NO GAPS
             +010200440600+01460000         44.6  TR       46.0  FLUSH CARD TO START A NEW FRESH ONE IN THE NEW CURLOC ADDR
             +010204                        
             +010200440700+01450000         44.7  TR       45.0  FOR CHKSUM (2 HWORDS), DATA ADDR, DATA HWORDS LEN
             +010200440800+11023500         44.8  ADD      2.35  X
             +010200440900+14022800         44.9  STORE    2.28  X
             +010200441000+12015700         44.10 R ADD    1.57  SET FIRST ADDR OF DATA IN CARD
             +010200441100+14017700         44.11 STORE    1.77  X
             +010200441200+14490300         44.12 STORE    49.3  SET LAST PUNCHED LOC IN CARD
             +010204                        
             +010205               00       HEADING 
             +010204                        ADD OPCODE TO OUTPUT CARD BUFFER
             +010204                        IN RAW BINARY MODE (RAW BINARY MODE)
             +010204                        
             +010200450000+12022800         45.0  R ADD    2.28  CALC DESTINATION FULL WORD
             +010201450100+250019           45.1  L RIGHT  0019  MAKE ACC EVEN, RIGHT MOST BIT IN MQ
             +010201450200+260019           45.2  A LEFT   0019  
             +010200450300+11026200         45.3  ADD      2.62  X
             +010200450400+15451100         45.4  STORE A  45.11 
             +010200450500+15451600         45.5  STORE A  45.16 X
             +010200450600+12024600         45.6  R ADD    2.46  
             +010201450700+240001           45.7  L LEFT   0001  GET BACK BIT FROM MQ
             +010200450800+04451500         45.8  TR 0     45.15 TRANSFER IF EVEN (ADDING OPCODE TO RIGHT HALF WORD)
             +010200450900+12016600         45.9  R ADD    1.66  ADD OPCODE AT RIGHT HALF WORD
             +010200451000+14016900         45.10 STORE    1.69  
             +010201451100+120000           45.11 R ADD    0000  
             +010200451200+14016800         45.12 STORE    1.68  
             +010200451300-12016800         45.13 R ADD    1.68  
             +010200451400+01451600         45.14 TR       45.16 
             +010200451500+12016600         45.15 R ADD    1.66  ADD OPCODE AT EVEN HALF WORD
             +010201451600-140000           45.16 STORE    0000  STORE INSTR IN OUT BUF
             +010200451700+12022800         45.17 R ADD    2.28  INCR NUMBER OF HALF WORDS IN
             +010200451800+11023800         45.18 ADD      2.38  OUTPUT BUFFER
             +010200451900+14022800         45.19 STORE    2.28  
             +010200452000+12015700         45.20 R ADD    1.57  SAVE LAST LOC ADDED TO CARD
             +010200452100+14490300         45.21 STORE    49.3  
             +010200452200+01490000         45.22 TR       49.0  
             +010204                        
             +010205               00       HEADING 
             +010200460000+12022800         46.0  R ADD    2.28  FLUSH CURRENT OUTPUT BUF THEN EXIT ROUTINE
             +010200460100+04490000         46.1  TR 0     49.0  NOTHING TO FLUSH, JUST EXIT
             +010200460200+05024900         46.2  SUB      2.49  .*ECHO FLUSH
             +010200460300+04470000         46.3  TR 0     47.0  .*MO0426-60:BINPUTBUF
             +010200460400+11023800         46.4  ADD      2.38  
             +010200460500+04470000         46.5  TR 0     47.0  IF ALREADY FULL PROCEED TO WRITE OUTPUT CARD
             +010200460600+12026200         46.6  R ADD    2.62  
             +010200460700+11024900         46.7  ADD      2.49  
             +010200460800+15461500         46.8  STORE A  46.15 
             +010200460900+12461500         46.9  R ADD    46.15 
             +010200461000+14490100         46.10 STORE    49.1  
             +010200461100+12022800         46.11 R ADD    2.28  ELSE FILL REMAINING OUT BUF WITH ZERO
             +010200461200+11026200         46.12 ADD      2.62  
             +010200461300+15461500         46.13 STORE A  46.15 
             +010200461400+12024600         46.14 R ADD    2.46  
             +010201461500+140000           46.15 STORE    0000  
             +010200461600+12461500         46.16 R ADD    46.15 
             +010200461700+11023800         46.17 ADD      2.38  
             +010200461800+14461500         46.18 STORE    46.15 
             +010200461900+05490100         46.19 SUB      49.1  
             +010200462000+04470000         46.20 TR 0     47.0  
             +010200462100+01461400         46.21 TR       46.14 
             +010204                        
             +010205               00       HEADING 
             +010200470000+12015500         47.0  R ADD    1.55  IS ONE IF PROGRAM ORIGIN IS ZERO (BIN CARDS)
             +010200470100+04480000         47.1  TR 0     48.0  IS ZERO IF PUNCH OUTPUT IS FEJ015 FORMAT. TR TO PUT CHECKSUM IN CARD
             +010201470200+321024           47.2  WRITE    1024  PREPARE TO PUNCH CARD
             +010200470300+12026200         47.3  R ADD    2.62  .*ECHO PHCARD
             +010200470400+15470800         47.4  STORE A  47.8  
             +010200470500+12470800         47.5  R ADD    47.8  
             +010200470600+05024900         47.6  SUB      2.49  
             +010200470700+14490100         47.7  STORE    49.1  
             +010201470800-370000           47.8  COPY     0000  
             +010200470900+12470800         47.9  R ADD    47.8  
             +010200471000+05023700         47.10 SUB      2.37  
             +010200471100+15470800         47.11 STORE A  47.8  
             +010200471200+05490100         47.12 SUB      49.1  
             +010200471300+04471500         47.13 TR 0     47.15 EXIT PUNCH WORD LOOP
             +010200471400+01470800         47.14 TR       47.8  
             +010200471500+12024600         47.15 R ADD    2.46  MARK BUFFER AS EMPTY
             +010200471600+14022800         47.16 STORE    2.28  
             +010200471700+12490200         47.17 R ADD    49.2  
             +010200471800+05023700         47.18 SUB      2.37  
             +010200471900+04490000         47.19 TR 0     49.0  IF PMODE IS TWO (FLUSH) THEN EXIT ROUTINE
             +010200472000+01430000         47.20 TR       43.0  ELSE AFTER FLUSHING PROCEED TO ADD NEW
             +010204                        DATA TO FRESH NEW EMPTY OUTPUT CARD
             +010205               00       HEADING 
             +010204                        CALCULATE FEH019/FEJ015 CHECKSUM AND
             +010204                        SET CARD BINARY FORMAT
             +010204                        | CHK  .  SUM | COUNT | ADDR |
             +010204                        
             +010200480000+12024600         48.0  R ADD    2.46  
             +010200480100-14025400         48.1  STORE    2.54  RESULT HOLDS THE CHECKSUM OF CARD
             +010200480200+14016800         48.2  STORE    1.68  
             +010200480300+12026200         48.3  R ADD    2.62  
             +010200480400+11024900         48.4  ADD      2.49  
             +010200480500+15481100         48.5  STORE A  48.11 
             +010200480600+12481100         48.6  R ADD    48.11 
             +010200480700+14490100         48.7  STORE    49.1  
             +010200480800+12026200         48.8  R ADD    2.62  .*ECHO CHKSUMCARD
             +010200480900+11023500         48.9  ADD      2.35  
             +010200481000+15481100         48.10 STORE A  48.11 
             +010201481100+120000           48.11 R ADD    0000  
             +010200481200+14016900         48.12 STORE    1.69  
             +010200481300-06016800         48.13 R SUB    1.68  
             +010201481400+260001           48.14 A LEFT   0001  
             +010200481500-11025400         48.15 ADD      2.54  
             +010200481600-14025400         48.16 STORE    2.54  
             +010200481700+12481100         48.17 R ADD    48.11 
             +010200481800+11023800         48.18 ADD      2.38  
             +010200481900+15481100         48.19 STORE A  48.11 
             +010200482000+05490100         48.20 SUB      49.1  
             +010200482100+04482300         48.21 TR 0     48.23 EXIT CALC CHKSUM LOOP
             +010200482200+01481100         48.22 TR       48.11 
             +010200482300+06022800         48.23 R SUB    2.28  
             +010200482400+11023500         48.24 ADD      2.35  
             +010200482500+05017700         48.25 SUB      1.77  
             +010201482600+270017           48.26 A RIGHT  0017  
             +010200482700-11025400         48.27 ADD      2.54  SET CHECKSUM
             +010200482800-14018000         48.28 STORE    1.80  
             +010200482900+12017700         48.29 R ADD    1.77  
             +010200483000+14016900         48.30 STORE    1.69  
             +010200483100+12022800         48.31 R ADD    2.28  
             +010200483200+05023500         48.32 SUB      2.35  
             +010200483300+14016800         48.33 STORE    1.68  
             +010200483400-12016800         48.34 R ADD    1.68  
             +010200483500-14018200         48.35 STORE    1.82  
             +010200483600+01470200         48.36 TR       47.2  
             +010204                        
             +010205               00       HEADING 
             +010201490000+010000           49.0  TR       0000  
             +010201490100+000000           
             +010201490200+000000           
             +010201490300+000000           
             +010204                        
             +010205               00       HEADING END OF PROG
             +010201500000+000000           50.0  STOP     0000  STOP NO ERRORS
             +010200500100+00500100         50.1  STOP     50.1  FILE START ADDR. MUST BE LAST LINE OF PROGRAM
             +010204                        
             +010204                        USAGE:
             +010204                        
             +010204                        THE PURPOSE OF NR9003 IS TO ACCEPT ONE OR MORE PROGRAMS IN SYMBOLIC
             +010204                        FORM AND TO COMBINE THEM INTO ONE PROGRAM IN ACTUAL FORM.
             +010204                        THE SYMBOLIC PROGRAM IS PRESENTED WITH ONE INSTRUCTION PUNCHED TO
             +010204                        A CARD, AND THE CALCULATOR PRODUCES THE PROGRAM ON BINARY CARDS.
             +010204                        THE CALCULATOR ALSO PRODUCES A PRINTED PROGRAM WHICH CONTAINS
             +010204                        THE ORIGINAL SYMBOLIC PROGRAM, THE NEW ACTUAL PROGRAM (IN OCTONARY)
             +010204                        AND THE COMMENTS WHICH WERE ASSOCIATED WITH THE ORIGINAL PROGRAM.
             +010204                        
             +010204                        OCCUPIES ALL OF ELECTROSTATIC MEMORY EXCEPT ADDRESSES 0000 TO 0307 OCTAL
             +010204                        (0 TO 199 DECIMAL)
             +010204                        
             +010204                        LOCATIONS MUST BE GIVEN IN SYMBOLIC FORM. ADDRESS PARTS MAY BE
             +010204                        GIVEN IN SYMBOLIC FORM OR AS ACTUAL 4-DIGIT DECIMAL NUMBERS. OPERATION
             +010204                        PARTS ARE TO BE GIVEN IN OCTONARY.
             +010204                        
             +010204                        A SYMBOLIC ADDRESS IS A 6-DIGIT NUMBER. THE ONLY TWO IMPORTANT PRECAUTIONS
             +010204                        ARE:
             +010204                        
             +010204                        1) DO NOT. USE 000 000 AS A SYMBOLIC ADDRESS WITH 00 AS A HEADING.
             +010204                        2) DO NOT USE THE SAME SYMBOLIC ADDRESS WITH THE SAME HEADING FOR TWO DIFFERENT PURPOSES.
             +010204                        
             +010204                        PROGRAMS MUST BE BROKEN DOWN INTO BATCHES OF INSTRUCTIONS SO THAT
             +010204                        THEY CAN BE PROCESSED ONE BY ONE WITHPUT EXHAUSTING STORAGE
             +010204                        
             +010204                        THE ASSEMBLY SOURCE PROGRAM CARDS MUST BE PLACED IN THE
             +010204                        FOLLOWING ORDER:
             +010204                        
             +010204                        1) SYNONYMS CARDS
             +010204                        2) DRUM ASSIGNMENTS CARDS
             +010204                        3) FIRST ELECTROSTATIC ASSIGNMENT CARD
             +010204                        4) FIRST HEADING CARD
             +010204                        5) INSTRUCTIONS OF FIRST BATCH IN THE CORRECT ORDER FOR ASSIGNMENT OF LOCATIONS.
             +010204                        6) OTHER HEADING CARDS AND THEIR INSTRUCTIONS
             +010204                        7) LAST HEADING CARD.
             +010204                        
             +010204                        COMMENTS MAY BE INTERSPERSED AT WILL
             +010204                        
             +010204                        SUBSEQUENT ELECTROSTATIC ASSIGNMENT CARDS MAY BE USED AT WILL AND
             +010204                        EACH GIVES THE LOCATION OF THE NEXT INSTRUCTION. EACH ELECTROSTATIC
             +010204                        ASSIGNMENT CARD MUST BE ACCOMPANIED BY A HEADING CARD.
             +010204                        
             +010204                        WHEN ONE IS COMBINING SEVERAL DIFFERENT PROGRAMS, A DIFFERENT 2-DIGIT
             +010204                        PREFIX MUST BE USED WITH EACH DIFFERENT PROGRAM TO AVOID HOMONYMS.
             +010204                        
             +010204                        THE VARIOUS HEADING CARDS WHICH BREAK UP A SINGLE PROGRAM INTO MANAGEABLE
             +010204                        BATCHES MAY ALL HAVE THE SAME PREFIX BUT THIS IS NOT NECESSARY. THE LAST
             +010204                        CARD MUST BE A HEADING BUT THIS IS A DUMMY. THE VALUE OF THE PREFIX ON
             +010204                        THIS LAST CARD IS IRRELEVANT.
             +010204                        
             +010204                        SYNONYM CARDS ARE USED TO ESTABLISH THE CONNECTIONS BETWEEN INDEPENDENT
             +010204                        PROGRAMS WHICH ARE BEING COMBINED BY THE ASSEMBLY PROGRAM.
             +010204                        
             +010204                        IF PROGRAM ORIGIN IS 0000, THE PUNCHED CARDS RESULTING FROM
             +010204                        ASSEMBLY WILL BE BINARY CARDS WITH 48 INSTRUCTIONS PER CARD.
             +010204                        ALL INSTRUCTION WLL BE PUNCHED IN SEQUENCE, EVEN IF THERE ARE
             +010204                        GAPS IN LOCATION ADDRESS. IT IS RESPONSIBILITY OF PROGRAM TO
             +010204                        STORE THE INSTRS AT THE RIGHT LOCATION. THIS ALLOW TO CREATE
             +010204                        SELF-LOADING CARDS.
             +010204                        
             +010204                        IF PROGRAM ORIGIN IS OTHER THAN 0000, THE PUNCHED CARDS WILL
             +010204                        BE IN A FORMAT SUITABLE TO BE LOADED WITH FEJ 015. THE PROGRAM ORIGIN
             +010204                        MUST BE 134 OCTAL OR HIGHER (FEJ 015 CANNOT LOAD AT LOWER LOCATIONS)
             +010204                        WHEN ASSEMBLING, IF AN ORIGIN CARD IS FOUND, THE CURRENT BINARY OUTPUT
             +010204                        CARD WILL BE FLUSHED, AND A NEW FRESH ONE WILL BE STARTED. THIS ALLOW
             +010204                        TO HAVE GAPS IN PROGRAM LOCATIONS USED.
             +010204                        
             +010204                        PROGRAM LOADING:
             +010204                        1) PLACE THE ASSEMBLY PROGRAM NR9003 IN THE CARD HOPPER.
             +010204                        2) PLACE THE PROGRAM TO BE ASSEMBLED IN THE HOPPER ON TOP OF NR9003.
             +010204                        3) PRESS THE CARD READER START UNTIL IT IS READY.
             +010204                        4) PRINTER READY WITH NR9003 PLUGBOARD.
             +010204                        5) CARD PUNCH READY WITH BINARY CARDS.
             +010204                        6) TAPE 0400 READY
             +010204                        7) TAPE 0401 READY
             +010204                        8) PRESET RESET AND CLEAR MEMORY.
             +010204                        9) PRESS LOAD.
             +010204                        10) WHEN THE CARD READER STOPS WITH SELECT, PRESS THE CARD READER START.
             +010204                        
             +010204                        THE CALCULATOR WILL AUTOMATICALLY FIGURE OUT THE ACTUAL PROGRAM, PRINT
             +010204                        IT, AND PUNCH IT ON BINARY CARDS
             +010204                        
             +010204                        SENSE INPUT SWITCH 5 CONTROLS THE PROGRAM PRINTOUT
             +010204                        IF SET UP, ASSEMBLED PROGRAM IS LISTED.
             +010204                        IF SET DOWN, NO LISTING IS GENERATED
             +010204                        
             +010204                        NORMAL STOPS:
             +010204                        STOP 0000  END OF ASSEMBLY, NO ERRORS
             +010204                        
             +010204                        ERROR STOPS:
             +010204                        STOP 0001  STOP BECAUSE INVALID FORMAT IN INPUT CARD
             +010204                        STOP 0002  STOP BECAUSE CARD TYPE INVALID. MUST BE 0-5 OR 9
             +010204                        STOP 0003  STOP BECAUSE SYMBOLIC LOCATION NOT IN SEQUENCE
             +010204                        STOP 0004  STOP BECAUSE INVALID OPCODE SIGN (MUST BE + OR -)
             +010204                        STOP 0005  STOP BECAUSE EXPECTING HEADING CARD BEFORE THIS ONE
             +010204                        STOP 0006  STOP BECAUSE THIS CARD ONLY ALLOWED BEFORE ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        STOP 0007  STOP BECAUSE THIS CARD NOT ALLOWED AFTER A DRUM ASSIGN CARD
             +010204                        STOP 0008  STOP BECAUSE THIS CARD NOT ALLOWED AFTER ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        STOP 0009  STOP BECAUSE THIS CARD NOT ALLOWED AFTER ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        STOP 0010  STOP BECAUSE EXPECTING ELECTROSTATIC ASSIGNEMENT CARD
             +010204                        STOP 0011  STOP BECAUSE FILE FULL. THE CALCULATOR DISCOVERED A BATCH
             +010204                        .          WHICH WAS TOO LARGE. RELOCATE HEADING CARDS AND START
             +010204                        STOP 0012  STOP BECAUSE MISSING A HEADING CARD AS PROGRAM END
             +010204                        STOP 0021  STOP BECAUSE SYMBOLIC LOC DEFINED TWICE
             +010204                        STOP 0020  STOP BECAUSE SYMBOLIC ADDR NOT FOUND
             +010204                        
             +010204                        
             +010204                        SOURCE CARD FORMAT:
             +010204                        
             +010204                        COLUMN  14-19   SHOULD BE +01020
             +010204                        20      CARD TYPE: ONE DIGIT 0-5, OR 9
             +010204                        21-26   SYMBOLIC LOCATION: 6 DECIMAL DIGITS
             +010204                        27      SIGN OF INSTRUCTION (ROW 11 PUNCH FOR -, ROW 12 FOR +)
             +010204                        28-29   OPERATION PART OF INSTRUCTION (OCTAL)
             +010204                        20-25   SYMBOLIC/ACTUAL ADDRESS (DECIMAL)
             +010204                        39-44   BLANK
             +010204                        45-80   COMMENT
             +010204                        
             +010204                        COLUMN:
             +010204                        .               14    20 21 27 28 30  36 38     45
             +010204                        .                V     VV     VV V     V V      V
             +010204                        .     ------------------------------------------------------+
             +010204                        .   /            +01020TLLLLLLSOPAAAAAAPPPP     COMMENT     |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  |                                                        |
             +010204                        .  +--------------------------------------------------------+
             +010204                        
             +010204                        THE FIELDS TO FULLFILL DEPENDS ON CARD TYPE
             +010204                        
             +010204                        CARD TYPE 0: SYMBOLIC INTRUCTION
             +010204                        
             +010204                        +010200LLLLLLSOPAAAAAA         COMMENT
             +010204                        
             +010204                        CARD TYPE 1: ACTUAL INTRUCTION
             +010204                        AAAA=ACTUAL OP ADDRESS PART, AS 4 DIGITS DECIMAL VALUE)
             +010204                        
             +010204                        +010201LLLLLLSOPAAAA           COMMENT
             +010204                        
             +010204                        CARD TYPE 2: SYNONYM:
             +010204                        AAAAA1 PREFIX PP=DO NOT USE THIS
             +010204                        BBBBB2 PREFIX PP=USE THIS ADDRESS
             +010204                        
             +010204                        +010202BBBBB2   AAAAA1PPPP     COMMENT
             +010204                        
             +010204                        CARD TYPE 3: DRUM ASSIGNMENT
             +010204                        SSSSSS PREFIX PP=SYMBOLIC ADDRESS
             +010204                        AAAA=ACTUAL ADDRESS AS 4 DIGITS DECIMAL VALUE
             +010204                        
             +010204                        +010203SSSSSS   AAAAA1PP       COMMENT
             +010204                        
             +010204                        CARD TYPE 4: COMMENT
             +010204                        
             +010204                        +010204                        COMMENT
             +010204                        
             +010204                        CARD TYPE 5: HEADING
             +010204                        
             +010204                        +010205               PP       COMMENT
             +010204                        
             +010204                        CARD TYPE 9: ELECTROSTATIC ASSIGNMENT
             +010204                        AAAA=ACTUAL ADDRESS FOR MEMORY ORIGIN ASSIGNMENT
             +010204                        AS 4 DIGITS DECIMAL VALUE
             +010204                        
             +010204                        +010209           AAAA         COMMENT
             +010204                        
             +010204                        PUNCHED BINARY CARDS FORMAT (WHEN PROGRAM ORIGIN NOT 0000):
             +010204                        
             +010204                        - IN ROW 9:
             +010204                        A & B = CHECKSUM
             +010204                        C     = NUMBER OF INSTRUCTIONS ON THIS CARD
             +010204                        D     = FIRST ADDRESS OF THIS CARD
             +010204                        - IN ROWS 8 TO 0, X AND Y: UP TO 44 INSTRUCTIONS
             +010204                        
             +010204                        .     ------------------------------------------------------+
             +010204                        .   /   |            |            |  ...       | INSTR 44   |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |  INSTR 5   |  ...       |            |            |
             +010204                        .  |    |  INSTR 1   |  INSTR 2   |  INSTR 3   |  INSTR 4   |
             +010204                        .  |    +------------+------------+------------+------------+
             +010204                        .  |    |     A      |     B      |      C     |     D      |
             +010204                        .  +----+------------+------------+------------+------------+
             +010204                        
             +010204                        
             +010204                        PUNCHED BINARY CARDS FORMAT (WHEN PROGRAM ORIGIN IS 0000):
             +010204                        
             +010204                        .     ------------------------------------------------------+
             +010204                        .   /   |            |            |  ...       | INSTR 48   |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |            |            |            |            |
             +010204                        .  |    |  INSTR 5   |  ...       |            |            |
             +010204                        .  |    |  INSTR 1   |  INSTR 2   |  INSTR 3   |  INSTR 4   |
             +010204                        .  +----+------------+------------+------------+------------+
             +010204                        
             +010204                        
             +010205               00       PROGRAM END
