
                           WHT 016

                           Print Out Memory in Octionary 
                           Octionary Programming System 

                           Poughkeepsie laboratory
                           (c) 15 August 1952 by ???

                           listing at 102663096-05-01-acc.pdf, page 200
                           from Computer History Museum collection

OCT                        DEC=Number are in decimal (default). OCT=Numbers are in octal

NNNN S OPNAME   OP ADDR    Remarks ... (max 79 chars)
           
0066   30  4000            1.1       READ       4000   Copy and store
0067  -37  0232            1.2   -   COPY        5.0   Control card information
0070   12  0232            1.3       R ADD       5.0
0071   15  0115            1.4       STORE A     2.1   Store address of  
0072   15  0121            1.5       STORE A     2.5   first instruction in
0073   15  0125            1.6       STORE A     2.9   2.1, 2.5, and 2.9
0074   17  0246            1.7       LOAD MQ    5.12  
0075   12  0246            1.8       R ADD      5.12 
0076   15  0077            1.9       STORE A    1.10   
0077  -16  0000            1.10  -   STORE MQ  (    )  Clear card image
0100   12  0077            1.11      R ADD      1.10   to zero
0101   05  0244            1.12      SUB        5.10
0102   15  0077            1.13      STORE A    1.10
0103   11  0251            1.14      ADD        5.15 
0104   03  0077            1.15      TR +       1.10
0105   12  0246            1.16      R ADD      5.12
0106  -14  0262            1.17  -   STORE       6.0
0107  -14  0264            1.18  -   STORE       6.2   clear conversion
0110  -14  0266            1.19  -   STORE       6.4   counters to zero
0111  -14  0270            1.20  -   STORE       6.6
0112  -14  0272            1.21  -   STORE       6.8
0113   12  0250            1.22      R ADD      5.14   Set 3.12 to store
0114   15  0137            1.23      STORE A    3.12   first 6.4

0115   12  0000            2.1       R ADD     (    )  Determine sign of instruction
0116   03  0123            2.2       TR +        2.7   if -, put bit in 11
0117   12  0247            2.3       R ADD      5.13   row of conversion ctr.
0120   14  0263            2.4       STORE       6.1   and out 7 instruction 
0121   06  0000            2.5       R SUB     (    )  in accumulator
0122   01  0126            2.6       TR          3.3
0123   12  0247            2.7       R ADD      5.13   if positive, put bit
0124   14  0262            2.8       STORE       6.0   in 12 row of
0125   12  0000            2.9       R ADD     (    )  conversion ctr.

0126   25  0044            3.3       L RIGHT  44(36)d  Put inst in MQ
0127   12  0115            3.4       R ADD       2.1   Get location of current inst
0130   26  0007            3.5       A LEFT        7   Eliminate op part of 2.1
0131   27  0031            3.6       A RIGHT  31(25)d  Line up location with inst
0132   25  0011            3.7       L RIGHT   11(9)d  Get digit in acc.
0133   26  0022            3.8       A LEFT   22(18)d  move to left of acc
0134   11  0252            3.9       ADD        5.16   Determine conversion
0135   15  0140            3.10      STORE A    3.13   counter in word ro
0136   15  0141            3.11      STORE A    3.14   store bit
0137   12  0000            3.12      R ADD     (    )  Add bit to
0140   11  0000            3.13      ADD       (    )  conversion counter
0141   14  0000            3.14      STORE     (    )
0142   12  0137            3.15      R ADD      3.12   Increase address of
0143   11  0245            3.16      ADD        5.11   3.17 by 1
0144   15  0137            3.17      STORE A    3.12

0145   05  0253            3.18      SUB        5.17   Is translation finished?
0146   04  0151            3.19      TR 0        4.1   Yes
0147   24  0003            3.20      L LEFT        3   No, get next digit
0150   01  0133            3.21      TR          3.8 

0151   12  0254            4.1       R ADD      5.18   Set 4.3 to store 7 row
0152   15  0153            4.2       STORE A     4.3   of conversion counter
0153   12  0000            4.3       R ADD     (    )  Store conversion counter
0154   14  0000            4.4       STORE     (    )  contents in card image 
0155   12  0154            4.5       R ADD       4.4
0156   11  0243            4.6       ADD         5.9   Increase address of
0157   15  0154            4.7       STORE A     4.4   4.4 by 4
0160   12  0153            4.8       R ADD       4.3   
0161   05  0245            4.9       SUB        5.11   Decrease address of
0162   15  0153            4.10      STORE A     4.3   4.3 by 1
0163   05  0255            4.11      SUB        5.19   Is storage completed?
0164   03  0153            4.12      TR +        4.3   No
0165   12  0115            4.13      R ADD       2.1   Yes
0166   26  0007            4.14      A LEFT        7   Has last instruction 
0167   27  0007            4.15      A RIGHT       7   been translated?
0170   05  0233            4.16      SUB         5.1   
0171   04  0224            4.17      TR 0       4.44   yes 
0172   12  0115            4.18      R ADD       2.1   no 
0173   11  0245            4.19      ADD        5.11   Increase address of 
0174   15  0115            4.20      STORE A     2.1   2.1, 2.5 and 2.9 to
0175   15  0121            4.21      STORE A     2.5   get next instruction
0176   15  0125            4.22      STORE A     2.9
0177   12  0154            4.23      R ADD       4.4   Prepare to store in
0200   05  0256            4.24      SUB        5.20   next portion of
0201   15  0154            4.25      STORE A     4.4   6.1
0202   05  0257            4.26      SUB        5.21   Is card image filled?
0203   04  0205            4.27      TR 0       4.29   Yes
0204   01  0105            4.28      TR         1.16   No. Translate next inst
0205   32  1000            4.29      WRITE      1000
0206   12  0246            4.30      R ADD      5.12
0207   15  0154            4.31      STORE A     4.4   Reset address of 4.4
0210   15  0215            4.32      STORE A    4.37   and 4.37 to zero
0211   37  0246            4.33      COPY       5.12
0212   37  0246            4.34      COPY       5.12   Copy O's for 8 & 9 rows
0213   37  0246            4.35      COPY       5.12
0214   37  0246            4.36      COPY       5.12
0215  -37  0000            4.37  -   COPY      (    )  Copy half row
0216   12  0215            4.38      R ADD      4.37
0217   05  0244            4.39      SUB        5.10   Increase address of
0220   15  0215            4.40      STORE A    4.37   4.37 by 2
0221   11  0260            4.41      ADD        5.22   Is printing finished?
0222   04  0074            4.42      TR 0      ( 1.7)  Yes
0223   01  0215            4.43      TR         4.37   No

0224   12  0261            4.44      R ADD      5.23   Prepare for giving 
0225   15  0222            4.45      STORE A    4.42   LOAD after printing
0226   01  0205            4.46      TR         4.29
0227   30  4000            4.47      READ       4000
0230  -37  0000            4.48  -   COPY       0000   LOAD sequence
0231   01  0000            4.49      TR         0000

                           CONSTANTS AND STORAGE

0232   00  0000            5.0     (first address to be printed) Information from 
0233   00  0000            5.1     (Last address to be printed)  control card
0234   00  2000            5.2        2000 
0235   00  1000            5.3        1000 
0236   00  0400            5.4         400
0237   00  0200            5.5         200
0240   00  0040            5.6          40
0241   00  0020            5.7          20
0242   00  0010            5.8          10 
0243   00  0004            5.9           4
0244   00  0002            5.10          2 
0245   00  0001            5.11          1
0246   00  0000            5.12          0
0247   00  0100            5.13        100
0250   00  0234            5.14      STOP        5.2
0251   16  0050            5.15      STORE MQ    L(12R)+2
0252   00  0264            5.16      STOP        6.2
0253   12  0246            5.17      R ADD      5.12
0254   00  0273            5.18      STOP        6.9
0255   12  0262            5.19      R ADD       6.0
0256   00  0047            5.20         47
0257   14  0004            5.21      STORE      0004
0260   37  0050            5.22      COPY       0050
0261   00  0227            5.23      STOP       4.47

0262   00  0000            6.0         12 row
0263   00  0000            6.1         11 row
0264   00  0000            6.2          0 row
0265   00  0000            6.3          1 row
0266   00  0000            6.4          2 row       conversion counters
0267   00  0000            6.5          3 row
0270   00  0000            6.6          4 row
0271   00  0000            6.7          5 row
0272   00  0000            6.8          6 row
0273   00  0000            6.9          7 row

                           Note RSV: In Assembly source transcription of this listing
                           the program origin is changed from octal 0066 to octal 140.
                           This is necessary because FEJ015 cannot load a program at
                           lower address than 130 octal.


                               Usage:

                               Print mem contents in octal. Four addresses per line

                                  0060+304000   0061-370206   0062-371206   0063-220203   
                                  0064-152244   ...

                               On print termination, the sequence READ 4000, -COPY 0000, TR 0000
                               is given, thus loading another selft-loading card

                               Card Deck
                                  a) FEJ015
                                  b) Binary program cards
                                  c) Control card (binary) 

                               Load button (address 0000)

                               Control Card: in row 9
                                  - First half word: A = Address of first mem location to be printed
                                  - Second half word: B = Address of last mem location to be printed

                                      ------------------------------------------------------+
                                    /   |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    |            |            |            |            |
                                   |    +------------+------------+------------+------------+
                                   |    |     A      |     B      |            |            |
                                   +----+------------+------------+------------+------------+





