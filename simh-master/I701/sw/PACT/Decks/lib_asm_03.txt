; SYMBOL TABLE
; Reg Addr   Len
;  I     0    71
;  T     0     0
;    Num  Op.  Addr  Name
; SY   0  DEF     0  SQRTFN
;  
         0000 -SM I 0060 SQRTFN   - STORE MQ  XX           SAVE FUNCTION ARGUMENT
         0001 +A  I 0059          + ADD       TWO
         0002 +SA I 0005          + STORE A   SQRTP1
         0003 +A  I 0058          + ADD       ONE
         0004 +SA I 0056          + STORE A   SQRTEX       RETURN TO CALLER         
         0005 +RA A 0000 SQRTP1   + R ADD     /   /        GET Q OF ARGUMENT -35..+35
         0006 +ST I 0068          + STORE     QA
         0007 -RA I 0060          - R ADD     XX
         0008 +TZ I 0056          + TR 0      SQRTEX       EXIT AS SQRT(0) IS ZERO
         0009 +TP I 0011          + TR +      SQ1          IF ARGUMENT IS POSITIVE TR TO PROCEED
         0010 +T  I 0056          + TR        SQRTEX       IF ARGUMENT IS NEGATIVE EXIT RETURNING IT
         0011 -ST I 0064 SQ1      - STORE     ROOT
         0012 +RA I 0057          + R ADD     ZERO
         0013 +ST I 0070          + STORE     Q
         0014 -RA I 0064 LOOP     - R ADD     ROOT
         0015 -ST I 0066          - STORE     PREV         SAVE PREVIOUS ROOT GUESS
         0016 -RA I 0064 LOOPSHF  - R ADD     ROOT 
         0017 -S  I 0060          - SUB       XX
         0018 +TZ I 0020          + TR 0      SQ2
         0019 +TP I 0027          + TR +      XX.LS.RT     IF XX < ROOT TR TO CALC TERM=XX/ROOT
         0020 -RA I 0060 SQ2      - R ADD     XX           HERE XX > ROOT, SO DIVIDE XX BY 2 TO AVOID DIV CHECK
         0021 -AR A 0001          - A RIGHT   0001         AFTER DIVISION XX WILL BE SHIFTED BACK Q PLACES
         0022 -ST I 0060          - STORE     XX
         0023 +RA I 0070          + R ADD     Q            INCR NUM OF PLACES TO SHIFT BACK DIV RESULT
         0024 +A  I 0058          + ADD       ONE
         0025 +ST I 0070          + STORE     Q
         0026 +T  I 0016          + TR        LOOPSHF
         0027 -RA I 0060 XX.LS.RT - R ADD     XX           COMPUTE: TERM=XX/ROOT
         0028 +LM I 0057          + LOAD MQ   ZERO
         0029 -D  I 0064          - DIV       ROOT         
         0030 -SM I 0062          - STORE MQ  TERM         MQ=XX/ROOT AT GIVEN Q         
         0031 +RA I 0068          + R ADD     QA
         0032 +S  I 0070          + SUB       Q
         0033 +SA I 0035          + STORE A   SHR2
         0034 -RA I 0062          - R ADD     TERM
         0035 +AR A 0000 SHR2     + A RIGHT   /   /        NOW ACC=TERM=XX/ROOT AT Q=QA
         0036 -A  I 0064          - ADD       ROOT         COMPUTE: ROOT=(TERM + ROOT)/2
         0037 +AR A 0001          + A RIGHT   0001
         0038 -ST I 0064          - STORE     ROOT
         0039 -S  I 0066          - SUB       PREV         IF ROOT DOES NOT CHANGES FROM ITS PREVIOUS VALUE -> ROOT FOUND -> EXIT LOOP
         0040 +TZ I 0042          + TR 0      LOOPE
         0041 +T  I 0014          + TR        LOOP
         0042 +RA I 0068 LOOPE    + R ADD     QA           CALC Q OF RESULT:  QR=integer part ( (QA+1)/2 )
         0043 +A  I 0058          + ADD       ONE
         0044 +AR A 0001          + A RIGHT   0001
         0045 +ST I 0069          + STORE     QR  
         0046 +RA I 0068          + R ADD     QA
         0047 +S  I 0069          + SUB       QR
         0048 +TP I 0053          + TR +      SHL          IF Q>QR -> TR TO SHIFT ARG LEFT
         0049 +SA I 0051          + STORE A   SHR1
         0050 -RA I 0064          - R ADD     ROOT
         0051 +AR A 0000 SHR1     + A RIGHT   /   /        SHIFT XX SO ITS Q IS NOW Q=QR
         0052 +T  I 0056          + TR        SQRTEX   
         0053 +SA I 0055 SHL      + STORE A   SHL1
         0054 -RA I 0064          - R ADD     ROOT
         0055 +AL A 0000 SHL1     + A LEFT    /   /        SHIFT XX SO ITS Q IS NOW QR
         0056 +T  A 0000 SQRTEX   + TR        /   /        RETURN TO CALLER         
         0057 +000000    ZERO       DEF       0
         0058 +000001    ONE        DEF       1
         0059 +000002    TWO        DEF       2
         0060 +000000    XX         RES       2
         0062 +000000    TERM       RES       2
         0064 +000000    ROOT       RES       2
         0066 +000000    PREV       RES       2
         0068 +000000    QA         RES       1
         0069 +000000    QR         RES       1
         0070 +000000    Q          RES       1            
