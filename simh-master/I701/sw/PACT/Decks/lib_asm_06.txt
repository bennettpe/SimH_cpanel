; SYMBOL TABLE
; Reg Addr   Len
;  I     0    74
;  T     0     0
;    Num  Op.  Addr  Name
; SY   0  DEF     0  ARCTANFN
;  
         0000 -SM I 0064 ARCTANFN - STORE MQ  XX           SAVE FUNCTION ARGUMENT
         0001 +A  I 0061          + ADD       TWO
         0002 +SA I 0005          + STORE A   ATANP1
         0003 +A  I 0060          + ADD       ONE
         0004 +SA I 0058          + STORE A   ATANEX       RETURN TO CALLER         
         0005 +RA A 0000 ATANP1   + R ADD     /   /        GET Q OF ARGUMENT -35..+35
         0006 +ST I 0071          + STORE     Q
         0007 +S  I 0060          + SUB       ONE
         0008 +TP I 0013          + TR +      SHL          IF Q>1 -> TR TO SHIFT ARG LEFT
         0009 +SA I 0011          + STORE A   SHR1
         0010 -RA I 0064          - R ADD     XX
         0011 +AR A 0000 SHR1     + A RIGHT   /   /        SHIFT XX SO ITS Q IS NOW Q=1
         0012 +T  I 0016          + TR        SHL2
         0013 +SA I 0015 SHL      + STORE A   SHL1
         0014 -RA I 0064          - R ADD     XX
         0015 +AL A 0000 SHL1     + A LEFT    /   /        SHIFT XX SO ITS Q IS NOW Q=1
         0016 -ST I 0064 SHL2     - STORE     XX
         0017 +LR A 0035          + L RIGHT   0035         MQ=XX
         0018 -M  I 0064          - MPY       XX           MULT RESULT HAS Q=2
         0019 +A  I 0063          + ADD       ONEQ2
         0020 -ST A 0013          - STORE     XD           XD=(1+X*X) AT Q=2
         0021 -RA I 0064          - R ADD     XX
         0022 +AR A 0001          + A RIGHT   0001         SET Q=2
         0023 +LM I 0059          + LOAD MQ   ZERO
         0024 -D  A 0013          - DIV       XD           RESULT IN MQ AT Q=Q OF XX (=2) - Q OF XD (=2)
         0025 +RA I 0059          + R ADD     ZERO
         0026 +LR A 0001          + L RIGHT   0001         SHIFT SO RESULT IS AT Q=1
         0027 -SM I 0066          - STORE MQ  TERM         TERM=X/XD AT Q=1
         0028 -SM I 0068          - STORE MQ  RES          RESULT=X/XD AT Q=1
         0029 +RA I 0060          + R ADD     ONE
         0030 +ST I 0070          + STORE     N            N=1
         0031 -RA I 0066 LOOP     - R ADD     TERM         COMPUTE: TERM=TERM * (XX*XX / XD)
         0032 +LR A 0035          + L RIGHT   0035         MQ=TERM AT Q=1
         0033 -M  I 0064          - MPY       XX           ACC=TERM (Q=1) * XX (Q=1) -> RESULT ACC AT Q=1+1=2
         0034 +LR A 0035          + L RIGHT   0035         MQ=TERM*XX AT Q=2
         0035 -M  I 0064          - MPY       XX           * XX (Q=1) -> RESULT ACC AT Q=2+1=3
         0036 +LM I 0059          + LOAD MQ   ZERO
         0037 -D  A 0013          - DIV       XD           RESULT IN MQ AT Q=Q OF DIVIDEND (=3) - Q OF XD (=2) -> Q=1
         0038 -SM I 0066          - STORE MQ  TERM         
         0039 +RA I 0070          + R ADD     N
         0040 +AL A 0001          + A LEFT    0001         ACC=N*2
         0041 +ST I 0072          + STORE     ND1          ND1=2*N AT Q=17
         0042 +A  I 0060          + ADD       ONE
         0043 +ST I 0073          + STORE     ND2          ND2=2*N+1 AT Q=17
         0044 +RA I 0072          + R ADD     ND1
         0045 +LM I 0059          + LOAD MQ   ZERO
         0046 +D  I 0073          + DIV       ND2          MQ=ND1/ND2 AT Q=0
         0047 -M  I 0066          - MPY       TERM         NO NEED TO LOAD MQ WITH VALUE. ALREADY SET BY DIV ABOVE
         0048 -ST I 0066          - STORE     TERM         TERM=(ND1/ND2)*TERM
         0049 -A  I 0068          - ADD       RES          NO NEED TO SHIFT RESULT OF MULT: TERM IS Q=1, 1/N IS Q=0
         0050 -ST I 0068          - STORE     RES          RESULT=RESULT*TERM
         0051 +RA I 0070          + R ADD     N
         0052 +A  I 0060          + ADD       ONE
         0053 +ST I 0070          + STORE     N
         0054 +S  I 0062          + SUB       D9
         0055 +TZ I 0057          + TR 0      LOOPE
         0056 +T  I 0031          + TR        LOOP
         0057 +RA I 0068 LOOPE    + R ADD     RES          PUT THE RESULT IN ACC
         0058 +T  A 0000 ATANEX   + TR        /   /        RETURN TO CALLER         
         0059 +000000    ZERO       DEF       0
         0060 +000001    ONE        DEF       1
         0061 +000002    TWO        DEF       2
         0062 +000006    D9         DEF       6
         0063 +032768    ONEQ2      DEF       *100000
         0064 +000000    XX         RES       2
         0066 +000000    TERM       RES       2
         0068 +000000    RES        RES       2
         0070 +000000    N          RES       1
         0071 +000000    Q          RES       1
         0072 +000000    ND1        RES       1            
         0073 +000000    ND2        RES       1            
