; SYMBOL TABLE
; Reg Addr   Len
;  I     0   235
;  T     0     0
;    Num  Op.  Addr  Name
; SY   0  DEF     0  PRTNUM
;  
         0000 +A  I 0229 PRTNUM   + ADD       TWO          PRINT FULL-WORD NUMBER FROM MQ REGISTER 
         0001 -SM I 0202          - STORE MQ  NUM          SAVE NUM TO DECODE FROM MQ
         0002 +SA I 0046          + STORE A   PRTP1        STORE ADDR OF FIRST PARAM (Q)
         0003 +A  I 0228          + ADD       ONE
         0004 +SA I 0023          + STORE A   PRTP2        STORE ADDR OF SECOND PARAM (COLN)
         0005 +A  I 0228          + ADD       ONE
         0006 +SA I 0195          + STORE A   PRTEX
         0007 +TF I 0008          + TR OV     CLOV         CLEAR OV JUST IN CASE
         0008 +RA I 0196 CLOV     + R ADD     ZERO         HANDLE SIGN
         0009 +ST I 0226          + STORE     SGN          
         0010 +ST I 0220          + STORE     DIGIT1       
         0011 -RA I 0202          - R ADD     NUM
         0012 +TP I 0017          + TR +      PRTP0        TR IF NUM >= 0
         0013 -RS I 0202          - R SUB     NUM          NUM := - NUM -> MAKE NUM POSITIVE
         0014 -ST I 0202          - STORE     NUM
         0015 +RA I 0228          + R ADD     ONE          FLAG NUN IS NEGATIVE NUMBER
         0016 +ST I 0226          + STORE     SGN
         0017 +RA I 0222   PRTP0  + R ADD     MINUS0       SET COLUMN MASK TO BE PUT IN A CARD ROW
         0018 -ST I 0214          - STORE     MASKSGN      MASKSGN FOR SIGN
         0019 +RA I 0221          + R ADD     Q1           MASKCOL FOR DIGITS
         0020 -ST I 0212          - STORE     MASKCOL
         0021 +RA I 0196          + R ADD     ZERO         CARD BUFFER USES LOCATION 0..47
         0022 +SA I 0227          + STORE A   PRTROWAD     ADDRESS OF LOWER ROW TO PRINT
         0023 +RA A 0000   PRTP2  + R ADD     /   /        GET NUMBER COLUMN PARAM 1..6
         0024 +S  I 0231          + SUB       D4
         0025 +TP I 0028          + TR +      PRTCOL0
         0026 +A  I 0230          + ADD       D3
         0027 +T  I 0033          + TR        PRTCOL1B
         0028 +ST I 0225  PRTCOL0 + STORE     COLN         
         0029 +RA I 0227          + R ADD     PRTROWAD     IF COLUMN WAS 4,5 OR 6 THEN PRTROWAD=PRTROWAD+2
         0030 +A  I 0229          + ADD       TWO           TO SELECT RIGHT SIDE OF CARD
         0031 +ST I 0227          + STORE     PRTROWAD
         0032 +RA I 0225  PRTCOL1 + R ADD     COLN         SHIFT BOTH MASKS 12 COLUMNS RIGHT TO SELECT          
         0033 +TZ I 0042 PRTCOL1B + TR 0      PRTCOL2      DESIRED COLUMN TO START PRINTING THE NUMBER
         0034 +S  I 0228          + SUB       ONE
         0035 +ST I 0225          + STORE     COLN
         0036 -RA I 0212          - R ADD     MASKCOL
         0037 -AR A 0012          - A RIGHT   0012
         0038 -ST I 0212          - STORE     MASKCOL
         0039 -AL A 0001          - A LEFT    0001
         0040 -ST I 0214          - STORE     MASKSGN
         0041 +T  I 0032          + TR        PRTCOL1
         0042 -RA I 0212  PRTCOL2 - R ADD     MASKCOL
         0043 +AR A 0010          + A RIGHT   0010
         0044 -ST I 0216          - STORE     MASKCOLE     LAST VALID VALUE FOR MASKCOL
         0045 -LM I 0202          - LOAD MQ   NUM
         0046 +RA A 0000    PRTP1 + R ADD     /   /        GET FIRST PARAM (Q)
         0047 +SA I 0061          + STORE A   PRTQL
         0048 +SA I 0065          + STORE A   PRTQL2
         0049 +ST I 0224          + STORE     Q            
         0050 +S  I 0228          + SUB       ONE
         0051 +TP I 0059          + TR +      PRTQP        TR IF Q >= 1 (I.E. THERE IS AN INTEGER PART TO PRINT)
         0052 +RA I 0224          + R ADD     Q
         0053 +SA I 0055          + STORE A   PRTQR        HERE IF Q <= 0 (I.E. INTEGER PART IS ZERO)
         0054 +RA I 0196          + R ADD     ZERO
         0055 -LR A 0000    PRTQR - L RIGHT   /   /
         0056 -ST I 0202          - STORE     NUM          INTEGER PART IS ZERO
         0057 -SM I 0204          - STORE MQ  FRAC         STORE FRACTIONAL PART
         0058 +T  I 0068          + TR        PRTQ1
         0059 +RA I 0196    PRTQP + R ADD     ZERO         HERE IF Q >= 1 (I.E. THERE IS AN INTEGER PART TO PRINT)
         0060 -ST I 0204          - STORE     FRAC
         0061 -LL A 0000    PRTQL - L LEFT    /   /        SHIFT LEFT TO SEPARATE INTEGER PART (NUM)
         0062 -ST I 0202          - STORE     NUM          AND FRACTIONAL PART (FRAC) 
         0063 -SM I 0204          - STORE MQ  FRAC
         0064 -RA I 0198          - R ADD     NUM1
         0065 -AL A 0000   PRTQL2 - A LEFT    /   /
         0066 +TZ I 0126          + TR 0      PRTOVR       NUMBER TOO BIG
         0067 -S  I 0198          - SUB       NUM1         DIGIT=BIGEST INTEGER PART POSSIBLE WITH GIVEN Q
         0068 -ST I 0218    PRTQ1 - STORE     DIGIT        IF (SAY) Q=3, THEN DIGIT=0..111 binary = 2^Q = 8. IF Q < 1 THEN DIGIT=0
         0069 -RA I 0206          - R ADD     NUM10        INIT NUM10K=10
         0070 -ST I 0208          - STORE     NUM10K       NUM10K = 10 UP TO 10.000.000.000 = 10^11 (11 SIGNIFICATIVE DIGITS NEEDED FOR 2^36-1)
         0071 -RA I 0208    PRTQ2 - R ADD     NUM10K       SET NUM10K TO BE ABLE TO PRINT NUM FOR GIVEN Q
         0072 -S  I 0218          - SUB       DIGIT
         0073 +TP I 0079          + TR +      PRTQ2B       TR BECAUSE NUM10K HAS BEEN SET TO THE NEEDED NUMBER OF 0'S TO PRINT NUM AT GIVEN Q
         0074 -LM I 0208          - LOAD MQ   NUM10K       NUM10K = NUM10K  * 10
         0075 -M  I 0206          - MPY       NUM10
         0076 -SM I 0208          - STORE MQ  NUM10K
         0077 +TZ I 0071          + TR 0      PRTQ2
         0078 +T  I 0126          + TR        PRTOVR       Q NOT PRINTABLE. Q SHOULD BE 1..33
         0079 -LM I 0208   PRTQ2B - LOAD MQ   NUM10K       NUM10K = NUM10K  / 10
         0080 -MR I 0210          - MPY R     NUMD10
         0081 -ST I 0208          - STORE     NUM10K       NOW NUM10K=1 FOR Q=1..3, =10 FOR Q=4..6, =100000 FOR Q=17 AND SO ON
         0082 +RA I 0196 PRTSTART + R ADD     ZERO
         0083 +ST I 0218          + STORE     DIGIT        INIT DIGIT
         0084 -RA I 0202   PRTL0  - R ADD     NUM          SUBSTRACT NUM10K 
         0085 -S  I 0208          - SUB       NUM10K        UNTIL NUM IS NEGATIVE
         0086 +TP I 0088          + TR +      PRTL1
         0087 +T  I 0104          + TR        PRTL2          NUM BECOMES <0 -> EXIT LOOP: DIGIT HAS THE DESIRED VALUE
         0088 -ST I 0202   PRTL1  - STORE     NUM
         0089 +RA I 0218          + R ADD     DIGIT        INCR DIGIT COUNT
         0090 +A  I 0228          + ADD       ONE
         0091 +ST I 0218          + STORE     DIGIT
         0092 +T  I 0084          + TR        PRTL0
         0093 -RA I 0200   PRTL3  - R ADD     NUM2         DIGIT=0 AND 1ST SIGNIFICANT DIGIT NOT PRINTED, 
         0094 -S  I 0208          - SUB       NUM10K        IF NUM10K = 1 THEN THIS IS THE UNIT DIGIT, ...
         0095 +TP I 0101          + TR +      PRTL2S           SO KEEP 0 BECAUSE IT IS A SIGNIFICANT 0.   
         0096 +RA I 0223          + R ADD     MINUS1        ELSE SET DIGIT AS A SUPRESSED ZERO 
         0097 +ST I 0218          + STORE     DIGIT         
         0098 +T  I 0106          + TR        PRTDIG
         0099 +RA I 0218  PRTL2NS + R ADD     DIGIT        1ST SIGNIFICANT DIGIT NOT PRINTED, IS THIS DIGIT ZERO?
         0100 +TZ I 0093          + TR 0      PRTL3           YES, TR TO DO MORE CHEKS
         0101 +RA I 0228   PRTL2S + R ADD     ONE          DIGIT NOT ZERO -> IT SO IT IS THE FIRST SIGNIFICANT DIGIT
         0102 +SA I 0220          + STORE A   DIGIT1        SET THE DIGIT1 FLAG
         0103 +T  I 0106          + TR        PRTDIG         CONTINUE TO PRINT IT
         0104 +RA I 0220   PRTL2  + R ADD     DIGIT1       HAS 1ST SIGNIFICANT DIGIT BEING PRINTED?
         0105 +TZ I 0099          + TR 0      PRTL2NS        TR IF NOT 
         0106 +RA I 0218  PRTDIG  + R ADD     DIGIT
         0107 +TP I 0109          + TR +      PRTDN        TR IF PRINTABLE DIGIT 0..9
         0108 +T  I 0118          + TR        PRTDIG2      -1=SUPRESSED ZERO -> SKIP PRINTING
         0109 +RA I 0232    PRTDN + R ADD     D9           PRINT DIGIT IN CARD
         0110 +S  I 0218          + SUB       DIGIT      
         0111 +AL A 0002          + A LEFT    0002         x4
         0112 +A  I 0227          + ADD       PRTROWAD
         0113 +SA I 0116          + STORE A   PRTD1
         0114 +SA I 0117          + STORE A   PRTD2
         0115 -RA I 0212          - R ADD     MASKCOL
         0116 -A  A 0000    PRTD1 - ADD       /   /
         0117 -ST A 0000    PRTD2 - STORE     /   /
         0118 -RA I 0212  PRTDIG2 - R ADD     MASKCOL      INCR COLUMN 
         0119 -AR A 0001          - A RIGHT   0001
         0120 -ST I 0212          - STORE     MASKCOL
         0121 -LM I 0208          - LOAD MQ   NUM10K       DIVIDE NUM10K BY 10:
         0122 -MR I 0210          - MPY R     NUMD10        x ((2^35)/10), THEN KEEP ACC RESULT
         0123 -ST I 0208          - STORE     NUM10K         I.E. EQUVALENT TO DIVIDE BY 2^35 
         0124 -TZ I 0135          - TR 0      PRTEND1         EXIT LOOP WHEN NUM10K=0 (IN FACT IS 0.1, .1 IS IN MQ)
         0125 +T  I 0082          + TR        PRTSTART
         0126 -RA I 0212   PRTOVR - R ADD     MASKCOL      OVERFLOW: PRINT 3 DOTS
         0127 -AR A 0001          - A RIGHT   0001
         0128 +A  I 0212          + ADD       MASKCOL
         0129 -AR A 0001          - A RIGHT   0001
         0130 +A  I 0212          + ADD       MASKCOL
         0131 +ST I 0212          + STORE     MASKCOL
         0132 +RA I 0196          + R ADD     ZERO
         0133 -ST I 0204          - STORE     FRAC
         0134 +T  I 0152          + TR        PRTDOT
         0135 +RA I 0226  PRTEND1 + R ADD     SGN          IF NUMBER POSITIVE, TR TO PRINT ITS FRACIONAL PART
         0136 +TZ I 0152          + TR 0      PRTDOT
         0137 +RA I 0234          + R ADD     D40          IF NEGATIVE, PUNCH ON ROW X(11)          
         0138 +A  I 0227          + ADD       PRTROWAD      TO PRINT A '-' SIGN 
         0139 +SA I 0141          + STORE A   PRTD3          ROW ADDRESS=(11 - 1)*4 = 40
         0140 +SA I 0151          + STORE A   PRTD4
         0141 -RA A 0000    PRTD3 - R ADD     /   /
         0142 +TP I 0144          + TR +      PRTD3A       TR IF WORD IS +0 OR +000N000
         0143 +T  I 0146          + TR        PRTD3N       WORD IS -0 OR -000N000 -> IN ANY CASE SHOULD SUB MASK
         0144 +TZ I 0148   PRTD3A + TR 0      PRTD3S       TR IF WORD IS +0 -> STORE MASK (MASK CAN BE -0) 
         0145 +T  I 0150          + TR        PRTD3P       WORD IS +000N000 -> ADD MASK
         0146 -S  I 0214   PRTD3N - SUB       MASKSGN
         0147 +T  I 0151          + TR        PRTD4
         0148 -RA I 0214   PRTD3S - R ADD     MASKSGN
         0149 +T  I 0151          + TR        PRTD4
         0150 -A  I 0214   PRTD3P - ADD       MASKSGN
         0151 -ST A 0000    PRTD4 - STORE     /   /
         0152 +RA I 0231   PRTDOT + R ADD     D4           ADD DECIMAL SEPARATOR DOT PUNCHING ROWS 8-3-Y
         0153 +A  I 0227          + ADD       PRTROWAD      AT END OF PRINTED NUMBER (THE INTEGER PART)
         0154 +SA I 0160  PRTDOT1 + STORE A   PRTD5             (9-8)*4 = 4
         0155 +SA I 0161          + STORE A   PRTD6             (9-3)*4 =24 = +20
         0156 +RA I 0165          + R ADD     PRTENDLP          (11)*4 = 44 = +20
         0157 +S  I 0160          + SUB       PRTD5
         0158 +TP I 0166          + TR +      PRTDOT2
         0159 -RA I 0212          - R ADD     MASKCOL           
         0160 -A  A 0000    PRTD5 - ADD       /   /
         0161 -ST A 0000    PRTD6 - STORE     /   /
         0162 +RA I 0160          + R ADD     PRTD5
         0163 +S  I 0233          + SUB       D20
         0164 +T  I 0154          + TR        PRTDOT1
         0165 -A  A 0048 PRTENDLP - ADD       0048         PRINT LOOP END VALUE
         0166 -RA I 0212  PRTDOT2 - R ADD     MASKCOL           
         0167 -S  I 0216          - SUB       MASKCOLE     
         0168 +TZ I 0195          + TR 0      PRTEX        NO ROOM TO PRINT FRAC PART 
         0169 -RA I 0212          - R ADD     MASKCOL      ADVANCE 1 POS TO RIGHT TO PRINT
         0170 -AR A 0001          - A RIGHT   0001         FRAC PART OF NUMBER
         0171 -ST I 0212          - STORE     MASKCOL
         0172 -RA I 0204  PRTFRAC - R ADD     FRAC 
         0173 +TZ I 0195          + TR 0      PRTEX        NO FRAC PART TO PRINT
         0174 -LM I 0204          - LOAD MQ   FRAC         FRAC = FRAC * 10
         0175 -M  I 0206          - MPY       NUM10        DIGIT = INTEGER PART OF FRAC
         0176 -SM I 0204          - STORE MQ  FRAC         FRAC = FRACTIONAL PART OF FRAC
         0177 +AL A 0018          + A LEFT    18
         0178 +ST I 0218          + STORE     DIGIT
         0179 +RA I 0232          + R ADD     D9           PRINT DIGIT IN CARD
         0180 +S  I 0218          + SUB       DIGIT      
         0181 +AL A 0002          + A LEFT    0002         x4
         0182 +A  I 0227          + ADD       PRTROWAD
         0183 +SA I 0186          + STORE A   PRTD7
         0184 +SA I 0187          + STORE A   PRTD8
         0185 -RA I 0212          - R ADD     MASKCOL
         0186 -A  A 0000    PRTD7 - ADD       /   /
         0187 -ST A 0000    PRTD8 - STORE     /   /
         0188 -RA I 0212          - R ADD     MASKCOL           
         0189 -S  I 0216          - SUB       MASKCOLE     
         0190 +TZ I 0195          + TR 0      PRTEX        NO MORE ROOM FOR FRAC PART DECIMALS
         0191 -RA I 0212          - R ADD     MASKCOL      INCR COLUMN 
         0192 -AR A 0001          - A RIGHT   0001
         0193 -ST I 0212          - STORE     MASKCOL
         0194 +T  I 0172          + TR        PRTFRAC      
         0195 +T  A 0000    PRTEX + TR        /   /        
         0196 +000000    ZERO       DEF       0            
         0197 +000000               DEF       0            
         0198 +000000    NUM1       DEF       0
         0199 +000001               DEF       1
         0200 +000000    NUM2       DEF       0
         0201 +000002               DEF       2
         0202 +000000    NUM        DEF       0            NUMBER TO PRINT (INTEGER PART)
         0203 +000000               DEF       0            
         0204 +000000    FRAC       DEF       0            NUMBER TO PRINT (FRACTIONAL PART)
         0205 +000000               DEF       0
         0206 +000000    NUM10      DEF       0
         0207 +000010               DEF       10
         0208 +000000    NUM10K     DEF       0
         0209 +000000               DEF       0
         0210 +013107    NUMD10     DEF       *031463      = (2^35) / 10 = 3435973836 = OCTAL 031463 146314
         0211 +052428               DEF       *146314
         0212 +000000    MASKCOL    DEF       0            MASK TO PRINT IN A CARD ROW 
         0213 +000000               DEF       0            EACH BIT MAPS TO PRINTER COLUMN (1..36)
         0214 +000000    MASKSGN    DEF       0            MASK TO PRINT '-' SIGN OF NUMBER IN A CARD ROW 
         0215 +000000               DEF       0            EACH BIT MAPS TO PRINTER COLUMN (1..36)
         0216 +000000    MASKCOLE   DEF       0            MASK TO PRINT IN A CARD ROW 
         0217 +000000               DEF       0            LAST VALID COLUMN OF NUMBER
         0218 +000000    DIGIT      DEF       0            THE DIGIT TO PRINT. 0..9, -1=SUPRESSED ZERO
         0219 +000000               DEF       0
         0220 +000000    DIGIT1     DEF       0            =1 IF PRINTED 1ST SIGNIFICAT DIGIT
         0221 +065536    Q1         DEF       *200000      LEFTMOST BIT (AFTER SIGN) SET TO 1
         0222 -000000    MINUS0     DEF       *400000      -0
         0223 -000001    MINUS1     DEF       *400001      -1
         0224 +000000    Q          DEF       0
         0225 +000000    COLN       DEF       0
         0226 +000000    SGN        DEF       0            =1 IF NUM TO PRINT IS NEGATIVE
         0227 +000000    PRTROWAD   DEF       0            ADDR OF LOWER ROW OF CARD
         0228 +000001    ONE        DEF       1
         0229 +000002    TWO        DEF       2
         0230 +000003    D3         DEF       3
         0231 +000004    D4         DEF       4
         0232 +000009    D9         DEF       9
         0233 +000020    D20        DEF       20
         0234 +000040    D40        DEF       40
