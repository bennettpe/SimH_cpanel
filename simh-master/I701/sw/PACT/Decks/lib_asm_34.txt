; SYMBOL TABLE
; Reg Addr   Len
;  I     0    60
;  T     0     0
;    Num  Op.  Addr  Name
; SY   0  DEF     0  SORTTBL
;  
         0000 +A  I 0059 SORTTBL  + ADD       TWO 
         0001 +SA I 0006          + STORE A   P1           PARM: ADDR OF TABLE
         0002 +A  I 0058          + ADD       ONE          
         0003 +SA I 0008          + STORE A   P2           PARM: LEN OF TABLE
         0004 +A  I 0058          + ADD       ONE          
         0005 +SA I 0015          + STORE A   EXIT
         0006 +RA A 0000 P1       + R ADD     /   /        GET ADDR OF TABLE
         0007 +SA I 0053          + STORE A   TBL
         0008 +RA A 0000 P2       + R ADD     /   /        GET ADDR OF LEN OF TABLE
         0009 +SA I 0010          + STORE A   P2A
         0010 +RA A 0000 P2A      + R ADD     /   /        DERREFERENCE -> ACC=LEN
         0011 +ST I 0051          + STORE     N
         0012 +TZ I 0015          + TR 0      EXIT         EXIT, NO MORE ENTRIES IN TABLE TO SORT
         0013 +RA I 0051 LOOP     + R ADD     N            
         0014 +S  I 0058          + SUB       ONE          
         0015 +TZ A 0000 EXIT     + TR 0      /   /        EXIT, NO MORE ENTRIES TO SORT -> EXIT
         0016 +ST I 0051          + STORE     N
         0017 +ST I 0052          + STORE     I
         0018 +RA I 0057          + R ADD     ZERO
         0019 +ST I 0056          + STORE     MAXAD        NO MAX VALUE YET
         0020 +RA I 0052 LOOPM1   + R ADD     I
         0021 +A  I 0053          + ADD       TBL          TABLE BASE ADDR
         0022 +SA I 0023          + STORE A   RDTBL
         0023 +LM A 0000 RDTBL    + LOAD MQ   /   /        MQ=TBL[I]
         0024 +RA I 0056          + R ADD     MAXAD        IS MAXAD (ADDR OF MAX VALUE) SET?
         0025 +TZ I 0031          + TR 0      SORTM1       NO -> JUST SAVE MAXAD=LOCATION OF TBL[I] AND MAX=TBL[I]
         0026 +SM I 0054          + STORE MQ  VAL          YES -> COMPARE MAX VALUE WITH TBL[I]
         0027 +RA I 0057          + R ADD     ZERO
         0028 +AV I 0055          + ADD AB    MAX          IF ABS(VAL) < ABS(MAX) THEN ...          
         0029 +SV I 0054          + SUB AB    VAL
         0030 +TP I 0034          + TR +      SORTM2       ... TR TO PROCEED WITH NEXT I
         0031 +SM I 0055 SORTM1   + STORE MQ  MAX          SAVE MAXAD, MAX
         0032 +RA I 0023          + R ADD     RDTBL        
         0033 +SA I 0056          + STORE A   MAXAD     
         0034 +RA I 0052 SORTM2   + R ADD     I            PROCEED WITH NEXT I
         0035 +TZ I 0039          + TR 0      SORTM3
         0036 +S  I 0058          + SUB       ONE
         0037 +ST I 0052          + STORE     I
         0038 +T  I 0020          + TR        LOOPM1
         0039 +RA I 0051 SORTM3   + R ADD     N            EXCHANGE TBL[N] <-> MAXAD (TBL ENTRY WITH MAX ABS VALUE)
         0040 +A  I 0053          + ADD       TBL          SO TBL[N] NOW HAS THE MAX VALUE
         0041 +SA I 0046          + STORE A   SWAPN1
         0042 +SA I 0048          + STORE A   SWAPN2
         0043 +RA I 0056          + R ADD     MAXAD
         0044 +SA I 0047          + STORE A   SWAPM1
         0045 +SA I 0049          + STORE A   SWAPM2
         0046 +RA A 0000 SWAPN1   + R ADD     /   /
         0047 +LM A 0000 SWAPM1   + LOAD MQ   /   /         
         0048 +SM A 0000 SWAPN2   + STORE MQ  /   /
         0049 +ST A 0000 SWAPM2   + STORE     /   /         
         0050 +T  I 0013          + TR        LOOP
         0051 +H  A 0000 N        + STOP      0000
         0052 +H  A 0000 I        + STOP      0000
         0053 +H  A 0000 TBL      + STOP      0000
         0054 +H  A 0000 VAL      + STOP      0000
         0055 +H  A 0000 MAX      + STOP      0000
         0056 +H  A 0000 MAXAD    + STOP      0000
         0057 +H  A 0000 ZERO     + STOP      0000
         0058 +H  A 0001 ONE      + STOP      0001         constant 1
         0059 +H  A 0002 TWO      + STOP      0002         constant 2
