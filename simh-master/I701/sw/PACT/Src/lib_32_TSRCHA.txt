                                  (c) May 2025 by Roberto Sancho

                                  PACT I Compiler
                                   
                                  To be assembled with Ibm701Assembler.exe cross-assembler

LABEL--- S OPCODE--- OPADDR---    COMMENT   *NNNN -> octal number, else decimal number


           HEAD      PACTREL      USING PACT RELATIVE ASSEMLER SYNTAX

                                  DEFINE SYMBOLS NAME FOR PACT LOADER

           HEAD      DEF:SRCHTBLA        SEARCH TABLE ABS VALUE

                                  SEARCH TABLE, RETURN ACC=ENTRY NUMBER WHERE VAL IS FOUND
                                                          =0 IF NOT FOUND)
                                  PARAMS: TBL: LOCATION OF TABLE START
                                          LEN: LOCATION OF LEN=NUMBER OF HALF-WORDS TO SEARCH (=0 -> TABLE EMPTY, =1 -> TABLE HAS ONE ENTRY)
                                          VAL: LOCATION OF VAL=VALUE TO FIND



SRCHTBLA + ADD       TWO 
         + STORE A   P1           PARM: ADDR OF TABLE
         + ADD       ONE          
         + STORE A   P2           PARM: LEN OF TABLE
         + ADD       ONE          
         + STORE A   P3           PARM: VAL TO FIND
         + ADD       ONE          
         + STORE A   EXIT

P1       + R ADD     /   /        GET ADDR OF TABLE
         + STORE A   RDTBL
        
P2       + R ADD     /   /        GET ADDR OF LEN OF TABLE
         + STORE A   P2A
P2A      + R ADD     /   /        DERREFERENCE -> ACC=LEN
         + STORE     LEN

P3       + R ADD     /   /        GET ADDR OF VAL TO FIND
         + STORE A   P3A
         + R ADD     ZERO
P3A      + ADD AB    /   /        DERREFERENCE -> ACC=ABS(VAL)
         + STORE     VAL

         + R ADD     ZERO
         + STORE     N

LOOP     + R ADD     N            
         + SUB       LEN
         + TR 0      EXIT         EXIT, NO MORE ENTRIES IN TABLE TO CHECK. RETURN 0 AS NOT FOUND
         + R ADD     N            
         + ADD       ONE          
         + STORE     N
         + R ADD     VAL          ACC=THE SEARCHED VALUE
RDTBL    + SUB AB    /   /    
         + TR 0      FOUND        TR IF VAL FOUND IN ENTRY N
         + R ADD     RDTBL
         + ADD       ONE
         + STORE A   RDTBL
         + TR        LOOP

FOUND    + R ADD     N            RETURN ENTRY FOUND
EXIT     + TR        /   /

N        + STOP      0000
LEN      + STOP      0000
VAL      + STOP      0000

ZERO     + STOP      0000
ONE      + STOP      0001         constant 1
TWO      + STOP      0002         constant 2


