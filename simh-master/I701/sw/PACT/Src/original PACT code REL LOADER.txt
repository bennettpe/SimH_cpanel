
                                          ORIGINAL PACT CODE RETRIEVED FROM
                                          OCTAL BINARY DUMP FROM The Charles Babbage Institute Archives
                                          Florence R. Anderson papers (CBI 101)   
                                          Class notes for experienced programmers, 1955.


        DEC
        NNNN OP ADDR COMMENTS 
        3500+09 3800 READ     + ADD      TWO
        3501+13 3730          + STORE A  READEX      SAVE RETURN ADDR
        3502-24 2048 READCRD  - READ     2048        START READING DATA PUNCHED CARD


        DEC
        NNNN OP ADDR COMMENTS 

                            REGION ORIGIN TABLE
        0068+00 0000        reg=A=0 (absolute)
        0069+00 0000
        0070-06 3649        reg=I=1 (instruction)
        0071+00 0094        start of prog
        0072+00 0002        reg=V=2 (vars)
        0073+00 3810        start of vars
        0074+00 0003        reg=T=3 (temp vars)
        0075+00 3806        start of temporal vars
        0076+00 0004        reg=N=4 (numbers) 
        0077+00 3802        start of number constants     
        0078+00 0005        reg=P=5 (perishable storge = temp var for libraries)
        0079+00 0006        start of temp vars for libraries
        0080+00 0000        reg=6 not used
        0081+00 0000     
        0082- 28225         base48 name of 1st region
        0083+00 0094        addr of first region
        0084+29 0052        base48 name of 1st lib routine (read)
        0085+00 3500        read routine start addr
        0086+29 0053        base48 name of 2st lib routine (list)
        0087+00 3268        list routine start addr
        0088+00 0000
        0089+00 0000
        0090- 28226         base48 name of 2nd region
        0091+00 3174
        0092- 80002         base48 name of 3rd region
        0093+00 3168

                              
        0094                START OR PACT PROC, 1ST REGION

        



     

                                  PACT  REGION ORIGIN CONTROL CARD (INITIAL CONTROL CARD)

                                              CODE=-00

                                   / ........ [CODE][ORIGIN=0  ] [TOP SYMBOL = 0  ] ............[      CHECK SUM       ].
                                  |  ........ .................. .................. [COUNT           ] .................. 
                                  |  ........ .................. .................. .................. .................. 
                                  |  ........ ........^......... .................. .................. .................. 
                                  |  ........ ........|......... .................. .................. .................. 
                                  |  ........ ........|......... .................. .................. .................. 
                                  |  ........ ........|......... .................. .................. .................. 
                                  |  ........ [SYMBOL          ] [OP=1][LOC OR EXT] .................. ..................
                                  |  ........ .................. .................. [1ST PACT REGION ] [OP=0][START     ] 
                                  |  ........ [4=NUMS REGION   ] [OP=1][LOC OR EXT] [5=PERISHBLE REG ] [OP=1][LOC OR EXT] 
                                  |  ........ [2=VARS REGION   ] [OP=1][LOC OR EXT] [3=TEMP REGION   ] [OP=1][LOC OR EXT] 
                                  |  ........ .................. .................. .................. ......[RO TBL AD ] 

                                              START     = INITAL REGION = ABS LOCATION OF 1ST REGION TO BE EXECUTED
                                              RO TBL AD = REGION ORIGIN TABLE ABSOLUTE LOCATION
                                              OP=1 -> REGION EXTENT IS GIVEN
                                              OP=0 -> REGION ABSOLUTE LOCATION IS GIVEN / REGION NOT USED
                                              SYMBOL    = <0 -> BASE48 NAME OF PACT REGION. 
                                                        = >0 -> BASE48 NAME OF LIBRARY ROUTINE. 


                              <missign code here>

        3814+10 3818          + R ADD    L3818     SET TO NOT CLEAR RO TABLE ... <--- original code starts here
        3815+12 3861          + STORE              ... AFTER READING CARD
        3816+01 3862          + TR       L3862     TR TO CHECK CHKSUM ON CONTRL CARD 

        3817+01 3779 L3817    + TR       
        3818+01 3862 L3818    + TR       L3862     
        3819+14 0094 ROZEND   + STORE MQ /   /
        3820+01 4094 HI4094   + TR       4096
        3821+00 0012          + STOP     

                                                      READ CARD 
                                                      IN 0000..0047, COMPUTE CHKSUM 

        3822-24 2048 READCC   - READ     2048         PREPARE TO READ FROM CARD READER
        3823+10 4002          + R ADD    ZERO
        3824-12 4086          - STORE    DATA
        3825-12 4088          - STORE    SUM
        3826+13 3912          + STORE A  RDINS
        3827+13 3950          + STORE A  RDCC1        INIT TO READ CONTROL CARD
        3828+13 3836          + STORE A  RD1C         INIT TO PROCESS CARD DATA STARTING AT ADDR 0000
        3829+13 3832 RD1LOOP  + STORE A  RD1A         INIT TO COPY CARD DATA STARTING AT ADDR 0000
        3830+09 4004          + ADD      TWO
        3831+13 3833          + STORE A  RD1B
        3832-31 0044 RD1A     - COPY     /   /        READ CARD
        3833-31 0046 RD1B     - COPY     /   /
        3834+10 4005          + R ADD    D3
        3835+12 4090          + STORE    COUNT
        3836+10 0046 RD1C     + R ADD    /   /        GET HALFWORD READ FROM CARD 
        3837+12 4087          + STORE    DATA2        SAVE IN RIGHT HALF-WORD OF DATA
        3838-10 4086          - R ADD    DATA         GET THE WHOLE DATA FULLWORD
        3839-09 4088          - ADD      SUM          ADD IT TO CHECKSUM
        3840-12 4088          - STORE    SUM
        3841+10 3836          + R ADD    RD1C         INCR RD1C ADDR
        3842+09 4003          + ADD      ONE
        3843+13 3836          + STORE A  RD1C
        3844+05 3991          + SUB      RDEND        TEST EN OF LOOP AT ADDR 0046 
        3845+03 3853          + TR +     RD1END       TR IF END OF LOOP
        3846+10 4090          + R ADD    COUNT
        3847+05 4003          + SUB      ONE
        3848+12 4090          + STORE    COUNT
        3849+03 3836          + TR +     RD1C
        3850+06 3833          + R SUB    RD1B
        3851+09 4004          + ADD      TWO
        3852+01 3829          + TR       RD1LOOP

        3853+15 0044 RD1END   + LOAD MQ  0044         GET CARD CODE+ORIGIN
        3854+20 0005          + L LEFT   0005
        3855-12 4086          - STORE    DATA         SET DATA2=CODE
        3856+21 0005          + L RIGHT  0005
        3857+14 4086          + STORE MQ DATA         SET ADDR PART OF DATA=CARD ORIGIN
        3858+03 0000          + TR +     0000         IF CARD CODE >= 0 -> START PACT PROGRAM (GO TO INSTR 0000 IN TRANSFER CARD)
        3859+10 0042          + R ADD    0042         GET CARD COUNT
        3860+13 3994          + STORE A  CRDCNT       SAVE CARD COUNT -> NUM OF HALF WORDS IN CARD
        3861+01 3862          + TR       L3862        TR TO CHECK CHKSUM/CLEAR RO TABLE

        3862-06 0046 L3862    - R SUB    0046         CHECK CHKSUM ON CONTRL CARD MATCHES THE CALCULATED ONE
        3863+22 0012          + A LEFT   0012 
        3864+23 0013          + A RIGHT  0013         
        3865-09 4088          - ADD      SUM
        3866+04 3868          + TR 0     CHKOK        TR IF CHKSUM OK
        3867+00 3868          + STOP     CHKOK      ERROR: BAD CHECKSUM, PRESS START TO CONTINE PROCESSING CARD

        3868+10 3992  CHKOK   + R ADD    ROTBLAD    ADDR OF REGION ORIGIN TABLE
        3869+13 3870          + STORE A  L3870      INIT TO SCAN RO TABLE TO FOUND CARD TOP SYMBOL
        3870+10 0082  L3870   + R ADD    /   /
        3871+05 0045          + SUB      0045       IS SAME AS TOP SYMBOL IN CARD? 
        3872+04 3879          + TR 0     SYFND      IF =0 -> YES, SAME SYMBOL -> TR TO SYFND
        3873+06 3870          + R SUB    L3870
        3874+05 4004          + SUB      TWO
        3875+13 3870          + STORE A  L3870
        3876+09 3993          + ADD      ROEND
        3877+03 3870          + TR +     L3870   
        3878+00 3822          + STOP     READCC     ERROR: SYMBOL IN CARD NOT FOUND, PRESS START TO READ NEXT CONTROL CARD 

        3879+10 3870  SYFND   + R ADD    L3870      GET ADDR IN RO TABLE OF TOP SYMBOL FOUND
        3880+13 3881          + STORE A  L3881
        3881-10 0082  L3881   - R ADD    /   /      GET FULLWORD WITH SYMBOL FOUND|OP.LOC/EXT
        3882-12 0070          - STORE    
        3883+04 3885          + TR 0     L3885
        3884+10 0071          + R ADD               GET ADDR OF SYMBOL
        3885+05 4086  L3885   + SUB      DATA       DATA=CARD ORIGIN
        3886+13 3923          + STORE A  WRADDR     SET ABSOLUTE DESTINATION ADDR=CARD ORIGIN
        3887+10 4087          + R ADD    DATA2      DATA2=CARD CODE (01=CONTROL CARD, 00=INST CARD)
        3888+04 3892          + TR 0     ICRD       TR TO PROCESS PACT RELATIVE INSTR BINARY CARDS
        3889+05 4003          + SUB      ONE
        3890+04 3946          + TR 0     CCRD       TR TO PROCESS PACT CONTROL CARDS       
        3891+01 0000          + TR       0000       ANY OTHER CARD CODE -> START PACT PROGRAM (GO TO INSTR 0000 IN TRANSFER CARD)

                                                    PROCESS INSTR CARD

        3892+10 0071  ICRD    + R ADD               GET OP.LOCATION/EXTENT
        3893+04 4001          + TR 0     ERRNOLOC   IF =0 -> TR TO STOP
        3894+10 3995          + R ADD    D36        
        3895+13 3896          + STORE A  RD2LOOP
        3896-10 0038  RD2LOOP - R ADD    /   /      GET INDICES VALUE (3 BITS PER INDEX, FULLWORD=36 BITS -> 12 INDICES PER FULLWORD)
        3897-12 4088          - STORE    SUM        SUM=INDICES 
        3898+10 3998          + R ADD    D12
        3899+12 4092          + STORE    INDCNT     INIT NUMBER OF INDICES LEFT IN SUM FULLWORD = 12
        3900-15 4088          - LOAD MQ  SUM        GET INDICES FULLWORD
        3901+10 4002          + R ADD    ZERO
        3902+20 0000          + L LEFT   0000       ACC SIGN = BIT3 OF TAG 
        3903+03 3906          + TR +     L3906      TR IF TAG IS 0,1,2,3
        3904-10 4002          - R ADD    ZERO       ACC= 000000 000001
        3905+21 0000          + L RIGHT  0000              
        3906+20 0002 L3906    + L LEFT   0002       NOW ACC = 000000 000 TAG (WHERE TAG=0..7), MQ=REMAINING INDICES
        3907+01 3910          + TR       L3910
        3908+10 4002 L3908    + R ADD    ZERO
        3909+20 0003          + L LEFT   0003
        3910+22 0001 L3910    + A LEFT   0001       
        3911-12 4090          - STORE    COUNT      -> REGAD = REGION INDEX TAG * 2 = REGION OFFSET ON RO TABLE
        3912+10 0016 RDINS    + R ADD    /   /      READ INSTR HALFWORD
        3913+12 4000          + STORE    INSTR      MACHINE CODE INSTR 
        3914+10 4091          + R ADD    REGAD      REGION OFFSET ON RO TABLE
        3915+05 3996          + SUB      D14        IF =14 -> INSTR REGION = 7
        3916+04 3940          + TR 0     REG.S      TR IF INSTR REGION = 7 
        3917+09 3997          + ADD      SYTBLAD    ADDRESS WHERE SYMBOLS START IN RO 
        3918+13 3919          + STORE A  
        3919+10 0069          + R ADD    /   /
        3920+11 4000          + ADD AB   INSTR      MACHINE CODE INSTR 
        3921+13 4000 L3921    + STORE A  INSTR      MACHINE CODE INSTR 
        3922+10 4000          + R ADD    INSTR      MACHINE CODE INSTR 
        3923+12 0110  WRADDR  + STORE                SAVE AT ABSOLUTE DESTINATION ADDR
        3924+10 3912          + R ADD    RDINS       INCR INSTR TO READ
        3925+09 4003          + ADD      ONE
        3926+13 3912          + STORE A  RDINS
        3927+05 3994          + SUB      CRDCNT
        3928+03 3822          + TR +     READCC     TO READ NEXT CONTROL CARD
        3929+10 3923          + R ADD    WRADDR
        3930+09 4003          + ADD      ONE
        3931+13 3923          + STORE A  WRADDR
        3932+06 4003          + R SUB    ONE        DEC NUMBER OF INDICES LEFT IN SUM FULLWORD
        3933+09 4092          + ADD      INDCNT
        3934+12 4092          + STORE    INDCNT
        3935+03 3908          + TR +     L3908

        3936+10 3896          + R ADD    RD2LOOP
        3937+05 4004          + SUB      TWO
        3938+13 3896          + STORE A  RD2LOOP
        3939+01 3896          + TR       RD2LOOP

        3940+10 3997 REG.S    + R ADD    SYTBLAD    ADDRESS WHERE SYMBOLS START IN RO 
        3941+11 4000          + ADD AB   INSTR      MACHINE CODE INSTR 
        3942+13 3943          + STORE A  L3943      IF SYMBOL NOT DEFINED BUT USED -> ERROR
        3943+10 0089 L3943    + R ADD    /   /
        3944+04 3999          + TR 0     ERRSYND  
        3945+01 3921          + TR       3921

                                                 PROCESS CONTROL CARD AT 0000..0047

        3946+10 3923 CCRD     + R ADD    WRADDR    GET ABSOLUTE DESTINATION ADDR=CARD ORIGIN
        3947+09 3992          + ADD      ROTBLAD   REGION ORIGIN TABLE ADDR   
        3948+13 3953          + STORE A  RDRO      SET ADDR TO READ FROM REGION ORIGIN TABLE ENTRY
        3949+13 3973          + STORE A  WRRO      SET ADDR TO WRITE TO REGION ORIGIN TABLE ENTRY
        3950-10 0000 RDCC1    - R ADD    /   /     READ CONTROL CARD WORD = SYMBOL | OP.LOC/EXT
        3951+04 3974          + TR 0     NXTSY     IF =0 -> PROCEED WITH NEXT WORD IN CONTROL CARD
        3952-12 4088          - STORE    SUM       SAVE CONTROL CARD SUPLIED SYMBOL | OP.LOC/EXT
        3953-10 0094 RDRO     - R ADD    /   /     READ FROM REGION ORIGIN TABLE ENTRY
        3954+04 3963          + TR 0     RO1       TR TO RO1 IF REGION ORIGIN TABLE ENTRY IS FREE
        3955-12 4086          - STORE    DATA      IF ENTRY IS USED, CHECK IT IS OCCUPIED BY SAME SYMBOL
        3956+10 4086          + R ADD    DATA      A CURRENT ONE
        3957+05 4088          + SUB      SUM
        3958+04 3960          + TR 0     RO0       TR IF SAME SYMBOL
        3959+00 3963          + STOP     RO1       ERROR: RO ENTRY USED BY ANOTHER SYMBOL, PRESS START TO OVERWRITE SYMBOL 
        3960+10 4087 RO0      + R ADD    DATA2     GET SYMBOL LOC IN TABLE
        3961+04 3963          + TR 0     RO1       TR IF ZERO (=EMPTY)
        3962+00 3963          + STOP     RO1       STOP: SYMBOL ALREADY DEFINED, PRESS START TO OVERWRITE SYMBOL 
        3963+10 4089 RO1      + R ADD    SUM2      GET OP.LOC/EXT FROM CONTROL CARD
        3964+23 0030          + A RIGHT  0030
        3965+04 3972          + TR 0     RO2       TR IF OP=0 -> SET LOCATION OF SYMBOL
        3966+10 4093          + R ADD    HI
        3967+05 4089          + SUB      SUM2      HI=HI - MAKE EVEN(SYMBOL EXTENT)
        3968+23 0019          + A RIGHT  0019      
        3969+22 0019          + A LEFT   0019
        3970+13 4093          + STORE A  HI           
        3971+12 4089          + STORE    SUM2      SYMBOL LOCATION = HI
        3972-10 4088 RO2      - R ADD    SUM        GET CONTROL CARD SUPLIED SYMBOL | LOCATION
        3973-12 0094 WRRO     - STORE    /   /      WRITE TO REGION ORIGIN TABLE ENTRY
        3974+10 3953 NXTSY    + R ADD    RDRO       INCR TO READ/WRITE NEXT RO ENTRY
        3975+05 4004          + SUB      TWO
        3976+13 3953          + STORE A  RDRO
        3977+13 3973          + STORE A  WRRO      
        3978+09 3993          + ADD      ROEND      EXPAND RO TABLE IF NEEDED          
        3979+03 3983          + TR +     L3983
        3980+10 3993          + R ADD    ROEND
        3981+09 4004          + ADD      TWO
        3982+13 3993          + STORE A  ROEND
        3983+10 3950 L3983    + R ADD    RDCC1      INCR TO READ NEXT WORD FROM CONTROL CARD
        3984+05 4004          + SUB      TWO
        3985+13 3950          + STORE A  RDCC1
        3986+09 3994          + ADD      CRDCNT
        3987+03 3950          + TR +     RDCC1      TR TO READ NEXT CONTROL CARD WORD
        3988+10 0083 L3988    + R ADD    /   /      AT END OF CARD READ, SET ADDR 4095=LOC OF 1ST REGION
        3989+12 4095          + STORE    PRGSTRT
        3990+01 3822          + TR       READCC     READ NEXT CONTROL CARD

        3991+10 0046 RDEND    + R ADD    0046          LOCATION FOR END OF CARD DATA
        3992+00 0068 ROTBLAD  + STOP     0000          ABSOLUTE ADDR WHERE REGION ORIGIN TABLE STARTS
        3993+10 0094 ROEND    + R ADD    0000          1ST ADDR AFTR REGION ORIGIN TABLE (=TABLE END)
        3994+10 0036  CRDCNT  + R ADD    0000          LAST HALF WORD IN CONTROL CARD   
        3995+00 0036  D36     + STOP     0036
        3996+00 0014  D14     + STOP     0014
        3997+00 0083 SYTBLAD  + STOP     0000       ADDRESS WHERE SYMBOLS START IN RO 
        3998+00 0012  D12     + STOP     0012
        3999+00 3921 ERRSYND  + STOP     3921          ERROR: INSTR USES SYMBOL NUM THAT HAS NOT BEEN DEFINED, PRESS START TO CONTINUE 
        4000-00 0006 INSTR    - STOP     0000        MACHINE CODE INSTR 
        4001+00 3822 ERRNOLOC + STOP     READCC     OP.LOC/EXT IS ZERO. PRESS START TO READ NEXT CONTROL CARD
        
        4002+00 0000  ZERO    + STOP     0000
        4003+00 0001  ONE     + STOP     0001
        4004+00 0002  TWO     + STOP     0002
        4005+00 0003  D3      + STOP     0003

        4086-00 0000 DATA       DEF      0
        4087+00 0000 DATA2      DEF      0
        4088+15 1081 SUM        DEF      0
        4089+09 0586 SUM2       DEF      0
        4090+00 0000 COUNT      DEF      0
        4091+00 0014 REGAD      DEF      0     REGION OFFSET ON RO TABLE
        4092+00 0008 INDCNT     DEF      0     NUMBER OF INDICES LEFT IN SUM FULLWORD
        4093+01 3168 HI       + TR       0000  HI MEM 

        4094+00 0068 ROTBLAD  + STOP /   /     REGION ORIGIN (RO) TABLE START ADDRESS    
        4095+00 0094 PRGSTART + STOP /   /     PROGRAM START (=FIRST REGION OF PACT PROG)    




        4006+00 0653 RDBUF    + STOP     
        4007+22 2935          + A LEFT   
        4008-31 4095          - COPY     
        4009-31 4095          - COPY     
        4010-31 4095          - COPY     
        4011-31 4095          - COPY     
        4012-31 4095          - COPY     
        4013-31 4095          - COPY     
        4014-31 4095          - COPY     
        4015-31 4095          - COPY     
                              
        4048-31 4095          - COPY     
        4049-31 4095          - COPY     
        4050-31 4095          - COPY     
        4051-31 4095          - COPY     
        4052+00 0640 SUM        RES      2            LAST WORD OF READ CARD BUFFER
        4053+00 0001          + STOP     

        4054+13 4053          + STORE A  
        4055+01 4052          + TR       

        4056+28 0259          + REWIND   0259 = MT3
        4057-24 2048 RDCARD   - READ     2048         PREPARE TO READ FROM CARD READER
        4058+10 4060          + R ADD    RD2          READ CARD 
        4059+05 4092 RDLOOP   + SUB      D2
        4060-31 4006 RD2      - COPY     RDBUF
        4061+13 4060          + STORE A  RD2
        4062+01 4059          + TR       RDLOOP
        4063-14 4052          - STORE MQ SUM          SAVE LAST WORD -> IS THE CHKSUM
        4064+09 4083          + ADD      D4           -COPY +4 -> DECR RD2 ADDRESS WITH 4 HALF WORDS 
        4065+13 4060          + STORE A  RD2          -> RD2 ADDR = RD2 ADDR - 4

        4066+10 4006  L4066   + R ADD    RDBUF        CALC CHKSUM
        4067+12 4095          + STORE    DATA2
        4068-10 4094          - R ADD    DATA
        4069+22 0001          + A LEFT   0001
        4070-09 4052          - ADD      SUM
        4071-12 4052          - STORE    SUM
        4072+06 4066          + R SUB    L4066         DECR (- L4066) -> INCR (L4066)
        4073+05 4081          + SUB      LR0001        
        4074+13 4066          + STORE A  L4066
        4075+05 4060          + SUB      RD2
        4076+03 4066          + TR +     L4066

        4077+10 4091          + R ADD    
        4078+05 4090          + SUB      
        4079+12 4091          + STORE    
        4080-09 4052          - ADD      SUM
        4081+21 0001 LR0001   + L RIGHT  0001
        4082+04 4084          + TR 0     CHKOK
        4083+00 0004 D4       + STOP     0004    BAD CHECKSUM
        4084+20 0001 CHKOK    + L LEFT   0001    IF PUNCH IN COL 80 -> IS LAST CARD
        4085+04 4057          + TR 0     RDCARD  IF NO PUNCH IN COL 80 -> TR TO READ NEXT CARD
     

        4094         DATA
        4095         DATA2

