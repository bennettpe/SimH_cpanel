
; set console -n -q log=log.txt 
; set debug -n -q debug.txt
; set debug stdout

; set cpu debug=cmd;data;detail
; set cdr debug=cmd;data;detail
; set cdp debug=cmd;data;detail
; set lp debug=cmd;data;detail
; set mt debug=cmd;data;detail;exp

reset cpu 
set cpu crtmemclear

echo
echo *** Build IBM Binary I/O System 
echo *** using typed original binary listing, IBM 701 Cross Assembler 
echo *** Generates SO2 Regional Assembler sources and Self Loading card
echo

set cdr skip_col_1-8

echo
echo *** Prepare SL05 Self Loading
echo

; build SL05 - Self Loading Program (of cards punched with BP05)
; it is a one-card self loading program starting at 0000

load             IBM_Binary_IO/SL05_prog.txt
carddeck  punch  IBM_Binary_IO/SL05.dck           bincards 1
carddeck  ident  IBM_Binary_IO/SL05.dck           as    "SL05"    at 2
echo
carddeck list  bin  IBM_Binary_IO/SL05.dck
echo

echo
echo *** Prepare BP05 Binary Punch
echo

; build BP05 - Binary Punch Program (of cards to be loaded with SL05)
; it is a one-card program starting at 0050 decimal to be loaded with SL05

; to run BP05, it isa prerrequisite to have SL05 loaded in mem
; and addr 0004 containing 0044 (dec) as BP05 was loaded using SL05

load   IBM_Binary_IO/SL05_prog.txt
dep    0004 000044
load   IBM_Binary_IO/BP05_prog.txt

; quick and dirty program to copy memory from 0050-0100 (decimal) to 1050-1100 (decimal)

dep -m 1000 r add 0050
dep -m 1001 store 1050
dep -m 1002 r add 1001
dep -m 1003 add   1011
dep -m 1004 store 1001
dep -m 1005 r add 1000
dep -m 1006 add   1011
dep -m 1007 store 1000
dep -m 1008 sub   1012
dep -m 1009 tr 0  1011
dep -m 1010 tr    1000
dep -m 1011 stop  0001
dep -m 1012 r add 0100

dep ic 1000
go

; now use BP05 to puch its own program image in 1050

; R=block to punch start addr 
dep 0047 1050
; V=number of half words to punch (min allowed 2, must be even)
dep 0048 0044
; R1=load addr: addr where block will be loaded by SL05 routine
; Note that SL05 will store in R1 the checksum fullword. So if
; prog start at 0050, the R1 addr should be 0050-2 = 0048
dep 0049 0048

att -q -n cdp IBM_Binary_IO/BP05.dck

dep ic 0050
go

det all
carddeck  ident  IBM_Binary_IO/BP05.dck       as    "BP05"    at 2   
echo
carddeck list  bin  IBM_Binary_IO/BP05.dck
echo


echo
echo *** Prepare SO2 Regional Assembler (William F. McClelland Assembler)
echo

; build SO2 - regional Assembler (RAL)

echo *** Cross Assemble SO2 Rebuild Source
echo *** SO2_asm.txt -> _prog.txt and _regional.txt
echo
!asm\Ibm701Assembler.exe IBM_Binary_IO/SO2_asm.txt
if exist prog.txt goto ok1
echo 
echo *** Cross Assembling error
echo
goto end
:ok1
copy -q prog.txt    IBM_Binary_IO/SO2_prog.txt
copy -q so2.txt     IBM_Binary_IO/SO2_regional.txt
del prog.txt
del so2.txt

set cdr skip_col_1-8
set cdr0 echolevel=0
set lp0 wiring=so2

; assemble RAL with itself
load IBM_Binary_IO/SO2_prog.txt

att -q cdr IBM_Binary_IO/SO2_regional.txt
att -q -n cdp deck_out.dck 

dep ic 200
go

if (IR == 000000) goto ok2
echo 
echo *** Regional Assembler error
echo
goto end

:ok2

det all
echo

; prepare assembler self loading auto start deck. contains 1) SL05, 2) Regional Assembler
; binary program deck

carddeck  join   IBM_Binary_IO/SL05.dck    deck_out.dck     as   IBM_Binary_IO/SO2.dck
carddeck  ident  IBM_Binary_IO/SO2.dck  as   "SO2 "         at 2

echo
carddeck list   IBM_Binary_IO/SO2.dck
echo

del -q deck_out.dck 


:end
echo