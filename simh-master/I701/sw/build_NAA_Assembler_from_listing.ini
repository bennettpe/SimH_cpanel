
; set console -n log=console.txt 
; set debug -n debug.txt
; set debug stdout

; set cpu debug=cmd;data;detail
; set cdr debug=cmd;data;detail
; set cdp debug=cmd;data;detail
; set lp debug=cmd;data;detail
; set mt debug=cmd;data;detail;exp

cd NAA_Assembler

reset cpu 
set cpu crtmemclear

echo
echo *** Build NAA SpeedEx Assembler 
echo *** using typed original binary listing, IBM 701 Cross Assembler 
echo *** Generates NAA Assembler sources for Punch Data Cards and 
echo *** Self Loading card
echo

echo *** Cross Assemble Punch Data Cards program 
echo *** PunchDataCards_asm.txt -> _prog.txt and _naa.txt
echo
!..\asm\Ibm701Assembler.exe PunchDataCards_asm.txt
copy -q prog.txt PunchDataCards_prog.txt
copy -q naa.txt  PunchDataCards_naa.txt
del prog.txt
del naa.txt

echo
echo *** Prepare SpeedEx part 1 deck
echo
call run_speedex SpeedEx_part1_naa.txt       SpeedEx_part1_naa_data.txt
carddeck join    deck_out.dck             as SpeedEx_part1.dck
carddeck ident   SpeedEx_part1.dck        as "0111201"  at  1   count at 6 7   start at 01

echo
echo *** Prepare SpeedEx part 2 deck
echo
call run_speedex SpeedEx_part2_naa.txt       SpeedEx_part2_naa_data.txt
carddeck punch   startp2.dck text            "9 start of program part 2" at 9
carddeck join    startp2.dck deck_out.dck as SpeedEx_part2.dck
carddeck ident   SpeedEx_part2.dck        as "0111209"  at  1   count at 6 7   start at 09
del startp2.dck 

echo
echo *** Prepare Punch Data Cards program deck
echo
call run_speedex PunchDataCards_naa.txt      PunchDataCards_naa_data.txt
carddeck join    deck_out.dck             as PunchDataCards.dck

echo
echo *** List SpeedEx part 1 and 2 deck
echo
carddeck list SpeedEx_part1.dck
carddeck list SpeedEx_part2.dck

echo
echo *** Cross Assemble Self Loafing Card and
echo ***                Punch Self Loafing Cards program
echo *** SelfLoadingCard_asm.txt -> _prog.txt and _naa.txt
echo *** PunchSelfLoadingCards_asm.txt -> _prog.txt and _naa.txt
echo
!..\asm\Ibm701Assembler.exe SelfLoadingCard_asm.txt
copy -q prog.txt SelfLoadingCard_prog.txt
copy -q naa.txt  SelfLoadingCard_naa.txt
!..\asm\Ibm701Assembler.exe PunchSelfLoadingCards_asm.txt
copy -q prog.txt PunchSelfLoadingCards_prog.txt
copy -q naa.txt  PunchSelfLoadingCards_naa.txt
del prog.txt
del naa.txt

echo
echo *** Prepare Self Loading card (has no Data)
echo
call run_speedex SelfLoadingCard_naa.txt  

load PunchSelfLoadingCards_prog.txt

att -q cdr deck_out.dck 
att -n -q cdp SelfLoading.dck

dep ic 0040
go

det cdr
det cdp 

carddeck list bin SelfLoading.dck 

del deck_out.dck 

goto end





:run_speedex

load SpeedEx_part1_prog.txt

set cdr skip_col_1-8
set cdr0 echolevel=1
set lp0 wiring=SpeedEx

if "%1" != "" goto naa_ok1
echo
echo *** Error: Input file (%1) not found
:naa_ok1

carddeck  sort %1 desc 10 14 to deck_in.dck

att -q cdr deck_in.dck
att -n -q mt0 mt0.tap

dep ic 0040
go

if (IC == 6) goto part1_ok
echo
echo *** Error: Assembler error part1
ex SENSE_OUT
goto end

:part1_ok
load SpeedEx_part2_prog.txt

att -n -q cdp deck_out.dck

dep ic 0040
go

if (IR == 6) goto part2_ok
echo
echo *** Error: Assembler error part2
ex SENSE_OUT
goto end

:part2_ok
det mt0
det cdp
if "%2" == "" goto naa_ok3

load PunchDataCards_prog.txt

set cdr0 echolevel=0
                                      
att -q cdr %2
att -n -q cdp deck_data.dck

dep ic 0040
go

if (IR == 6) goto naa_ok2
echo
echo *** Error: Punch Data card Error
ex SENSE_OUT
goto end

:naa_ok2
det cdp

carddeck  join   deck_data.dck  deck_out.dck  as  deck_out.dck 

:naa_ok3
; Do not add Self Loading card in front of generated deck

carddeck  ident  deck_out.dck   as  "NAA001"  at  1  count at 4 6
carddeck  list bin deck_out.dck 

del -q deck_in.dck
del -q deck_data.dck
del -q mt0.tap
return

:end
cd ..

