
; set console -n -q log=console.txt 
; set debug -n -q debug.txt
; set debug stdout

; set cpu debug=cmd;data;detail
; set cdr debug=cmd;data;detail
; set cdp debug=cmd;data;detail
; set lp debug=cmd;data;detail
; set mt debug=cmd;data;detail;exp

; params: %1 source card deck to assemble with NR9003 Assembly Symbolic Assembler
;         %2 program start address NNNN octal (must have 4 octal digits. 
;                                              if empty, do not run assembled prog)
;         %3 input deck for assembled program (if empty no input deck needed)

; create assembler deck
;    1) Assembly Binary cards program deck
;    2) Source code deck to be assembled

if exist "%1" goto nr_ok1

echo NR9003 Assembler Source file (%1) not found
goto end

:nr_ok1

set cdr skip_col_1-8
set lp0 wiring=NR9003
set cdr0 echolevel=1

echo *** 
echo *** Run NR9003 Symbolic Assembler 
echo *** Source file: %1
echo *** 

carddeck -q join Octionary/NR9003.dck %1 AS deck_in.dck

att -q cdr deck_in.dck
att -q -n cdp deck_out.dck
att -q -n mt0 mt0.tap
att -q -n mt1 mt1.tap

switch "Load selector" to Card
switch "Address" to 0000
press "load"

det mt0
det mt1
det cdr
det cdp

if (IR == 000000) goto nr_ok2
echo
echo *** Assembly Error
ex IR

det all
del -q deck_out.dck

!pause
goto clean

:nr_ok2

echo *** 
echo *** No errors in Assembly 
echo *** 

; put identification on unused columns 1-8 of binary card
carddeck -q ident  deck_out.dck as " NR001" at 1 count at 4 6

if "%2" == "" goto clean
if "%2" == "KEEPMT0" goto clean2

echo *** 
echo *** Now prepare assembled program binary deck
echo *** 

; add a FEJ 015 card at beginning of deck, and a control card after generated 
; binary card (must have sign bit set) to auto start deck after self loading

carddeck -q punch                card.dck              oct   0000 0000 0000 40%2
carddeck -q join Octionary/FEJ015.dck deck_out.dck card.dck as deck_in.dck

if "%3" == "" goto nr_ok4

; add program input deck if any
carddeck -q join deck_in.dck %3 as deck_in.dck

:nr_ok4

att -q cdr deck_in.dck
att -q -n cdp deck_out.dck

echo
echo *** 
echo *** Run assembled program 
echo *** 

press "Printer Carriage"
set lp0 wiring=none

switch "Load selector" to Card
switch "Address" to 0000
press "load"

det cdr
det cdp

echo
echo *** 
echo *** Run finished
echo *** 

:clean

del -q mt0.tap

:clean2 

del -q mt1.tap
del -q deck_in.dck
del -q card.dck

press "Printer Carriage"

:end
echo

