set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout
; set cpu hist=1000

; set mta debug=cmd;detail;exp;pos;data
; set cdr debug=cmd;detail;card;data
; set cdp debug=cmd;detail;card
; set lpr debug=cmd;detail
; set inq debug=cmd;detail;data
; set cpu debug=cmd;detail;exp;data;vma;inst;trace;cdata
; set da  debug=cmd;detail
; set dc  debug=cmd;detail

send after=50000


if "%1"=="" goto nojcl
if "%1"=="CONSOLE" goto jclok
if not exist "%1" goto jclnotfound
:jclok

echo
echo ***
echo *** IBM DOS/360 R26.2 (1975) 
echo *** run production job "%1"
echo ***
echo

set cpu 256K timer prot univ

set da dev=130 model=2311
set db dev=190 model=2314
set mta0 dev=280
set cdr0 dev=00c
set cdp0 dev=00d
set lpr0 dev=00e
set inq0 dev=01f

; Use copy of DOS production disc
; so they got no corrupted if POWER/DOS
; does not shutdown clean

copy -q dasd/dos360.2314.dosres.dsk dasd/tmp.dosres.dsk
copy -q dasd/dos360.2314.spool1.dsk dasd/tmp.spool1.dsk
copy -q dasd/dos360.2314.wrk14a.dsk dasd/tmp.wrk14a.dsk
copy -q dasd/dos360.2314.wrk14b.dsk dasd/tmp.wrk14b.dsk

att db0 -q dasd/tmp.dosres.dsk
att db1 -q dasd/tmp.spool1.dsk
att db2 -q dasd/tmp.wrk14a.dsk
att db3 -q dasd/tmp.wrk14b.dsk

att lpr -q -n printer.txt
att cdp -q -n deck_out.dck

echo
set -q idlestop=1
boot db0
set idlestop=0

att cdr -q -e jcl/DOS360_ipl.jcl
go until "BG  1C00A"
go until "BG  "
send "stop\r"
go until "\n"

; press REQUEST key on console (the ESC key) to 
; bring the AR prompt
send "\033"

go until "AR  1I60A"
go until "AR  "
send "batch f1\r"
go until "F1  I"
send "assgn sysin,x'191'\r"
go until "F1  I"
send "\r"
go until "FORMAT Q'S ?"
send "\r"
go until "$OPC15I 17 DATA BUFFERS"

; request AR prompt
send "\033"
go until "AR  1I60A"
go until "AR  I"
send "log\r"
go until "AR  I"
send "map\r"
go until "AR  I"
send "s prt,00e\r"
go until "\n"

; request AR prompt
send "\033"
go until "AR  1I60A"
go until "AR  I"
send "s pun,00d\r"
go until "\n"

; put the job on card reader so it can be read by spool.
; later start bg command will starts its execution

att cdr -q -e jcl/sysgen_ver00_ipl2.jcl

; request AR prompt
send "\033"
go until "AR  1I60A"
go until "AR  I"
send "s rdr,00c\r"
go until "\n"

; request AR prompt
send "\033"
go until "AR  1I60A"
go until "AR  I"
send "start bg\r"
go until "BG  I"

; now press enter on console to start execution of
; partition bg job on alreay read deck

send "\r"

; the following messages can arrive on any order depending
; on how fast commands are typed, send command delay or minor 
; changes in simulator. We just need them to arrive

noexpect
set env -a msg=0

expect "EOJ STARTBG"         set env -a msg=msg|1; continue
expect "BG WAITING FOR WORK" set env -a msg=msg|2; continue
expect "XXR00C CLOSED"       set env -a msg=msg|4; continue

:wait_for_msg1
go until "\n"
if (msg!=7) goto wait_for_msg1
noexpect

; request AR prompt
send "\033"

go until "AR  1I60A"
go until "AR  I"
send "batch f2\r"
go until "F2  I"

; now press enter on console to start execution of
; partition f2 job on alreay read deck

send "\r"
go until "F2 WAITING FOR WORK"
go until "\n"

if "%1"=="CONSOLE" goto console

; should use -e (simulates pressing End of Job button on card read)
; to avoid unit check when all input cards have been read.
; job will be processed just by attaching it to cdr and pressing  
; enter in console. But warning: if pressing enter without deck 
; attached will generate an ugly intervention requiered error

att -q -e cdr %1
go until "WAITING FOR WORK"
go until "\n"

; shutdown 

; request AR prompt
send "\033"
go until "AR  1I60A"
go until "AR  "
send "nolog\r"
go until "AR  I"
send "e\r"
go until "1C10A  PLEASE ASSIGN SYSRDR"
go until "  I "
send "unbatch\r"
go until "1C10A  PLEASE ASSIGN SYSRDR"
go until "  I "
send "unbatch\r"
go until "1C10A  PLEASE ASSIGN SYSRDR"
go until "  I "
send "unbatch\r"
go until "BG  I"
send "assgn sysin,x'00c'\r"
go until "BG  I"
send "assgn syspch,x'00d'\r"
go until "BG  I"
send "assgn syslst,x'00e'\r"
go until "BG  I"

det all

del -q dasd/tmp.dosres.dsk
del -q dasd/tmp.spool1.dsk
del -q dasd/tmp.wrk14a.dsk
del -q dasd/tmp.wrk14b.dsk

echo
echo
goto end

:console
go
goto end

:nojcl
echo
echo missing file.jcl as parameter of script
echo
goto end

:jclnotfound
echo
echo jcl file "%1" not found
echo
goto end

:end
