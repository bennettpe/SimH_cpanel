set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout
; set cpu hist=1000

; set mta debug=cmd;detail;exp;pos;data
; set cdr debug=cmd;detail;card;data
; set cdp debug=cmd;detail;card
; set lpr debug=cmd;detail
; set inq debug=cmd;detail;data
; set cpu debug=cmd;detail;exp;data;vma;inst;trace;cdata
; set da  debug=cmd;detail
; set dc  debug=cmd;detail

send after=50000


if "%1"=="" goto nojcl
if "%1"=="CONSOLE" goto jclok
if not exist "%1" goto jclnotfound
:jclok

echo
echo ***
echo *** IBM DOS/VS R34 (1977) 
echo *** run production job "%1"
echo ***
echo

set cpu ibm370 timer dat prot 2m store univ

set da dev=130 model=2314

set mta0 dev=180

; Use copy of DOS production disc
; so they got no corrupted if POWER/VS
; does not shutdown clean

echo
echo copy dasd files ...

copy -q dasd/dosvs.2314.sysres.dsk dasd/tmp.sysres.dsk
copy -q dasd/dosvs.2314.sysext.dsk dasd/tmp.sysext.dsk
copy -q dasd/dosvs.2314.sysdpd.dsk dasd/tmp.sysdpd.dsk
copy -q dasd/dosvs.2314.sysspl.dsk dasd/tmp.sysspl.dsk

att da0 -q dasd/tmp.sysres.dsk
att da1 -q dasd/tmp.sysext.dsk
att da2 -q dasd/tmp.sysdpd.dsk
att da3 -q dasd/tmp.sysspl.dsk

att lpr -q -n printer.txt
att cdp -q -n deck_out.dck

echo ipl ...
echo

set -q idlestop=1
boot da0
set idlestop=0

; Send "Atention request"
send "\033"
go until "SPECIFY SUPERVISOR NAME"
go until "\n"
send "$$A$SUPA"
send "\r"
go until "\n"

; run for some seconds to allow new supervisor 
; to be located and loaded
set -q idlestop=2
go
set idlestop=0

det cdr
att cdr -q -e jcl/DOSVS_ipl.jcl

go until "IPL REASON CODE"
go until "I "
send "\r"

go until "SUB-SYSTEM ID"
go until "I "
send "\r"

go until "EOJ STARTUP"
go until "1C00A  ATTN. 00C"
go until "\n"

send "map"
send "\r"
go until "BG I "

go until "I "
send "assgn sysin,ua"      
send "\r"
go until "I "
send "stop"      
send "\r"
go until "\n"

; type Enter to get the AR prompt
send "\r"
go until "AR"
send "start f1"
send "\r"

go until "F1 I "
send "assgn sysin,x'00c'"      
send "\r"
go until "F1 I "

att cdr -q -e jcl/DOSVS_power.jcl
send "\r"

go until "FORMAT QUEUES"
go until "I "
send "\r"

go until "BG I "
send "assgn sysin,x'00c'"
send "\r"
go until "F2 I "
send "assgn sysin,x'00c'"
send "\r"

; the following messages can arrive on any order depending
; on how fast commands are typed, send command delay or minor 
; changes in simulator. We just need them to arrive

noexpect
set env -a msg=0

expect "BG I "               send "\r"; continue
expect "F2 I "               send "\r"; continue
expect "BG WAITING FOR WORK" set env -a msg=msg|1; continue
expect "F2 WAITING FOR WORK" set env -a msg=msg|2; continue

:wait_for_msg1
go until "\n"
if (msg!=3) goto wait_for_msg1
noexpect

att cdr -q -e jcl/DOSVS_startup.jcl

go until "EOJ STARTBG"

; go until F2/BG waiting for work" can arrive any order
go until "WAITING FOR WORK"
go until "WAITING FOR WORK"
go until "\n"
send "g 00e"
send "\r"

go until "LST WAITING FOR WORK ON 00E"
go until "\n"

; wait until cpu is in wait state for 1 sec
set -q idlestop=1
go
set idlestop=0

send "d a"
send "\r"

set -q idlestop=1
go
set idlestop=0

send "d all"
send "\r"

set -q idlestop=1
go
set idlestop=0


if "%1"=="CONSOLE" goto console

; run to jcl file passed on param %1
; should use -e (simulates pressing End of Job button on card read)
; to avoid unit check when all input cards have been read.
; job will be processed just by attaching it to cdr and pressing  
; enter in console. But warning: if pressing enter without deck 
; attached will generate an ugly intervention requiered error

att -q -e cdr %1
go until "WAITING FOR WORK"
go until "\n"

; job terminated, shutdown 

; wait until cpu is in wait state for 1 sec
set -q idlestop=1
go
set idlestop=0

send "pend"
send "\r"
go until "F2 I "
send "stop"
send "\r"
go until "BG I "
send "stop"
send "\r"
go until "F1 I "
send "rod"
send "\r"
go until "END OF DAY"
go until "I "
send "y"
send "\r"
go until "F1 I "

det all

echo
echo
echo delete tmp files ...

del -q dasd/tmp.sysres.dsk
del -q dasd/tmp.sysext.dsk
del -q dasd/tmp.sysdpd.dsk
del -q dasd/tmp.sysspl.dsk

echo
goto end

:console
go
goto end

:nojcl
echo
echo missing file.jcl as parameter of script
echo
goto end

:jclnotfound
echo
echo jcl file "%1" not found
echo
goto end

:end
