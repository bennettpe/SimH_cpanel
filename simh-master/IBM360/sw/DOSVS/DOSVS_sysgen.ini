set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout
; set cpu hist=1000

; set mta debug=cmd;detail;exp;pos;data
; set cdr debug=cmd;detail;card;data
; set cdp debug=cmd;detail;card
; set lpr debug=cmd;detail
; set inq debug=cmd;detail;data
; set cpu debug=cmd;detail;exp;data;cdata;vma;inst;trace
; set cpu debug=cmd;detail;exp;data;cdata
; set da  debug=cmd;detail
; set db  debug=cmd;detail

send after=50000

echo
echo ***
echo *** IBM DOS/VS R34 (1977) 
echo *** sysgen on 2314 discs
echo ***
echo

; Takes 5h24min with cpanel (SET CPU REALTIME)
; Takes 44min without cpanel

set cpu ibm370 timer dat prot 2m store univ

set da dev=130 model=2314

set mta0 dev=180

att lpr -q -n printer.txt
att cdp -q -n deck_out.dck

; set lpr echo

; This script and the used JCLs are taken from 
; DOS on 2314 install 

; detect if a stage has being previously saved to restart 
; at this point. The system generation needs 500 MB of host 
; hard disc free space to hold the restart dasd image files

if exist dasd/sv_REST3.2314.sysres.dsk goto sysgen4
if exist dasd/sv_REST2.2314.sysres.dsk goto sysgen3
if exist dasd/sv_REST.2314.sysres.dsk goto sysgen2

; init stage
:init

echo
echo
echo ***
echo *** SYSGEN1: Initialize 2314 SYSRES on 130 
echo ***                     2314 SYSEXT on 131
echo ***                     2314 DOSDPD on 132
echo ***                     2314 DOSSPL on 133
echo ***
echo

att da0 -q -n -i dasd/new.2314.sysres.dsk
att da1 -q -n -i dasd/new.2314.sysext.dsk
att da2 -q -n -i dasd/new.2314.sysdpd.dsk
att da3 -q -n -i dasd/new.2314.sysspl.dsk
echo

att mta0 -q -r -f aws distrib/5745-010.aws

set -q idlestop=1
boot mta0

set idlestop=0
att cdr -q -e jcl/sysgen01_initdsk.jcl
go until "GIVE SYSTEM LIBRARY ALLOCATIONS"
go until "CL="
call type3215 "90(16)"
go until "RL="
call type3215 "90(16)"
go until "SL="
call type3215 "E14(2)"
go until "PL="
call type3215 "4(2)"
go until "LABEL="
go until "I "
send "\r"
go until "TYPE GO IF ALLOCATION IS CORRECT"
call type3215 "go"
go

det mta0
det da0
det da1
det da2
det da3

copy -q    dasd/new.2314.sysres.dsk        dasd/sv_REST.2314.sysres.dsk
copy -q    dasd/new.2314.sysext.dsk        dasd/sv_REST.2314.sysext.dsk
copy -q    dasd/new.2314.sysdpd.dsk        dasd/sv_REST.2314.sysdpd.dsk
copy -q    dasd/new.2314.sysspl.dsk        dasd/sv_REST.2314.sysspl.dsk

:sysgen2

echo
echo ***
echo *** SYSGEN2: IPL from restored starter system, generate new system
echo ***
echo

copy -q    dasd/sv_REST.2314.sysres.dsk    dasd/new.2314.sysres.dsk        
copy -q    dasd/sv_REST.2314.sysext.dsk    dasd/new.2314.sysext.dsk        
copy -q    dasd/sv_REST.2314.sysdpd.dsk    dasd/new.2314.sysdpd.dsk        
copy -q    dasd/sv_REST.2314.sysspl.dsk    dasd/new.2314.sysspl.dsk        

att da0 -q dasd/new.2314.sysres.dsk
att da1 -q dasd/new.2314.sysext.dsk
att da2 -q dasd/new.2314.sysdpd.dsk
att da3 -q dasd/new.2314.sysspl.dsk

set -q idlestop=1
boot da0
set idlestop=0

send "\r"
go until "SPECIFY SUPERVISOR NAME"

att cdr -q -e jcl/sysgen02_firstipl.jcl
go until "1I00A  READY FOR COMMUNICATIONS"

call type3215 "assgn sysin,x'00c'"      
call type3215 "assgn syslst,x'00e'"      
call type3215 "assgn syspch,x'00d'"      

go until "BG I "
send "\r"

go until "EOJ FIRST"
go until "1C00A  ATTN. 00C"
go until "BG I "

att cdr -q -e jcl/sysgen03_labels14.jcl
send "\r"

go until "EOJ LABELS14"
go until "1C00A  ATTN. 00C"

call type3215 "exec proc=labels14"

go until "EOP LABELS14"
go until "1I00A  READY FOR COMMUNICATIONS"

att mta0 -q -r -f aws distrib/5745-010.aws
att cdr -q -e jcl/sysgen04_loadslib.jcl
send "\r"
   
go until "EOJ RESTSL"
go until "1C00A  ATTN. 00C"
go until "BG I "

att cdr -q -e jcl/sysgen05_sysgen.jcl
send "\r"

go until "EOJ ASSEMBLY"
go until "1C00A  ATTN. 00C"
go until "BG I "

det da0
det da1
det da2
det da3
copy -q    dasd/new.2314.sysres.dsk        dasd/sv_REST2.2314.sysres.dsk
copy -q    dasd/new.2314.sysext.dsk        dasd/sv_REST2.2314.sysext.dsk
copy -q    dasd/new.2314.sysdpd.dsk        dasd/sv_REST2.2314.sysdpd.dsk
copy -q    dasd/new.2314.sysspl.dsk        dasd/sv_REST2.2314.sysspl.dsk

:sysgen3

echo
echo ***
echo *** SYSGEN3: IPL generated system
echo ***
echo

copy -q    dasd/sv_REST2.2314.sysres.dsk    dasd/new.2314.sysres.dsk        
copy -q    dasd/sv_REST2.2314.sysext.dsk    dasd/new.2314.sysext.dsk        
copy -q    dasd/sv_REST2.2314.sysdpd.dsk    dasd/new.2314.sysdpd.dsk        
copy -q    dasd/sv_REST2.2314.sysspl.dsk    dasd/new.2314.sysspl.dsk        

att da0 -q dasd/new.2314.sysres.dsk
att da1 -q dasd/new.2314.sysext.dsk
att da2 -q dasd/new.2314.sysdpd.dsk
att da3 -q dasd/new.2314.sysspl.dsk

set -q idlestop=1
boot da0
set idlestop=0

; Send "Atention request"
send "\033"
go until "SPECIFY SUPERVISOR NAME"
go until "\n"
send "$$A$SUPA"
send "\r"
go until "\n"

; run for some seconds to allow new supervisor 
; to be located and loaded
set -q idlestop=2
go
set idlestop=0

det cdr
att cdr -q -e jcl/sysgen06_ipl.jcl

go until "IPL REASON CODE"
go until "I "
send "\r"

go until "SUB-SYSTEM ID"
go until "I "
send "\r"

go until "EOJ STARTUP"
go until "1C00A  ATTN. 00C"
go until "\n"

echo
echo ***
echo *** SYSGEN3A: Punch card deck with compilers
echo ***
echo

call type3215 "assgn syslst,x'00e'"      
call type3215 "assgn syspch,x'00d'"      
call type3215 "assgn syslnk,x'131'"      
call type3215 "assgn sys001,x'131'"      

go until "BG I "

det cdr
att cdr -q -e jcl/sysgen07_deblock.jcl

det cdp
set cdp0 format=EBCDIC
att cdp -q -n deck_out.dck

att mta0 -q -r -f aws distrib/5731-AA1.aws

; start deblock job (Punches 21031 cards)
send "\r"

go until "EOJ DEBLOCK"
go until "1C00A  ATTN. 00C"
go until "I "

; rerun job a second time (Punches 22764 cards)
det cdr
att cdr -q -e jcl/sysgen07_deblock.jcl
det cdp
att cdp -q -n deck_out2.dck
send "\r"

go until "EOJ DEBLOCK"
go until "1C00A  ATTN. 00C"
go until "I "

; rerun job a third time  (Punches only 242 cards)
det cdr
att cdr -q -e jcl/sysgen07_deblock.jcl
det cdp
att cdp -q -n deck_out3.dck
send "\r"

go until "EOJ DEBLOCK"
go until "1C00A  ATTN. 00C"
go until "\n"

det cdr
det cdp
det mta0

echo
echo ***
echo *** SYSGEN3B: Install COBOL-D, FFORTRAN, PL/I compilers, Sort and utility
echo ***
echo

set cdp0 format=AUTO
set cdr0 format=EBCDIC
att cdr -q -n deck_out.dck
go until "I "
send "\r"

go until "COBOL-D"
call compiler_inst

go until "ANS-COBOL"
call compiler_skip

; Cobol-LCP stands for "Language Conversion"
; converts cobol source from IBM 70XX cobol to Cobol-E or Cobol-F
go until "COBOL-LCP"
call compiler_skip

go until "FFORTRAN"
call compiler_inst

det cdr
att cdr -q -n deck_out2.dck

go until "PL/I"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "BOOK"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT PL/I (10K VARIANT)"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT PL/I (12K VARIANT)"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"

go until "SORT"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "BOOK"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM1"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM2"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM3"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM4"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM5"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT SORT PROGRAM6"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"

go until "UTIL-461-462-463"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "BOOK"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"

go until "UTILITY TO ASSIGN ALTERNATE TRACK"
call util_inst
go until "UTILITY CARD TO DISK"
call util_inst
go until "CARD TO PRINTER/PUNCH"
call util_inst
go until "LINK GROUP I UTILITY CLEAR DISK"
call util_inst
go until "LINK GROUP I UTILITY DISK TO CARD"
call util_inst
go until "LINK GROUP I UTILITY DISK TO DISK"
call util_inst
go until "LINK GROUP I UTILITY DISK TO PRINTER"
call util_inst
go until "LINK GROUP I UTILITY INITIALIZE DISK"
call util_inst
go until "LINK GROUP I UTILITY COPY DISK TO CARD"
call util_inst
go until "LINK GROUP I  UTILITY VTOC DISPLAY (BATCHED JOB)"
call util_inst
go until "GROUP I UTILITY VTOC DISPLAY (MPS)"
call util_inst
go until "LINK GROUP I UTILITY RESTORE CARD TO DISK"
call util_inst
go until "LINK GROUP I UTILITY COPY DISK TO DISK"
call util_inst
go until "LINK GROUP II UTILITY INITIALIZE TAPE"
call util_inst
go until "LINK GROUP II UTILITY COPY DISK/DATA CELL TO TAPE"
call util_inst
go until "LINK GROUP II UTILITY RESTORE TAPE TO DISK/DATA CELL"
call util_inst
go until "LINK GROUP II UTILITY TAPE TO TAPE"
call util_inst
go until "LINK GROUP II UTILITY TAPE TO PRINTER"
call util_inst
go until "LINK GROUP II UTILITY TAPE TO DISK"
call util_inst
go until "LINK GROUP II UTILITY TAPE TO DATA-CELL"
call util_inst
go until "LINK GROUP II UTILITY TAPE COMPARE"
call util_inst
go until "LINK GROUP II UTILITY TAPE TO CARD"
call util_inst
go until "LINK GROUP II UTILITY DISK TO TAPE"
call util_inst
go until "LINK GROUP II UTILITY DATA-CELL TO TAPE"
call util_inst
go until "LINK GROUP II UTILITY CARD TO TAPE"
call util_inst
go until "LINK GROUP III UTILITY CLEAR DATA CELL"
call util_inst
go until "LINK GROUP III UTILITY DISK TO DATA-CELL"
call util_inst
go until "LINK GROUP III UTILITY DATA-CELL TO PRINTER"
call util_inst
go until "LINK GROUP III UTILITY DATA-CELL TO DISK"
call util_inst
go until "LINK GROUP III UTILITY DATA-CELL TO DATA-CELL"
call util_inst
go until "LINK GROUP III UTILITY INITIALIZE DATA CELL"
call util_inst
go until "LINK GROUP III UTILITY ASSIGN ALT. TRACK DATA CELL"
call util_inst

det cdr
att cdr -q -n deck_out3.dck

go until "LINK PL1D"
go until "EOJ LINK"
go until "DURATION"
go until "\n"

det cdr
set cdr0 format=AUTO

del -q deck_out.dck
del -q deck_out2.dck
del -q deck_out3.dck

det da0
det da1
det da2
det da3

copy -q    dasd/new.2314.sysres.dsk        dasd/sv_REST3.2314.sysres.dsk
copy -q    dasd/new.2314.sysext.dsk        dasd/sv_REST3.2314.sysext.dsk
copy -q    dasd/new.2314.sysdpd.dsk        dasd/sv_REST3.2314.sysdpd.dsk
copy -q    dasd/new.2314.sysspl.dsk        dasd/sv_REST3.2314.sysspl.dsk


:sysgen4

echo
echo ***
echo *** SYSGEN4: IPL generated system
echo ***
echo

copy -q    dasd/sv_REST3.2314.sysres.dsk    dasd/new.2314.sysres.dsk        
copy -q    dasd/sv_REST3.2314.sysext.dsk    dasd/new.2314.sysext.dsk        
copy -q    dasd/sv_REST3.2314.sysdpd.dsk    dasd/new.2314.sysdpd.dsk        
copy -q    dasd/sv_REST3.2314.sysspl.dsk    dasd/new.2314.sysspl.dsk        

att da0 -q dasd/new.2314.sysres.dsk
att da1 -q dasd/new.2314.sysext.dsk
att da2 -q dasd/new.2314.sysdpd.dsk
att da3 -q dasd/new.2314.sysspl.dsk

set -q idlestop=1
boot da0
set idlestop=0

; Send "Atention request"
send "\033"
go until "SPECIFY SUPERVISOR NAME"
go until "\n"
send "$$A$SUPA"
send "\r"
go until "\n"

; run for some seconds to allow new supervisor 
; to be located and loaded
set -q idlestop=2
go
set idlestop=0

det cdr
att cdr -q -e jcl/sysgen06_ipl.jcl

go until "IPL REASON CODE"
go until "I "
send "\r"

go until "SUB-SYSTEM ID"
go until "I "
send "\r"

go until "EOJ STARTUP"
go until "1C00A  ATTN. 00C"
go until "\n"

echo
echo ***
echo *** SYSGEN4A: Install POWER/VS
echo ***
echo

call type3215 "assgn sysin,ua"      
call type3215 "stop"      

; type Enter to get the AR prompt
send "\r"
go until "AR"
send "start f1"
send "\r"

call type3215 "assgn sysin,x'00c'"      
go until "F1 I "

att cdr -q -e jcl/sysgen08_power.jcl
send "\r"

go until "FORMAT QUEUES"
go until "I "
send "q,d,a"
send "\r"

go until "BG I "
send "assgn sysin,x'00c'"
send "\r"
go until "F2 I "
send "assgn sysin,x'00c'"
send "\r"

; the following messages can arrive on any order depending
; on how fast commands are typed, send command delay or minor 
; changes in simulator. We just need them to arrive

noexpect
set env -a msg=0

expect "BG I "               send "\r"; continue
expect "F2 I "               send "\r"; continue
expect "BG WAITING FOR WORK" set env -a msg=msg|1; continue
expect "F2 WAITING FOR WORK" set env -a msg=msg|2; continue

:wait_for_msg1
go until "\n"
if (msg!=3) goto wait_for_msg1
noexpect

att cdr -q -e jcl/sysgen09_startup.jcl

go until "EOJ STARTBG"

; go until F2/BG waiting for work" can arrive any order
go until "WAITING FOR WORK"
go until "WAITING FOR WORK"
go until "\n"
send "g 00e"
send "\r"

go until "LST WAITING FOR WORK ON 00E"
go until "\n"

echo
echo ***
echo *** SYSGEN4B: Send a test job
echo ***
echo

att cdr -q -e jcl/sysgen10_lvtoc.jcl
go until "EOJ LVTOC"
go until "\n"

echo
echo ***
echo *** SYSGEN4Z: Shutdown the system
echo ***
echo

; wait until cpu is in wait state for 1 sec
set -q idlestop=1
go
set idlestop=0

send "d a"
send "\r"

set -q idlestop=1
go
set idlestop=0

send "d all"
send "\r"

set -q idlestop=1
go
set idlestop=0

send "pend"
send "\r"
go until "F2 I "
send "stop"
send "\r"
go until "BG I "

set -q idlestop=1
go
set idlestop=0

send "map"
send "\r"
go until "F1 I "
send "stop"
send "\r"
go until "BG I "
send "rod"
send "\r"
go until "END OF DAY"
go until "I "
send "y"
send "\r"
go until "BG I "

echo
echo
echo ***
echo *** Copy production disc image files 
echo ***
echo

det all

copy -q    dasd/new.2314.sysres.dsk        dasd/dosvs.2314.sysres.dsk        
copy -q    dasd/new.2314.sysext.dsk        dasd/dosvs.2314.sysext.dsk        
copy -q    dasd/new.2314.sysdpd.dsk        dasd/dosvs.2314.sysdpd.dsk        
copy -q    dasd/new.2314.sysspl.dsk        dasd/dosvs.2314.sysspl.dsk        

echo
echo ***
echo *** sysgen finished
if "%runtime%"!="" echo *** generation time: %runtime%
echo ***

del -q dasd/sv_REST.2314.sysdpd.dsk
del -q dasd/sv_REST.2314.sysext.dsk
del -q dasd/sv_REST.2314.sysres.dsk
del -q dasd/sv_REST.2314.sysspl.dsk
del -q dasd/sv_REST2.2314.sysdpd.dsk
del -q dasd/sv_REST2.2314.sysext.dsk
del -q dasd/sv_REST2.2314.sysres.dsk
del -q dasd/sv_REST2.2314.sysspl.dsk
del -q dasd/sv_REST3.2314.sysdpd.dsk
del -q dasd/sv_REST3.2314.sysext.dsk
del -q dasd/sv_REST3.2314.sysres.dsk
del -q dasd/sv_REST3.2314.sysspl.dsk

if "%1"=="QUIT" quit
echo
echo *** Press Enter to quit
set env -p " " a
echo

echo
quit
goto end

; simulates operator presses enter on console to install a compiler
:compiler_inst
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "BOOK"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "LNKEDT"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "\r"
go until "EOJ"
return

; simulates operator types CANCEL on console to skip compiler install
:compiler_skip
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "CANCEL"
send "\r"
go until "CANCELED DUE TO OPERATOR"
go until "BG I "
send "\r"
go until "BOOK"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "CANCEL"
send "\r"
go until "CANCELED DUE TO OPERATOR"
go until "BG I "
send "\r"
go until "LNKEDT"
go until "ENTER EOB TO EXECUTE OR TYPE CANCEL TO BYPASS"
go until "BG I "
send "CANCEL"
send "\r"
go until "CANCELED DUE TO OPERATOR"
go until "BG I "
send "\r"
go until "EOJ"
return

; simulates operator presses enter on console to link system utility
:util_inst
go until "ENTER EOB TO EXECUTE"
go until "BG I "
send "\r"
return

; simulate typing line in 3215 console
:type3215 
go until "I "
send "%1"
send "\r"
go until "\n"
return


:end
