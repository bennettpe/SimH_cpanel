MEMBER NAME  COBSAMP
//COBSAMP  JOB  ,,MSGLEVEL=1,REGION=100K                                00200000
//STEP  EXEC  COBFCLG,PARM.COB='MAP,LIST,LET'                           00250000
//COB.SYSIN DD *                                                        00400000
  001  IDENTIFICATION DIVISION.                                         00600000
  002  PROGRAM-ID.  'COBSAMP'.                                          00800000
  003  ENVIRONMENT DIVISION.                                            01000000
  004  CONFIGURATION SECTION.                                           01200000
  005  SOURCE-COMPUTER.  IBM-360 F50.                                   01400000
  006  OBJECT-COMPUTER.  IBM-360 F50.                                   01600000
  007  DATA DIVISION.                                                   01800000
                                                                        02000000
  008  WORKING-STORAGE SECTION.                                         02200000
  009      77 IGSP  PICTURE S9(5) COMPUTATIONAL.                        02400000
  010      77 NULL  PICTURE S9(5) COMPUTATIONAL VALUE -5.               02600000
  011      77 UNUM  PICTURE S9(5) COMPUTATIONAL VALUE 10.               02800000
  012      77 I2250  PICTURE S9(5) COMPUTATIONAL.                       03000000
  013      77 IGDS1  PICTURE S9(5) COMPUTATIONAL.                       03200000
  014      77 IGDS2  PICTURE S9(5) COMPUTATIONAL.                       03400000
  015      77 IGDS3  PICTURE S9(5) COMPUTATIONAL.                       03600000
  016      77 DMODE  PICTURE S9(5) COMPUTATIONAL VALUE 3.               03800000
  017      77 IATL  PICTURE S9(5) COMPUTATIONAL.                        04000000
  018      77 ATTN1  PICTURE S9(5) COMPUTATIONAL VALUE 1.               04200000
  019      77 ATTN2  PICTURE S9(5) COMPUTATIONAL VALUE -3.              04400000
  020      77 ATTN3  PICTURE S9(5) COMPUTATIONAL VALUE 34.              04600000
  021      77 LSTAT  PICTURE S9(5) COMPUTATIONAL VALUE 3.               04800000
  022      77 DETECT  PICTURE S9(5) COMPUTATIONAL VALUE 1.              05000000
  023      77 CHMODE  PICTURE S9(5) COMPUTATIONAL VALUE 2.              05200000
  024      77 X  PICTURE A VALUE 'X'.                                   05400000
  025      77 COUNT  PICTURE S9(5) COMPUTATIONAL VALUE 1.               05600000
  026      77 CORVAL  PICTURE S9(5) COMPUTATIONAL VALUE -1.             05800000
  027      77 QUAY  PICTURE S9(5) COMPUTATIONAL.                        06000000
  028      77 GENCDE  PICTURE S9(5) COMPUTATIONAL VALUE 1.              06200000
  029      77 CX  PICTURE S9(5) COMPUTATIONAL VALUE 2047.               06400000
  030      77 CY  PICTURE S9(5) COMPUTATIONAL VALUE 2047.               06600000
  031      77 NUM2  PICTURE XXXX VALUE 'NUM2'.                          06800000
  032      77 NUM1  PICTURE XXXX VALUE 'NUM1'.                          07000000
  033      77 NUM8  PICTURE XXXX VALUE 'NUM8'.                          07200000
  034      77 NUM7  PICTURE XXXX VALUE 'NUM7'.                          07400000
  035      77 NUM6  PICTURE XXXX VALUE 'NUM6'.                          07600000
  036      77 NUM5  PICTURE XXXX VALUE 'NUM5'.                          07800000
  037      77 NUM4  PICTURE XXXX VALUE 'NUM4'.                          08000000
  038      77 NUM3  PICTURE XXXX VALUE 'NUM3'.                          08200000
  039      77 NUM  PICTURE S9(5) COMPUTATIONAL.                         08400000
  040      77 CXNUM  PICTURE S9(5) COMPUTATIONAL.                       08600000
  041      77 SUB1  PICTURE S9(5) COMPUTATIONAL.                        08800000
  042      77 SUB2  PICTURE S9(5) COMPUTATIONAL.                        09000000
  043      77 DISP  PICTURE S9(5) COMPUTATIONAL VALUE 200.              09200000
  044      77 CIRYDISP  PICTURE S9(5) COMPUTATIONAL.                    09400000
  045      77 ONE  PICTURE S9(5) COMPUTATIONAL VALUE 1.                 09600000
  046      77 XINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.              09800000
  047      77 YINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.              10000000
  048      77 INTCD  PICTURE S9(5) COMPUTATIONAL.                       10200000
  049      77 WAIT  PICTURE S9(5) COMPUTATIONAL VALUE 2.                10400000
  050      77 ATTNS1  PICTURE S9(5) COMPUTATIONAL VALUE 1.              10600000
  051      77 ATTNS2  PICTURE S9(5) COMPUTATIONAL VALUE 2.              10800000
  052      77 ATTNS3  PICTURE S9(5) COMPUTATIONAL VALUE 3.              11000000
  053      77 ATTNS4  PICTURE S9(5) COMPUTATIONAL VALUE 34.             11200000
  054      77 INTARYX  PICTURE S9(5) COMPUTATIONAL.                     11400000
  055      01 CIRX-CIRY-TABLE.                                          11600000
  056          02 CIRX  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.           11800000
  057          02 CIRY  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.           12000000
  058      01 LABEL-TABLE.                                              12200000
  059          02 LABLE  OCCURS 8 PICTURE XXXX.                         12400000
  060      01 DISPLACEMENTS-TABLE.                                      12600000
  061          02 XDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.         12800000
  062          02 YDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.         13000000
  063      01 SMALLCIRCLES-TABLE.                                       13200000
  064          02 XCENTERS  OCCURS 8.                                   13400000
  065              03 SMALX  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.     13600000
  066          02 YCENTERS  OCCURS 8.                                   13800000
  067              03 SMALY  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.     14000000
  068      01 ATTENTION-TABLE.                                          14200000
  069          02 INTARY  OCCURS 10 PICTURE S9(5) COMPUTATIONAL.        14400000
                                                                        14600000
  075  PROCEDURE DIVISION.                                              14800000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 15000000
                THIS SAMPLE PROGRAM DRAWS A CIRCLE OF 8 BASIC SIZE X'S  15200000
                WITH A LARGE SIZE X AS ITS CENTER - DEPENDING ON THE    15400000
                ATTENTION CREATED, THE PROGRAM WILL DO THE FOLLOWING -  15600000
                                                                        15800000
             1) LIGHT PEN ATTENTION ON CENTER X LABELS OUTER X'S FROM   16000000
                NUM1 THROUGH NUM8 (PARAGRAPH 221)                       16200000
                                                                        16400000
             2) LIGHT PEN ATTENTION ON OUTER X GENERATES A CIRCLE       16600000
                WHOSE CENTER IS THE DETECTED X (PARAGRAPH 222)          16800000
                                                                        17000000
             3) LIGHT PEN ATTENTION ON CIRCLE AROUND OUTER X MAKES      17200000
                THAT CIRCLE INVISIBLE (PARAGRAPH 230)                   17400000
                                                                        17600000
             4) LIGHT PEN ATTENTION ON ANY LABEL MAKES ALL LABELS       17800000
                INVISIBLE (PARAGRAPH 225)                               18000000
                                                                        18200000
             5) PROGRAMMED FUNCTION KEY 1 ENDS RUN (PARAGRAPH 240)      18400000
                                                                        18600000
             6) PROGRAMMED FUNCTION KEY 2 MAKES ALL CIRCLES INVISIBLE   18800000
                (PARAGRAPH 250)                                         19000000
                                                                        19200000
             7) PROGRAMMED FUNCTION KEY 3 MAKES ALL CIRCLES VISIBLE     19400000
                (PARAGRAPH 260)                                         19600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.19800000
                                                                        20000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 20200000
                INITIALIZE THE GRAPHIC SUBROUTINE PACKAGE               20400000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.20600000
  076      ENTER LINKAGE.                                               20800000
  077      CALL 'INGSP' USING IGSP, NULL.                               21000000
  078      ENTER COBOL.                                                 21200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 21400000
                INITIALIZE THE 2250 - ASSIGN IT UNIT NUMBER 10          21600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.21800000
  079      ENTER LINKAGE.                                               22000000
  080      CALL 'INDEV' USING IGSP, UNUM, I2250.                        22200000
  081      ENTER COBOL.                                                 22400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 22600000
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO      22800000
                DISPLAY THE CIRCLE OF X'S AND ITS CENTER X              23000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.23200000
  082      ENTER LINKAGE.                                               23400000
  083      CALL 'INGDS' USING I2250, IGDS1.                             23600000
  084      ENTER COBOL.                                                 23800000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 24000000
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO      24200000
                LABEL THE OUTER X'S OF THE CIRCLE                       24400000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.24600000
  085      ENTER LINKAGE.                                               24800000
  086      CALL 'INGDS' USING I2250, IGDS2.                             25000000
  087      ENTER COBOL.                                                 25200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 25400000
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO      25600000
                DISPLAY A CIRCLE AROUND ANY OF THE OUTER X'S            25800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.26000000
  088      ENTER LINKAGE.                                               26200000
  089      CALL 'INGDS' USING I2250, IGDS3.                             26400000
  090      ENTER COBOL.                                                 26600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 26800000
                SET THE DATA MODE FOR INTEGER, ABSOLUTE DATA            27000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.27200000
  091      ENTER LINKAGE.                                               27400000
  092      CALL 'SDATM' USING IGDS1, DMODE.                             27600000
  093      ENTER COBOL.                                                 27800000
  094      ENTER LINKAGE.                                               28000000
  095      CALL 'SDATM' USING IGDS2, DMODE.                             28200000
  096      ENTER COBOL.                                                 28400000
  097      ENTER LINKAGE.                                               28600000
  098      CALL 'SDATM' USING IGDS3, DMODE.                             28800000
  099      ENTER COBOL.                                                 29000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 29200000
                CREATE AN ATTENTION LEVEL FOR THE 2250                  29400000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.29600000
  100      ENTER LINKAGE.                                               29800000
  101      CALL 'CRATL' USING I2250, IATL.                              30000000
  102      ENTER COBOL.                                                 30200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 30400000
                ENABLE PROGRAMMED FUNCTION KEYS 1, 2, AND 3 AND THE     30600000
                LIGHT PEN                                               30800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.31000000
  103      ENTER LINKAGE.                                               31200000
  104      CALL 'ENATN' USING IATL, ATTN1, ATTN2, ATTN3.                31400000
  105      ENTER COBOL.                                                 31600000
  106      ENTER LINKAGE.                                               31800000
  107      CALL 'MLITS' USING I2250, LSTAT.                             32000000
  108      ENTER COBOL.                                                 32200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 32400000
                ALLOW LIGHT PEN ATTENTIONS FOR EACH GRAPHIC DATA SET    32600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.32800000
  109      ENTER LINKAGE.                                               33000000
  110      CALL 'SLPAT' USING IGDS1, DETECT.                            33200000
  111      ENTER COBOL.                                                 33400000
  112      ENTER LINKAGE.                                               33600000
  113      CALL 'SLPAT' USING IGDS2, DETECT.                            33800000
  114      ENTER COBOL.                                                 34000000
  115      ENTER LINKAGE.                                               34200000
  116      CALL 'SLPAT' USING IGDS3, DETECT.                            34400000
  117      ENTER COBOL.                                                 34600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 34800000
                SET CHARACTER MODE FOR LARGE SIZE, PROTECTED            35000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.35200000
  118      ENTER LINKAGE.                                               35400000
  119      CALL 'SCHAM' USING IGDS1, CHMODE.                            35600000
  120      ENTER COBOL.                                                 35800000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 36000000
                DISPLAY CENTER X                                        36200000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.36400000
  121      ENTER LINKAGE.                                               36600000
  122      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,    36800000
  123      CX, CY.                                                      37000000
  124      ENTER COBOL.                                                 37200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 37400000
                PLACE X AND Y COORDINATES FOR X'S OF OUTER CIRCLE       37600000
                IN THE CIRX AND CIRY TABLES                             37800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.38000000
  125      COMPUTE CIRX (1) = 2047.  COMPUTE CIRY (1) = 3247.           38200000
  126      COMPUTE CIRX (2) = 2896.  COMPUTE CIRY (2) = 2896.           38400000
  127      COMPUTE CIRX (3) = 3247.  COMPUTE CIRY (3) = 2047.           38600000
  128      COMPUTE CIRX (4) = 2896.  COMPUTE CIRY (4) = 1198.           38800000
  129      COMPUTE CIRX (5) = 2047.  COMPUTE CIRY (5) = 847.            39000000
  130      COMPUTE CIRX (6) = 1198.  COMPUTE CIRY (6) = 1198.           39200000
  131      COMPUTE CIRX (7) = 847.   COMPUTE CIRY (7) = 2047.           39400000
  132      COMPUTE CIRX (8) = 1198.  COMPUTE CIRY (8) = 2896.           39600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 39800000
                PLACE LABELS FOR X'S OF OUTER CIRCLE IN TABLE           40000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.40200000
  133      MOVE NUM2 TO LABLE (1).                                      40400000
  134      MOVE NUM1 TO LABLE (2).                                      40600000
  135      MOVE NUM8 TO LABLE (3).                                      40800000
  136      MOVE NUM7 TO LABLE (4).                                      41000000
  137      MOVE NUM6 TO LABLE (5).                                      41200000
  138      MOVE NUM5 TO LABLE (6).                                      41400000
  139      MOVE NUM4 TO LABLE (7).                                      41600000
  140      MOVE NUM3 TO LABLE (8).                                      41800000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 42000000
                SET CHARACTER MODE FOR BASIC SIZE, PROTECTED X          42200000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.42400000
  141      COMPUTE CHMODE = 1.                                          42600000
  142      ENTER LINKAGE.                                               42800000
  143      CALL 'SCHAM' USING IGDS1, CHMODE.                            43000000
  144      ENTER COBOL.                                                 43200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 43400000
                GENERATE AN X IN INCLUDE STATUS - CALCULATE X-COORDINATE43600000
                OF LABEL ASSOCIATED WITH THAT X - GENERATE LABEL IN     43800000
                INCLUDE STATUS - DO THIS 8 TIMES TO COMPLETE CIRCLE     44000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.44200000
  145      PERFORM X-CIRCLE VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.      44400000
  1451     GO TO NEXT11.                                                44600000
  146  X-CIRCLE.                                                        44800000
  147      COMPUTE COUNT = 1.                                           45000000
  148      COMPUTE CORVAL = NUM.                                        45200000
  149      ENTER LINKAGE.                                               45400000
  150      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,    45600000
  151      CIRX (NUM), CIRY (NUM).                                      45800000
  152      ENTER COBOL.                                                 46000000
  153      COMPUTE COUNT = 4.                                           46200000
  154      COMPUTE CXNUM = CIRX (NUM) + 300.                            46400000
  155      ENTER LINKAGE.                                               46600000
  156      CALL 'PTEXT' USING IGDS2, LABLE (NUM), COUNT, CORVAL, QUAY,  46800000
  157      GENCDE, CXNUM, CIRY (NUM).                                   47000000
  158      ENTER COBOL.                                                 47200000
  159  NEXT1.                                                           47400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 47600000
                PLACE X AND Y DISPLACEMENTS FOR CIRCLE WITH R = 200     47800000
                IN XDISP AND YDISP TABLES                               48000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.48200000
  1591 NEXT11.                                                          48400000
  161      COMPUTE XDISP (1) = 52.     COMPUTE YDISP (1) = 193.         48600000
  162      COMPUTE XDISP (2) = 100.    COMPUTE YDISP (2) = 173.         48800000
  163      COMPUTE XDISP (3) = 141.    COMPUTE YDISP (3) = 141.         49000000
  164      COMPUTE XDISP (4) = 173.    COMPUTE YDISP (4) = 100.         49200000
  165      COMPUTE XDISP (5) = 193.    COMPUTE YDISP (5) = 52.          49400000
  166      COMPUTE XDISP (6) = 200.    COMPUTE YDISP (6) = 0.           49600000
  167      COMPUTE XDISP (7) = 193.    COMPUTE YDISP (7) = -52.         49800000
  168      COMPUTE XDISP (8) = 173.    COMPUTE YDISP (8) = -100.        50000000
  169      COMPUTE XDISP (9) = 141.    COMPUTE YDISP (9) = -141.        50200000
  170      COMPUTE XDISP (10) = 100.   COMPUTE YDISP (10) = -173.       50400000
  171      COMPUTE XDISP (11) = 52.    COMPUTE YDISP (11) = -193.       50600000
  172      COMPUTE XDISP (12) = 0.     COMPUTE YDISP (12) = -200.       50800000
  173      COMPUTE XDISP (13) = -52.   COMPUTE YDISP (13) = -193.       51000000
  174      COMPUTE XDISP (14) = -100.  COMPUTE YDISP (14) = -173.       51200000
  175      COMPUTE XDISP (15) = -141.  COMPUTE YDISP (15) = -141.       51400000
  176      COMPUTE XDISP (16) = -173.  COMPUTE YDISP (16) = -100.       51600000
  177      COMPUTE XDISP (17) = -193.  COMPUTE YDISP (17) = -52.        51800000
  178      COMPUTE XDISP (18) = -200.  COMPUTE YDISP (18) = 0.          52000000
  179      COMPUTE XDISP (19) = -193.  COMPUTE YDISP (19) = 52.         52200000
  180      COMPUTE XDISP (20) = -173.  COMPUTE YDISP (20) = 100.        52400000
  181      COMPUTE XDISP (21) = -141.  COMPUTE YDISP (21) = 141.        52600000
  182      COMPUTE XDISP (22) = -100.  COMPUTE YDISP (22) = 173.        52800000
  183      COMPUTE XDISP (23) = -52.   COMPUTE YDISP (23) = 193.        53000000
  1831     COMPUTE XDISP (24) = 0.     COMPUTE YDISP (24) = 200.        53200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 53400000
                COMPUTE COORDINATES FOR CIRCLES AROUND OUTER X'S        53600000
                AND PLACE THEM IN SMALX AND SMALY TABLES                53800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.54000000
  184      PERFORM SMALX-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 854200000
  185      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.                      54400000
  1851     GO TO NEXT2.                                                 54600000
  186  SMALX-CIRCLES.                                                   54800000
  187      COMPUTE SMALX (SUB1, SUB2) = CIRX (SUB1) + XDISP (SUB2).     55000000
  188  NEXT2.                                                           55200000
  189      PERFORM SMALY-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 855400000
  190      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.                      55600000
  1901     GO TO NEXT31.                                                55800000
  191  SMALY-CIRCLES.                                                   56000000
  192      COMPUTE SMALY (SUB1, SUB2) = CIRY (SUB1) + YDISP (SUB2).     56200000
  193  NEXT3.                                                           56400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 56600000
                GENERATE CIRCLES AROUND OUTER X'S IN OMIT STATUS        56800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.57000000
  1931 NEXT31.                                                          57200000
  194      COMPUTE GENCDE = 2.                                          57400000
  195      COMPUTE COUNT = 24.                                          57600000
  196      PERFORM SMALL-CIRCLES VARYING NUM FROM 1 BY 1 UNTIL NUM > 8. 57800000
  1961     GO TO NEXT41.                                                58000000
  197  SMALL-CIRCLES.                                                   58200000
  198      COMPUTE CORVAL = NUM.                                        58400000
  1981     COMPUTE CIRYDISP = CIRY (NUM) + DISP.                        58600000
  199      ENTER LINKAGE.                                               58800000
  200      CALL 'STPOS' USING IGDS3, CIRX (NUM), CIRYDISP.              59000000
  201      ENTER COBOL.                                                 59200000
  202      ENTER LINKAGE.                                               59400000
  203      CALL 'PLINE' USING IGDS3, SMALX (NUM, ONE), SMALY (NUM, ONE),59600000
  204      CORVAL, QUAY, GENCDE, COUNT, XINDEX, YINDEX.                 59800000
  205      ENTER COBOL.                                                 60000000
  206  NEXT4.                                                           60200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 60400000
                OMIT LABELS FROM THE DISPLAY                            60600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.60800000
  2061 NEXT41.                                                          61000000
  207      ENTER LINKAGE.                                               61200000
  208      CALL 'OMIT' USING IGDS2.                                     61400000
  209      ENTER COBOL.                                                 61600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 61800000
                EXECUTE ALL GRAPHIC DATA PRODUCED                       62000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.62200000
  210      ENTER LINKAGE.                                               62400000
  211      CALL 'EXEC' USING IGDS1.                                     62600000
  212      ENTER COBOL.                                                 62800000
  213      ENTER LINKAGE.                                               63000000
  214      CALL 'EXEC' USING IGDS2.                                     63200000
  215      ENTER COBOL.                                                 63400000
  216      ENTER LINKAGE.                                               63600000
  217      CALL 'EXEC' USING IGDS3.                                     63800000
  218      ENTER COBOL.                                                 64000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 64200000
                REQUEST ATTENTION INFORMATION TO DETERMINE WHETHER      64400000
                2250 OPERATOR WANTS TO CHANGE OR END DISPLAY -          64600000
                WAIT FOR AN ATTENTION TO OCCUR                          64800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.65000000
  219  200.                                                             65200000
  220      ENTER LINKAGE.                                               65400000
  221      CALL 'RQATN' USING IATL, INTCD, WAIT, INTARY (ONE),          65600000
  222      ATTNS1, ATTNS2, ATTNS3, ATTNS4.                              65800000
  223      ENTER COBOL.                                                 66000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 66200000
                IF LIGHT PEN ATTENTION, GO TO 210 -                     66400000
                IF PROGRAMMED FUNCTION KEY ATTENTION, GO TO 235         66600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.66800000
  224      IF INTCD < 34 GO TO 235.                                     67000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 67200000
                IF LIGHT PEN ATTENTION WAS ASSOCIATED WITH IGDS1,       67400000
                GO TO 220 - IF IGDS2, GO TO 225 - IF IGDS3, GO TO 230   67600000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.67800000
  225  210.                                                             68000000
  226      COMPUTE INTARYX = INTARY (1).                                68200000
  227      IF INTARYX = IGDS1 GO TO 220.                                68400000
  228  201.                                                             68600000
  229      IF INTARYX = IGDS2 GO TO 225.                                68800000
  230  202.                                                             69000000
  231      IF INTARYX = IGDS3 GO TO 230 OTHERWISE GO TO 200.            69200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 69400000
                IF LIGHT PEN ATTENTION WAS ON CENTER OF LARGE CIRCLE,   69600000
                GO TO 221 - IF ON OUTER CIRCLE, GO TO 222               69800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.70000000
  232  220.                                                             70200000
  233      COMPUTE INTARYX = INTARY (4).                                70400000
  234      IF INTARYX < 0 GO TO 221 OTHERWISE GO TO 222.                70600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 70800000
                DISPLAY LABELS AND WAIT FOR ANOTHER ATTENTION           71000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.71200000
  235  221.                                                             71400000
  236      ENTER LINKAGE.                                               71600000
  237      CALL 'INCL' USING IGDS2.                                     71800000
  238      ENTER COBOL.                                                 72000000
  239      GO TO 200.                                                   72200000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 72400000
                DISPLAY A CIRCLE AROUND THE OUTER X DETECTED AND WAIT   72600000
                FOR ANOTHER ATTENTION                                   72800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.73000000
  240  222.                                                             73200000
  241      ENTER LINKAGE.                                               73400000
  242      CALL 'INCL' USING IGDS3, INTARYX.                            73600000
  243      ENTER COBOL.                                                 73800000
  244      GO TO 200.                                                   74000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 74200000
                REMOVE LABELS FROM DISPLAY - AWAIT NEW ATTENTION        74400000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.74600000
  245  225.                                                             74800000
  246      ENTER LINKAGE.                                               75000000
  247      CALL 'OMIT' USING IGDS2.                                     75200000
  248      ENTER COBOL.                                                 75400000
  249      GO TO 200.                                                   75600000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 75800000
                REMOVE DETECTED CIRCLE FROM DISPLAY                     76000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.76200000
  250  230.                                                             76400000
  251      COMPUTE INTARYX = INTARY (4).                                76600000
  252      ENTER LINKAGE.                                               76800000
  253      CALL 'OMIT' USING IGDS3, INTARYX.                            77000000
  254      ENTER COBOL.                                                 77200000
  255      GO TO 200.                                                   77400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 77600000
                IF PROGRAMMED FUNCTION KEY 1 DEPRESSED, GO TO 240 -     77800000
                IF KEY 2, GO TO 250 - IF KEY 3, GO TO 260               78000000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.78200000
  256  235.                                                             78400000
  257      IF INTCD = 1 GO TO 240.                                      78600000
  258  235A.                                                            78800000
  259      IF INTCD = 2 GO TO 250.                                      79000000
  260  235B.                                                            79200000
  261      IF INTCD = 3 GO TO 260.                                      79400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 79600000
                TERMINATE THE PROGRAM RUN                               79800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.80000000
  262  240.                                                             80200000
  263      ENTER LINKAGE.                                               80400000
  264      CALL 'TMGSP' USING IGSP.                                     80600000
  265      ENTER COBOL.                                                 80800000
  266      STOP RUN.                                                    81000000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 81200000
                REMOVE ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION   81400000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.81600000
  267  250.                                                             81800000
  268      PERFORM 251 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.           82000000
  2681     GO TO 251A.                                                  82200000
  269  251.                                                             82400000
  270      ENTER LINKAGE.                                               82600000
  271      CALL 'OMIT' USING IGDS3, NUM.                                82800000
  272      ENTER COBOL.                                                 83000000
  273  251A.                                                            83200000
  274      GO TO 200.                                                   83400000
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 83600000
                DISPLAY ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION  83800000
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.84000000
  275  260.                                                             84200000
  276      PERFORM 261 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.           84400000
  2761     GO TO 261A.                                                  84600000
  277  261.                                                             84800000
  278      ENTER LINKAGE.                                               85000000
  279      CALL 'INCL' USING IGDS3, NUM.                                85200000
  280      ENTER COBOL.                                                 85400000
  281  261A.                                                            85600000
  282      GO TO 200.                                                   85800000
/*                                                                      86000000
//LKED.SYSLIB  DD  DSNAME=SYS1.COBLIB,DISP=OLD                          86200000
//             DD  DSNAME=SYS1.LINKLIB,DISP=OLD                         86400000
//LKED.SYSIN   DD  *                                                    86600000
       INCLUDE  SYSLIB(IHDGSP01)                                        86800000
       INCLUDE  SYSLIB(IHDGSP02)                                        87000000
       INCLUDE  SYSLIB(IHDGSP03)                                        87200000
/*                                                                      87400000
//GO.FT10F001  DD  UNIT=2250-1                                          87600000
//GO.SYSPRINT  DD  SYSOUT=A                                             87800000
/*                                                                      88000000
MEMBER NAME  IHGSAMP
//STG1JOB1 JOB 633,KGN,MSGLEVEL=1                                       00300000
//STEP1 EXEC PGM=IEBUPDTE,PARM=NEW    CREATE THE SYSIN FOR IEBGENER.    00600000
//SYSPRINT DD  SYSOUT=A                                                 00900000
//SYSABEND  DD  SYSOUT=A                                                01200000
//SYSUT2 DD   UNIT=2311,DISP=(,PASS),SPACE=(TRK,(10,10,1)),            C01500000
//             VOLUME=SER=111111,DSNAME=&GENSYSIN                       01800000
//SYSIN  DD    *                                                        02100000
./ ADD NAME=INLIB1,LIST=ALL,LEVEL=01,SOURCE=0                           02400000
      GENERATE MAXNAME=3,MAXFLDS=3,MAXGPS=3,MAXLITS=20                  02700000
      MEMBER   NAME=(MEMBER1)                                           03000000
      RECORD   IDENT=(8,'00000410',73)                                  03300000
      MEMBER   NAME=(MEMBER2)                                           03600000
      RECORD   IDENT=(8,'00000170',73)                                  03900000
      MEMBER   NAME=(MEMBER3)                                           04200000
      RECORD   IDENT=(8,'00000320',73)                                  04500000
THIS CARD SHOULD BE A SLASH ASTERISK                                    04800000
//STEP1A EXEC  PGM=IEBGENER             CREATE THE CHANGE PDS.          05100000
//SYSPRINT DD  SYSOUT=A                                                 05400000
//SYSUT2 DD    DSNAME=SAMPLCHG,DISP=(,CATLG),UNIT=2311,                X05700000
//             DCB=(BLKSIZE=80,LRECL=80,RECFM=F),                      X06000000
//             VOLUME=SER=111111,SPACE=(TRK,(10,10,1))                  06300000
//SYSIN  DD    DSNAME=&GENSYSIN(INLIB1),UNIT=2311,VOLUME=SER=111111,   X06600000
//             DISP=(OLD,PASS)                                          06900000
//SYSUT1 DD    DATA                                                     07200000
 CTL 01010000,M   ,MEMBER1,SAMPLIB1                                     07500000
./ CHANGE NAME=MEMBER1,LIST=ALL,LEVEL=01,SOURCE=1                       07800000
*                                  X                                  * 08100000
*                                 X X                                 * 08400000
*                                X   X                                * 08700000
*                               X     X                               * 09000000
*                              X       X                              * 09300000
*                             X         X                             * 09600000
*                            X           X                            * 09900000
*                           X             X                           * 10200000
*                          X               X                          * 10500000
*                         X                 X                         * 10800000
*           X X X X X X X X                 X X X X X X X X           * 11100000
*  X                               X                               X  * 11400000
*           X X X X X X X X                 X X X X X X X X           * 11700000
*                         X                 X                         * 12000000
*                          X               X                          * 12300000
*                           X             X                           * 12600000
*                            X           X                            * 12900000
*                             X         X                             * 13200000
*                              X       X                              * 13500000
*                               X     X                               * 13800000
*                                X   X                                * 14100000
*                                 X X                                 * 14400000
*                                  X                                  * 14700000
 CTL 01010000,M   ,MEMBER2,SAMPLIB1                                     15000000
./ CHANGE NAME=MEMBER2,LIST=ALL,LEVEL=01,SOURCE=1                       15300000
*        CARD  16        THESE TWO CARDS WERE ADDED                     15600000
*        CARD  17        BY THE UPDATE UTILITY.                         15900000
 CTL 01010000,M   ,MEMBER3,SAMPLIB2                                     16200000
./ CHANGE NAME=MEMBER3,LIST=ALL,LEVEL=01,SOURCE=1                       16500000
                     X                           X                      16800000
                     X                           X                      17100000
                     X                           X                      17400000
                     X                           X                      17700000
                     X                           X                      18000000
                      X     *****     *****     X                       18300000
                     X     *     *   *     *     X                      18600000
                     X    *         *       *    X                      18900000
                     X    *         *       *    X                      19200000
                     X    *   ****  *       *    X                      19500000
                     X     *     *   *     *     X                      19800000
                      X     *****     *****     X                       20100000
THIS CARD SHOULD BE A SLASH ASTERISK                                    20400000
//STEP2 EXEC PGM=IEBUPDTE,PARM=NEW    CREATE SAMPLE LIBRARY1            20700000
//SYSPRINT DD  SYSOUT=A                                                 21000000
//SYSUT2 DD    DSNAME=SAMPLIB1,SPACE=(TRK,(10,10,1)),UNIT=2311,        C21300000
//             DISP=(NEW,CATLG),VOLUME=SER=111111                       21600000
//SYSIN  DD    *                                                        21900000
./ ADD NAME=MEMBER1,LIST=ALL,LEVEL=01,SOURCE=1,SSI=00010000             22200000
./ NUMBER NEW1=10,INCR=10                                               22500000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 22800000
*                                                                     * 23100000
*                                                                     * 23400000
*                                                                     * 23700000
*                                                                     * 24000000
*                  X                               X                  * 24300000
*                 X X                             X X                 * 24600000
*                X   X                           X   X                * 24900000
*               X     X                         X     X               * 25200000
*              X       X                       X       X              * 25500000
*             X         X                     X         X             * 25800000
*            X           X                   X           X            * 26100000
*           X             X                 X             X           * 26400000
*          X               X               X               X          * 26700000
*         X                 X             X                 X         * 27000000
*        X                   X           X                   X        * 27300000
*       X                     X         X                     X       * 27600000
*      X                       X       X                       X      * 27900000
*     X                         X     X                         X     * 28200000
*    X                           X   X                           X    * 28500000
*   X                             X X                             X   * 28800000
*  X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X  * 29100000
*   X                             X X                             X   * 29400000
*    X                           X   X                           X    * 29700000
*     X                         X     X                         X     * 30000000
*      X                       X       X                       X      * 30300000
*       X                     X         X                     X       * 30600000
*        X                   X           X                   X        * 30900000
*         X                 X             X                 X         * 31200000
*          X               X               X               X          * 31500000
*           X             X                 X             X           * 31800000
*            X           X                   X           X            * 32100000
*             X         X                     X         X             * 32400000
*              X       X                       X       X              * 32700000
*               X     X                         X     X               * 33000000
*                X   X                           X   X                * 33300000
*                 X X                             X X                 * 33600000
*                  X                               X                  * 33900000
*                                                                     * 34200000
*                                                                     * 34500000
*                                                                     * 34800000
*                                                                     * 35100000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 35400000
./ ADD NAME=MEMBER2,LIST=ALL,LEVEL=01,SOURCE=1,SSI=00010000             35700000
./ NUMBER NEW1=10,INCR=10                                               36000000
*        CARD  1         THIS                                           36300000
*        CARD  2         IS                                             36600000
*        CARD  3         MEMBER2                                        36900000
*        CARD  4         OF                                             37200000
*        CARD  5         SAMPLIB1                                       37500000
*        CARD  6         .                                              37800000
*        CARD  7         CARD                                           38100000
*        CARD  8         16                                             38400000
*        CARD  9         AND                                            38700000
*        CARD  10        17                                             39000000
*        CARD  11        WILL                                           39300000
*        CARD  12        BE                                             39600000
*        CARD  13        ADDED                                          39900000
*        CARD  14        BELOW                                          40200000
*        CARD  15        .                                              40500000
THIS CARD SHOULD BE A SLASH ASTERISK                                    40800000
//STEP3 EXEC PGM=IEBUPDTE,PARM=NEW    CREATE SAMPLE LIBRARY2            41100000
//SYSPRINT DD  SYSOUT=A                                                 41400000
//SYSUT2 DD    DSNAME=SAMPLIB2,SPACE=(TRK,(10,10,1)),UNIT=2311,        C41700000
//             DISP=(NEW,CATLG),VOLUME=SER=111111                       42000000
//SYSIN  DD    *                                                        42300000
./ ADD NAME=MEMBER3,LIST=ALL,LEVEL=01,SOURCE=1,SSI=00010000             42600000
./ NUMBER NEW1=10,INCR=10                                               42900000
                                                                        43200000
                                                                        43500000
                                                                        43800000
                                                                        44100000
                                                                        44400000
                                                                        44700000
                                                                        45000000
                          X X X X X X X X X X                           45300000
                         X                   X                          45600000
                        X                     X                         45900000
                       X                       X                        46200000
                      X                         X                       46500000
                     X  ***  *****   ***   ****  X                      46800000
                     X *       *    *   *  *   * X                      47100000
                     X   *     *    *   *  ****  X                      47400000
                     X     *   *    *   *  *     X                      47700000
                     X  ***    *     ***   *     X                      48000000
                      X                         X                       48300000
                       X                       X                        48600000
                        X                     X                         48900000
                         X                   X                          49200000
                          X X X X X X X X X X                           49500000
                         X                   X                          49800000
                        X                     X                         50100000
                       X                       X                        50400000
                      X                         X                       50700000
                     X                           X                      51000000
                     X                           X                      51300000
                     X                           X                      51600000
                     X                           X                      51900000
                     X                           X                      52200000
                      X                         X                       52500000
                       X                       X                        52800000
                        X                     X                         53100000
                         X                   X                          53400000
                          X X X X X X X X X X                           53700000
                                                                        54000000
                                                                        54300000
                                                                        54600000
                                                                        54900000
                                                                        55200000
                                                                        55500000
                                                                        55800000
THIS CARD SHOULD BE A SLASH ASTERISK                                    56100000
//STEP4  EXEC  PGM=IEHLIST              LIST THE LIBRARY SSI.           56400000
//DD1    DD    DISP=OLD,UNIT=2311,VOLUME=SER=111111                     56700000
//SYSPRINT DD  SYSOUT=A                                                 57000000
//SYSIN  DD    *                                                        57300000
ONE      LISTPDS DSNAME=SAMPLIB1,VOL=2311=111111                        57600000
TWO      LISTPDS DSNAME=SAMPLIB2,VOL=2311=111111                        57900000
         LISTCTLG VOL=2311=111111                                       58200000
THIS CARD SHOULD BE A SLASH ASTERISK                                    58500000
//STEP5  EXEC  PGM=IHGUAP,PARM='SYMCHG,OUTPUT'     UAP ANALYSIS.        58800000
//SYSABEND  DD  SYSOUT=A                                                59100000
//UAPLOG DD    SYSOUT=A                                                 59400000
//JOBOUT DD    DSNAME=&JOBSTRM,UNIT=2311,DISP=(NEW,PASS),              X59700000
//             VOLUME=SER=111111,SPACE=(TRK,(10,10))                    60000000
//SYMCHG DD    DSNAME=SAMPLCHG,DISP=(OLD,DELETE)                        60300000
//SAMPLIB1 DD  DSNAME=SAMPLIB1,DISP=OLD                                 60600000
//SAMPLIB2 DD  DSNAME=SAMPLIB2,DISP=OLD                                 60900000
//SYSIN  DD    *                                                        61200000
JBSTG2JOB1 JOB 633,KGN,MSGLEVEL=1                UAP JOB STREAM.        61500000
DPSYSPRINT DD  DSNAME=UAPTR,SYSOUT=A                                    61800000
DUSYSUT1  DD   DSNAME=LNKWORK,                                         C62100000
DU             DISP=(NEW,DELETE),                                      C62400000
DU             UNIT=2311,                                              C62700000
DU             VOLUME=(,,1,1,SER=(111111)),                            C63000000
DU             SPACE=(TRK,(10,15))                                      63300000
THIS CARD SHOULD BE A SLASH ASTERISK                                    63900000
//STEP6 EXEC   PGM=IEBPTPCH             PRINT THE OUTPUT JOBSTREAM.     64200000
//SYSPRINT DD  SYSOUT=A                                                 64500000
//SYSUT1 DD    DSNAME=&JOBSTRM,DISP=(OLD,PASS)                          64800000
//SYSUT2  DD   SYSOUT=A                                                 65100000
//SYSIN    DD  *                                                        65400000
         PRINT     TYPORG=PS,MAXNAME=1,CNTRL=1,MAXFLDS=1,MAXGPS=1       65700000
        RECORD FIELD=(80,1,,1)                                          66000000
THIS CARD SHOULD BE A SLASH ASTERISK                                    66300000
//STEP7 EXEC   PGM=IEBPTPCH             PUNCH THE OUTPUT JOBSTREAM.     66600000
//SYSPRINT DD  SYSOUT=A                                                 66900000
//SYSUT1 DD    DSNAME=&JOBSTRM,DISP=(OLD,PASS)                          67200000
//SYSUT2  DD   UNIT=2540-2                                              67500000
//SYSIN    DD  *                                                        67800000
         PUNCH     TYPORG=PS,MAXNAME=1,CNTRL=1,MAXFLDS=1,MAXGPS=1       68100000
        RECORD FIELD=(80,1,,1)                                          68400000
THIS CARD SHOULD BE A SLASH ASTERISK                                    68700000
//STEP3  EXEC  PGM=IEHLIST              LIST THE LIBRARY SSI.           69000000
//DD1    DD    DISP=OLD,UNIT=2311,VOLUME=SER=111111                     69300000
//SYSPRINT DD  SYSOUT=A                                                 69600000
//SYSIN  DD    *                                                        69900000
ONE      LISTPDS DSNAME=SAMPLIB1,VOL=2311=111111                        70200000
TWO      LISTPDS DSNAME=SAMPLIB2,VOL=2311=111111                        70500000
THIS CARD SHOULD BE A SLASH ASTERISK                                    70800000
//STEP4 EXEC PGM=IEBUPDTE                                               71100000
//SYSPRINT DD  SYSOUT=A                                                 71400000
//SYSUT1   DD  DSNAME=SAMPLIB1,DISP=(OLD,KEEP)                          71700000
//SYSUT2   DD  DSNAME=SAMPLIB2,DISP=(OLD,KEEP)                          72000000
//SYSIN    DD  *                                                        72300000
./ REPRO NAME=MEMBER1,LEVEL=01,LIST=ALL,SOURCE=1                        72600000
./ REPRO NAME=MEMBER2,LEVEL=01,LIST=ALL,SOURCE=1                        72900000
THIS CARD SHOULD BE A SLASH ASTERISK                                    73200000
//STEP5 EXEC PGM=IEBUPDTE                                               73500000
//SYSPRINT DD  SYSOUT=A                                                 73800000
//SYSUT1   DD  DSNAME=SAMPLIB2,DISP=(OLD,DELETE)                        74100000
//SYSUT2   DD  DSNAME=SAMPLIB1,DISP=(OLD,DELETE)                        74400000
//SYSIN    DD  *                                                        74700000
./ REPRO NAME=MEMBER3,LEVEL=01,LIST=ALL,SOURCE=1                        75000000
THIS CARD SHOULD BE A SLASH ASTERISK                                    75300000
//STEP6  EXEC  PGM=IEHPROGM               SCRATCH TEST LIBS.            75600000
//DDCARD1 DD   UNIT=2311,DISP=OLD,VOLUME=SER=111111                     75900000
//SYSPRINT DD  SYSOUT=A                                                 76200000
//SYSIN  DD    *                                                        76500000
       SCRATCH DSNAME=SAMPLCHG,VOL=2311=111111                          76800000
       SCRATCH DSNAME=SAMPLIB1,VOL=2311=111111                          77100000
       SCRATCH DSNAME=SAMPLIB2,VOL=2311=111111                          77400000
THIS CARD SHOULD BE A SLASH ASTERISK                                    77700000
MEMBER NAME  IKDSAMPL
//PTOPSAMP JOB  360T1130,SAMPLE,MSGLEVEL=1                              01000000
//PTOPSTEP  EXEC  FORTGCLG,PARM.FORT=(NODECK,MAP,LOAD)                  02000000
//FORT.SYSIN DD *                                                       03000000
      EXTERNAL ASYN                                                     04000000
      EXTERNAL ERRN                                                     05000000
C ASYN=ASYNCHRONOUS ROUTINE                                             06000000
      DIMENSION TEMPRY(5),USARY(5),IPASS(2)                             07000000
C THE PASSWORD IS READ FROM A CARD RECORD INTO IPASS.                   08000000
 5    FORMAT(2A4)                                                       09000000
      READ (5,5) IPASS                                                  10000000
C GTNIT INITIALIZES COMMUNICATION WITH THE 1130 PROGRAM.                11000000
 10   CALL  GTNIT(9,20,20,ASYN,IPASS,IERR)                              12000000
      IF(IERR)100,20,110                                                13000000
C GTRED IS CALLED TO RECEIVE THE DATA BEING TRANSMITTED                 14000000
C FROM THE 1130 PROGRAM.                                                15000000
 20   CALL GTRED(9,TEMPRY,5,4)                                          16000000
C GTCLT IS CALLED TO TEST THE READ OPERATION                            17000000
 30   CALL GTCLT(9,3,ITEST)                                             18000000
      GO TO (60,40,40,40,90,40,40,50),ITEST                             19000000
C A BRANCH IS MADE DEPENDING UPON THE RETURN CODE PLACED IN ITEST. THE  20000000
C ERROR ROUTINE IS PASSED THE RETURN CODE INDICATING THE PROBLEM.       21000000
 40   CALL ERRN(ITEST)                                                  22000000
C NO RETURN IS MADE FROM THE ERROR ROUTINE.                             23000000
 50   PAUSE 'OPERATOR ASSISTANCE REQUIRED FOR TELEPROCESSING UNIT.'     24000000
      GO TO 20                                                          25000000
C GDCTF CONVERTS THE DATA FROM 1130 FORMAT TO SYSTEM/360 FORMAT.        26000000
 60   CALL GDCTF(TEMPRY,USARY,5,1)                                      27000000
C THE DATA VARIABLES ARE DEFINED AND ASSIGNED VALUES FROM THE ARRAY.    28000000
      WB = USARY(1)                                                     29000000
      CA = USARY(2)                                                     30000000
      W  = USARY(3)                                                     31000000
      C  = USARY(4)                                                     32000000
      EL = USARY(5)                                                     33000000
C WB=WHEELBASE. SHOULD BE WITHIN RANGE 110-200. MUST NOT BE 999.        34000000
C A VALUE OF 999 FOR WB INDICATES TO 1130 SAMPLE PROGRAM                35000000
C THAT IT HAS READ THE LAST DATA RECORD.                                36000000
C CA=DISTANCE FROM BACK OF CAB TO CENTER OF REAR AXLE. SHOULD BE        37000000
C WITHIN THE RANGE 38-130.                                              38000000
C W=GROSS WEIGHT.  SHOULD BE WITHIN RANGE 5000-23,000.                  39000000
C C=CLEARANCE BETWEEN BODY AND CAB. SHOULD BE 3.                        40000000
C EL=BODY LENGTH. SHOULD BE WITHIN RANGE 90-188.                        41000000
C THE WEIGHT DISTRIBUTION ON EACH AXLE IS COMPUTED.                     42000000
C A=HORIZONTAL DISTANCE BETWEEN CENTER OF BODY AND CENTER OF REAR AXLE. 43000000
C FW=WEIGHT ON FRONT AXLE.                                              44000000
C RW=WEIGHT ON REAR AXLE.                                               45000000
      A = CA-C-EL/2.0                                                   46000000
      FW = W*A/WB                                                       47000000
      RW = W-FW                                                         48000000
C RESULTS ARE PLACED IN THE USER'S ARRAY.                               49000000
      USARY(4) = FW                                                     50000000
      USARY(5) = RW                                                     51000000
C GDCFF CONVERTS THE DATA TO THE 1130 FORMAT.                           52000000
      CALL GDCFF(USARY(4),TEMPRY,2,1)                                   53000000
C GTWRT INITIATES DATA TRANSMISSION BACK TO THE 1130.                   54000000
 70   CALL GTWRT(9,TEMPRY,2,4,1)                                        55000000
 80   CALL GTCLT(9,2,ITEST)                                             56000000
      GO TO (20,80,80,40,90,40,40,50),ITEST                             57000000
C GTEND IS CALLED TO END COMMUNICATION WITH 1130 PROGRAM.               58000000
 90   CALL GTEND(9)                                                     59000000
      GO TO 120                                                         60000000
 100  WRITE (6,1)                                                       61000000
 1    FORMAT (43H YOUR PASSWORD DOES NOT MATCH 1130 PASSWORD)           62000000
      GO TO 120                                                         63000000
 110  WRITE (6,2)                                                       64000000
 2    FORMAT (50H TRANSMISSION-LINE ERRORS PREVENTED INITIALIZATION)    65000000
 120  STOP                                                              66000000
      END                                                               67000000
      SUBROUTINE ERRN(ITEST)                                            68000000
C THE FOLLOWING IS A ROUTINE THAT GAINS CONTROL                         69000000
C WHEN GTCLT DETERMINES THAT A READ OR WRITE                            70000000
C OPERATION WAS UNSUCCESSFUL.                                           71000000
      IF (ITEST-7)100,200,200                                           72000000
 100  WRITE (6,111)                                                     73000000
 111  FORMAT (48H TRANSMISSION-LINE ERRORS PREVENTED TRANSMISSION)      74000000
      GO TO 300                                                         75000000
 200  WRITE (6,222)                                                     76000000
 222  FORMAT (43H ELEMENT COUNTS OR DATA TYPES ARE INCORRECT)           77000000
 300  CALL GTEND(9)                                                     78000000
      STOP                                                              79000000
      END                                                               80000000
      SUBROUTINE ASYN(IDSRF,ISTRT)                                      81000000
C THE FOLLOWING IS A DUMMY ASYNCHRONOUS ROUTINE                         82000000
C FOR THE SAMPLE PROGRAM. IT IS NOT INVOKED BUT                         83000000
C MUST BE PRESENT TO RESOLVE THE "ASYNROUTINE"                          84000000
C ARGUMENT IN GTNIT.                                                    85000000
      CALL GTEND(9)                                                     86000000
      RETURN                                                            87000000
      END                                                               88000000
/*
//LKED.SYSLMOD DD SPACE=(1024,(50,20,1),RLSE)                           90000000
/*                                                                      91000000
//GO.SYSABEND DD SYSOUT=A                                               92000000
//GO.FT09F001  DD  UNIT=012                                             93000000
//GO.SYSIN DD *                                                         94000000
AXLEP1                                                                  95000000
/*
MEMBER NAME  PL1SAMP
//PL1SAMP  JOB  ,,MSGLEVEL=1,REGION=100K                                00500000
//STEP   EXEC  PL1LFCLG,PARM.PL1L='SIZE=100000,L,E,A,X,M,S2'            01000000
//PL1L.SYSIN   DD   *                                                   01500000
 PL1SAMP: PROC OPTIONS(MAIN);                                           02000000
 /* THIS SAMPLE PROGRAM DRAWS A CIRCLE OF 8 BASIC SIZE X'S WITH A LARGE 02500000
    X AS ITS CENTER. DEPENDING ON THE ATTENTION CREATED, THE PROGRAM WIL03000000
    THE FOLLOWING:                                                      03500000
      1. LIGHT PEN ATTENTION ON CENTER X LABELS OUTER X'S FROM NUM1     04000000
         THROUGH NUM8.                                                  04500000
      2. LIGHT PEN ATTENTION ON OUTER X GENERATES A CIRCLE WHOSE CENTER 05000000
         IS THE DETECTED X.                                             05500000
      3. LIGHT PEN ATTENTION ON CIRCLE AROUND OUTER X MAKES THAT CIRCLE 06000000
         INVISIBLE.                                                     06500000
      4. LIGHT PEN ATTENTION ON ANY LABEL MAKES ALL LABELS INVISIBLE.   07000000
      5. PROGRAMMED FUNCTION KEY 1 ENDS RUN.                            07500000
      6. PROGRAMMED FUNCTION KEY 2 MAKES ALL CIRCLES INVISIBLE.         08000000
      7. PROGRAMMED FUNCTION KEY 3 MAKES ALL CIRCLES VISIBLE. */        08500000
 /*       BEGIN PROGRAM                                                 09000000
  SET UP DECLARE STATEMENTS FOR VALUES TO BE USED.*/                    09500000
       DCL LABEL(8)CHAR(4);                                             10000000
    DCL  (CIRX(8),CIRY(8),SMALX(8,24),SMALY(8,24))  FLOAT BIN;          10500000
     DCL (THETA,RADIAN,R,C,CX) FLOAT BIN;                               11000000
    DCL STPOS ENTRY(,FLOAT BIN,FLOAT BIN);                              11500000
 DCL(IGSP,I0,I2250,IGDS1,IGDS2,IGDS3,IATL,IX,J,K,L,M,N,IV,JV,NUM,       12000000
   NULL,INTCD,I) FIXED BIN (31,0);                                      12500000
       DCL X CHAR(1), INTARY(10) FIXED BIN(31,0);                       13000000
        X='X';                                                          13500000
        LABEL(1)='NUM1';                                                14000000
        LABEL(2)='NUM2';                                                14500000
        LABEL(3)='NUM3';                                                15000000
        LABEL(4)='NUM4';                                                15500000
        LABEL(5)='NUM5';                                                16000000
        LABEL(6)='NUM6';                                                16500000
        LABEL(7)='NUM7';                                                17000000
        LABEL(8)='NUM8';                                                17500000
 /* DEFINE THE NULL VARIABLE.*/                                         18000000
     NULL=-4;                                                           18500000
          ON ERROR  SNAP  CALL  IHEDUMP;                                19000000
      CALL INGSP(IGSP,NULL);                                            19500000
 /*            INITIALIZE THE 2250. ASSIGN IT UNIT NUMBER 10.*/         20000000
      I0=10; CALL INDEV(IGSP,I0,I2250);                                 20500000
 /*            INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO       21000000
               DISPLAY THE CIRCLE OF X'S AND ITS CENTER X.*/            21500000
      CALL INGDS(I2250,IGDS1);                                          22000000
 /* INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO                  22500000
  LABEL THE OUTER X'S OF THE CIRCLE.*/                                  23000000
      CALL INGDS(I2250,IGDS2);                                          23500000
 /* INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO                  24000000
 DISPLAY A CIRCLE AROUND ANY OF THE OUTER X'S,*/                        24500000
      CALL INGDS(I2250,IGDS3);                                          25000000
 /* CREATE AN ATTENTION LEVEL FOR THE 2250.*/                           25500000
      CALL CRATL(I2250,IATL);                                           26000000
 /* ENABLE PROGRAMMED FUNCTION KEYS 1,2, +3 +LIGHT PEN.*/               26500000
           J=-3; K=34; L=3;  M=2; N=4; IV=24;   JV=8; IX=1;             27000000
      CALL ENATN(IATL,IX,J,K);                                          27500000
      CALL MLITS(I2250,L);                                              28000000
 /* ALLOW LIGHT PEN ATTENTIONS FOR EACH GRAPHIC DATA SET. */            28500000
      CALL SLPAT(IGDS1,IX);                                             29000000
      CALL SLPAT(IGDS2,IX);                                             29500000
      CALL SLPAT(IGDS3,IX);                                             30000000
 /* SET BEAM POSITION TO CENTER OF CIRCLE. */                           30500000
      CX=2047.0;                                                        31000000
      CY=2047.0;                                                        31500000
 /* SET CHARACTER MODE FOR LARGE SIZE, PROTECTED. */                    32000000
      CALL SCHAM(IGDS1,M);                                              32500000
      NUM=-1;                                                           33000000
      CALL PTEXT(IGDS1,X,IX,NUM,NULL,IX,CX,CY);                         33500000
  /*           COMPUTE X AND Y COORDINATES FOR X'S OF OUTER CIRCLE.*/   34000000
 /* PLACE THEM IN THE CIRX AND CIRY ARRAYS. */                          34500000
      R=1200.0;                                                         35000000
      C=3.141596/180;                                                   35500000
      THETA=45.0;                                                       36000000
  TEN:DO I=1 TO 8;                                                      36500000
      RADIAN=THETA*FLOAT(I)*C;                                          37000000
      CIRX(I)=CX+R*COS(RADIAN);                                         37500000
      CIRY(I)=CY+R*SIN(RADIAN);                                         38000000
      END TEN;                                                          38500000
 /* SET CHARACTER MODE FOR BASIC SIZE, PROTECTED. */                    39000000
      CALL SCHAM(IGDS1,IX);                                             39500000
 /* GENERATE AN X IN INCLUDE STATUS. CALCULATE                          40000000
  X-COORDINATE OF LABEL ASSOCIATED WITH THAT X.                         40500000
  GENERATE LABEL IN INCLUDE STATUS. SET INCR TO                         41000000
  NEXT LABEL IN ARRAY. DO THIS 8 TIMES                                  41500000
  TO COMPLETE CIRCLE. */                                                42000000
 FIVE:DO NUM=1 TO 8;                                                    42500000
      CALL PTEXT(IGDS1,X,IX,NUM,NULL,IX,CIRX(NUM),CIRY(NUM));           43000000
      CXNUM=CIRX(NUM)+300.0;                                            43500000
      CALL PTEXT(IGDS2,LABEL(NUM),N,NUM,NULL,IX,CXNUM,CIRY(NUM));       44000000
      END FIVE;                                                         44500000
 /*            COMPUTE COORDINATES FOR CIRCLES AROUND OUTER X'S.*/      45000000
 /* PLACE THEM IN SMALX AND SMALY ARRAYS. */                            45500000
      R=200.0;                                                          46000000
      THETA=360.0/24.0;                                                 46500000
  ONE:DO N=1 TO 24;                                                     47000000
      RADIAN=THETA*FLOAT(N)*C;                                          47500000
  TWO:DO I=1 TO 8;                                                      48000000
      SMALX(I,N)=CIRX(I)+R*COS(RADIAN);                                 48500000
      SMALY(I,N)=CIRY(I)+R*SIN(RADIAN);                                 49000000
      END ONE;                                                          49500000
 /*            GENERATE CIRCLES AROUND OUTER X'S IN OMIT STATUS.*/      50000000
  SIX:DO NUM=1 TO 8;                                                    50500000
      CALL STPOS(IGDS3,CIRX(NUM)+200.0,CIRY(NUM));                      51000000
      CALL PLINE(IGDS3,SMALX(NUM,IX),SMALY(NUM,IX),NUM,NULL,            51500000
      M,IV,IX,IX);                                                      52000000
       END SIX;                                                         52500000
 /*            OMIT LABELS FROM THE DISPLAY. */                         53000000
      CALL OMIT(IGDS2);                                                 53500000
 /*            EXECUTE ALL GRAPHIC DATA PRODUCED. */                    54000000
      CALL EXEC(IGDS1);                                                 54500000
      CALL EXEC(IGDS2);                                                 55000000
      CALL EXEC(IGDS3);                                                 55500000
 /*            REQUEST ATTENTION INFORMATION. WAIT FOR ATTN TO OCCUR. */56000000
 HERE:CALL RQATN(IATL,INTCD,M,INTARY(1),IX,M,L,K);                      56500000
 /* IF LIGHT PEN ATTENTION, GO TO NEXT.                                 57000000
  IF PROGRAMMED FUNCTION KEY ATTENTION, GO TO CONT. */                  57500000
      IF INTCD=34 THEN GO TO NEXT; ELSE GO TO CONT;                     58000000
 /*            CHECK WHICH DATA SET ATTENTION OCCURRED IN. */           58500000
 NEXT:IF INTARY(1)=IGDS1 THEN GO TO SO;                                 59000000
      IF INTARY(1)=IGDS2 THEN GO TO TO;                                 59500000
      IF INTARY(1)=IGDS3 THEN GO TO MO; ELSE GO TO HERE;                60000000
 /*            IF LPEN ATTN WAS ON CENTER OF LARGE CIRCLE, GO TO IN.    60500000
               IF ON OUTER CIRCLE, GO TO OUT. */                        61000000
  SO: IF INTARY(4)>=0 THEN GO TO OUT;                                   61500000
 /*            DISPLAY LABELS AND WAIT FOR ANOTHER ATTN. */             62000000
   IN:CALL INCL(IGDS2);                                                 62500000
      GO TO HERE;                                                       63000000
   OUT:NUM=INTARY(4);                                                   63500000
     CALL INCL(IGDS3,NUM);                                              64000000
       GO TO HERE;                                                      64500000
 /*            REMOVE LABELS FROM DISPLAY. AWAIT NEW ATTN.*/            65000000
   TO: CALL OMIT(IGDS2);                                                65500000
       GO TO HERE;                                                      66000000
 /*            REMOVE DETECTED CIRCLE FROM DISPLAY. AWAIT ATTN.*/       66500000
   MO: NUM=INTARY(4);                                                   67000000
       CALL OMIT(IGDS3,NUM);                                            67500000
       GO TO HERE;                                                      68000000
 /*            IF PFK1 DEPRESSED, GO TO THRE. IF PFK2, GO TO FOUR.      68500000
               IF PFK3, GO TO FINI. */                                  69000000
 CONT:IF INTCD=1 THEN GO TO THRE;                                       69500000
      IF INTCD=2 THEN GO TO FOUR;                                       70000000
      IF INTCD=3 THEN GO TO FINI;                                       70500000
 /*            TERMINATE THE PROGRAM RUN. */                            71000000
 THRE:CALL TMGSP(IGSP);                                                 71500000
      GO TO EXIT;                                                       72000000
 /*            REMOVE ALL CIRCLES AROUND OUTER X'S. AWAIT ATTN. */      72500000
 FOUR:DO I=1 TO 8;                                                      73000000
      CALL OMIT(IGDS3,I);                                               73500000
      END FOUR;                                                         74000000
      GO TO HERE;                                                       74500000
 /*            DISPLAY ALL CIRCLES AROUND OUTER X'S. AWAIT ATTN. */     75000000
 FINI:DO I=1 TO 8;                                                      75500000
      CALL INCL(IGDS3,I);                                               76000000
      END FINI;                                                         76500000
      GO TO HERE;                                                       77000000
 EXIT: END PL1SAMP;                                                     77500000
//LKED.SYSIN   DD   *                                                   78500000
  INCLUDE  SYSLIB(IHEGSP01)                                             79000000
  INCLUDE  SYSLIB(IHEGSP02)                                             79500000
  INCLUDE  SYSLIB(IHEGSP03)                                             80000000
//GO.PL1DUMP   DD   SYSOUT=A                                            81000000
//GO.FT10F001 DD UNIT=2250-1                                            81500000
//GO.SYSUDUMP  DD   SYSOUT=A                                            82000000
/*                                                                      83000000
MEMBER NAME  IEXSAMP
//PASCAL JOB   98166,TEST,MSGLEVEL=1
//STEP   EXEC  ALGOFCLG,PARM.ALGOL=(ISO),PARM.GO=(DUMP)
//SYSIN  DD  *
@BEGIN@ @COMMENT@ TEST PROGRAM Q09
THIS PROGRAM GENERATES AND PRINTS THE FIRST TWENTY LINES OF PASCALS
TRIANGLE.THE K TH ELEMENT P%K,J< OF THE J TH LINE SHOULD BE EQUAL TO
THE SUM OF P%K-1,J-1< AND P%K,J-1< FOR K NOTEQUAL 0 AND K NOTEQUAL J.
P%0,J<#P%J,J<#1. THUS BY ADDING TWO BY TWO ALL ELEMENTS IN ONE LINE
PLACING EACH SUM BELOW AND BETWEEN THE TWO ELEMENTS THE NEXT LINE OF
PASCALS TRIANGLE COULD BE EXPANDED .,
@INTEGER@ L,K,N,I,M,POWERTEN.,
@INTEGER@@ARRAY@ A%/0..19/<.,
@BOOLEAN@ C.,
SYSACT%1,6,120<., SYSACT%1,8,62<.,
SYSACT%1,12,1<., SYSACT%1,2,56<.,
OUTSTRING %1,@%@PASCALS TRIANGLE@<@<.,
@FOR@L.#0@STEP@1@UNTIL@19@DO@
    @BEGIN@
    SYSACT%1,14,3<.,
    @IF@ L @LESS@ 19 @THEN@
                         SYSACT%1,2,58-3*L<.,
    A%/L/<.#1.,
    @FOR@K.#L-1@STEP@-1@UNTIL@1@DO@
    A%/K/<.#A%/K-1/<&A%/K/<.,
    @FOR@K.#0@STEP@1@UNTIL@L@DO@
         @BEGIN@
         C.#@TRUE@.,
         M.#A%/K/<.,
         @FOR@I.#5@STEP@-1@UNTIL@0@DO@
              @BEGIN@
              POWERTEN.#10@POWER@I.,
              N.#M@/@POWERTEN.,
              M.#M-N*POWERTEN.,
              @IF@N@EQUAL@0@THEN@
                   @BEGIN@
                   @IF@C@THEN@ OUTSYMBOL %1,@%@ @<@,1<
                   @ELSE@ OUTSYMBOL %1,@%@0@<@,1<.,
                   @END@
                   @ELSE@
                   @BEGIN@
                   C.#@FALSE@.,
                   OUTSYMBOL%1,@%@123456789@<@,N<.,
                   @END@
              @END@
         @END@
    @END@
@END@
/*
MEMBER NAME  IKFSAMP
//IKFSAMP JOB   CB545,COBOL,MSGLEVEL=1                                  01000021
// EXEC COBUCLG,PARM.COB='QUOTE'                                        02000021
//COB.SYSIN DD *                                                        03000021
100010 IDENTIFICATION DIVISION.                                         04000021
100020 PROGRAM-ID.  TESTRUN.                                            05000021
100030   AUTHOR. PROGRAMMER NAME.                                       06000021
100040   INSTALLATION. NEW YORK PROGRAMMING CENTER.                     07000021
100050   DATE-WRITTEN. JULY 12, 1968.                                   08000021
100060   DATE-COMPILED.                                                 09000021
100070   REMARKS. THIS PROGRAM HAS BEEN WRITTEN AS A SAMPLE PROGRAM FOR 10000021
100080     COBOL USERS. IT CREATES AN OUTPUT FILE AND READS IT BACK AS  11000021
100090     INPUT.                                                       12000021
100100 ENVIRONMENT DIVISION.                                            13000021
100110 CONFIGURATION SECTION.                                           14000021
100120   SOURCE-COMPUTER. IBM-360-H50.                                  15000021
100130   OBJECT-COMPUTER. IBM-360-H50.                                  16000021
100140 INPUT-OUTPUT SECTION.                                            17000021
100150 FILE-CONTROL.                                                    18000021
100160     SELECT FILE-1 ASSIGN TO UT-2400-S-SAMPLE.                    19000021
100170     SELECT FILE-2 ASSIGN TO UT-2400-S-SAMPLE.                    20000021
100180 DATA DIVISION.                                                   21000021
100190 FILE SECTION.                                                    22000021
100200 FD  FILE-1                                                       23000021
100210     LABEL RECORDS ARE OMITTED                                    24000021
100220     BLOCK CONTAINS 100 CHARACTERS                                25000021
100225     RECORD CONTAINS 20 CHARACTERS                                26000021
100230     RECORDING MODE IS F                                          27000021
100240     DATA RECORD IS RECORD-1.                                     28000021
100250   01 RECORD-1.                                                   29000021
100260     02 FIELD-A PICTURE IS X(20).                                 30000021
100270 FD  FILE-2                                                       31000021
100280     LABEL RECORDS ARE OMITTED                                    32000021
100290     BLOCK CONTAINS 5 RECORDS                                     33000021
100300     RECORD CONTAINS 20 CHARACTERS                                34000021
100310     RECORDING MODE IS F                                          35000021
100320     DATA RECORD IS RECORD-2.                                     36000021
100330   01 RECORD-2.                                                   37000021
100340     02 FIELD-A PICTURE IS X(20).                                 38000021
100350 WORKING-STORAGE SECTION.                                         39000021
100360     77 COUNT PICTURE S99 COMP SYNC.                              40000021
100370     77 NOMBER  PICTURE S99 COMP SYNC.                            41000021
100375   01 FILLER.                                                     42000021
 00380     02 ALPHABET PICTURE X(26) VALUE "ABCDEFGHIJKLMNOPQRSTUVWXYZ".43000021
100395     02 ALPHA REDEFINES ALPHABET PICTURE X OCCURS 26 TIMES.       44000021
100405     02 DEPENDENTS PICTURE X(26)  VALUE "012340123401234012340123445000021
100410-    "0".                                                         46000021
100420     02 DEPEND REDEFINES DEPENDENTS PICTURE X OCCURS 26 TIMES.    47000021
100440   01 WORK-RECORD.                                                48000021
100450     02 NAME-FIELD  PICTURE X.                                    49000021
100460     02 FILLER PICTURE X VALUE SPACE.                             50000021
100470     02 RECORD-NO PICTURE 9999.                                   51000021
100480     02 FILLER PICTURE X VALUE SPACE.                             52000021
100490     02 LOCATION PICTURE AAA VALUE "NYC".                         53000021
100500     02 FILLER PICTURE X VALUE SPACE.                             54000021
100510     02 NO-OF-DEPENDENTS PICTURE XX.                              55000021
100520     02 FILLER PICTURE X(7) VALUE SPACES.                         56000021
100530 PROCEDURE DIVISION.                                              57000021
100540 BEGIN. READY TRACE.                                              58000021
100550     NOTE THAT THE FOLLOWING OPENS THE OUTPUT FILE TO BE CREATED  59000021
100560     AND INITIALIZES COUNTERS.                                    60000021
100570 STEP-1. OPEN OUTPUT FILE-1. MOVE ZERO TO COUNT NOMBER.           61000021
100580     NOTE THAT THE FOLLOWING CREATES INTERNALLY THE RECORDS TO BE 62000021
100590     CONTAINED IN THE FILE, WRITES THEM ON TAPE, AND DISPLAYS     63000021
100600     THEM ON THE CONSOLE.                                         64000021
100610 STEP-2. ADD 1 TO COUNT, ADD 1 TO NOMBER, MOVE ALPHA (COUNT) TO   65000021
100620     NAME-FIELD.                                                  66000021
100630     MOVE DEPEND (COUNT) TO NO-OF-DEPENDENTS.                     67000021
100640     MOVE NOMBER TO RECORD-NO.                                    68000021
100650 STEP-3. DISPLAY WORK-RECORD UPON CONSOLE. WRITE RECORD-1 FROM    69000021
100660     WORK-RECORD.                                                 70000021
100670 STEP-4. PERFORM STEP-2 THRU STEP-3 UNTIL COUNT IS EQUAL TO 26.   71000021
100680     NOTE THAT THE FOLLOWING CLOSES OUTPUT AND REOPENS IT AS      72000021
100690     INPUT.                                                       73000021
100700 STEP-5. CLOSE FILE-1. OPEN INPUT FILE-2.                         74000021
100710     NOTE THAT THE FOLLOWING READS BACK THE FILE AND SINGLES OUT  75000021
100720     EMPLOYEES WITH NO DEPENDENTS.                                76000021
100730 STEP-6. READ FILE-2 RECORD INTO WORK-RECORD AT END GO TO STEP-8. 77000021
100740 STEP-7. IF NO-OF-DEPENDENTS IS EQUAL TO "0" MOVE "Z" TO          78000021
100750     NO-OF-DEPENDENTS. EXHIBIT NAMED WORK-RECORD. GO TO           79000021
100760     STEP-6.                                                      80000021
100770 STEP-8. CLOSE FILE-2.                                            81000021
100780     STOP RUN.                                                    82000021
//GO.SAMPLE DD    UNIT=2400,LABEL=(,NL)                                 83000021
//GO.SYSOUT DD   SYSOUT=A                                               84000021
MEMBER NAME  IEUESP
EXAM     TITLE 'SAMPLE PROGRAM'                                         00500019
         PRINT DATA                                                     01000019
*                                                                       01500019
*        THIS IS THE MACRO DEFINITION                                   02000019
*                                                                       02500019
         MACRO                                                          03000019
         MOVE  &TO,&FROM                                                03500019
.*                                                                      04000019
.*       DEFINE SETC SYMBOL                                             04500019
.*                                                                      05000019
         LCLC  &TYPE                                                    05500019
.*                                                                      06000019
.*       CHECK NUMBER OF OPERANDS                                       06500019
.*                                                                      07000019
         AIF   (N'&SYSLIST NE 2).ERROR1                                 07500019
.*                                                                      08000019
.*       CHECK TYPE ATTRIBUTES OF OPERANDS                              08500019
.*                                                                      09000019
         AIF   (T'&TO NE T'&FROM).ERROR2                                09500019
         AIF   (T'&TO EQ 'C' OR T'&TO EQ 'G' OR T'&TO EQ 'K').TYPECGK   10000019
         AIF   (T'&TO EQ 'D' OR T'&TO EQ 'E' OR T'&TO EQ 'H').TYPEDEH   10500019
         AIF   (T'&TO EQ 'F').MOVE                                      11000019
         AGO   .ERROR3                                                  11500019
.TYPEDEH ANOP                                                           12000019
.*                                                                      12500019
.*       ASSIGN TYPE ATTRIBUTE TO SETC SYMBOL                           13000019
.*                                                                      13500019
&TYPE    SETC  T'&TO                                                    14000019
.MOVE    ANOP                                                           14500019
*        NEXT TWO STATEMENTS GENERATED FOR MOVE MACRO                   15000019
         L&TYPE   2,&FROM                                               15500019
         ST&TYPE  2,&TO                                                 16000019
         MEXIT                                                          16500019
.*                                                                      17000019
.*       CHECK LENGTH ATTRIBUTES OF OPERANDS                            17500019
.*                                                                      18000019
.TYPECGK AIF   (L'&TO NE L'&FROM OR L'&TO GT 256).ERROR4                18500019
*        NEXT STATEMENT GENERATED FOR MOVE MACRO                        19000019
         MVC   &TO,&FROM                                                19500019
         MEXIT                                                          20000019
.*                                                                      20500019
.*       ERROR MESSAGES FOR INVALID MOVE MACRO INSTRUCTIONS             21000019
.*                                                                      21500019
.ERROR1  MNOTE 1,'IMPROPER NUMBER OF OPERANDS, NO STATEMENTS GENERATED' 22000019
         MEXIT                                                          22500019
.ERROR2  MNOTE 1,'OPERAND TYPES DIFFERENT, NO STATEMENTS GENERATED'     23000019
         MEXIT                                                          23500019
.ERROR3  MNOTE 1,'IMPROPER OPERAND TYPES, NO STATEMENTS GENERATED'      24000019
         MEXIT                                                          24500019
.ERROR4  MNOTE 1,'IMPROPER OPERAND LENGTHS, NO STATEMENTS GENERATED'    25000019
         MEND                                                           25500019
*                                                                       26000019
*        MAIN ROUTINE                                                   26500019
*                                                                       27000019
SAMPLR   CSECT                                                          27500019
BEGIN    SAVE  (14,12),,*                                               28000019
         BALR  R12,0         ESTABLISH ADDRESSABILITY OF PROGRAM        28500019
         USING *,R12         AND TELL THE ASSEMBLER WHAT BASE TO USE    29000019
         ST    13,SAVE13                                                29500019
         LM    R5,R7,=A(LISTAREA,16,LISTEND)  LOAD LIST AREA PARAMETERS 30000019
         USING LIST,R5      REGISTER 5 POINTS TO THE LIST               30500019
MORE     BAL   R14,SEARCH   FIND LIST ENTRY IN TABLE                    31000019
         TM    SWITCH,NONE  CHECK TO SEE IF NAME WAS FOUND              31500019
         BO    NOTTHERE     BRANCH IF NOT                               32000019
         USING TABLE,R1     REGISTER 1 NOW POINTS TO TABLE ENTRY        32500019
         MOVE  TSWITCH,LSWITCH          MOVE FUNCTIONS                  33000019
         MOVE  TNUMBER,LNUMBER               FROM LIST ENTRY            33500019
         MOVE  TADDRESS,LADDRESS                  TO TABLE ENTRY        34000019
LISTLOOP BXLE  R5,R6,MORE   LOOP THROUGH THE LIST                       34500019
         CLC   TESTTABL(240),TABLAREA                                   35000019
         BNE   NOTRIGHT                                                 35500019
         CLC   TESTLIST(96),LISTAREA                                    36000019
         BNE   NOTRIGHT                                                 36500019
         WTO   'ASSEMBLER SAMPLE PROGRAM SUCCESSFUL'                    37000019
EXIT     L     R13,SAVE13                                               37500019
         RETURN (14,12),RC=0                                            38000019
*                                                                       38500019
NOTRIGHT WTO   'ASSEMBLER SAMPLE PROGRAM UNSUCCESSFUL'                  39000019
         B     EXIT                                                     39500019
NOTTHERE OI    LSWITCH,NONE TURN ON SWITCH IN LIST ENTRY                40000019
         B     LISTLOOP     GO BACK AND LOOP                            40500019
SAVE13   DC    F'0'                                                     41000019
SWITCH   DC    X'00'                                                    41500019
NONE     EQU   X'80'                                                    42000019
*                                                                       42500019
*        BINARY SEARCH ROUTINE                                          43000019
*                                                                       43500019
SEARCH   NI    SWITCH,255-NONE TURN OFF NOT FOUND SWITCH                44000019
         LM    R1,R3,=F'128,4,128' LOAD TABLE PARAMETERS                44500019
         LA    R1,TABLAREA-16(R1)  GET ADDRESS OF MIDDLE ENTRY          45000019
LOOP     SRL   R3,1                DIVIDE INCREMENT BY 2                45500019
         CLC   LNAME,TNAME         COMPARE LIST ENTRY WITH TABLE ENTRY  46000019
         BH    HIGHER              BRANCH IF SHOULD BE HIGHER IN TABLE  46500019
         BCR   8,R14               EXIT IF FOUND                        47000019
         SR    R1,R3               OTHERWISE IT IS LOWER IN THE TABLE  X47500019
                                     SO SUBTRACT INCREMENT              48000019
         BCT   R2,LOOP             LOOP 4 TIMES                         48500019
         B     NOTFOUND            ARGUMENT IS NOT IN THE TABLE         49000019
HIGHER   AR    R1,R3               ADD INCREMENT                        49500019
         BCT   R2,LOOP             LOOP 4 TIMES                         50000019
NOTFOUND OI    SWITCH,NONE         TURN ON NOT FOUND SWITCH             50500019
         BR    R14                 EXIT                                 51000019
*                                                                       51500019
*        THIS IS THE TABLE                                              52000019
*                                                                       52500019
         DS    0D                                                       53000019
TABLAREA DC    XL8'0',CL8'ALPHA'                                        53500019
         DC    XL8'0',CL8'BETA'                                         54000019
         DC    XL8'0',CL8'DELTA'                                        54500019
         DC    XL8'0',CL8'EPSILON'                                      55000019
         DC    XL8'0',CL8'ETA'                                          55500019
         DC    XL8'0',CL8'GAMMA'                                        56000019
         DC    XL8'0',CL8'IOTA'                                         56500019
         DC    XL8'0',CL8'KAPPA'                                        57000019
         DC    XL8'0',CL8'LAMBDA'                                       57500019
         DC    XL8'0',CL8'MU'                                           58000019
         DC    XL8'0',CL8'NU'                                           58500019
         DC    XL8'0',CL8'OMICRON'                                      59000019
         DC    XL8'0',CL8'PHI'                                          59500019
         DC    XL8'0',CL8'SIGMA'                                        60000019
         DC    XL8'0',CL8'ZETA'                                         60500019
*                                                                       61000019
*        THIS IS THE LIST                                               61500019
*                                                                       62000019
LISTAREA DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)                       62500019
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)                           63000019
         DC    CL8'THETA',X'02',FL3'45',A(BEGIN)                        63500019
         DC    CL8'TAU',X'00',FL3'0',A(1)                               64000019
         DC    CL8'LIST',X'1F',FL3'465',A(0)                            64500019
LISTEND  DC    CL8'ALPHA',X'00',FL3'1',A(123)                           65000019
*                                                                       65500019
*        THIS IS THE CONTROL TABLE                                      66000019
*                                                                       66500019
         DS    0D                                                       67000019
TESTTABL DC    FL3'1',X'00',A(123),CL8'ALPHA'                           67500019
         DC    XL8'0',CL8'BETA'                                         68000019
         DC    XL8'0',CL8'DELTA'                                        68500019
         DC    XL8'0',CL8'EPSILON'                                      69000019
         DC    XL8'0',CL8'ETA'                                          69500019
         DC    XL8'0',CL8'GAMMA'                                        70000019
         DC    XL8'0',CL8'IOTA'                                         70500019
         DC    XL8'0',CL8'KAPPA'                                        71000019
         DC    FL3'29',X'0A',A(BEGIN),CL8'LAMBDA'                       71500019
         DC    XL8'0',CL8'MU'                                           72000019
         DC    XL8'0',CL8'NU'                                           72500019
         DC    XL8'0',CL8'OMICRON'                                      73000019
         DC    XL8'0',CL8'PHI'                                          73500019
         DC    XL8'0',CL8'SIGMA'                                        74000019
         DC    FL3'5',X'05',A(LOOP),CL8'ZETA'                           74500019
*                                                                       75000019
*        THIS IS THE CONTROL LIST                                       75500019
*                                                                       76000019
TESTLIST DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)                       76500019
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)                           77000019
         DC    CL8'THETA',X'82',FL3'45',A(BEGIN)                        77500019
         DC    CL8'TAU',X'80',FL3'0',A(1)                               78000019
         DC    CL8'LIST',X'9F',FL3'465',A(0)                            78500019
         DC    CL8'ALPHA',X'00',FL3'1',A(123)                           79000019
*                                                                       79500019
*        THESE ARE THE SYMBOLIC REGISTERS                               80000019
*                                                                       80500019
R0       EQU   0                                                        81000019
R1       EQU   1                                                        81500019
R2       EQU   2                                                        82000019
R3       EQU   3                                                        82500019
R5       EQU   5                                                        83000019
R6       EQU   6                                                        83500019
R7       EQU   7                                                        84000019
R12      EQU   12                                                       84500019
R13      EQU   13                                                       85000019
R14      EQU   14                                                       85500019
R15      EQU   15                                                       86000019
*                                                                       86500019
*        THIS IS THE FORMAT DEFINITION OF LIST ENTRYS                   87000019
*                                                                       87500019
LIST     DSECT                                                          88000019
LNAME    DS    CL8                                                      88500019
LSWITCH  DS    C                                                        89000019
LNUMBER  DS    FL3                                                      89500019
LADDRESS DS    F                                                        90000019
*                                                                       90500019
*        THIS IS THE FORMAT DEFINITION OF TABLE ENTRYS                  91000019
*                                                                       91500019
TABLE    DSECT                                                          92000019
TNUMBER  DS    FL3                                                      92500019
TSWITCH  DS    C                                                        93000019
TADDRESS DS    F                                                        93500019
TNAME    DS    CL8                                                      94000019
         END   BEGIN                                                    94500019
MEMBER NAME  IEPSAMP
//EXECUTE  JOB   1234,COMLINKEX,MSGLEVEL=1                              0002
//STEPX    EXEC     COBECLG                                             0004
//COB.SYSIN DD *                                                        0006
000000 IDENTIFICATION DIVISION.                                         0008BP01
000010 PROGRAM-ID. 'TCECBP01'.                                          0010BP01
000020 REMARKS.                                                         0012BP01
000030     MINIMUM ENVIRONMENT REQUIRED TO COMPILE AND EXECUTE          0014BP01
000040         SYSTEM/360 MODEL 30 WITH 32K STORAGE                     0016BP01
000050         CONTROL PROGRAM                                          0018BP01
000060         COBOL COMPILER E                                         0020BP01
000070     SPECIAL OPERATOR INSTRUCTIONS-NONE                           0022BP01
000080     PURPOSE                                                      0024BP01
000090         TEST THE COBOL COMPILERS ABILITY TO READ AND             0026BP01
000100         WRITE FROM TAPE CHECKING PROPER DATA ALIGNMENT           0028BP01
000110         WHERE DATA IS A MIXTURE OF DISPLAY COMPUTATIONAL         0030BP01
000120         AND COMPUTATIONAL-3.                                     0032BP01
000130         FILES ARE HOMOGENEOUS HETROGENEOUS EQUAL AND DIFFERING.  0034BP01
000140     PREREQUISITES                                                0036BP01
000150         ALL PREVIOUS GROUP A AND B TEST CASES OPERATIONAL.       0038BP01
000160     INDIVIDUAL TEST CASES IN THIS PROGRAM                        0040BP01
000170         GROUP B                                                  0042BP01
000180         LEVEL P                                                  0044BP01
000190         TEST CASE 1                                              0046BP01
000200     NUMBER OF SOURCE STATEMENTS                                  0048BP01
000210         575                                                      0050BP01
000220     EXPECTED RESULTS                                             0052BP01
000230         HEADING                                                  0054BP01
000240         END OF TEST                                              0056BP01
000250     ERROR INDICATIONS                                            0058BP01
000260         ********** (PARAGRAPH-NAME)  FAILED                      0060BP01
000270     DATE STARTED TEST WRITING                                    0062BP01
000280         JANUARY 25 1965                                          0064BP01
000290     DATE FINISHED TEST WRITING                                   0066BP01
000300         JANUARY 28 1965                                          0068BP01
000310     DATE DEBUGGED ON CURRENT SYSTEM                              0070BP01
000320                                                                  0072BP01
000330     DATE ADDED TO ATP SYSTEM                                     0074BP01
000340                                                                  0076BP01
000350 AUTHOR.                                                          0078BP01
000360         D50 TEST AND RELEASE PROCESSOR A GROUP                   0080BP01
000370         P J MITCHELL                                             0082BP01
000380 ENVIRONMENT DIVISION.                                            0084BP01
000390 CONFIGURATION SECTION.                                           0086BP01
000400 SOURCE-COMPUTER. IBM-360 E50.                                    0088BP01
000410 OBJECT-COMPUTER. IBM-360 E50.                                    0090BP01
000420 INPUT-OUTPUT SECTION.                                            0092BP01
000430 FILE-CONTROL.                                                    0094BP01
000440     SELECT HOMO-WRITE-FILE1-FIXED ASSIGN TO                      0096BP01
           'SYS004'                                                     0098
000460     UTILITY.                                                     0100BP01
000470     SELECT HOMO-READ-FILE1-FIXED ASSIGN TO                       0102BP01
           'SYS004'                                                     0104
000490     UTILITY.                                                     0106BP01
000500     SELECT HETRO-WRITE-FILE1-EQUAL ASSIGN TO                     0108BP01
           'SYS005'                                                     0110
000520     UTILITY.                                                     0112BP01
000530     SELECT  HETRO-READ-FILE1-EQUAL ASSIGN TO                     0114BP01
           'SYS005'                                                     0116
000550     UTILITY.                                                     0118BP01
000560     SELECT  HETRO-WRITE-FILE1-DIFF ASSIGN TO                     0120BP01
           'SYS006'                                                     0122
000580     UTILITY.                                                     0124BP01
000590     SELECT  HETRO-READ-FILE1-DIFF ASSIGN TO                      0126BP01
           'SYS006'                                                     0128
000610     UTILITY.                                                     0130BP01
000620 DATA DIVISION.                                                   0132BP01
000630 FILE SECTION.                                                    0134BP01
000640 FD  HOMO-READ-FILE1-FIXED                                        0136BP01
000650     RECORD CONTAINS 24 CHARACTERS                                0138BP01
000660     RECORDING MODE IS F                                          0140BP01
000670     LABEL RECORDS ARE OMITTED                                    0142BP01
000680     DATA RECORD IS REC-1.                                        0144BP01
000690 01  REC-1.                                                       0146BP01
000700 02  FORMAT-1-REC-1.                                              0148BP01
000710 03  NUM-1-REC-1 PICTURE 9 DISPLAY.                               0150BP01
000720 03  FILLER PICTURE 9(1).                                         0152BP01
000730 03  NUM-2-REC-1     PICTURE S9(4)                  COMPUTATIONAL.0154BP01
000740 03  NUM-3-REC-1 PICTURE 9 DISPLAY.                               0156BP01
000750 03  FILLER PICTURE 9(3).                                         0158BP01
000760 03  NUM-4-REC-1     PICTURE S9(9)                  COMPUTATIONAL.0160BP01
000770 03  NUM-5-REC-1   PICTURE 999 COMPUTATIONAL-3.                   0162BP01
000780 03  FILLER PICTURE 9(2).                                         0164BP01
000790 03  NUM-6-REC-1     PICTURE S9(18)                 COMPUTATIONAL.0166BP01
000800 02  FORMAT-2-REC-1 REDEFINES FORMAT-1-REC-1.                     0168BP01
000810 03  NUM-7-REC-1   PICTURE 9(15) DISPLAY.                         0170BP01
000820 03  NUM-8-REC-1  REDEFINES NUM-7-REC-1.                          0172BP01
000830 04  NUM-9-REC-1   PICTURE 9(7) DISPLAY.                          0174BP01
000840 04  NUM-10-REC-1   PICTURE 9(8)  DISPLAY.                        0176BP01
000850 04  NUM-11-REC-1 REDEFINES NUM-10-REC-1.                         0178BP01
000860 05  NUM-12-REC-1   PICTURE 9(4) DISPLAY.                         0180BP01
000870 05  NUM-13-REC-1   PICTURE 9(4) DISPLAY.                         0182BP01
000880 03  FILLER PICTURE 9(1).                                         0184BP01
000890 03  NUM-14-REC-1    PICTURE S9(18)                 COMPUTATIONAL.0186BP01
000900 02  FORMAT-3-REC-1   REDEFINES FORMAT-2-REC-1.                   0188BP01
000910 03  NUM-15-REC-1 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0190BP01
000920 FD  HOMO-WRITE-FILE1-FIXED                                       0192BP01
000930     RECORD CONTAINS 24 CHARACTERS                                0194BP01
000940     RECORDING MODE IS F                                          0196BP01
000950     LABEL RECORDS ARE OMITTED                                    0198BP01
000960     DATA RECORD IS REC-2.                                        0200BP01
000970 01  REC-2.                                                       0202BP01
000980 02  FORMAT-1-REC-2.                                              0204BP01
000990 03  NUM-1-REC-2 PICTURE 9 DISPLAY.                               0206BP01
001000 03  NUM-2-REC-2     PICTURE S9(4)                  COMPUTATIONAL.0208BP01
001010 03  NUM-3-REC-2 PICTURE 9 DISPLAY.                               0210BP01
001020 03  NUM-4-REC-2     PICTURE S9(9)                  COMPUTATIONAL.0212BP01
001030 03  NUM-5-REC-2   PICTURE 999 COMPUTATIONAL-3.                   0214BP01
001040 03  NUM-6-REC-2     PICTURE S9(18)                 COMPUTATIONAL.0216BP01
001050 02  FORMAT-2-REC-2 REDEFINES FORMAT-1-REC-2.                     0218BP01
001060 03  NUM-7-REC-2   PICTURE 9(15) DISPLAY.                         0220BP01
001070 03  NUM-8-REC-2  REDEFINES NUM-7-REC-2.                          0222BP01
001080 04  NUM-9-REC-2   PICTURE 9(7) DISPLAY.                          0224BP01
001090 04  NUM-10-REC-2   PICTURE 9(8)  DISPLAY.                        0226BP01
001100 04  NUM-11-REC-2 REDEFINES NUM-10-REC-2.                         0228BP01
001110 05  NUM-12-REC-2   PICTURE 9(4) DISPLAY.                         0230BP01
001120 05  NUM-13-REC-2   PICTURE 9(4) DISPLAY.                         0232BP01
001130 03  NUM-14-REC-2    PICTURE S9(18)                 COMPUTATIONAL.0234BP01
001140 02  FORMAT-3-REC-2   REDEFINES FORMAT-2-REC-2.                   0236BP01
001150 03  NUM-15-REC-2 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0238BP01
001160 FD  HETRO-READ-FILE1-EQUAL                                       0240BP01
001170     RECORD CONTAINS 24 CHARACTERS                                0242BP01
001180     RECORDING MODE IS F                                          0244BP01
001190     LABEL RECORDS ARE OMITTED                                    0246BP01
001200     DATA RECORDS ARE REC-3 REC-5.                                0248BP01
001210 01  REC-3.                                                       0250BP01
001220 02  FORMAT-1-REC-3.                                              0252BP01
001230 03  NUM-1-REC-3 PICTURE 9 DISPLAY.                               0254BP01
001240 03  FILLER PICTURE 9(1).                                         0256BP01
001250 03  NUM-2-REC-3     PICTURE S9(4)                  COMPUTATIONAL.0258BP01
001260 03  NUM-3-REC-3 PICTURE 9 DISPLAY.                               0260BP01
001270 03  FILLER PICTURE 9(3).                                         0262BP01
001280 03  NUM-4-REC-3     PICTURE S9(9)                  COMPUTATIONAL.0264BP01
001290 03  NUM-5-REC-3   PICTURE 999 COMPUTATIONAL-3.                   0266BP01
001300 03  FILLER PICTURE 9(2).                                         0268BP01
001310 03  NUM-6-REC-3     PICTURE S9(18)                 COMPUTATIONAL.0270BP01
001320 02  FORMAT-2-REC-3 REDEFINES FORMAT-1-REC-3.                     0272BP01
001330 03  NUM-7-REC-3   PICTURE 9(15) DISPLAY.                         0274BP01
001340 03  NUM-8-REC-3  REDEFINES NUM-7-REC-3.                          0276BP01
001350 04  NUM-9-REC-3   PICTURE 9(7) DISPLAY.                          0278BP01
001360 04  NUM-10-REC-3   PICTURE 9(8)  DISPLAY.                        0280BP01
001370 04  NUM-11-REC-3 REDEFINES NUM-10-REC-3.                         0282BP01
001380 05  NUM-12-REC-3   PICTURE 9(4) DISPLAY.                         0284BP01
001390 05  NUM-13-REC-3   PICTURE 9(4) DISPLAY.                         0286BP01
001400 03  FILLER PICTURE 9(1).                                         0288BP01
001410 03  NUM-14-REC-3    PICTURE S9(18)                 COMPUTATIONAL.0290BP01
001420 02  FORMAT-3-REC-3   REDEFINES FORMAT-2-REC-3.                   0292BP01
001430 03  NUM-15-REC-3 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0294BP01
001440 01  REC-5.                                                       0296BP01
001450 03  NUM-6-REC-5     PICTURE S9(18)                 COMPUTATIONAL.0298BP01
001460 03  NUM-5-REC-5   PICTURE 999 COMPUTATIONAL-3.                   0300BP01
001470 03  FILLER PICTURE 9(2).                                         0302BP01
001480 03  NUM-4-REC-5     PICTURE S9(9)                  COMPUTATIONAL.0304BP01
001490 03  NUM-3-REC-5 PICTURE 9 DISPLAY.                               0306BP01
001500 03  FILLER PICTURE 9(1).                                         0308BP01
001510 03  NUM-2-REC-5     PICTURE S9(4)                  COMPUTATIONAL.0310BP01
001520 03  NUM-1-REC-5 PICTURE 9(4) DISPLAY.                            0312BP01
001530 FD  HETRO-WRITE-FILE1-EQUAL                                      0314BP01
001540     RECORD CONTAINS 24 CHARACTERS                                0316BP01
001550     RECORDING MODE IS F                                          0318BP01
001560     LABEL RECORDS ARE OMITTED                                    0320BP01
001570     DATA RECORDS ARE REC-4 REC-6.                                0322BP01
001580 01  REC-4.                                                       0324BP01
001590 02  FORMAT-1-REC-4.                                              0326BP01
001600 03  NUM-1-REC-4 PICTURE 9 DISPLAY.                               0328BP01
001610 03  NUM-2-REC-4     PICTURE S9(4)                  COMPUTATIONAL.0330BP01
001620 03  NUM-3-REC-4 PICTURE 9 DISPLAY.                               0332BP01
001630 03  NUM-4-REC-4     PICTURE S9(9)                  COMPUTATIONAL.0334BP01
001640 03  NUM-5-REC-4   PICTURE 999 COMPUTATIONAL-3.                   0336BP01
001650 03  NUM-6-REC-4     PICTURE S9(18)                 COMPUTATIONAL.0338BP01
001660 02  FORMAT-2-REC-4 REDEFINES FORMAT-1-REC-4.                     0340BP01
001670 03  NUM-7-REC-4   PICTURE 9(15) DISPLAY.                         0342BP01
001680 03  NUM-8-REC-4  REDEFINES NUM-7-REC-4.                          0344BP01
001690 04  NUM-9-REC-4   PICTURE 9(7) DISPLAY.                          0346BP01
001700 04  NUM-10-REC-4   PICTURE 9(8)  DISPLAY.                        0348BP01
001710 04  NUM-11-REC-4 REDEFINES NUM-10-REC-4.                         0350BP01
001720 05  NUM-12-REC-4   PICTURE 9(4) DISPLAY.                         0352BP01
001730 05  NUM-13-REC-4   PICTURE 9(4) DISPLAY.                         0354BP01
001740 03  NUM-14-REC-4    PICTURE S9(18)                 COMPUTATIONAL.0356BP01
001750 02  FORMAT-3-REC-4   REDEFINES FORMAT-2-REC-4.                   0358BP01
001760 03  NUM-15-REC-4 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0360BP01
001770 01  REC-6.                                                       0362BP01
001780 03  NUM-6-REC-6     PICTURE S9(18)                 COMPUTATIONAL.0364BP01
001790 03  NUM-5-REC-6   PICTURE 999 COMPUTATIONAL-3.                   0366BP01
001800 03  NUM-4-REC-6     PICTURE S9(9)                  COMPUTATIONAL.0368BP01
001810 03  NUM-3-REC-6 PICTURE 9 DISPLAY.                               0370BP01
001820 03  NUM-2-REC-6     PICTURE S9(4)                  COMPUTATIONAL.0372BP01
001830 03  NUM-1-REC-6 PICTURE 9(4) DISPLAY.                            0374BP01
001840 FD  HETRO-READ-FILE1-DIFF                                        0376BP01
001850     RECORD CONTAINS 21 TO 24 CHARACTERS                          0378BP01
001860     LABEL RECORDS ARE OMITTED                                    0380BP01
001870     DATA RECORDS ARE REC-7 REC-9.                                0382BP01
001880 01  REC-7.                                                       0384BP01
001890 02  FORMAT-1-REC-7.                                              0386BP01
001900 03  NUM-1-REC-7 PICTURE 9 DISPLAY.                               0388BP01
001910 03  FILLER PICTURE 9(1).                                         0390BP01
001920 03  NUM-2-REC-7     PICTURE S9(4)                  COMPUTATIONAL.0392BP01
001930 03  NUM-3-REC-7 PICTURE 9 DISPLAY.                               0394BP01
001940 03  FILLER PICTURE 9(3).                                         0396BP01
001950 03  NUM-4-REC-7     PICTURE S9(9)                  COMPUTATIONAL.0398BP01
001960 03  NUM-5-REC-7   PICTURE 999 COMPUTATIONAL-3.                   0400BP01
001970 03  FILLER PICTURE 9(2).                                         0402BP01
001980 03  NUM-6-REC-7     PICTURE S9(18)                 COMPUTATIONAL.0404BP01
001990 02  FORMAT-2-REC-7 REDEFINES FORMAT-1-REC-7.                     0406BP01
002000 03  NUM-7-REC-7 PICTURE 9(15) DISPLAY.                           0408BP01
002010 03  NUM-8-REC-7  REDEFINES NUM-7-REC-7.                          0410BP01
002020 04  NUM-9-REC-7   PICTURE 9(7) DISPLAY.                          0412BP01
002030 04  NUM-10-REC-7   PICTURE 9(8)  DISPLAY.                        0414BP01
002040 04  NUM-11-REC-7 REDEFINES NUM-10-REC-7.                         0416BP01
002050 05  NUM-12-REC-7   PICTURE 9(4) DISPLAY.                         0418BP01
002060 05  NUM-13-REC-7   PICTURE 9(4) DISPLAY.                         0420BP01
002070 03  FILLER PICTURE 9(1).                                         0422BP01
002080 03  NUM-14-REC-7    PICTURE S9(18)                 COMPUTATIONAL.0424BP01
002090 02  FORMAT-3-REC-7   REDEFINES FORMAT-2-REC-7.                   0426BP01
002100 03  NUM-15-REC-7 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0428BP01
002110 01  REC-9.                                                       0430BP01
002120 03  NUM-6-REC-9     PICTURE S9(18)                 COMPUTATIONAL.0432BP01
002130 03  NUM-5-REC-9   PICTURE 999 COMPUTATIONAL-3.                   0434BP01
002140 03  FILLER PICTURE 9(2).                                         0436BP01
002150 03  NUM-4-REC-9     PICTURE S9(9)                  COMPUTATIONAL.0438BP01
002160 03  NUM-3-REC-9 PICTURE 9 DISPLAY.                               0440BP01
002170 03  FILLER PICTURE 9(1).                                         0442BP01
002180 03  NUM-2-REC-9     PICTURE S9(4)                  COMPUTATIONAL.0444BP01
002190 03  NUM-1-REC-9 PICTURE 9 DISPLAY.                               0446BP01
002200 FD  HETRO-WRITE-FILE1-DIFF                                       0448BP01
002210     RECORD CONTAINS 21 TO 24 CHARACTERS                          0450BP01
002220     LABEL RECORDS ARE OMITTED                                    0452BP01
002230     DATA RECORDS ARE REC-8 REC-10.                               0454BP01
002240 01  REC-8.                                                       0456BP01
002250 02  FORMAT-1-REC-8.                                              0458BP01
002260 03  NUM-1-REC-8 PICTURE 9 DISPLAY.                               0460BP01
002270 03  NUM-2-REC-8     PICTURE S9(4)                  COMPUTATIONAL.0462BP01
002280 03  NUM-3-REC-8 PICTURE 9 DISPLAY.                               0464BP01
002290 03  NUM-4-REC-8     PICTURE S9(9)                  COMPUTATIONAL.0466BP01
002300 03  NUM-5-REC-8   PICTURE 999 COMPUTATIONAL-3.                   0468BP01
002310 03  NUM-6-REC-8     PICTURE S9(18)                 COMPUTATIONAL.0470BP01
002320 02  FORMAT-2-REC-8 REDEFINES FORMAT-1-REC-8.                     0472BP01
002330 03  NUM-7-REC-8   PICTURE 9(15) DISPLAY.                         0474BP01
002340 03  NUM-8-REC-8  REDEFINES NUM-7-REC-8.                          0476BP01
002350 04  NUM-9-REC-8   PICTURE 9(7) DISPLAY.                          0478BP01
002360 04  NUM-10-REC-8   PICTURE 9(8)  DISPLAY.                        0480BP01
002370 04  NUM-11-REC-8 REDEFINES NUM-10-REC-8.                         0482BP01
002380 05  NUM-12-REC-8   PICTURE 9(4) DISPLAY.                         0484BP01
002390 05  NUM-13-REC-8   PICTURE 9(4) DISPLAY.                         0486BP01
002400 03  NUM-14-REC-8    PICTURE S9(18)                 COMPUTATIONAL.0488BP01
002410 02  FORMAT-3-REC-8   REDEFINES FORMAT-2-REC-8.                   0490BP01
002420 03  NUM-15-REC-8 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0492BP01
002430 01  REC-10.                                                      0494BP01
002440 03  NUM-6-REC-10    PICTURE S9(18)                 COMPUTATIONAL.0496BP01
002450 03  NUM-5-REC-10  PICTURE 999 COMPUTATIONAL-3.                   0498BP01
002460 03  NUM-4-REC-10    PICTURE S9(9)                  COMPUTATIONAL.0500BP01
002470 03  NUM-3-REC-10 PICTURE 9 DISPLAY.                              0502BP01
002480 03  NUM-2-REC-10    PICTURE S9(4)                  COMPUTATIONAL.0504BP01
002490 03  NUM-1-REC-10 PICTURE 9 DISPLAY.                              0506BP01
002500 WORKING-STORAGE SECTION.                                         0508BP01
       77 MESSAGE-1 PICTURE X(50) VALUE                                 0510
              'INFORMATION AS EXISTS IN BUFFERS / WORKING-STORAGE'.     0512
       77 MESSAGE-2 PICTURE X(41) VALUE                                 0514
              'RESULTS ARE FOLLOWED BY RESULTS SHOULD BE'.              0516
       77 MESSAGE-3 PICTURE X(48) VALUE                                 0518
              ' 0                 1                   2        '.       0520
       77 MESSAGE-4 PICTURE X(48) VALUE                                 0522
              ' 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4'.       0524
002510 77  SUB-1 PICTURE 99 VALUE 00 DISPLAY.                           0526BP01
002520 77  SUB-2 PICTURE 99 VALUE 00 DISPLAY.                           0528BP01
002530 77  ERROR1   PICTURE X(11) VALUE '********** ' DISPLAY.          0530BP01
       01 PARAGRAPH-NOS.                                                0532
        02 NAME-1 PICTURE X(10) VALUE 'PARAGRAPH-'.                     0534
        02 PARAGRAPH-NO PICTURE 99 VALUE ZERO.                          0536
002540 01  PRIMARY-DATA.                                                0538BP01
002550 02  NUMBER-1 PICTURE 9 VALUE 9 DISPLAY.                          0540BP01
002560 02  FILLER   PICTURE 9 VALUE 0 DISPLAY.                          0542BP01
002570 02  NUMBER-2        PICTURE S9(4) VALUE 9999       COMPUTATIONAL.0544BP01
002580 02  NUMBER-3 PICTURE 9 VALUE 9 DISPLAY.                          0546BP01
002590 02  FILLER   PICTURE 999 VALUE 000 DISPLAY.                      0548BP01
002600 02  NUMBER-4        PICTURE S9(9) VALUE 999999999  COMPUTATIONAL.0550BP01
002610 02  NUMBER-5 PICTURE 999  VALUE 999 COMPUTATIONAL-3.             0552BP01
002620 02  FILLER   PICTURE 99 VALUE 00 DISPLAY.                        0554BP01
002630 02  NUMBER-6        PICTURE S9(18) VALUE 999999999999999999      0556BP01
002640         COMPUTATIONAL.                                           0558BP01
002650 01  PRIMARY-DATA-1.                                              0560BP01
002660 02  NUMBER-7 PICTURE 9(15) VALUE 888888888888888 DISPLAY.        0562BP01
002670 02  FILLER   PICTURE 9 VALUE 0 DISPLAY.                          0564BP01
002680 02  NUMBER-14       PICTURE S9(18) VALUE 888888888888888888      0566BP01
002690         COMPUTATIONAL.                                           0568BP01
002700 01  PRIMARY-DATA-2.                                              0570BP01
002710 02  NUMBER-9  PICTURE 9(7)  VALUE 7777777  DISPLAY.              0572BP01
002720 02  NUMBER-10 PICTURE 9(8)  VALUE 77777777 DISPLAY.              0574BP01
002730 02  FILLER    PICTURE 9     VALUE 0        DISPLAY.              0576BP01
002740 02  NUMBER-14       PICTURE S9(18) VALUE 777777777777777777      0578BP01
002750         COMPUTATIONAL.                                           0580BP01
002760 01  PRIMARY-DATA-3.                                              0582BP01
002770 02  NUMBER-9  PICTURE 9(7)  VALUE 6666666  DISPLAY.              0584BP01
002780 02  NUMBER-12 PICTURE 9(4)  VALUE 6666     DISPLAY.              0586BP01
002790 02  NUMBER-13 PICTURE 9(4)  VALUE 6666     DISPLAY.              0588BP01
002800 02  FILLER    PICTURE 9     VALUE 0        DISPLAY.              0590BP01
002810 02  NUMBER-14       PICTURE S9(18) VALUE 666666666666666666      0592BP01
002820         COMPUTATIONAL.                                           0594BP01
002830 01  PRIMARY-DATA-4.                                              0596BP01
002840 02  NUMBER-06       PICTURE S9(18) VALUE 999999999999999999      0598BP01
002850         COMPUTATIONAL.                                           0600BP01
002860 02  NUMBER-05 PICTURE 999   VALUE 999 COMPUTATIONAL-3.           0602BP01
002870 02  FILLER    PICTURE 99 VALUE 00 DISPLAY.                       0604BP01
002880 02  NUMBER-04       PICTURE S9(9)  VALUE 999999999 COMPUTATIONAL.0606BP01
002890 02  NUMBER-03 PICTURE 9 VALUE 9  DISPLAY.                        0608BP01
002900 02  FILLER    PICTURE 9 VALUE 0  DISPLAY.                        0610BP01
002910 02  NUMBER-02       PICTURE S9(4)  VALUE 9999      COMPUTATIONAL.0612BP01
002920 02  NUMBER-01 PICTURE 9999 VALUE 9999 DISPLAY.                   0614BP01
002930 01  PRIMARY-DATA-5.                                              0616BP01
002940 02  NUMBER-06       PICTURE S9(18) VALUE 888888888888888888      0618BP01
002950         COMPUTATIONAL.                                           0620BP01
002960 02  NUMBER-05 PICTURE 999 VALUE 888 COMPUTATIONAL-3.             0622BP01
002970 02      FILLER    PICTURE 99 VALUE 00 DISPLAY.                   0624BP01
002980 02  NUMBER-04       PICTURE S9(9)  VALUE 888888888 COMPUTATIONAL.0626BP01
002990 02  NUMBER-03 PICTURE 9 VALUE 8 DISPLAY.                         0628BP01
003000 02  FILLER    PICTURE 9 VALUE 0 DISPLAY.                         0630BP01
003010 02  NUMBER-02       PICTURE S9(4)  VALUE 8888      COMPUTATIONAL.0632BP01
003020 02  NUMBER-01 PICTURE 9 VALUE 8 DISPLAY.                         0634BP01
003030 01  TEST-AREAS.                                                  0636BP01
003040 02  TEST-AREA-RD.                                                0638BP01
003050 03  TRD OCCURS 24 TIMES PICTURE X.                               0640BP01
003060 02  TEST-AREA-WT.                                                0642BP01
003070 03  TWT OCCURS 48 TIMES PICTURE X.                               0644BP01
003080 PROCEDURE DIVISION.                                              0646BP01
003090 DISPLAY-HEADER.                                                  0648BP01
003100     DISPLAY '          GROUP B LEVEL P TEST CASE 1'.             0650BP01
003110     DISPLAY ' '.                                                 0652BP01
003120 01-FDSLACKTEST.                                                  0654BP01
003130     PERFORM 31-OPEN-OUT-FILES.                                   0656BP01
       PARAGRAPH-01.                                                    0658
003140     PERFORM 50-SETUP-FORMAT-1-REC-2-4-8 THRU 51-EXIT.            0660BP01
           IF FORMAT-1-REC-2 NOT = PRIMARY-DATA   PERFORM 62-MESSAGE    0662
           MOVE FORMAT-1-REC-2 TO TEST-AREA-RD PERFORM                  0664
           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA    TO        0666
           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0668
           ELSE NEXT SENTENCE.                                          0670
       PARAGRAPH-02.                                                    0672
003170     PERFORM 52-SETUP-FORMAT-2-RD THRU 53-EXIT.                   0674BP01
           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-1 PERFORM 62-MESSAGE    0676
           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0678
           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-1  TO        0680
           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0682
           ELSE NEXT SENTENCE.                                          0684
       PARAGRAPH-03.                                                    0686
           PERFORM 54-SETUP-FORMAT-2-RD2 THRU 55-EXIT.                  0688
           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-2 PERFORM 62-MESSAGE    0690
           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0692
           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-2  TO        0694
           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0696
           ELSE NEXT SENTENCE.                                          0698
       PARAGRAPH-04.                                                    0700
003230     PERFORM 56-SETUP-FORMAT-3-RD3 THRU 57-EXIT.                  0702BP01
           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-3 PERFORM 62-MESSAGE    0704
           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0706
           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-3  TO        0708
           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0710
           ELSE NEXT SENTENCE.                                          0712
003260     PERFORM 33-CLOSE-OUT-FILES.                                  0714BP01
003270 02-FORMAT-1-REC-1-2-CHK.                                         0716BP01
003280     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0718BP01
003290     WRITE REC-2 FROM PRIMARY-DATA.                               0720BP01
003300     CLOSE HOMO-WRITE-FILE1-FIXED.                                0722BP01
003310     OPEN INPUT HOMO-READ-FILE1-FIXED.                            0724BP01
003320     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0726BP01
003340     IF FORMAT-1-REC-1 EQUAL TO PRIMARY-DATA NEXT SENTENCE ELSE   0728BP01
           PERFORM 19-HOMO-FD-ERROR.                                    0730
003330     CLOSE HOMO-READ-FILE1-FIXED.                                 0732BP01
003360 03-FORMAT-2-RD-CHK.                                              0734BP01
003370     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0736BP01
003380     WRITE REC-2 FROM PRIMARY-DATA-1.                             0738BP01
003390     CLOSE HOMO-WRITE-FILE1-FIXED.                                0740BP01
003400     OPEN INPUT HOMO-READ-FILE1-FIXED.                            0742BP01
003410     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0744BP01
003430     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-1 NEXT SENTENCE ELSE 0746BP01
           PERFORM 20-HOMO-FD-ERROR.                                    0748
003420     CLOSE HOMO-READ-FILE1-FIXED.                                 0750BP01
003450 04-FORMAT-2-RD2-CHK.                                             0752BP01
003460     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0754BP01
003470     WRITE REC-2 FROM PRIMARY-DATA-2.                             0756BP01
003480     CLOSE HOMO-WRITE-FILE1-FIXED.                                0758BP01
003490     OPEN INPUT  HOMO-READ-FILE1-FIXED.                           0760BP01
003500     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0762BP01
003520     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-2 NEXT SENTENCE ELSE 0764BP01
           PERFORM 21-HOMO-FD-ERROR.                                    0766
003510     CLOSE HOMO-READ-FILE1-FIXED.                                 0768BP01
003540 05-FORMAT-2-RD3-CHK.                                             0770BP01
003550     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0772BP01
003560     WRITE REC-2 FROM PRIMARY-DATA-3.                             0774BP01
003570     CLOSE HOMO-WRITE-FILE1-FIXED.                                0776BP01
003580     OPEN  INPUT HOMO-READ-FILE1-FIXED.                           0778BP01
003590     READ  HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.  0780BP01
003610     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-3 NEXT SENTENCE ELSE 0782BP01
           PERFORM 22-HOMO-FD-ERROR.                                    0784
003600     CLOSE HOMO-READ-FILE1-FIXED.                                 0786BP01
003630 06-RD-IMP-EQU-REC-CHK.                                           0788BP01
003640     PERFORM 31-OPEN-OUT-FILES.                                   0790BP01
003650     WRITE REC-4 FROM PRIMARY-DATA.                               0792BP01
003660     WRITE REC-4 FROM PRIMARY-DATA-1.                             0794BP01
003670     WRITE REC-4 FROM PRIMARY-DATA-2.                             0796BP01
003680     WRITE REC-4 FROM PRIMARY-DATA-3.                             0798BP01
003690      WRITE REC-6 FROM PRIMARY-DATA-4.                            0800BP01
003700     PERFORM 33-CLOSE-OUT-FILES.                                  0802BP01
003710     PERFORM 31-OPEN-IN-FILES.                                    0804BP01
003720     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0806BP01
           IF FORMAT-1-REC-3 NOT = PRIMARY-DATA                         0808
004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0810
           PERFORM 63-MESSAGE                                           0812
           MOVE FORMAT-1-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0814
           THRU 28-EXIT MOVE PRIMARY-DATA   TO TEST-AREA-RD PERFORM     0816
           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0818
003750     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0820BP01
           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-1                       0822
004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0824
           PERFORM 63-MESSAGE                                           0826
           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0828
           THRU 28-EXIT MOVE PRIMARY-DATA-1 TO TEST-AREA-RD PERFORM     0830
           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0832
003780     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0834BP01
           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-2                       0836
004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0838
           PERFORM 63-MESSAGE                                           0840
           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0842
           THRU 28-EXIT MOVE PRIMARY-DATA-2 TO TEST-AREA-RD PERFORM     0844
           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0846
003810     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0848BP01
           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-3                       0850
004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0852
           PERFORM 63-MESSAGE                                           0854
           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0856
           THRU 28-EXIT MOVE PRIMARY-DATA-3 TO TEST-AREA-RD PERFORM     0858
           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0860
003840     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0862BP01
           IF REC-5          NOT = PRIMARY-DATA-4                       0864
004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0866
           PERFORM 63-MESSAGE                                           0868
           MOVE REC-5          TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0870
           THRU 28-EXIT MOVE PRIMARY-DATA-4 TO TEST-AREA-RD PERFORM     0872
           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0874
003870     READ HETRO-READ-FILE1-EQUAL AT END GO TO 07-CLOSE-HETRO.     0876BP01
003880     GO TO 13-NO-END-FILE.                                        0878BP01
003890 07-CLOSE-HETRO.                                                  0880BP01
003900     PERFORM 33-CLOSE-IN-FILES.                                   0882BP01
003910 08-RD-IMP-DIFF-REC-CHK.                                          0884BP01
003920     PERFORM 31-OPEN-OUT-FILES.                                   0886BP01
003930     PERFORM 50-SETUP-FORMAT-1-REC-2-4-8 THRU 51-EXIT.            0888BP01
003940     WRITE REC-8.                                                 0890BP01
003950     WRITE REC-8 FROM PRIMARY-DATA-1.                             0892BP01
003960     WRITE REC-8 FROM PRIMARY-DATA-2.                             0894BP01
003970     PERFORM 56-SETUP-FORMAT-3-RD3.                               0896BP01
003980     WRITE REC-8.                                                 0898BP01
003990     WRITE REC-10 FROM PRIMARY-DATA-5.                            0900BP01
004000     PERFORM 60-SETUP-REC-10-DIFF.                                0902BP01
004010     WRITE REC-10.                                                0904BP01
004020     PERFORM 33-CLOSE-OUT-FILES.                                  0906BP01
004030     PERFORM 31-OPEN-IN-FILES.                                    0908BP01
004040     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0910BP01
004050     IF FORMAT-1-REC-7 EQUAL TO PRIMARY-DATA NEXT SENTENCE ELSE   0912BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0914
           PERFORM 63-MESSAGE                                           0916
           MOVE FORMAT-1-REC-7 TO TEST-AREA-RD                          0918
           PERFORM 24-HETRO-DIFF-ERROR                                  0920
           MOVE PRIMARY-DATA   TO TEST-AREA-RD                          0922
           PERFORM 24-HETRO-DIFF-ERROR.                                 0924
004070     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0926BP01
004080     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-1 NEXT SENTENCE ELSE 0928BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0930
           PERFORM 63-MESSAGE                                           0932
           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0934
           PERFORM 24-HETRO-DIFF-ERROR                                  0936
           MOVE PRIMARY-DATA-1 TO TEST-AREA-RD                          0938
           PERFORM 24-HETRO-DIFF-ERROR.                                 0940
004100     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0942BP01
004110     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-2 NEXT SENTENCE ELSE 0944BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0946
           PERFORM 63-MESSAGE                                           0948
           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0950
           PERFORM 24-HETRO-DIFF-ERROR                                  0952
           MOVE PRIMARY-DATA-2 TO TEST-AREA-RD                          0954
           PERFORM 24-HETRO-DIFF-ERROR.                                 0956
004130     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0958BP01
004140     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-3 NEXT SENTENCE ELSE 0960BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0962
           PERFORM 63-MESSAGE                                           0964
           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0966
           PERFORM 24-HETRO-DIFF-ERROR                                  0968
           MOVE PRIMARY-DATA-3 TO TEST-AREA-RD                          0970
           PERFORM 24-HETRO-DIFF-ERROR.                                 0972
004160     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0974BP01
004170     IF REC-9 EQUAL TO PRIMARY-DATA-5 NEXT SENTENCE ELSE          0976BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0978
           PERFORM 63-MESSAGE                                           0980
           MOVE REC-9          TO TEST-AREA-RD                          0982
           PERFORM 24-HETRO-DIFF-ERROR                                  0984
           MOVE PRIMARY-DATA-5 TO TEST-AREA-RD                          0986
           PERFORM 24-HETRO-DIFF-ERROR.                                 0988
004190     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0990BP01
004200     IF REC-9 EQUAL TO PRIMARY-DATA-5 NEXT SENTENCE ELSE          0992BP01
           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0994
           PERFORM 63-MESSAGE                                           0996
           MOVE REC-9          TO TEST-AREA-RD                          0998
           PERFORM 24-HETRO-DIFF-ERROR                                  1000
           MOVE PRIMARY-DATA-5 TO TEST-AREA-RD                          1002
           PERFORM 24-HETRO-DIFF-ERROR.                                 1004
004220     READ HETRO-READ-FILE1-DIFF AT END GO TO 09-CLOSE-HETRO.      1006BP01
004230     GO TO 16-NO-END-FILE.                                        1008BP01
004240 09-CLOSE-HETRO.                                                  1010BP01
004250     PERFORM 33-CLOSE-IN-FILES.                                   1012BP01
004260 10-END-PROGRAM.                                                  1014BP01
004270     DISPLAY '          END OF PROGRAM'.                          1016BP01
004280     STOP RUN.                                                    1018BP01
004290 11-EARLY-END-FILE.                                               1020BP01
004300     DISPLAY ERROR1     '02-FORMAT-1-REC-2-CHK FAILED DUE TO EARLY1022BP01
004310     ' END OF FILE'.                                              1024BP01
004320     CLOSE HOMO-READ-FILE1-FIXED.                                 1026BP01
004330     GO TO 10-END-PROGRAM.                                        1028BP01
004340 12-EARLY-END-FILE.                                               1030BP01
004350     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED DUE TO EARLY1032BP01
004360     ' END OF FILE'.                                              1034BP01
004370     PERFORM 33-CLOSE-IN-FILES.                                   1036BP01
004380     GO TO 10-END-PROGRAM.                                        1038BP01
004390 13-NO-END-FILE.                                                  1040BP01
004400     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED DUE TO NO EN1042BP01
004410     'D OF FILE'.                                                 1044BP01
004420     PERFORM 33-CLOSE-IN-FILES.                                   1046BP01
004430     GO TO 10-END-PROGRAM.                                        1048BP01
004440 15-EARLY-END-FILE.                                               1050BP01
004450     DISPLAY ERROR1     '08-RD-IMP-DIFF-REC-CHK FAILED DUE TO EARL1052BP01
004460     'Y END OF FILE'.                                             1054BP01
004470     PERFORM 33-CLOSE-IN-FILES.                                   1056BP01
004480     GO TO 10-END-PROGRAM.                                        1058BP01
004490 16-NO-END-FILE.                                                  1060BP01
004500     DISPLAY ERROR1     '08-RD-IMP-DIFF-REC-CHK FAILED DUE TO NO E1062BP01
004510     'ND OF FILE'.                                                1064BP01
004520     PERFORM 33-CLOSE-IN-FILES.                                   1066BP01
004530     GO TO 10-END-PROGRAM.                                        1068BP01
004660 19-HOMO-FD-ERROR.                                                1070BP01
004670     DISPLAY ERROR1     '02-FORMAT-1-REC-1-2-CHK FAILED'.         1072BP01
           PERFORM 63-MESSAGE.                                          1074
004680     MOVE FORMAT-1-REC-1 TO TEST-AREA-RD.                         1076BP01
                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1078
           MOVE PRIMARY-DATA   TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1080
           THRU 28-EXIT.                                                1082
004710 20-HOMO-FD-ERROR.                                                1084BP01
004720     DISPLAY ERROR1     '03-FORMAT-2-RD-CHK FAILED'.              1086BP01
           PERFORM 63-MESSAGE.                                          1088
004740     MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1090BP01
                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1092
           MOVE PRIMARY-DATA-1 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1094
           THRU 28-EXIT.                                                1096
004760 21-HOMO-FD-ERROR.                                                1098BP01
004770     DISPLAY ERROR1     '04-FORMAT-2-RD2-CHK FAILED'.             1100BP01
           PERFORM 63-MESSAGE.                                          1102
           MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1104
                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1106
           MOVE PRIMARY-DATA-2 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1108
           THRU 28-EXIT.                                                1110
004790 22-HOMO-FD-ERROR.                                                1112BP01
004800     DISPLAY ERROR1     '05-FORMAT-2-RD3-CHK FAILED'.             1114BP01
           PERFORM 63-MESSAGE.                                          1116
           MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1118
                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1120
           MOVE PRIMARY-DATA-3 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1122
           THRU 28-EXIT.                                                1124
005000 24-HETRO-DIFF-ERROR.                                             1126BP01
005040     PERFORM 27-PRINT-ROUTINE.                                    1128BP01
005150 27-PRINT-ROUTINE.                                                1130BP01
005160     MOVE SPACES TO TEST-AREA-WT.                                 1132BP01
005190     MOVE 1 TO SUB-1.                                             1134BP01
005200     MOVE 2 TO SUB-2.                                             1136BP01
005210     PERFORM 29-PRINT-ROUTINE THRU 30-EXIT 24 TIMES.              1138BP01
005220     DISPLAY TEST-AREA-WT.                                        1140BP01
005230 28-EXIT.                                                         1142BP01
005240     EXIT.                                                        1144BP01
005250 29-PRINT-ROUTINE.                                                1146BP01
005260     MOVE TRD (SUB-1) TO TWT (SUB-2).                             1148BP01
005270     ADD 1 SUB-1 GIVING SUB-1.                                    1150BP01
005280     ADD 2 SUB-2 GIVING SUB-2.                                    1152BP01
005290 30-EXIT.                                                         1154BP01
005300     EXIT.                                                        1156BP01
005310 31-OPEN-OUT-FILES.                                               1158BP01
005320     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED HETRO-WRITE-FILE1-EQUAL   1160BP01
005330     HETRO-WRITE-FILE1-DIFF.                                      1162BP01
005340 31A-EXIT.                                                        1164BP01
005350     EXIT.                                                        1166BP01
005360 31-OPEN-IN-FILES.                                                1168BP01
005370     OPEN INPUT HOMO-READ-FILE1-FIXED HETRO-READ-FILE1-EQUAL      1170BP01
005380     HETRO-READ-FILE1-DIFF.                                       1172BP01
005390 32-EXIT.                                                         1174BP01
005400     EXIT.                                                        1176BP01
005410 33-CLOSE-OUT-FILES.                                              1178BP01
005420     CLOSE                                                        1180BP01
005430     HOMO-WRITE-FILE1-FIXED                                       1182BP01
005440     HETRO-WRITE-FILE1-EQUAL                                      1184BP01
005450     HETRO-WRITE-FILE1-DIFF.                                      1186BP01
005460 33A-EXIT.                                                        1188BP01
005470     EXIT.                                                        1190BP01
005480 33-CLOSE-IN-FILES.                                               1192BP01
005490     CLOSE                                                        1194BP01
005500     HOMO-READ-FILE1-FIXED                                        1196BP01
005510     HETRO-READ-FILE1-EQUAL                                       1198BP01
005520     HETRO-READ-FILE1-DIFF.                                       1200BP01
005530 34-EXIT.                                                         1202BP01
005540     EXIT.                                                        1204BP01
005550 50-SETUP-FORMAT-1-REC-2-4-8.                                     1206BP01
005560     MOVE ZERO TO REC-2 REC-4 REC-8.                              1208BP01
005570     MOVE NUMBER-1 TO NUM-1-REC-2 NUM-1-REC-4 NUM-1-REC-8.        1210BP01
005580     MOVE NUMBER-2 TO NUM-2-REC-2 NUM-2-REC-4 NUM-2-REC-8.        1212BP01
005590     MOVE NUMBER-3 TO NUM-3-REC-2 NUM-3-REC-4 NUM-3-REC-8.        1214BP01
005600     MOVE NUMBER-4 TO NUM-4-REC-2 NUM-4-REC-4 NUM-4-REC-8.        1216BP01
005610     MOVE NUMBER-5 TO NUM-5-REC-2 NUM-5-REC-4 NUM-5-REC-8.        1218BP01
005620     MOVE NUMBER-6 TO NUM-6-REC-2 NUM-6-REC-4 NUM-6-REC-8.        1220BP01
005630 51-EXIT.                                                         1222BP01
005640     EXIT.                                                        1224BP01
005650 52-SETUP-FORMAT-2-RD.                                            1226BP01
005660     MOVE ZERO TO REC-2 REC-4 REC-8.                              1228BP01
005670     MOVE NUMBER-7  TO NUM-7-REC-2 NUM-7-REC-4 NUM-7-REC-8.       1230BP01
005680     MOVE NUMBER-14 IN PRIMARY-DATA-1 TO NUM-14-REC-2             1232BP01
005690     NUM-14-REC-4 NUM-14-REC-8.                                   1234BP01
005700 53-EXIT.                                                         1236BP01
005710     EXIT.                                                        1238BP01
005720 54-SETUP-FORMAT-2-RD2.                                           1240BP01
005730     MOVE ZERO TO REC-2 REC-4 REC-8.                              1242BP01
005740     MOVE NUMBER-10 TO NUM-10-REC-2 NUM-10-REC-4 NUM-10-REC-8.    1244BP01
005750     MOVE NUMBER-14 IN PRIMARY-DATA-2 TO                          1246BP01
005760     NUM-14-REC-2 NUM-14-REC-4 NUM-14-REC-8.                      1248BP01
005770     MOVE NUMBER-9 IN PRIMARY-DATA-2 TO                           1250BP01
005780     NUM-9-REC-2 NUM-9-REC-4 NUM-9-REC-8.                         1252BP01
005790 55-EXIT.                                                         1254BP01
005800     EXIT.                                                        1256BP01
005810 56-SETUP-FORMAT-3-RD3.                                           1258BP01
005820     MOVE ZERO TO REC-2 REC-4 REC-8.                              1260BP01
005830     MOVE NUMBER-9 IN PRIMARY-DATA-3 TO                           1262BP01
005840     NUM-9-REC-2 NUM-9-REC-4 NUM-9-REC-8.                         1264BP01
005850     MOVE NUMBER-12 TO NUM-12-REC-2 NUM-12-REC-4 NUM-12-REC-8.    1266BP01
           MOVE NUMBER-13 TO NUM-13-REC-2 NUM-13-REC-4 NUM-13-REC-8.    1268
005880     MOVE NUMBER-14 IN PRIMARY-DATA-3 TO                          1270BP01
005890     NUM-14-REC-2 NUM-14-REC-4 NUM-14-REC-8.                      1272BP01
005900 57-EXIT.                                                         1274BP01
005910     EXIT.                                                        1276BP01
005920 58-SETUP-REC-6-EQU.                                              1278BP01
005930     MOVE ZERO TO REC-6.                                          1280BP01
005940     MOVE NUMBER-06 IN PRIMARY-DATA-4 TO NUM-6-REC-6.             1282BP01
005950     MOVE NUMBER-05 IN PRIMARY-DATA-4 TO NUM-5-REC-6.             1284BP01
005960     MOVE NUMBER-04 IN PRIMARY-DATA-4 TO NUM-4-REC-6.             1286BP01
005970     MOVE NUMBER-03 IN PRIMARY-DATA-4 TO NUM-3-REC-6.             1288BP01
005980     MOVE NUMBER-02 IN PRIMARY-DATA-4 TO NUM-2-REC-6.             1290BP01
005990     MOVE NUMBER-01 IN PRIMARY-DATA-4 TO NUM-1-REC-6.             1292BP01
006000 59-EXIT.                                                         1294BP01
006010     EXIT.                                                        1296BP01
006020 60-SETUP-REC-10-DIFF.                                            1298BP01
006030     MOVE ZERO TO REC-10.                                         1300BP01
006040     MOVE NUMBER-06 IN PRIMARY-DATA-5 TO NUM-6-REC-10.            1302BP01
006050     MOVE NUMBER-05 IN PRIMARY-DATA-5 TO NUM-5-REC-10.            1304BP01
006060     MOVE NUMBER-04 IN PRIMARY-DATA-5 TO NUM-4-REC-10.            1306BP01
006070     MOVE NUMBER-03 IN PRIMARY-DATA-5 TO NUM-3-REC-10.            1308BP01
006080     MOVE NUMBER-02 IN PRIMARY-DATA-5 TO NUM-2-REC-10.            1310BP01
006090     MOVE NUMBER-01 IN PRIMARY-DATA-5 TO NUM-1-REC-10.            1312BP01
006100 61-EXIT.                                                         1314BP01
006110     EXIT.                                                        1316BP01
       62-MESSAGE.                                                      1318
           ADD 1 TO PARAGRAPH-NO. DISPLAY ERROR1 '01-FDSLACKTEST FAILED'1320
           'IN' PARAGRAPH-NOS. PERFORM 63-MESSAGE.                      1322
       63-MESSAGE. DISPLAY MESSAGE-1. DISPLAY MESSAGE-2. DISPLAY        1324
           ' '. DISPLAY MESSAGE-3. DISPLAY MESSAGE-4.                   1326
/*                                                                      1328
//GO.SYSOUT DD SYSOUT=A,DCB=(,BLKSIZE=120,LRECL=120)                    1330
//GO.SYS004    DD  UNIT=183,LABEL=(,NL),VOLUME=SER=BBBBBB               1332
//GO.SYS005    DD  UNIT=182,LABEL=(,NL),VOLUME=SER=AAAAAA               1334
//GO.SYS006    DD  UNIT=282,LABEL=(,NL),VOLUME=SER=CCCCCC               1336
/*
MEMBER NAME  IEYSP
//FORTRANG JOB   MSGLEVEL=1                                             00020000
//FTNGTEST EXEC  FORTGCLG,PARM.FORT='EBCDIC,LIST,MAP'                   00040000
//FORT.SYSIN  DD  *                                                     00060000
C   ********************************************************************00080000
C   *                                                                  *00100000
C   * THIS PROGRAM IS A TEST CASE DESIGNED TO VERIFY THAT THE FORTRAN  *00120000
C   * IV (G) COMPILER HAS BEEN PROPERLY INSTALLED IN YOUR SYSTEM. THE  *00140000
C   * REQUIRED JOB CONTROL LANGUAGE STATEMENTS AND THE DATA CARD       *00160000
C   * ARE INCLUDED AS PART OF THE DECK.                                *00180000
C   *                                                                  *00200000
C   * THE PROGRAM GENERATES A TABLE OF BINOMIAL COEFFICIENTS WHICH IS  *00220000
C   * THEN PRINTED ON THE SYSOUT DEVICE.  ALL DATA EXCEPT THE FIRST    *00240000
C   * LINE OF OUTPUT IS PROGRAM GENERATED.                             *00260000
C   *                                                                  *00280000
C *                                                                    *00300000
C *   THE OUTPUT SHOULD BE ---                                         *00320000
C *                                                                    *00340000
C *      I---------------------------------------------------------I   *00360000
C *      I                           K                             I   *00380000
C * I----I---------------------------------------------------------I   *00400000
C * I  N I 1    2    3    4     5     6     7      8      9     10 I   *00420000
C * I----I---------------------------------------------------------I   *00440000
C * I  1 I  1    0    0    0     0     0     0      0      0     0 I   *00460000
C * I  2 I  2    1    0    0     0     0     0      0      0     0 I   *00480000
C * I  3 I  3    3    1    0     0     0     0      0      0     0 I   *00500000
C * I  4 I  4    6    4    1     0     0     0      0      0     0 I   *00520000
C * I  5 I  5   10   10    5     1     0     0      0      0     0 I   *00540000
C * I  6 I  6   15   20   15     6     1     0      0      0     0 I   *00560000
C * I  7 I  7   21   35   35    21     7     1      0      0     0 I   *00580000
C * I  8 I  8   28   56   70    56    28     8      1      0     0 I   *00600000
C * I  9 I  9   36   84  126   126    84    36      9      1     0 I   *00620000
C * I 10 I 10   45  120  210   252   210   120     45     10     1 I   *00640000
C * I 11 I 11   55  165  330   462   462   330    165     55    11 I   *00660000
C * I 12 I 12   66  220  495   792   924   792    495    220    66 I   *00680000
C * I 13 I 13   78  286  715  1287  1716  1716   1287    715   286 I   *00700000
C * I 14 I 14   91  364 1001  2002  3003  3432   3003   2002  1001 I   *00720000
C * I 15 I 15  105  455 1365  3003  5005  6435   6435   5005  3003 I   *00740000
C * I 16 I 16 120  560 1820  4368  8008 11440  12870  11440   8008 I   *00760000
C * I 17 I 17 136  680 2380  6188 12376 19448  24310  24310  19448 I   *00780000
C * I 18 I 18 153  816 3060  8568 18564 31824  43758  48620  43758 I   *00800000
C * I 19 I 19 171  969 3876 11624 27132 50388  75582  92378  92378 I   *00820000
C * I 20 I 20 190 1140 4845 15504 38760 77520 125970 167960 184756 I   *00840000
C * I----I---------------------------------------------------------I   *00860000
C *                                                                    *00880000
C   ********************************************************************00900000
      DIMENSION NBYK(20,10),HEAD(20)                                    00920000
      DO 10 K=1,10                                                      00940000
      NBYK(1,K) = K                                                     00960000
   10 CONTINUE                                                          00980000
      READ (5,1) HEAD                                                   01000000
      WRITE (6,2) HEAD                                                  01020000
      WRITE (6,3) (NBYK(1,K),K=1,10)                                    01040000
      DO 30 N=1,20                                                      01060000
      DO 20 K=1,10                                                      01080000
      NBYK(N,K) = KBINCO(N,K)                                           01100000
   20 CONTINUE                                                          01120000
      WRITE (6,4) N,(NBYK(N,K),K=1,10)                                  01140000
   30 CONTINUE                                                          01160000
      WRITE (6,5)                                                       01180000
      STOP                                                              01200000
    1 FORMAT (20A4)                                                     01220000
    2 FORMAT ('1   FORTRAN G SAMPLE TEST CASE'///////1X,20A4/////)      01240000
    3 FORMAT (T7,'I',57('-'),'I'/T7,'I',T35,'K',T65,'I'/T2,'I----I',    01260000
     X        57('-'),'I'/T2,'I  N I',I2,I4,2I5,3I6,3I7,'  I'/T2,       01280000
     X        'I----I',57('-'),'I')                                     01300000
    4 FORMAT (' I',I3,' I',I3,I4,2I5,3I6,3I7,' I')                      01320000
    5 FORMAT (' I----I',57('-'),'I')                                    01340000
      END                                                               01360000
C                                                                       01380000
C   ************************************************                    01400000
C   * KBINCO COMPUTES THE BINOMIAL COEFFICIENT,    *                    01420000
C   * C(N,K) = (N*(N-1)***(N-K+1))/(K*(K-1)***1),  *                    01440000
C   * WHERE N AND K ARE THE INTEGER ARGUEMENTS TO  *                    01460000
C   * THE FUNCTION.  INTERMEDIATE CALCULATIONS ARE *                    01480000
C   * PERFORMED IN REAL ARITHMETIC.  IN THE CASE   *                    01500000
C   * WHERE K .GT. N, A VALUE OF ZERO IS RETURNED. *                    01520000
C   * THE VALUES OF N AND K ARE LEFT UNCHANGED.    *                    01540000
C   * THE FUNCTION HAS BEEN CHECKED FOR ALL COM-   *                    01560000
C   * BINATIONS OF N=1,2,...,20 AND K=1,2,...,10.  *                    01580000
C   ************************************************                    01600000
C                                                                       01620000
      FUNCTION KBINCO (N,K)                                             01640000
CHECK FOR TRIVIAL CASES                                                 01660000
      IF (K .GT. N) GO TO 50                                            01680000
      IF (K .EQ. 0  .OR.  N .EQ. K) GO TO 60                            01700000
      IF (K .EQ. 1  .OR.  N-K .EQ. 1) GO TO 70                          01720000
CONVERT TO REAL FOR INT. CALCULATIONS                                   01740000
      P = N                                                             01760000
      Q = K                                                             01780000
CHECK FOR LOWER 'DENOMINATOR'                                           01800000
      IF (P-Q .LT. Q) Q = P-Q                                           01820000
COMPUTE DENOMINATOR                                                     01840000
      MAX = Q                                                           01860000
      BOT = 1.0                                                         01880000
      DO 30 I=2,MAX                                                     01900000
      BOT = I*BOT                                                       01920000
   30 CONTINUE                                                          01940000
COMPUTE NUMERATOR                                                       01960000
      MAX = P                                                           01980000
      MIN = P - Q + 1.0                                                 02000000
      TOP = 1.0                                                         02020000
      DO 40 I=MIN,MAX                                                   02040000
      TOP = I*TOP                                                       02060000
   40 CONTINUE                                                          02080000
CALCULATE AND ROUND BIN. COEFF.                                         02100000
      KBINCO = TOP/BOT + 0.5                                            02120000
      RETURN                                                            02140000
   50 KBINCO = 0                                                        02160000
      RETURN                                                            02180000
   60 KBINCO = 1                                                        02200000
      RETURN                                                            02220000
   70 KBINCO = N                                                        02240000
      RETURN                                                            02260000
      END                                                               02280000
/*                                                                      02290000
//GO.SYSIN DD *                                                         03000000
          BINOMIAL COEFFICIENTS                                         03200000
/*                                                                      03400000
MEMBER NAME  IEMSP2
//IDS  JOB  400565,S.EGGETT,MSGLEVEL=1,CLASS=B,REGION=108K,PRTY=8       01000020
//X EXEC PL1LFCLG,PARM.PL1L='SIZE=45056,S,NL,A,X,LD,ND,SM=(2,72),EB,C', 02000020
//             PARM.LKED='LET'                                          03000020
//PL1L.SYSIN DD *                                                       04000020
 IEMSP2 : PROCEDURE OPTIONS(MAIN);                                      05000020
 /* THIS PROGRAM TRANSFERS CARD IMAGES FROM ONE FILE TO ANOTHER.        06000020
 /* EACH IMAGE HAS A TYPE NUMBER AS FIRST CHARACTER.THE PROGRAM         07000020
 /* RECORDS THE NUMBER OF CARDS THERE ARE OF EACH TYPE. */              08000020
    DECLARE CARDS INPUT ENVIRONMENT(F(80)) ,                            09000020
            BUILD OUTPUT ENVIRONMENT(F(480,80)),                        10000020
          1 CARD,                                                       11000020
          2 TYP CHAR(1),                                                12000020
          2 BODY CHAR(79),                                              13000020
            T FIXED BINARY,                                             14000020
            TYPE(0:9) FIXED(3) STATIC INITIAL((10) 0 );                 15000020
    PUT EDIT('OUTPUT OF PL/1 SAMPLE PROGRAM')(COLUMN(45),A) PAGE;       16000020
    ON ENDFILE(CARDS) GOTO FINISH;                                      17000020
    ON CONVERSION BEGIN;PUT EDIT                                        18000020
 ('THIS CARD IGNORED BECAUSE TYPE IS NOT NUMERIC := ',CARD)(A) SKIP(2); 19000020
    GOTO LOOP; END;                                                     20000020
 LOOP: READ FILE(CARDS) INTO(CARD);                                     21000020
    T=TYP;TYPE(T) = TYPE(T) + 1;                                        22000020
    WRITE FROM(CARD) FILE(BUILD);                                       23000020
    GOTO LOOP;                                                          24000020
 FINISH: PUT DATA(TYPE) SKIP(3);                                        25000020
    PUT EDIT('END OF SAMPLE OUTPUT')(COLUMN(47),A) SKIP(2);             26000020
    END IEMSP2;                                                         27000020
/*                                                                      28000020
//GO.SYSABEND  DD  SYSOUT=A                                             29000020
//GO.BUILD DD UNIT=SYSDA,SPACE=(480,(10,5))                             30000020
//GO.CARDS DD *,DCB=BLKSIZE=80                                          31000020
2    FIRST OF DATA FOR PL1 SAMPLE PROGRAM                               32000020
6                                                                       33000020
6 THE                                                                   34000020
8  CONTENTS                                                             35000020
6   OF                                                                  36000020
2   THESE                                                               37000020
4     CARDS                                                             38000020
7      IMMATERIAL                                                       39000020
2       SINCE                                                           40000020
0       THEY                                                            41000020
6        ARE                                                            42000020
6         ONLY                                                          43000020
6          TRANSMITTED                                                  44000020
6           NOT                                                         45000020
6            PRINTED                                                    46000020
6                                                                       47000020
&       DELIBERATE DUD CARD                                             48000020
6                                                                       49000020
2   LAST OF SOURCE DATA FOR PL1 SAMPLE                                  50000020
/*                                                                      51000020
MEMBER NAME  RPGSMPL
//RPGSMPL JOB MSGLEVEL=1
//     EXEC RPGECLG
//RPG.SYSUT3 DD UNIT=SYSDA
//RPG.SYSUT2 DD UNIT=SYSDA
//RPG.SYSUT1 DD UNIT=SYSDA
//RPG.SYSGO  DD UNIT=SYSDA
//RPG.SYSIN DD *
00000H                                                                    SAMPL1
01010FINPUT   IPE F  80  80            READ40                             SAMPL1
01020FOUTPUT  O   V 132 132     OF     PRINTER                            SAMPL1
01010IINPUT   AA  01   1 Z-                                               SAMPL1
01020I                                        8  29 NAME                  SAMPL1
01030I                                       30  310MONTH                 SAMPL1
01040I                                       32  330DAY                   SAMPL1
01050I                                       34  380INVNO                 SAMPL1
01060I                                       39  430CUSTNOL1              SAMPL1
01070I                                       44  450STATE                 SAMPL1
01080I                                       46  480CITY                  SAMPL1
01090I                                       74  802INVAMT                SAMPL1
01010C   01      INVAMT    ADD  TOTAL     TOTAL   72                      SAMPL1
01020C   01      INVAMT    ADD  GRPTOT    GRPTOT  72                      SAMPL1
01010OOUTPUT  H  201   1P                                                 SAMPL1
01020O       OR        OF                                                 SAMPL1
01030O                                   53 '      A C C O U N T S  R'    SAMPL1
01040O                                   77 ' E C E I V A B L E  R E '    SAMPL1
01050O                                   88 'G I S T E R'                 SAMPL1
01060O        H  1     1P                                                 SAMPL1
01070O       OR        OF                                                 SAMPL1
01080O                                   25 'CUSTOMER'                    SAMPL1
01090O                                   80 'LOCATION       INVOICE'      SAMPL1
01100O                                  109 'INVOICE DATE    INVOICE'     SAMPL1
01110O        H  2     1P                                                 SAMPL1
01120O       OR        OF                                                 SAMPL1
01130O                                   42 'NUMBER         CUSTOMER '    SAMPL1
01140O                                   46 'NAME'                        SAMPL1
01150O                                   79 ' STATE   CITY     NUMBER'    SAMPL1
01160O                                  108 ' MO    DAY     AMOUNT'       SAMPL1
02010O        D  2     01                                                 SAMPL1
02020O                         CUSTNOZ   23                               SAMPL1
02030O                         NAME      53                               SAMPL1
02040O                         STATE Z   59                               SAMPL1
02050O                         CITY  Z   67                               SAMPL1
02060O                         INVNO Z   79                               SAMPL1
02070O                         MONTH Z   90                               SAMPL1
02080O                         DAY   Z   96                               SAMPL1
02090O                         INVAMT   109 '$  ,  0.  '                  SAMPL1
02100O        T  2     L1                                                 SAMPL1
02110O                         GRPTOT B 109 '$  ,  0.  '                  SAMPL1
02120O                                  110 '*'                           SAMPL1
02130O        T  2     LR                                                 SAMPL1
02140O                         TOTAL    109 '$  ,  0.  '                  SAMPL1
02150O                                  111 '**'                          SAMPL1
//GO.OUTPUT DD SYSOUT=A
//GO.INPUT DD *
K      AMALGAMATED CORP      1110116031071233 61                           38925
K      BROWN WHOLESALE       1228123241131530231                           80208
K      BROWN WHOLESALE       1214995881131530231                           26117
K      FARM IMPLEMENTS       1018109011189747 77                            2763
K      BLACK OIL             11 8115091853016 67                           59295
K      BLACK OIL             1223122921853016 67                           95097
K      LEATHER BELT CO       11 8115112071636471                           33563
K      LEATHER BELT CO       1217122632071636471                           12175
K      GENERAL MFG CO        11141161529017 6 63                           44012
K      GENERAL MFG CO        11231167629017 6 63                           72222
K      A-B-C DIST CO          911 96892905425 39                           64540
K      A-B-C DIST CO         1111116052905425 39                           27169
K      A-B-C DIST CO         1214122342905425 39                           55933
 
 
