set console -q -n log=log.txt 

; set debug -n -q debug.txt
; set debug stdout
; set cpu hist=1000

; set mta debug=cmd;detail;exp;pos;data
; set cdr debug=cmd;detail;card;data
; set cdp debug=cmd;detail;card
; set lpr debug=cmd;detail
; set inq debug=cmd;detail;data
; set cpu debug=cmd;detail;exp;data;vma;inst;trace;cdata
; set da  debug=cmd;detail
; set dc  debug=cmd;detail

send delay=50000

echo
echo ***
echo *** IBM TOS/360 R14 (1973) 
echo *** sysgen
echo ***
echo

; Takes 9h04min with cpanel (SET CPU REALTIME)
; Takes 3min without cpanel

set cpu 64k timer prot univ
set mta0 dev=180
set cdr0 dev=00c
set cdp0 dev=00d
set lpr0 dev=00e
set inq0 dev=01f

echo
echo ***
echo *** SYSGEN1: create a new distribution tape (apply bug fix)
echo ***
echo

copy -q distrib/k360n-ma122a.aws tape/k360n-ma122a_copy.aws

att mta0 -q -r -f aws distrib/k360n-ma122a.aws
att mta1 -q -n tape/sys001.tap
att mta2 -q -n tape/sys002.tap
att mta3 -q -n tape/sys003.tap
att mta4 -q -n tape/syslnk.tap
att mta5 -q -n tape/scratch1.tap
att mta6 -q -n tape/scratch2.tap
att mta7 -q -n tape/scratch3.tap

att lpr -q -n printer.txt
att cdp -q -n deck_out.dck


echo
; idlestop=1 to stop if CPU is stopped waiting interrupt from device
set -q idlestop=1
boot mta0

; cpu has IPLed, is waiting from interrupt from 1050 console
; so restore idlestop=0 so SimH will not break again on int wait
set idlestop=0

; Send ESC to console to simulate pressing the attention key
send "\033"
go until "I "

; type on console IPL statements
call type1050 "add x'00c',2501"
call type1050 "add x'00d',2540p"
call type1050 "add x'00e',1403"
call type1050 "add x'01f',1050a"
call type1050 "add x'180',2400t9"
call type1050 "add x'181',2400t9"
call type1050 "add x'182',2400t9"
call type1050 "add x'183',2400t9"
call type1050 "add x'184',2400t9"
call type1050 "set date=09/07/75"
call type1050 "log"
call type1050 "assgn syslog,x'01f'"
call type1050 "assgn sysin,x'00c'"
call type1050 "assgn syspch,x'00d'"
call type1050 "assgn syslst,x'00e'"
call type1050 "assgn sys001,x'181'"
call type1050 "assgn sys002,x'182'"
call type1050 "assgn sys003,x'183'"
call type1050 "assgn syslnk,x'184'"

; attach first job to exec
; should use -e (simulates pressing End of Job button on card read)
; to avoid unit check when reading but no cards left in input hopper

att -q -e cdr jcl/sysgen1_fixdist.jcl
send "\r"
go until "8001D IS IT EOF"
go until "\nI "
send "Y\r"
go until "1C00A  ATTN. 1 83"
go until "\nI "
send "\r"
go until "PAUSE"
go until "\nI "
att mta3 -q -f aws tape/k360n-ma122a_copy.aws
send "\r"
go until "\nI "

det mta0
det mta2
det mta3
copy -q tape/sys002.tap tape/sysres.tap
del  -q tape/k360n-ma122a_copy.aws

echo
echo
echo ***
echo *** SYSGEN2: generate the system 
echo ***
echo

att mta0 -q -r tape/sysres.tap
att mta2 -q tape/sys002.tap
att mta3 -q tape/sys003.tap

set -q idlestop=1
boot mta0
set idlestop=0

; Send ESC to console to simulate pressing the attention key
send "\033"
go until "I "

; type on console IPL statements
call type1050 "add x'00c',2501"
call type1050 "add x'00d',2540p"
call type1050 "add x'00e',1403"
call type1050 "add x'01f',1050a"
call type1050 "add x'180',2400t9"
call type1050 "add x'181',2400t9"
call type1050 "add x'182',2400t9"
call type1050 "add x'183',2400t9"
call type1050 "add x'184',2400t9"
call type1050 "set date=09/07/75"
call type1050 "log"
call type1050 "assgn syslog,x'01f'"
call type1050 "assgn sysin,x'00c'"
call type1050 "assgn syspch,x'00d'"
call type1050 "assgn syslst,x'00e'"
call type1050 "assgn sys001,x'181'"
call type1050 "assgn sys002,x'182'"
call type1050 "assgn sys003,x'183'"
call type1050 "assgn syslnk,x'184'"

; sysgen generation
att -q -e cdr jcl/sysgen2_sysgen.jcl
send "\r"
go until "EOJ SYSGEN"
go until "\nI "
 
det mta0
; no need to detach mta2, it is already detached
copy -q tape/sys002.tap tape/sysres.tap

echo
echo
echo ***
echo *** SYSGEN3: clean up to generate production system
echo ***
echo

att mta0 -q -r tape/sysres.tap
att mta2 -q tape/sys002.tap

set -q idlestop=1
boot mta0
set idlestop=0

; Send ESC to console to simulate pressing the attention key
send "\033"
go until "I "

; type on console IPL statements
call type1050b "set date=09/07/75,clock=00/00/00"

; optional modifications
att -q -e cdr jcl/sysgen3_optmods.jcl
send "\r"
go until "1C00A"
go until "BG I "
 
det mta0
; no need to detach mta2, it is already detached
copy -q tape/sys002.tap tape/tos360.tap

echo
echo
echo ***
echo *** SYSGEN4: demo production system
echo ***
echo

att mta0 -q -r tape/tos360.tap
att mta2 -q tape/sys002.tap

set -q idlestop=1
boot mta0
set idlestop=0

; Send ESC to console to simulate pressing the attention key
send "\033"
go until "I "

; type on console IPL statements
call type1050b "set date=09/07/75,clock=00/00/00"
call type1050b "log"

echo
echo
echo ***
echo *** SYSGEN4A: COBOL
echo ***

att -q -e cdr jcl/demo_cobol.jcl
send "\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4B: RPG
echo ***

att -q -e cdr jcl/demo_rpg.jcl
send "\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4C: PL/I
echo ***

att -q -e cdr jcl/demo_pli.jcl
send "\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4D: FORTRAN IV
echo ***

att -q -e cdr jcl/demo_fort.jcl
send "\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4E: ASSEMBLER
echo ***

att -q -e cdr jcl/demo_asm.jcl
send "\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4F: TAPE UTILITIES
echo ***

att -q -e cdr jcl/demo_util.jcl
send "\r"
go until "8001D IS IT EOF"
go until "BG I "
send after=5000 "Y\r"
go until "1C00A"
go until "BG I "

echo
echo
echo ***
echo *** SYSGEN4G: DSERV
echo ***

att -q -e cdr jcl/dserv.jcl
send "\r"
go until "1C00A"
go until "BG I "

det all

echo
echo
echo ***
echo *** Sysgen finished
if "%runtime%"!="" echo *** generation time: %runtime%
echo ***

del -q tape/sysres.tap
del -q  deck_out.dck

if "%1"=="QUIT" quit
echo
echo *** Press Enter to quit
set env -p " " a
echo

echo
quit
goto end

; simulate typing line in 1050 console
:type1050 
send "%1"
send "\r"
go until "\nI "
return

:type1050b 
send "%1"
send "\r"
go until "BG I "
return



:end

