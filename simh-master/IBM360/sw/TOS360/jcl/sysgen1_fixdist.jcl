LISTIO ALL
// JOB INITAPES
/* write some tape marks on tapes and rewind so 
/* they hay something written in it if they were empty
// MTC   REW,SYS001
// MTC   WTM,SYS001
// MTC   WTM,SYS001
// MTC   REW,SYS001
// MTC   REW,SYS002
// MTC   WTM,SYS002
// MTC   WTM,SYS002
// MTC   REW,SYS002
// MTC   REW,SYS003
// MTC   WTM,SYS003
// MTC   WTM,SYS003
// MTC   REW,SYS003
// MTC   REW,SYSLNK
// MTC   WTM,SYSLNK
// MTC   WTM,SYSLNK
// MTC   REW,SYSLNK
/*
/&
// JOB FIXDISTA ASSEMBLE FIXIT PROGRAM
/* Compile, link, and go will not work because ASSEMBLY will
/* cancel the job on its CLOSE because of the bug in $$BCMT06
// OPTION DECK,NOXREF,NODUMP
ASSGN SYSLNK,UA
// ASSGN SYSPCH,X'184'  WRITE OBJECT MODULE ON TAPE
/* We'll get the object module on tape but no ending tapemark.
// EXEC ASSEMBLY
         TITLE 'PATCH TOS DISTRIBUTION SYSRES'
         PRINT NOGEN
FIXTOS   START X'1800'
R8       EQU   8
R9       EQU   9
R12      EQU   12
         BALR  R12,0
         USING *,R12
         OPEN  OLDTOS,NEWTOS
         BAL   R8,COPYFILE     COPY IPL,SUPVR(F1)
         LA    R9,87           COPY 87 RECORDS IN CIL
         BAL   R8,COPYRECS
         GET   OLDTOS          READ $$BCMT06(REC88)
* THIS TRANSIENT CLOSES TAPE WORK FILES FOR DTFMT.
* IT WRITES A TAPEMARK ON AND REWINDS THE TAPE.
* THE FIRST CCW IN THE CHAIN WAS APPARENTLY INTENDED AS A MODESET,
* MAYBE TO CHANGE THE DENSITY, BUT USES A COMMAND CODE OF X'F3'.
* ACCORDING TO THE 2803 MANUAL THIS IS AN INVALID COMMAND CODE
* AND SHOULD RAISE AN EXCEPTION AS HERCULES DOES.  IT'S HARD TO
* BELIEVE THAT THIS VERSION OF TOS WAS RELEASED WITH THIS BUG AS NO
* ASSEMBLIES OR COMPILES (EXCEPT FORTRAN) WOULD WORK CORRECTLY.
* PERHAPS THE BUG WAS IN THE 2803 WHICH IGNORED AN INVALID CODE INSTEAD
* OF RAISING AN EXCEPTION. SO LET'S INCREASE THE CCW ADDR. IN THE CCB
* BY 8 TO THE NEXT CCW IN THE CHAIN, AND NOT USE THE BAD MODESET CCW.
* VER X'E8'
* REP X'F0'
         CLI   IOAREA+227,X'E8'
         BNE   CANCEL
         MVI   IOAREA+227,X'F0'
         PUT   NEWTOS
         BAL   R8,COPYFILE     COPY REST OF CIL(F2)
         LA    R9,570          COPY 570 RECORDS IN RL
         BAL   R8,COPYRECS
         GET   OLDTOS          READ IJALE3(REC571)
*                             (PHASE($LNKEDTH),CSECT(IJALRD27))
* THE LINKAGE EDITOR WILL CANCEL IF SYSLST IS ASSIGNED TO TAPE.
* AT ONE POINT IT DOES NOT MODIFY ITSELF TO ALLOW FOR TAPE AND STILL
* USES A PRINTER CCW CODE INSTEAD OF CHANGING IT TO A TAPE CCW CODE.
* IT TRIES TO PRINT A BLANK LINE AFTER THE LINK EDIT MAP AND BEFORE
* THE LISTING OF PHASES.  WE CAN PATCH IT TO BRANCH AROUND THE PRINTING
* OF THE BLANK LINE.  IF IMPLEMENTED THE BLANK LINE WILL ALSO NO LONGER
* BE THERE IF WE ARE GOING DIRECTLY TO A PRINTER.  IF YOU WANT TO
* IMPLEMENT THIS FIX REMOVE THE ASTERISK IN COL.1 IN THE NEXT 3 LINES.
*    CLC IOAREA+28(4),=X'4110E6C6'
*    BNE CANCEL
*    MVC IOAREA+28(4),=X'47F0E600'
         PUT   NEWTOS
         LH    R9,=H'7773'     COPY 7773 MORE RECORDS IN RL
         BAL   R8,COPYRECS
         GET   OLDTOS          READ IJVTE210(REC8345)
*                             (PHASE(ATLEFE2),CSECT(IJVTE222))
* AUTOTEST GETS STUCK IN A LOOP WAITING FOR CUE (CONTROL UNIT END)
* WHEN THERE IS UE (UNIT EXCEPTION, TAPE MARK); WE NEVER GET THE CUE.
* THE GENERALIZED I/O ROUTINE IS CODED--
*     DO EXCP,WAIT
*      TM    CCB+4,X'01'  WAS THERE UE (TAPE MARK) IN CSW
*      BCR   8,R8 BZ        NO, CONTINUE NORMALLY
*      TM    CCB+4,X'20'    YES, WAS THERE CUE (WAS IT CONTROL OP?)
*      BCR   1,R8 BO          YES, CONTINUE NORMALLY (FSR,BSR?)
*     AT THIS POINT THERE WAS NO CUE, SO IT MUST HAVE BEEN A READ,
*     THEN DO THE END-OF-FILE ROUTINE EXCEPT IT WAS REALLY THE RESULT
*     OF A BSR OPERATION SO IT GETS CONFUSED.
* IF THERE IS NO TAPEMARK, EVERYTHING IS OK AND CONTINUE NORMALLY
* IF THERE IS A TAPEMARK THIS COULD MEAN AN END-OF-FILE ON A READ OR
* IT COULD MEAN A TAPEMARK WAS SENSED ON A FSR OR BSR CONTROL COMMAND,
* I.E., DID WE GET UE(TM) AS A RESULT OF CONTROL OP (BSR,FSR) OR WAS
* IT A READ?  IT LOOKS LIKE IT'S USING THE CUE TO DETERMINE IF THE UE
* WAS THE RESULT OF A CONTROL OPERATION LIKE BSR AND FSR.
* I CAN'T FIND ANYTHING IN THE PRINCIPLES OF OPERATION OR THE
* 2803 MANUAL THAT SAYS CONTROL UNIT END IS PRESENTED BECAUSE THE
* OPERATION IS FSR OR BSR.  IT SEEMS TO SAY THAT CUE WILL ONLY OCCUR
* AFTER AN OPERATION WAS NOT STARTED BECAUSE THE CONTROL UNIT WAS BUSY
* AND PERHAPS ONLY ON DEVICES SHARING A CONTROL UNIT.
* SO WE NEVER GET THE CUE ON THE BSR AND FSR.
* THERE ARE DIFFERENT WAYS OF CHANGING THE TEST FOR CONTROL OP.
* LET'S CHANGE THE TEST TO INSTEAD LOOK AT THE CCW COMMAND CODE.
* CHECK LAST 2 BITS OF CCW COMMAND CODE, IF BOTH ON IT IS CONTROL OP.
* VER X'9120F4A6' IS IT CUE (CONTROL OP?)
* REP X'9103F4B2' IS IT A CCW CONTROL OPERATION
         CLC   IOAREA+24(4),=X'9120F4A6' TM CCB+4,X'20' CUE IN CSW?
         BNE   CANCEL
         MVC   IOAREA+24(4),=X'9103F4B2' TM CCW,X'03'   CTRL.OP.?
         PUT   NEWTOS
         BAL   R8,COPYFILE     COPY REST OF RL(F3)
         BAL   R8,COPYFILE     COPY SD(F4)
         BAL   R8,COPYFILE     COPY SL-ASSEMBLY(F5)
         BAL   R8,COPYFILE     COPY SL-COBOL(F6)
         BAL   R8,COPYFILE     COPY EOV(F7)
         BAL   R8,COPYFILE     COPY PID RECORDS(F8)
         BAL   R8,COPYFILE     COPY LIB.DIST.(F9)
         BAL   R8,COPYFILE     COPY PID RECORD(F10)
         CNTRL NEWTOS,BSF      BACKUP PAST TAPE MARK        
         CLOSE OLDTOS,NEWTOS   WRITE TWO TAPE MARKS
         EOJ
CANCEL   PDUMP IOAREA,IOAREA+4096
         CANCEL
COPYRECS GET   OLDTOS
         PUT   NEWTOS
         BCT   R9,COPYRECS
         BR    R8
COPYFILE GET   OLDTOS
         PUT   NEWTOS
         B     COPYFILE
FOUNDTM  CNTRL NEWTOS,WTM
         BR    R8
         LTORG
OLDTOS   DTFMT DEVADDR=SYS004,FILABL=NO,EOFADDR=FOUNDTM,               X
               RECFORM=UNDEF,BLKSIZE=4096,RECSIZE=(10),IOAREA1=IOAREA
NEWTOS   DTFMT DEVADDR=SYS005,FILABL=NO,TYPEFLE=OUTPUT,TPMARK=NO,      X
               RECFORM=UNDEF,BLKSIZE=4096,RECSIZE=(10),IOAREA1=IOAREA
IOAREA   DS    CL4096
         END
/*
/&
MTC WTM,X'184'   Since the job abended write the ending tape mark
MTC REW,X'184'      and rewind back to the beginning
ASSGN SYSLNK,X'184'
// JOB FIXDISTB PATCH TOS DISTRIBUTION SYSTEM TAPE
/* At this point we have our object module on tape but the assembler
/* created 81 byte records, i.e. it added the ASA stacker control
/* character to the record.  The INCLUDE logic in Job Control is not
/* device independent in this release and requires 80 byte records.
/* So let's use the provided tape to tape utility to strip off the
/* stacker character.
// ASSGN SYS004,X'184'  INPUT
// ASSGN SYS005,X'183'  OUTPUT
// UPSI 1010   NO LABELS ON IN/OUT
* REPLY CAPITAL 'Y' TO '8001D IS IT EOF' FOR UNLABELED TAPES
// EXEC TPTP
// UTT TF,FF,A=(81,81),B=(80,80),IR,OR
// FS 2,80,1
// END
/*
// UPSI 0000   RESET UPSI
// RESET SYS004
// RESET SYS005
/* Put the object deck on SYSLNK
// ASSGN SYSIPT,X'183'
// OPTION LINK
* PUSH ENTER TO '1C00A  ATTN. 1 83.' MESSAGE
 INCLUDE
/*
// RESET SYSIPT
/* Now LNKEDT the object module
// EXEC LNKEDT
* MOUNT THE ORIGINAL DISTRUBUTION TAPE ON 183, PUSH ENTER
// PAUSE
// ASSGN SYS004,X'183'
// ASSGN SYS005,X'182'
// EXEC
/* X'182' (sys002.tap) now has the corrected distribution tape
/&
