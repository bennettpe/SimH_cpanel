
set console -q -n log=log.txt 
set debug -q -n debug.txt

set -q nodebug


:Run01

; input params
;       %1 -> cards text file to punch and transfer to tape
;
;       %2 %3 %4  -> today date for schedulle/completition date calculation 
;                    in format MM DD YY

; use PERT_program.tap, created by build.ini script 
; uses realistic loading procedure described in programming manual, in 
; section "starting and stopping". The program tape is built using the
; 6-word program block described here

set env nowdate=00 %2 %3 %4

echo
echo ********************************* 
echo Exec PERT Run01-Run10    %1    %2/%3/%4  (MM/DD/YY)
echo 

if "%1"!="" goto ok1
echo
echo ERROR! Missing input file 
!pause
goto end

:ok1
if exist %1 goto ok2
echo
echo ERROR! cannot open input file %1 
!pause
goto end

:ok2
if "%2"!="" goto ok3
echo
echo ERROR! Missing today date
!pause
goto end
 
:ok3


set cpu 2k

att lp1 -q -n printer1.txt
set lp1 echo
att lp2 -q -n printer2.txt
set lp2 echo

switch "Tape address 09" to MT8

switch "Tape address 07" to MT7
switch "Tape address 06" to MT6
switch "Tape address 05" to MT5
switch "Tape address 04" to MT4
switch "Tape address 03" to MT3
switch "Tape address 02" to MT2
switch "Tape address 01" to MT1

switch "Program Check" to stop
switch "Tape end of file" to proceed 
switch "Tape Check" to proceed 

press "carriage A"
press "carriage A"
press "carriage A"
press "carriage A"
press "carriage A"


:Run01

echo
echo Exec PERT Run01 (keypunch) 
echo 

punch pert %1 to deck.dck
ctc card deck.dck to tape mt1.tap

:Run02

att -q mt8 ../build/PERT_program.tap

echo
echo Exec PERT Run02 (conversion) 
echo 

att mt1 -q mt1.tap
att mt2 -q -n mt_SS.tap
att mt3 -q -n mt_PP.tap

switch sw74 to off
switch sw75 to off

; load from program tape problem id 3941 (PERT_Run02 conversion_prog.txt)
call loadrun 3941

press "V to U"
switch "Keyboard Entry" to Reg1
press "Register 1 reset"
press keyboard %nowdate%
switch "Register 1 CRT Address" to 1900
press "Register 1 TO CRT" 
press "U to V"

go

if (U==0001) goto Run03
echo
echo ERROR! Unexpected stop
!pause
goto end

:Run03
press "carriage A"

echo
echo Exec PERT Run03 (sort predecessor transactions) 
echo 

att mt1 -q -n mt_PP_Sort.tap
att mt3 -q mt_PP.tap
att mt4 -q -n mt4.tap
att mt5 -q -n mt5.tap
att mt6 -q -n mt6.tap
att mt7 -q -n mt7.tap

switch sw74 to off
switch sw75 to off

; load from program tape problem id 3942 (PERT_Run03 sort_merge_prog.txt)
call loadrun 3942

; should stop with STOP instruction, IC: 00001 (00 61 0000 0000 0000)
if (U==0001) goto Run04

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run04
press "carriage A"

echo
echo Exec PERT Run04 (sort successor transactions) 
echo 

att mt1 -q -n mt_SS_Sort.tap
att mt2 -q mt_SS.tap
att mt4 -q -n mt4.tap
att mt5 -q -n mt5.tap
att mt6 -q -n mt6.tap
att mt7 -q -n mt7.tap

switch sw74 to transfer
switch sw75 to off

; load from program tape problem id 3942 (PERT_Run03 sort_merge_prog.txt)
call loadrun 3942

; should stop with STOP instruction, IC: 00001 (00 61 0000 0000 0000)
if (U==0001) goto Run05

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run05
press "carriage A"

echo
echo Exec PERT Run05 (merge predecessor and successor transactions) 
echo 

att mt1 -q -n mt_TR.tap
att mt2 -q mt_SS_Sort.tap
att mt3 -q mt_PP_Sort.tap

switch sw74 to off
switch sw75 to transfer

; load from program tape problem id 3942 (PERT_Run03 sort_merge_prog.txt)
call loadrun 3942

; should stop with STOP instruction, IC: 00001 (00 61 0000 0000 0000)
if (U==0001) goto Run06

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run06
press "carriage A"

echo
echo Exec PERT Run06 (update) 
echo 
 
att mt1 -q -n mt_EV.tap
att mt2 -q mt_TR.tap
att mt3 -q ../build/empty_events_mt3.tap

switch sw74 to off

; load from program tape problem id 3951 (PERT_Run06 update_prog.txt)
call loadrun 3951

go

if (U==0001) goto Run07

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run07
press "carriage A"

echo
echo Exec PERT Run07 (sequence) 
echo 

att mt1 -q mt_EV.tap
att mt2 -q -n mt2.tap
att mt3 -q -n mt_EV_Seq.tap
att mt4 -q -n mt4.tap
att mt5 -q -n mt5.tap
att mt6 -q -n mt6.tap

; load from program tape problem id 3952 (PERT_Run07 sequence_prog.txt)
call loadrun 3952

go

if (U==0001) goto Run08

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run08
press "carriage A"

echo
echo Exec PERT Run08 (compute) 
echo 

att mt1 -q -n mt_EV_Comp.tap 
att mt2 -q -n mt2.tap
att mt3 -q mt_EV_Seq.tap
att mt4 -q -n mt4.tap

switch sw74 to off
switch sw75 to transfer
switch sw76 to off


; load from program tape problem id 3953 (PERT_Run08 compute_prog.txt)
call loadrun 3953

go

if (U==0001) goto Run09

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run09
press "carriage A"

echo
echo Exec PERT Run09 (output sort) 
echo 

att mt1 -q -n mt_EV_Sort.tap
att mt3 -q mt_EV_Comp.tap
att mt4 -q -n mt4.tap
att mt5 -q -n mt5.tap
att mt6 -q -n mt6.tap
att mt7 -q -n mt7.tap

; load from program tape problem id 3943 (PERT_Run09 output_sort_prog.txt)
call loadrun 3943

if (U==0001) goto Run10

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run10
press "carriage A"

echo
echo Exec PERT Run10 (output edit) 
echo 

att mt1 -q -n mt1.tap
att mt3 -q mt_EV_Sort.tap

; load from program tape problem id 3944 (PERT_Run09 output_edit_prog.txt)
call loadrun 3944

if (U==0001) goto Run10ok

echo
echo ERROR! Unexpected stop
!pause
goto end

:Run10ok

show cpu speed
echo

; get from tape 1 the output edited records (discard start/end of block words)
ctc tape mt1.tap to card deck.dck dataonly
; offline print cards from ctc in simulated pert form, in given file and also echoed to console
print pert deck.dck to events.txt console


det all
del -q deck.dck
del -q mt_EV.tap
del -q mt_EV_Comp.tap
del -q mt_EV_Seq.tap
del -q mt_EV_Sort.tap
del -q mt_PP.tap
del -q mt_PP_Sort.tap
del -q mt_SS.tap
del -q mt_SS_Sort.tap
del -q mt_TR.tap
del -q mt1.tap
del -q mt2.tap
del -q mt4.tap
del -q mt5.tap
del -q mt6.tap
del -q mt7.tap

echo
echo Exec Ok
echo ****************************** 
echo 

goto end

:loadrun
; load program with identification number %1 from PERT program tape 

press "CRT Reset"
press "Indicator Reset"
switch "Keyboard Entry" to Reg1
press keyboard 09 94 0002 0007 %1
switch "Register 1 CRT Address" to 0001
press "Register 1 TO CRT" 
switch "source of instruction" to V
go
return



:end