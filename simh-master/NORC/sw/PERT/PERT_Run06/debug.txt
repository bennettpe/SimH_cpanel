Debug output to "debug.txt" at Sun Feb 07 21:41:00 2021
IBM NORC simulator V4.0-0 Current        git commit id: d0022e93

*******************************
Exec PERT Run06 (update)


*** load program on computer and prepare prog initial settings

loaded update_prog.txt from 0008 to 1833 address
DBG(46226620)> MT EXP: Tape unit 1: attach file mt_EV.tap
DBG(46226620)> MT EXP: Tape unit 2: attach file sample/mt2.tap
DBG(46226620)> MT EXP: Tape unit 3: attach file sample/mt3.tap
DBG(46226620)> CPU DETAIL: Measured speed: init because start of run
DBG(46226622)> CPU CMD: Exec 0008: 00 60 0000 0000 0000   nop   
DBG(46226625)> CPU CMD: Exec 0009: 00 54 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46226626)> CPU DETAIL: M4: 0020 
DBG(46226627)> CPU DETAIL: M6: 0000 
DBG(46226628)> CPU DETAIL: Clear M8
DBG(46226628)> CPU DETAIL: M8: 0000 
DBG(46226631)> CPU CMD: Exec 0010: 02 94 1031 1031 0000   Read tape 02 to (1031 tape 02 label trasaction file)   
DBG(46226632)> CPU DETAIL: Tape operation on MT2, Addr 1031->1031, Block Number 0000
DBG(46226632)> MT DATA: Tape unit 2: init read
DBG(46226632)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 2
DBG(46226632)> MT DETAIL: Tape record contents: D*0290020202020001C*3905000000000000C*0290020202020001CD
DBG(46226632)> MT EXP: Start Of Block Word: 0290020202020001
DBG(46226632)> MT EXP: Read Tape Block number 0001
DBG(46226632)> MT EXP: Read forward addr 1031 to 1031
DBG(46226632)> MT EXP: Tape to CRT 1031: 3905000000000000 
DBG(46226632)> MT EXP: End Of Block Word: 0290020202020001, data words in block: 1
DBG(46226632)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(46226635)> CPU CMD: Exec 0011: 08 68 0011 0000 1687   if tape check, call 1687 Re-read   
DBG(46226636)> CPU DETAIL: Condition not present 
DBG(46226638)> CPU CMD: Exec 0012: 00 61 0000 0000 0088   Stop because ready to run update. Press start to execute program. goto 0088  
DBG(46226639)> CPU DETAIL: Transfer to T 
DBG(46226639)> CPU DETAIL: Programmed STOP 
DBG(46226639)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(46740505)> CPU DETAIL: End Wait for TAPE animation (75 msec)
DBG(46740505)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(46740505)> CPU DETAIL: Measured speed: 6970653 Ticks per second
DBG(46740505)> CPU DETAIL: Measured speed: Clock at 6.97 MHz
DBG(46740505)> CPU DETAIL: Speed is x7.0 relative to original hardware
DBG(46740505)> CPU DETAIL: Instructions executed: 5
DBG(46740505)> CPU DETAIL: Measured speed: 66 Instructions per second (IPS) achieved
DBG(46740505)> CPU DETAIL: Run elapsed 75 msec

Program STOP, IC: 00012 (00 61 0000 0000 0088)
DBG(46740505)> CPU DETAIL: Measured speed: init because start of run
DBG(46740507)> CPU CMD: Exec 0088: 00 80 1553 0007 0000   wait prt, (1553) -> (0007)                        
DBG(46740508)> CPU DETAIL: Read R 1553: 0000000000000000 
DBG(46740509)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(46740511)> CPU CMD: Exec 0089: 00 80 1031 0001 0000   wait prt, (1031 tape 02 label trasaction file) -> (0001)                   
DBG(46740512)> CPU DETAIL: Read R 1031: 3905000000000000 
DBG(46740513)> CPU DETAIL: Write 0001: 3905000000000000 
DBG(46740515)> CPU CMD: Exec 0090: 00 80 1588 0003 0000   wait prt, (1588 ZERO) -> (0003)           clear   
DBG(46740516)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46740517)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(46740519)> CPU CMD: Exec 0091: 00 80 0000 0004 0000   wait prt, REG1 -> (0004)                  clear   
DBG(46740520)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(46740522)> CPU CMD: Exec 0092: 00 80 0000 0005 0000   wait prt, REG1 -> (0005)                  clear   
DBG(46740523)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(46740525)> CPU CMD: Exec 0093: 00 80 1557 0006 0000   wait prt, (1557 words read from transac block) -> (0006)   
DBG(46740526)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46740527)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(46740529)> CPU CMD: Exec 0094: 00 81 1588 0002 0013   (1588 ZERO) -> (0002), print, transfer 0013    clear   
DBG(46740530)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46740531)> CPU DETAIL: Transfer to T 
DBG(46740531)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(46740531)> LP CMD: Printer LP1: init cycle 
DBG(46740531)> LP CMD:      0001: 3905000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(46740531)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(46740531)> LP CMD: Printer 1: ready (fast mode)
DBG(46740533)> CPU CMD: Exec 0013: 00 40 1553 1578 1578   (1553) + (1578) -> (1578) -> REG1      1578= current tape 02 label: 5905 000 
DBG(46740534)> CPU DETAIL: Read R 1553: 0000000000000000 
DBG(46740535)> CPU DETAIL: Read S 1578: 3905000000000000 
DBG(46740536)> CPU DETAIL: Result: 3905000000000000 
DBG(46740537)> CPU DETAIL: Write 1578: 3905000000000000 
DBG(46740539)> CPU CMD: Exec 0014: 00 70 1031 0000 0016   if REG1 = (1031 tape 02 label trasaction file) transfer to 0016         
DBG(46740540)> CPU DETAIL: Read R 1031: 3905000000000000 
DBG(46740541)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46740542)> CPU DETAIL: Transfer to T 
DBG(46740544)> CPU CMD: Exec 0016: 00 60 1553 0008 0000   (1553) -> (0008)   
DBG(46740545)> CPU DETAIL: Read R 1553: 0000000000000000 
DBG(46740546)> CPU DETAIL: Write 0008: 0000000000000000 
DBG(46740548)> CPU CMD: Exec 0017: 00 40 1578 1583 1578   (1583) + (1578) -> (1578) -> REG1      1578=label for new event file tape 01 
DBG(46740549)> CPU DETAIL: Read R 1578: 3905000000000000 
DBG(46740550)> CPU DETAIL: Read S 1583: 0001000000000000 
DBG(46740551)> CPU DETAIL: Result: 3906000000000000 
DBG(46740552)> CPU DETAIL: Write 1578: 3906000000000000 
DBG(46740554)> CPU CMD: Exec 0018: 01 91 1578 1578 0000   write output (1578) tape 01            save label on tape output 01   
DBG(46740555)> CPU DETAIL: Tape operation on MT1, Addr 1578->1578, Block Number 0000
DBG(46740555)> MT CMD: Tape unit 1: init write
DBG(46740555)> MT EXP: Write from 1578 to 1578 as Block number 0000
DBG(46740555)> MT EXP: Start Of Block: 01 91 1578 1578 0000
DBG(46740555)> MT EXP: CRT 1578 to Tape: 3906000000000000 
DBG(46740555)> MT EXP: End Of Block: 01 91 1578 1578 0000 (1 words)
DBG(46740555)> MT DETAIL: Write block (56 chars, used 1.61 inches, needs 8 msec) to tape 1
DBG(46740555)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(46740558)> CPU CMD: Exec 0019: 08 60 0019 0000 1704   Call 1704 check Write   
DBG(46740559)> CPU DETAIL: Read R 0019: 0860001900001704 
DBG(46740560)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600019 
DBG(46740561)> CPU DETAIL: Transfer to T 
DBG(46740563)> CPU CMD: Exec 1704: 00 40 1723 0000 1716   (1723 MK_TR60) + REG1 -> (1716 EXIT_1716)   Call: Save exit transfer   
DBG(46740564)> CPU DETAIL: Read R 1723: 0059999991400001 
DBG(46740565)> CPU DETAIL: Result: 0060000000000020 
DBG(46740566)> CPU DETAIL: Write 1716: 0060000000000020 
DBG(46740568)> CPU CMD: Exec 1705: 92 60 0000 0000 0000   REG1 shift left 8 (on listing was 1705 91 60 0000 0000 0000   REG1 shift lef 
DBG(46740569)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000002000000000 
DBG(46740572)> CPU CMD: Exec 1706: 01 40 1724 0000 1708   prepare instr to get tape instr to redo     (00 60 caller-1 1721 0000)   
DBG(46740573)> CPU DETAIL: Read R 1724: 0599998172100000 
DBG(46740574)> CPU DETAIL: Result: 0600000172100000 
DBG(46740575)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060000017210000 
DBG(46740576)> CPU DETAIL: Write 1708: 0060000017210000 
DBG(46740578)> CPU CMD: Exec 1707: 00 60 1717 1718 1715      
DBG(46740579)> CPU DETAIL: Read R 1717: 0061172100001727 
DBG(46740580)> CPU DETAIL: Transfer to T 
DBG(46740580)> CPU DETAIL: Write 1718: 0061172100001727 
DBG(46740582)> CPU CMD: Exec 1715: 00 68 0000 0000 1718   if write ok cont to exit from routine. If tape check transfer to 1718 to red 
DBG(46740583)> CPU DETAIL: Condition not present 
DBG(46740585)> CPU CMD: Exec 1716: 00 60 0000 0000 0020   EXIT_1716=Exit from routine =               00 60 0000 caller+1   
DBG(46740586)> CPU DETAIL: Transfer to T 
DBG(46740588)> CPU CMD: Exec 0020: 00 74 0000 0000 0027   if Sw74 in "transfer" goto 0027   
DBG(46740589)> CPU DETAIL: Condition not present 
DBG(46740591)> CPU CMD: Exec 0021: 03 94 1032 1032 0000   Read tape 03 to (1032 tape 03 label active event file)   
DBG(46740592)> CPU DETAIL: Tape operation on MT3, Addr 1032->1032, Block Number 0000
DBG(46740592)> MT DATA: Tape unit 3: init read
DBG(46740592)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 3
DBG(46740592)> MT DETAIL: Tape record contents: D*0390030303030001C*3909000000000000C*0390030303030001CD
DBG(46740592)> MT EXP: Start Of Block Word: 0390030303030001
DBG(46740592)> MT EXP: Read Tape Block number 0001
DBG(46740592)> MT EXP: Read forward addr 1032 to 1032
DBG(46740592)> MT EXP: Tape to CRT 1032: 3909000000000000 
DBG(46740592)> MT EXP: End Of Block Word: 0390030303030001, data words in block: 1
DBG(46740592)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(46740595)> CPU CMD: Exec 0022: 08 68 0022 0000 1687   if tape check Call 1687 Re-read   
DBG(46740596)> CPU DETAIL: Condition not present 
DBG(46740598)> CPU CMD: Exec 0023: 00 40 1579 1552 1579   (1579) + (1552) -> (1579) -> REG1   
DBG(46740599)> CPU DETAIL: Read R 1579: 3909000000000000 
DBG(46740600)> CPU DETAIL: Read S 1552: 0000000000000000 
DBG(46740601)> CPU DETAIL: Result: 3909000000000000 
DBG(46740602)> CPU DETAIL: Write 1579: 3909000000000000 
DBG(46740604)> CPU CMD: Exec 0024: 00 60 0000 0000 0000   nop   
DBG(46740607)> CPU CMD: Exec 0025: 00 70 1579 1032 0027   if (1579)=(1032 tape 03 label active event file) transfer to 0027           
DBG(46740608)> CPU DETAIL: Read R 1579: 3909000000000000 
DBG(46740609)> CPU DETAIL: Read S 1032: 3909000000000000 
DBG(46740610)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46740611)> CPU DETAIL: Transfer to T 
DBG(46740613)> CPU CMD: Exec 0027: 00 80 1032 0001 0000   wait prt, (1032 tape 03 label active event file) -> (0001)   
DBG(46740614)> CPU DETAIL: Read R 1032: 3909000000000000 
DBG(46740615)> CPU DETAIL: Write 0001: 3909000000000000 
DBG(46740617)> CPU CMD: Exec 0028: 00 80 1578 0002 0000   wait prt, (1578) -> (0002)                           output active event fil 
DBG(46740618)> CPU DETAIL: Read R 1578: 3906000000000000 
DBG(46740619)> CPU DETAIL: Write 0002: 3906000000000000 
DBG(46740621)> CPU CMD: Exec 0029: 00 80 1588 0003 0000   wait prt, (1588 ZERO) -> (0003) -> REG1              clear    
DBG(46740622)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46740623)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(46740625)> CPU CMD: Exec 0030: 00 80 0000 0004 0000   wait prt, REG1   -> (0004)                           clear   
DBG(46740626)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(46740628)> CPU CMD: Exec 0031: 00 80 0000 0005 0000   wait prt, REG1   -> (0005)                           clear   
DBG(46740629)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(46740631)> CPU CMD: Exec 0032: 00 80 0000 0006 0000   wait prt, REG1   -> (0006)                           clear    
DBG(46740632)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(46740634)> CPU CMD: Exec 0033: 00 83 0000 0007 0000   REG1 -> (0007), print special                        clear   
DBG(46740635)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(46740635)> LP CMD: Printer LP1: init cycle special
DBG(46740635)> LP CMD:      0001: 3909000000000000  3906000000000000 0000000000000000 0000000000000000
DBG(46740635)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(46740635)> LP CMD: Printer 1: ready (fast mode)
DBG(46740637)> CPU CMD: Exec 0034: 02 94 0629 0000 0001   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46740638)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0001
DBG(46740638)> MT DATA: Tape unit 2: init read
DBG(46740638)> MT DETAIL: Read tape record (794 chars, used 3.06 inches, needs 19 msec) from tape 2
DBG(46740638)> MT DETAIL: Tape record contents: D*0290020102420001C*1011008898989810C*2222228822222222C*33333388333333...
DBG(46740638)> MT EXP: Start Of Block Word: 0290020102420001
DBG(46740638)> MT EXP: Read Tape Block number 0001
DBG(46740638)> MT EXP: Read forward addr 0629 to 0000
DBG(46740638)> MT EXP: Tape to CRT 0629: 1011008898989810 
DBG(46740638)> MT EXP: Tape to CRT 0630: 2222228822222222 
DBG(46740638)> MT EXP: Tape to CRT 0631: 3333338833333333 
DBG(46740638)> MT EXP: Tape to CRT 0632: 5500009898989840 
DBG(46740638)> MT EXP: Tape to CRT 0633: 5555558855555555 
DBG(46740638)> MT EXP: Tape to CRT 0634: 6666668866666666 
DBG(46740638)> MT EXP: Tape to CRT 0635: 7777778877777777 
DBG(46740638)> MT EXP: Tape to CRT 0636: 1996609898989910 
DBG(46740638)> MT EXP: Tape to CRT 0637: 2222222222222222 
DBG(46740638)> MT EXP: Tape to CRT 0638: 3333333333333333 
DBG(46740638)> MT EXP: Tape to CRT 0639: 6600008898989830 
DBG(46740638)> MT EXP: Tape to CRT 0640: 0000000000000000 
DBG(46740638)> MT EXP: Tape to CRT 0641: 0000000000000000 
DBG(46740638)> MT EXP: Tape to CRT 0642: 7777770000008888 
DBG(46740638)> MT EXP: Tape to CRT 0643: 1011009898989820 
DBG(46740638)> MT EXP: Tape to CRT 0644: 2222222222222222 
DBG(46740638)> MT EXP: Tape to CRT 0645: 3333333333333333 
DBG(46740638)> MT EXP: Tape to CRT 0646: 5500009898989840 
DBG(46740638)> MT EXP: Tape to CRT 0647: 5555555555555555 
DBG(46740638)> MT EXP: Tape to CRT 0648: 6666666666666666 
DBG(46740638)> MT EXP: Tape to CRT 0649: 7777777777777777 
DBG(46740638)> MT EXP: Tape to CRT 0650: 1011009898989850 
DBG(46740638)> MT EXP: Tape to CRT 0651: 2222222222222222 
DBG(46740638)> MT EXP: Tape to CRT 0652: 3333333333333333 
DBG(46740638)> MT EXP: Tape to CRT 0653: 6600009898989820 
DBG(46740638)> MT EXP: Tape to CRT 0654: 5555555555555555 
DBG(46740638)> MT EXP: Tape to CRT 0655: 6666666666666666 
DBG(46740638)> MT EXP: Tape to CRT 0656: 7777777777777777 
DBG(46740638)> MT EXP: Tape to CRT 0657: 2011009898989820 
DBG(46740638)> MT EXP: Tape to CRT 0658: 2222222222222222 
DBG(46740638)> MT EXP: Tape to CRT 0659: 3333333333333333 
DBG(46740638)> MT EXP: Tape to CRT 0660: 5500009898989830 
DBG(46740638)> MT EXP: Tape to CRT 0661: 5555505050505050 
DBG(46740638)> MT EXP: Tape to CRT 0662: 6666606060606060 
DBG(46740638)> MT EXP: Tape to CRT 0663: 7777777777777777 
DBG(46740638)> MT EXP: Tape to CRT 0664: 2011009898989850 
DBG(46740638)> MT EXP: Tape to CRT 0665: 2222202020202020 
DBG(46740638)> MT EXP: Tape to CRT 0666: 3333303030303030 
DBG(46740638)> MT EXP: Tape to CRT 0667: 6600009898989820 
DBG(46740638)> MT EXP: Tape to CRT 0668: 5566555550555555 
DBG(46740638)> MT EXP: Tape to CRT 0669: 6655666666666666 
DBG(46740638)> MT EXP: Tape to CRT 0670: 7777777777777777 
DBG(46740638)> MT EXP: End Of Block Word: 0290020102420001, data words in block: 42
DBG(46740638)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (4.67 inches)
DBG(46740641)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46740642)> CPU DETAIL: Condition not present 
DBG(46740644)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46740645)> CPU DETAIL: Condition not present 
DBG(46740647)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46740648)> CPU DETAIL: Write 1554: 0290020102420001 
DBG(46740650)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46740651)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46740652)> CPU DETAIL: Result: 0000000002420000 
DBG(46740653)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000242 
DBG(46740654)> CPU DETAIL: Write 1555: 0000000000000242 
DBG(46740656)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46740657)> CPU DETAIL: Read R 1554: 0290020102420001 
DBG(46740658)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46740659)> CPU DETAIL: Result: 0000020100000000 
DBG(46740660)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46740663)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46740664)> CPU DETAIL: Read R 1555: 0000000000000242 
DBG(46740665)> CPU DETAIL: Result: 0000000000000041 
DBG(46740666)> CPU DETAIL: Write 1556: 0000000000000041 
DBG(46740668)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46740669)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46740670)> CPU DETAIL: Result: 0000000000000042 
DBG(46740671)> CPU DETAIL: Write 1556: 0000000000000042 
DBG(46740673)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46740674)> CPU DETAIL: Read R 0034: 0294062900000001 
DBG(46740675)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46740676)> CPU DETAIL: Result: 0294062900000002 
DBG(46740677)> CPU DETAIL: Write 0034: 0294062900000002 
DBG(46740679)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46740680)> CPU DETAIL: Clear M4
DBG(46740680)> CPU DETAIL: M4: 0000 
DBG(46740681)> CPU DETAIL: M6: 0000 
DBG(46740682)> CPU DETAIL: M8: 0000 
DBG(46740685)> CPU CMD: Exec 0044: 00 60 0000 0000 0000   nop   
DBG(46740688)> CPU CMD: Exec 0045: 00 74 0000 0000 0057   if Sw74 is Transfer, skip read event tape, go to process next transaction   
DBG(46740689)> CPU DETAIL: Condition not present 
DBG(46740691)> CPU CMD: Exec 0046: 03 94 0830 0000 0001   read tape 03 block 0001 at (0830 event block read from tape)   
DBG(46740692)> CPU DETAIL: Tape operation on MT3, Addr 0830->0000, Block Number 0001
DBG(46740692)> MT DATA: Tape unit 3: init read
DBG(46740692)> MT DETAIL: Read tape record (218 chars, used 1.93 inches, needs 11 msec) from tape 3
DBG(46740692)> MT DETAIL: Tape record contents: D*0390030103100001C*0100000000000000C*0000009898989810C*00000000000000...
DBG(46740692)> MT EXP: Start Of Block Word: 0390030103100001
DBG(46740692)> MT EXP: Read Tape Block number 0001
DBG(46740692)> MT EXP: Read forward addr 0830 to 0000
DBG(46740692)> MT EXP: Tape to CRT 0830: 0100000000000000 
DBG(46740692)> MT EXP: Tape to CRT 0831: 0000009898989810 
DBG(46740692)> MT EXP: Tape to CRT 0832: 0000000000000000 
DBG(46740692)> MT EXP: Tape to CRT 0833: 0000000000000000 
DBG(46740692)> MT EXP: Tape to CRT 0834: 0000000000000000 
DBG(46740692)> MT EXP: Tape to CRT 0835: 0000000000000000 
DBG(46740692)> MT EXP: Tape to CRT 0836: 0000000000000100 
DBG(46740692)> MT EXP: Tape to CRT 0837: 0000003398989830 
DBG(46740692)> MT EXP: Tape to CRT 0838: 0000000000033555 
DBG(46740692)> MT EXP: Tape to CRT 0839: 0000000000033666 
DBG(46740692)> MT EXP: End Of Block Word: 0390030103100001, data words in block: 10
DBG(46740692)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.02% of medium (3.54 inches)
DBG(46740695)> CPU CMD: Exec 0047: 08 68 0047 0000 1687   if tape check Call 1687 Re-read   
DBG(46740696)> CPU DETAIL: Condition not present 
DBG(46740698)> CPU CMD: Exec 0048: 00 67 0000 0000 0607   if EOF transfer to 0607   
DBG(46740699)> CPU DETAIL: Condition not present 
DBG(46740701)> CPU CMD: Exec 0049: 00 60 0000 1558 0000   REG1->(1558  tape read start of block word)   
DBG(46740702)> CPU DETAIL: Write 1558: 0390030103100001 
DBG(46740704)> CPU CMD: Exec 0050: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)           
DBG(46740705)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46740706)> CPU DETAIL: Result: 0000000003100000 
DBG(46740707)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000310 
DBG(46740708)> CPU DETAIL: Write 1555: 0000000000000310 
DBG(46740710)> CPU CMD: Exec 0051: 08 42 1558 1586 0000   Mask and shift start of block: aaaa -> (REG1)   
DBG(46740711)> CPU DETAIL: Read R 1558: 0390030103100001 
DBG(46740712)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46740713)> CPU DETAIL: Result: 0000030100000000 
DBG(46740714)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(46740717)> CPU CMD: Exec 0052: 00 41 1555 0000 1559   (1555) - REG2 -> (1559 words in event block)   
DBG(46740718)> CPU DETAIL: Read R 1555: 0000000000000310 
DBG(46740719)> CPU DETAIL: Result: 0000000000000009 
DBG(46740720)> CPU DETAIL: Write 1559: 0000000000000009 
DBG(46740722)> CPU CMD: Exec 0053: 00 40 1587 0000 1559          + 1 -> (1559 words in event block)    
DBG(46740723)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46740724)> CPU DETAIL: Result: 0000000000000010 
DBG(46740725)> CPU DETAIL: Write 1559: 0000000000000010 
DBG(46740727)> CPU CMD: Exec 0054: 00 52 0000 0000 0000   Clear M6 then add R S T to M4 M6 M8                  read first event from b 
DBG(46740728)> CPU DETAIL: M4: 0000 
DBG(46740729)> CPU DETAIL: Clear M6
DBG(46740729)> CPU DETAIL: M6: 0000 
DBG(46740730)> CPU DETAIL: M8: 0000 
DBG(46740733)> CPU CMD: Exec 0055: 00 40 0046 1587 0046   (0046) + 1 -> (0046)                                 incr block num to read  
DBG(46740734)> CPU DETAIL: Read R 0046: 0394083000000001 
DBG(46740735)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46740736)> CPU DETAIL: Result: 0394083000000002 
DBG(46740737)> CPU DETAIL: Write 0046: 0394083000000002 
DBG(46740739)> CPU CMD: Exec 0056: 00 60 0000 0000 0000   nop    
DBG(46740742)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46740743)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46740744)> CPU DETAIL: Read S 1557: 0000000000000000 
DBG(46740745)> CPU DETAIL: Result: 0000000000000042 
DBG(46740748)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46740749)> CPU DETAIL: REG1: 0000000000000042
DBG(46740749)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46740751)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740752)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46740752)> CPU DETAIL: Read R 0629: 1011008898989810 
DBG(46740753)> CPU DETAIL: Write 1033: 1011008898989810 
DBG(46740755)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740756)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46740757)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740758)> CPU DETAIL: Result: 0060462910340000 
DBG(46740759)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46740761)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740762)> CPU DETAIL: M4: 0001 
DBG(46740763)> CPU DETAIL: Transfer to T 
DBG(46740765)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740766)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46740766)> CPU DETAIL: Read R 0630: 2222228822222222 
DBG(46740767)> CPU DETAIL: Write 1034: 2222228822222222 
DBG(46740769)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740770)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46740771)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740772)> CPU DETAIL: Result: 0060462910350000 
DBG(46740773)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46740775)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740776)> CPU DETAIL: M4: 0002 
DBG(46740777)> CPU DETAIL: Transfer to T 
DBG(46740779)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740780)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46740780)> CPU DETAIL: Read R 0631: 3333338833333333 
DBG(46740781)> CPU DETAIL: Write 1035: 3333338833333333 
DBG(46740783)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740784)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46740785)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740786)> CPU DETAIL: Result: 0060462910360000 
DBG(46740787)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46740789)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740790)> CPU DETAIL: M4: 0003 
DBG(46740791)> CPU DETAIL: Transfer to T 
DBG(46740793)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740794)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46740794)> CPU DETAIL: Read R 0632: 5500009898989840 
DBG(46740795)> CPU DETAIL: Write 1036: 5500009898989840 
DBG(46740797)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740798)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46740799)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740800)> CPU DETAIL: Result: 0060462910370000 
DBG(46740801)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46740803)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740804)> CPU DETAIL: M4: 0004 
DBG(46740805)> CPU DETAIL: Transfer to T 
DBG(46740807)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740808)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46740808)> CPU DETAIL: Read R 0633: 5555558855555555 
DBG(46740809)> CPU DETAIL: Write 1037: 5555558855555555 
DBG(46740811)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740812)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46740813)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740814)> CPU DETAIL: Result: 0060462910380000 
DBG(46740815)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46740817)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740818)> CPU DETAIL: M4: 0005 
DBG(46740819)> CPU DETAIL: Transfer to T 
DBG(46740821)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740822)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46740822)> CPU DETAIL: Read R 0634: 6666668866666666 
DBG(46740823)> CPU DETAIL: Write 1038: 6666668866666666 
DBG(46740825)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740826)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46740827)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740828)> CPU DETAIL: Result: 0060462910390000 
DBG(46740829)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46740831)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740832)> CPU DETAIL: M4: 0006 
DBG(46740833)> CPU DETAIL: Transfer to T 
DBG(46740835)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46740836)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46740836)> CPU DETAIL: Read R 0635: 7777778877777777 
DBG(46740837)> CPU DETAIL: Write 1039: 7777778877777777 
DBG(46740839)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46740840)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46740841)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46740842)> CPU DETAIL: Result: 0060462910400000 
DBG(46740843)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46740845)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46740846)> CPU DETAIL: M4: 0007 
DBG(46740849)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46740850)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46740851)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46740854)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46740855)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46740856)> CPU DETAIL: Result: 0458000100140063 
DBG(46740857)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46740859)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46740860)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46740861)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46740863)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46740864)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46740865)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46740866)> CPU DETAIL: Result: 0000000000000007 
DBG(46740867)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46740869)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46740870)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46740871)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46740872)> CPU DETAIL: Result: 5500000000000000 
DBG(46740873)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46740875)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46740876)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46740877)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46740878)> CPU DETAIL: Transfer to T 
DBG(46740880)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46740881)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46740882)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46740884)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46740885)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46740886)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46740888)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46740889)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46740890)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46740892)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46740893)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46740894)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46740896)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46740897)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46740898)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46740900)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46740901)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46740902)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46740904)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46740905)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46740906)> CPU DETAIL: Transfer to T 
DBG(46740906)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46740908)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46740909)> CPU DETAIL: Condition not present 
DBG(46740911)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46740912)> CPU DETAIL: Transfer to T 
DBG(46740914)> CPU CMD: Exec 0095: 00 60 0000 0000 0000   nop   
DBG(46740917)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46740918)> CPU DETAIL: Read R 1559: 0000000000000010 
DBG(46740919)> CPU DETAIL: Read S 1561: 0000000000000000 
DBG(46740920)> CPU DETAIL: Result: 0000000000000010 
DBG(46740923)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46740924)> CPU DETAIL: REG1: 0000000000000010
DBG(46740924)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46740926)> CPU CMD: Exec 0102: 00 60 1588 1563 0000   clear (1563 num of predecessors)        
DBG(46740927)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46740928)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46740930)> CPU CMD: Exec 0103: 00 60 1588 1564 0000   clear (1564 num of successors)   
DBG(46740931)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46740932)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46740934)> CPU CMD: Exec 0104: 00 60 6836 1562 0000   (0836 + M6) -> (1562)                     event rec w7   
DBG(46740935)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46740935)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46740936)> CPU DETAIL: Write 1562: 0000000000000100 
DBG(46740938)> CPU CMD: Exec 0105: 02 42 1562 1582 1563   Mask (1562) with 0..0 1111 Shift 2 Right -> (1563 num of predecesors)   
DBG(46740939)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46740940)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46740941)> CPU DETAIL: Result: 0000000000000100 
DBG(46740942)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46740943)> CPU DETAIL: Write 1563: 0000000000000001 
DBG(46740945)> CPU CMD: Exec 0106: 00 42 1562 1596 1564   Mask (1562) with 0..0 0011 -> (1564 num of successors)   
DBG(46740946)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46740947)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46740948)> CPU DETAIL: Result: 0000000000000000 
DBG(46740949)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46740951)> CPU CMD: Exec 0107: 00 40 1563 1597 0000   (1563 num of predecesors) + (1597 EXP12) -> REG1 convert integer to float   
DBG(46740952)> CPU DETAIL: Read R 1563: 0000000000000001 
DBG(46740953)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46740954)> CPU DETAIL: Result: 1200000000000001 
DBG(46740957)> CPU CMD: Exec 0108: 50 24 1598 0000 0000   Float (1598 Float 3.0) x REG1 -> REG1      x 3.0       
DBG(46740958)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46740959)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46740959)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46740960)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46740961)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46740964)> CPU CMD: Exec 0109: 00 34 1599 0000 1563   Spe Float (1599 = Float 10^-12) x REG1 -> (1563 words used by predecessors)  
DBG(46740965)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46740966)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46740966)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46740967)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46740968)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46740969)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46740971)> CPU CMD: Exec 0110: 00 40 1564 1597 0000   (1564 num of successors) + (1597 EXP12) -> REG1                          
DBG(46740972)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46740973)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46740974)> CPU DETAIL: Result: 1200000000000000 
DBG(46740977)> CPU CMD: Exec 0111: 50 24 1598 0000 0000   Float (1598 = Float 3.0) x REG1 -> REG1             Now (1963) = (1563) x 3  
DBG(46740978)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46740979)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46740979)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46740980)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46740981)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46740984)> CPU CMD: Exec 0112: 00 34 1599 0000 1564   Spe Float (1599 0 Float 10^-12) x REG1 -> (1564 words used by successors)   
DBG(46740985)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46740986)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46740986)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46740987)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46740988)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46740989)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46740991)> CPU CMD: Exec 0113: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)  initial size in words of event rec    
DBG(46740992)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46740993)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46740995)> CPU CMD: Exec 0114: 00 72 1563 1588 0116   if (1563 words used by predecessors)<>0 goto 0116                       
DBG(46740996)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46740997)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46740998)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46740999)> CPU DETAIL: Transfer to T 
DBG(46741001)> CPU CMD: Exec 0116: 00 72 1564 1588 0118   if (1564 words used by successors)<>0 goto 0118    
DBG(46741002)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46741003)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46741004)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46741007)> CPU CMD: Exec 0117: 00 60 1671 0138 0000   (1671) -> (0138)                                     ... set to tr 0138 to 0 
DBG(46741008)> CPU DETAIL: Read R 1671: 0060000000000141 
DBG(46741009)> CPU DETAIL: Write 0138: 0060000000000141 
DBG(46741011)> CPU CMD: Exec 0118: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46741012)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46741013)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46741014)> CPU DETAIL: Result: 0000000000000003 
DBG(46741017)> CPU CMD: Exec 0119: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1 = (7+pred*3+succ*3)    
DBG(46741018)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46741019)> CPU DETAIL: Result: 0000000000000010 
DBG(46741020)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46741022)> CPU CMD: Exec 0120: 00 59 0000 0000 0000   REG1 = 0000 M4 M6 M8    
DBG(46741023)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0007 0000 0000
DBG(46741025)> CPU CMD: Exec 0121: 00 42 0000 1585 1575   Mask REG1 with 0..0 1111 0000 -> (1575 saved M6 value)       
DBG(46741026)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46741027)> CPU DETAIL: Result: 0000000000000000 
DBG(46741028)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(46741030)> CPU CMD: Exec 0122: 00 60 6830 1041 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741031)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46741031)> CPU DETAIL: Read R 0830: 0100000000000000 
DBG(46741032)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46741034)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741035)> CPU DETAIL: Read R 0122: 0060683010410000 
DBG(46741036)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741037)> CPU DETAIL: Result: 0060683010420000 
DBG(46741038)> CPU DETAIL: Write 0122: 0060683010420000 
DBG(46741040)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741041)> CPU DETAIL: M6: 0001 
DBG(46741042)> CPU DETAIL: Transfer to T 
DBG(46741044)> CPU CMD: Exec 0122: 00 60 6830 1042 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741045)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(46741045)> CPU DETAIL: Read R 0831: 0000009898989810 
DBG(46741046)> CPU DETAIL: Write 1042: 0000009898989810 
DBG(46741048)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741049)> CPU DETAIL: Read R 0122: 0060683010420000 
DBG(46741050)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741051)> CPU DETAIL: Result: 0060683010430000 
DBG(46741052)> CPU DETAIL: Write 0122: 0060683010430000 
DBG(46741054)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741055)> CPU DETAIL: M6: 0002 
DBG(46741056)> CPU DETAIL: Transfer to T 
DBG(46741058)> CPU CMD: Exec 0122: 00 60 6830 1043 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741059)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(46741059)> CPU DETAIL: Read R 0832: 0000000000000000 
DBG(46741060)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46741062)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741063)> CPU DETAIL: Read R 0122: 0060683010430000 
DBG(46741064)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741065)> CPU DETAIL: Result: 0060683010440000 
DBG(46741066)> CPU DETAIL: Write 0122: 0060683010440000 
DBG(46741068)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741069)> CPU DETAIL: M6: 0003 
DBG(46741070)> CPU DETAIL: Transfer to T 
DBG(46741072)> CPU CMD: Exec 0122: 00 60 6830 1044 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741073)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(46741073)> CPU DETAIL: Read R 0833: 0000000000000000 
DBG(46741074)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46741076)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741077)> CPU DETAIL: Read R 0122: 0060683010440000 
DBG(46741078)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741079)> CPU DETAIL: Result: 0060683010450000 
DBG(46741080)> CPU DETAIL: Write 0122: 0060683010450000 
DBG(46741082)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741083)> CPU DETAIL: M6: 0004 
DBG(46741084)> CPU DETAIL: Transfer to T 
DBG(46741086)> CPU CMD: Exec 0122: 00 60 6830 1045 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741087)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(46741087)> CPU DETAIL: Read R 0834: 0000000000000000 
DBG(46741088)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46741090)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741091)> CPU DETAIL: Read R 0122: 0060683010450000 
DBG(46741092)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741093)> CPU DETAIL: Result: 0060683010460000 
DBG(46741094)> CPU DETAIL: Write 0122: 0060683010460000 
DBG(46741096)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741097)> CPU DETAIL: M6: 0005 
DBG(46741098)> CPU DETAIL: Transfer to T 
DBG(46741100)> CPU CMD: Exec 0122: 00 60 6830 1046 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741101)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(46741101)> CPU DETAIL: Read R 0835: 0000000000000000 
DBG(46741102)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46741104)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741105)> CPU DETAIL: Read R 0122: 0060683010460000 
DBG(46741106)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741107)> CPU DETAIL: Result: 0060683010470000 
DBG(46741108)> CPU DETAIL: Write 0122: 0060683010470000 
DBG(46741110)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741111)> CPU DETAIL: M6: 0006 
DBG(46741112)> CPU DETAIL: Transfer to T 
DBG(46741114)> CPU CMD: Exec 0122: 00 60 6830 1047 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46741115)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(46741115)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46741116)> CPU DETAIL: Write 1047: 0000000000000100 
DBG(46741118)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46741119)> CPU DETAIL: Read R 0122: 0060683010470000 
DBG(46741120)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741121)> CPU DETAIL: Result: 0060683010480000 
DBG(46741122)> CPU DETAIL: Write 0122: 0060683010480000 
DBG(46741124)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46741125)> CPU DETAIL: M6: 0007 
DBG(46741128)> CPU CMD: Exec 0125: 00 60 1600 0122 0000   (1600) -> (0122)                              restore instr 0122 to its init 
DBG(46741129)> CPU DETAIL: Read R 1600: 0060683010410000 
DBG(46741130)> CPU DETAIL: Write 0122: 0060683010410000 
DBG(46741132)> CPU CMD: Exec 0126: 00 42 0124 1585 0132   Mask (0124) with 0..0 1111 0000 -> (0132)     =0..0 0007 0000 = mask to get  
DBG(46741133)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46741134)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46741135)> CPU DETAIL: Result: 0000000000070000 
DBG(46741136)> CPU DETAIL: Write 0132: 0000000000070000 
DBG(46741138)> CPU CMD: Exec 0127: 96 60 1563 0000 0000   (1563 words used by predecessors) shift left 4 -> REG1                     
DBG(46741139)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46741140)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46741143)> CPU CMD: Exec 0128: 00 40 0132 0000 0000   (0132) + REG1 -> REG1                         new end of loop value = previo 
DBG(46741144)> CPU DETAIL: Read R 0132: 0000000000070000 
DBG(46741145)> CPU DETAIL: Result: 0000000000100000 
DBG(46741148)> CPU CMD: Exec 0129: 00 40 1602 0000 0132   (1602) + REG1 -> (0132)                       set (0132) as 00 58 0001 (0132 
DBG(46741149)> CPU DETAIL: Read R 1602: 0658000100000130 
DBG(46741150)> CPU DETAIL: Result: 0658000100100130 
DBG(46741151)> CPU DETAIL: Write 0132: 0658000100100130 
DBG(46741153)> CPU CMD: Exec 0130: 00 60 6830 1048 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46741154)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(46741154)> CPU DETAIL: Read R 0837: 0000003398989830 
DBG(46741155)> CPU DETAIL: Write 1048: 0000003398989830 
DBG(46741157)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46741158)> CPU DETAIL: Read R 0130: 0060683010480000 
DBG(46741159)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741160)> CPU DETAIL: Result: 0060683010490000 
DBG(46741161)> CPU DETAIL: Write 0130: 0060683010490000 
DBG(46741163)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46741164)> CPU DETAIL: M6: 0008 
DBG(46741165)> CPU DETAIL: Transfer to T 
DBG(46741167)> CPU CMD: Exec 0130: 00 60 6830 1049 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46741168)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(46741168)> CPU DETAIL: Read R 0838: 0000000000033555 
DBG(46741169)> CPU DETAIL: Write 1049: 0000000000033555 
DBG(46741171)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46741172)> CPU DETAIL: Read R 0130: 0060683010490000 
DBG(46741173)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741174)> CPU DETAIL: Result: 0060683010500000 
DBG(46741175)> CPU DETAIL: Write 0130: 0060683010500000 
DBG(46741177)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46741178)> CPU DETAIL: M6: 0009 
DBG(46741179)> CPU DETAIL: Transfer to T 
DBG(46741181)> CPU CMD: Exec 0130: 00 60 6830 1050 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46741182)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(46741182)> CPU DETAIL: Read R 0839: 0000000000033666 
DBG(46741183)> CPU DETAIL: Write 1050: 0000000000033666 
DBG(46741185)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46741186)> CPU DETAIL: Read R 0130: 0060683010500000 
DBG(46741187)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741188)> CPU DETAIL: Result: 0060683010510000 
DBG(46741189)> CPU DETAIL: Write 0130: 0060683010510000 
DBG(46741191)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46741192)> CPU DETAIL: M6: 0010 
DBG(46741195)> CPU CMD: Exec 0133: 00 60 1603 0130 0000   (1603) -> (0130)                              restore line 0130   
DBG(46741196)> CPU DETAIL: Read R 1603: 0060683010480000 
DBG(46741197)> CPU DETAIL: Write 0130: 0060683010480000 
DBG(46741199)> CPU CMD: Exec 0134: 00 42 0132 1585 0140   Mask (0132) with 0..0 1111 0000 -> (0140)     get previous loop end value   
DBG(46741200)> CPU DETAIL: Read R 0132: 0658000100100130 
DBG(46741201)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46741202)> CPU DETAIL: Result: 0000000000100000 
DBG(46741203)> CPU DETAIL: Write 0140: 0000000000100000 
DBG(46741205)> CPU CMD: Exec 0135: 96 60 1564 0000 0000   (1564 words used by successors) -> REG1      
DBG(46741206)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46741207)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(46741210)> CPU CMD: Exec 0136: 00 40 0140 0000 0000   (0140) + REG1 -> REG1                         new end of loop value = previo 
DBG(46741211)> CPU DETAIL: Read R 0140: 0000000000100000 
DBG(46741212)> CPU DETAIL: Result: 0000000000100000 
DBG(46741215)> CPU CMD: Exec 0137: 00 40 1604 0000 0140   (1604) + REG1 -> (0140)                       set end of loop value   
DBG(46741216)> CPU DETAIL: Read R 1604: 0658000100000138 
DBG(46741217)> CPU DETAIL: Result: 0658000100100138 
DBG(46741218)> CPU DETAIL: Write 0140: 0658000100100138 
DBG(46741220)> CPU CMD: Exec 0138: 00 60 0000 0000 0141   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46741221)> CPU DETAIL: Transfer to T 
DBG(46741223)> CPU CMD: Exec 0141: 00 60 1605 0138 0000   (1605) -> (0138)                              reset instr 0138 to its initia 
DBG(46741224)> CPU DETAIL: Read R 1605: 0060683011480000 
DBG(46741225)> CPU DETAIL: Write 0138: 0060683011480000 
DBG(46741227)> CPU CMD: Exec 0142: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46741228)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46741229)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46741232)> CPU CMD: Exec 0143: 00 40 0124 0000 0124   (0124) + REG1   
DBG(46741233)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46741234)> CPU DETAIL: Result: 0658000100170122 
DBG(46741235)> CPU DETAIL: Write 0124: 0658000100170122 
DBG(46741237)> CPU CMD: Exec 0144: 00 40 1561 1565 1561   (1561 words read from event block) += (1565 num of words in event rec)   
DBG(46741238)> CPU DETAIL: Read R 1561: 0000000000000000 
DBG(46741239)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46741240)> CPU DETAIL: Result: 0000000000000010 
DBG(46741241)> CPU DETAIL: Write 1561: 0000000000000010 
DBG(46741243)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46741244)> CPU DETAIL: Read R 1033: 1011008898989810 
DBG(46741245)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46741246)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46741248)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46741249)> CPU DETAIL: Read R 1033: 1011008898989810 
DBG(46741250)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46741251)> CPU DETAIL: Result: 0000008898989810 
DBG(46741252)> CPU DETAIL: Write 1568: 0000008898989810 
DBG(46741254)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46741255)> CPU DETAIL: Read R 1042: 0000009898989810 
DBG(46741256)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46741257)> CPU DETAIL: Result: 0000009898989810 
DBG(46741258)> CPU DETAIL: Write 1567: 0000009898989810 
DBG(46741260)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46741261)> CPU DETAIL: Read R 1568: 0000008898989810 
DBG(46741262)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46741263)> CPU DETAIL: Diff: REG1: 9999999000000000
DBG(46741266)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46741267)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46741268)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46741270)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46741271)> CPU DETAIL: Read R 1568: 0000008898989810 
DBG(46741272)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46741273)> CPU DETAIL: Result: 9999999000000000 
DBG(46741276)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46741277)> CPU DETAIL: REG1: 9999999000000000
DBG(46741277)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(46741279)> CPU CMD: Exec 0411: 00 72 1587 1569 0153   if (1569 card code)<>1 transfer 0153    reject transaction   
DBG(46741280)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46741281)> CPU DETAIL: Read S 1569: 0000000000000001 
DBG(46741282)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46741285)> CPU CMD: Exec 0412: 96 60 1565 0000 0000   (1565 num of words in event rec) -> REG1 shift left 4   
DBG(46741286)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46741287)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46741290)> CPU CMD: Exec 0413: 00 41 0124 0000 0124   reset (0124) to the addr starting event (unread event)   
DBG(46741291)> CPU DETAIL: Read R 0124: 0658000100170122 
DBG(46741292)> CPU DETAIL: Result: 0658000100070122 
DBG(46741293)> CPU DETAIL: Write 0124: 0658000100070122 
DBG(46741295)> CPU CMD: Exec 0414: 00 60 0000 0000 0418   nop if predecessor/goto 0418 if successor   
DBG(46741296)> CPU DETAIL: Transfer to T 
DBG(46741298)> CPU CMD: Exec 0418: 00 41 1561 1565 1561   (1561 words read from event block) -= (1565 num of words in event rec)   
DBG(46741299)> CPU DETAIL: Read R 1561: 0000000000000010 
DBG(46741300)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46741301)> CPU DETAIL: Result: 0000000000000000 
DBG(46741302)> CPU DETAIL: Write 1561: 0000000000000000 
DBG(46741304)> CPU CMD: Exec 0419: 00 60 1665 0095 0000   set to restore M6 value before read next event   
DBG(46741305)> CPU DETAIL: Read R 1665: 0060000000000624 
DBG(46741306)> CPU DETAIL: Write 0095: 0060000000000624 
DBG(46741308)> CPU CMD: Exec 0420: 00 60 0000 0000 0531   goto 0531 to create new event with successor   
DBG(46741309)> CPU DETAIL: Transfer to T 
DBG(46741311)> CPU CMD: Exec 0531: 00 60 1568 1042 0000   (1568 transac rec predecessor code) -> (1042 event rec w2)    
DBG(46741312)> CPU DETAIL: Read R 1568: 0000008898989810 
DBG(46741313)> CPU DETAIL: Write 1042: 0000008898989810 
DBG(46741315)> CPU CMD: Exec 0532: 00 42 1036 1593 0000   mask (1036 transac rec w4) with 550..0    
DBG(46741316)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46741317)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46741318)> CPU DETAIL: Result: 5500000000000000 
DBG(46741321)> CPU CMD: Exec 0533: 00 41 1036 0000 1036   remove 2 leftmost digits from (1036 transac w4)   
DBG(46741322)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46741323)> CPU DETAIL: Result: 0000009898989840 
DBG(46741324)> CPU DETAIL: Write 1036: 0000009898989840 
DBG(46741326)> CPU CMD: Exec 0534: 00 60 1036 1148 0000   (1036 transac rec w4) -> (1148 successor list w1)   
DBG(46741327)> CPU DETAIL: Read R 1036: 0000009898989840 
DBG(46741328)> CPU DETAIL: Write 1148: 0000009898989840 
DBG(46741330)> CPU CMD: Exec 0535: 00 40 0534 1629 0536   incr_s incr_t   
DBG(46741331)> CPU DETAIL: Read R 0534: 0060103611480000 
DBG(46741332)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46741333)> CPU DETAIL: Result: 0060103711490000 
DBG(46741334)> CPU DETAIL: Write 0536: 0060103711490000 
DBG(46741336)> CPU CMD: Exec 0536: 00 60 1037 1149 0000   (transac rec w5) -> (1149 event successors)   
DBG(46741337)> CPU DETAIL: Read R 1037: 5555558855555555 
DBG(46741338)> CPU DETAIL: Write 1149: 5555558855555555 
DBG(46741340)> CPU CMD: Exec 0537: 00 40 0536 1629 0538   incr_s incr_t   
DBG(46741341)> CPU DETAIL: Read R 0536: 0060103711490000 
DBG(46741342)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46741343)> CPU DETAIL: Result: 0060103811500000 
DBG(46741344)> CPU DETAIL: Write 0538: 0060103811500000 
DBG(46741346)> CPU CMD: Exec 0538: 00 60 1038 1150 0000   (transac rec w6) -> (1150 event successors)    
DBG(46741347)> CPU DETAIL: Read R 1038: 6666668866666666 
DBG(46741348)> CPU DETAIL: Write 1150: 6666668866666666 
DBG(46741350)> CPU CMD: Exec 0539: 00 60 1588 1041 0000   clear (1041 event rec w1)   
DBG(46741351)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741352)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46741354)> CPU CMD: Exec 0540: 00 60 1588 1047 0000   clear (1047 event rec w7)   
DBG(46741355)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741356)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46741358)> CPU CMD: Exec 0541: 00 60 1588 1048 0000   clear (1048 predecesor list) make sure no predecessors, to save successor if 
DBG(46741359)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741360)> CPU DETAIL: Write 1048: 0000000000000000 
DBG(46741362)> CPU CMD: Exec 0542: 00 60 0000 0000 1800   setup number of words in created event   
DBG(46741363)> CPU DETAIL: Transfer to T 
DBG(46741365)> CPU CMD: Exec 1800: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1 = 007 0..0   
DBG(46741366)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46741367)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46741370)> CPU CMD: Exec 1801: 00 40 1041 0000 1041   set 007 as msg len in event w1    
DBG(46741371)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46741372)> CPU DETAIL: Result: 0070000000000000 
DBG(46741373)> CPU DETAIL: Write 1041: 0070000000000000 
DBG(46741375)> CPU CMD: Exec 1802: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46741376)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741377)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46741379)> CPU CMD: Exec 1803: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46741380)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741381)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46741383)> CPU CMD: Exec 1804: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)    
DBG(46741384)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46741385)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46741387)> CPU CMD: Exec 1805: 00 70 1048 1588 1812   if no predecessor goto 1812   
DBG(46741388)> CPU DETAIL: Read R 1048: 0000000000000000 
DBG(46741389)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46741390)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46741391)> CPU DETAIL: Transfer to T 
DBG(46741393)> CPU CMD: Exec 1812: 00 70 1148 1588 1819   if no successors goto 1819   
DBG(46741394)> CPU DETAIL: Read R 1148: 0000009898989840 
DBG(46741395)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46741396)> CPU DETAIL: Diff: REG1: 0000009898989840
DBG(46741399)> CPU CMD: Exec 1813: 00 60 1587 0000 0000   1 -> REG1   
DBG(46741400)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46741403)> CPU CMD: Exec 1814: 00 40 1047 0000 1047   set (1047 event rec w7) with BB=1 (one successor)   
DBG(46741404)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46741405)> CPU DETAIL: Result: 0000000000000001 
DBG(46741406)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46741408)> CPU CMD: Exec 1815: 00 40 1623 1565 1565   (1565 num of words in event rec) += 3   
DBG(46741409)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46741410)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46741411)> CPU DETAIL: Result: 0000000000000010 
DBG(46741412)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46741414)> CPU CMD: Exec 1816: 87 60 1623 0000 0000   3 Shift Left 13 -> REG1 = 003 0..0   
DBG(46741415)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46741416)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46741419)> CPU CMD: Exec 1817: 00 40 1041 0000 1041   add to msg len in event w1    
DBG(46741420)> CPU DETAIL: Read R 1041: 0070000000000000 
DBG(46741421)> CPU DETAIL: Result: 0100000000000000 
DBG(46741422)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46741424)> CPU CMD: Exec 1818: 00 60 1623 1564 0000   3 -> (1564 words used by predecessors)    
DBG(46741425)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46741426)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46741428)> CPU CMD: Exec 1819: 00 60 0000 0000 0057   go to process next transaction   
DBG(46741429)> CPU DETAIL: Transfer to T 
DBG(46741431)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46741432)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46741433)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46741434)> CPU DETAIL: Result: 0000000000000035 
DBG(46741437)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46741438)> CPU DETAIL: REG1: 0000000000000035
DBG(46741438)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46741440)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741441)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(46741441)> CPU DETAIL: Read R 0636: 1996609898989910 
DBG(46741442)> CPU DETAIL: Write 1033: 1996609898989910 
DBG(46741444)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741445)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46741446)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741447)> CPU DETAIL: Result: 0060462910340000 
DBG(46741448)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46741450)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741451)> CPU DETAIL: M4: 0008 
DBG(46741452)> CPU DETAIL: Transfer to T 
DBG(46741454)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741455)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(46741455)> CPU DETAIL: Read R 0637: 2222222222222222 
DBG(46741456)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46741458)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741459)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46741460)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741461)> CPU DETAIL: Result: 0060462910350000 
DBG(46741462)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46741464)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741465)> CPU DETAIL: M4: 0009 
DBG(46741466)> CPU DETAIL: Transfer to T 
DBG(46741468)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741469)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(46741469)> CPU DETAIL: Read R 0638: 3333333333333333 
DBG(46741470)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46741472)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741473)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46741474)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741475)> CPU DETAIL: Result: 0060462910360000 
DBG(46741476)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46741478)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741479)> CPU DETAIL: M4: 0010 
DBG(46741480)> CPU DETAIL: Transfer to T 
DBG(46741482)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741483)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(46741483)> CPU DETAIL: Read R 0639: 6600008898989830 
DBG(46741484)> CPU DETAIL: Write 1036: 6600008898989830 
DBG(46741486)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741487)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46741488)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741489)> CPU DETAIL: Result: 0060462910370000 
DBG(46741490)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46741492)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741493)> CPU DETAIL: M4: 0011 
DBG(46741494)> CPU DETAIL: Transfer to T 
DBG(46741496)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741497)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(46741497)> CPU DETAIL: Read R 0640: 0000000000000000 
DBG(46741498)> CPU DETAIL: Write 1037: 0000000000000000 
DBG(46741500)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741501)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46741502)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741503)> CPU DETAIL: Result: 0060462910380000 
DBG(46741504)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46741506)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741507)> CPU DETAIL: M4: 0012 
DBG(46741508)> CPU DETAIL: Transfer to T 
DBG(46741510)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741511)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(46741511)> CPU DETAIL: Read R 0641: 0000000000000000 
DBG(46741512)> CPU DETAIL: Write 1038: 0000000000000000 
DBG(46741514)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741515)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46741516)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741517)> CPU DETAIL: Result: 0060462910390000 
DBG(46741518)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46741520)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741521)> CPU DETAIL: M4: 0013 
DBG(46741522)> CPU DETAIL: Transfer to T 
DBG(46741524)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46741525)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(46741525)> CPU DETAIL: Read R 0642: 7777770000008888 
DBG(46741526)> CPU DETAIL: Write 1039: 7777770000008888 
DBG(46741528)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46741529)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46741530)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46741531)> CPU DETAIL: Result: 0060462910400000 
DBG(46741532)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46741534)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46741535)> CPU DETAIL: M4: 0014 
DBG(46741538)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46741539)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46741540)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46741543)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46741544)> CPU DETAIL: Read R 0065: 0458000100140063 
DBG(46741545)> CPU DETAIL: Result: 0458000100210063 
DBG(46741546)> CPU DETAIL: Write 0065: 0458000100210063 
DBG(46741548)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46741549)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46741550)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46741552)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46741553)> CPU DETAIL: Read R 1557: 0000000000000007 
DBG(46741554)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46741555)> CPU DETAIL: Result: 0000000000000014 
DBG(46741556)> CPU DETAIL: Write 1557: 0000000000000014 
DBG(46741558)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46741559)> CPU DETAIL: Read R 1036: 6600008898989830 
DBG(46741560)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46741561)> CPU DETAIL: Result: 6600000000000000 
DBG(46741562)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46741564)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46741565)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46741566)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46741569)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46741570)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46741571)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46741572)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46741573)> CPU DETAIL: Transfer to T 
DBG(46741575)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46741576)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46741577)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46741579)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46741580)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46741581)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46741583)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46741584)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46741585)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46741587)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46741588)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46741589)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46741591)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46741592)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46741593)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46741595)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46741596)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46741597)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46741599)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46741600)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46741601)> CPU DETAIL: Transfer to T 
DBG(46741601)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46741603)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46741604)> CPU DETAIL: Condition not present 
DBG(46741606)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46741607)> CPU DETAIL: Transfer to T 
DBG(46741609)> CPU CMD: Exec 0095: 00 60 0000 0000 0624   nop   
DBG(46741610)> CPU DETAIL: Transfer to T 
DBG(46741612)> CPU CMD: Exec 0624: 00 40 1663 1575 0625   set 0625 with (1575 Saved M6 value)   
DBG(46741613)> CPU DETAIL: Read R 1663: 0052000000000000 
DBG(46741614)> CPU DETAIL: Read S 1575: 0000000000000000 
DBG(46741615)> CPU DETAIL: Result: 0052000000000000 
DBG(46741616)> CPU DETAIL: Write 0625: 0052000000000000 
DBG(46741618)> CPU CMD: Exec 0625: 00 52 0000 0000 0000   Clear M6 then add R S T to M4 M6 M8           restore M6 to its saved value  
DBG(46741619)> CPU DETAIL: M4: 0014 
DBG(46741620)> CPU DETAIL: Clear M6
DBG(46741620)> CPU DETAIL: M6: 0000 
DBG(46741621)> CPU DETAIL: M8: 0000 
DBG(46741624)> CPU CMD: Exec 0626: 00 60 0000 0000 0145   goto process transaction   
DBG(46741625)> CPU DETAIL: Transfer to T 
DBG(46741627)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46741628)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46741629)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46741630)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46741632)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46741633)> CPU DETAIL: Read R 1036: 6600008898989830 
DBG(46741634)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46741635)> CPU DETAIL: Result: 0000008898989830 
DBG(46741636)> CPU DETAIL: Write 1568: 0000008898989830 
DBG(46741638)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46741639)> CPU DETAIL: Read R 1042: 0000008898989810 
DBG(46741640)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46741641)> CPU DETAIL: Result: 0000008898989810 
DBG(46741642)> CPU DETAIL: Write 1567: 0000008898989810 
DBG(46741644)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46741645)> CPU DETAIL: Read R 1568: 0000008898989830 
DBG(46741646)> CPU DETAIL: Read S 1567: 0000008898989810 
DBG(46741647)> CPU DETAIL: Diff: REG1: 0000000000000020
DBG(46741650)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46741651)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46741652)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46741654)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46741655)> CPU DETAIL: Read R 1568: 0000008898989830 
DBG(46741656)> CPU DETAIL: Read S 1567: 0000008898989810 
DBG(46741657)> CPU DETAIL: Result: 0000000000000020 
DBG(46741660)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46741661)> CPU DETAIL: REG1: 0000000000000020
DBG(46741661)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46741663)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46741664)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46741665)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46741667)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46741668)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46741669)> CPU DETAIL: Read S 1564: 0000000000000003 
DBG(46741670)> CPU DETAIL: Result: 0000000000000003 
DBG(46741673)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46741674)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46741675)> CPU DETAIL: Result: 0000000000000010 
DBG(46741676)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46741678)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46741679)> CPU DETAIL: Read R 1570: 0000000000000000 
DBG(46741680)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46741681)> CPU DETAIL: Result: 0000000000000010 
DBG(46741684)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46741685)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46741686)> CPU DETAIL: Result: 0000000000000190 
DBG(46741689)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46741690)> CPU DETAIL: REG1: 0000000000000190
DBG(46741690)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46741692)> CPU CMD: Exec 0172: 00 54 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46741693)> CPU DETAIL: M4: 0014 
DBG(46741694)> CPU DETAIL: M6: 0000 
DBG(46741695)> CPU DETAIL: Clear M8
DBG(46741695)> CPU DETAIL: M8: 0000 
DBG(46741698)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46741699)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46741700)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000000000000 
DBG(46741703)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46741704)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000000000 
DBG(46741705)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46741707)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46741708)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46741709)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46741710)> CPU DETAIL: Result: 0000000000000001 
DBG(46741711)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(46741714)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46741715)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46741716)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46741716)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46741717)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46741718)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46741721)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46741722)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46741725)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46741726)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46741727)> CPU DETAIL: Result: 0000000000000000 
DBG(46741728)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46741730)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46741731)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46741732)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46741733)> CPU DETAIL: Result: 0000000000000001 
DBG(46741736)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46741737)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46741738)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46741738)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46741739)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46741740)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46741743)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46741744)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46741747)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46741748)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46741749)> CPU DETAIL: Result: 0030000000000000 
DBG(46741750)> CPU DETAIL: Write 1041: 0030000000000000 
DBG(46741752)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46741753)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46741754)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46741757)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46741758)> CPU DETAIL: Read R 1041: 0030000000000000 
DBG(46741759)> CPU DETAIL: Result: 0100000000000000 
DBG(46741760)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46741762)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46741763)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46741764)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46741766)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741767)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46741768)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(46741768)> CPU DETAIL: Write 1348: 0100000000000000 
DBG(46741770)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741771)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46741772)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741773)> CPU DETAIL: Result: 0060104293480000 
DBG(46741774)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46741776)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741779)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741780)> CPU DETAIL: M8: 0001 
DBG(46741781)> CPU DETAIL: Transfer to T 
DBG(46741783)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741784)> CPU DETAIL: Read R 1042: 0000008898989810 
DBG(46741785)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(46741785)> CPU DETAIL: Write 1349: 0000008898989810 
DBG(46741787)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741788)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46741789)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741790)> CPU DETAIL: Result: 0060104393480000 
DBG(46741791)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46741793)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741796)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741797)> CPU DETAIL: M8: 0002 
DBG(46741798)> CPU DETAIL: Transfer to T 
DBG(46741800)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741801)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46741802)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(46741802)> CPU DETAIL: Write 1350: 0000000000000000 
DBG(46741804)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741805)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46741806)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741807)> CPU DETAIL: Result: 0060104493480000 
DBG(46741808)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46741810)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741813)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741814)> CPU DETAIL: M8: 0003 
DBG(46741815)> CPU DETAIL: Transfer to T 
DBG(46741817)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741818)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46741819)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(46741819)> CPU DETAIL: Write 1351: 0000000000000000 
DBG(46741821)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741822)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46741823)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741824)> CPU DETAIL: Result: 0060104593480000 
DBG(46741825)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46741827)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741830)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741831)> CPU DETAIL: M8: 0004 
DBG(46741832)> CPU DETAIL: Transfer to T 
DBG(46741834)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741835)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46741836)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(46741836)> CPU DETAIL: Write 1352: 0000000000000000 
DBG(46741838)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741839)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46741840)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741841)> CPU DETAIL: Result: 0060104693480000 
DBG(46741842)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46741844)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741847)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741848)> CPU DETAIL: M8: 0005 
DBG(46741849)> CPU DETAIL: Transfer to T 
DBG(46741851)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741852)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46741853)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(46741853)> CPU DETAIL: Write 1353: 0000000000000000 
DBG(46741855)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741856)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46741857)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741858)> CPU DETAIL: Result: 0060104793480000 
DBG(46741859)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46741861)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741864)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741865)> CPU DETAIL: M8: 0006 
DBG(46741866)> CPU DETAIL: Transfer to T 
DBG(46741868)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46741869)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46741870)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(46741870)> CPU DETAIL: Write 1354: 0000000000000001 
DBG(46741872)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46741873)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46741874)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741875)> CPU DETAIL: Result: 0060104893480000 
DBG(46741876)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46741878)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46741881)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46741882)> CPU DETAIL: M8: 0007 
DBG(46741885)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46741886)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46741887)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46741889)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46741890)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46741891)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46741893)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46741894)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46741895)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46741896)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46741899)> CPU CMD: Exec 0193: 00 60 0000 0000 0203   transfer 203   
DBG(46741900)> CPU DETAIL: Transfer to T 
DBG(46741902)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46741903)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46741904)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46741906)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46741907)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46741908)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46741910)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46741911)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46741912)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46741913)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46741914)> CPU DETAIL: Transfer to T 
DBG(46741916)> CPU CMD: Exec 0207: 00 59 0000 0000 0000      
DBG(46741917)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0014 0000 0007
DBG(46741919)> CPU CMD: Exec 0208: 96 42 0000 1582 0216      
DBG(46741920)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46741921)> CPU DETAIL: Result: 0000000000000007 
DBG(46741922)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46741923)> CPU DETAIL: Write 0216: 0000000000070000 
DBG(46741925)> CPU CMD: Exec 0209: 96 60 1564 0000 0000   (1564 words used by successors) Shift left 4 -> REG1   
DBG(46741926)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46741927)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46741930)> CPU CMD: Exec 0210: 00 40 1618 0000 0000   (1618) + REG1   
DBG(46741931)> CPU DETAIL: Read R 1618: 0858000100000212 
DBG(46741932)> CPU DETAIL: Result: 0858000100030212 
DBG(46741935)> CPU CMD: Exec 0211: 00 40 0216 0000 0216   (0216) + REG1 -> (0216)   
DBG(46741936)> CPU DETAIL: Read R 0216: 0000000000070000 
DBG(46741937)> CPU DETAIL: Result: 0858000100100212 
DBG(46741938)> CPU DETAIL: Write 0216: 0858000100100212 
DBG(46741940)> CPU CMD: Exec 0212: 00 60 1148 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46741941)> CPU DETAIL: Read R 1148: 0000009898989840 
DBG(46741942)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(46741942)> CPU DETAIL: Write 1355: 0000009898989840 
DBG(46741944)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46741945)> CPU DETAIL: Read R 0212: 0060114893480000 
DBG(46741946)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741947)> CPU DETAIL: Result: 0060114993480000 
DBG(46741948)> CPU DETAIL: Write 0212: 0060114993480000 
DBG(46741950)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46741951)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(46741951)> CPU DETAIL: Read R 1355: 0000009898989840 
DBG(46741952)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46741953)> CPU DETAIL: Diff: REG1: 4500009898989840
DBG(46741956)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46741957)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46741958)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46741959)> CPU DETAIL: Result: 0000000000000001 
DBG(46741960)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46741962)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46741963)> CPU DETAIL: M8: 0008 
DBG(46741964)> CPU DETAIL: Transfer to T 
DBG(46741966)> CPU CMD: Exec 0212: 00 60 1149 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46741967)> CPU DETAIL: Read R 1149: 5555558855555555 
DBG(46741968)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(46741968)> CPU DETAIL: Write 1356: 5555558855555555 
DBG(46741970)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46741971)> CPU DETAIL: Read R 0212: 0060114993480000 
DBG(46741972)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741973)> CPU DETAIL: Result: 0060115093480000 
DBG(46741974)> CPU DETAIL: Write 0212: 0060115093480000 
DBG(46741976)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46741977)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(46741977)> CPU DETAIL: Read R 1356: 5555558855555555 
DBG(46741978)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46741979)> CPU DETAIL: Diff: REG1: 0055558855555555
DBG(46741982)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46741983)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46741984)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46741985)> CPU DETAIL: Result: 0000000000000002 
DBG(46741986)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46741988)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46741989)> CPU DETAIL: M8: 0009 
DBG(46741990)> CPU DETAIL: Transfer to T 
DBG(46741992)> CPU CMD: Exec 0212: 00 60 1150 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46741993)> CPU DETAIL: Read R 1150: 6666668866666666 
DBG(46741994)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(46741994)> CPU DETAIL: Write 1357: 6666668866666666 
DBG(46741996)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46741997)> CPU DETAIL: Read R 0212: 0060115093480000 
DBG(46741998)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46741999)> CPU DETAIL: Result: 0060115193480000 
DBG(46742000)> CPU DETAIL: Write 0212: 0060115193480000 
DBG(46742002)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46742003)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(46742003)> CPU DETAIL: Read R 1357: 6666668866666666 
DBG(46742004)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46742005)> CPU DETAIL: Diff: REG1: 1166668866666666
DBG(46742008)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46742009)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46742010)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46742011)> CPU DETAIL: Result: 0000000000000003 
DBG(46742012)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46742014)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46742015)> CPU DETAIL: M8: 0010 
DBG(46742018)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46742019)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46742020)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46742022)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46742023)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742024)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46742026)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46742027)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46742028)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46742031)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46742032)> CPU DETAIL: Read R 0189: 0858000100070186 
DBG(46742033)> CPU DETAIL: Result: 0858000100170186 
DBG(46742034)> CPU DETAIL: Write 0189: 0858000100170186 
DBG(46742036)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46742037)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742038)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46742040)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46742041)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742042)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46742044)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46742045)> CPU DETAIL: Read R 1570: 0000000000000000 
DBG(46742046)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46742047)> CPU DETAIL: Result: 0000000000000010 
DBG(46742048)> CPU DETAIL: Write 1570: 0000000000000010 
DBG(46742050)> CPU CMD: Exec 0224: 00 60 0000 0000 0096   exit if no write to tape   
DBG(46742051)> CPU DETAIL: Transfer to T 
DBG(46742053)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46742054)> CPU DETAIL: Read R 1559: 0000000000000010 
DBG(46742055)> CPU DETAIL: Read S 1561: 0000000000000000 
DBG(46742056)> CPU DETAIL: Result: 0000000000000010 
DBG(46742059)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46742060)> CPU DETAIL: REG1: 0000000000000010
DBG(46742060)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46742062)> CPU CMD: Exec 0102: 00 60 1588 1563 0000   clear (1563 num of predecessors)        
DBG(46742063)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742064)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46742066)> CPU CMD: Exec 0103: 00 60 1588 1564 0000   clear (1564 num of successors)   
DBG(46742067)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742068)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46742070)> CPU CMD: Exec 0104: 00 60 6836 1562 0000   (0836 + M6) -> (1562)                     event rec w7   
DBG(46742071)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46742071)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46742072)> CPU DETAIL: Write 1562: 0000000000000100 
DBG(46742074)> CPU CMD: Exec 0105: 02 42 1562 1582 1563   Mask (1562) with 0..0 1111 Shift 2 Right -> (1563 num of predecesors)   
DBG(46742075)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46742076)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46742077)> CPU DETAIL: Result: 0000000000000100 
DBG(46742078)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46742079)> CPU DETAIL: Write 1563: 0000000000000001 
DBG(46742081)> CPU CMD: Exec 0106: 00 42 1562 1596 1564   Mask (1562) with 0..0 0011 -> (1564 num of successors)   
DBG(46742082)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46742083)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46742084)> CPU DETAIL: Result: 0000000000000000 
DBG(46742085)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46742087)> CPU CMD: Exec 0107: 00 40 1563 1597 0000   (1563 num of predecesors) + (1597 EXP12) -> REG1 convert integer to float   
DBG(46742088)> CPU DETAIL: Read R 1563: 0000000000000001 
DBG(46742089)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46742090)> CPU DETAIL: Result: 1200000000000001 
DBG(46742093)> CPU CMD: Exec 0108: 50 24 1598 0000 0000   Float (1598 Float 3.0) x REG1 -> REG1      x 3.0       
DBG(46742094)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46742095)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46742095)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46742096)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46742097)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46742100)> CPU CMD: Exec 0109: 00 34 1599 0000 1563   Spe Float (1599 = Float 10^-12) x REG1 -> (1563 words used by predecessors)  
DBG(46742101)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46742102)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46742102)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46742103)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742104)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46742105)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46742107)> CPU CMD: Exec 0110: 00 40 1564 1597 0000   (1564 num of successors) + (1597 EXP12) -> REG1                          
DBG(46742108)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46742109)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46742110)> CPU DETAIL: Result: 1200000000000000 
DBG(46742113)> CPU CMD: Exec 0111: 50 24 1598 0000 0000   Float (1598 = Float 3.0) x REG1 -> REG1             Now (1963) = (1563) x 3  
DBG(46742114)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46742115)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46742115)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46742116)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742117)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742120)> CPU CMD: Exec 0112: 00 34 1599 0000 1564   Spe Float (1599 0 Float 10^-12) x REG1 -> (1564 words used by successors)   
DBG(46742121)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46742122)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46742122)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46742123)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742124)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742125)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46742127)> CPU CMD: Exec 0113: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)  initial size in words of event rec    
DBG(46742128)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742129)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46742131)> CPU CMD: Exec 0114: 00 72 1563 1588 0116   if (1563 words used by predecessors)<>0 goto 0116                       
DBG(46742132)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46742133)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46742134)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46742135)> CPU DETAIL: Transfer to T 
DBG(46742137)> CPU CMD: Exec 0116: 00 72 1564 1588 0118   if (1564 words used by successors)<>0 goto 0118    
DBG(46742138)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46742139)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46742140)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46742143)> CPU CMD: Exec 0117: 00 60 1671 0138 0000   (1671) -> (0138)                                     ... set to tr 0138 to 0 
DBG(46742144)> CPU DETAIL: Read R 1671: 0060000000000141 
DBG(46742145)> CPU DETAIL: Write 0138: 0060000000000141 
DBG(46742147)> CPU CMD: Exec 0118: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46742148)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46742149)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46742150)> CPU DETAIL: Result: 0000000000000003 
DBG(46742153)> CPU CMD: Exec 0119: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1 = (7+pred*3+succ*3)    
DBG(46742154)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46742155)> CPU DETAIL: Result: 0000000000000010 
DBG(46742156)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46742158)> CPU CMD: Exec 0120: 00 59 0000 0000 0000   REG1 = 0000 M4 M6 M8    
DBG(46742159)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0014 0000 0010
DBG(46742161)> CPU CMD: Exec 0121: 00 42 0000 1585 1575   Mask REG1 with 0..0 1111 0000 -> (1575 saved M6 value)       
DBG(46742162)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46742163)> CPU DETAIL: Result: 0000000000000000 
DBG(46742164)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(46742166)> CPU CMD: Exec 0122: 00 60 6830 1041 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742167)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46742167)> CPU DETAIL: Read R 0830: 0100000000000000 
DBG(46742168)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46742170)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742171)> CPU DETAIL: Read R 0122: 0060683010410000 
DBG(46742172)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742173)> CPU DETAIL: Result: 0060683010420000 
DBG(46742174)> CPU DETAIL: Write 0122: 0060683010420000 
DBG(46742176)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742177)> CPU DETAIL: M6: 0001 
DBG(46742178)> CPU DETAIL: Transfer to T 
DBG(46742180)> CPU CMD: Exec 0122: 00 60 6830 1042 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742181)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(46742181)> CPU DETAIL: Read R 0831: 0000009898989810 
DBG(46742182)> CPU DETAIL: Write 1042: 0000009898989810 
DBG(46742184)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742185)> CPU DETAIL: Read R 0122: 0060683010420000 
DBG(46742186)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742187)> CPU DETAIL: Result: 0060683010430000 
DBG(46742188)> CPU DETAIL: Write 0122: 0060683010430000 
DBG(46742190)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742191)> CPU DETAIL: M6: 0002 
DBG(46742192)> CPU DETAIL: Transfer to T 
DBG(46742194)> CPU CMD: Exec 0122: 00 60 6830 1043 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742195)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(46742195)> CPU DETAIL: Read R 0832: 0000000000000000 
DBG(46742196)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46742198)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742199)> CPU DETAIL: Read R 0122: 0060683010430000 
DBG(46742200)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742201)> CPU DETAIL: Result: 0060683010440000 
DBG(46742202)> CPU DETAIL: Write 0122: 0060683010440000 
DBG(46742204)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742205)> CPU DETAIL: M6: 0003 
DBG(46742206)> CPU DETAIL: Transfer to T 
DBG(46742208)> CPU CMD: Exec 0122: 00 60 6830 1044 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742209)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(46742209)> CPU DETAIL: Read R 0833: 0000000000000000 
DBG(46742210)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46742212)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742213)> CPU DETAIL: Read R 0122: 0060683010440000 
DBG(46742214)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742215)> CPU DETAIL: Result: 0060683010450000 
DBG(46742216)> CPU DETAIL: Write 0122: 0060683010450000 
DBG(46742218)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742219)> CPU DETAIL: M6: 0004 
DBG(46742220)> CPU DETAIL: Transfer to T 
DBG(46742222)> CPU CMD: Exec 0122: 00 60 6830 1045 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742223)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(46742223)> CPU DETAIL: Read R 0834: 0000000000000000 
DBG(46742224)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46742226)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742227)> CPU DETAIL: Read R 0122: 0060683010450000 
DBG(46742228)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742229)> CPU DETAIL: Result: 0060683010460000 
DBG(46742230)> CPU DETAIL: Write 0122: 0060683010460000 
DBG(46742232)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742233)> CPU DETAIL: M6: 0005 
DBG(46742234)> CPU DETAIL: Transfer to T 
DBG(46742236)> CPU CMD: Exec 0122: 00 60 6830 1046 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742237)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(46742237)> CPU DETAIL: Read R 0835: 0000000000000000 
DBG(46742238)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46742240)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742241)> CPU DETAIL: Read R 0122: 0060683010460000 
DBG(46742242)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742243)> CPU DETAIL: Result: 0060683010470000 
DBG(46742244)> CPU DETAIL: Write 0122: 0060683010470000 
DBG(46742246)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742247)> CPU DETAIL: M6: 0006 
DBG(46742248)> CPU DETAIL: Transfer to T 
DBG(46742250)> CPU CMD: Exec 0122: 00 60 6830 1047 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46742251)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(46742251)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46742252)> CPU DETAIL: Write 1047: 0000000000000100 
DBG(46742254)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46742255)> CPU DETAIL: Read R 0122: 0060683010470000 
DBG(46742256)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742257)> CPU DETAIL: Result: 0060683010480000 
DBG(46742258)> CPU DETAIL: Write 0122: 0060683010480000 
DBG(46742260)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46742261)> CPU DETAIL: M6: 0007 
DBG(46742264)> CPU CMD: Exec 0125: 00 60 1600 0122 0000   (1600) -> (0122)                              restore instr 0122 to its init 
DBG(46742265)> CPU DETAIL: Read R 1600: 0060683010410000 
DBG(46742266)> CPU DETAIL: Write 0122: 0060683010410000 
DBG(46742268)> CPU CMD: Exec 0126: 00 42 0124 1585 0132   Mask (0124) with 0..0 1111 0000 -> (0132)     =0..0 0007 0000 = mask to get  
DBG(46742269)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46742270)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46742271)> CPU DETAIL: Result: 0000000000070000 
DBG(46742272)> CPU DETAIL: Write 0132: 0000000000070000 
DBG(46742274)> CPU CMD: Exec 0127: 96 60 1563 0000 0000   (1563 words used by predecessors) shift left 4 -> REG1                     
DBG(46742275)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46742276)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46742279)> CPU CMD: Exec 0128: 00 40 0132 0000 0000   (0132) + REG1 -> REG1                         new end of loop value = previo 
DBG(46742280)> CPU DETAIL: Read R 0132: 0000000000070000 
DBG(46742281)> CPU DETAIL: Result: 0000000000100000 
DBG(46742284)> CPU CMD: Exec 0129: 00 40 1602 0000 0132   (1602) + REG1 -> (0132)                       set (0132) as 00 58 0001 (0132 
DBG(46742285)> CPU DETAIL: Read R 1602: 0658000100000130 
DBG(46742286)> CPU DETAIL: Result: 0658000100100130 
DBG(46742287)> CPU DETAIL: Write 0132: 0658000100100130 
DBG(46742289)> CPU CMD: Exec 0130: 00 60 6830 1048 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46742290)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(46742290)> CPU DETAIL: Read R 0837: 0000003398989830 
DBG(46742291)> CPU DETAIL: Write 1048: 0000003398989830 
DBG(46742293)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46742294)> CPU DETAIL: Read R 0130: 0060683010480000 
DBG(46742295)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742296)> CPU DETAIL: Result: 0060683010490000 
DBG(46742297)> CPU DETAIL: Write 0130: 0060683010490000 
DBG(46742299)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46742300)> CPU DETAIL: M6: 0008 
DBG(46742301)> CPU DETAIL: Transfer to T 
DBG(46742303)> CPU CMD: Exec 0130: 00 60 6830 1049 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46742304)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(46742304)> CPU DETAIL: Read R 0838: 0000000000033555 
DBG(46742305)> CPU DETAIL: Write 1049: 0000000000033555 
DBG(46742307)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46742308)> CPU DETAIL: Read R 0130: 0060683010490000 
DBG(46742309)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742310)> CPU DETAIL: Result: 0060683010500000 
DBG(46742311)> CPU DETAIL: Write 0130: 0060683010500000 
DBG(46742313)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46742314)> CPU DETAIL: M6: 0009 
DBG(46742315)> CPU DETAIL: Transfer to T 
DBG(46742317)> CPU CMD: Exec 0130: 00 60 6830 1050 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46742318)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(46742318)> CPU DETAIL: Read R 0839: 0000000000033666 
DBG(46742319)> CPU DETAIL: Write 1050: 0000000000033666 
DBG(46742321)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46742322)> CPU DETAIL: Read R 0130: 0060683010500000 
DBG(46742323)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742324)> CPU DETAIL: Result: 0060683010510000 
DBG(46742325)> CPU DETAIL: Write 0130: 0060683010510000 
DBG(46742327)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46742328)> CPU DETAIL: M6: 0010 
DBG(46742331)> CPU CMD: Exec 0133: 00 60 1603 0130 0000   (1603) -> (0130)                              restore line 0130   
DBG(46742332)> CPU DETAIL: Read R 1603: 0060683010480000 
DBG(46742333)> CPU DETAIL: Write 0130: 0060683010480000 
DBG(46742335)> CPU CMD: Exec 0134: 00 42 0132 1585 0140   Mask (0132) with 0..0 1111 0000 -> (0140)     get previous loop end value   
DBG(46742336)> CPU DETAIL: Read R 0132: 0658000100100130 
DBG(46742337)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46742338)> CPU DETAIL: Result: 0000000000100000 
DBG(46742339)> CPU DETAIL: Write 0140: 0000000000100000 
DBG(46742341)> CPU CMD: Exec 0135: 96 60 1564 0000 0000   (1564 words used by successors) -> REG1      
DBG(46742342)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46742343)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(46742346)> CPU CMD: Exec 0136: 00 40 0140 0000 0000   (0140) + REG1 -> REG1                         new end of loop value = previo 
DBG(46742347)> CPU DETAIL: Read R 0140: 0000000000100000 
DBG(46742348)> CPU DETAIL: Result: 0000000000100000 
DBG(46742351)> CPU CMD: Exec 0137: 00 40 1604 0000 0140   (1604) + REG1 -> (0140)                       set end of loop value   
DBG(46742352)> CPU DETAIL: Read R 1604: 0658000100000138 
DBG(46742353)> CPU DETAIL: Result: 0658000100100138 
DBG(46742354)> CPU DETAIL: Write 0140: 0658000100100138 
DBG(46742356)> CPU CMD: Exec 0138: 00 60 0000 0000 0141   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46742357)> CPU DETAIL: Transfer to T 
DBG(46742359)> CPU CMD: Exec 0141: 00 60 1605 0138 0000   (1605) -> (0138)                              reset instr 0138 to its initia 
DBG(46742360)> CPU DETAIL: Read R 1605: 0060683011480000 
DBG(46742361)> CPU DETAIL: Write 0138: 0060683011480000 
DBG(46742363)> CPU CMD: Exec 0142: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46742364)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46742365)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46742368)> CPU CMD: Exec 0143: 00 40 0124 0000 0124   (0124) + REG1   
DBG(46742369)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46742370)> CPU DETAIL: Result: 0658000100170122 
DBG(46742371)> CPU DETAIL: Write 0124: 0658000100170122 
DBG(46742373)> CPU CMD: Exec 0144: 00 40 1561 1565 1561   (1561 words read from event block) += (1565 num of words in event rec)   
DBG(46742374)> CPU DETAIL: Read R 1561: 0000000000000000 
DBG(46742375)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46742376)> CPU DETAIL: Result: 0000000000000010 
DBG(46742377)> CPU DETAIL: Write 1561: 0000000000000010 
DBG(46742379)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46742380)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46742381)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46742382)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46742384)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46742385)> CPU DETAIL: Read R 1036: 6600008898989830 
DBG(46742386)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46742387)> CPU DETAIL: Result: 0000008898989830 
DBG(46742388)> CPU DETAIL: Write 1568: 0000008898989830 
DBG(46742390)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46742391)> CPU DETAIL: Read R 1042: 0000009898989810 
DBG(46742392)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46742393)> CPU DETAIL: Result: 0000009898989810 
DBG(46742394)> CPU DETAIL: Write 1567: 0000009898989810 
DBG(46742396)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46742397)> CPU DETAIL: Read R 1568: 0000008898989830 
DBG(46742398)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46742399)> CPU DETAIL: Diff: REG1: 9999999000000020
DBG(46742402)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46742403)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46742404)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46742406)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46742407)> CPU DETAIL: Read R 1568: 0000008898989830 
DBG(46742408)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46742409)> CPU DETAIL: Result: 9999999000000020 
DBG(46742412)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46742413)> CPU DETAIL: REG1: 9999999000000020
DBG(46742413)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(46742415)> CPU CMD: Exec 0411: 00 72 1587 1569 0153   if (1569 card code)<>1 transfer 0153    reject transaction   
DBG(46742416)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46742417)> CPU DETAIL: Read S 1569: 0000000000000001 
DBG(46742418)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46742421)> CPU CMD: Exec 0412: 96 60 1565 0000 0000   (1565 num of words in event rec) -> REG1 shift left 4   
DBG(46742422)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46742423)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46742426)> CPU CMD: Exec 0413: 00 41 0124 0000 0124   reset (0124) to the addr starting event (unread event)   
DBG(46742427)> CPU DETAIL: Read R 0124: 0658000100170122 
DBG(46742428)> CPU DETAIL: Result: 0658000100070122 
DBG(46742429)> CPU DETAIL: Write 0124: 0658000100070122 
DBG(46742431)> CPU CMD: Exec 0414: 00 60 0000 0000 0000   nop if predecessor/goto 0418 if successor   
DBG(46742434)> CPU CMD: Exec 0415: 00 41 1561 1565 1561   (1561 words read from event block) -= (1565 num of words in event rec)   
DBG(46742435)> CPU DETAIL: Read R 1561: 0000000000000010 
DBG(46742436)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46742437)> CPU DETAIL: Result: 0000000000000000 
DBG(46742438)> CPU DETAIL: Write 1561: 0000000000000000 
DBG(46742440)> CPU CMD: Exec 0416: 00 60 1665 0095 0000   set to restore M6 value before read next event   
DBG(46742441)> CPU DETAIL: Read R 1665: 0060000000000624 
DBG(46742442)> CPU DETAIL: Write 0095: 0060000000000624 
DBG(46742444)> CPU CMD: Exec 0417: 00 60 0000 0000 0558   goto 0558 to create new event with predecessor and additional fields   
DBG(46742445)> CPU DETAIL: Transfer to T 
DBG(46742447)> CPU CMD: Exec 0558: 00 42 1036 1593 0000   mask (1036 transac rec w4) with 550..0     
DBG(46742448)> CPU DETAIL: Read R 1036: 6600008898989830 
DBG(46742449)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46742450)> CPU DETAIL: Result: 6600000000000000 
DBG(46742453)> CPU CMD: Exec 0559: 00 41 1036 0000 1042   remove 2 leftmost digits from (1036 transac w4) ->  (1042 event rec w2)    
DBG(46742454)> CPU DETAIL: Read R 1036: 6600008898989830 
DBG(46742455)> CPU DETAIL: Result: 0000008898989830 
DBG(46742456)> CPU DETAIL: Write 1042: 0000008898989830 
DBG(46742458)> CPU CMD: Exec 0560: 10 42 1039 1580 1041   mask (1039 transac w7) with 111111 0..0 -> (1041 event rec w1)     transac w 
DBG(46742459)> CPU DETAIL: Read R 1039: 7777770000008888 
DBG(46742460)> CPU DETAIL: Read S 1580: 1111110000000000 
DBG(46742461)> CPU DETAIL: Result: 7777770000000000 
DBG(46742462)> CPU DETAIL: Word Shift 10 digits right: REG1: 0000000000777777 
DBG(46742463)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46742465)> CPU CMD: Exec 0561: 00 60 1588 1043 0000   clear (1043 event rec w3)   
DBG(46742466)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742467)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46742469)> CPU CMD: Exec 0562: 00 60 0000 1044 0000   clear (1044 event rec w4)   
DBG(46742470)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46742472)> CPU CMD: Exec 0563: 00 60 0000 1045 0000   clear (1045 event rec w5   
DBG(46742473)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46742475)> CPU CMD: Exec 0564: 00 60 0000 1046 0000   clear (1046 event rec w6)   
DBG(46742476)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46742478)> CPU CMD: Exec 0565: 00 60 0000 1047 0000   clear (1047 event rec w7)   
DBG(46742479)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46742481)> CPU CMD: Exec 0566: 00 60 0000 0000 0000   nop   
DBG(46742484)> CPU CMD: Exec 0567: 88 42 1039 1582 0000   mask (1039 transac w7) with 0..0 1111     tranasc w7 = SCHEDL xx xxxx TSTS   
DBG(46742485)> CPU DETAIL: Read R 1039: 7777770000008888 
DBG(46742486)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46742487)> CPU DETAIL: Result: 0000000000008888 
DBG(46742488)> CPU DETAIL: Word Shift 12 digits left: REG1: 8888000000000000 
DBG(46742491)> CPU CMD: Exec 0568: 00 40 1047 0000 1047   set (1047 event rec w7) with TSTS         event w7= TSTS TTTT xxxx AA BB   A 
DBG(46742492)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46742493)> CPU DETAIL: Result: 8888000000000000 
DBG(46742494)> CPU DETAIL: Write 1047: 8888000000000000 
DBG(46742496)> CPU CMD: Exec 0569: 07 42 1033 1643 0000   Mask (1033 transac w1) shift right 7      transac w1 = A RS 00 0 PPPPPPPPP 0 
DBG(46742497)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46742498)> CPU DETAIL: Read S 1643: 0110000000000000 
DBG(46742499)> CPU DETAIL: Result: 0990000000000000 
DBG(46742500)> CPU DETAIL: Word Shift 7 digits right: REG1: 0000000099000000 
DBG(46742503)> CPU CMD: Exec 0570: 00 40 1047 0000 1047   set (1047 event rec w7) with RS           event w7= TSTS TTTT RS xx AA BB    
DBG(46742504)> CPU DETAIL: Read R 1047: 8888000000000000 
DBG(46742505)> CPU DETAIL: Result: 8888000099000000 
DBG(46742506)> CPU DETAIL: Write 1047: 8888000099000000 
DBG(46742508)> CPU CMD: Exec 0571: 07 42 1033 1644 0000   Mask (1033 transac w1) shift right 7      transac w1 = A RS PR 0 PPPPPPPPP 0 
DBG(46742509)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46742510)> CPU DETAIL: Read S 1644: 0001100000000000 
DBG(46742511)> CPU DETAIL: Result: 0006600000000000 
DBG(46742512)> CPU DETAIL: Word Shift 7 digits right: REG1: 0000000000660000 
DBG(46742515)> CPU CMD: Exec 0572: 00 40 1047 0000 1047   set (1047 event rec w7) with PR           event w7= TSTS TTTT RS PR AA BB    
DBG(46742516)> CPU DETAIL: Read R 1047: 8888000099000000 
DBG(46742517)> CPU DETAIL: Result: 8888000099660000 
DBG(46742518)> CPU DETAIL: Write 1047: 8888000099660000 
DBG(46742520)> CPU CMD: Exec 0573: 00 42 1033 1606 1048   Mask (1033 transac w1) witn event code -> (1048 predecessors list)   
DBG(46742521)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46742522)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46742523)> CPU DETAIL: Result: 0000009898989910 
DBG(46742524)> CPU DETAIL: Write 1048: 0000009898989910 
DBG(46742526)> CPU CMD: Exec 0574: 96 42 0573 1582 0000   Mask (0573) to get field T, shift right 4 (to field R)   
DBG(46742527)> CPU DETAIL: Read R 0573: 0042103316061048 
DBG(46742528)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46742529)> CPU DETAIL: Result: 0000000000001048 
DBG(46742530)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000010480000 
DBG(46742533)> CPU CMD: Exec 0575: 00 40 1590 0000 0000   incr_S   
DBG(46742534)> CPU DETAIL: Read R 1590: 0000000000010000 
DBG(46742535)> CPU DETAIL: Result: 0000000010490000 
DBG(46742538)> CPU CMD: Exec 0576: 00 40 1631 0000 0577   set to ...   
DBG(46742539)> CPU DETAIL: Read R 1631: 0060103400000000 
DBG(46742540)> CPU DETAIL: Result: 0060103410490000 
DBG(46742541)> CPU DETAIL: Write 0577: 0060103410490000 
DBG(46742543)> CPU CMD: Exec 0577: 00 60 1034 1049 0000   ... (1034 transac w2) -> (1049 event predecessor list w2)     
DBG(46742544)> CPU DETAIL: Read R 1034: 2222222222222222 
DBG(46742545)> CPU DETAIL: Write 1049: 2222222222222222 
DBG(46742547)> CPU CMD: Exec 0578: 00 40 0577 1629 0579   set to    
DBG(46742548)> CPU DETAIL: Read R 0577: 0060103410490000 
DBG(46742549)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46742550)> CPU DETAIL: Result: 0060103510500000 
DBG(46742551)> CPU DETAIL: Write 0579: 0060103510500000 
DBG(46742553)> CPU CMD: Exec 0579: 00 60 1035 1050 0000   ... (1035 transac w3) -> (1050 event predecessor list w3)     
DBG(46742554)> CPU DETAIL: Read R 1035: 3333333333333333 
DBG(46742555)> CPU DETAIL: Write 1050: 3333333333333333 
DBG(46742557)> CPU CMD: Exec 0580: 00 60 1588 1148 0000   clear (1148 successor list) make sure no successors, to save predecessor if  
DBG(46742558)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742559)> CPU DETAIL: Write 1148: 0000000000000000 
DBG(46742561)> CPU CMD: Exec 0581: 00 60 0000 0000 1800   setup number of words in created event   
DBG(46742562)> CPU DETAIL: Transfer to T 
DBG(46742564)> CPU CMD: Exec 1800: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1 = 007 0..0   
DBG(46742565)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742566)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46742569)> CPU CMD: Exec 1801: 00 40 1041 0000 1041   set 007 as msg len in event w1    
DBG(46742570)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46742571)> CPU DETAIL: Result: 0070000000777777 
DBG(46742572)> CPU DETAIL: Write 1041: 0070000000777777 
DBG(46742574)> CPU CMD: Exec 1802: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46742575)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742576)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46742578)> CPU CMD: Exec 1803: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46742579)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46742580)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46742582)> CPU CMD: Exec 1804: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)    
DBG(46742583)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742584)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46742586)> CPU CMD: Exec 1805: 00 70 1048 1588 1812   if no predecessor goto 1812   
DBG(46742587)> CPU DETAIL: Read R 1048: 0000009898989910 
DBG(46742588)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46742589)> CPU DETAIL: Diff: REG1: 0000009898989910
DBG(46742592)> CPU CMD: Exec 1806: 98 60 1587 0000 0000   100 -> REG1   
DBG(46742593)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46742594)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000100 
DBG(46742597)> CPU CMD: Exec 1807: 00 40 1047 0000 1047   set (1047 event rec w7) with AA=1 (one predecessor)   
DBG(46742598)> CPU DETAIL: Read R 1047: 8888000099660000 
DBG(46742599)> CPU DETAIL: Result: 8888000099660100 
DBG(46742600)> CPU DETAIL: Write 1047: 8888000099660100 
DBG(46742602)> CPU CMD: Exec 1808: 00 40 1623 1565 1565   (1565 num of words in event rec) += 3   
DBG(46742603)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46742604)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46742605)> CPU DETAIL: Result: 0000000000000010 
DBG(46742606)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46742608)> CPU CMD: Exec 1809: 87 60 1623 0000 0000   3 Shift Left 13 -> REG1 = 003 0..0   
DBG(46742609)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46742610)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46742613)> CPU CMD: Exec 1810: 00 40 1041 0000 1041   add to msg len in event w1    
DBG(46742614)> CPU DETAIL: Read R 1041: 0070000000777777 
DBG(46742615)> CPU DETAIL: Result: 0100000000777777 
DBG(46742616)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46742618)> CPU CMD: Exec 1811: 00 60 1623 1563 0000   3 -> (1563 words used by predecessors)    
DBG(46742619)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46742620)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46742622)> CPU CMD: Exec 1812: 00 70 1148 1588 1819   if no successors goto 1819   
DBG(46742623)> CPU DETAIL: Read R 1148: 0000000000000000 
DBG(46742624)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46742625)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46742626)> CPU DETAIL: Transfer to T 
DBG(46742628)> CPU CMD: Exec 1819: 00 60 0000 0000 0057   go to process next transaction   
DBG(46742629)> CPU DETAIL: Transfer to T 
DBG(46742631)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46742632)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46742633)> CPU DETAIL: Read S 1557: 0000000000000014 
DBG(46742634)> CPU DETAIL: Result: 0000000000000028 
DBG(46742637)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46742638)> CPU DETAIL: REG1: 0000000000000028
DBG(46742638)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46742640)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742641)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(46742641)> CPU DETAIL: Read R 0643: 1011009898989820 
DBG(46742642)> CPU DETAIL: Write 1033: 1011009898989820 
DBG(46742644)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742645)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46742646)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742647)> CPU DETAIL: Result: 0060462910340000 
DBG(46742648)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46742650)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742651)> CPU DETAIL: M4: 0015 
DBG(46742652)> CPU DETAIL: Transfer to T 
DBG(46742654)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742655)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(46742655)> CPU DETAIL: Read R 0644: 2222222222222222 
DBG(46742656)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46742658)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742659)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46742660)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742661)> CPU DETAIL: Result: 0060462910350000 
DBG(46742662)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46742664)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742665)> CPU DETAIL: M4: 0016 
DBG(46742666)> CPU DETAIL: Transfer to T 
DBG(46742668)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742669)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(46742669)> CPU DETAIL: Read R 0645: 3333333333333333 
DBG(46742670)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46742672)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742673)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46742674)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742675)> CPU DETAIL: Result: 0060462910360000 
DBG(46742676)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46742678)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742679)> CPU DETAIL: M4: 0017 
DBG(46742680)> CPU DETAIL: Transfer to T 
DBG(46742682)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742683)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(46742683)> CPU DETAIL: Read R 0646: 5500009898989840 
DBG(46742684)> CPU DETAIL: Write 1036: 5500009898989840 
DBG(46742686)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742687)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46742688)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742689)> CPU DETAIL: Result: 0060462910370000 
DBG(46742690)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46742692)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742693)> CPU DETAIL: M4: 0018 
DBG(46742694)> CPU DETAIL: Transfer to T 
DBG(46742696)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742697)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(46742697)> CPU DETAIL: Read R 0647: 5555555555555555 
DBG(46742698)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46742700)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742701)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46742702)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742703)> CPU DETAIL: Result: 0060462910380000 
DBG(46742704)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46742706)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742707)> CPU DETAIL: M4: 0019 
DBG(46742708)> CPU DETAIL: Transfer to T 
DBG(46742710)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742711)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(46742711)> CPU DETAIL: Read R 0648: 6666666666666666 
DBG(46742712)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46742714)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742715)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46742716)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742717)> CPU DETAIL: Result: 0060462910390000 
DBG(46742718)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46742720)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742721)> CPU DETAIL: M4: 0020 
DBG(46742722)> CPU DETAIL: Transfer to T 
DBG(46742724)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46742725)> CPU DETAIL: M4 Address Modifier: 0020 
DBG(46742725)> CPU DETAIL: Read R 0649: 7777777777777777 
DBG(46742726)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46742728)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46742729)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46742730)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46742731)> CPU DETAIL: Result: 0060462910400000 
DBG(46742732)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46742734)> CPU CMD: Exec 0065: 04 58 0001 0021 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46742735)> CPU DETAIL: M4: 0021 
DBG(46742738)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46742739)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742740)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46742743)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46742744)> CPU DETAIL: Read R 0065: 0458000100210063 
DBG(46742745)> CPU DETAIL: Result: 0458000100280063 
DBG(46742746)> CPU DETAIL: Write 0065: 0458000100280063 
DBG(46742748)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46742749)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46742750)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46742752)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46742753)> CPU DETAIL: Read R 1557: 0000000000000014 
DBG(46742754)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46742755)> CPU DETAIL: Result: 0000000000000021 
DBG(46742756)> CPU DETAIL: Write 1557: 0000000000000021 
DBG(46742758)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46742759)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46742760)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46742761)> CPU DETAIL: Result: 5500000000000000 
DBG(46742762)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46742764)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46742765)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46742766)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46742767)> CPU DETAIL: Transfer to T 
DBG(46742769)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46742770)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46742771)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46742773)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46742774)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46742775)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46742777)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46742778)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46742779)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46742781)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46742782)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46742783)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46742785)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46742786)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46742787)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46742789)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46742790)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46742791)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46742793)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46742794)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46742795)> CPU DETAIL: Transfer to T 
DBG(46742795)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46742797)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46742798)> CPU DETAIL: Condition not present 
DBG(46742800)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46742801)> CPU DETAIL: Transfer to T 
DBG(46742803)> CPU CMD: Exec 0095: 00 60 0000 0000 0624   nop   
DBG(46742804)> CPU DETAIL: Transfer to T 
DBG(46742806)> CPU CMD: Exec 0624: 00 40 1663 1575 0625   set 0625 with (1575 Saved M6 value)   
DBG(46742807)> CPU DETAIL: Read R 1663: 0052000000000000 
DBG(46742808)> CPU DETAIL: Read S 1575: 0000000000000000 
DBG(46742809)> CPU DETAIL: Result: 0052000000000000 
DBG(46742810)> CPU DETAIL: Write 0625: 0052000000000000 
DBG(46742812)> CPU CMD: Exec 0625: 00 52 0000 0000 0000   Clear M6 then add R S T to M4 M6 M8           restore M6 to its saved value  
DBG(46742813)> CPU DETAIL: M4: 0021 
DBG(46742814)> CPU DETAIL: Clear M6
DBG(46742814)> CPU DETAIL: M6: 0000 
DBG(46742815)> CPU DETAIL: M8: 0010 
DBG(46742818)> CPU CMD: Exec 0626: 00 60 0000 0000 0145   goto process transaction   
DBG(46742819)> CPU DETAIL: Transfer to T 
DBG(46742821)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46742822)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46742823)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46742824)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46742826)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46742827)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46742828)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46742829)> CPU DETAIL: Result: 0000009898989820 
DBG(46742830)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46742832)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46742833)> CPU DETAIL: Read R 1042: 0000008898989830 
DBG(46742834)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46742835)> CPU DETAIL: Result: 0000008898989830 
DBG(46742836)> CPU DETAIL: Write 1567: 0000008898989830 
DBG(46742838)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46742839)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46742840)> CPU DETAIL: Read S 1567: 0000008898989830 
DBG(46742841)> CPU DETAIL: Diff: REG1: 0000000999999990
DBG(46742844)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46742845)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46742846)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46742848)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46742849)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46742850)> CPU DETAIL: Read S 1567: 0000008898989830 
DBG(46742851)> CPU DETAIL: Result: 0000000999999990 
DBG(46742854)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46742855)> CPU DETAIL: REG1: 0000000999999990
DBG(46742855)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46742857)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46742858)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742859)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46742861)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46742862)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46742863)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46742864)> CPU DETAIL: Result: 0000000000000003 
DBG(46742867)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46742868)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46742869)> CPU DETAIL: Result: 0000000000000010 
DBG(46742870)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46742872)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46742873)> CPU DETAIL: Read R 1570: 0000000000000010 
DBG(46742874)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46742875)> CPU DETAIL: Result: 0000000000000020 
DBG(46742878)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46742879)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46742880)> CPU DETAIL: Result: 0000000000000180 
DBG(46742883)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46742884)> CPU DETAIL: REG1: 0000000000000180
DBG(46742884)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46742886)> CPU CMD: Exec 0172: 00 60 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46742889)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46742890)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46742891)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000777777000 
DBG(46742894)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46742895)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000777777 
DBG(46742896)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46742898)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46742899)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46742900)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46742901)> CPU DETAIL: Result: 0000000000000100 
DBG(46742902)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46742905)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46742906)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46742907)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46742907)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46742908)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742909)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46742912)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46742913)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46742916)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46742917)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46742918)> CPU DETAIL: Result: 0030000000777777 
DBG(46742919)> CPU DETAIL: Write 1041: 0030000000777777 
DBG(46742921)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46742922)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46742923)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46742924)> CPU DETAIL: Result: 0000000000000000 
DBG(46742927)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46742928)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46742929)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46742929)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46742930)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742931)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46742934)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46742935)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46742938)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46742939)> CPU DETAIL: Read R 1041: 0030000000777777 
DBG(46742940)> CPU DETAIL: Result: 0030000000777777 
DBG(46742941)> CPU DETAIL: Write 1041: 0030000000777777 
DBG(46742943)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46742944)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46742945)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46742948)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46742949)> CPU DETAIL: Read R 1041: 0030000000777777 
DBG(46742950)> CPU DETAIL: Result: 0100000000777777 
DBG(46742951)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46742953)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46742954)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46742955)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46742957)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46742958)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46742959)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(46742959)> CPU DETAIL: Write 1358: 0100000000777777 
DBG(46742961)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46742962)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46742963)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46742964)> CPU DETAIL: Result: 0060104293480000 
DBG(46742965)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46742967)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46742970)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46742971)> CPU DETAIL: M8: 0011 
DBG(46742972)> CPU DETAIL: Transfer to T 
DBG(46742974)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46742975)> CPU DETAIL: Read R 1042: 0000008898989830 
DBG(46742976)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(46742976)> CPU DETAIL: Write 1359: 0000008898989830 
DBG(46742978)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46742979)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46742980)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46742981)> CPU DETAIL: Result: 0060104393480000 
DBG(46742982)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46742984)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46742987)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46742988)> CPU DETAIL: M8: 0012 
DBG(46742989)> CPU DETAIL: Transfer to T 
DBG(46742991)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46742992)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46742993)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(46742993)> CPU DETAIL: Write 1360: 0000000000000000 
DBG(46742995)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46742996)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46742997)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46742998)> CPU DETAIL: Result: 0060104493480000 
DBG(46742999)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46743001)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743004)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743005)> CPU DETAIL: M8: 0013 
DBG(46743006)> CPU DETAIL: Transfer to T 
DBG(46743008)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743009)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46743010)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(46743010)> CPU DETAIL: Write 1361: 0000000000000000 
DBG(46743012)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743013)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46743014)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743015)> CPU DETAIL: Result: 0060104593480000 
DBG(46743016)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46743018)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743021)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743022)> CPU DETAIL: M8: 0014 
DBG(46743023)> CPU DETAIL: Transfer to T 
DBG(46743025)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743026)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46743027)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(46743027)> CPU DETAIL: Write 1362: 0000000000000000 
DBG(46743029)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743030)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46743031)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743032)> CPU DETAIL: Result: 0060104693480000 
DBG(46743033)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46743035)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743038)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743039)> CPU DETAIL: M8: 0015 
DBG(46743040)> CPU DETAIL: Transfer to T 
DBG(46743042)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743043)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46743044)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(46743044)> CPU DETAIL: Write 1363: 0000000000000000 
DBG(46743046)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743047)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46743048)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743049)> CPU DETAIL: Result: 0060104793480000 
DBG(46743050)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46743052)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743055)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743056)> CPU DETAIL: M8: 0016 
DBG(46743057)> CPU DETAIL: Transfer to T 
DBG(46743059)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743060)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46743061)> CPU DETAIL: M8 Address Modifier: 0016 
DBG(46743061)> CPU DETAIL: Write 1364: 8888000099660100 
DBG(46743063)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743064)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46743065)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743066)> CPU DETAIL: Result: 0060104893480000 
DBG(46743067)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46743069)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743072)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743073)> CPU DETAIL: M8: 0017 
DBG(46743076)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46743077)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46743078)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46743080)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46743081)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46743082)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46743084)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46743085)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743086)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743087)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46743088)> CPU DETAIL: Transfer to T 
DBG(46743090)> CPU CMD: Exec 0194: 00 42 0189 1585 0202      
DBG(46743091)> CPU DETAIL: Read R 0189: 0858000100170186 
DBG(46743092)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46743093)> CPU DETAIL: Result: 0000000000170000 
DBG(46743094)> CPU DETAIL: Write 0202: 0000000000170000 
DBG(46743096)> CPU CMD: Exec 0195: 96 60 1563 0000 0000   (1563 words used by predecessors) Shift left 4 -> REG1   
DBG(46743097)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743098)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46743101)> CPU CMD: Exec 0196: 00 40 1616 0000 0000   (1616) + REG1 -> REG1   
DBG(46743102)> CPU DETAIL: Read R 1616: 0858000100000198 
DBG(46743103)> CPU DETAIL: Result: 0858000100030198 
DBG(46743106)> CPU CMD: Exec 0197: 00 40 0202 0000 0202   (0202) + REG1 -> (0202)   
DBG(46743107)> CPU DETAIL: Read R 0202: 0000000000170000 
DBG(46743108)> CPU DETAIL: Result: 0858000100200198 
DBG(46743109)> CPU DETAIL: Write 0202: 0858000100200198 
DBG(46743111)> CPU CMD: Exec 0198: 00 60 1048 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743112)> CPU DETAIL: Read R 1048: 0000009898989910 
DBG(46743113)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(46743113)> CPU DETAIL: Write 1365: 0000009898989910 
DBG(46743115)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743116)> CPU DETAIL: Read R 0198: 0060104893480000 
DBG(46743117)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743118)> CPU DETAIL: Result: 0060104993480000 
DBG(46743119)> CPU DETAIL: Write 0198: 0060104993480000 
DBG(46743121)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743122)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(46743122)> CPU DETAIL: Read R 1365: 0000009898989910 
DBG(46743123)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743124)> CPU DETAIL: Diff: REG1: 4500009898989910
DBG(46743127)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743128)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46743129)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743130)> CPU DETAIL: Result: 0000000000000001 
DBG(46743131)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46743133)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46743134)> CPU DETAIL: M8: 0018 
DBG(46743135)> CPU DETAIL: Transfer to T 
DBG(46743137)> CPU CMD: Exec 0198: 00 60 1049 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743138)> CPU DETAIL: Read R 1049: 2222222222222222 
DBG(46743139)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(46743139)> CPU DETAIL: Write 1366: 2222222222222222 
DBG(46743141)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743142)> CPU DETAIL: Read R 0198: 0060104993480000 
DBG(46743143)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743144)> CPU DETAIL: Result: 0060105093480000 
DBG(46743145)> CPU DETAIL: Write 0198: 0060105093480000 
DBG(46743147)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743148)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(46743148)> CPU DETAIL: Read R 1366: 2222222222222222 
DBG(46743149)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743150)> CPU DETAIL: Diff: REG1: 6722222222222222
DBG(46743153)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743154)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46743155)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743156)> CPU DETAIL: Result: 0000000000000002 
DBG(46743157)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46743159)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46743160)> CPU DETAIL: M8: 0019 
DBG(46743161)> CPU DETAIL: Transfer to T 
DBG(46743163)> CPU CMD: Exec 0198: 00 60 1050 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743164)> CPU DETAIL: Read R 1050: 3333333333333333 
DBG(46743165)> CPU DETAIL: M8 Address Modifier: 0019 
DBG(46743165)> CPU DETAIL: Write 1367: 3333333333333333 
DBG(46743167)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743168)> CPU DETAIL: Read R 0198: 0060105093480000 
DBG(46743169)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743170)> CPU DETAIL: Result: 0060105193480000 
DBG(46743171)> CPU DETAIL: Write 0198: 0060105193480000 
DBG(46743173)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743174)> CPU DETAIL: M8 Address Modifier: 0019 
DBG(46743174)> CPU DETAIL: Read R 1367: 3333333333333333 
DBG(46743175)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743176)> CPU DETAIL: Diff: REG1: 7833333333333333
DBG(46743179)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743180)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46743181)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743182)> CPU DETAIL: Result: 0000000000000003 
DBG(46743183)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46743185)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46743186)> CPU DETAIL: M8: 0020 
DBG(46743189)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46743190)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46743191)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46743193)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46743194)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743195)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46743197)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46743198)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46743199)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743200)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46743203)> CPU CMD: Exec 0206: 00 60 0000 0000 0217   transfer 0217   
DBG(46743204)> CPU DETAIL: Transfer to T 
DBG(46743206)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46743207)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46743208)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46743210)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46743211)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743212)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46743214)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46743215)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46743216)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46743219)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46743220)> CPU DETAIL: Read R 0189: 0858000100170186 
DBG(46743221)> CPU DETAIL: Result: 0858000100270186 
DBG(46743222)> CPU DETAIL: Write 0189: 0858000100270186 
DBG(46743224)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46743225)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743226)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46743228)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46743229)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743230)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46743232)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46743233)> CPU DETAIL: Read R 1570: 0000000000000010 
DBG(46743234)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46743235)> CPU DETAIL: Result: 0000000000000020 
DBG(46743236)> CPU DETAIL: Write 1570: 0000000000000020 
DBG(46743238)> CPU CMD: Exec 0224: 00 60 0000 0000 0096   exit if no write to tape   
DBG(46743239)> CPU DETAIL: Transfer to T 
DBG(46743241)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46743242)> CPU DETAIL: Read R 1559: 0000000000000010 
DBG(46743243)> CPU DETAIL: Read S 1561: 0000000000000000 
DBG(46743244)> CPU DETAIL: Result: 0000000000000010 
DBG(46743247)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46743248)> CPU DETAIL: REG1: 0000000000000010
DBG(46743248)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46743250)> CPU CMD: Exec 0102: 00 60 1588 1563 0000   clear (1563 num of predecessors)        
DBG(46743251)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743252)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46743254)> CPU CMD: Exec 0103: 00 60 1588 1564 0000   clear (1564 num of successors)   
DBG(46743255)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743256)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46743258)> CPU CMD: Exec 0104: 00 60 6836 1562 0000   (0836 + M6) -> (1562)                     event rec w7   
DBG(46743259)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46743259)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46743260)> CPU DETAIL: Write 1562: 0000000000000100 
DBG(46743262)> CPU CMD: Exec 0105: 02 42 1562 1582 1563   Mask (1562) with 0..0 1111 Shift 2 Right -> (1563 num of predecesors)   
DBG(46743263)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46743264)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46743265)> CPU DETAIL: Result: 0000000000000100 
DBG(46743266)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46743267)> CPU DETAIL: Write 1563: 0000000000000001 
DBG(46743269)> CPU CMD: Exec 0106: 00 42 1562 1596 1564   Mask (1562) with 0..0 0011 -> (1564 num of successors)   
DBG(46743270)> CPU DETAIL: Read R 1562: 0000000000000100 
DBG(46743271)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46743272)> CPU DETAIL: Result: 0000000000000000 
DBG(46743273)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46743275)> CPU CMD: Exec 0107: 00 40 1563 1597 0000   (1563 num of predecesors) + (1597 EXP12) -> REG1 convert integer to float   
DBG(46743276)> CPU DETAIL: Read R 1563: 0000000000000001 
DBG(46743277)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46743278)> CPU DETAIL: Result: 1200000000000001 
DBG(46743281)> CPU CMD: Exec 0108: 50 24 1598 0000 0000   Float (1598 Float 3.0) x REG1 -> REG1      x 3.0       
DBG(46743282)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46743283)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46743283)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46743284)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46743285)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46743288)> CPU CMD: Exec 0109: 00 34 1599 0000 1563   Spe Float (1599 = Float 10^-12) x REG1 -> (1563 words used by predecessors)  
DBG(46743289)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46743290)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46743290)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46743291)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743292)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46743293)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46743295)> CPU CMD: Exec 0110: 00 40 1564 1597 0000   (1564 num of successors) + (1597 EXP12) -> REG1                          
DBG(46743296)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46743297)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46743298)> CPU DETAIL: Result: 1200000000000000 
DBG(46743301)> CPU CMD: Exec 0111: 50 24 1598 0000 0000   Float (1598 = Float 3.0) x REG1 -> REG1             Now (1963) = (1563) x 3  
DBG(46743302)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46743303)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46743303)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46743304)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743305)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743308)> CPU CMD: Exec 0112: 00 34 1599 0000 1564   Spe Float (1599 0 Float 10^-12) x REG1 -> (1564 words used by successors)   
DBG(46743309)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46743310)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46743310)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46743311)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743312)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743313)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46743315)> CPU CMD: Exec 0113: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)  initial size in words of event rec    
DBG(46743316)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46743317)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46743319)> CPU CMD: Exec 0114: 00 72 1563 1588 0116   if (1563 words used by predecessors)<>0 goto 0116                       
DBG(46743320)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743321)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743322)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46743323)> CPU DETAIL: Transfer to T 
DBG(46743325)> CPU CMD: Exec 0116: 00 72 1564 1588 0118   if (1564 words used by successors)<>0 goto 0118    
DBG(46743326)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46743327)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743328)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46743331)> CPU CMD: Exec 0117: 00 60 1671 0138 0000   (1671) -> (0138)                                     ... set to tr 0138 to 0 
DBG(46743332)> CPU DETAIL: Read R 1671: 0060000000000141 
DBG(46743333)> CPU DETAIL: Write 0138: 0060000000000141 
DBG(46743335)> CPU CMD: Exec 0118: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46743336)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743337)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46743338)> CPU DETAIL: Result: 0000000000000003 
DBG(46743341)> CPU CMD: Exec 0119: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1 = (7+pred*3+succ*3)    
DBG(46743342)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46743343)> CPU DETAIL: Result: 0000000000000010 
DBG(46743344)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46743346)> CPU CMD: Exec 0120: 00 59 0000 0000 0000   REG1 = 0000 M4 M6 M8    
DBG(46743347)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0021 0000 0020
DBG(46743349)> CPU CMD: Exec 0121: 00 42 0000 1585 1575   Mask REG1 with 0..0 1111 0000 -> (1575 saved M6 value)       
DBG(46743350)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46743351)> CPU DETAIL: Result: 0000000000000000 
DBG(46743352)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(46743354)> CPU CMD: Exec 0122: 00 60 6830 1041 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743355)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46743355)> CPU DETAIL: Read R 0830: 0100000000000000 
DBG(46743356)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46743358)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743359)> CPU DETAIL: Read R 0122: 0060683010410000 
DBG(46743360)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743361)> CPU DETAIL: Result: 0060683010420000 
DBG(46743362)> CPU DETAIL: Write 0122: 0060683010420000 
DBG(46743364)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743365)> CPU DETAIL: M6: 0001 
DBG(46743366)> CPU DETAIL: Transfer to T 
DBG(46743368)> CPU CMD: Exec 0122: 00 60 6830 1042 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743369)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(46743369)> CPU DETAIL: Read R 0831: 0000009898989810 
DBG(46743370)> CPU DETAIL: Write 1042: 0000009898989810 
DBG(46743372)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743373)> CPU DETAIL: Read R 0122: 0060683010420000 
DBG(46743374)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743375)> CPU DETAIL: Result: 0060683010430000 
DBG(46743376)> CPU DETAIL: Write 0122: 0060683010430000 
DBG(46743378)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743379)> CPU DETAIL: M6: 0002 
DBG(46743380)> CPU DETAIL: Transfer to T 
DBG(46743382)> CPU CMD: Exec 0122: 00 60 6830 1043 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743383)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(46743383)> CPU DETAIL: Read R 0832: 0000000000000000 
DBG(46743384)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46743386)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743387)> CPU DETAIL: Read R 0122: 0060683010430000 
DBG(46743388)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743389)> CPU DETAIL: Result: 0060683010440000 
DBG(46743390)> CPU DETAIL: Write 0122: 0060683010440000 
DBG(46743392)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743393)> CPU DETAIL: M6: 0003 
DBG(46743394)> CPU DETAIL: Transfer to T 
DBG(46743396)> CPU CMD: Exec 0122: 00 60 6830 1044 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743397)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(46743397)> CPU DETAIL: Read R 0833: 0000000000000000 
DBG(46743398)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46743400)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743401)> CPU DETAIL: Read R 0122: 0060683010440000 
DBG(46743402)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743403)> CPU DETAIL: Result: 0060683010450000 
DBG(46743404)> CPU DETAIL: Write 0122: 0060683010450000 
DBG(46743406)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743407)> CPU DETAIL: M6: 0004 
DBG(46743408)> CPU DETAIL: Transfer to T 
DBG(46743410)> CPU CMD: Exec 0122: 00 60 6830 1045 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743411)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(46743411)> CPU DETAIL: Read R 0834: 0000000000000000 
DBG(46743412)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46743414)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743415)> CPU DETAIL: Read R 0122: 0060683010450000 
DBG(46743416)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743417)> CPU DETAIL: Result: 0060683010460000 
DBG(46743418)> CPU DETAIL: Write 0122: 0060683010460000 
DBG(46743420)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743421)> CPU DETAIL: M6: 0005 
DBG(46743422)> CPU DETAIL: Transfer to T 
DBG(46743424)> CPU CMD: Exec 0122: 00 60 6830 1046 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743425)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(46743425)> CPU DETAIL: Read R 0835: 0000000000000000 
DBG(46743426)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46743428)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743429)> CPU DETAIL: Read R 0122: 0060683010460000 
DBG(46743430)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743431)> CPU DETAIL: Result: 0060683010470000 
DBG(46743432)> CPU DETAIL: Write 0122: 0060683010470000 
DBG(46743434)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743435)> CPU DETAIL: M6: 0006 
DBG(46743436)> CPU DETAIL: Transfer to T 
DBG(46743438)> CPU CMD: Exec 0122: 00 60 6830 1047 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46743439)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(46743439)> CPU DETAIL: Read R 0836: 0000000000000100 
DBG(46743440)> CPU DETAIL: Write 1047: 0000000000000100 
DBG(46743442)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46743443)> CPU DETAIL: Read R 0122: 0060683010470000 
DBG(46743444)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743445)> CPU DETAIL: Result: 0060683010480000 
DBG(46743446)> CPU DETAIL: Write 0122: 0060683010480000 
DBG(46743448)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46743449)> CPU DETAIL: M6: 0007 
DBG(46743452)> CPU CMD: Exec 0125: 00 60 1600 0122 0000   (1600) -> (0122)                              restore instr 0122 to its init 
DBG(46743453)> CPU DETAIL: Read R 1600: 0060683010410000 
DBG(46743454)> CPU DETAIL: Write 0122: 0060683010410000 
DBG(46743456)> CPU CMD: Exec 0126: 00 42 0124 1585 0132   Mask (0124) with 0..0 1111 0000 -> (0132)     =0..0 0007 0000 = mask to get  
DBG(46743457)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46743458)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46743459)> CPU DETAIL: Result: 0000000000070000 
DBG(46743460)> CPU DETAIL: Write 0132: 0000000000070000 
DBG(46743462)> CPU CMD: Exec 0127: 96 60 1563 0000 0000   (1563 words used by predecessors) shift left 4 -> REG1                     
DBG(46743463)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743464)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46743467)> CPU CMD: Exec 0128: 00 40 0132 0000 0000   (0132) + REG1 -> REG1                         new end of loop value = previo 
DBG(46743468)> CPU DETAIL: Read R 0132: 0000000000070000 
DBG(46743469)> CPU DETAIL: Result: 0000000000100000 
DBG(46743472)> CPU CMD: Exec 0129: 00 40 1602 0000 0132   (1602) + REG1 -> (0132)                       set (0132) as 00 58 0001 (0132 
DBG(46743473)> CPU DETAIL: Read R 1602: 0658000100000130 
DBG(46743474)> CPU DETAIL: Result: 0658000100100130 
DBG(46743475)> CPU DETAIL: Write 0132: 0658000100100130 
DBG(46743477)> CPU CMD: Exec 0130: 00 60 6830 1048 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46743478)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(46743478)> CPU DETAIL: Read R 0837: 0000003398989830 
DBG(46743479)> CPU DETAIL: Write 1048: 0000003398989830 
DBG(46743481)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46743482)> CPU DETAIL: Read R 0130: 0060683010480000 
DBG(46743483)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743484)> CPU DETAIL: Result: 0060683010490000 
DBG(46743485)> CPU DETAIL: Write 0130: 0060683010490000 
DBG(46743487)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46743488)> CPU DETAIL: M6: 0008 
DBG(46743489)> CPU DETAIL: Transfer to T 
DBG(46743491)> CPU CMD: Exec 0130: 00 60 6830 1049 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46743492)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(46743492)> CPU DETAIL: Read R 0838: 0000000000033555 
DBG(46743493)> CPU DETAIL: Write 1049: 0000000000033555 
DBG(46743495)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46743496)> CPU DETAIL: Read R 0130: 0060683010490000 
DBG(46743497)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743498)> CPU DETAIL: Result: 0060683010500000 
DBG(46743499)> CPU DETAIL: Write 0130: 0060683010500000 
DBG(46743501)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46743502)> CPU DETAIL: M6: 0009 
DBG(46743503)> CPU DETAIL: Transfer to T 
DBG(46743505)> CPU CMD: Exec 0130: 00 60 6830 1050 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46743506)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(46743506)> CPU DETAIL: Read R 0839: 0000000000033666 
DBG(46743507)> CPU DETAIL: Write 1050: 0000000000033666 
DBG(46743509)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46743510)> CPU DETAIL: Read R 0130: 0060683010500000 
DBG(46743511)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46743512)> CPU DETAIL: Result: 0060683010510000 
DBG(46743513)> CPU DETAIL: Write 0130: 0060683010510000 
DBG(46743515)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46743516)> CPU DETAIL: M6: 0010 
DBG(46743519)> CPU CMD: Exec 0133: 00 60 1603 0130 0000   (1603) -> (0130)                              restore line 0130   
DBG(46743520)> CPU DETAIL: Read R 1603: 0060683010480000 
DBG(46743521)> CPU DETAIL: Write 0130: 0060683010480000 
DBG(46743523)> CPU CMD: Exec 0134: 00 42 0132 1585 0140   Mask (0132) with 0..0 1111 0000 -> (0140)     get previous loop end value   
DBG(46743524)> CPU DETAIL: Read R 0132: 0658000100100130 
DBG(46743525)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46743526)> CPU DETAIL: Result: 0000000000100000 
DBG(46743527)> CPU DETAIL: Write 0140: 0000000000100000 
DBG(46743529)> CPU CMD: Exec 0135: 96 60 1564 0000 0000   (1564 words used by successors) -> REG1      
DBG(46743530)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46743531)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(46743534)> CPU CMD: Exec 0136: 00 40 0140 0000 0000   (0140) + REG1 -> REG1                         new end of loop value = previo 
DBG(46743535)> CPU DETAIL: Read R 0140: 0000000000100000 
DBG(46743536)> CPU DETAIL: Result: 0000000000100000 
DBG(46743539)> CPU CMD: Exec 0137: 00 40 1604 0000 0140   (1604) + REG1 -> (0140)                       set end of loop value   
DBG(46743540)> CPU DETAIL: Read R 1604: 0658000100000138 
DBG(46743541)> CPU DETAIL: Result: 0658000100100138 
DBG(46743542)> CPU DETAIL: Write 0140: 0658000100100138 
DBG(46743544)> CPU CMD: Exec 0138: 00 60 0000 0000 0141   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46743545)> CPU DETAIL: Transfer to T 
DBG(46743547)> CPU CMD: Exec 0141: 00 60 1605 0138 0000   (1605) -> (0138)                              reset instr 0138 to its initia 
DBG(46743548)> CPU DETAIL: Read R 1605: 0060683011480000 
DBG(46743549)> CPU DETAIL: Write 0138: 0060683011480000 
DBG(46743551)> CPU CMD: Exec 0142: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46743552)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46743553)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46743556)> CPU CMD: Exec 0143: 00 40 0124 0000 0124   (0124) + REG1   
DBG(46743557)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46743558)> CPU DETAIL: Result: 0658000100170122 
DBG(46743559)> CPU DETAIL: Write 0124: 0658000100170122 
DBG(46743561)> CPU CMD: Exec 0144: 00 40 1561 1565 1561   (1561 words read from event block) += (1565 num of words in event rec)   
DBG(46743562)> CPU DETAIL: Read R 1561: 0000000000000000 
DBG(46743563)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46743564)> CPU DETAIL: Result: 0000000000000010 
DBG(46743565)> CPU DETAIL: Write 1561: 0000000000000010 
DBG(46743567)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46743568)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46743569)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46743570)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46743572)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46743573)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46743574)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46743575)> CPU DETAIL: Result: 0000009898989820 
DBG(46743576)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46743578)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46743579)> CPU DETAIL: Read R 1042: 0000009898989810 
DBG(46743580)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46743581)> CPU DETAIL: Result: 0000009898989810 
DBG(46743582)> CPU DETAIL: Write 1567: 0000009898989810 
DBG(46743584)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46743585)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46743586)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46743587)> CPU DETAIL: Diff: REG1: 0000000000000010
DBG(46743590)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46743591)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46743592)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46743594)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46743595)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46743596)> CPU DETAIL: Read S 1567: 0000009898989810 
DBG(46743597)> CPU DETAIL: Result: 0000000000000010 
DBG(46743600)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46743601)> CPU DETAIL: REG1: 0000000000000010
DBG(46743601)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46743603)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46743604)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46743605)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46743607)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46743608)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743609)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46743610)> CPU DETAIL: Result: 0000000000000003 
DBG(46743613)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46743614)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46743615)> CPU DETAIL: Result: 0000000000000010 
DBG(46743616)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46743618)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46743619)> CPU DETAIL: Read R 1570: 0000000000000020 
DBG(46743620)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46743621)> CPU DETAIL: Result: 0000000000000030 
DBG(46743624)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46743625)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46743626)> CPU DETAIL: Result: 0000000000000170 
DBG(46743629)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46743630)> CPU DETAIL: REG1: 0000000000000170
DBG(46743630)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46743632)> CPU CMD: Exec 0172: 00 60 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46743635)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46743636)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46743637)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000000000000 
DBG(46743640)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46743641)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000000000 
DBG(46743642)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46743644)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46743645)> CPU DETAIL: Read R 1047: 0000000000000100 
DBG(46743646)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46743647)> CPU DETAIL: Result: 0000000000000100 
DBG(46743648)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46743651)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46743652)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46743653)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46743653)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46743654)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743655)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46743658)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46743659)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46743662)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46743663)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46743664)> CPU DETAIL: Result: 0030000000000000 
DBG(46743665)> CPU DETAIL: Write 1041: 0030000000000000 
DBG(46743667)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46743668)> CPU DETAIL: Read R 1047: 0000000000000100 
DBG(46743669)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46743670)> CPU DETAIL: Result: 0000000000000000 
DBG(46743673)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46743674)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46743675)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46743675)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46743676)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743677)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46743680)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46743681)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46743684)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46743685)> CPU DETAIL: Read R 1041: 0030000000000000 
DBG(46743686)> CPU DETAIL: Result: 0030000000000000 
DBG(46743687)> CPU DETAIL: Write 1041: 0030000000000000 
DBG(46743689)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46743690)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46743691)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46743694)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46743695)> CPU DETAIL: Read R 1041: 0030000000000000 
DBG(46743696)> CPU DETAIL: Result: 0100000000000000 
DBG(46743697)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46743699)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46743700)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46743701)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46743703)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743704)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46743705)> CPU DETAIL: M8 Address Modifier: 0020 
DBG(46743705)> CPU DETAIL: Write 1368: 0100000000000000 
DBG(46743707)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743708)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46743709)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743710)> CPU DETAIL: Result: 0060104293480000 
DBG(46743711)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46743713)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743716)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743717)> CPU DETAIL: M8: 0021 
DBG(46743718)> CPU DETAIL: Transfer to T 
DBG(46743720)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743721)> CPU DETAIL: Read R 1042: 0000009898989810 
DBG(46743722)> CPU DETAIL: M8 Address Modifier: 0021 
DBG(46743722)> CPU DETAIL: Write 1369: 0000009898989810 
DBG(46743724)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743725)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46743726)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743727)> CPU DETAIL: Result: 0060104393480000 
DBG(46743728)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46743730)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743733)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743734)> CPU DETAIL: M8: 0022 
DBG(46743735)> CPU DETAIL: Transfer to T 
DBG(46743737)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743738)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46743739)> CPU DETAIL: M8 Address Modifier: 0022 
DBG(46743739)> CPU DETAIL: Write 1370: 0000000000000000 
DBG(46743741)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743742)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46743743)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743744)> CPU DETAIL: Result: 0060104493480000 
DBG(46743745)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46743747)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743750)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743751)> CPU DETAIL: M8: 0023 
DBG(46743752)> CPU DETAIL: Transfer to T 
DBG(46743754)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743755)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46743756)> CPU DETAIL: M8 Address Modifier: 0023 
DBG(46743756)> CPU DETAIL: Write 1371: 0000000000000000 
DBG(46743758)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743759)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46743760)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743761)> CPU DETAIL: Result: 0060104593480000 
DBG(46743762)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46743764)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743767)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743768)> CPU DETAIL: M8: 0024 
DBG(46743769)> CPU DETAIL: Transfer to T 
DBG(46743771)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743772)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46743773)> CPU DETAIL: M8 Address Modifier: 0024 
DBG(46743773)> CPU DETAIL: Write 1372: 0000000000000000 
DBG(46743775)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743776)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46743777)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743778)> CPU DETAIL: Result: 0060104693480000 
DBG(46743779)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46743781)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743784)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743785)> CPU DETAIL: M8: 0025 
DBG(46743786)> CPU DETAIL: Transfer to T 
DBG(46743788)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743789)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46743790)> CPU DETAIL: M8 Address Modifier: 0025 
DBG(46743790)> CPU DETAIL: Write 1373: 0000000000000000 
DBG(46743792)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743793)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46743794)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743795)> CPU DETAIL: Result: 0060104793480000 
DBG(46743796)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46743798)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743801)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743802)> CPU DETAIL: M8: 0026 
DBG(46743803)> CPU DETAIL: Transfer to T 
DBG(46743805)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46743806)> CPU DETAIL: Read R 1047: 0000000000000100 
DBG(46743807)> CPU DETAIL: M8 Address Modifier: 0026 
DBG(46743807)> CPU DETAIL: Write 1374: 0000000000000100 
DBG(46743809)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46743810)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46743811)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743812)> CPU DETAIL: Result: 0060104893480000 
DBG(46743813)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46743815)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46743818)> CPU CMD: Exec 0189: 08 58 0001 0027 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46743819)> CPU DETAIL: M8: 0027 
DBG(46743822)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46743823)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46743824)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46743826)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46743827)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46743828)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46743830)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46743831)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743832)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743833)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46743834)> CPU DETAIL: Transfer to T 
DBG(46743836)> CPU CMD: Exec 0194: 00 42 0189 1585 0202      
DBG(46743837)> CPU DETAIL: Read R 0189: 0858000100270186 
DBG(46743838)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46743839)> CPU DETAIL: Result: 0000000000270000 
DBG(46743840)> CPU DETAIL: Write 0202: 0000000000270000 
DBG(46743842)> CPU CMD: Exec 0195: 96 60 1563 0000 0000   (1563 words used by predecessors) Shift left 4 -> REG1   
DBG(46743843)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46743844)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46743847)> CPU CMD: Exec 0196: 00 40 1616 0000 0000   (1616) + REG1 -> REG1   
DBG(46743848)> CPU DETAIL: Read R 1616: 0858000100000198 
DBG(46743849)> CPU DETAIL: Result: 0858000100030198 
DBG(46743852)> CPU CMD: Exec 0197: 00 40 0202 0000 0202   (0202) + REG1 -> (0202)   
DBG(46743853)> CPU DETAIL: Read R 0202: 0000000000270000 
DBG(46743854)> CPU DETAIL: Result: 0858000100300198 
DBG(46743855)> CPU DETAIL: Write 0202: 0858000100300198 
DBG(46743857)> CPU CMD: Exec 0198: 00 60 1048 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743858)> CPU DETAIL: Read R 1048: 0000003398989830 
DBG(46743859)> CPU DETAIL: M8 Address Modifier: 0027 
DBG(46743859)> CPU DETAIL: Write 1375: 0000003398989830 
DBG(46743861)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743862)> CPU DETAIL: Read R 0198: 0060104893480000 
DBG(46743863)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743864)> CPU DETAIL: Result: 0060104993480000 
DBG(46743865)> CPU DETAIL: Write 0198: 0060104993480000 
DBG(46743867)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743868)> CPU DETAIL: M8 Address Modifier: 0027 
DBG(46743868)> CPU DETAIL: Read R 1375: 0000003398989830 
DBG(46743869)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743870)> CPU DETAIL: Diff: REG1: 4500003398989830
DBG(46743873)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743874)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46743875)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743876)> CPU DETAIL: Result: 0000000000000001 
DBG(46743877)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46743879)> CPU CMD: Exec 0202: 08 58 0001 0030 0198      
DBG(46743880)> CPU DETAIL: M8: 0028 
DBG(46743881)> CPU DETAIL: Transfer to T 
DBG(46743883)> CPU CMD: Exec 0198: 00 60 1049 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743884)> CPU DETAIL: Read R 1049: 0000000000033555 
DBG(46743885)> CPU DETAIL: M8 Address Modifier: 0028 
DBG(46743885)> CPU DETAIL: Write 1376: 0000000000033555 
DBG(46743887)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743888)> CPU DETAIL: Read R 0198: 0060104993480000 
DBG(46743889)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743890)> CPU DETAIL: Result: 0060105093480000 
DBG(46743891)> CPU DETAIL: Write 0198: 0060105093480000 
DBG(46743893)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743894)> CPU DETAIL: M8 Address Modifier: 0028 
DBG(46743894)> CPU DETAIL: Read R 1376: 0000000000033555 
DBG(46743895)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743896)> CPU DETAIL: Diff: REG1: 4500000000033555
DBG(46743899)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743900)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46743901)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743902)> CPU DETAIL: Result: 0000000000000002 
DBG(46743903)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46743905)> CPU CMD: Exec 0202: 08 58 0001 0030 0198      
DBG(46743906)> CPU DETAIL: M8: 0029 
DBG(46743907)> CPU DETAIL: Transfer to T 
DBG(46743909)> CPU CMD: Exec 0198: 00 60 1050 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46743910)> CPU DETAIL: Read R 1050: 0000000000033666 
DBG(46743911)> CPU DETAIL: M8 Address Modifier: 0029 
DBG(46743911)> CPU DETAIL: Write 1377: 0000000000033666 
DBG(46743913)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46743914)> CPU DETAIL: Read R 0198: 0060105093480000 
DBG(46743915)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46743916)> CPU DETAIL: Result: 0060105193480000 
DBG(46743917)> CPU DETAIL: Write 0198: 0060105193480000 
DBG(46743919)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46743920)> CPU DETAIL: M8 Address Modifier: 0029 
DBG(46743920)> CPU DETAIL: Read R 1377: 0000000000033666 
DBG(46743921)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46743922)> CPU DETAIL: Diff: REG1: 4500000000033666
DBG(46743925)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46743926)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46743927)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46743928)> CPU DETAIL: Result: 0000000000000003 
DBG(46743929)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46743931)> CPU CMD: Exec 0202: 08 58 0001 0030 0198      
DBG(46743932)> CPU DETAIL: M8: 0030 
DBG(46743935)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46743936)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46743937)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46743939)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46743940)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743941)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46743943)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46743944)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46743945)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46743946)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46743949)> CPU CMD: Exec 0206: 00 60 0000 0000 0217   transfer 0217   
DBG(46743950)> CPU DETAIL: Transfer to T 
DBG(46743952)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46743953)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46743954)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46743956)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46743957)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743958)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46743960)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46743961)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46743962)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46743965)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46743966)> CPU DETAIL: Read R 0189: 0858000100270186 
DBG(46743967)> CPU DETAIL: Result: 0858000100370186 
DBG(46743968)> CPU DETAIL: Write 0189: 0858000100370186 
DBG(46743970)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46743971)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743972)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46743974)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46743975)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743976)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46743978)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46743979)> CPU DETAIL: Read R 1570: 0000000000000020 
DBG(46743980)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46743981)> CPU DETAIL: Result: 0000000000000030 
DBG(46743982)> CPU DETAIL: Write 1570: 0000000000000030 
DBG(46743984)> CPU CMD: Exec 0224: 00 60 0000 0000 0096   exit if no write to tape   
DBG(46743985)> CPU DETAIL: Transfer to T 
DBG(46743987)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46743988)> CPU DETAIL: Read R 1559: 0000000000000010 
DBG(46743989)> CPU DETAIL: Read S 1561: 0000000000000010 
DBG(46743990)> CPU DETAIL: Result: 0000000000000000 
DBG(46743993)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46743994)> CPU DETAIL: REG1: 0000000000000000
DBG(46743994)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46743996)> CPU CMD: Exec 0099: 00 60 1588 1561 0000   clear (1561 words read from event block) because event block fully processed 
DBG(46743997)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46743998)> CPU DETAIL: Write 1561: 0000000000000000 
DBG(46744000)> CPU CMD: Exec 0100: 00 60 1595 0056 0000   (1595) -> (0056)   
DBG(46744001)> CPU DETAIL: Read R 1595: 0060000000000102 
DBG(46744002)> CPU DETAIL: Write 0056: 0060000000000102 
DBG(46744004)> CPU CMD: Exec 0101: 00 60 1601 0124 0046   (1601) -> (0124), transfer to 0046        goto read next event block from ta 
DBG(46744005)> CPU DETAIL: Read R 1601: 0658000100070122 
DBG(46744006)> CPU DETAIL: Transfer to T 
DBG(46744006)> CPU DETAIL: Write 0124: 0658000100070122 
DBG(46744008)> CPU CMD: Exec 0046: 03 94 0830 0000 0002   read tape 03 block 0001 at (0830 event block read from tape)   
DBG(46744009)> CPU DETAIL: Tape operation on MT3, Addr 0830->0000, Block Number 0002
DBG(46744009)> MT DATA: Tape unit 3: init read
DBG(46744009)> MT DETAIL: Read tape record (218 chars, used 1.93 inches, needs 11 msec) from tape 3
DBG(46744009)> MT DETAIL: Tape record contents: D*0390030103100002C*0100000000000000C*0000009898989820C*00000000000000...
DBG(46744009)> MT EXP: Start Of Block Word: 0390030103100002
DBG(46744009)> MT EXP: Read Tape Block number 0002
DBG(46744009)> MT EXP: Read forward addr 0830 to 0000
DBG(46744009)> MT EXP: Tape to CRT 0830: 0100000000000000 
DBG(46744009)> MT EXP: Tape to CRT 0831: 0000009898989820 
DBG(46744009)> MT EXP: Tape to CRT 0832: 0000000000000000 
DBG(46744009)> MT EXP: Tape to CRT 0833: 0000000000000000 
DBG(46744009)> MT EXP: Tape to CRT 0834: 0000000000000000 
DBG(46744009)> MT EXP: Tape to CRT 0835: 0000000000000000 
DBG(46744009)> MT EXP: Tape to CRT 0836: 0000000000000001 
DBG(46744009)> MT EXP: Tape to CRT 0837: 0000009898989830 
DBG(46744009)> MT EXP: Tape to CRT 0838: 0000000000009555 
DBG(46744009)> MT EXP: Tape to CRT 0839: 0000000000009666 
DBG(46744009)> MT EXP: End Of Block Word: 0390030103100002, data words in block: 10
DBG(46744009)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.03% of medium (5.46 inches)
DBG(46744012)> CPU CMD: Exec 0047: 08 68 0047 0000 1687   if tape check Call 1687 Re-read   
DBG(46744013)> CPU DETAIL: Condition not present 
DBG(46744015)> CPU CMD: Exec 0048: 00 67 0000 0000 0607   if EOF transfer to 0607   
DBG(46744016)> CPU DETAIL: Condition not present 
DBG(46744018)> CPU CMD: Exec 0049: 00 60 0000 1558 0000   REG1->(1558  tape read start of block word)   
DBG(46744019)> CPU DETAIL: Write 1558: 0390030103100002 
DBG(46744021)> CPU CMD: Exec 0050: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)           
DBG(46744022)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744023)> CPU DETAIL: Result: 0000000003100000 
DBG(46744024)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000310 
DBG(46744025)> CPU DETAIL: Write 1555: 0000000000000310 
DBG(46744027)> CPU CMD: Exec 0051: 08 42 1558 1586 0000   Mask and shift start of block: aaaa -> (REG1)   
DBG(46744028)> CPU DETAIL: Read R 1558: 0390030103100002 
DBG(46744029)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46744030)> CPU DETAIL: Result: 0000030100000000 
DBG(46744031)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(46744034)> CPU CMD: Exec 0052: 00 41 1555 0000 1559   (1555) - REG2 -> (1559 words in event block)   
DBG(46744035)> CPU DETAIL: Read R 1555: 0000000000000310 
DBG(46744036)> CPU DETAIL: Result: 0000000000000009 
DBG(46744037)> CPU DETAIL: Write 1559: 0000000000000009 
DBG(46744039)> CPU CMD: Exec 0053: 00 40 1587 0000 1559          + 1 -> (1559 words in event block)    
DBG(46744040)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46744041)> CPU DETAIL: Result: 0000000000000010 
DBG(46744042)> CPU DETAIL: Write 1559: 0000000000000010 
DBG(46744044)> CPU CMD: Exec 0054: 00 52 0000 0000 0000   Clear M6 then add R S T to M4 M6 M8                  read first event from b 
DBG(46744045)> CPU DETAIL: M4: 0021 
DBG(46744046)> CPU DETAIL: Clear M6
DBG(46744046)> CPU DETAIL: M6: 0000 
DBG(46744047)> CPU DETAIL: M8: 0030 
DBG(46744050)> CPU CMD: Exec 0055: 00 40 0046 1587 0046   (0046) + 1 -> (0046)                                 incr block num to read  
DBG(46744051)> CPU DETAIL: Read R 0046: 0394083000000002 
DBG(46744052)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744053)> CPU DETAIL: Result: 0394083000000003 
DBG(46744054)> CPU DETAIL: Write 0046: 0394083000000003 
DBG(46744056)> CPU CMD: Exec 0056: 00 60 0000 0000 0102   nop    
DBG(46744057)> CPU DETAIL: Transfer to T 
DBG(46744059)> CPU CMD: Exec 0102: 00 60 1588 1563 0000   clear (1563 num of predecessors)        
DBG(46744060)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46744061)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46744063)> CPU CMD: Exec 0103: 00 60 1588 1564 0000   clear (1564 num of successors)   
DBG(46744064)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46744065)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46744067)> CPU CMD: Exec 0104: 00 60 6836 1562 0000   (0836 + M6) -> (1562)                     event rec w7   
DBG(46744068)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46744068)> CPU DETAIL: Read R 0836: 0000000000000001 
DBG(46744069)> CPU DETAIL: Write 1562: 0000000000000001 
DBG(46744071)> CPU CMD: Exec 0105: 02 42 1562 1582 1563   Mask (1562) with 0..0 1111 Shift 2 Right -> (1563 num of predecesors)   
DBG(46744072)> CPU DETAIL: Read R 1562: 0000000000000001 
DBG(46744073)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46744074)> CPU DETAIL: Result: 0000000000000001 
DBG(46744075)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(46744076)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46744078)> CPU CMD: Exec 0106: 00 42 1562 1596 1564   Mask (1562) with 0..0 0011 -> (1564 num of successors)   
DBG(46744079)> CPU DETAIL: Read R 1562: 0000000000000001 
DBG(46744080)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46744081)> CPU DETAIL: Result: 0000000000000001 
DBG(46744082)> CPU DETAIL: Write 1564: 0000000000000001 
DBG(46744084)> CPU CMD: Exec 0107: 00 40 1563 1597 0000   (1563 num of predecesors) + (1597 EXP12) -> REG1 convert integer to float   
DBG(46744085)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46744086)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46744087)> CPU DETAIL: Result: 1200000000000000 
DBG(46744090)> CPU CMD: Exec 0108: 50 24 1598 0000 0000   Float (1598 Float 3.0) x REG1 -> REG1      x 3.0       
DBG(46744091)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46744092)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46744092)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46744093)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46744094)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46744097)> CPU CMD: Exec 0109: 00 34 1599 0000 1563   Spe Float (1599 = Float 10^-12) x REG1 -> (1563 words used by predecessors)  
DBG(46744098)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46744099)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46744099)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46744100)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46744101)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46744102)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46744104)> CPU CMD: Exec 0110: 00 40 1564 1597 0000   (1564 num of successors) + (1597 EXP12) -> REG1                          
DBG(46744105)> CPU DETAIL: Read R 1564: 0000000000000001 
DBG(46744106)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46744107)> CPU DETAIL: Result: 1200000000000001 
DBG(46744110)> CPU CMD: Exec 0111: 50 24 1598 0000 0000   Float (1598 = Float 3.0) x REG1 -> REG1             Now (1963) = (1563) x 3  
DBG(46744111)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46744112)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46744112)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46744113)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46744114)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46744117)> CPU CMD: Exec 0112: 00 34 1599 0000 1564   Spe Float (1599 0 Float 10^-12) x REG1 -> (1564 words used by successors)   
DBG(46744118)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46744119)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46744119)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46744120)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46744121)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46744122)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46744124)> CPU CMD: Exec 0113: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)  initial size in words of event rec    
DBG(46744125)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46744126)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46744128)> CPU CMD: Exec 0114: 00 72 1563 1588 0116   if (1563 words used by predecessors)<>0 goto 0116                       
DBG(46744129)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46744130)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46744131)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744134)> CPU CMD: Exec 0115: 00 60 1670 0130 0000   (1670) -> (0130), transfer 0118 ... set to skip copy precessesors   
DBG(46744135)> CPU DETAIL: Read R 1670: 0060000000000133 
DBG(46744136)> CPU DETAIL: Write 0130: 0060000000000133 
DBG(46744138)> CPU CMD: Exec 0116: 00 72 1564 1588 0118   if (1564 words used by successors)<>0 goto 0118    
DBG(46744139)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46744140)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46744141)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46744142)> CPU DETAIL: Transfer to T 
DBG(46744144)> CPU CMD: Exec 0118: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46744145)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46744146)> CPU DETAIL: Read S 1564: 0000000000000003 
DBG(46744147)> CPU DETAIL: Result: 0000000000000003 
DBG(46744150)> CPU CMD: Exec 0119: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1 = (7+pred*3+succ*3)    
DBG(46744151)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46744152)> CPU DETAIL: Result: 0000000000000010 
DBG(46744153)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46744155)> CPU CMD: Exec 0120: 00 59 0000 0000 0000   REG1 = 0000 M4 M6 M8    
DBG(46744156)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0021 0000 0030
DBG(46744158)> CPU CMD: Exec 0121: 00 42 0000 1585 1575   Mask REG1 with 0..0 1111 0000 -> (1575 saved M6 value)       
DBG(46744159)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744160)> CPU DETAIL: Result: 0000000000000000 
DBG(46744161)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(46744163)> CPU CMD: Exec 0122: 00 60 6830 1041 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744164)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46744164)> CPU DETAIL: Read R 0830: 0100000000000000 
DBG(46744165)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46744167)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744168)> CPU DETAIL: Read R 0122: 0060683010410000 
DBG(46744169)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744170)> CPU DETAIL: Result: 0060683010420000 
DBG(46744171)> CPU DETAIL: Write 0122: 0060683010420000 
DBG(46744173)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744174)> CPU DETAIL: M6: 0001 
DBG(46744175)> CPU DETAIL: Transfer to T 
DBG(46744177)> CPU CMD: Exec 0122: 00 60 6830 1042 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744178)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(46744178)> CPU DETAIL: Read R 0831: 0000009898989820 
DBG(46744179)> CPU DETAIL: Write 1042: 0000009898989820 
DBG(46744181)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744182)> CPU DETAIL: Read R 0122: 0060683010420000 
DBG(46744183)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744184)> CPU DETAIL: Result: 0060683010430000 
DBG(46744185)> CPU DETAIL: Write 0122: 0060683010430000 
DBG(46744187)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744188)> CPU DETAIL: M6: 0002 
DBG(46744189)> CPU DETAIL: Transfer to T 
DBG(46744191)> CPU CMD: Exec 0122: 00 60 6830 1043 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744192)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(46744192)> CPU DETAIL: Read R 0832: 0000000000000000 
DBG(46744193)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46744195)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744196)> CPU DETAIL: Read R 0122: 0060683010430000 
DBG(46744197)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744198)> CPU DETAIL: Result: 0060683010440000 
DBG(46744199)> CPU DETAIL: Write 0122: 0060683010440000 
DBG(46744201)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744202)> CPU DETAIL: M6: 0003 
DBG(46744203)> CPU DETAIL: Transfer to T 
DBG(46744205)> CPU CMD: Exec 0122: 00 60 6830 1044 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744206)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(46744206)> CPU DETAIL: Read R 0833: 0000000000000000 
DBG(46744207)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46744209)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744210)> CPU DETAIL: Read R 0122: 0060683010440000 
DBG(46744211)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744212)> CPU DETAIL: Result: 0060683010450000 
DBG(46744213)> CPU DETAIL: Write 0122: 0060683010450000 
DBG(46744215)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744216)> CPU DETAIL: M6: 0004 
DBG(46744217)> CPU DETAIL: Transfer to T 
DBG(46744219)> CPU CMD: Exec 0122: 00 60 6830 1045 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744220)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(46744220)> CPU DETAIL: Read R 0834: 0000000000000000 
DBG(46744221)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46744223)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744224)> CPU DETAIL: Read R 0122: 0060683010450000 
DBG(46744225)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744226)> CPU DETAIL: Result: 0060683010460000 
DBG(46744227)> CPU DETAIL: Write 0122: 0060683010460000 
DBG(46744229)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744230)> CPU DETAIL: M6: 0005 
DBG(46744231)> CPU DETAIL: Transfer to T 
DBG(46744233)> CPU CMD: Exec 0122: 00 60 6830 1046 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744234)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(46744234)> CPU DETAIL: Read R 0835: 0000000000000000 
DBG(46744235)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46744237)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744238)> CPU DETAIL: Read R 0122: 0060683010460000 
DBG(46744239)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744240)> CPU DETAIL: Result: 0060683010470000 
DBG(46744241)> CPU DETAIL: Write 0122: 0060683010470000 
DBG(46744243)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744244)> CPU DETAIL: M6: 0006 
DBG(46744245)> CPU DETAIL: Transfer to T 
DBG(46744247)> CPU CMD: Exec 0122: 00 60 6830 1047 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46744248)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(46744248)> CPU DETAIL: Read R 0836: 0000000000000001 
DBG(46744249)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46744251)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46744252)> CPU DETAIL: Read R 0122: 0060683010470000 
DBG(46744253)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744254)> CPU DETAIL: Result: 0060683010480000 
DBG(46744255)> CPU DETAIL: Write 0122: 0060683010480000 
DBG(46744257)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46744258)> CPU DETAIL: M6: 0007 
DBG(46744261)> CPU CMD: Exec 0125: 00 60 1600 0122 0000   (1600) -> (0122)                              restore instr 0122 to its init 
DBG(46744262)> CPU DETAIL: Read R 1600: 0060683010410000 
DBG(46744263)> CPU DETAIL: Write 0122: 0060683010410000 
DBG(46744265)> CPU CMD: Exec 0126: 00 42 0124 1585 0132   Mask (0124) with 0..0 1111 0000 -> (0132)     =0..0 0007 0000 = mask to get  
DBG(46744266)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46744267)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744268)> CPU DETAIL: Result: 0000000000070000 
DBG(46744269)> CPU DETAIL: Write 0132: 0000000000070000 
DBG(46744271)> CPU CMD: Exec 0127: 96 60 1563 0000 0000   (1563 words used by predecessors) shift left 4 -> REG1                     
DBG(46744272)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46744273)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(46744276)> CPU CMD: Exec 0128: 00 40 0132 0000 0000   (0132) + REG1 -> REG1                         new end of loop value = previo 
DBG(46744277)> CPU DETAIL: Read R 0132: 0000000000070000 
DBG(46744278)> CPU DETAIL: Result: 0000000000070000 
DBG(46744281)> CPU CMD: Exec 0129: 00 40 1602 0000 0132   (1602) + REG1 -> (0132)                       set (0132) as 00 58 0001 (0132 
DBG(46744282)> CPU DETAIL: Read R 1602: 0658000100000130 
DBG(46744283)> CPU DETAIL: Result: 0658000100070130 
DBG(46744284)> CPU DETAIL: Write 0132: 0658000100070130 
DBG(46744286)> CPU CMD: Exec 0130: 00 60 0000 0000 0133   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46744287)> CPU DETAIL: Transfer to T 
DBG(46744289)> CPU CMD: Exec 0133: 00 60 1603 0130 0000   (1603) -> (0130)                              restore line 0130   
DBG(46744290)> CPU DETAIL: Read R 1603: 0060683010480000 
DBG(46744291)> CPU DETAIL: Write 0130: 0060683010480000 
DBG(46744293)> CPU CMD: Exec 0134: 00 42 0132 1585 0140   Mask (0132) with 0..0 1111 0000 -> (0140)     get previous loop end value   
DBG(46744294)> CPU DETAIL: Read R 0132: 0658000100070130 
DBG(46744295)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744296)> CPU DETAIL: Result: 0000000000070000 
DBG(46744297)> CPU DETAIL: Write 0140: 0000000000070000 
DBG(46744299)> CPU CMD: Exec 0135: 96 60 1564 0000 0000   (1564 words used by successors) -> REG1      
DBG(46744300)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46744301)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46744304)> CPU CMD: Exec 0136: 00 40 0140 0000 0000   (0140) + REG1 -> REG1                         new end of loop value = previo 
DBG(46744305)> CPU DETAIL: Read R 0140: 0000000000070000 
DBG(46744306)> CPU DETAIL: Result: 0000000000100000 
DBG(46744309)> CPU CMD: Exec 0137: 00 40 1604 0000 0140   (1604) + REG1 -> (0140)                       set end of loop value   
DBG(46744310)> CPU DETAIL: Read R 1604: 0658000100000138 
DBG(46744311)> CPU DETAIL: Result: 0658000100100138 
DBG(46744312)> CPU DETAIL: Write 0140: 0658000100100138 
DBG(46744314)> CPU CMD: Exec 0138: 00 60 6830 1148 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46744315)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(46744315)> CPU DETAIL: Read R 0837: 0000009898989830 
DBG(46744316)> CPU DETAIL: Write 1148: 0000009898989830 
DBG(46744318)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46744319)> CPU DETAIL: Read R 0138: 0060683011480000 
DBG(46744320)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744321)> CPU DETAIL: Result: 0060683011490000 
DBG(46744322)> CPU DETAIL: Write 0138: 0060683011490000 
DBG(46744324)> CPU CMD: Exec 0140: 06 58 0001 0010 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46744325)> CPU DETAIL: M6: 0008 
DBG(46744326)> CPU DETAIL: Transfer to T 
DBG(46744328)> CPU CMD: Exec 0138: 00 60 6830 1149 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46744329)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(46744329)> CPU DETAIL: Read R 0838: 0000000000009555 
DBG(46744330)> CPU DETAIL: Write 1149: 0000000000009555 
DBG(46744332)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46744333)> CPU DETAIL: Read R 0138: 0060683011490000 
DBG(46744334)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744335)> CPU DETAIL: Result: 0060683011500000 
DBG(46744336)> CPU DETAIL: Write 0138: 0060683011500000 
DBG(46744338)> CPU CMD: Exec 0140: 06 58 0001 0010 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46744339)> CPU DETAIL: M6: 0009 
DBG(46744340)> CPU DETAIL: Transfer to T 
DBG(46744342)> CPU CMD: Exec 0138: 00 60 6830 1150 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46744343)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(46744343)> CPU DETAIL: Read R 0839: 0000000000009666 
DBG(46744344)> CPU DETAIL: Write 1150: 0000000000009666 
DBG(46744346)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46744347)> CPU DETAIL: Read R 0138: 0060683011500000 
DBG(46744348)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744349)> CPU DETAIL: Result: 0060683011510000 
DBG(46744350)> CPU DETAIL: Write 0138: 0060683011510000 
DBG(46744352)> CPU CMD: Exec 0140: 06 58 0001 0010 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46744353)> CPU DETAIL: M6: 0010 
DBG(46744356)> CPU CMD: Exec 0141: 00 60 1605 0138 0000   (1605) -> (0138)                              reset instr 0138 to its initia 
DBG(46744357)> CPU DETAIL: Read R 1605: 0060683011480000 
DBG(46744358)> CPU DETAIL: Write 0138: 0060683011480000 
DBG(46744360)> CPU CMD: Exec 0142: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46744361)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46744362)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46744365)> CPU CMD: Exec 0143: 00 40 0124 0000 0124   (0124) + REG1   
DBG(46744366)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46744367)> CPU DETAIL: Result: 0658000100170122 
DBG(46744368)> CPU DETAIL: Write 0124: 0658000100170122 
DBG(46744370)> CPU CMD: Exec 0144: 00 40 1561 1565 1561   (1561 words read from event block) += (1565 num of words in event rec)   
DBG(46744371)> CPU DETAIL: Read R 1561: 0000000000000000 
DBG(46744372)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46744373)> CPU DETAIL: Result: 0000000000000010 
DBG(46744374)> CPU DETAIL: Write 1561: 0000000000000010 
DBG(46744376)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46744377)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46744378)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46744379)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46744381)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46744382)> CPU DETAIL: Read R 1033: 1011009898989820 
DBG(46744383)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744384)> CPU DETAIL: Result: 0000009898989820 
DBG(46744385)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46744387)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46744388)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46744389)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744390)> CPU DETAIL: Result: 0000009898989820 
DBG(46744391)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46744393)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46744394)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46744395)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46744396)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744397)> CPU DETAIL: Transfer to T 
DBG(46744399)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46744400)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46744401)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46744402)> CPU DETAIL: Result: 0000000000000000 
DBG(46744405)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46744406)> CPU DETAIL: REG1: 0000000000000000
DBG(46744406)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46744408)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46744409)> CPU DETAIL: Read R 1569: 0000000000000001 
DBG(46744410)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744411)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744412)> CPU DETAIL: Transfer to T 
DBG(46744414)> CPU CMD: Exec 0422: 00 70 1564 1588 0421   if (1564 words used by successors)=0 goto 0421 (when adding succesor)    
DBG(46744415)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46744416)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46744417)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46744420)> CPU CMD: Exec 0423: 00 42 1036 1606 1568   mask (1036 transac w4) to get event code -> (1568 transac event code)   
DBG(46744421)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46744422)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744423)> CPU DETAIL: Result: 0000009898989840 
DBG(46744424)> CPU DETAIL: Write 1568: 0000009898989840 
DBG(46744426)> CPU CMD: Exec 0424: 00 42 1148 1606 1562   mask (1148 successor list) to get event code       1562=successor event code 
DBG(46744427)> CPU DETAIL: Read R 1148: 0000009898989830 
DBG(46744428)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744429)> CPU DETAIL: Result: 0000009898989830 
DBG(46744430)> CPU DETAIL: Write 1562: 0000009898989830 
DBG(46744432)> CPU CMD: Exec 0425: 00 41 1568 0000 0000   (1568 event code in transac w4) - (event code in event rec successor w1) ->  
DBG(46744433)> CPU DETAIL: Read R 1568: 0000009898989840 
DBG(46744434)> CPU DETAIL: Result: 0000000000000010 
DBG(46744437)> CPU CMD: Exec 0426: 00 63 0428 0000 0439   TR >0 goto 0428, =0 cont, <0 goto 0439 cont if same event code   
DBG(46744438)> CPU DETAIL: REG1: 0000000000000010
DBG(46744438)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744440)> CPU CMD: Exec 0428: 00 40 0424 1626 0424   (0424) += 3 current word selected in successor list   
DBG(46744441)> CPU DETAIL: Read R 0424: 0042114816061562 
DBG(46744442)> CPU DETAIL: Read S 1626: 0000000300000000 
DBG(46744443)> CPU DETAIL: Result: 0042115116061562 
DBG(46744444)> CPU DETAIL: Write 0424: 0042115116061562 
DBG(46744446)> CPU CMD: Exec 0429: 00 40 1623 1571 1571   (1571 current word selected in successor list) += 3    
DBG(46744447)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46744448)> CPU DETAIL: Read S 1571: 0000000000000000 
DBG(46744449)> CPU DETAIL: Result: 0000000000000003 
DBG(46744450)> CPU DETAIL: Write 1571: 0000000000000003 
DBG(46744452)> CPU CMD: Exec 0430: 00 60 1148 1248 0000   (1148 successor list w1) -> (1248)           if current code in successor li 
DBG(46744453)> CPU DETAIL: Read R 1148: 0000009898989830 
DBG(46744454)> CPU DETAIL: Write 1248: 0000009898989830 
DBG(46744456)> CPU CMD: Exec 0431: 00 40 0430 1629 0432   incr_R incr_S                                 at 1148 if < to code to insert 
DBG(46744457)> CPU DETAIL: Read R 0430: 0060114812480000 
DBG(46744458)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744459)> CPU DETAIL: Result: 0060114912490000 
DBG(46744460)> CPU DETAIL: Write 0432: 0060114912490000 
DBG(46744462)> CPU CMD: Exec 0432: 00 60 1149 1249 0000   (1149 event successor w1) -> (1249)           copy current successor activit 
DBG(46744463)> CPU DETAIL: Read R 1149: 0000000000009555 
DBG(46744464)> CPU DETAIL: Write 1249: 0000000000009555 
DBG(46744466)> CPU CMD: Exec 0433: 00 40 0432 1629 0434   incr_R incr_S                                 to 1248+ list   
DBG(46744467)> CPU DETAIL: Read R 0432: 0060114912490000 
DBG(46744468)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744469)> CPU DETAIL: Result: 0060115012500000 
DBG(46744470)> CPU DETAIL: Write 0434: 0060115012500000 
DBG(46744472)> CPU CMD: Exec 0434: 00 60 1150 1250 0000   (1150 event successor w1) -> (1250)   
DBG(46744473)> CPU DETAIL: Read R 1150: 0000000000009666 
DBG(46744474)> CPU DETAIL: Write 1250: 0000000000009666 
DBG(46744476)> CPU CMD: Exec 0435: 00 40 0434 1629 0430   incr_R incr_S -> set at 0430   
DBG(46744477)> CPU DETAIL: Read R 0434: 0060115012500000 
DBG(46744478)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744479)> CPU DETAIL: Result: 0060115112510000 
DBG(46744480)> CPU DETAIL: Write 0430: 0060115112510000 
DBG(46744482)> CPU CMD: Exec 0436: 00 41 1564 1571 0000   (1564 words used by successors) - (1571 current word selected in successor l 
DBG(46744483)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46744484)> CPU DETAIL: Read S 1571: 0000000000000003 
DBG(46744485)> CPU DETAIL: Result: 0000000000000000 
DBG(46744488)> CPU CMD: Exec 0437: 00 63 0424 0454 0000   TR >0 goto 0424, =0 goto 0454, <0 cont        if =0 add successor at list's  
DBG(46744489)> CPU DETAIL: REG1: 0000000000000000
DBG(46744489)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46744491)> CPU CMD: Exec 0454: 00 60 1614 0439 0000      
DBG(46744492)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46744493)> CPU DETAIL: Write 0439: 0060000000000000 
DBG(46744495)> CPU CMD: Exec 0455: 00 70 1587 1574 0457   const 1 -> (1574), transfer 0457   
DBG(46744496)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46744497)> CPU DETAIL: Read S 1574: 0000000000000000 
DBG(46744498)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46744501)> CPU CMD: Exec 0456: 00 60 1655 0453 0440      
DBG(46744502)> CPU DETAIL: Read R 1655: 0060165404530457 
DBG(46744503)> CPU DETAIL: Transfer to T 
DBG(46744503)> CPU DETAIL: Write 0453: 0060165404530457 
DBG(46744505)> CPU CMD: Exec 0440: 00 42 1036 1593 0000   Mask (1036 transac rec w4) with (550..0)   
DBG(46744506)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46744507)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46744508)> CPU DETAIL: Result: 5500000000000000 
DBG(46744511)> CPU CMD: Exec 0441: 00 41 1036 0000 1036   set 2 leftmost digits to 00 on (1036 transac rec w4)   
DBG(46744512)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46744513)> CPU DETAIL: Result: 0000009898989840 
DBG(46744514)> CPU DETAIL: Write 1036: 0000009898989840 
DBG(46744516)> CPU CMD: Exec 0442: 00 42 0430 1585 0000   Mask (0430) with 0..0 1111 0000 -> 0..0 1248 0000   
DBG(46744517)> CPU DETAIL: Read R 0430: 0060115112510000 
DBG(46744518)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744519)> CPU DETAIL: Result: 0000000012510000 
DBG(46744522)> CPU CMD: Exec 0443: 00 40 1639 0000 0444   set   
DBG(46744523)> CPU DETAIL: Read R 1639: 0060103600000000 
DBG(46744524)> CPU DETAIL: Result: 0060103612510000 
DBG(46744525)> CPU DETAIL: Write 0444: 0060103612510000 
DBG(46744527)> CPU CMD: Exec 0444: 00 60 1036 1251 0000   transfer (trans w4 1036) -> (1248)   
DBG(46744528)> CPU DETAIL: Read R 1036: 0000009898989840 
DBG(46744529)> CPU DETAIL: Write 1251: 0000009898989840 
DBG(46744531)> CPU CMD: Exec 0445: 00 40 0444 1629 0446   inc_R inc_s previous instr   
DBG(46744532)> CPU DETAIL: Read R 0444: 0060103612510000 
DBG(46744533)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744534)> CPU DETAIL: Result: 0060103712520000 
DBG(46744535)> CPU DETAIL: Write 0446: 0060103712520000 
DBG(46744537)> CPU CMD: Exec 0446: 00 60 1037 1252 0000   transfer (trans w5 1037) -> (1249)    
DBG(46744538)> CPU DETAIL: Read R 1037: 5555555555555555 
DBG(46744539)> CPU DETAIL: Write 1252: 5555555555555555 
DBG(46744541)> CPU CMD: Exec 0447: 00 40 0446 1629 0448   inc_R inc_s previous instr   
DBG(46744542)> CPU DETAIL: Read R 0446: 0060103712520000 
DBG(46744543)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744544)> CPU DETAIL: Result: 0060103812530000 
DBG(46744545)> CPU DETAIL: Write 0448: 0060103812530000 
DBG(46744547)> CPU CMD: Exec 0448: 00 60 1038 1253 0000   transfer (trans w6 1038) -> (1250)    
DBG(46744548)> CPU DETAIL: Read R 1038: 6666666666666666 
DBG(46744549)> CPU DETAIL: Write 1253: 6666666666666666 
DBG(46744551)> CPU CMD: Exec 0449: 04 60 1626 0000 0000   30000 -> REG1   
DBG(46744552)> CPU DETAIL: Read R 1626: 0000000300000000 
DBG(46744553)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000030000 
DBG(46744556)> CPU CMD: Exec 0450: 00 40 0430 0000 0430   incr S by 3 in instr 0430    
DBG(46744557)> CPU DETAIL: Read R 0430: 0060115112510000 
DBG(46744558)> CPU DETAIL: Result: 0060115112540000 
DBG(46744559)> CPU DETAIL: Write 0430: 0060115112540000 
DBG(46744561)> CPU CMD: Exec 0451: 00 60 1587 1574 0000   const 1 -> (1574)   
DBG(46744562)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46744563)> CPU DETAIL: Write 1574: 0000000000000001 
DBG(46744565)> CPU CMD: Exec 0452: 00 40 1047 1587 1047   (1047 event rec w7) -= BB            w7 = xx xx xxxx xxxx AABB, AA=num of pr 
DBG(46744566)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46744567)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744568)> CPU DETAIL: Result: 0000000000000002 
DBG(46744569)> CPU DETAIL: Write 1047: 0000000000000002 
DBG(46744571)> CPU CMD: Exec 0453: 00 60 1654 0453 0457      
DBG(46744572)> CPU DETAIL: Read R 1654: 0060164004390428 
DBG(46744573)> CPU DETAIL: Transfer to T 
DBG(46744573)> CPU DETAIL: Write 0453: 0060164004390428 
DBG(46744575)> CPU CMD: Exec 0457: 00 40 1564 1623 1564   (1564 words used by successors) += 3   
DBG(46744576)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46744577)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46744578)> CPU DETAIL: Result: 0000000000000006 
DBG(46744579)> CPU DETAIL: Write 1564: 0000000000000006 
DBG(46744581)> CPU CMD: Exec 0458: 00 60 1641 0430 0000   restore instr 0430 to its initial value    
DBG(46744582)> CPU DETAIL: Read R 1641: 0060114812480000 
DBG(46744583)> CPU DETAIL: Write 0430: 0060114812480000 
DBG(46744585)> CPU CMD: Exec 0459: 00 60 1588 1571 0000   clear (1571 current word selected in successor list)   
DBG(46744586)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46744587)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46744589)> CPU CMD: Exec 0460: 00 42 0424 1582 0000   Mask (0424) with 0..01111 -> 1562   
DBG(46744590)> CPU DETAIL: Read R 0424: 0042115116061562 
DBG(46744591)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46744592)> CPU DETAIL: Result: 0000000000001562 
DBG(46744595)> CPU CMD: Exec 0461: 00 40 1630 0000 0424      
DBG(46744596)> CPU DETAIL: Read R 1630: 0042114816060000 
DBG(46744597)> CPU DETAIL: Result: 0042114816061562 
DBG(46744598)> CPU DETAIL: Write 0424: 0042114816061562 
DBG(46744600)> CPU CMD: Exec 0462: 00 60 1248 1148 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744601)> CPU DETAIL: Read R 1248: 0000009898989830 
DBG(46744602)> CPU DETAIL: Write 1148: 0000009898989830 
DBG(46744604)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744605)> CPU DETAIL: Read R 0462: 0060124811480000 
DBG(46744606)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744607)> CPU DETAIL: Result: 0060124911490000 
DBG(46744608)> CPU DETAIL: Write 0462: 0060124911490000 
DBG(46744610)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744611)> CPU DETAIL: Read R 1571: 0000000000000000 
DBG(46744612)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744613)> CPU DETAIL: Result: 0000000000000001 
DBG(46744614)> CPU DETAIL: Write 1571: 0000000000000001 
DBG(46744616)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744617)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744618)> CPU DETAIL: Result: 0000000000000005 
DBG(46744621)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744622)> CPU DETAIL: REG1: 0000000000000005
DBG(46744622)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744624)> CPU CMD: Exec 0462: 00 60 1249 1149 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744625)> CPU DETAIL: Read R 1249: 0000000000009555 
DBG(46744626)> CPU DETAIL: Write 1149: 0000000000009555 
DBG(46744628)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744629)> CPU DETAIL: Read R 0462: 0060124911490000 
DBG(46744630)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744631)> CPU DETAIL: Result: 0060125011500000 
DBG(46744632)> CPU DETAIL: Write 0462: 0060125011500000 
DBG(46744634)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744635)> CPU DETAIL: Read R 1571: 0000000000000001 
DBG(46744636)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744637)> CPU DETAIL: Result: 0000000000000002 
DBG(46744638)> CPU DETAIL: Write 1571: 0000000000000002 
DBG(46744640)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744641)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744642)> CPU DETAIL: Result: 0000000000000004 
DBG(46744645)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744646)> CPU DETAIL: REG1: 0000000000000004
DBG(46744646)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744648)> CPU CMD: Exec 0462: 00 60 1250 1150 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744649)> CPU DETAIL: Read R 1250: 0000000000009666 
DBG(46744650)> CPU DETAIL: Write 1150: 0000000000009666 
DBG(46744652)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744653)> CPU DETAIL: Read R 0462: 0060125011500000 
DBG(46744654)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744655)> CPU DETAIL: Result: 0060125111510000 
DBG(46744656)> CPU DETAIL: Write 0462: 0060125111510000 
DBG(46744658)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744659)> CPU DETAIL: Read R 1571: 0000000000000002 
DBG(46744660)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744661)> CPU DETAIL: Result: 0000000000000003 
DBG(46744662)> CPU DETAIL: Write 1571: 0000000000000003 
DBG(46744664)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744665)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744666)> CPU DETAIL: Result: 0000000000000003 
DBG(46744669)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744670)> CPU DETAIL: REG1: 0000000000000003
DBG(46744670)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744672)> CPU CMD: Exec 0462: 00 60 1251 1151 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744673)> CPU DETAIL: Read R 1251: 0000009898989840 
DBG(46744674)> CPU DETAIL: Write 1151: 0000009898989840 
DBG(46744676)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744677)> CPU DETAIL: Read R 0462: 0060125111510000 
DBG(46744678)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744679)> CPU DETAIL: Result: 0060125211520000 
DBG(46744680)> CPU DETAIL: Write 0462: 0060125211520000 
DBG(46744682)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744683)> CPU DETAIL: Read R 1571: 0000000000000003 
DBG(46744684)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744685)> CPU DETAIL: Result: 0000000000000004 
DBG(46744686)> CPU DETAIL: Write 1571: 0000000000000004 
DBG(46744688)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744689)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744690)> CPU DETAIL: Result: 0000000000000002 
DBG(46744693)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744694)> CPU DETAIL: REG1: 0000000000000002
DBG(46744694)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744696)> CPU CMD: Exec 0462: 00 60 1252 1152 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744697)> CPU DETAIL: Read R 1252: 5555555555555555 
DBG(46744698)> CPU DETAIL: Write 1152: 5555555555555555 
DBG(46744700)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744701)> CPU DETAIL: Read R 0462: 0060125211520000 
DBG(46744702)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744703)> CPU DETAIL: Result: 0060125311530000 
DBG(46744704)> CPU DETAIL: Write 0462: 0060125311530000 
DBG(46744706)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744707)> CPU DETAIL: Read R 1571: 0000000000000004 
DBG(46744708)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744709)> CPU DETAIL: Result: 0000000000000005 
DBG(46744710)> CPU DETAIL: Write 1571: 0000000000000005 
DBG(46744712)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744713)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744714)> CPU DETAIL: Result: 0000000000000001 
DBG(46744717)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744718)> CPU DETAIL: REG1: 0000000000000001
DBG(46744718)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744720)> CPU CMD: Exec 0462: 00 60 1253 1153 0000   (1248 trans w4..w6) -> (1148..1150) event succesor w1..w3 in list   
DBG(46744721)> CPU DETAIL: Read R 1253: 6666666666666666 
DBG(46744722)> CPU DETAIL: Write 1153: 6666666666666666 
DBG(46744724)> CPU CMD: Exec 0463: 00 40 0462 1629 0462   inc_R inc_s previous instr   
DBG(46744725)> CPU DETAIL: Read R 0462: 0060125311530000 
DBG(46744726)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46744727)> CPU DETAIL: Result: 0060125411540000 
DBG(46744728)> CPU DETAIL: Write 0462: 0060125411540000 
DBG(46744730)> CPU CMD: Exec 0464: 00 40 1571 1587 1571   inc (1571 current word selected in successor list)   
DBG(46744731)> CPU DETAIL: Read R 1571: 0000000000000005 
DBG(46744732)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744733)> CPU DETAIL: Result: 0000000000000006 
DBG(46744734)> CPU DETAIL: Write 1571: 0000000000000006 
DBG(46744736)> CPU CMD: Exec 0465: 00 41 1564 0000 0000   REG1 = (1564 num words used by successors) - (1571 current word selected in  
DBG(46744737)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46744738)> CPU DETAIL: Result: 0000000000000000 
DBG(46744741)> CPU CMD: Exec 0466: 00 63 0462 0468 0000   TR >0 goto 0462, =0 goto 0468,    
DBG(46744742)> CPU DETAIL: REG1: 0000000000000000
DBG(46744742)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46744744)> CPU CMD: Exec 0468: 00 60 1642 0462 0000   restore instr 0462 to its initial value       
DBG(46744745)> CPU DETAIL: Read R 1642: 0060124811480000 
DBG(46744746)> CPU DETAIL: Write 0462: 0060124811480000 
DBG(46744748)> CPU CMD: Exec 0469: 00 60 1588 1571 0000   clear (1571 current word selected in successor list)   
DBG(46744749)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46744750)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46744752)> CPU CMD: Exec 0470: 00 60 1588 1574 0290   clear 1574. goto 0290 (from there go to process next transaction)   
DBG(46744753)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46744754)> CPU DETAIL: Transfer to T 
DBG(46744754)> CPU DETAIL: Write 1574: 0000000000000000 
DBG(46744756)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46744757)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46744758)> CPU DETAIL: Transfer to T 
DBG(46744758)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46744760)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46744761)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46744762)> CPU DETAIL: Read S 1557: 0000000000000021 
DBG(46744763)> CPU DETAIL: Result: 0000000000000021 
DBG(46744766)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46744767)> CPU DETAIL: REG1: 0000000000000021
DBG(46744767)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46744769)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744770)> CPU DETAIL: M4 Address Modifier: 0021 
DBG(46744770)> CPU DETAIL: Read R 0650: 1011009898989850 
DBG(46744771)> CPU DETAIL: Write 1033: 1011009898989850 
DBG(46744773)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744774)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46744775)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744776)> CPU DETAIL: Result: 0060462910340000 
DBG(46744777)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46744779)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744780)> CPU DETAIL: M4: 0022 
DBG(46744781)> CPU DETAIL: Transfer to T 
DBG(46744783)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744784)> CPU DETAIL: M4 Address Modifier: 0022 
DBG(46744784)> CPU DETAIL: Read R 0651: 2222222222222222 
DBG(46744785)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46744787)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744788)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46744789)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744790)> CPU DETAIL: Result: 0060462910350000 
DBG(46744791)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46744793)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744794)> CPU DETAIL: M4: 0023 
DBG(46744795)> CPU DETAIL: Transfer to T 
DBG(46744797)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744798)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(46744798)> CPU DETAIL: Read R 0652: 3333333333333333 
DBG(46744799)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46744801)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744802)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46744803)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744804)> CPU DETAIL: Result: 0060462910360000 
DBG(46744805)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46744807)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744808)> CPU DETAIL: M4: 0024 
DBG(46744809)> CPU DETAIL: Transfer to T 
DBG(46744811)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744812)> CPU DETAIL: M4 Address Modifier: 0024 
DBG(46744812)> CPU DETAIL: Read R 0653: 6600009898989820 
DBG(46744813)> CPU DETAIL: Write 1036: 6600009898989820 
DBG(46744815)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744816)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46744817)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744818)> CPU DETAIL: Result: 0060462910370000 
DBG(46744819)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46744821)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744822)> CPU DETAIL: M4: 0025 
DBG(46744823)> CPU DETAIL: Transfer to T 
DBG(46744825)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744826)> CPU DETAIL: M4 Address Modifier: 0025 
DBG(46744826)> CPU DETAIL: Read R 0654: 5555555555555555 
DBG(46744827)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46744829)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744830)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46744831)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744832)> CPU DETAIL: Result: 0060462910380000 
DBG(46744833)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46744835)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744836)> CPU DETAIL: M4: 0026 
DBG(46744837)> CPU DETAIL: Transfer to T 
DBG(46744839)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744840)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(46744840)> CPU DETAIL: Read R 0655: 6666666666666666 
DBG(46744841)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46744843)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744844)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46744845)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744846)> CPU DETAIL: Result: 0060462910390000 
DBG(46744847)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46744849)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744850)> CPU DETAIL: M4: 0027 
DBG(46744851)> CPU DETAIL: Transfer to T 
DBG(46744853)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46744854)> CPU DETAIL: M4 Address Modifier: 0027 
DBG(46744854)> CPU DETAIL: Read R 0656: 7777777777777777 
DBG(46744855)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46744857)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46744858)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46744859)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46744860)> CPU DETAIL: Result: 0060462910400000 
DBG(46744861)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46744863)> CPU CMD: Exec 0065: 04 58 0001 0028 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46744864)> CPU DETAIL: M4: 0028 
DBG(46744867)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46744868)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46744869)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46744872)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46744873)> CPU DETAIL: Read R 0065: 0458000100280063 
DBG(46744874)> CPU DETAIL: Result: 0458000100350063 
DBG(46744875)> CPU DETAIL: Write 0065: 0458000100350063 
DBG(46744877)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46744878)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46744879)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46744881)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46744882)> CPU DETAIL: Read R 1557: 0000000000000021 
DBG(46744883)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46744884)> CPU DETAIL: Result: 0000000000000028 
DBG(46744885)> CPU DETAIL: Write 1557: 0000000000000028 
DBG(46744887)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46744888)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46744889)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46744890)> CPU DETAIL: Result: 6600000000000000 
DBG(46744891)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46744893)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46744894)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46744895)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46744898)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46744899)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46744900)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46744901)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744902)> CPU DETAIL: Transfer to T 
DBG(46744904)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46744905)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46744906)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46744908)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46744909)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46744910)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46744912)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46744913)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46744914)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46744916)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46744917)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46744918)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46744920)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46744921)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46744922)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46744924)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46744925)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46744926)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46744928)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46744929)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46744930)> CPU DETAIL: Transfer to T 
DBG(46744930)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46744932)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46744933)> CPU DETAIL: Condition not present 
DBG(46744935)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46744936)> CPU DETAIL: Transfer to T 
DBG(46744938)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46744939)> CPU DETAIL: Transfer to T 
DBG(46744941)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46744942)> CPU DETAIL: Read R 1033: 1011009898989850 
DBG(46744943)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46744944)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46744946)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46744947)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46744948)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744949)> CPU DETAIL: Result: 0000009898989820 
DBG(46744950)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46744952)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46744953)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46744954)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46744955)> CPU DETAIL: Result: 0000009898989820 
DBG(46744956)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46744958)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46744959)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46744960)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46744961)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744962)> CPU DETAIL: Transfer to T 
DBG(46744964)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46744965)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46744966)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46744967)> CPU DETAIL: Result: 0000000000000000 
DBG(46744970)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46744971)> CPU DETAIL: REG1: 0000000000000000
DBG(46744971)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46744973)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46744974)> CPU DETAIL: Read R 1569: 0000000000000001 
DBG(46744975)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46744976)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744977)> CPU DETAIL: Transfer to T 
DBG(46744979)> CPU CMD: Exec 0422: 00 60 0000 0000 0471   if (1564 words used by successors)=0 goto 0421 (when adding succesor)    
DBG(46744980)> CPU DETAIL: Transfer to T 
DBG(46744982)> CPU CMD: Exec 0471: 00 72 1563 1588 0473   if (1563 words used by predecessors)<>0 goto 0473    
DBG(46744983)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46744984)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46744985)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46744988)> CPU CMD: Exec 0472: 00 60 1679 0504 0489   (1679) -> (0504), transfer 0489   
DBG(46744989)> CPU DETAIL: Read R 1679: 0060166005040000 
DBG(46744990)> CPU DETAIL: Transfer to T 
DBG(46744990)> CPU DETAIL: Write 0504: 0060166005040000 
DBG(46744992)> CPU CMD: Exec 0489: 00 60 0000 0000 0000   nop   
DBG(46744995)> CPU CMD: Exec 0490: 04 42 0480 1585 0000   Mask (0480) with 0..0 1111 0000 -> 0..0 1248 0000   
DBG(46744996)> CPU DETAIL: Read R 0480: 0060104812480000 
DBG(46744997)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46744998)> CPU DETAIL: Result: 0000000012480000 
DBG(46744999)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001248 
DBG(46745002)> CPU CMD: Exec 0491: 00 40 1658 0000 0492      
DBG(46745003)> CPU DETAIL: Read R 1658: 0042103316060000 
DBG(46745004)> CPU DETAIL: Result: 0042103316061248 
DBG(46745005)> CPU DETAIL: Write 0492: 0042103316061248 
DBG(46745007)> CPU CMD: Exec 0492: 00 42 1033 1606 1248   Mask (1033 transac w1) with 0..0 111111111 0 -> get transac PPP predecessor  
DBG(46745008)> CPU DETAIL: Read R 1033: 1011009898989850 
DBG(46745009)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745010)> CPU DETAIL: Result: 0000009898989850 
DBG(46745011)> CPU DETAIL: Write 1248: 0000009898989850 
DBG(46745013)> CPU CMD: Exec 0493: 96 42 0492 1582 0000   Mask prev instr to store PPP in (1248)   
DBG(46745014)> CPU DETAIL: Read R 0492: 0042103316061248 
DBG(46745015)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46745016)> CPU DETAIL: Result: 0000000000001248 
DBG(46745017)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000012480000 
DBG(46745020)> CPU CMD: Exec 0494: 00 40 1657 0000 0000   store (1034 transac w2) in (1249)   
DBG(46745021)> CPU DETAIL: Read R 1657: 0060103400000000 
DBG(46745022)> CPU DETAIL: Result: 0060103412480000 
DBG(46745025)> CPU CMD: Exec 0495: 00 40 1590 0000 0496   store (1035 transac w3) in (1250)   
DBG(46745026)> CPU DETAIL: Read R 1590: 0000000000010000 
DBG(46745027)> CPU DETAIL: Result: 0060103412490000 
DBG(46745028)> CPU DETAIL: Write 0496: 0060103412490000 
DBG(46745030)> CPU CMD: Exec 0496: 00 60 1034 1249 0000      
DBG(46745031)> CPU DETAIL: Read R 1034: 2222222222222222 
DBG(46745032)> CPU DETAIL: Write 1249: 2222222222222222 
DBG(46745034)> CPU CMD: Exec 0497: 00 40 0496 1629 0498      
DBG(46745035)> CPU DETAIL: Read R 0496: 0060103412490000 
DBG(46745036)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745037)> CPU DETAIL: Result: 0060103512500000 
DBG(46745038)> CPU DETAIL: Write 0498: 0060103512500000 
DBG(46745040)> CPU CMD: Exec 0498: 00 60 1035 1250 0000      
DBG(46745041)> CPU DETAIL: Read R 1035: 3333333333333333 
DBG(46745042)> CPU DETAIL: Write 1250: 3333333333333333 
DBG(46745044)> CPU CMD: Exec 0499: 04 60 1626 0000 0000       
DBG(46745045)> CPU DETAIL: Read R 1626: 0000000300000000 
DBG(46745046)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000030000 
DBG(46745049)> CPU CMD: Exec 0500: 00 40 0480 0000 0480      
DBG(46745050)> CPU DETAIL: Read R 0480: 0060104812480000 
DBG(46745051)> CPU DETAIL: Result: 0060104812510000 
DBG(46745052)> CPU DETAIL: Write 0480: 0060104812510000 
DBG(46745054)> CPU CMD: Exec 0501: 00 60 1587 1574 0000   1 -> (1574)     
DBG(46745055)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46745056)> CPU DETAIL: Write 1574: 0000000000000001 
DBG(46745058)> CPU CMD: Exec 0502: 98 60 1587 0000 0000   100 -> REG1   
DBG(46745059)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46745060)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000100 
DBG(46745063)> CPU CMD: Exec 0503: 00 40 1047 0000 1047   (1047 event rec w7) -= AA xx            w7 = xx xx xxxx xxxx AABB, AA=num of 
DBG(46745064)> CPU DETAIL: Read R 1047: 0000000000000002 
DBG(46745065)> CPU DETAIL: Result: 0000000000000102 
DBG(46745066)> CPU DETAIL: Write 1047: 0000000000000102 
DBG(46745068)> CPU CMD: Exec 0504: 00 60 1660 0504 0000      
DBG(46745069)> CPU DETAIL: Read R 1660: 0060165904890478 
DBG(46745070)> CPU DETAIL: Write 0504: 0060165904890478 
DBG(46745072)> CPU CMD: Exec 0505: 00 60 1614 0489 0000      
DBG(46745073)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745074)> CPU DETAIL: Write 0489: 0060000000000000 
DBG(46745076)> CPU CMD: Exec 0506: 00 70 1587 1574 0508      
DBG(46745077)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46745078)> CPU DETAIL: Read S 1574: 0000000000000001 
DBG(46745079)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745080)> CPU DETAIL: Transfer to T 
DBG(46745082)> CPU CMD: Exec 0508: 00 40 1563 1623 1563            
DBG(46745083)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46745084)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46745085)> CPU DETAIL: Result: 0000000000000003 
DBG(46745086)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46745088)> CPU CMD: Exec 0509: 00 60 1588 1571 0000      
DBG(46745089)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745090)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46745092)> CPU CMD: Exec 0510: 00 60 1662 0480 0000      
DBG(46745093)> CPU DETAIL: Read R 1662: 0060104812480000 
DBG(46745094)> CPU DETAIL: Write 0480: 0060104812480000 
DBG(46745096)> CPU CMD: Exec 0511: 00 42 0474 1582 0000      
DBG(46745097)> CPU DETAIL: Read R 0474: 0042104816061562 
DBG(46745098)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46745099)> CPU DETAIL: Result: 0000000000001562 
DBG(46745102)> CPU CMD: Exec 0512: 00 40 1632 0000 0474      
DBG(46745103)> CPU DETAIL: Read R 1632: 0042104816060000 
DBG(46745104)> CPU DETAIL: Result: 0042104816061562 
DBG(46745105)> CPU DETAIL: Write 0474: 0042104816061562 
DBG(46745107)> CPU CMD: Exec 0513: 00 60 1248 1048 0000      
DBG(46745108)> CPU DETAIL: Read R 1248: 0000009898989850 
DBG(46745109)> CPU DETAIL: Write 1048: 0000009898989850 
DBG(46745111)> CPU CMD: Exec 0514: 00 40 0513 1629 0513      
DBG(46745112)> CPU DETAIL: Read R 0513: 0060124810480000 
DBG(46745113)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745114)> CPU DETAIL: Result: 0060124910490000 
DBG(46745115)> CPU DETAIL: Write 0513: 0060124910490000 
DBG(46745117)> CPU CMD: Exec 0515: 00 40 1571 1587 1571      
DBG(46745118)> CPU DETAIL: Read R 1571: 0000000000000000 
DBG(46745119)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745120)> CPU DETAIL: Result: 0000000000000001 
DBG(46745121)> CPU DETAIL: Write 1571: 0000000000000001 
DBG(46745123)> CPU CMD: Exec 0516: 00 41 1563 0000 0000      
DBG(46745124)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46745125)> CPU DETAIL: Result: 0000000000000002 
DBG(46745128)> CPU CMD: Exec 0517: 00 63 0513 0519 0000   TR >0 goto 0513, =0 goto 0519,    
DBG(46745129)> CPU DETAIL: REG1: 0000000000000002
DBG(46745129)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46745131)> CPU CMD: Exec 0513: 00 60 1249 1049 0000      
DBG(46745132)> CPU DETAIL: Read R 1249: 2222222222222222 
DBG(46745133)> CPU DETAIL: Write 1049: 2222222222222222 
DBG(46745135)> CPU CMD: Exec 0514: 00 40 0513 1629 0513      
DBG(46745136)> CPU DETAIL: Read R 0513: 0060124910490000 
DBG(46745137)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745138)> CPU DETAIL: Result: 0060125010500000 
DBG(46745139)> CPU DETAIL: Write 0513: 0060125010500000 
DBG(46745141)> CPU CMD: Exec 0515: 00 40 1571 1587 1571      
DBG(46745142)> CPU DETAIL: Read R 1571: 0000000000000001 
DBG(46745143)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745144)> CPU DETAIL: Result: 0000000000000002 
DBG(46745145)> CPU DETAIL: Write 1571: 0000000000000002 
DBG(46745147)> CPU CMD: Exec 0516: 00 41 1563 0000 0000      
DBG(46745148)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46745149)> CPU DETAIL: Result: 0000000000000001 
DBG(46745152)> CPU CMD: Exec 0517: 00 63 0513 0519 0000   TR >0 goto 0513, =0 goto 0519,    
DBG(46745153)> CPU DETAIL: REG1: 0000000000000001
DBG(46745153)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46745155)> CPU CMD: Exec 0513: 00 60 1250 1050 0000      
DBG(46745156)> CPU DETAIL: Read R 1250: 3333333333333333 
DBG(46745157)> CPU DETAIL: Write 1050: 3333333333333333 
DBG(46745159)> CPU CMD: Exec 0514: 00 40 0513 1629 0513      
DBG(46745160)> CPU DETAIL: Read R 0513: 0060125010500000 
DBG(46745161)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745162)> CPU DETAIL: Result: 0060125110510000 
DBG(46745163)> CPU DETAIL: Write 0513: 0060125110510000 
DBG(46745165)> CPU CMD: Exec 0515: 00 40 1571 1587 1571      
DBG(46745166)> CPU DETAIL: Read R 1571: 0000000000000002 
DBG(46745167)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745168)> CPU DETAIL: Result: 0000000000000003 
DBG(46745169)> CPU DETAIL: Write 1571: 0000000000000003 
DBG(46745171)> CPU CMD: Exec 0516: 00 41 1563 0000 0000      
DBG(46745172)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46745173)> CPU DETAIL: Result: 0000000000000000 
DBG(46745176)> CPU CMD: Exec 0517: 00 63 0513 0519 0000   TR >0 goto 0513, =0 goto 0519,    
DBG(46745177)> CPU DETAIL: REG1: 0000000000000000
DBG(46745177)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46745179)> CPU CMD: Exec 0519: 00 60 1673 0513 0000      
DBG(46745180)> CPU DETAIL: Read R 1673: 0060124810480000 
DBG(46745181)> CPU DETAIL: Write 0513: 0060124810480000 
DBG(46745183)> CPU CMD: Exec 0520: 00 60 1588 1571 0470      
DBG(46745184)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745185)> CPU DETAIL: Transfer to T 
DBG(46745185)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46745187)> CPU CMD: Exec 0470: 00 60 1588 1574 0290   clear 1574. goto 0290 (from there go to process next transaction)   
DBG(46745188)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745189)> CPU DETAIL: Transfer to T 
DBG(46745189)> CPU DETAIL: Write 1574: 0000000000000000 
DBG(46745191)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46745192)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46745193)> CPU DETAIL: Transfer to T 
DBG(46745193)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46745195)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46745196)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46745197)> CPU DETAIL: Read S 1557: 0000000000000028 
DBG(46745198)> CPU DETAIL: Result: 0000000000000014 
DBG(46745201)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46745202)> CPU DETAIL: REG1: 0000000000000014
DBG(46745202)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46745204)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745205)> CPU DETAIL: M4 Address Modifier: 0028 
DBG(46745205)> CPU DETAIL: Read R 0657: 2011009898989820 
DBG(46745206)> CPU DETAIL: Write 1033: 2011009898989820 
DBG(46745208)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745209)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46745210)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745211)> CPU DETAIL: Result: 0060462910340000 
DBG(46745212)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46745214)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745215)> CPU DETAIL: M4: 0029 
DBG(46745216)> CPU DETAIL: Transfer to T 
DBG(46745218)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745219)> CPU DETAIL: M4 Address Modifier: 0029 
DBG(46745219)> CPU DETAIL: Read R 0658: 2222222222222222 
DBG(46745220)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46745222)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745223)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46745224)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745225)> CPU DETAIL: Result: 0060462910350000 
DBG(46745226)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46745228)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745229)> CPU DETAIL: M4: 0030 
DBG(46745230)> CPU DETAIL: Transfer to T 
DBG(46745232)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745233)> CPU DETAIL: M4 Address Modifier: 0030 
DBG(46745233)> CPU DETAIL: Read R 0659: 3333333333333333 
DBG(46745234)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46745236)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745237)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46745238)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745239)> CPU DETAIL: Result: 0060462910360000 
DBG(46745240)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46745242)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745243)> CPU DETAIL: M4: 0031 
DBG(46745244)> CPU DETAIL: Transfer to T 
DBG(46745246)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745247)> CPU DETAIL: M4 Address Modifier: 0031 
DBG(46745247)> CPU DETAIL: Read R 0660: 5500009898989830 
DBG(46745248)> CPU DETAIL: Write 1036: 5500009898989830 
DBG(46745250)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745251)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46745252)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745253)> CPU DETAIL: Result: 0060462910370000 
DBG(46745254)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46745256)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745257)> CPU DETAIL: M4: 0032 
DBG(46745258)> CPU DETAIL: Transfer to T 
DBG(46745260)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745261)> CPU DETAIL: M4 Address Modifier: 0032 
DBG(46745261)> CPU DETAIL: Read R 0661: 5555505050505050 
DBG(46745262)> CPU DETAIL: Write 1037: 5555505050505050 
DBG(46745264)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745265)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46745266)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745267)> CPU DETAIL: Result: 0060462910380000 
DBG(46745268)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46745270)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745271)> CPU DETAIL: M4: 0033 
DBG(46745272)> CPU DETAIL: Transfer to T 
DBG(46745274)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745275)> CPU DETAIL: M4 Address Modifier: 0033 
DBG(46745275)> CPU DETAIL: Read R 0662: 6666606060606060 
DBG(46745276)> CPU DETAIL: Write 1038: 6666606060606060 
DBG(46745278)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745279)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46745280)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745281)> CPU DETAIL: Result: 0060462910390000 
DBG(46745282)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46745284)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745285)> CPU DETAIL: M4: 0034 
DBG(46745286)> CPU DETAIL: Transfer to T 
DBG(46745288)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745289)> CPU DETAIL: M4 Address Modifier: 0034 
DBG(46745289)> CPU DETAIL: Read R 0663: 7777777777777777 
DBG(46745290)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46745292)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745293)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46745294)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745295)> CPU DETAIL: Result: 0060462910400000 
DBG(46745296)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46745298)> CPU CMD: Exec 0065: 04 58 0001 0035 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745299)> CPU DETAIL: M4: 0035 
DBG(46745302)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46745303)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46745304)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46745307)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46745308)> CPU DETAIL: Read R 0065: 0458000100350063 
DBG(46745309)> CPU DETAIL: Result: 0458000100420063 
DBG(46745310)> CPU DETAIL: Write 0065: 0458000100420063 
DBG(46745312)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46745313)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46745314)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46745316)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46745317)> CPU DETAIL: Read R 1557: 0000000000000028 
DBG(46745318)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46745319)> CPU DETAIL: Result: 0000000000000035 
DBG(46745320)> CPU DETAIL: Write 1557: 0000000000000035 
DBG(46745322)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46745323)> CPU DETAIL: Read R 1036: 5500009898989830 
DBG(46745324)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46745325)> CPU DETAIL: Result: 5500000000000000 
DBG(46745326)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46745328)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46745329)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46745330)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745331)> CPU DETAIL: Transfer to T 
DBG(46745333)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46745334)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46745335)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46745337)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46745338)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745339)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46745341)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46745342)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745343)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46745345)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46745346)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46745347)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46745349)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46745350)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46745351)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46745353)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46745354)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46745355)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46745357)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46745358)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46745359)> CPU DETAIL: Transfer to T 
DBG(46745359)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46745361)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46745362)> CPU DETAIL: Condition not present 
DBG(46745364)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46745365)> CPU DETAIL: Transfer to T 
DBG(46745367)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46745368)> CPU DETAIL: Transfer to T 
DBG(46745370)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46745371)> CPU DETAIL: Read R 1033: 2011009898989820 
DBG(46745372)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000002 
DBG(46745373)> CPU DETAIL: Write 1569: 0000000000000002 
DBG(46745375)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46745376)> CPU DETAIL: Read R 1033: 2011009898989820 
DBG(46745377)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745378)> CPU DETAIL: Result: 0000009898989820 
DBG(46745379)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46745381)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46745382)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46745383)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745384)> CPU DETAIL: Result: 0000009898989820 
DBG(46745385)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46745387)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46745388)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46745389)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46745390)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745391)> CPU DETAIL: Transfer to T 
DBG(46745393)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46745394)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46745395)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46745396)> CPU DETAIL: Result: 0000000000000000 
DBG(46745399)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46745400)> CPU DETAIL: REG1: 0000000000000000
DBG(46745400)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46745402)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46745403)> CPU DETAIL: Read R 1569: 0000000000000002 
DBG(46745404)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745405)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46745408)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46745409)> CPU DETAIL: Read R 1569: 0000000000000002 
DBG(46745410)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46745411)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745412)> CPU DETAIL: Transfer to T 
DBG(46745414)> CPU CMD: Exec 0254: 00 60 0000 0000 0000   nop   
DBG(46745417)> CPU CMD: Exec 0255: 00 42 1036 1606 1568   mask (1036 transac rec w4) to get event code -> (1568 transac rec sucessor c 
DBG(46745418)> CPU DETAIL: Read R 1036: 5500009898989830 
DBG(46745419)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745420)> CPU DETAIL: Result: 0000009898989830 
DBG(46745421)> CPU DETAIL: Write 1568: 0000009898989830 
DBG(46745423)> CPU CMD: Exec 0256: 00 42 1148 1606 0000   mask (1148 successor list w1) to get event code   
DBG(46745424)> CPU DETAIL: Read R 1148: 0000009898989830 
DBG(46745425)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745426)> CPU DETAIL: Result: 0000009898989830 
DBG(46745429)> CPU CMD: Exec 0257: 00 70 1568 0000 0263   if (1568 transac SSS code)=(event successors w1) goto 0263   
DBG(46745430)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46745431)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745432)> CPU DETAIL: Transfer to T 
DBG(46745434)> CPU CMD: Exec 0263: 00 42 1036 1593 0000   Mask (1036 transac w4) with 550..0   
DBG(46745435)> CPU DETAIL: Read R 1036: 5500009898989830 
DBG(46745436)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46745437)> CPU DETAIL: Result: 5500000000000000 
DBG(46745440)> CPU CMD: Exec 0264: 00 41 1036 0000 1036   remove 550..0 from (1036 transac w4)   
DBG(46745441)> CPU DETAIL: Read R 1036: 5500009898989830 
DBG(46745442)> CPU DETAIL: Result: 0000009898989830 
DBG(46745443)> CPU DETAIL: Write 1036: 0000009898989830 
DBG(46745445)> CPU CMD: Exec 0265: 04 42 0256 1586 0000   Mask (0256) with 0000 1111 0000 0000 to get current pos in successor list    
DBG(46745446)> CPU DETAIL: Read R 0256: 0042114816060000 
DBG(46745447)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46745448)> CPU DETAIL: Result: 0000114800000000 
DBG(46745449)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000011480000 
DBG(46745452)> CPU CMD: Exec 0266: 00 40 1590 0000 0000   inc_s (to get next pos in list)    
DBG(46745453)> CPU DETAIL: Read R 1590: 0000000000010000 
DBG(46745454)> CPU DETAIL: Result: 0000000011490000 
DBG(46745457)> CPU CMD: Exec 0267: 00 40 1628 0000 0268   set copy (1037 transac w5) to (pos in list) ... to update value in list   
DBG(46745458)> CPU DETAIL: Read R 1628: 0060103700000000 
DBG(46745459)> CPU DETAIL: Result: 0060103711490000 
DBG(46745460)> CPU DETAIL: Write 0268: 0060103711490000 
DBG(46745462)> CPU CMD: Exec 0268: 00 60 1037 1149 0000   ... and exec it   
DBG(46745463)> CPU DETAIL: Read R 1037: 5555505050505050 
DBG(46745464)> CPU DETAIL: Write 1149: 5555505050505050 
DBG(46745466)> CPU CMD: Exec 0269: 00 40 0268 1629 0270   inc_r inc_s   
DBG(46745467)> CPU DETAIL: Read R 0268: 0060103711490000 
DBG(46745468)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745469)> CPU DETAIL: Result: 0060103811500000 
DBG(46745470)> CPU DETAIL: Write 0270: 0060103811500000 
DBG(46745472)> CPU CMD: Exec 0270: 00 60 1038 1150 0000   copy (1038 transac w6) to (pos in list+1) to update    
DBG(46745473)> CPU DETAIL: Read R 1038: 6666606060606060 
DBG(46745474)> CPU DETAIL: Write 1150: 6666606060606060 
DBG(46745476)> CPU CMD: Exec 0271: 00 60 1630 0256 0000   restore inst 0256   
DBG(46745477)> CPU DETAIL: Read R 1630: 0042114816060000 
DBG(46745478)> CPU DETAIL: Write 0256: 0042114816060000 
DBG(46745480)> CPU CMD: Exec 0272: 00 60 1588 1571 0000   clear (1571 current word selected in successor list)   
DBG(46745481)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745482)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46745484)> CPU CMD: Exec 0273: 00 60 1638 0095 0057   goto 0057   
DBG(46745485)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46745486)> CPU DETAIL: Transfer to T 
DBG(46745486)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46745488)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46745489)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46745490)> CPU DETAIL: Read S 1557: 0000000000000035 
DBG(46745491)> CPU DETAIL: Result: 0000000000000007 
DBG(46745494)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46745495)> CPU DETAIL: REG1: 0000000000000007
DBG(46745495)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46745497)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745498)> CPU DETAIL: M4 Address Modifier: 0035 
DBG(46745498)> CPU DETAIL: Read R 0664: 2011009898989850 
DBG(46745499)> CPU DETAIL: Write 1033: 2011009898989850 
DBG(46745501)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745502)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46745503)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745504)> CPU DETAIL: Result: 0060462910340000 
DBG(46745505)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46745507)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745508)> CPU DETAIL: M4: 0036 
DBG(46745509)> CPU DETAIL: Transfer to T 
DBG(46745511)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745512)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(46745512)> CPU DETAIL: Read R 0665: 2222202020202020 
DBG(46745513)> CPU DETAIL: Write 1034: 2222202020202020 
DBG(46745515)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745516)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46745517)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745518)> CPU DETAIL: Result: 0060462910350000 
DBG(46745519)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46745521)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745522)> CPU DETAIL: M4: 0037 
DBG(46745523)> CPU DETAIL: Transfer to T 
DBG(46745525)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745526)> CPU DETAIL: M4 Address Modifier: 0037 
DBG(46745526)> CPU DETAIL: Read R 0666: 3333303030303030 
DBG(46745527)> CPU DETAIL: Write 1035: 3333303030303030 
DBG(46745529)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745530)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46745531)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745532)> CPU DETAIL: Result: 0060462910360000 
DBG(46745533)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46745535)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745536)> CPU DETAIL: M4: 0038 
DBG(46745537)> CPU DETAIL: Transfer to T 
DBG(46745539)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745540)> CPU DETAIL: M4 Address Modifier: 0038 
DBG(46745540)> CPU DETAIL: Read R 0667: 6600009898989820 
DBG(46745541)> CPU DETAIL: Write 1036: 6600009898989820 
DBG(46745543)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745544)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46745545)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745546)> CPU DETAIL: Result: 0060462910370000 
DBG(46745547)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46745549)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745550)> CPU DETAIL: M4: 0039 
DBG(46745551)> CPU DETAIL: Transfer to T 
DBG(46745553)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745554)> CPU DETAIL: M4 Address Modifier: 0039 
DBG(46745554)> CPU DETAIL: Read R 0668: 5566555550555555 
DBG(46745555)> CPU DETAIL: Write 1037: 5566555550555555 
DBG(46745557)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745558)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46745559)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745560)> CPU DETAIL: Result: 0060462910380000 
DBG(46745561)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46745563)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745564)> CPU DETAIL: M4: 0040 
DBG(46745565)> CPU DETAIL: Transfer to T 
DBG(46745567)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745568)> CPU DETAIL: M4 Address Modifier: 0040 
DBG(46745568)> CPU DETAIL: Read R 0669: 6655666666666666 
DBG(46745569)> CPU DETAIL: Write 1038: 6655666666666666 
DBG(46745571)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745572)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46745573)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745574)> CPU DETAIL: Result: 0060462910390000 
DBG(46745575)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46745577)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745578)> CPU DETAIL: M4: 0041 
DBG(46745579)> CPU DETAIL: Transfer to T 
DBG(46745581)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745582)> CPU DETAIL: M4 Address Modifier: 0041 
DBG(46745582)> CPU DETAIL: Read R 0670: 7777777777777777 
DBG(46745583)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46745585)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745586)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46745587)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745588)> CPU DETAIL: Result: 0060462910400000 
DBG(46745589)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46745591)> CPU CMD: Exec 0065: 04 58 0001 0042 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745592)> CPU DETAIL: M4: 0042 
DBG(46745595)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46745596)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46745597)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46745600)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46745601)> CPU DETAIL: Read R 0065: 0458000100420063 
DBG(46745602)> CPU DETAIL: Result: 0458000100490063 
DBG(46745603)> CPU DETAIL: Write 0065: 0458000100490063 
DBG(46745605)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46745606)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46745607)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46745609)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46745610)> CPU DETAIL: Read R 1557: 0000000000000035 
DBG(46745611)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46745612)> CPU DETAIL: Result: 0000000000000042 
DBG(46745613)> CPU DETAIL: Write 1557: 0000000000000042 
DBG(46745615)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46745616)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46745617)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46745618)> CPU DETAIL: Result: 6600000000000000 
DBG(46745619)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46745621)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46745622)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46745623)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46745626)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46745627)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46745628)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46745629)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745630)> CPU DETAIL: Transfer to T 
DBG(46745632)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46745633)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46745634)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46745636)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46745637)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46745638)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46745640)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46745641)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46745642)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46745644)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46745645)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745646)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46745648)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46745649)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46745650)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46745652)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46745653)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745654)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46745656)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46745657)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745658)> CPU DETAIL: Transfer to T 
DBG(46745658)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46745660)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46745661)> CPU DETAIL: Condition not present 
DBG(46745663)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46745664)> CPU DETAIL: Transfer to T 
DBG(46745666)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46745667)> CPU DETAIL: Transfer to T 
DBG(46745669)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46745670)> CPU DETAIL: Read R 1033: 2011009898989850 
DBG(46745671)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000002 
DBG(46745672)> CPU DETAIL: Write 1569: 0000000000000002 
DBG(46745674)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46745675)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46745676)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745677)> CPU DETAIL: Result: 0000009898989820 
DBG(46745678)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46745680)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46745681)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46745682)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745683)> CPU DETAIL: Result: 0000009898989820 
DBG(46745684)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46745686)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46745687)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46745688)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46745689)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745690)> CPU DETAIL: Transfer to T 
DBG(46745692)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46745693)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46745694)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46745695)> CPU DETAIL: Result: 0000000000000000 
DBG(46745698)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46745699)> CPU DETAIL: REG1: 0000000000000000
DBG(46745699)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46745701)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46745702)> CPU DETAIL: Read R 1569: 0000000000000002 
DBG(46745703)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745704)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46745707)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46745708)> CPU DETAIL: Read R 1569: 0000000000000002 
DBG(46745709)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46745710)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745711)> CPU DETAIL: Transfer to T 
DBG(46745713)> CPU CMD: Exec 0254: 00 60 0000 0000 0274   nop   
DBG(46745714)> CPU DETAIL: Transfer to T 
DBG(46745716)> CPU CMD: Exec 0274: 00 42 1033 1606 1568   mask (transac rec w1) to get event code -> (1568 transac rec predecessor cod 
DBG(46745717)> CPU DETAIL: Read R 1033: 2011009898989850 
DBG(46745718)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745719)> CPU DETAIL: Result: 0000009898989850 
DBG(46745720)> CPU DETAIL: Write 1568: 0000009898989850 
DBG(46745722)> CPU CMD: Exec 0275: 00 42 1048 1606 0000   mask (1048 predecessors list w1) to get event code   
DBG(46745723)> CPU DETAIL: Read R 1048: 0000009898989850 
DBG(46745724)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46745725)> CPU DETAIL: Result: 0000009898989850 
DBG(46745728)> CPU CMD: Exec 0276: 00 70 1568 0000 0282   if (1568 transac PPP code)=(event predecessors w1) goto 0282   
DBG(46745729)> CPU DETAIL: Read R 1568: 0000009898989850 
DBG(46745730)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745731)> CPU DETAIL: Transfer to T 
DBG(46745733)> CPU CMD: Exec 0282: 04 42 0275 1586 0000   Mask (0275) with 0000 1111 0000 0000   
DBG(46745734)> CPU DETAIL: Read R 0275: 0042104816060000 
DBG(46745735)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46745736)> CPU DETAIL: Result: 0000104800000000 
DBG(46745737)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000010480000 
DBG(46745740)> CPU CMD: Exec 0283: 00 40 1590 0000 0000   inc_s (to get next pos in list)    
DBG(46745741)> CPU DETAIL: Read R 1590: 0000000000010000 
DBG(46745742)> CPU DETAIL: Result: 0000000010490000 
DBG(46745745)> CPU CMD: Exec 0284: 00 40 1631 0000 0285   set copy (1034 transac w2) to (pos in list) ... to update value in list   
DBG(46745746)> CPU DETAIL: Read R 1631: 0060103400000000 
DBG(46745747)> CPU DETAIL: Result: 0060103410490000 
DBG(46745748)> CPU DETAIL: Write 0285: 0060103410490000 
DBG(46745750)> CPU CMD: Exec 0285: 00 60 1034 1049 0000   ... and exec it   
DBG(46745751)> CPU DETAIL: Read R 1034: 2222202020202020 
DBG(46745752)> CPU DETAIL: Write 1049: 2222202020202020 
DBG(46745754)> CPU CMD: Exec 0286: 00 40 0285 1629 0287   inc_r inc_s   
DBG(46745755)> CPU DETAIL: Read R 0285: 0060103410490000 
DBG(46745756)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46745757)> CPU DETAIL: Result: 0060103510500000 
DBG(46745758)> CPU DETAIL: Write 0287: 0060103510500000 
DBG(46745760)> CPU CMD: Exec 0287: 00 60 1035 1050 0000   copy (1035 transac w3) to (pos in list) ... to update value in list   
DBG(46745761)> CPU DETAIL: Read R 1035: 3333303030303030 
DBG(46745762)> CPU DETAIL: Write 1050: 3333303030303030 
DBG(46745764)> CPU CMD: Exec 0288: 00 60 1632 0275 0000   restore instr 0275   
DBG(46745765)> CPU DETAIL: Read R 1632: 0042104816060000 
DBG(46745766)> CPU DETAIL: Write 0275: 0042104816060000 
DBG(46745768)> CPU CMD: Exec 0289: 00 60 1588 1571 0000   clear (1571 current word selected in predecessor list)   
DBG(46745769)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745770)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46745772)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46745773)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46745774)> CPU DETAIL: Transfer to T 
DBG(46745774)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46745776)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46745777)> CPU DETAIL: Read R 1556: 0000000000000042 
DBG(46745778)> CPU DETAIL: Read S 1557: 0000000000000042 
DBG(46745779)> CPU DETAIL: Result: 0000000000000000 
DBG(46745782)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46745783)> CPU DETAIL: REG1: 0000000000000000
DBG(46745783)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46745785)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46745786)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46745787)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46745789)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46745790)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46745791)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46745793)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46745794)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46745795)> CPU DETAIL: Transfer to T 
DBG(46745795)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46745797)> CPU CMD: Exec 0034: 02 94 0629 0000 0002   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46745798)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0002
DBG(46745798)> MT DATA: Tape unit 2: init read
DBG(46745798)> MT DETAIL: Read tape record (290 chars, used 2.07 inches, needs 12 msec) from tape 2
DBG(46745798)> MT DETAIL: Tape record contents: D*0290020102140002C*3011009898989820C*2222222222222222C*33333333333333...
DBG(46745798)> MT EXP: Start Of Block Word: 0290020102140002
DBG(46745798)> MT EXP: Read Tape Block number 0002
DBG(46745798)> MT EXP: Read forward addr 0629 to 0000
DBG(46745798)> MT EXP: Tape to CRT 0629: 3011009898989820 
DBG(46745798)> MT EXP: Tape to CRT 0630: 2222222222222222 
DBG(46745798)> MT EXP: Tape to CRT 0631: 3333333333333333 
DBG(46745798)> MT EXP: Tape to CRT 0632: 5500009898989840 
DBG(46745798)> MT EXP: Tape to CRT 0633: 5555555555555555 
DBG(46745798)> MT EXP: Tape to CRT 0634: 6666666666666666 
DBG(46745798)> MT EXP: Tape to CRT 0635: 7777777777777777 
DBG(46745798)> MT EXP: Tape to CRT 0636: 3011009898989850 
DBG(46745798)> MT EXP: Tape to CRT 0637: 2222222222222222 
DBG(46745798)> MT EXP: Tape to CRT 0638: 3333333333333333 
DBG(46745798)> MT EXP: Tape to CRT 0639: 6600009898989820 
DBG(46745798)> MT EXP: Tape to CRT 0640: 5555555555555555 
DBG(46745798)> MT EXP: Tape to CRT 0641: 6666666666666666 
DBG(46745798)> MT EXP: Tape to CRT 0642: 7777777777777777 
DBG(46745798)> MT EXP: End Of Block Word: 0290020102140002, data words in block: 14
DBG(46745798)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.04% of medium (6.73 inches)
DBG(46745801)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46745802)> CPU DETAIL: Condition not present 
DBG(46745804)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46745805)> CPU DETAIL: Condition not present 
DBG(46745807)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46745808)> CPU DETAIL: Write 1554: 0290020102140002 
DBG(46745810)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46745811)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46745812)> CPU DETAIL: Result: 0000000002140000 
DBG(46745813)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000214 
DBG(46745814)> CPU DETAIL: Write 1555: 0000000000000214 
DBG(46745816)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46745817)> CPU DETAIL: Read R 1554: 0290020102140002 
DBG(46745818)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46745819)> CPU DETAIL: Result: 0000020100000000 
DBG(46745820)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46745823)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46745824)> CPU DETAIL: Read R 1555: 0000000000000214 
DBG(46745825)> CPU DETAIL: Result: 0000000000000013 
DBG(46745826)> CPU DETAIL: Write 1556: 0000000000000013 
DBG(46745828)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46745829)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46745830)> CPU DETAIL: Result: 0000000000000014 
DBG(46745831)> CPU DETAIL: Write 1556: 0000000000000014 
DBG(46745833)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46745834)> CPU DETAIL: Read R 0034: 0294062900000002 
DBG(46745835)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46745836)> CPU DETAIL: Result: 0294062900000003 
DBG(46745837)> CPU DETAIL: Write 0034: 0294062900000003 
DBG(46745839)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46745840)> CPU DETAIL: Clear M4
DBG(46745840)> CPU DETAIL: M4: 0000 
DBG(46745841)> CPU DETAIL: M6: 0010 
DBG(46745842)> CPU DETAIL: M8: 0030 
DBG(46745845)> CPU CMD: Exec 0044: 00 60 0000 0000 0063   nop   
DBG(46745846)> CPU DETAIL: Transfer to T 
DBG(46745848)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745849)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46745849)> CPU DETAIL: Read R 0629: 3011009898989820 
DBG(46745850)> CPU DETAIL: Write 1033: 3011009898989820 
DBG(46745852)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745853)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46745854)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745855)> CPU DETAIL: Result: 0060462910340000 
DBG(46745856)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46745858)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745859)> CPU DETAIL: M4: 0001 
DBG(46745860)> CPU DETAIL: Transfer to T 
DBG(46745862)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745863)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46745863)> CPU DETAIL: Read R 0630: 2222222222222222 
DBG(46745864)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46745866)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745867)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46745868)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745869)> CPU DETAIL: Result: 0060462910350000 
DBG(46745870)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46745872)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745873)> CPU DETAIL: M4: 0002 
DBG(46745874)> CPU DETAIL: Transfer to T 
DBG(46745876)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745877)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46745877)> CPU DETAIL: Read R 0631: 3333333333333333 
DBG(46745878)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46745880)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745881)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46745882)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745883)> CPU DETAIL: Result: 0060462910360000 
DBG(46745884)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46745886)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745887)> CPU DETAIL: M4: 0003 
DBG(46745888)> CPU DETAIL: Transfer to T 
DBG(46745890)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745891)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46745891)> CPU DETAIL: Read R 0632: 5500009898989840 
DBG(46745892)> CPU DETAIL: Write 1036: 5500009898989840 
DBG(46745894)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745895)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46745896)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745897)> CPU DETAIL: Result: 0060462910370000 
DBG(46745898)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46745900)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745901)> CPU DETAIL: M4: 0004 
DBG(46745902)> CPU DETAIL: Transfer to T 
DBG(46745904)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745905)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46745905)> CPU DETAIL: Read R 0633: 5555555555555555 
DBG(46745906)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46745908)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745909)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46745910)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745911)> CPU DETAIL: Result: 0060462910380000 
DBG(46745912)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46745914)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745915)> CPU DETAIL: M4: 0005 
DBG(46745916)> CPU DETAIL: Transfer to T 
DBG(46745918)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745919)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46745919)> CPU DETAIL: Read R 0634: 6666666666666666 
DBG(46745920)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46745922)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745923)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46745924)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745925)> CPU DETAIL: Result: 0060462910390000 
DBG(46745926)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46745928)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745929)> CPU DETAIL: M4: 0006 
DBG(46745930)> CPU DETAIL: Transfer to T 
DBG(46745932)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46745933)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46745933)> CPU DETAIL: Read R 0635: 7777777777777777 
DBG(46745934)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46745936)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46745937)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46745938)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46745939)> CPU DETAIL: Result: 0060462910400000 
DBG(46745940)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46745942)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46745943)> CPU DETAIL: M4: 0007 
DBG(46745946)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46745947)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46745948)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46745951)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46745952)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46745953)> CPU DETAIL: Result: 0458000100140063 
DBG(46745954)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46745956)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46745957)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46745958)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46745960)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46745961)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46745962)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46745963)> CPU DETAIL: Result: 0000000000000007 
DBG(46745964)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46745966)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46745967)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46745968)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46745969)> CPU DETAIL: Result: 5500000000000000 
DBG(46745970)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46745972)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46745973)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46745974)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46745975)> CPU DETAIL: Transfer to T 
DBG(46745977)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46745978)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46745979)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46745981)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46745982)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745983)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46745985)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46745986)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46745987)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46745989)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46745990)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46745991)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46745993)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46745994)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46745995)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46745997)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46745998)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46745999)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46746001)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46746002)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46746003)> CPU DETAIL: Transfer to T 
DBG(46746003)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46746005)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46746006)> CPU DETAIL: Condition not present 
DBG(46746008)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46746009)> CPU DETAIL: Transfer to T 
DBG(46746011)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46746012)> CPU DETAIL: Transfer to T 
DBG(46746014)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46746015)> CPU DETAIL: Read R 1033: 3011009898989820 
DBG(46746016)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000003 
DBG(46746017)> CPU DETAIL: Write 1569: 0000000000000003 
DBG(46746019)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46746020)> CPU DETAIL: Read R 1033: 3011009898989820 
DBG(46746021)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746022)> CPU DETAIL: Result: 0000009898989820 
DBG(46746023)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46746025)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46746026)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46746027)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746028)> CPU DETAIL: Result: 0000009898989820 
DBG(46746029)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46746031)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46746032)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746033)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746034)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746035)> CPU DETAIL: Transfer to T 
DBG(46746037)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46746038)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746039)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746040)> CPU DETAIL: Result: 0000000000000000 
DBG(46746043)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46746044)> CPU DETAIL: REG1: 0000000000000000
DBG(46746044)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46746046)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46746047)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746048)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46746049)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46746052)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46746053)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746054)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46746055)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46746058)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46746059)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746060)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46746061)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746062)> CPU DETAIL: Transfer to T 
DBG(46746064)> CPU CMD: Exec 0342: 00 60 0000 0000 0384   goto 384 (if activity completed is a successor) / nop if completed is a pred 
DBG(46746065)> CPU DETAIL: Transfer to T 
DBG(46746067)> CPU CMD: Exec 0384: 00 42 1036 1606 1568   mask (1036 transac w4) to get event code -> (1568 transac rec code SSS)   
DBG(46746068)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46746069)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746070)> CPU DETAIL: Result: 0000009898989840 
DBG(46746071)> CPU DETAIL: Write 1568: 0000009898989840 
DBG(46746073)> CPU CMD: Exec 0385: 00 42 1148 1606 0000   mask (1148 successor list) to get event code   
DBG(46746074)> CPU DETAIL: Read R 1148: 0000009898989830 
DBG(46746075)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746076)> CPU DETAIL: Result: 0000009898989830 
DBG(46746079)> CPU CMD: Exec 0386: 00 70 1568 0000 0392   if (1568 transac SSS code)=(event successors w1) goto 0392   
DBG(46746080)> CPU DETAIL: Read R 1568: 0000009898989840 
DBG(46746081)> CPU DETAIL: Diff: REG1: 0000000000000010
DBG(46746084)> CPU CMD: Exec 0387: 00 40 0385 1626 0385   incr_R + 3 in instr 0385 to select next successor in event list   
DBG(46746085)> CPU DETAIL: Read R 0385: 0042114816060000 
DBG(46746086)> CPU DETAIL: Read S 1626: 0000000300000000 
DBG(46746087)> CPU DETAIL: Result: 0042115116060000 
DBG(46746088)> CPU DETAIL: Write 0385: 0042115116060000 
DBG(46746090)> CPU CMD: Exec 0388: 00 40 1571 1623 1571   (1571 current word selected in successor list) += 3    
DBG(46746091)> CPU DETAIL: Read R 1571: 0000000000000000 
DBG(46746092)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46746093)> CPU DETAIL: Result: 0000000000000003 
DBG(46746094)> CPU DETAIL: Write 1571: 0000000000000003 
DBG(46746096)> CPU CMD: Exec 0389: 00 41 1564 0000 0000   (1564 words used by successors) - (current word) -> REG1   
DBG(46746097)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46746098)> CPU DETAIL: Result: 0000000000000003 
DBG(46746101)> CPU CMD: Exec 0390: 00 63 0385 0391 0391   TR >0 goto 385 (read next successor because not at end of list), =0 or <0 co 
DBG(46746102)> CPU DETAIL: REG1: 0000000000000003
DBG(46746102)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46746104)> CPU CMD: Exec 0385: 00 42 1151 1606 0000   mask (1148 successor list) to get event code   
DBG(46746105)> CPU DETAIL: Read R 1151: 0000009898989840 
DBG(46746106)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746107)> CPU DETAIL: Result: 0000009898989840 
DBG(46746110)> CPU CMD: Exec 0386: 00 70 1568 0000 0392   if (1568 transac SSS code)=(event successors w1) goto 0392   
DBG(46746111)> CPU DETAIL: Read R 1568: 0000009898989840 
DBG(46746112)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746113)> CPU DETAIL: Transfer to T 
DBG(46746115)> CPU CMD: Exec 0392: 04 42 0385 1586 0000   Mask (0385) with 0000 1111 0000 0000 to get current pos in successor list    
DBG(46746116)> CPU DETAIL: Read R 0385: 0042115116060000 
DBG(46746117)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46746118)> CPU DETAIL: Result: 0000115100000000 
DBG(46746119)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000011510000 
DBG(46746122)> CPU CMD: Exec 0393: 00 40 1634 0000 0394   set up to ...                          to mark a successor list entry    
DBG(46746123)> CPU DETAIL: Read R 1634: 0060159300000000 
DBG(46746124)> CPU DETAIL: Result: 0060159311510000 
DBG(46746125)> CPU DETAIL: Write 0394: 0060159311510000 
DBG(46746127)> CPU CMD: Exec 0394: 00 60 1593 1151 0000   .. store at this addr value 55 0..0    as deleted, overwrite its 3 words    
DBG(46746128)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746129)> CPU DETAIL: Write 1151: 5500000000000000 
DBG(46746131)> CPU CMD: Exec 0395: 00 40 0394 1590 0396   incr_s of prev instr                   with 550..0 value   
DBG(46746132)> CPU DETAIL: Read R 0394: 0060159311510000 
DBG(46746133)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746134)> CPU DETAIL: Result: 0060159311520000 
DBG(46746135)> CPU DETAIL: Write 0396: 0060159311520000 
DBG(46746137)> CPU CMD: Exec 0396: 00 60 1593 1152 0000   .. store at addr+1 value 55 0..0   
DBG(46746138)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746139)> CPU DETAIL: Write 1152: 5500000000000000 
DBG(46746141)> CPU CMD: Exec 0397: 00 40 0396 1590 0398   incr_s of prev instr   
DBG(46746142)> CPU DETAIL: Read R 0396: 0060159311520000 
DBG(46746143)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746144)> CPU DETAIL: Result: 0060159311530000 
DBG(46746145)> CPU DETAIL: Write 0398: 0060159311530000 
DBG(46746147)> CPU CMD: Exec 0398: 00 60 1593 1153 0000   .. store at addr+2 value 55 0..0    
DBG(46746148)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746149)> CPU DETAIL: Write 1153: 5500000000000000 
DBG(46746151)> CPU CMD: Exec 0399: 00 60 1630 0385 0000   restore inst 0385   
DBG(46746152)> CPU DETAIL: Read R 1630: 0042114816060000 
DBG(46746153)> CPU DETAIL: Write 0385: 0042114816060000 
DBG(46746155)> CPU CMD: Exec 0400: 00 41 1047 1587 1047   (1047 event rec w7) xx xx xxxx xxxx AABB, decr BB (AA=num of predecesors  BB 
DBG(46746156)> CPU DETAIL: Read R 1047: 0000000000000102 
DBG(46746157)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46746158)> CPU DETAIL: Result: 0000000000000101 
DBG(46746159)> CPU DETAIL: Write 1047: 0000000000000101 
DBG(46746161)> CPU CMD: Exec 0401: 00 60 1588 1571 0290   clear (1571 current word selected in successor list), goto 0290   
DBG(46746162)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46746163)> CPU DETAIL: Transfer to T 
DBG(46746163)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46746165)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46746166)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46746167)> CPU DETAIL: Transfer to T 
DBG(46746167)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46746169)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46746170)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46746171)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46746172)> CPU DETAIL: Result: 0000000000000007 
DBG(46746175)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46746176)> CPU DETAIL: REG1: 0000000000000007
DBG(46746176)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46746178)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746179)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(46746179)> CPU DETAIL: Read R 0636: 3011009898989850 
DBG(46746180)> CPU DETAIL: Write 1033: 3011009898989850 
DBG(46746182)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746183)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46746184)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746185)> CPU DETAIL: Result: 0060462910340000 
DBG(46746186)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46746188)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746189)> CPU DETAIL: M4: 0008 
DBG(46746190)> CPU DETAIL: Transfer to T 
DBG(46746192)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746193)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(46746193)> CPU DETAIL: Read R 0637: 2222222222222222 
DBG(46746194)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46746196)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746197)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46746198)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746199)> CPU DETAIL: Result: 0060462910350000 
DBG(46746200)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46746202)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746203)> CPU DETAIL: M4: 0009 
DBG(46746204)> CPU DETAIL: Transfer to T 
DBG(46746206)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746207)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(46746207)> CPU DETAIL: Read R 0638: 3333333333333333 
DBG(46746208)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46746210)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746211)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46746212)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746213)> CPU DETAIL: Result: 0060462910360000 
DBG(46746214)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46746216)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746217)> CPU DETAIL: M4: 0010 
DBG(46746218)> CPU DETAIL: Transfer to T 
DBG(46746220)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746221)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(46746221)> CPU DETAIL: Read R 0639: 6600009898989820 
DBG(46746222)> CPU DETAIL: Write 1036: 6600009898989820 
DBG(46746224)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746225)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46746226)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746227)> CPU DETAIL: Result: 0060462910370000 
DBG(46746228)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46746230)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746231)> CPU DETAIL: M4: 0011 
DBG(46746232)> CPU DETAIL: Transfer to T 
DBG(46746234)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746235)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(46746235)> CPU DETAIL: Read R 0640: 5555555555555555 
DBG(46746236)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46746238)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746239)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46746240)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746241)> CPU DETAIL: Result: 0060462910380000 
DBG(46746242)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46746244)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746245)> CPU DETAIL: M4: 0012 
DBG(46746246)> CPU DETAIL: Transfer to T 
DBG(46746248)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746249)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(46746249)> CPU DETAIL: Read R 0641: 6666666666666666 
DBG(46746250)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46746252)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746253)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46746254)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746255)> CPU DETAIL: Result: 0060462910390000 
DBG(46746256)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46746258)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746259)> CPU DETAIL: M4: 0013 
DBG(46746260)> CPU DETAIL: Transfer to T 
DBG(46746262)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746263)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(46746263)> CPU DETAIL: Read R 0642: 7777777777777777 
DBG(46746264)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46746266)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746267)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46746268)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746269)> CPU DETAIL: Result: 0060462910400000 
DBG(46746270)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46746272)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746273)> CPU DETAIL: M4: 0014 
DBG(46746276)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46746277)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46746278)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46746281)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46746282)> CPU DETAIL: Read R 0065: 0458000100140063 
DBG(46746283)> CPU DETAIL: Result: 0458000100210063 
DBG(46746284)> CPU DETAIL: Write 0065: 0458000100210063 
DBG(46746286)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46746287)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46746288)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46746290)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46746291)> CPU DETAIL: Read R 1557: 0000000000000007 
DBG(46746292)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46746293)> CPU DETAIL: Result: 0000000000000014 
DBG(46746294)> CPU DETAIL: Write 1557: 0000000000000014 
DBG(46746296)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46746297)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46746298)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46746299)> CPU DETAIL: Result: 6600000000000000 
DBG(46746300)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46746302)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46746303)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746304)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46746307)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46746308)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46746309)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46746310)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746311)> CPU DETAIL: Transfer to T 
DBG(46746313)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46746314)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46746315)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46746317)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46746318)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46746319)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46746321)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46746322)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46746323)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46746325)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46746326)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46746327)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46746329)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46746330)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46746331)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46746333)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46746334)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46746335)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46746337)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46746338)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46746339)> CPU DETAIL: Transfer to T 
DBG(46746339)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46746341)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46746342)> CPU DETAIL: Condition not present 
DBG(46746344)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46746345)> CPU DETAIL: Transfer to T 
DBG(46746347)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46746348)> CPU DETAIL: Transfer to T 
DBG(46746350)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46746351)> CPU DETAIL: Read R 1033: 3011009898989850 
DBG(46746352)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000003 
DBG(46746353)> CPU DETAIL: Write 1569: 0000000000000003 
DBG(46746355)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46746356)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46746357)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746358)> CPU DETAIL: Result: 0000009898989820 
DBG(46746359)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46746361)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46746362)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46746363)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746364)> CPU DETAIL: Result: 0000009898989820 
DBG(46746365)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46746367)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46746368)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746369)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746370)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746371)> CPU DETAIL: Transfer to T 
DBG(46746373)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46746374)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746375)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746376)> CPU DETAIL: Result: 0000000000000000 
DBG(46746379)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46746380)> CPU DETAIL: REG1: 0000000000000000
DBG(46746380)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46746382)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46746383)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746384)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46746385)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46746388)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46746389)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746390)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46746391)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46746394)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46746395)> CPU DETAIL: Read R 1569: 0000000000000003 
DBG(46746396)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46746397)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746398)> CPU DETAIL: Transfer to T 
DBG(46746400)> CPU CMD: Exec 0342: 00 60 0000 0000 0000   goto 384 (if activity completed is a successor) / nop if completed is a pred 
DBG(46746403)> CPU CMD: Exec 0343: 00 42 1033 1606 1568   mask (1033 transac w1) to get event code -> (1568 transac rec code PPP)   
DBG(46746404)> CPU DETAIL: Read R 1033: 3011009898989850 
DBG(46746405)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746406)> CPU DETAIL: Result: 0000009898989850 
DBG(46746407)> CPU DETAIL: Write 1568: 0000009898989850 
DBG(46746409)> CPU CMD: Exec 0344: 00 42 1048 1606 0000   mask (1048 predecessors list) to get event code   
DBG(46746410)> CPU DETAIL: Read R 1048: 0000009898989850 
DBG(46746411)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746412)> CPU DETAIL: Result: 0000009898989850 
DBG(46746415)> CPU CMD: Exec 0345: 00 70 1568 0000 0351   if (1568 transac PPP code)=(event predecessor w1) goto 0351   
DBG(46746416)> CPU DETAIL: Read R 1568: 0000009898989850 
DBG(46746417)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746418)> CPU DETAIL: Transfer to T 
DBG(46746420)> CPU CMD: Exec 0351: 04 42 0344 1586 0000   Mask (0385) with 0000 1111 0000 0000 to get current pos in predecessor list  
DBG(46746421)> CPU DETAIL: Read R 0344: 0042104816060000 
DBG(46746422)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46746423)> CPU DETAIL: Result: 0000104800000000 
DBG(46746424)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000010480000 
DBG(46746427)> CPU CMD: Exec 0352: 00 40 1634 0000 0353   set up to ...                          to mark a predecessor list entry    
DBG(46746428)> CPU DETAIL: Read R 1634: 0060159300000000 
DBG(46746429)> CPU DETAIL: Result: 0060159310480000 
DBG(46746430)> CPU DETAIL: Write 0353: 0060159310480000 
DBG(46746432)> CPU CMD: Exec 0353: 00 60 1593 1048 0000   .. store at this addr value 55 0..0    as deleted, overwrite its 3 words    
DBG(46746433)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746434)> CPU DETAIL: Write 1048: 5500000000000000 
DBG(46746436)> CPU CMD: Exec 0354: 00 40 0353 1590 0355   incr_s of prev instr                   with 550..0 value   
DBG(46746437)> CPU DETAIL: Read R 0353: 0060159310480000 
DBG(46746438)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746439)> CPU DETAIL: Result: 0060159310490000 
DBG(46746440)> CPU DETAIL: Write 0355: 0060159310490000 
DBG(46746442)> CPU CMD: Exec 0355: 00 60 1593 1049 0000   .. store at addr+1 value 55 0..0   
DBG(46746443)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746444)> CPU DETAIL: Write 1049: 5500000000000000 
DBG(46746446)> CPU CMD: Exec 0356: 00 40 0355 1590 0357   incr_s of prev instr   
DBG(46746447)> CPU DETAIL: Read R 0355: 0060159310490000 
DBG(46746448)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746449)> CPU DETAIL: Result: 0060159310500000 
DBG(46746450)> CPU DETAIL: Write 0357: 0060159310500000 
DBG(46746452)> CPU CMD: Exec 0357: 00 60 1593 1050 0000   .. store at addr+2 value 55 0..0    
DBG(46746453)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746454)> CPU DETAIL: Write 1050: 5500000000000000 
DBG(46746456)> CPU CMD: Exec 0358: 98 60 1587 0000 0000   REG1=100   
DBG(46746457)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46746458)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000100 
DBG(46746461)> CPU CMD: Exec 0359: 00 41 1047 0000 1047   (1047 event rec w7) xx xx xxxx xxxx AABB, decr AA (AA=num of predecesors  BB 
DBG(46746462)> CPU DETAIL: Read R 1047: 0000000000000101 
DBG(46746463)> CPU DETAIL: Result: 0000000000000001 
DBG(46746464)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46746466)> CPU CMD: Exec 0360: 00 60 1632 0344 0365   restore inst 0344, goto 0365    
DBG(46746467)> CPU DETAIL: Read R 1632: 0042104816060000 
DBG(46746468)> CPU DETAIL: Transfer to T 
DBG(46746468)> CPU DETAIL: Write 0344: 0042104816060000 
DBG(46746470)> CPU CMD: Exec 0365: 96 60 1586 0000 0000   REG1=1111 0000 0000 0000   
DBG(46746471)> CPU DETAIL: Read R 1586: 0000111100000000 
DBG(46746472)> CPU DETAIL: Word Shift 4 digits left: REG1: 1111000000000000 
DBG(46746475)> CPU CMD: Exec 0366: 00 42 1047 0000 1576   Mask (1047 event rec w7) with 1111 0..0 -> (1576 TSTS Schedulled completitio 
DBG(46746476)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46746477)> CPU DETAIL: Result: 0000000000000000 
DBG(46746478)> CPU DETAIL: Write 1576: 0000000000000000 
DBG(46746480)> CPU CMD: Exec 0367: 92 60 1047 0000 0000   (1047 event rec w7) Shift left 8 -> REG1                         clear compl 
DBG(46746481)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46746482)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000100000000 
DBG(46746485)> CPU CMD: Exec 0368: 08 60 0000 1047 0000   REG1 Shift right 8 -> (1047 event rec w7) = 0000 0000 xxxx AABB  date in w7  
DBG(46746486)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000001 
DBG(46746487)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46746489)> CPU CMD: Exec 0369: 92 42 1039 1582 0000   Mask (1039 transac rec w7) with 0..0 1111, shift left 8 -> 0000 TTTT 0000 00 
DBG(46746490)> CPU DETAIL: Read R 1039: 7777777777777777 
DBG(46746491)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46746492)> CPU DETAIL: Result: 0000000000007777 
DBG(46746493)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000777700000000 
DBG(46746496)> CPU CMD: Exec 0370: 00 60 0000 0000 0000   nop   
DBG(46746499)> CPU CMD: Exec 0371: 00 40 1047 0000 1047   (1047 event rec w7) -> 0000 TTTT xxxx AABBB   
DBG(46746500)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46746501)> CPU DETAIL: Result: 0000777700000001 
DBG(46746502)> CPU DETAIL: Write 1047: 0000777700000001 
DBG(46746504)> CPU CMD: Exec 0372: 00 40 1576 0000 1047   restore left 4 digits in (1047 event rec w7) = TSTS TTTT xxxx AABBB   
DBG(46746505)> CPU DETAIL: Read R 1576: 0000000000000000 
DBG(46746506)> CPU DETAIL: Result: 0000777700000001 
DBG(46746507)> CPU DETAIL: Write 1047: 0000777700000001 
DBG(46746509)> CPU CMD: Exec 0373: 00 41 1563 1623 0000   (1563 words used by predecessors) - 3 -> REG1   
DBG(46746510)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46746511)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46746512)> CPU DETAIL: Result: 0000000000000000 
DBG(46746515)> CPU CMD: Exec 0374: 00 63 0376 0247 0000   TR >0 goto 0376, =0 goto 0247, <0 cont. If =0 goto print completed event, th 
DBG(46746516)> CPU DETAIL: REG1: 0000000000000000
DBG(46746516)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46746518)> CPU CMD: Exec 0247: 00 80 1578 0001 0000   wait prt, (1578)->(0001)           1578=label for new event file tape 01   
DBG(46746519)> CPU DETAIL: Read R 1578: 3906000000000000 
DBG(46746520)> CPU DETAIL: Write 0001: 3906000000000000 
DBG(46746522)> CPU CMD: Exec 0248: 00 80 1568 0002 0000   wait prt, (1568 transac rec code completed) -> (0002)   
DBG(46746523)> CPU DETAIL: Read R 1568: 0000009898989850 
DBG(46746524)> CPU DETAIL: Write 0002: 0000009898989850 
DBG(46746526)> CPU CMD: Exec 0249: 00 80 1043 0003 0000   wait prt, (1043 event rec w3)->(0003)              
DBG(46746527)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46746528)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(46746530)> CPU CMD: Exec 0250: 00 80 1044 0004 0000   wait prt, (1044 event rec w4)->(0004)              
DBG(46746531)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46746532)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(46746534)> CPU CMD: Exec 0251: 00 80 1045 0005 0000   wait prt, (1045 event rec w5)->(0005)              
DBG(46746535)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46746536)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(46746538)> CPU CMD: Exec 0252: 00 80 1046 0006 0000   wait prt, (1046 event rec w6)->(0006)              
DBG(46746539)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46746540)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(46746542)> CPU CMD: Exec 0253: 00 81 1036 0007 0377   (1036 Transaction record word 4), print, goto 0377   
DBG(46746543)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46746544)> CPU DETAIL: Transfer to T 
DBG(46746544)> CPU DETAIL: Write 0007: 6600009898989820 
DBG(46746544)> LP CMD: Printer LP1: init cycle 
DBG(46746544)> LP CMD:      0001: 3906000000000000  0000009898989850 0000000000000000 0000000000000000
DBG(46746544)> LP CMD:      0005: 0000000000000000  0000000000000000 6600009898989820 
DBG(46746544)> LP CMD: Printer 1: ready (fast mode)
DBG(46746546)> CPU CMD: Exec 0377: 90 80 1041 0003 0000   wait prt, (1041 event rec w1) Shift right 10   
DBG(46746547)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46746548)> CPU DETAIL: Word Shift 10 digits left: REG1: 0000000000000000 
DBG(46746549)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(46746551)> CPU CMD: Exec 0378: 00 80 1047 0002 0000   wait prt, (1047 event rec w7) = xx xx TTTT xxxx AABB, AA=num of predecesors, 
DBG(46746552)> CPU DETAIL: Read R 1047: 0000777700000001 
DBG(46746553)> CPU DETAIL: Write 0002: 0000777700000001 
DBG(46746555)> CPU CMD: Exec 0379: 00 80 1578 0001 0000   wait prt, (1578 output new event file label)   
DBG(46746556)> CPU DETAIL: Read R 1578: 3906000000000000 
DBG(46746557)> CPU DETAIL: Write 0001: 3906000000000000 
DBG(46746559)> CPU CMD: Exec 0380: 00 80 1588 0004 0000   wait prt, zero -> (0004)   
DBG(46746560)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46746561)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(46746563)> CPU CMD: Exec 0381: 00 80 0000 0005 0000   wait prt, zero -> (0005)   
DBG(46746564)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(46746566)> CPU CMD: Exec 0382: 00 80 0000 0006 0000   wait prt, zero -> (0006)   
DBG(46746567)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(46746569)> CPU CMD: Exec 0383: 00 83 0000 0007 0376   print, goto 0376   
DBG(46746570)> CPU DETAIL: Transfer to T 
DBG(46746570)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(46746570)> LP CMD: Printer LP1: init cycle special
DBG(46746570)> LP CMD:      0001: 3906000000000000  0000777700000001 0000000000000000 0000000000000000
DBG(46746570)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(46746570)> LP CMD: Printer 1: ready (fast mode)
DBG(46746572)> CPU CMD: Exec 0376: 00 60 1588 1571 0290   cleat (1571 current word selected in successor list), goto 0290   
DBG(46746573)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46746574)> CPU DETAIL: Transfer to T 
DBG(46746574)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46746576)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46746577)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46746578)> CPU DETAIL: Transfer to T 
DBG(46746578)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46746580)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46746581)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46746582)> CPU DETAIL: Read S 1557: 0000000000000014 
DBG(46746583)> CPU DETAIL: Result: 0000000000000000 
DBG(46746586)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46746587)> CPU DETAIL: REG1: 0000000000000000
DBG(46746587)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46746589)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46746590)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46746591)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46746593)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46746594)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46746595)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46746597)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46746598)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46746599)> CPU DETAIL: Transfer to T 
DBG(46746599)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46746601)> CPU CMD: Exec 0034: 02 94 0629 0000 0003   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46746602)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0003
DBG(46746602)> MT DATA: Tape unit 2: init read
DBG(46746602)> MT DETAIL: Read tape record (290 chars, used 2.07 inches, needs 12 msec) from tape 2
DBG(46746602)> MT DETAIL: Tape record contents: D*0290020102140003C*4011009898989820C*2222222222222222C*33333333333333...
DBG(46746602)> MT EXP: Start Of Block Word: 0290020102140003
DBG(46746602)> MT EXP: Read Tape Block number 0003
DBG(46746602)> MT EXP: Read forward addr 0629 to 0000
DBG(46746602)> MT EXP: Tape to CRT 0629: 4011009898989820 
DBG(46746602)> MT EXP: Tape to CRT 0630: 2222222222222222 
DBG(46746602)> MT EXP: Tape to CRT 0631: 3333333333333333 
DBG(46746602)> MT EXP: Tape to CRT 0632: 5500009898989840 
DBG(46746602)> MT EXP: Tape to CRT 0633: 5555555555555555 
DBG(46746602)> MT EXP: Tape to CRT 0634: 6666666666666666 
DBG(46746602)> MT EXP: Tape to CRT 0635: 7777777777777777 
DBG(46746602)> MT EXP: Tape to CRT 0636: 4011009898989850 
DBG(46746602)> MT EXP: Tape to CRT 0637: 2222222222222222 
DBG(46746602)> MT EXP: Tape to CRT 0638: 3333333333333333 
DBG(46746602)> MT EXP: Tape to CRT 0639: 6600009898989820 
DBG(46746602)> MT EXP: Tape to CRT 0640: 5555555555555555 
DBG(46746602)> MT EXP: Tape to CRT 0641: 6666666666666666 
DBG(46746602)> MT EXP: Tape to CRT 0642: 7777777777777777 
DBG(46746602)> MT EXP: End Of Block Word: 0290020102140003, data words in block: 14
DBG(46746602)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.05% of medium (8.80 inches)
DBG(46746605)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46746606)> CPU DETAIL: Condition not present 
DBG(46746608)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46746609)> CPU DETAIL: Condition not present 
DBG(46746611)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46746612)> CPU DETAIL: Write 1554: 0290020102140003 
DBG(46746614)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46746615)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46746616)> CPU DETAIL: Result: 0000000002140000 
DBG(46746617)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000214 
DBG(46746618)> CPU DETAIL: Write 1555: 0000000000000214 
DBG(46746620)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46746621)> CPU DETAIL: Read R 1554: 0290020102140003 
DBG(46746622)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46746623)> CPU DETAIL: Result: 0000020100000000 
DBG(46746624)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46746627)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46746628)> CPU DETAIL: Read R 1555: 0000000000000214 
DBG(46746629)> CPU DETAIL: Result: 0000000000000013 
DBG(46746630)> CPU DETAIL: Write 1556: 0000000000000013 
DBG(46746632)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46746633)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46746634)> CPU DETAIL: Result: 0000000000000014 
DBG(46746635)> CPU DETAIL: Write 1556: 0000000000000014 
DBG(46746637)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46746638)> CPU DETAIL: Read R 0034: 0294062900000003 
DBG(46746639)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46746640)> CPU DETAIL: Result: 0294062900000004 
DBG(46746641)> CPU DETAIL: Write 0034: 0294062900000004 
DBG(46746643)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46746644)> CPU DETAIL: Clear M4
DBG(46746644)> CPU DETAIL: M4: 0000 
DBG(46746645)> CPU DETAIL: M6: 0010 
DBG(46746646)> CPU DETAIL: M8: 0030 
DBG(46746649)> CPU CMD: Exec 0044: 00 60 0000 0000 0063   nop   
DBG(46746650)> CPU DETAIL: Transfer to T 
DBG(46746652)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746653)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46746653)> CPU DETAIL: Read R 0629: 4011009898989820 
DBG(46746654)> CPU DETAIL: Write 1033: 4011009898989820 
DBG(46746656)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746657)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46746658)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746659)> CPU DETAIL: Result: 0060462910340000 
DBG(46746660)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46746662)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746663)> CPU DETAIL: M4: 0001 
DBG(46746664)> CPU DETAIL: Transfer to T 
DBG(46746666)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746667)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46746667)> CPU DETAIL: Read R 0630: 2222222222222222 
DBG(46746668)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46746670)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746671)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46746672)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746673)> CPU DETAIL: Result: 0060462910350000 
DBG(46746674)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46746676)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746677)> CPU DETAIL: M4: 0002 
DBG(46746678)> CPU DETAIL: Transfer to T 
DBG(46746680)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746681)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46746681)> CPU DETAIL: Read R 0631: 3333333333333333 
DBG(46746682)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46746684)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746685)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46746686)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746687)> CPU DETAIL: Result: 0060462910360000 
DBG(46746688)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46746690)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746691)> CPU DETAIL: M4: 0003 
DBG(46746692)> CPU DETAIL: Transfer to T 
DBG(46746694)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746695)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46746695)> CPU DETAIL: Read R 0632: 5500009898989840 
DBG(46746696)> CPU DETAIL: Write 1036: 5500009898989840 
DBG(46746698)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746699)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46746700)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746701)> CPU DETAIL: Result: 0060462910370000 
DBG(46746702)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46746704)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746705)> CPU DETAIL: M4: 0004 
DBG(46746706)> CPU DETAIL: Transfer to T 
DBG(46746708)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746709)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46746709)> CPU DETAIL: Read R 0633: 5555555555555555 
DBG(46746710)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46746712)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746713)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46746714)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746715)> CPU DETAIL: Result: 0060462910380000 
DBG(46746716)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46746718)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746719)> CPU DETAIL: M4: 0005 
DBG(46746720)> CPU DETAIL: Transfer to T 
DBG(46746722)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746723)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46746723)> CPU DETAIL: Read R 0634: 6666666666666666 
DBG(46746724)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46746726)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746727)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46746728)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746729)> CPU DETAIL: Result: 0060462910390000 
DBG(46746730)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46746732)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746733)> CPU DETAIL: M4: 0006 
DBG(46746734)> CPU DETAIL: Transfer to T 
DBG(46746736)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746737)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46746737)> CPU DETAIL: Read R 0635: 7777777777777777 
DBG(46746738)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46746740)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746741)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46746742)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746743)> CPU DETAIL: Result: 0060462910400000 
DBG(46746744)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46746746)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746747)> CPU DETAIL: M4: 0007 
DBG(46746750)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46746751)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46746752)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46746755)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46746756)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46746757)> CPU DETAIL: Result: 0458000100140063 
DBG(46746758)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46746760)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46746761)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46746762)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46746764)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46746765)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46746766)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46746767)> CPU DETAIL: Result: 0000000000000007 
DBG(46746768)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46746770)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46746771)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46746772)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46746773)> CPU DETAIL: Result: 5500000000000000 
DBG(46746774)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46746776)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46746777)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46746778)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746779)> CPU DETAIL: Transfer to T 
DBG(46746781)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46746782)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46746783)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46746785)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46746786)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46746787)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46746789)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46746790)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46746791)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46746793)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46746794)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46746795)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46746797)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46746798)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46746799)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46746801)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46746802)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46746803)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46746805)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46746806)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46746807)> CPU DETAIL: Transfer to T 
DBG(46746807)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46746809)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46746810)> CPU DETAIL: Condition not present 
DBG(46746812)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46746813)> CPU DETAIL: Transfer to T 
DBG(46746815)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46746816)> CPU DETAIL: Transfer to T 
DBG(46746818)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46746819)> CPU DETAIL: Read R 1033: 4011009898989820 
DBG(46746820)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000004 
DBG(46746821)> CPU DETAIL: Write 1569: 0000000000000004 
DBG(46746823)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46746824)> CPU DETAIL: Read R 1033: 4011009898989820 
DBG(46746825)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746826)> CPU DETAIL: Result: 0000009898989820 
DBG(46746827)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46746829)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46746830)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46746831)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46746832)> CPU DETAIL: Result: 0000009898989820 
DBG(46746833)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46746835)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46746836)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746837)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746838)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746839)> CPU DETAIL: Transfer to T 
DBG(46746841)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46746842)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46746843)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46746844)> CPU DETAIL: Result: 0000000000000000 
DBG(46746847)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46746848)> CPU DETAIL: REG1: 0000000000000000
DBG(46746848)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46746850)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46746851)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46746852)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46746853)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46746856)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46746857)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46746858)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46746859)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46746862)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46746863)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46746864)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46746865)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46746868)> CPU CMD: Exec 0238: 00 70 1569 1624 0329   if (1569 card code)=4 goto 0329         card code 4 -> change static data   
DBG(46746869)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46746870)> CPU DETAIL: Read S 1624: 0000000000000004 
DBG(46746871)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46746872)> CPU DETAIL: Transfer to T 
DBG(46746874)> CPU CMD: Exec 0329: 00 60 0000 0000 0057   nop   
DBG(46746875)> CPU DETAIL: Transfer to T 
DBG(46746877)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46746878)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46746879)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46746880)> CPU DETAIL: Result: 0000000000000007 
DBG(46746883)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46746884)> CPU DETAIL: REG1: 0000000000000007
DBG(46746884)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46746886)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746887)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(46746887)> CPU DETAIL: Read R 0636: 4011009898989850 
DBG(46746888)> CPU DETAIL: Write 1033: 4011009898989850 
DBG(46746890)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746891)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46746892)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746893)> CPU DETAIL: Result: 0060462910340000 
DBG(46746894)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46746896)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746897)> CPU DETAIL: M4: 0008 
DBG(46746898)> CPU DETAIL: Transfer to T 
DBG(46746900)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746901)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(46746901)> CPU DETAIL: Read R 0637: 2222222222222222 
DBG(46746902)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46746904)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746905)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46746906)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746907)> CPU DETAIL: Result: 0060462910350000 
DBG(46746908)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46746910)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746911)> CPU DETAIL: M4: 0009 
DBG(46746912)> CPU DETAIL: Transfer to T 
DBG(46746914)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746915)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(46746915)> CPU DETAIL: Read R 0638: 3333333333333333 
DBG(46746916)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46746918)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746919)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46746920)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746921)> CPU DETAIL: Result: 0060462910360000 
DBG(46746922)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46746924)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746925)> CPU DETAIL: M4: 0010 
DBG(46746926)> CPU DETAIL: Transfer to T 
DBG(46746928)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746929)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(46746929)> CPU DETAIL: Read R 0639: 6600009898989820 
DBG(46746930)> CPU DETAIL: Write 1036: 6600009898989820 
DBG(46746932)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746933)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46746934)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746935)> CPU DETAIL: Result: 0060462910370000 
DBG(46746936)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46746938)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746939)> CPU DETAIL: M4: 0011 
DBG(46746940)> CPU DETAIL: Transfer to T 
DBG(46746942)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746943)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(46746943)> CPU DETAIL: Read R 0640: 5555555555555555 
DBG(46746944)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46746946)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746947)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46746948)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746949)> CPU DETAIL: Result: 0060462910380000 
DBG(46746950)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46746952)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746953)> CPU DETAIL: M4: 0012 
DBG(46746954)> CPU DETAIL: Transfer to T 
DBG(46746956)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746957)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(46746957)> CPU DETAIL: Read R 0641: 6666666666666666 
DBG(46746958)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46746960)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746961)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46746962)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746963)> CPU DETAIL: Result: 0060462910390000 
DBG(46746964)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46746966)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746967)> CPU DETAIL: M4: 0013 
DBG(46746968)> CPU DETAIL: Transfer to T 
DBG(46746970)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46746971)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(46746971)> CPU DETAIL: Read R 0642: 7777777777777777 
DBG(46746972)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46746974)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46746975)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46746976)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46746977)> CPU DETAIL: Result: 0060462910400000 
DBG(46746978)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46746980)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46746981)> CPU DETAIL: M4: 0014 
DBG(46746984)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46746985)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46746986)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46746989)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46746990)> CPU DETAIL: Read R 0065: 0458000100140063 
DBG(46746991)> CPU DETAIL: Result: 0458000100210063 
DBG(46746992)> CPU DETAIL: Write 0065: 0458000100210063 
DBG(46746994)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46746995)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46746996)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46746998)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46746999)> CPU DETAIL: Read R 1557: 0000000000000007 
DBG(46747000)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46747001)> CPU DETAIL: Result: 0000000000000014 
DBG(46747002)> CPU DETAIL: Write 1557: 0000000000000014 
DBG(46747004)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46747005)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46747006)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747007)> CPU DETAIL: Result: 6600000000000000 
DBG(46747008)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46747010)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46747011)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46747012)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46747015)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46747016)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46747017)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46747018)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747019)> CPU DETAIL: Transfer to T 
DBG(46747021)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46747022)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46747023)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46747025)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46747026)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46747027)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46747029)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46747030)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46747031)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46747033)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46747034)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747035)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46747037)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46747038)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46747039)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46747041)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46747042)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747043)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46747045)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46747046)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747047)> CPU DETAIL: Transfer to T 
DBG(46747047)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46747049)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46747050)> CPU DETAIL: Condition not present 
DBG(46747052)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46747053)> CPU DETAIL: Transfer to T 
DBG(46747055)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46747056)> CPU DETAIL: Transfer to T 
DBG(46747058)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46747059)> CPU DETAIL: Read R 1033: 4011009898989850 
DBG(46747060)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000004 
DBG(46747061)> CPU DETAIL: Write 1569: 0000000000000004 
DBG(46747063)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46747064)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46747065)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46747066)> CPU DETAIL: Result: 0000009898989820 
DBG(46747067)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46747069)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46747070)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46747071)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46747072)> CPU DETAIL: Result: 0000009898989820 
DBG(46747073)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46747075)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46747076)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46747077)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46747078)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747079)> CPU DETAIL: Transfer to T 
DBG(46747081)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46747082)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46747083)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46747084)> CPU DETAIL: Result: 0000000000000000 
DBG(46747087)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46747088)> CPU DETAIL: REG1: 0000000000000000
DBG(46747088)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46747090)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46747091)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46747092)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747093)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46747096)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46747097)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46747098)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46747099)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46747102)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46747103)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46747104)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46747105)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46747108)> CPU CMD: Exec 0238: 00 70 1569 1624 0329   if (1569 card code)=4 goto 0329         card code 4 -> change static data   
DBG(46747109)> CPU DETAIL: Read R 1569: 0000000000000004 
DBG(46747110)> CPU DETAIL: Read S 1624: 0000000000000004 
DBG(46747111)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747112)> CPU DETAIL: Transfer to T 
DBG(46747114)> CPU CMD: Exec 0329: 00 60 0000 0000 0000   nop   
DBG(46747117)> CPU CMD: Exec 0330: 01 60 1042 0000 0000   (1042 event rec word 2) -> REG1                event w2= xxxxxx  EEEEEEEEE x 
DBG(46747118)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46747119)> CPU DETAIL: Word Shift 1 digits right: REG1: 0000000989898982 
DBG(46747122)> CPU CMD: Exec 0331: 99 60 0000 1042 0000   Now (1042 = xxxxxx  EEEEEEEEE 0)   
DBG(46747123)> CPU DETAIL: Word Shift 1 digits left: REG1: 0000009898989820 
DBG(46747124)> CPU DETAIL: Write 1042: 0000009898989820 
DBG(46747126)> CPU CMD: Exec 0332: 00 42 1036 1587 0000   Mask (1036 transac rec w4) rightmost digit     transac w4 = QQ xx xx SSSSSSS 
DBG(46747127)> CPU DETAIL: Read R 1036: 6600009898989820 
DBG(46747128)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747129)> CPU DETAIL: Result: 0000000000000000 
DBG(46747132)> CPU CMD: Exec 0333: 00 40 1042 0000 1042   Set this digit as report code in (1042 event rec w2)      event w2= xxxxxx   
DBG(46747133)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46747134)> CPU DETAIL: Result: 0000009898989820 
DBG(46747135)> CPU DETAIL: Write 1042: 0000009898989820 
DBG(46747137)> CPU CMD: Exec 0334: 96 60 1047 0000 0000   (1047 event rec word 7) -> REG1                event w7 = SCHEDL xx xxxx TST 
DBG(46747138)> CPU DETAIL: Read R 1047: 0000777700000001 
DBG(46747139)> CPU DETAIL: Word Shift 4 digits left: REG1: 7777000000010000 
DBG(46747142)> CPU CMD: Exec 0335: 04 60 0000 1047 0000   Now (1047 = 0000 TTTT xxxx AA BB)   
DBG(46747143)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000777700000001 
DBG(46747144)> CPU DETAIL: Write 1047: 0000777700000001 
DBG(46747146)> CPU CMD: Exec 0336: 88 42 1039 1582 0000   Mask (1039 transac rec w7) with field T, then shift left 12   
DBG(46747147)> CPU DETAIL: Read R 1039: 7777777777777777 
DBG(46747148)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46747149)> CPU DETAIL: Result: 0000000000007777 
DBG(46747150)> CPU DETAIL: Word Shift 12 digits left: REG1: 7777000000000000 
DBG(46747153)> CPU CMD: Exec 0337: 00 40 1047 0000 1047   Set field T in (1047 event rec w7)             event w7= TSTS TTTT xxxx AA B 
DBG(46747154)> CPU DETAIL: Read R 1047: 0000777700000001 
DBG(46747155)> CPU DETAIL: Result: 7777777700000001 
DBG(46747156)> CPU DETAIL: Write 1047: 7777777700000001 
DBG(46747158)> CPU CMD: Exec 0338: 00 42 1041 1584 1041   Mask (1041 event rec word 1) with 1..1 1100 0000 -> REG1   
DBG(46747159)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46747160)> CPU DETAIL: Read S 1584: 1111111111000000 
DBG(46747161)> CPU DETAIL: Result: 0100000000000000 
DBG(46747162)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46747164)> CPU CMD: Exec 0339: 10 42 1039 1580 0000   Mask (1039 transac rec w7) to get 6 leftmost digits (the schedulled date)   
DBG(46747165)> CPU DETAIL: Read R 1039: 7777777777777777 
DBG(46747166)> CPU DETAIL: Read S 1580: 1111110000000000 
DBG(46747167)> CPU DETAIL: Result: 7777770000000000 
DBG(46747168)> CPU DETAIL: Word Shift 10 digits right: REG1: 0000000000777777 
DBG(46747171)> CPU CMD: Exec 0340: 00 40 1041 0000 1041   set these digits as 6 rightmost digits ot event w1= NNN xxx xxxx SCHEDL    N 
DBG(46747172)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46747173)> CPU DETAIL: Result: 0100000000777777 
DBG(46747174)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46747176)> CPU CMD: Exec 0341: 00 60 0000 0000 0057   go to process next transaction   
DBG(46747177)> CPU DETAIL: Transfer to T 
DBG(46747179)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46747180)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46747181)> CPU DETAIL: Read S 1557: 0000000000000014 
DBG(46747182)> CPU DETAIL: Result: 0000000000000000 
DBG(46747185)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46747186)> CPU DETAIL: REG1: 0000000000000000
DBG(46747186)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46747188)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46747189)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46747190)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46747192)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46747193)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747194)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46747196)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46747197)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46747198)> CPU DETAIL: Transfer to T 
DBG(46747198)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46747200)> CPU CMD: Exec 0034: 02 94 0629 0000 0004   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46747201)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0004
DBG(46747201)> MT DATA: Tape unit 2: init read
DBG(46747201)> MT DETAIL: Read tape record (290 chars, used 2.07 inches, needs 12 msec) from tape 2
DBG(46747201)> MT DETAIL: Tape record contents: D*0290020102140004C*5011009898989830C*2222222222222222C*33333333333333...
DBG(46747201)> MT EXP: Start Of Block Word: 0290020102140004
DBG(46747201)> MT EXP: Read Tape Block number 0004
DBG(46747201)> MT EXP: Read forward addr 0629 to 0000
DBG(46747201)> MT EXP: Tape to CRT 0629: 5011009898989830 
DBG(46747201)> MT EXP: Tape to CRT 0630: 2222222222222222 
DBG(46747201)> MT EXP: Tape to CRT 0631: 3333333333333333 
DBG(46747201)> MT EXP: Tape to CRT 0632: 5500009898989840 
DBG(46747201)> MT EXP: Tape to CRT 0633: 5555555555555555 
DBG(46747201)> MT EXP: Tape to CRT 0634: 6666666666666666 
DBG(46747201)> MT EXP: Tape to CRT 0635: 7777777777777777 
DBG(46747201)> MT EXP: Tape to CRT 0636: 5011009898989820 
DBG(46747201)> MT EXP: Tape to CRT 0637: 2222222222222222 
DBG(46747201)> MT EXP: Tape to CRT 0638: 3333333333333333 
DBG(46747201)> MT EXP: Tape to CRT 0639: 6600009898989830 
DBG(46747201)> MT EXP: Tape to CRT 0640: 5555555555555555 
DBG(46747201)> MT EXP: Tape to CRT 0641: 6666666666666666 
DBG(46747201)> MT EXP: Tape to CRT 0642: 7777777777777777 
DBG(46747201)> MT EXP: End Of Block Word: 0290020102140004, data words in block: 14
DBG(46747201)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.06% of medium (10.87 inches)
DBG(46747204)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46747205)> CPU DETAIL: Condition not present 
DBG(46747207)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46747208)> CPU DETAIL: Condition not present 
DBG(46747210)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46747211)> CPU DETAIL: Write 1554: 0290020102140004 
DBG(46747213)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46747214)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46747215)> CPU DETAIL: Result: 0000000002140000 
DBG(46747216)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000214 
DBG(46747217)> CPU DETAIL: Write 1555: 0000000000000214 
DBG(46747219)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46747220)> CPU DETAIL: Read R 1554: 0290020102140004 
DBG(46747221)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46747222)> CPU DETAIL: Result: 0000020100000000 
DBG(46747223)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46747226)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46747227)> CPU DETAIL: Read R 1555: 0000000000000214 
DBG(46747228)> CPU DETAIL: Result: 0000000000000013 
DBG(46747229)> CPU DETAIL: Write 1556: 0000000000000013 
DBG(46747231)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46747232)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46747233)> CPU DETAIL: Result: 0000000000000014 
DBG(46747234)> CPU DETAIL: Write 1556: 0000000000000014 
DBG(46747236)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46747237)> CPU DETAIL: Read R 0034: 0294062900000004 
DBG(46747238)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747239)> CPU DETAIL: Result: 0294062900000005 
DBG(46747240)> CPU DETAIL: Write 0034: 0294062900000005 
DBG(46747242)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46747243)> CPU DETAIL: Clear M4
DBG(46747243)> CPU DETAIL: M4: 0000 
DBG(46747244)> CPU DETAIL: M6: 0010 
DBG(46747245)> CPU DETAIL: M8: 0030 
DBG(46747248)> CPU CMD: Exec 0044: 00 60 0000 0000 0063   nop   
DBG(46747249)> CPU DETAIL: Transfer to T 
DBG(46747251)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747252)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46747252)> CPU DETAIL: Read R 0629: 5011009898989830 
DBG(46747253)> CPU DETAIL: Write 1033: 5011009898989830 
DBG(46747255)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747256)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46747257)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747258)> CPU DETAIL: Result: 0060462910340000 
DBG(46747259)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46747261)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747262)> CPU DETAIL: M4: 0001 
DBG(46747263)> CPU DETAIL: Transfer to T 
DBG(46747265)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747266)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46747266)> CPU DETAIL: Read R 0630: 2222222222222222 
DBG(46747267)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46747269)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747270)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46747271)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747272)> CPU DETAIL: Result: 0060462910350000 
DBG(46747273)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46747275)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747276)> CPU DETAIL: M4: 0002 
DBG(46747277)> CPU DETAIL: Transfer to T 
DBG(46747279)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747280)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46747280)> CPU DETAIL: Read R 0631: 3333333333333333 
DBG(46747281)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46747283)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747284)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46747285)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747286)> CPU DETAIL: Result: 0060462910360000 
DBG(46747287)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46747289)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747290)> CPU DETAIL: M4: 0003 
DBG(46747291)> CPU DETAIL: Transfer to T 
DBG(46747293)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747294)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46747294)> CPU DETAIL: Read R 0632: 5500009898989840 
DBG(46747295)> CPU DETAIL: Write 1036: 5500009898989840 
DBG(46747297)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747298)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46747299)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747300)> CPU DETAIL: Result: 0060462910370000 
DBG(46747301)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46747303)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747304)> CPU DETAIL: M4: 0004 
DBG(46747305)> CPU DETAIL: Transfer to T 
DBG(46747307)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747308)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46747308)> CPU DETAIL: Read R 0633: 5555555555555555 
DBG(46747309)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46747311)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747312)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46747313)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747314)> CPU DETAIL: Result: 0060462910380000 
DBG(46747315)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46747317)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747318)> CPU DETAIL: M4: 0005 
DBG(46747319)> CPU DETAIL: Transfer to T 
DBG(46747321)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747322)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46747322)> CPU DETAIL: Read R 0634: 6666666666666666 
DBG(46747323)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46747325)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747326)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46747327)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747328)> CPU DETAIL: Result: 0060462910390000 
DBG(46747329)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46747331)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747332)> CPU DETAIL: M4: 0006 
DBG(46747333)> CPU DETAIL: Transfer to T 
DBG(46747335)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46747336)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46747336)> CPU DETAIL: Read R 0635: 7777777777777777 
DBG(46747337)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46747339)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46747340)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46747341)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46747342)> CPU DETAIL: Result: 0060462910400000 
DBG(46747343)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46747345)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46747346)> CPU DETAIL: M4: 0007 
DBG(46747349)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46747350)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46747351)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46747354)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46747355)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46747356)> CPU DETAIL: Result: 0458000100140063 
DBG(46747357)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46747359)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46747360)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46747361)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46747363)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46747364)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46747365)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46747366)> CPU DETAIL: Result: 0000000000000007 
DBG(46747367)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46747369)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46747370)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46747371)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747372)> CPU DETAIL: Result: 5500000000000000 
DBG(46747373)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46747375)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46747376)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46747377)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747378)> CPU DETAIL: Transfer to T 
DBG(46747380)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46747381)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46747382)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46747384)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46747385)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747386)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46747388)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46747389)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747390)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46747392)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46747393)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46747394)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46747396)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46747397)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46747398)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46747400)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46747401)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46747402)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46747404)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46747405)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46747406)> CPU DETAIL: Transfer to T 
DBG(46747406)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46747408)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46747409)> CPU DETAIL: Condition not present 
DBG(46747411)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46747412)> CPU DETAIL: Transfer to T 
DBG(46747414)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46747415)> CPU DETAIL: Transfer to T 
DBG(46747417)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46747418)> CPU DETAIL: Read R 1033: 5011009898989830 
DBG(46747419)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000005 
DBG(46747420)> CPU DETAIL: Write 1569: 0000000000000005 
DBG(46747422)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46747423)> CPU DETAIL: Read R 1033: 5011009898989830 
DBG(46747424)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46747425)> CPU DETAIL: Result: 0000009898989830 
DBG(46747426)> CPU DETAIL: Write 1568: 0000009898989830 
DBG(46747428)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46747429)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46747430)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46747431)> CPU DETAIL: Result: 0000009898989820 
DBG(46747432)> CPU DETAIL: Write 1567: 0000009898989820 
DBG(46747434)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46747435)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46747436)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46747437)> CPU DETAIL: Diff: REG1: 0000000000000010
DBG(46747440)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46747441)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46747442)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46747444)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46747445)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46747446)> CPU DETAIL: Read S 1567: 0000009898989820 
DBG(46747447)> CPU DETAIL: Result: 0000000000000010 
DBG(46747450)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46747451)> CPU DETAIL: REG1: 0000000000000010
DBG(46747451)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46747453)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46747454)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46747455)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46747457)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46747458)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46747459)> CPU DETAIL: Read S 1564: 0000000000000006 
DBG(46747460)> CPU DETAIL: Result: 0000000000000009 
DBG(46747463)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46747464)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46747465)> CPU DETAIL: Result: 0000000000000016 
DBG(46747466)> CPU DETAIL: Write 1565: 0000000000000016 
DBG(46747468)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46747469)> CPU DETAIL: Read R 1570: 0000000000000030 
DBG(46747470)> CPU DETAIL: Read S 1565: 0000000000000016 
DBG(46747471)> CPU DETAIL: Result: 0000000000000046 
DBG(46747474)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46747475)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46747476)> CPU DETAIL: Result: 0000000000000154 
DBG(46747479)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46747480)> CPU DETAIL: REG1: 0000000000000154
DBG(46747480)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46747482)> CPU CMD: Exec 0172: 00 60 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46747485)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46747486)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46747487)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000777777000 
DBG(46747490)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46747491)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000777777 
DBG(46747492)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46747494)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46747495)> CPU DETAIL: Read R 1047: 7777777700000001 
DBG(46747496)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46747497)> CPU DETAIL: Result: 0000000000000001 
DBG(46747498)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(46747501)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46747502)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46747503)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46747503)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46747504)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46747505)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46747508)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46747509)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46747512)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46747513)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46747514)> CPU DETAIL: Result: 0000000000777777 
DBG(46747515)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46747517)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46747518)> CPU DETAIL: Read R 1047: 7777777700000001 
DBG(46747519)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46747520)> CPU DETAIL: Result: 0000000000000001 
DBG(46747523)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46747524)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46747525)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46747525)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46747526)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46747527)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46747530)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46747531)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46747534)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46747535)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46747536)> CPU DETAIL: Result: 0030000000777777 
DBG(46747537)> CPU DETAIL: Write 1041: 0030000000777777 
DBG(46747539)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46747540)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46747541)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46747544)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46747545)> CPU DETAIL: Read R 1041: 0030000000777777 
DBG(46747546)> CPU DETAIL: Result: 0100000000777777 
DBG(46747547)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46747549)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46747550)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46747551)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46747553)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747554)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46747555)> CPU DETAIL: M8 Address Modifier: 0030 
DBG(46747555)> CPU DETAIL: Write 1378: 0100000000777777 
DBG(46747557)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747558)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46747559)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747560)> CPU DETAIL: Result: 0060104293480000 
DBG(46747561)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46747563)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747566)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747567)> CPU DETAIL: M8: 0031 
DBG(46747568)> CPU DETAIL: Transfer to T 
DBG(46747570)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747571)> CPU DETAIL: Read R 1042: 0000009898989820 
DBG(46747572)> CPU DETAIL: M8 Address Modifier: 0031 
DBG(46747572)> CPU DETAIL: Write 1379: 0000009898989820 
DBG(46747574)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747575)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46747576)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747577)> CPU DETAIL: Result: 0060104393480000 
DBG(46747578)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46747580)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747583)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747584)> CPU DETAIL: M8: 0032 
DBG(46747585)> CPU DETAIL: Transfer to T 
DBG(46747587)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747588)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46747589)> CPU DETAIL: M8 Address Modifier: 0032 
DBG(46747589)> CPU DETAIL: Write 1380: 0000000000000000 
DBG(46747591)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747592)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46747593)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747594)> CPU DETAIL: Result: 0060104493480000 
DBG(46747595)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46747597)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747600)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747601)> CPU DETAIL: M8: 0033 
DBG(46747602)> CPU DETAIL: Transfer to T 
DBG(46747604)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747605)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46747606)> CPU DETAIL: M8 Address Modifier: 0033 
DBG(46747606)> CPU DETAIL: Write 1381: 0000000000000000 
DBG(46747608)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747609)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46747610)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747611)> CPU DETAIL: Result: 0060104593480000 
DBG(46747612)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46747614)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747617)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747618)> CPU DETAIL: M8: 0034 
DBG(46747619)> CPU DETAIL: Transfer to T 
DBG(46747621)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747622)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46747623)> CPU DETAIL: M8 Address Modifier: 0034 
DBG(46747623)> CPU DETAIL: Write 1382: 0000000000000000 
DBG(46747625)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747626)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46747627)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747628)> CPU DETAIL: Result: 0060104693480000 
DBG(46747629)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46747631)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747634)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747635)> CPU DETAIL: M8: 0035 
DBG(46747636)> CPU DETAIL: Transfer to T 
DBG(46747638)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747639)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46747640)> CPU DETAIL: M8 Address Modifier: 0035 
DBG(46747640)> CPU DETAIL: Write 1383: 0000000000000000 
DBG(46747642)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747643)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46747644)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747645)> CPU DETAIL: Result: 0060104793480000 
DBG(46747646)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46747648)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747651)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747652)> CPU DETAIL: M8: 0036 
DBG(46747653)> CPU DETAIL: Transfer to T 
DBG(46747655)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46747656)> CPU DETAIL: Read R 1047: 7777777700000001 
DBG(46747657)> CPU DETAIL: M8 Address Modifier: 0036 
DBG(46747657)> CPU DETAIL: Write 1384: 7777777700000001 
DBG(46747659)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46747660)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46747661)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747662)> CPU DETAIL: Result: 0060104893480000 
DBG(46747663)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46747665)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46747668)> CPU CMD: Exec 0189: 08 58 0001 0037 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46747669)> CPU DETAIL: M8: 0037 
DBG(46747672)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46747673)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46747674)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46747676)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46747677)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46747678)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46747680)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46747681)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46747682)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46747683)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46747684)> CPU DETAIL: Transfer to T 
DBG(46747686)> CPU CMD: Exec 0194: 00 42 0189 1585 0202      
DBG(46747687)> CPU DETAIL: Read R 0189: 0858000100370186 
DBG(46747688)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46747689)> CPU DETAIL: Result: 0000000000370000 
DBG(46747690)> CPU DETAIL: Write 0202: 0000000000370000 
DBG(46747692)> CPU CMD: Exec 0195: 96 60 1563 0000 0000   (1563 words used by predecessors) Shift left 4 -> REG1   
DBG(46747693)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46747694)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46747697)> CPU CMD: Exec 0196: 00 40 1616 0000 0000   (1616) + REG1 -> REG1   
DBG(46747698)> CPU DETAIL: Read R 1616: 0858000100000198 
DBG(46747699)> CPU DETAIL: Result: 0858000100030198 
DBG(46747702)> CPU CMD: Exec 0197: 00 40 0202 0000 0202   (0202) + REG1 -> (0202)   
DBG(46747703)> CPU DETAIL: Read R 0202: 0000000000370000 
DBG(46747704)> CPU DETAIL: Result: 0858000100400198 
DBG(46747705)> CPU DETAIL: Write 0202: 0858000100400198 
DBG(46747707)> CPU CMD: Exec 0198: 00 60 1048 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46747708)> CPU DETAIL: Read R 1048: 5500000000000000 
DBG(46747709)> CPU DETAIL: M8 Address Modifier: 0037 
DBG(46747709)> CPU DETAIL: Write 1385: 5500000000000000 
DBG(46747711)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46747712)> CPU DETAIL: Read R 0198: 0060104893480000 
DBG(46747713)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747714)> CPU DETAIL: Result: 0060104993480000 
DBG(46747715)> CPU DETAIL: Write 0198: 0060104993480000 
DBG(46747717)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46747718)> CPU DETAIL: M8 Address Modifier: 0037 
DBG(46747718)> CPU DETAIL: Read R 1385: 5500000000000000 
DBG(46747719)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747720)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747721)> CPU DETAIL: Transfer to T 
DBG(46747723)> CPU CMD: Exec 0588: 00 40 0198 1674 0198   incr_r in (0198)   
DBG(46747724)> CPU DETAIL: Read R 0198: 0060104993480000 
DBG(46747725)> CPU DETAIL: Read S 1674: 0000000200000000 
DBG(46747726)> CPU DETAIL: Result: 0060105193480000 
DBG(46747727)> CPU DETAIL: Write 0198: 0060105193480000 
DBG(46747729)> CPU CMD: Exec 0589: 00 41 0202 1675 0202   incr_s in (0202)    
DBG(46747730)> CPU DETAIL: Read R 0202: 0858000100400198 
DBG(46747731)> CPU DETAIL: Read S 1675: 0000000000030000 
DBG(46747732)> CPU DETAIL: Result: 0858000100370198 
DBG(46747733)> CPU DETAIL: Write 0202: 0858000100370198 
DBG(46747735)> CPU CMD: Exec 0590: 00 41 1563 1623 1563   (1563 words used by predecessors) -= 3   
DBG(46747736)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46747737)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46747738)> CPU DETAIL: Result: 0000000000000000 
DBG(46747739)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46747741)> CPU CMD: Exec 0591: 00 41 0000 1577 0000   REG1 - (1577) check if list is finished   
DBG(46747742)> CPU DETAIL: Read S 1577: 0000000000000000 
DBG(46747743)> CPU DETAIL: Result: 0000000000000000 
DBG(46747746)> CPU CMD: Exec 0592: 00 63 0198 0203 0000   TR >0 goto 0198, =0 goto 0203, <0 cont   
DBG(46747747)> CPU DETAIL: REG1: 0000000000000000
DBG(46747747)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46747749)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46747750)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46747751)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46747753)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46747754)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747755)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46747757)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46747758)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46747759)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46747760)> CPU DETAIL: Diff: REG1: 0000000000000006
DBG(46747761)> CPU DETAIL: Transfer to T 
DBG(46747763)> CPU CMD: Exec 0207: 00 59 0000 0000 0000      
DBG(46747764)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0007 0010 0037
DBG(46747766)> CPU CMD: Exec 0208: 96 42 0000 1582 0216      
DBG(46747767)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46747768)> CPU DETAIL: Result: 0000000000000037 
DBG(46747769)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000370000 
DBG(46747770)> CPU DETAIL: Write 0216: 0000000000370000 
DBG(46747772)> CPU CMD: Exec 0209: 96 60 1564 0000 0000   (1564 words used by successors) Shift left 4 -> REG1   
DBG(46747773)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46747774)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000060000 
DBG(46747777)> CPU CMD: Exec 0210: 00 40 1618 0000 0000   (1618) + REG1   
DBG(46747778)> CPU DETAIL: Read R 1618: 0858000100000212 
DBG(46747779)> CPU DETAIL: Result: 0858000100060212 
DBG(46747782)> CPU CMD: Exec 0211: 00 40 0216 0000 0216   (0216) + REG1 -> (0216)   
DBG(46747783)> CPU DETAIL: Read R 0216: 0000000000370000 
DBG(46747784)> CPU DETAIL: Result: 0858000100430212 
DBG(46747785)> CPU DETAIL: Write 0216: 0858000100430212 
DBG(46747787)> CPU CMD: Exec 0212: 00 60 1148 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46747788)> CPU DETAIL: Read R 1148: 0000009898989830 
DBG(46747789)> CPU DETAIL: M8 Address Modifier: 0037 
DBG(46747789)> CPU DETAIL: Write 1385: 0000009898989830 
DBG(46747791)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46747792)> CPU DETAIL: Read R 0212: 0060114893480000 
DBG(46747793)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747794)> CPU DETAIL: Result: 0060114993480000 
DBG(46747795)> CPU DETAIL: Write 0212: 0060114993480000 
DBG(46747797)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46747798)> CPU DETAIL: M8 Address Modifier: 0037 
DBG(46747798)> CPU DETAIL: Read R 1385: 0000009898989830 
DBG(46747799)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747800)> CPU DETAIL: Diff: REG1: 4500009898989830
DBG(46747803)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46747804)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46747805)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747806)> CPU DETAIL: Result: 0000000000000001 
DBG(46747807)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46747809)> CPU CMD: Exec 0216: 08 58 0001 0043 0212      
DBG(46747810)> CPU DETAIL: M8: 0038 
DBG(46747811)> CPU DETAIL: Transfer to T 
DBG(46747813)> CPU CMD: Exec 0212: 00 60 1149 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46747814)> CPU DETAIL: Read R 1149: 5555505050505050 
DBG(46747815)> CPU DETAIL: M8 Address Modifier: 0038 
DBG(46747815)> CPU DETAIL: Write 1386: 5555505050505050 
DBG(46747817)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46747818)> CPU DETAIL: Read R 0212: 0060114993480000 
DBG(46747819)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747820)> CPU DETAIL: Result: 0060115093480000 
DBG(46747821)> CPU DETAIL: Write 0212: 0060115093480000 
DBG(46747823)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46747824)> CPU DETAIL: M8 Address Modifier: 0038 
DBG(46747824)> CPU DETAIL: Read R 1386: 5555505050505050 
DBG(46747825)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747826)> CPU DETAIL: Diff: REG1: 0055505050505050
DBG(46747829)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46747830)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46747831)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747832)> CPU DETAIL: Result: 0000000000000002 
DBG(46747833)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46747835)> CPU CMD: Exec 0216: 08 58 0001 0043 0212      
DBG(46747836)> CPU DETAIL: M8: 0039 
DBG(46747837)> CPU DETAIL: Transfer to T 
DBG(46747839)> CPU CMD: Exec 0212: 00 60 1150 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46747840)> CPU DETAIL: Read R 1150: 6666606060606060 
DBG(46747841)> CPU DETAIL: M8 Address Modifier: 0039 
DBG(46747841)> CPU DETAIL: Write 1387: 6666606060606060 
DBG(46747843)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46747844)> CPU DETAIL: Read R 0212: 0060115093480000 
DBG(46747845)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747846)> CPU DETAIL: Result: 0060115193480000 
DBG(46747847)> CPU DETAIL: Write 0212: 0060115193480000 
DBG(46747849)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46747850)> CPU DETAIL: M8 Address Modifier: 0039 
DBG(46747850)> CPU DETAIL: Read R 1387: 6666606060606060 
DBG(46747851)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747852)> CPU DETAIL: Diff: REG1: 1166606060606060
DBG(46747855)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46747856)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46747857)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46747858)> CPU DETAIL: Result: 0000000000000003 
DBG(46747859)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46747861)> CPU CMD: Exec 0216: 08 58 0001 0043 0212      
DBG(46747862)> CPU DETAIL: M8: 0040 
DBG(46747863)> CPU DETAIL: Transfer to T 
DBG(46747865)> CPU CMD: Exec 0212: 00 60 1151 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46747866)> CPU DETAIL: Read R 1151: 5500000000000000 
DBG(46747867)> CPU DETAIL: M8 Address Modifier: 0040 
DBG(46747867)> CPU DETAIL: Write 1388: 5500000000000000 
DBG(46747869)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46747870)> CPU DETAIL: Read R 0212: 0060115193480000 
DBG(46747871)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46747872)> CPU DETAIL: Result: 0060115293480000 
DBG(46747873)> CPU DETAIL: Write 0212: 0060115293480000 
DBG(46747875)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46747876)> CPU DETAIL: M8 Address Modifier: 0040 
DBG(46747876)> CPU DETAIL: Read R 1388: 5500000000000000 
DBG(46747877)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46747878)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46747879)> CPU DETAIL: Transfer to T 
DBG(46747881)> CPU CMD: Exec 0594: 00 40 0212 1674 0212   incr_R + 2 in (0212) to skip the rest of the 3w entry         
DBG(46747882)> CPU DETAIL: Read R 0212: 0060115293480000 
DBG(46747883)> CPU DETAIL: Read S 1674: 0000000200000000 
DBG(46747884)> CPU DETAIL: Result: 0060115493480000 
DBG(46747885)> CPU DETAIL: Write 0212: 0060115493480000 
DBG(46747887)> CPU CMD: Exec 0595: 00 41 0216 1675 0216   decr end of list addr in loop instr (0216)    
DBG(46747888)> CPU DETAIL: Read R 0216: 0858000100430212 
DBG(46747889)> CPU DETAIL: Read S 1675: 0000000000030000 
DBG(46747890)> CPU DETAIL: Result: 0858000100400212 
DBG(46747891)> CPU DETAIL: Write 0216: 0858000100400212 
DBG(46747893)> CPU CMD: Exec 0596: 00 41 1564 1623 1564   (1564 words used by successors) -=3   
DBG(46747894)> CPU DETAIL: Read R 1564: 0000000000000006 
DBG(46747895)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46747896)> CPU DETAIL: Result: 0000000000000003 
DBG(46747897)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46747899)> CPU CMD: Exec 0597: 00 41 0000 1577 0000   REG1 - (1577) check if list is finished   
DBG(46747900)> CPU DETAIL: Read S 1577: 0000000000000003 
DBG(46747901)> CPU DETAIL: Result: 0000000000000000 
DBG(46747904)> CPU CMD: Exec 0598: 00 63 0212 0217 0593   TR >0 goto 212, =0 goto 217, <0 goto 0593  reload transaction vars then proc 
DBG(46747905)> CPU DETAIL: REG1: 0000000000000000
DBG(46747905)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46747907)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46747908)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46747909)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46747911)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46747912)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747913)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46747915)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46747916)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46747917)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46747920)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46747921)> CPU DETAIL: Read R 0189: 0858000100370186 
DBG(46747922)> CPU DETAIL: Result: 0858000100470186 
DBG(46747923)> CPU DETAIL: Write 0189: 0858000100470186 
DBG(46747925)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46747926)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747927)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46747929)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46747930)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747931)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46747933)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46747934)> CPU DETAIL: Read R 1570: 0000000000000030 
DBG(46747935)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46747936)> CPU DETAIL: Result: 0000000000000040 
DBG(46747937)> CPU DETAIL: Write 1570: 0000000000000040 
DBG(46747939)> CPU CMD: Exec 0224: 00 60 0000 0000 0096   exit if no write to tape   
DBG(46747940)> CPU DETAIL: Transfer to T 
DBG(46747942)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46747943)> CPU DETAIL: Read R 1559: 0000000000000010 
DBG(46747944)> CPU DETAIL: Read S 1561: 0000000000000010 
DBG(46747945)> CPU DETAIL: Result: 0000000000000000 
DBG(46747948)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46747949)> CPU DETAIL: REG1: 0000000000000000
DBG(46747949)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46747951)> CPU CMD: Exec 0099: 00 60 1588 1561 0000   clear (1561 words read from event block) because event block fully processed 
DBG(46747952)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46747953)> CPU DETAIL: Write 1561: 0000000000000000 
DBG(46747955)> CPU CMD: Exec 0100: 00 60 1595 0056 0000   (1595) -> (0056)   
DBG(46747956)> CPU DETAIL: Read R 1595: 0060000000000102 
DBG(46747957)> CPU DETAIL: Write 0056: 0060000000000102 
DBG(46747959)> CPU CMD: Exec 0101: 00 60 1601 0124 0046   (1601) -> (0124), transfer to 0046        goto read next event block from ta 
DBG(46747960)> CPU DETAIL: Read R 1601: 0658000100070122 
DBG(46747961)> CPU DETAIL: Transfer to T 
DBG(46747961)> CPU DETAIL: Write 0124: 0658000100070122 
DBG(46747963)> CPU CMD: Exec 0046: 03 94 0830 0000 0003   read tape 03 block 0001 at (0830 event block read from tape)   
DBG(46747964)> CPU DETAIL: Tape operation on MT3, Addr 0830->0000, Block Number 0003
DBG(46747964)> MT DATA: Tape unit 3: init read
DBG(46747964)> MT DETAIL: Read tape record (272 chars, used 2.03 inches, needs 11 msec) from tape 3
DBG(46747964)> MT DETAIL: Tape record contents: D*0390030103130003C*0130000000000000C*0000009898989830C*00000000000000...
DBG(46747964)> MT EXP: Start Of Block Word: 0390030103130003
DBG(46747964)> MT EXP: Read Tape Block number 0003
DBG(46747964)> MT EXP: Read forward addr 0830 to 0000
DBG(46747964)> MT EXP: Tape to CRT 0830: 0130000000000000 
DBG(46747964)> MT EXP: Tape to CRT 0831: 0000009898989830 
DBG(46747964)> MT EXP: Tape to CRT 0832: 0000000000000000 
DBG(46747964)> MT EXP: Tape to CRT 0833: 0000000000000000 
DBG(46747964)> MT EXP: Tape to CRT 0834: 0000000000000000 
DBG(46747964)> MT EXP: Tape to CRT 0835: 0000000000000000 
DBG(46747964)> MT EXP: Tape to CRT 0836: 0000000000000101 
DBG(46747964)> MT EXP: Tape to CRT 0837: 0000009898989820 
DBG(46747964)> MT EXP: Tape to CRT 0838: 0000000000008555 
DBG(46747964)> MT EXP: Tape to CRT 0839: 0000000000008666 
DBG(46747964)> MT EXP: Tape to CRT 0840: 0000009898989840 
DBG(46747964)> MT EXP: Tape to CRT 0841: 0000000000007555 
DBG(46747964)> MT EXP: Tape to CRT 0842: 0000000000007666 
DBG(46747964)> MT EXP: End Of Block Word: 0390030103130003, data words in block: 13
DBG(46747964)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.04% of medium (7.50 inches)
DBG(46747967)> CPU CMD: Exec 0047: 08 68 0047 0000 1687   if tape check Call 1687 Re-read   
DBG(46747968)> CPU DETAIL: Condition not present 
DBG(46747970)> CPU CMD: Exec 0048: 00 67 0000 0000 0607   if EOF transfer to 0607   
DBG(46747971)> CPU DETAIL: Condition not present 
DBG(46747973)> CPU CMD: Exec 0049: 00 60 0000 1558 0000   REG1->(1558  tape read start of block word)   
DBG(46747974)> CPU DETAIL: Write 1558: 0390030103130003 
DBG(46747976)> CPU CMD: Exec 0050: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)           
DBG(46747977)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46747978)> CPU DETAIL: Result: 0000000003130000 
DBG(46747979)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000313 
DBG(46747980)> CPU DETAIL: Write 1555: 0000000000000313 
DBG(46747982)> CPU CMD: Exec 0051: 08 42 1558 1586 0000   Mask and shift start of block: aaaa -> (REG1)   
DBG(46747983)> CPU DETAIL: Read R 1558: 0390030103130003 
DBG(46747984)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46747985)> CPU DETAIL: Result: 0000030100000000 
DBG(46747986)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(46747989)> CPU CMD: Exec 0052: 00 41 1555 0000 1559   (1555) - REG2 -> (1559 words in event block)   
DBG(46747990)> CPU DETAIL: Read R 1555: 0000000000000313 
DBG(46747991)> CPU DETAIL: Result: 0000000000000012 
DBG(46747992)> CPU DETAIL: Write 1559: 0000000000000012 
DBG(46747994)> CPU CMD: Exec 0053: 00 40 1587 0000 1559          + 1 -> (1559 words in event block)    
DBG(46747995)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46747996)> CPU DETAIL: Result: 0000000000000013 
DBG(46747997)> CPU DETAIL: Write 1559: 0000000000000013 
DBG(46747999)> CPU CMD: Exec 0054: 00 52 0000 0000 0000   Clear M6 then add R S T to M4 M6 M8                  read first event from b 
DBG(46748000)> CPU DETAIL: M4: 0007 
DBG(46748001)> CPU DETAIL: Clear M6
DBG(46748001)> CPU DETAIL: M6: 0000 
DBG(46748002)> CPU DETAIL: M8: 0040 
DBG(46748005)> CPU CMD: Exec 0055: 00 40 0046 1587 0046   (0046) + 1 -> (0046)                                 incr block num to read  
DBG(46748006)> CPU DETAIL: Read R 0046: 0394083000000003 
DBG(46748007)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46748008)> CPU DETAIL: Result: 0394083000000004 
DBG(46748009)> CPU DETAIL: Write 0046: 0394083000000004 
DBG(46748011)> CPU CMD: Exec 0056: 00 60 0000 0000 0102   nop    
DBG(46748012)> CPU DETAIL: Transfer to T 
DBG(46748014)> CPU CMD: Exec 0102: 00 60 1588 1563 0000   clear (1563 num of predecessors)        
DBG(46748015)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46748016)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46748018)> CPU CMD: Exec 0103: 00 60 1588 1564 0000   clear (1564 num of successors)   
DBG(46748019)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46748020)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46748022)> CPU CMD: Exec 0104: 00 60 6836 1562 0000   (0836 + M6) -> (1562)                     event rec w7   
DBG(46748023)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46748023)> CPU DETAIL: Read R 0836: 0000000000000101 
DBG(46748024)> CPU DETAIL: Write 1562: 0000000000000101 
DBG(46748026)> CPU CMD: Exec 0105: 02 42 1562 1582 1563   Mask (1562) with 0..0 1111 Shift 2 Right -> (1563 num of predecesors)   
DBG(46748027)> CPU DETAIL: Read R 1562: 0000000000000101 
DBG(46748028)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46748029)> CPU DETAIL: Result: 0000000000000101 
DBG(46748030)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46748031)> CPU DETAIL: Write 1563: 0000000000000001 
DBG(46748033)> CPU CMD: Exec 0106: 00 42 1562 1596 1564   Mask (1562) with 0..0 0011 -> (1564 num of successors)   
DBG(46748034)> CPU DETAIL: Read R 1562: 0000000000000101 
DBG(46748035)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46748036)> CPU DETAIL: Result: 0000000000000001 
DBG(46748037)> CPU DETAIL: Write 1564: 0000000000000001 
DBG(46748039)> CPU CMD: Exec 0107: 00 40 1563 1597 0000   (1563 num of predecesors) + (1597 EXP12) -> REG1 convert integer to float   
DBG(46748040)> CPU DETAIL: Read R 1563: 0000000000000001 
DBG(46748041)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46748042)> CPU DETAIL: Result: 1200000000000001 
DBG(46748045)> CPU CMD: Exec 0108: 50 24 1598 0000 0000   Float (1598 Float 3.0) x REG1 -> REG1      x 3.0       
DBG(46748046)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46748047)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46748047)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46748048)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46748049)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46748052)> CPU CMD: Exec 0109: 00 34 1599 0000 1563   Spe Float (1599 = Float 10^-12) x REG1 -> (1563 words used by predecessors)  
DBG(46748053)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46748054)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46748054)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46748055)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46748056)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46748057)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46748059)> CPU CMD: Exec 0110: 00 40 1564 1597 0000   (1564 num of successors) + (1597 EXP12) -> REG1                          
DBG(46748060)> CPU DETAIL: Read R 1564: 0000000000000001 
DBG(46748061)> CPU DETAIL: Read S 1597: 1200000000000000 
DBG(46748062)> CPU DETAIL: Result: 1200000000000001 
DBG(46748065)> CPU CMD: Exec 0111: 50 24 1598 0000 0000   Float (1598 = Float 3.0) x REG1 -> REG1             Now (1963) = (1563) x 3  
DBG(46748066)> CPU DETAIL: Read R 1598: 0003000000000000 
DBG(46748067)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46748067)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(46748068)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46748069)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(46748072)> CPU CMD: Exec 0112: 00 34 1599 0000 1564   Spe Float (1599 0 Float 10^-12) x REG1 -> (1564 words used by successors)   
DBG(46748073)> CPU DETAIL: Read R 1599: 8801000000000000 
DBG(46748074)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(46748074)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(46748075)> CPU DETAIL: Result: 88 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46748076)> CPU DETAIL: Shift : 00 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46748077)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46748079)> CPU CMD: Exec 0113: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)  initial size in words of event rec    
DBG(46748080)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46748081)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46748083)> CPU CMD: Exec 0114: 00 72 1563 1588 0116   if (1563 words used by predecessors)<>0 goto 0116                       
DBG(46748084)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46748085)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46748086)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46748087)> CPU DETAIL: Transfer to T 
DBG(46748089)> CPU CMD: Exec 0116: 00 72 1564 1588 0118   if (1564 words used by successors)<>0 goto 0118    
DBG(46748090)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46748091)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46748092)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46748093)> CPU DETAIL: Transfer to T 
DBG(46748095)> CPU CMD: Exec 0118: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46748096)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46748097)> CPU DETAIL: Read S 1564: 0000000000000003 
DBG(46748098)> CPU DETAIL: Result: 0000000000000006 
DBG(46748101)> CPU CMD: Exec 0119: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1 = (7+pred*3+succ*3)    
DBG(46748102)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46748103)> CPU DETAIL: Result: 0000000000000013 
DBG(46748104)> CPU DETAIL: Write 1565: 0000000000000013 
DBG(46748106)> CPU CMD: Exec 0120: 00 59 0000 0000 0000   REG1 = 0000 M4 M6 M8    
DBG(46748107)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0007 0000 0040
DBG(46748109)> CPU CMD: Exec 0121: 00 42 0000 1585 1575   Mask REG1 with 0..0 1111 0000 -> (1575 saved M6 value)       
DBG(46748110)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46748111)> CPU DETAIL: Result: 0000000000000000 
DBG(46748112)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(46748114)> CPU CMD: Exec 0122: 00 60 6830 1041 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748115)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(46748115)> CPU DETAIL: Read R 0830: 0130000000000000 
DBG(46748116)> CPU DETAIL: Write 1041: 0130000000000000 
DBG(46748118)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748119)> CPU DETAIL: Read R 0122: 0060683010410000 
DBG(46748120)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748121)> CPU DETAIL: Result: 0060683010420000 
DBG(46748122)> CPU DETAIL: Write 0122: 0060683010420000 
DBG(46748124)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748125)> CPU DETAIL: M6: 0001 
DBG(46748126)> CPU DETAIL: Transfer to T 
DBG(46748128)> CPU CMD: Exec 0122: 00 60 6830 1042 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748129)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(46748129)> CPU DETAIL: Read R 0831: 0000009898989830 
DBG(46748130)> CPU DETAIL: Write 1042: 0000009898989830 
DBG(46748132)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748133)> CPU DETAIL: Read R 0122: 0060683010420000 
DBG(46748134)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748135)> CPU DETAIL: Result: 0060683010430000 
DBG(46748136)> CPU DETAIL: Write 0122: 0060683010430000 
DBG(46748138)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748139)> CPU DETAIL: M6: 0002 
DBG(46748140)> CPU DETAIL: Transfer to T 
DBG(46748142)> CPU CMD: Exec 0122: 00 60 6830 1043 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748143)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(46748143)> CPU DETAIL: Read R 0832: 0000000000000000 
DBG(46748144)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46748146)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748147)> CPU DETAIL: Read R 0122: 0060683010430000 
DBG(46748148)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748149)> CPU DETAIL: Result: 0060683010440000 
DBG(46748150)> CPU DETAIL: Write 0122: 0060683010440000 
DBG(46748152)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748153)> CPU DETAIL: M6: 0003 
DBG(46748154)> CPU DETAIL: Transfer to T 
DBG(46748156)> CPU CMD: Exec 0122: 00 60 6830 1044 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748157)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(46748157)> CPU DETAIL: Read R 0833: 0000000000000000 
DBG(46748158)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46748160)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748161)> CPU DETAIL: Read R 0122: 0060683010440000 
DBG(46748162)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748163)> CPU DETAIL: Result: 0060683010450000 
DBG(46748164)> CPU DETAIL: Write 0122: 0060683010450000 
DBG(46748166)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748167)> CPU DETAIL: M6: 0004 
DBG(46748168)> CPU DETAIL: Transfer to T 
DBG(46748170)> CPU CMD: Exec 0122: 00 60 6830 1045 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748171)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(46748171)> CPU DETAIL: Read R 0834: 0000000000000000 
DBG(46748172)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46748174)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748175)> CPU DETAIL: Read R 0122: 0060683010450000 
DBG(46748176)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748177)> CPU DETAIL: Result: 0060683010460000 
DBG(46748178)> CPU DETAIL: Write 0122: 0060683010460000 
DBG(46748180)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748181)> CPU DETAIL: M6: 0005 
DBG(46748182)> CPU DETAIL: Transfer to T 
DBG(46748184)> CPU CMD: Exec 0122: 00 60 6830 1046 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748185)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(46748185)> CPU DETAIL: Read R 0835: 0000000000000000 
DBG(46748186)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46748188)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748189)> CPU DETAIL: Read R 0122: 0060683010460000 
DBG(46748190)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748191)> CPU DETAIL: Result: 0060683010470000 
DBG(46748192)> CPU DETAIL: Write 0122: 0060683010470000 
DBG(46748194)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748195)> CPU DETAIL: M6: 0006 
DBG(46748196)> CPU DETAIL: Transfer to T 
DBG(46748198)> CPU CMD: Exec 0122: 00 60 6830 1047 0000   (M6 + 0830 Event_Block) -> (1041 event rec w1)     
DBG(46748199)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(46748199)> CPU DETAIL: Read R 0836: 0000000000000101 
DBG(46748200)> CPU DETAIL: Write 1047: 0000000000000101 
DBG(46748202)> CPU CMD: Exec 0123: 00 40 0122 1590 0122   incr 1041 addr in prev instr   
DBG(46748203)> CPU DETAIL: Read R 0122: 0060683010470000 
DBG(46748204)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748205)> CPU DETAIL: Result: 0060683010480000 
DBG(46748206)> CPU DETAIL: Write 0122: 0060683010480000 
DBG(46748208)> CPU CMD: Exec 0124: 06 58 0001 0007 0122   inc M6, if M6 <> 0007 goto 0122 (loop NEXT)   copy event rec 0830+M6 -> 1041 
DBG(46748209)> CPU DETAIL: M6: 0007 
DBG(46748212)> CPU CMD: Exec 0125: 00 60 1600 0122 0000   (1600) -> (0122)                              restore instr 0122 to its init 
DBG(46748213)> CPU DETAIL: Read R 1600: 0060683010410000 
DBG(46748214)> CPU DETAIL: Write 0122: 0060683010410000 
DBG(46748216)> CPU CMD: Exec 0126: 00 42 0124 1585 0132   Mask (0124) with 0..0 1111 0000 -> (0132)     =0..0 0007 0000 = mask to get  
DBG(46748217)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46748218)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46748219)> CPU DETAIL: Result: 0000000000070000 
DBG(46748220)> CPU DETAIL: Write 0132: 0000000000070000 
DBG(46748222)> CPU CMD: Exec 0127: 96 60 1563 0000 0000   (1563 words used by predecessors) shift left 4 -> REG1                     
DBG(46748223)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46748224)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46748227)> CPU CMD: Exec 0128: 00 40 0132 0000 0000   (0132) + REG1 -> REG1                         new end of loop value = previo 
DBG(46748228)> CPU DETAIL: Read R 0132: 0000000000070000 
DBG(46748229)> CPU DETAIL: Result: 0000000000100000 
DBG(46748232)> CPU CMD: Exec 0129: 00 40 1602 0000 0132   (1602) + REG1 -> (0132)                       set (0132) as 00 58 0001 (0132 
DBG(46748233)> CPU DETAIL: Read R 1602: 0658000100000130 
DBG(46748234)> CPU DETAIL: Result: 0658000100100130 
DBG(46748235)> CPU DETAIL: Write 0132: 0658000100100130 
DBG(46748237)> CPU CMD: Exec 0130: 00 60 6830 1048 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46748238)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(46748238)> CPU DETAIL: Read R 0837: 0000009898989820 
DBG(46748239)> CPU DETAIL: Write 1048: 0000009898989820 
DBG(46748241)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46748242)> CPU DETAIL: Read R 0130: 0060683010480000 
DBG(46748243)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748244)> CPU DETAIL: Result: 0060683010490000 
DBG(46748245)> CPU DETAIL: Write 0130: 0060683010490000 
DBG(46748247)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46748248)> CPU DETAIL: M6: 0008 
DBG(46748249)> CPU DETAIL: Transfer to T 
DBG(46748251)> CPU CMD: Exec 0130: 00 60 6830 1049 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46748252)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(46748252)> CPU DETAIL: Read R 0838: 0000000000008555 
DBG(46748253)> CPU DETAIL: Write 1049: 0000000000008555 
DBG(46748255)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46748256)> CPU DETAIL: Read R 0130: 0060683010490000 
DBG(46748257)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748258)> CPU DETAIL: Result: 0060683010500000 
DBG(46748259)> CPU DETAIL: Write 0130: 0060683010500000 
DBG(46748261)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46748262)> CPU DETAIL: M6: 0009 
DBG(46748263)> CPU DETAIL: Transfer to T 
DBG(46748265)> CPU CMD: Exec 0130: 00 60 6830 1050 0000   (M6 + 0830 Event_Block) -> (1048 predecessors list) copy event predecessors  
DBG(46748266)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(46748266)> CPU DETAIL: Read R 0839: 0000000000008666 
DBG(46748267)> CPU DETAIL: Write 1050: 0000000000008666 
DBG(46748269)> CPU CMD: Exec 0131: 00 40 0130 1590 0130   (0130) + (1590 INCR_S) -> (0130)   
DBG(46748270)> CPU DETAIL: Read R 0130: 0060683010500000 
DBG(46748271)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748272)> CPU DETAIL: Result: 0060683010510000 
DBG(46748273)> CPU DETAIL: Write 0130: 0060683010510000 
DBG(46748275)> CPU CMD: Exec 0132: 06 58 0001 0010 0130   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)      
DBG(46748276)> CPU DETAIL: M6: 0010 
DBG(46748279)> CPU CMD: Exec 0133: 00 60 1603 0130 0000   (1603) -> (0130)                              restore line 0130   
DBG(46748280)> CPU DETAIL: Read R 1603: 0060683010480000 
DBG(46748281)> CPU DETAIL: Write 0130: 0060683010480000 
DBG(46748283)> CPU CMD: Exec 0134: 00 42 0132 1585 0140   Mask (0132) with 0..0 1111 0000 -> (0140)     get previous loop end value   
DBG(46748284)> CPU DETAIL: Read R 0132: 0658000100100130 
DBG(46748285)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46748286)> CPU DETAIL: Result: 0000000000100000 
DBG(46748287)> CPU DETAIL: Write 0140: 0000000000100000 
DBG(46748289)> CPU CMD: Exec 0135: 96 60 1564 0000 0000   (1564 words used by successors) -> REG1      
DBG(46748290)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46748291)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46748294)> CPU CMD: Exec 0136: 00 40 0140 0000 0000   (0140) + REG1 -> REG1                         new end of loop value = previo 
DBG(46748295)> CPU DETAIL: Read R 0140: 0000000000100000 
DBG(46748296)> CPU DETAIL: Result: 0000000000130000 
DBG(46748299)> CPU CMD: Exec 0137: 00 40 1604 0000 0140   (1604) + REG1 -> (0140)                       set end of loop value   
DBG(46748300)> CPU DETAIL: Read R 1604: 0658000100000138 
DBG(46748301)> CPU DETAIL: Result: 0658000100130138 
DBG(46748302)> CPU DETAIL: Write 0140: 0658000100130138 
DBG(46748304)> CPU CMD: Exec 0138: 00 60 6830 1148 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46748305)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(46748305)> CPU DETAIL: Read R 0840: 0000009898989840 
DBG(46748306)> CPU DETAIL: Write 1148: 0000009898989840 
DBG(46748308)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46748309)> CPU DETAIL: Read R 0138: 0060683011480000 
DBG(46748310)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748311)> CPU DETAIL: Result: 0060683011490000 
DBG(46748312)> CPU DETAIL: Write 0138: 0060683011490000 
DBG(46748314)> CPU CMD: Exec 0140: 06 58 0001 0013 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46748315)> CPU DETAIL: M6: 0011 
DBG(46748316)> CPU DETAIL: Transfer to T 
DBG(46748318)> CPU CMD: Exec 0138: 00 60 6830 1149 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46748319)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(46748319)> CPU DETAIL: Read R 0841: 0000000000007555 
DBG(46748320)> CPU DETAIL: Write 1149: 0000000000007555 
DBG(46748322)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46748323)> CPU DETAIL: Read R 0138: 0060683011490000 
DBG(46748324)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748325)> CPU DETAIL: Result: 0060683011500000 
DBG(46748326)> CPU DETAIL: Write 0138: 0060683011500000 
DBG(46748328)> CPU CMD: Exec 0140: 06 58 0001 0013 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46748329)> CPU DETAIL: M6: 0012 
DBG(46748330)> CPU DETAIL: Transfer to T 
DBG(46748332)> CPU CMD: Exec 0138: 00 60 6830 1150 0000   (M6 + 0830 Event_Block) -> (1148 successor list) M6=index on event block   
DBG(46748333)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(46748333)> CPU DETAIL: Read R 0842: 0000000000007666 
DBG(46748334)> CPU DETAIL: Write 1150: 0000000000007666 
DBG(46748336)> CPU CMD: Exec 0139: 00 40 0138 1590 0138   incr 1148 addr in prev instr   
DBG(46748337)> CPU DETAIL: Read R 0138: 0060683011500000 
DBG(46748338)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748339)> CPU DETAIL: Result: 0060683011510000 
DBG(46748340)> CPU DETAIL: Write 0138: 0060683011510000 
DBG(46748342)> CPU CMD: Exec 0140: 06 58 0001 0013 0138   inc M6, if M6 <> NNNN goto 0138 (loop NEXT)   copy transac rec 0830+M6 -> 11 
DBG(46748343)> CPU DETAIL: M6: 0013 
DBG(46748346)> CPU CMD: Exec 0141: 00 60 1605 0138 0000   (1605) -> (0138)                              reset instr 0138 to its initia 
DBG(46748347)> CPU DETAIL: Read R 1605: 0060683011480000 
DBG(46748348)> CPU DETAIL: Write 0138: 0060683011480000 
DBG(46748350)> CPU CMD: Exec 0142: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46748351)> CPU DETAIL: Read R 1565: 0000000000000013 
DBG(46748352)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(46748355)> CPU CMD: Exec 0143: 00 40 0124 0000 0124   (0124) + REG1   
DBG(46748356)> CPU DETAIL: Read R 0124: 0658000100070122 
DBG(46748357)> CPU DETAIL: Result: 0658000100200122 
DBG(46748358)> CPU DETAIL: Write 0124: 0658000100200122 
DBG(46748360)> CPU CMD: Exec 0144: 00 40 1561 1565 1561   (1561 words read from event block) += (1565 num of words in event rec)   
DBG(46748361)> CPU DETAIL: Read R 1561: 0000000000000000 
DBG(46748362)> CPU DETAIL: Read S 1565: 0000000000000013 
DBG(46748363)> CPU DETAIL: Result: 0000000000000013 
DBG(46748364)> CPU DETAIL: Write 1561: 0000000000000013 
DBG(46748366)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46748367)> CPU DETAIL: Read R 1033: 5011009898989830 
DBG(46748368)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000005 
DBG(46748369)> CPU DETAIL: Write 1569: 0000000000000005 
DBG(46748371)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46748372)> CPU DETAIL: Read R 1033: 5011009898989830 
DBG(46748373)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748374)> CPU DETAIL: Result: 0000009898989830 
DBG(46748375)> CPU DETAIL: Write 1568: 0000009898989830 
DBG(46748377)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46748378)> CPU DETAIL: Read R 1042: 0000009898989830 
DBG(46748379)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748380)> CPU DETAIL: Result: 0000009898989830 
DBG(46748381)> CPU DETAIL: Write 1567: 0000009898989830 
DBG(46748383)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46748384)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46748385)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46748386)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748387)> CPU DETAIL: Transfer to T 
DBG(46748389)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46748390)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46748391)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46748392)> CPU DETAIL: Result: 0000000000000000 
DBG(46748395)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46748396)> CPU DETAIL: REG1: 0000000000000000
DBG(46748396)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46748398)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46748399)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748400)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46748401)> CPU DETAIL: Diff: REG1: 0000000000000004
DBG(46748404)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46748405)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748406)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46748407)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46748410)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46748411)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748412)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46748413)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46748416)> CPU CMD: Exec 0238: 00 70 1569 1624 0329   if (1569 card code)=4 goto 0329         card code 4 -> change static data   
DBG(46748417)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748418)> CPU DETAIL: Read S 1624: 0000000000000004 
DBG(46748419)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46748422)> CPU CMD: Exec 0239: 00 70 1569 1625 0291   if (1569 card code)=5 goto 0291         card code 5 -> delete activity   
DBG(46748423)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748424)> CPU DETAIL: Read S 1625: 0000000000000005 
DBG(46748425)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748426)> CPU DETAIL: Transfer to T 
DBG(46748428)> CPU CMD: Exec 0291: 00 60 0000 0000 0000   nop   
DBG(46748431)> CPU CMD: Exec 0292: 00 42 1036 1606 1568   mask (1036 transac rec w4) to get event code -> (1568 transac rec predecesso 
DBG(46748432)> CPU DETAIL: Read R 1036: 5500009898989840 
DBG(46748433)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748434)> CPU DETAIL: Result: 0000009898989840 
DBG(46748435)> CPU DETAIL: Write 1568: 0000009898989840 
DBG(46748437)> CPU CMD: Exec 0293: 00 42 1148 1606 0000   mask (1148 successor list) to get event code   
DBG(46748438)> CPU DETAIL: Read R 1148: 0000009898989840 
DBG(46748439)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748440)> CPU DETAIL: Result: 0000009898989840 
DBG(46748443)> CPU CMD: Exec 0294: 00 70 1568 0000 0300   if (1568 transac PPP code)=(event successors w1) goto 0300   
DBG(46748444)> CPU DETAIL: Read R 1568: 0000009898989840 
DBG(46748445)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748446)> CPU DETAIL: Transfer to T 
DBG(46748448)> CPU CMD: Exec 0300: 04 42 0293 1586 0000   Mask (0293) with 0000 1111 0000 0000, shift right 4    
DBG(46748449)> CPU DETAIL: Read R 0293: 0042114816060000 
DBG(46748450)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46748451)> CPU DETAIL: Result: 0000114800000000 
DBG(46748452)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000011480000 
DBG(46748455)> CPU CMD: Exec 0301: 00 40 1634 0000 0302   set 0302 as ...   
DBG(46748456)> CPU DETAIL: Read R 1634: 0060159300000000 
DBG(46748457)> CPU DETAIL: Result: 0060159311480000 
DBG(46748458)> CPU DETAIL: Write 0302: 0060159311480000 
DBG(46748460)> CPU CMD: Exec 0302: 00 60 1593 1148 0000   copy (55 0..0) to (pos in list) to mark as deleted   
DBG(46748461)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748462)> CPU DETAIL: Write 1148: 5500000000000000 
DBG(46748464)> CPU CMD: Exec 0303: 00 40 0302 1590 0304   incr_s   
DBG(46748465)> CPU DETAIL: Read R 0302: 0060159311480000 
DBG(46748466)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748467)> CPU DETAIL: Result: 0060159311490000 
DBG(46748468)> CPU DETAIL: Write 0304: 0060159311490000 
DBG(46748470)> CPU CMD: Exec 0304: 00 60 1593 1149 0000   copy (55 0..0) to (pos in list+1) to mark as deleted   
DBG(46748471)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748472)> CPU DETAIL: Write 1149: 5500000000000000 
DBG(46748474)> CPU CMD: Exec 0305: 00 40 0304 1590 0306   incr_s   
DBG(46748475)> CPU DETAIL: Read R 0304: 0060159311490000 
DBG(46748476)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748477)> CPU DETAIL: Result: 0060159311500000 
DBG(46748478)> CPU DETAIL: Write 0306: 0060159311500000 
DBG(46748480)> CPU CMD: Exec 0306: 00 60 1593 1150 0000   copy (55 0..0) to (pos in list+2) to mark as deleted   
DBG(46748481)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748482)> CPU DETAIL: Write 1150: 5500000000000000 
DBG(46748484)> CPU CMD: Exec 0307: 00 41 1047 1587 1047   (1047 event rec w7) xx xx xxxx xxxx AABB, decr BB (AA=num of predecesors  BB 
DBG(46748485)> CPU DETAIL: Read R 1047: 0000000000000101 
DBG(46748486)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46748487)> CPU DETAIL: Result: 0000000000000100 
DBG(46748488)> CPU DETAIL: Write 1047: 0000000000000100 
DBG(46748490)> CPU CMD: Exec 0308: 00 60 1630 0293 0000   restore instr 0293   
DBG(46748491)> CPU DETAIL: Read R 1630: 0042114816060000 
DBG(46748492)> CPU DETAIL: Write 0293: 0042114816060000 
DBG(46748494)> CPU CMD: Exec 0309: 00 60 1588 1571 0290   clear (1571 current word selected in successor list), goto 0290   
DBG(46748495)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46748496)> CPU DETAIL: Transfer to T 
DBG(46748496)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46748498)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46748499)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46748500)> CPU DETAIL: Transfer to T 
DBG(46748500)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46748502)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46748503)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46748504)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46748505)> CPU DETAIL: Result: 0000000000000007 
DBG(46748508)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46748509)> CPU DETAIL: REG1: 0000000000000007
DBG(46748509)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46748511)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748512)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(46748512)> CPU DETAIL: Read R 0636: 5011009898989820 
DBG(46748513)> CPU DETAIL: Write 1033: 5011009898989820 
DBG(46748515)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748516)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46748517)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748518)> CPU DETAIL: Result: 0060462910340000 
DBG(46748519)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46748521)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748522)> CPU DETAIL: M4: 0008 
DBG(46748523)> CPU DETAIL: Transfer to T 
DBG(46748525)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748526)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(46748526)> CPU DETAIL: Read R 0637: 2222222222222222 
DBG(46748527)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46748529)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748530)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46748531)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748532)> CPU DETAIL: Result: 0060462910350000 
DBG(46748533)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46748535)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748536)> CPU DETAIL: M4: 0009 
DBG(46748537)> CPU DETAIL: Transfer to T 
DBG(46748539)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748540)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(46748540)> CPU DETAIL: Read R 0638: 3333333333333333 
DBG(46748541)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46748543)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748544)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46748545)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748546)> CPU DETAIL: Result: 0060462910360000 
DBG(46748547)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46748549)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748550)> CPU DETAIL: M4: 0010 
DBG(46748551)> CPU DETAIL: Transfer to T 
DBG(46748553)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748554)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(46748554)> CPU DETAIL: Read R 0639: 6600009898989830 
DBG(46748555)> CPU DETAIL: Write 1036: 6600009898989830 
DBG(46748557)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748558)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46748559)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748560)> CPU DETAIL: Result: 0060462910370000 
DBG(46748561)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46748563)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748564)> CPU DETAIL: M4: 0011 
DBG(46748565)> CPU DETAIL: Transfer to T 
DBG(46748567)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748568)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(46748568)> CPU DETAIL: Read R 0640: 5555555555555555 
DBG(46748569)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46748571)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748572)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46748573)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748574)> CPU DETAIL: Result: 0060462910380000 
DBG(46748575)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46748577)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748578)> CPU DETAIL: M4: 0012 
DBG(46748579)> CPU DETAIL: Transfer to T 
DBG(46748581)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748582)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(46748582)> CPU DETAIL: Read R 0641: 6666666666666666 
DBG(46748583)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46748585)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748586)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46748587)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748588)> CPU DETAIL: Result: 0060462910390000 
DBG(46748589)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46748591)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748592)> CPU DETAIL: M4: 0013 
DBG(46748593)> CPU DETAIL: Transfer to T 
DBG(46748595)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748596)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(46748596)> CPU DETAIL: Read R 0642: 7777777777777777 
DBG(46748597)> CPU DETAIL: Write 1039: 7777777777777777 
DBG(46748599)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748600)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46748601)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748602)> CPU DETAIL: Result: 0060462910400000 
DBG(46748603)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46748605)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748606)> CPU DETAIL: M4: 0014 
DBG(46748609)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46748610)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46748611)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46748614)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46748615)> CPU DETAIL: Read R 0065: 0458000100140063 
DBG(46748616)> CPU DETAIL: Result: 0458000100210063 
DBG(46748617)> CPU DETAIL: Write 0065: 0458000100210063 
DBG(46748619)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46748620)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46748621)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46748623)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46748624)> CPU DETAIL: Read R 1557: 0000000000000007 
DBG(46748625)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46748626)> CPU DETAIL: Result: 0000000000000014 
DBG(46748627)> CPU DETAIL: Write 1557: 0000000000000014 
DBG(46748629)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46748630)> CPU DETAIL: Read R 1036: 6600009898989830 
DBG(46748631)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46748632)> CPU DETAIL: Result: 6600000000000000 
DBG(46748633)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46748635)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46748636)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748637)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46748640)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46748641)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46748642)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46748643)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748644)> CPU DETAIL: Transfer to T 
DBG(46748646)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46748647)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46748648)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46748650)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46748651)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46748652)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46748654)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46748655)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46748656)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46748658)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46748659)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46748660)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46748662)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46748663)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46748664)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46748666)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46748667)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46748668)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46748670)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46748671)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46748672)> CPU DETAIL: Transfer to T 
DBG(46748672)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46748674)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46748675)> CPU DETAIL: Condition not present 
DBG(46748677)> CPU CMD: Exec 0552: 00 60 0000 0000 0095   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46748678)> CPU DETAIL: Transfer to T 
DBG(46748680)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46748681)> CPU DETAIL: Transfer to T 
DBG(46748683)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46748684)> CPU DETAIL: Read R 1033: 5011009898989820 
DBG(46748685)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000005 
DBG(46748686)> CPU DETAIL: Write 1569: 0000000000000005 
DBG(46748688)> CPU CMD: Exec 0146: 00 42 1036 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46748689)> CPU DETAIL: Read R 1036: 6600009898989830 
DBG(46748690)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748691)> CPU DETAIL: Result: 0000009898989830 
DBG(46748692)> CPU DETAIL: Write 1568: 0000009898989830 
DBG(46748694)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46748695)> CPU DETAIL: Read R 1042: 0000009898989830 
DBG(46748696)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748697)> CPU DETAIL: Result: 0000009898989830 
DBG(46748698)> CPU DETAIL: Write 1567: 0000009898989830 
DBG(46748700)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46748701)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46748702)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46748703)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748704)> CPU DETAIL: Transfer to T 
DBG(46748706)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46748707)> CPU DETAIL: Read R 1568: 0000009898989830 
DBG(46748708)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46748709)> CPU DETAIL: Result: 0000000000000000 
DBG(46748712)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46748713)> CPU DETAIL: REG1: 0000000000000000
DBG(46748713)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46748715)> CPU CMD: Exec 0235: 00 70 1569 1587 0422   if (1569 card code)=1 goto 0422         card code 1 -> new activity    
DBG(46748716)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748717)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46748718)> CPU DETAIL: Diff: REG1: 0000000000000004
DBG(46748721)> CPU CMD: Exec 0236: 00 70 1569 1622 0254   if (1569 card code)=2 goto 0254         card code 2 -> re-estimate   
DBG(46748722)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748723)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46748724)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46748727)> CPU CMD: Exec 0237: 00 70 1569 1623 0342   if (1569 card code)=3 goto 0342         card code 3 -> completed   
DBG(46748728)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748729)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46748730)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(46748733)> CPU CMD: Exec 0238: 00 70 1569 1624 0329   if (1569 card code)=4 goto 0329         card code 4 -> change static data   
DBG(46748734)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748735)> CPU DETAIL: Read S 1624: 0000000000000004 
DBG(46748736)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(46748739)> CPU CMD: Exec 0239: 00 70 1569 1625 0291   if (1569 card code)=5 goto 0291         card code 5 -> delete activity   
DBG(46748740)> CPU DETAIL: Read R 1569: 0000000000000005 
DBG(46748741)> CPU DETAIL: Read S 1625: 0000000000000005 
DBG(46748742)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748743)> CPU DETAIL: Transfer to T 
DBG(46748745)> CPU CMD: Exec 0291: 00 60 0000 0000 0310   nop   
DBG(46748746)> CPU DETAIL: Transfer to T 
DBG(46748748)> CPU CMD: Exec 0310: 00 42 1033 1606 1568   mask (transac rec w1) to get event code -> (1568 transac rec predecessor cod 
DBG(46748749)> CPU DETAIL: Read R 1033: 5011009898989820 
DBG(46748750)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748751)> CPU DETAIL: Result: 0000009898989820 
DBG(46748752)> CPU DETAIL: Write 1568: 0000009898989820 
DBG(46748754)> CPU CMD: Exec 0311: 00 42 1048 1606 0000   Mask (1048 predecessors list w1) to get event code   
DBG(46748755)> CPU DETAIL: Read R 1048: 0000009898989820 
DBG(46748756)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46748757)> CPU DETAIL: Result: 0000009898989820 
DBG(46748760)> CPU CMD: Exec 0312: 00 70 1568 0000 0318   if (1568 transac PPP code)=(event predecessor w1) goto 0318   
DBG(46748761)> CPU DETAIL: Read R 1568: 0000009898989820 
DBG(46748762)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46748763)> CPU DETAIL: Transfer to T 
DBG(46748765)> CPU CMD: Exec 0318: 98 60 1587 0000 0000   100 -> REG1   
DBG(46748766)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46748767)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000100 
DBG(46748770)> CPU CMD: Exec 0319: 00 41 1047 0000 1047   (1047 event rec w7) xx xx xxxx xxxx AABB, decr AA (AA=num of predecesors  BB 
DBG(46748771)> CPU DETAIL: Read R 1047: 0000000000000100 
DBG(46748772)> CPU DETAIL: Result: 0000000000000000 
DBG(46748773)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46748775)> CPU CMD: Exec 0320: 04 42 0311 1586 0000   Mask (0311) with 0000 1111 0000 0000, shift right 4    
DBG(46748776)> CPU DETAIL: Read R 0311: 0042104816060000 
DBG(46748777)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46748778)> CPU DETAIL: Result: 0000104800000000 
DBG(46748779)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000010480000 
DBG(46748782)> CPU CMD: Exec 0321: 00 40 1634 0000 0322   set 0322 as ...   
DBG(46748783)> CPU DETAIL: Read R 1634: 0060159300000000 
DBG(46748784)> CPU DETAIL: Result: 0060159310480000 
DBG(46748785)> CPU DETAIL: Write 0322: 0060159310480000 
DBG(46748787)> CPU CMD: Exec 0322: 00 60 1593 1048 0000   copy (55 0..0) to (pos in list) to mark as deleted   
DBG(46748788)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748789)> CPU DETAIL: Write 1048: 5500000000000000 
DBG(46748791)> CPU CMD: Exec 0323: 00 40 0322 1590 0324   incr_s   
DBG(46748792)> CPU DETAIL: Read R 0322: 0060159310480000 
DBG(46748793)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748794)> CPU DETAIL: Result: 0060159310490000 
DBG(46748795)> CPU DETAIL: Write 0324: 0060159310490000 
DBG(46748797)> CPU CMD: Exec 0324: 00 60 1593 1049 0000   copy (55 0..0) to (pos in list+1) to mark as deleted   
DBG(46748798)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748799)> CPU DETAIL: Write 1049: 5500000000000000 
DBG(46748801)> CPU CMD: Exec 0325: 00 40 0324 1590 0326   incr_s   
DBG(46748802)> CPU DETAIL: Read R 0324: 0060159310490000 
DBG(46748803)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748804)> CPU DETAIL: Result: 0060159310500000 
DBG(46748805)> CPU DETAIL: Write 0326: 0060159310500000 
DBG(46748807)> CPU CMD: Exec 0326: 00 60 1593 1050 0000   copy (55 0..0) to (pos in list+2) to mark as deleted   
DBG(46748808)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46748809)> CPU DETAIL: Write 1050: 5500000000000000 
DBG(46748811)> CPU CMD: Exec 0327: 00 60 1632 0311 0000   restore instr 0311   
DBG(46748812)> CPU DETAIL: Read R 1632: 0042104816060000 
DBG(46748813)> CPU DETAIL: Write 0311: 0042104816060000 
DBG(46748815)> CPU CMD: Exec 0328: 00 60 1588 1571 0290   clear (1571 current word selected in predecessor list), goto 0290   
DBG(46748816)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46748817)> CPU DETAIL: Transfer to T 
DBG(46748817)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(46748819)> CPU CMD: Exec 0290: 00 60 1638 0095 0057   goto 0057   
DBG(46748820)> CPU DETAIL: Read R 1638: 0060000000000145 
DBG(46748821)> CPU DETAIL: Transfer to T 
DBG(46748821)> CPU DETAIL: Write 0095: 0060000000000145 
DBG(46748823)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46748824)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46748825)> CPU DETAIL: Read S 1557: 0000000000000014 
DBG(46748826)> CPU DETAIL: Result: 0000000000000000 
DBG(46748829)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46748830)> CPU DETAIL: REG1: 0000000000000000
DBG(46748830)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46748832)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46748833)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46748834)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46748836)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46748837)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46748838)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46748840)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46748841)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46748842)> CPU DETAIL: Transfer to T 
DBG(46748842)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46748844)> CPU CMD: Exec 0034: 02 94 0629 0000 0005   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46748845)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0005
DBG(46748845)> MT DATA: Tape unit 2: init read
DBG(46748845)> MT DETAIL: Read tape record (290 chars, used 2.07 inches, needs 12 msec) from tape 2
DBG(46748845)> MT DETAIL: Tape record contents: D*0290020102140005C*1000009998989950C*0000000000000000C*00000000000000...
DBG(46748845)> MT EXP: Start Of Block Word: 0290020102140005
DBG(46748845)> MT EXP: Read Tape Block number 0005
DBG(46748845)> MT EXP: Read forward addr 0629 to 0000
DBG(46748845)> MT EXP: Tape to CRT 0629: 1000009998989950 
DBG(46748845)> MT EXP: Tape to CRT 0630: 0000000000000000 
DBG(46748845)> MT EXP: Tape to CRT 0631: 0000000000000000 
DBG(46748845)> MT EXP: Tape to CRT 0632: 5500009898989920 
DBG(46748845)> MT EXP: Tape to CRT 0633: 5555555555555555 
DBG(46748845)> MT EXP: Tape to CRT 0634: 6666666666666666 
DBG(46748845)> MT EXP: Tape to CRT 0635: 0000000000000000 
DBG(46748845)> MT EXP: Tape to CRT 0636: 1996609898989910 
DBG(46748845)> MT EXP: Tape to CRT 0637: 2222222222222222 
DBG(46748845)> MT EXP: Tape to CRT 0638: 3333333333333333 
DBG(46748845)> MT EXP: Tape to CRT 0639: 6600009998989960 
DBG(46748845)> MT EXP: Tape to CRT 0640: 0000000000000000 
DBG(46748845)> MT EXP: Tape to CRT 0641: 0000000000000000 
DBG(46748845)> MT EXP: Tape to CRT 0642: 7777770000008888 
DBG(46748845)> MT EXP: End Of Block Word: 0290020102140005, data words in block: 14
DBG(46748845)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.08% of medium (12.94 inches)
DBG(46748848)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46748849)> CPU DETAIL: Condition not present 
DBG(46748851)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46748852)> CPU DETAIL: Condition not present 
DBG(46748854)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46748855)> CPU DETAIL: Write 1554: 0290020102140005 
DBG(46748857)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46748858)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46748859)> CPU DETAIL: Result: 0000000002140000 
DBG(46748860)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000214 
DBG(46748861)> CPU DETAIL: Write 1555: 0000000000000214 
DBG(46748863)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46748864)> CPU DETAIL: Read R 1554: 0290020102140005 
DBG(46748865)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46748866)> CPU DETAIL: Result: 0000020100000000 
DBG(46748867)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46748870)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46748871)> CPU DETAIL: Read R 1555: 0000000000000214 
DBG(46748872)> CPU DETAIL: Result: 0000000000000013 
DBG(46748873)> CPU DETAIL: Write 1556: 0000000000000013 
DBG(46748875)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46748876)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46748877)> CPU DETAIL: Result: 0000000000000014 
DBG(46748878)> CPU DETAIL: Write 1556: 0000000000000014 
DBG(46748880)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46748881)> CPU DETAIL: Read R 0034: 0294062900000005 
DBG(46748882)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46748883)> CPU DETAIL: Result: 0294062900000006 
DBG(46748884)> CPU DETAIL: Write 0034: 0294062900000006 
DBG(46748886)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46748887)> CPU DETAIL: Clear M4
DBG(46748887)> CPU DETAIL: M4: 0000 
DBG(46748888)> CPU DETAIL: M6: 0013 
DBG(46748889)> CPU DETAIL: M8: 0040 
DBG(46748892)> CPU CMD: Exec 0044: 00 60 0000 0000 0063   nop   
DBG(46748893)> CPU DETAIL: Transfer to T 
DBG(46748895)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748896)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46748896)> CPU DETAIL: Read R 0629: 1000009998989950 
DBG(46748897)> CPU DETAIL: Write 1033: 1000009998989950 
DBG(46748899)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748900)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46748901)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748902)> CPU DETAIL: Result: 0060462910340000 
DBG(46748903)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46748905)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748906)> CPU DETAIL: M4: 0001 
DBG(46748907)> CPU DETAIL: Transfer to T 
DBG(46748909)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748910)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46748910)> CPU DETAIL: Read R 0630: 0000000000000000 
DBG(46748911)> CPU DETAIL: Write 1034: 0000000000000000 
DBG(46748913)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748914)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46748915)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748916)> CPU DETAIL: Result: 0060462910350000 
DBG(46748917)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46748919)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748920)> CPU DETAIL: M4: 0002 
DBG(46748921)> CPU DETAIL: Transfer to T 
DBG(46748923)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748924)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46748924)> CPU DETAIL: Read R 0631: 0000000000000000 
DBG(46748925)> CPU DETAIL: Write 1035: 0000000000000000 
DBG(46748927)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748928)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46748929)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748930)> CPU DETAIL: Result: 0060462910360000 
DBG(46748931)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46748933)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748934)> CPU DETAIL: M4: 0003 
DBG(46748935)> CPU DETAIL: Transfer to T 
DBG(46748937)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748938)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46748938)> CPU DETAIL: Read R 0632: 5500009898989920 
DBG(46748939)> CPU DETAIL: Write 1036: 5500009898989920 
DBG(46748941)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748942)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46748943)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748944)> CPU DETAIL: Result: 0060462910370000 
DBG(46748945)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46748947)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748948)> CPU DETAIL: M4: 0004 
DBG(46748949)> CPU DETAIL: Transfer to T 
DBG(46748951)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748952)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46748952)> CPU DETAIL: Read R 0633: 5555555555555555 
DBG(46748953)> CPU DETAIL: Write 1037: 5555555555555555 
DBG(46748955)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748956)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46748957)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748958)> CPU DETAIL: Result: 0060462910380000 
DBG(46748959)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46748961)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748962)> CPU DETAIL: M4: 0005 
DBG(46748963)> CPU DETAIL: Transfer to T 
DBG(46748965)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748966)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46748966)> CPU DETAIL: Read R 0634: 6666666666666666 
DBG(46748967)> CPU DETAIL: Write 1038: 6666666666666666 
DBG(46748969)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748970)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46748971)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748972)> CPU DETAIL: Result: 0060462910390000 
DBG(46748973)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46748975)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748976)> CPU DETAIL: M4: 0006 
DBG(46748977)> CPU DETAIL: Transfer to T 
DBG(46748979)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46748980)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46748980)> CPU DETAIL: Read R 0635: 0000000000000000 
DBG(46748981)> CPU DETAIL: Write 1039: 0000000000000000 
DBG(46748983)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46748984)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46748985)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46748986)> CPU DETAIL: Result: 0060462910400000 
DBG(46748987)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46748989)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46748990)> CPU DETAIL: M4: 0007 
DBG(46748993)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46748994)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46748995)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46748998)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46748999)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46749000)> CPU DETAIL: Result: 0458000100140063 
DBG(46749001)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46749003)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46749004)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46749005)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46749007)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46749008)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46749009)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46749010)> CPU DETAIL: Result: 0000000000000007 
DBG(46749011)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46749013)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46749014)> CPU DETAIL: Read R 1036: 5500009898989920 
DBG(46749015)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749016)> CPU DETAIL: Result: 5500000000000000 
DBG(46749017)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46749019)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46749020)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46749021)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749022)> CPU DETAIL: Transfer to T 
DBG(46749024)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46749025)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46749026)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46749028)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46749029)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749030)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46749032)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46749033)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749034)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46749036)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46749037)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46749038)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46749040)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46749041)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46749042)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46749044)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46749045)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46749046)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46749048)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46749049)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46749050)> CPU DETAIL: Transfer to T 
DBG(46749050)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46749052)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46749053)> CPU DETAIL: Condition not present 
DBG(46749055)> CPU CMD: Exec 0522: 00 60 0000 0000 0095   goto 0095   
DBG(46749056)> CPU DETAIL: Transfer to T 
DBG(46749058)> CPU CMD: Exec 0095: 00 60 0000 0000 0145   nop   
DBG(46749059)> CPU DETAIL: Transfer to T 
DBG(46749061)> CPU CMD: Exec 0145: 15 60 1033 1569 0000   (1033 w1 transac rec) Shift Right 15 -> (1569 leftmost digit of transac rec  
DBG(46749062)> CPU DETAIL: Read R 1033: 1000009998989950 
DBG(46749063)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46749064)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46749066)> CPU CMD: Exec 0146: 00 42 1033 1606 1568   mask (transac w1) to get event code -> (1568 transac rec predecessor code PP 
DBG(46749067)> CPU DETAIL: Read R 1033: 1000009998989950 
DBG(46749068)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46749069)> CPU DETAIL: Result: 0000009998989950 
DBG(46749070)> CPU DETAIL: Write 1568: 0000009998989950 
DBG(46749072)> CPU CMD: Exec 0147: 00 42 1042 1606 1567   mask (1042 event rec w2) to get event code -> (1567 event rec event code EEE 
DBG(46749073)> CPU DETAIL: Read R 1042: 0000009898989830 
DBG(46749074)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46749075)> CPU DETAIL: Result: 0000009898989830 
DBG(46749076)> CPU DETAIL: Write 1567: 0000009898989830 
DBG(46749078)> CPU CMD: Exec 0148: 00 70 1568 1567 0150   if (1568 transac rec code)=(1567 event code) goto 0150                if tra 
DBG(46749079)> CPU DETAIL: Read R 1568: 0000009998989950 
DBG(46749080)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46749081)> CPU DETAIL: Diff: REG1: 0000000100000120
DBG(46749084)> CPU CMD: Exec 0149: 00 60 1637 0224 0000   (1637 do not save event to tape, then get next event)->(0224)   
DBG(46749085)> CPU DETAIL: Read R 1637: 0060000000000096 
DBG(46749086)> CPU DETAIL: Write 0224: 0060000000000096 
DBG(46749088)> CPU CMD: Exec 0150: 00 41 1568 1567 0000   (1568 transac cod) - (1567 event cod) -> REG1                  diff between  
DBG(46749089)> CPU DETAIL: Read R 1568: 0000009998989950 
DBG(46749090)> CPU DETAIL: Read S 1567: 0000009898989830 
DBG(46749091)> CPU DETAIL: Result: 0000000100000120 
DBG(46749094)> CPU CMD: Exec 0151: 00 63 0163 0235 0411   TR >0 goto 0163, =0 goto 0235, <0 goto 0411   
DBG(46749095)> CPU DETAIL: REG1: 0000000100000120
DBG(46749095)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46749097)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46749098)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46749099)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46749101)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46749102)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46749103)> CPU DETAIL: Read S 1564: 0000000000000003 
DBG(46749104)> CPU DETAIL: Result: 0000000000000006 
DBG(46749107)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46749108)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46749109)> CPU DETAIL: Result: 0000000000000013 
DBG(46749110)> CPU DETAIL: Write 1565: 0000000000000013 
DBG(46749112)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46749113)> CPU DETAIL: Read R 1570: 0000000000000040 
DBG(46749114)> CPU DETAIL: Read S 1565: 0000000000000013 
DBG(46749115)> CPU DETAIL: Result: 0000000000000053 
DBG(46749118)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46749119)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46749120)> CPU DETAIL: Result: 0000000000000147 
DBG(46749123)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46749124)> CPU DETAIL: REG1: 0000000000000147
DBG(46749124)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46749126)> CPU CMD: Exec 0172: 00 60 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46749129)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46749130)> CPU DETAIL: Read R 1041: 0130000000000000 
DBG(46749131)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000000000000 
DBG(46749134)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46749135)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000000000 
DBG(46749136)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46749138)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46749139)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46749140)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46749141)> CPU DETAIL: Result: 0000000000000000 
DBG(46749142)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(46749145)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46749146)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749147)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46749147)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46749148)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46749149)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46749152)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46749153)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46749156)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46749157)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46749158)> CPU DETAIL: Result: 0000000000000000 
DBG(46749159)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46749161)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46749162)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46749163)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46749164)> CPU DETAIL: Result: 0000000000000000 
DBG(46749167)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46749168)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749169)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46749169)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46749170)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46749171)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46749174)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46749175)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46749178)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46749179)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46749180)> CPU DETAIL: Result: 0000000000000000 
DBG(46749181)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46749183)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46749184)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46749185)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46749188)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46749189)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46749190)> CPU DETAIL: Result: 0070000000000000 
DBG(46749191)> CPU DETAIL: Write 1041: 0070000000000000 
DBG(46749193)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46749194)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000007 
DBG(46749195)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46749197)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749198)> CPU DETAIL: Read R 1041: 0070000000000000 
DBG(46749199)> CPU DETAIL: M8 Address Modifier: 0040 
DBG(46749199)> CPU DETAIL: Write 1388: 0070000000000000 
DBG(46749201)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749202)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46749203)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749204)> CPU DETAIL: Result: 0060104293480000 
DBG(46749205)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46749207)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749210)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749211)> CPU DETAIL: M8: 0041 
DBG(46749212)> CPU DETAIL: Transfer to T 
DBG(46749214)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749215)> CPU DETAIL: Read R 1042: 0000009898989830 
DBG(46749216)> CPU DETAIL: M8 Address Modifier: 0041 
DBG(46749216)> CPU DETAIL: Write 1389: 0000009898989830 
DBG(46749218)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749219)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46749220)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749221)> CPU DETAIL: Result: 0060104393480000 
DBG(46749222)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46749224)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749227)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749228)> CPU DETAIL: M8: 0042 
DBG(46749229)> CPU DETAIL: Transfer to T 
DBG(46749231)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749232)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46749233)> CPU DETAIL: M8 Address Modifier: 0042 
DBG(46749233)> CPU DETAIL: Write 1390: 0000000000000000 
DBG(46749235)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749236)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46749237)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749238)> CPU DETAIL: Result: 0060104493480000 
DBG(46749239)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46749241)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749244)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749245)> CPU DETAIL: M8: 0043 
DBG(46749246)> CPU DETAIL: Transfer to T 
DBG(46749248)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749249)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46749250)> CPU DETAIL: M8 Address Modifier: 0043 
DBG(46749250)> CPU DETAIL: Write 1391: 0000000000000000 
DBG(46749252)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749253)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46749254)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749255)> CPU DETAIL: Result: 0060104593480000 
DBG(46749256)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46749258)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749261)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749262)> CPU DETAIL: M8: 0044 
DBG(46749263)> CPU DETAIL: Transfer to T 
DBG(46749265)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749266)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46749267)> CPU DETAIL: M8 Address Modifier: 0044 
DBG(46749267)> CPU DETAIL: Write 1392: 0000000000000000 
DBG(46749269)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749270)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46749271)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749272)> CPU DETAIL: Result: 0060104693480000 
DBG(46749273)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46749275)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749278)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749279)> CPU DETAIL: M8: 0045 
DBG(46749280)> CPU DETAIL: Transfer to T 
DBG(46749282)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749283)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46749284)> CPU DETAIL: M8 Address Modifier: 0045 
DBG(46749284)> CPU DETAIL: Write 1393: 0000000000000000 
DBG(46749286)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749287)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46749288)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749289)> CPU DETAIL: Result: 0060104793480000 
DBG(46749290)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46749292)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749295)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749296)> CPU DETAIL: M8: 0046 
DBG(46749297)> CPU DETAIL: Transfer to T 
DBG(46749299)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46749300)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46749301)> CPU DETAIL: M8 Address Modifier: 0046 
DBG(46749301)> CPU DETAIL: Write 1394: 0000000000000000 
DBG(46749303)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46749304)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46749305)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749306)> CPU DETAIL: Result: 0060104893480000 
DBG(46749307)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46749309)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46749312)> CPU CMD: Exec 0189: 08 58 0001 0047 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46749313)> CPU DETAIL: M8: 0047 
DBG(46749316)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46749317)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46749318)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46749320)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46749321)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749322)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46749324)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46749325)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46749326)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46749327)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46749328)> CPU DETAIL: Transfer to T 
DBG(46749330)> CPU CMD: Exec 0194: 00 42 0189 1585 0202      
DBG(46749331)> CPU DETAIL: Read R 0189: 0858000100470186 
DBG(46749332)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46749333)> CPU DETAIL: Result: 0000000000470000 
DBG(46749334)> CPU DETAIL: Write 0202: 0000000000470000 
DBG(46749336)> CPU CMD: Exec 0195: 96 60 1563 0000 0000   (1563 words used by predecessors) Shift left 4 -> REG1   
DBG(46749337)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46749338)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46749341)> CPU CMD: Exec 0196: 00 40 1616 0000 0000   (1616) + REG1 -> REG1   
DBG(46749342)> CPU DETAIL: Read R 1616: 0858000100000198 
DBG(46749343)> CPU DETAIL: Result: 0858000100030198 
DBG(46749346)> CPU CMD: Exec 0197: 00 40 0202 0000 0202   (0202) + REG1 -> (0202)   
DBG(46749347)> CPU DETAIL: Read R 0202: 0000000000470000 
DBG(46749348)> CPU DETAIL: Result: 0858000100500198 
DBG(46749349)> CPU DETAIL: Write 0202: 0858000100500198 
DBG(46749351)> CPU CMD: Exec 0198: 00 60 1048 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46749352)> CPU DETAIL: Read R 1048: 5500000000000000 
DBG(46749353)> CPU DETAIL: M8 Address Modifier: 0047 
DBG(46749353)> CPU DETAIL: Write 1395: 5500000000000000 
DBG(46749355)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46749356)> CPU DETAIL: Read R 0198: 0060104893480000 
DBG(46749357)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749358)> CPU DETAIL: Result: 0060104993480000 
DBG(46749359)> CPU DETAIL: Write 0198: 0060104993480000 
DBG(46749361)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46749362)> CPU DETAIL: M8 Address Modifier: 0047 
DBG(46749362)> CPU DETAIL: Read R 1395: 5500000000000000 
DBG(46749363)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749364)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749365)> CPU DETAIL: Transfer to T 
DBG(46749367)> CPU CMD: Exec 0588: 00 40 0198 1674 0198   incr_r in (0198)   
DBG(46749368)> CPU DETAIL: Read R 0198: 0060104993480000 
DBG(46749369)> CPU DETAIL: Read S 1674: 0000000200000000 
DBG(46749370)> CPU DETAIL: Result: 0060105193480000 
DBG(46749371)> CPU DETAIL: Write 0198: 0060105193480000 
DBG(46749373)> CPU CMD: Exec 0589: 00 41 0202 1675 0202   incr_s in (0202)    
DBG(46749374)> CPU DETAIL: Read R 0202: 0858000100500198 
DBG(46749375)> CPU DETAIL: Read S 1675: 0000000000030000 
DBG(46749376)> CPU DETAIL: Result: 0858000100470198 
DBG(46749377)> CPU DETAIL: Write 0202: 0858000100470198 
DBG(46749379)> CPU CMD: Exec 0590: 00 41 1563 1623 1563   (1563 words used by predecessors) -= 3   
DBG(46749380)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46749381)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46749382)> CPU DETAIL: Result: 0000000000000000 
DBG(46749383)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46749385)> CPU CMD: Exec 0591: 00 41 0000 1577 0000   REG1 - (1577) check if list is finished   
DBG(46749386)> CPU DETAIL: Read S 1577: 0000000000000000 
DBG(46749387)> CPU DETAIL: Result: 0000000000000000 
DBG(46749390)> CPU CMD: Exec 0592: 00 63 0198 0203 0000   TR >0 goto 0198, =0 goto 0203, <0 cont   
DBG(46749391)> CPU DETAIL: REG1: 0000000000000000
DBG(46749391)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46749393)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46749394)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46749395)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46749397)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46749398)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749399)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46749401)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46749402)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46749403)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46749404)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46749405)> CPU DETAIL: Transfer to T 
DBG(46749407)> CPU CMD: Exec 0207: 00 59 0000 0000 0000      
DBG(46749408)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0007 0013 0047
DBG(46749410)> CPU CMD: Exec 0208: 96 42 0000 1582 0216      
DBG(46749411)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46749412)> CPU DETAIL: Result: 0000000000000047 
DBG(46749413)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000470000 
DBG(46749414)> CPU DETAIL: Write 0216: 0000000000470000 
DBG(46749416)> CPU CMD: Exec 0209: 96 60 1564 0000 0000   (1564 words used by successors) Shift left 4 -> REG1   
DBG(46749417)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46749418)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46749421)> CPU CMD: Exec 0210: 00 40 1618 0000 0000   (1618) + REG1   
DBG(46749422)> CPU DETAIL: Read R 1618: 0858000100000212 
DBG(46749423)> CPU DETAIL: Result: 0858000100030212 
DBG(46749426)> CPU CMD: Exec 0211: 00 40 0216 0000 0216   (0216) + REG1 -> (0216)   
DBG(46749427)> CPU DETAIL: Read R 0216: 0000000000470000 
DBG(46749428)> CPU DETAIL: Result: 0858000100500212 
DBG(46749429)> CPU DETAIL: Write 0216: 0858000100500212 
DBG(46749431)> CPU CMD: Exec 0212: 00 60 1148 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46749432)> CPU DETAIL: Read R 1148: 5500000000000000 
DBG(46749433)> CPU DETAIL: M8 Address Modifier: 0047 
DBG(46749433)> CPU DETAIL: Write 1395: 5500000000000000 
DBG(46749435)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46749436)> CPU DETAIL: Read R 0212: 0060114893480000 
DBG(46749437)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46749438)> CPU DETAIL: Result: 0060114993480000 
DBG(46749439)> CPU DETAIL: Write 0212: 0060114993480000 
DBG(46749441)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46749442)> CPU DETAIL: M8 Address Modifier: 0047 
DBG(46749442)> CPU DETAIL: Read R 1395: 5500000000000000 
DBG(46749443)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749444)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749445)> CPU DETAIL: Transfer to T 
DBG(46749447)> CPU CMD: Exec 0594: 00 40 0212 1674 0212   incr_R + 2 in (0212) to skip the rest of the 3w entry         
DBG(46749448)> CPU DETAIL: Read R 0212: 0060114993480000 
DBG(46749449)> CPU DETAIL: Read S 1674: 0000000200000000 
DBG(46749450)> CPU DETAIL: Result: 0060115193480000 
DBG(46749451)> CPU DETAIL: Write 0212: 0060115193480000 
DBG(46749453)> CPU CMD: Exec 0595: 00 41 0216 1675 0216   decr end of list addr in loop instr (0216)    
DBG(46749454)> CPU DETAIL: Read R 0216: 0858000100500212 
DBG(46749455)> CPU DETAIL: Read S 1675: 0000000000030000 
DBG(46749456)> CPU DETAIL: Result: 0858000100470212 
DBG(46749457)> CPU DETAIL: Write 0216: 0858000100470212 
DBG(46749459)> CPU CMD: Exec 0596: 00 41 1564 1623 1564   (1564 words used by successors) -=3   
DBG(46749460)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46749461)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46749462)> CPU DETAIL: Result: 0000000000000000 
DBG(46749463)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46749465)> CPU CMD: Exec 0597: 00 41 0000 1577 0000   REG1 - (1577) check if list is finished   
DBG(46749466)> CPU DETAIL: Read S 1577: 0000000000000000 
DBG(46749467)> CPU DETAIL: Result: 0000000000000000 
DBG(46749470)> CPU CMD: Exec 0598: 00 63 0212 0217 0593   TR >0 goto 212, =0 goto 217, <0 goto 0593  reload transaction vars then proc 
DBG(46749471)> CPU DETAIL: REG1: 0000000000000000
DBG(46749471)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46749473)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46749474)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46749475)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46749477)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46749478)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749479)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46749481)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46749482)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46749483)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46749486)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46749487)> CPU DETAIL: Read R 0189: 0858000100470186 
DBG(46749488)> CPU DETAIL: Result: 0858000100540186 
DBG(46749489)> CPU DETAIL: Write 0189: 0858000100540186 
DBG(46749491)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46749492)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749493)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46749495)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46749496)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749497)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46749499)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46749500)> CPU DETAIL: Read R 1570: 0000000000000040 
DBG(46749501)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46749502)> CPU DETAIL: Result: 0000000000000047 
DBG(46749503)> CPU DETAIL: Write 1570: 0000000000000047 
DBG(46749505)> CPU CMD: Exec 0224: 00 60 0000 0000 0096   exit if no write to tape   
DBG(46749506)> CPU DETAIL: Transfer to T 
DBG(46749508)> CPU CMD: Exec 0096: 00 41 1559 1561 0000   (1559 words in event block)-(1561 words read from event block) -> REG1 = wor 
DBG(46749509)> CPU DETAIL: Read R 1559: 0000000000000013 
DBG(46749510)> CPU DETAIL: Read S 1561: 0000000000000013 
DBG(46749511)> CPU DETAIL: Result: 0000000000000000 
DBG(46749514)> CPU CMD: Exec 0097: 00 63 0102 0099 0000   if >0 goto 0102, =0 goto 0099   
DBG(46749515)> CPU DETAIL: REG1: 0000000000000000
DBG(46749515)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46749517)> CPU CMD: Exec 0099: 00 60 1588 1561 0000   clear (1561 words read from event block) because event block fully processed 
DBG(46749518)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749519)> CPU DETAIL: Write 1561: 0000000000000000 
DBG(46749521)> CPU CMD: Exec 0100: 00 60 1595 0056 0000   (1595) -> (0056)   
DBG(46749522)> CPU DETAIL: Read R 1595: 0060000000000102 
DBG(46749523)> CPU DETAIL: Write 0056: 0060000000000102 
DBG(46749525)> CPU CMD: Exec 0101: 00 60 1601 0124 0046   (1601) -> (0124), transfer to 0046        goto read next event block from ta 
DBG(46749526)> CPU DETAIL: Read R 1601: 0658000100070122 
DBG(46749527)> CPU DETAIL: Transfer to T 
DBG(46749527)> CPU DETAIL: Write 0124: 0658000100070122 
DBG(46749529)> CPU CMD: Exec 0046: 03 94 0830 0000 0004   read tape 03 block 0001 at (0830 event block read from tape)   
DBG(46749530)> CPU DETAIL: Tape operation on MT3, Addr 0830->0000, Block Number 0004
DBG(46749530)> MT DATA: Tape unit 3: init read
DBG(46749530)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 3
DBG(46749530)> MT DETAIL: Tape record contents: D*0390000000000000CD
DBG(46749530)> MT EXP: End Of File mark sensed: 0390000000000000 
DBG(46749530)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.05% of medium (9.04 inches)
DBG(46749533)> CPU CMD: Exec 0047: 08 68 0047 0000 1687   if tape check Call 1687 Re-read   
DBG(46749534)> CPU DETAIL: Condition not present 
DBG(46749536)> CPU CMD: Exec 0048: 00 67 0000 0000 0607   if EOF transfer to 0607   
DBG(46749537)> CPU DETAIL: Reset condition present 
DBG(46749537)> CPU DETAIL: Transfer to T 
DBG(46749539)> CPU CMD: Exec 0607: 00 70 1572 1622 0616   if (1572 Last tape number with EOF)=2 transfer 0616                   
DBG(46749540)> CPU DETAIL: Read R 1572: 0000000000000000 
DBG(46749541)> CPU DETAIL: Read S 1622: 0000000000000002 
DBG(46749542)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(46749545)> CPU CMD: Exec 0608: 00 60 1623 1572 0000   3 -> (1572 Last tape number with EOF)   
DBG(46749546)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749547)> CPU DETAIL: Write 1572: 0000000000000003 
DBG(46749549)> CPU CMD: Exec 0609: 00 60 1614 0552 0000   set 0552 as nop   
DBG(46749550)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749551)> CPU DETAIL: Write 0552: 0060000000000000 
DBG(46749553)> CPU CMD: Exec 0610: 00 60 1672 0522 0000   set 0522 as goto 0526    
DBG(46749554)> CPU DETAIL: Read R 1672: 0060000000000526 
DBG(46749555)> CPU DETAIL: Write 0522: 0060000000000526 
DBG(46749557)> CPU CMD: Exec 0611: 00 60 1677 0234 0000   set 0234 as goto 0020: set goto process next transaction rec after whiting o 
DBG(46749558)> CPU DETAIL: Read R 1677: 0060000000000070 
DBG(46749559)> CPU DETAIL: Write 0234: 0060000000000070 
DBG(46749561)> CPU CMD: Exec 0612: 00 60 1033 1042 0000   (1033 transac rec w1) -> (1042 event rec w2)    
DBG(46749562)> CPU DETAIL: Read R 1033: 1000009998989950 
DBG(46749563)> CPU DETAIL: Write 1042: 1000009998989950 
DBG(46749565)> CPU CMD: Exec 0613: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46749566)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749567)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46749569)> CPU CMD: Exec 0614: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46749570)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749571)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46749573)> CPU CMD: Exec 0615: 00 60 1588 1047 0225   clear (1047 event rec w7), goto write output buf to tape 01 new active event 
DBG(46749574)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749575)> CPU DETAIL: Transfer to T 
DBG(46749575)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46749577)> CPU CMD: Exec 0225: 96 60 1570 0000 0000   (1570 words used in out event buffer) Shift Left 4 -> REG1   
DBG(46749578)> CPU DETAIL: Read R 1570: 0000000000000047 
DBG(46749579)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000470000 
DBG(46749582)> CPU CMD: Exec 0226: 00 41 0000 1590 1570   REG1 - (1590  INCR_S) -> (1570 last word to write as NNNN 0000)       
DBG(46749583)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749584)> CPU DETAIL: Result: 0000000000460000 
DBG(46749585)> CPU DETAIL: Write 1570: 0000000000460000 
DBG(46749587)> CPU CMD: Exec 0227: 00 40 1620 0000 0228   (1620) + REG1 -> (0228)            last word to write in tape in 0208 instr  
DBG(46749588)> CPU DETAIL: Read R 1620: 0191134813480001 
DBG(46749589)> CPU DETAIL: Result: 0191134813940001 
DBG(46749590)> CPU DETAIL: Write 0228: 0191134813940001 
DBG(46749592)> CPU CMD: Exec 0228: 01 91 1348 1394 0001   01 91 1348 NNNN 0001               write to tape 01 from addr 1348=output bu 
DBG(46749593)> CPU DETAIL: Tape operation on MT1, Addr 1348->1394, Block Number 0001
DBG(46749593)> MT CMD: Tape unit 1: init write
DBG(46749593)> MT EXP: Write from 1348 to 1394 as Block number 0001
DBG(46749593)> MT EXP: Start Of Block: 01 91 1348 1394 0001
DBG(46749593)> MT EXP: CRT 1348 to Tape: 0100000000000000 
DBG(46749593)> MT EXP: CRT 1349 to Tape: 0000008898989810 
DBG(46749593)> MT EXP: CRT 1350 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1351 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1352 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1353 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1354 to Tape: 0000000000000001 
DBG(46749593)> MT EXP: CRT 1355 to Tape: 0000009898989840 
DBG(46749593)> MT EXP: CRT 1356 to Tape: 5555558855555555 
DBG(46749593)> MT EXP: CRT 1357 to Tape: 6666668866666666 
DBG(46749593)> MT EXP: CRT 1358 to Tape: 0100000000777777 
DBG(46749593)> MT EXP: CRT 1359 to Tape: 0000008898989830 
DBG(46749593)> MT EXP: CRT 1360 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1361 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1362 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1363 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1364 to Tape: 8888000099660100 
DBG(46749593)> MT EXP: CRT 1365 to Tape: 0000009898989910 
DBG(46749593)> MT EXP: CRT 1366 to Tape: 2222222222222222 
DBG(46749593)> MT EXP: CRT 1367 to Tape: 3333333333333333 
DBG(46749593)> MT EXP: CRT 1368 to Tape: 0100000000000000 
DBG(46749593)> MT EXP: CRT 1369 to Tape: 0000009898989810 
DBG(46749593)> MT EXP: CRT 1370 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1371 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1372 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1373 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1374 to Tape: 0000000000000100 
DBG(46749593)> MT EXP: CRT 1375 to Tape: 0000003398989830 
DBG(46749593)> MT EXP: CRT 1376 to Tape: 0000000000033555 
DBG(46749593)> MT EXP: CRT 1377 to Tape: 0000000000033666 
DBG(46749593)> MT EXP: CRT 1378 to Tape: 0100000000777777 
DBG(46749593)> MT EXP: CRT 1379 to Tape: 0000009898989820 
DBG(46749593)> MT EXP: CRT 1380 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1381 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1382 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1383 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1384 to Tape: 7777777700000001 
DBG(46749593)> MT EXP: CRT 1385 to Tape: 0000009898989830 
DBG(46749593)> MT EXP: CRT 1386 to Tape: 5555505050505050 
DBG(46749593)> MT EXP: CRT 1387 to Tape: 6666606060606060 
DBG(46749593)> MT EXP: CRT 1388 to Tape: 0070000000000000 
DBG(46749593)> MT EXP: CRT 1389 to Tape: 0000009898989830 
DBG(46749593)> MT EXP: CRT 1390 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1391 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1392 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1393 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: CRT 1394 to Tape: 0000000000000000 
DBG(46749593)> MT EXP: End Of Block: 01 91 1348 1394 0001 (47 words)
DBG(46749593)> MT DETAIL: Write block (884 chars, used 3.23 inches, needs 20 msec) to tape 1
DBG(46749593)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.03% of medium (4.84 inches)
DBG(46749596)> CPU CMD: Exec 0229: 08 60 0229 0000 1704   Call 1704 check Write    
DBG(46749597)> CPU DETAIL: Read R 0229: 0860022900001704 
DBG(46749598)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600229 
DBG(46749599)> CPU DETAIL: Transfer to T 
DBG(46749601)> CPU CMD: Exec 1704: 00 40 1723 0000 1716   (1723 MK_TR60) + REG1 -> (1716 EXIT_1716)   Call: Save exit transfer   
DBG(46749602)> CPU DETAIL: Read R 1723: 0059999991400001 
DBG(46749603)> CPU DETAIL: Result: 0060000000000230 
DBG(46749604)> CPU DETAIL: Write 1716: 0060000000000230 
DBG(46749606)> CPU CMD: Exec 1705: 92 60 0000 0000 0000   REG1 shift left 8 (on listing was 1705 91 60 0000 0000 0000   REG1 shift lef 
DBG(46749607)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000023000000000 
DBG(46749610)> CPU CMD: Exec 1706: 01 40 1724 0000 1708   prepare instr to get tape instr to redo     (00 60 caller-1 1721 0000)   
DBG(46749611)> CPU DETAIL: Read R 1724: 0599998172100000 
DBG(46749612)> CPU DETAIL: Result: 0600021172100000 
DBG(46749613)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060002117210000 
DBG(46749614)> CPU DETAIL: Write 1708: 0060002117210000 
DBG(46749616)> CPU CMD: Exec 1707: 00 60 1717 1718 1715      
DBG(46749617)> CPU DETAIL: Read R 1717: 0061172100001727 
DBG(46749618)> CPU DETAIL: Transfer to T 
DBG(46749618)> CPU DETAIL: Write 1718: 0061172100001727 
DBG(46749620)> CPU CMD: Exec 1715: 00 68 0000 0000 1718   if write ok cont to exit from routine. If tape check transfer to 1718 to red 
DBG(46749621)> CPU DETAIL: Condition not present 
DBG(46749623)> CPU CMD: Exec 1716: 00 60 0000 0000 0230   EXIT_1716=Exit from routine =               00 60 0000 caller+1   
DBG(46749624)> CPU DETAIL: Transfer to T 
DBG(46749626)> CPU CMD: Exec 0230: 00 40 1620 1587 1620   (1620) + 1 -> (1620)               inc block number for next tape write   
DBG(46749627)> CPU DETAIL: Read R 1620: 0191134813480001 
DBG(46749628)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46749629)> CPU DETAIL: Result: 0191134813480002 
DBG(46749630)> CPU DETAIL: Write 1620: 0191134813480002 
DBG(46749632)> CPU CMD: Exec 0231: 00 60 1621 0189 0000   (1621) -> (0189)                   restore inst 0189 to its initival value   
DBG(46749633)> CPU DETAIL: Read R 1621: 0858000100070186 
DBG(46749634)> CPU DETAIL: Write 0189: 0858000100070186 
DBG(46749636)> CPU CMD: Exec 0232: 00 60 1615 0172 0000   (1615) -> (0172)                   restore clear M8 on 0172: M8=write output 
DBG(46749637)> CPU DETAIL: Read R 1615: 0054000000000000 
DBG(46749638)> CPU DETAIL: Write 0172: 0054000000000000 
DBG(46749640)> CPU CMD: Exec 0233: 00 60 1588 1570 0000   clear (1570 words used in out event buffer)   
DBG(46749641)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749642)> CPU DETAIL: Write 1570: 0000000000000000 
DBG(46749644)> CPU CMD: Exec 0234: 00 60 0000 0000 0070   transfer 0070                      this is the continue to next transaction  
DBG(46749645)> CPU DETAIL: Transfer to T 
DBG(46749647)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46749648)> CPU DETAIL: Read R 1036: 5500009898989920 
DBG(46749649)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749650)> CPU DETAIL: Result: 5500000000000000 
DBG(46749651)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46749653)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46749654)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46749655)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749656)> CPU DETAIL: Transfer to T 
DBG(46749658)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46749659)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46749660)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46749662)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46749663)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749664)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46749666)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46749667)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749668)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46749670)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46749671)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46749672)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46749674)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46749675)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46749676)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46749678)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46749679)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46749680)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46749682)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46749683)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46749684)> CPU DETAIL: Transfer to T 
DBG(46749684)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46749686)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46749687)> CPU DETAIL: Condition not present 
DBG(46749689)> CPU CMD: Exec 0522: 00 60 0000 0000 0526   goto 0095   
DBG(46749690)> CPU DETAIL: Transfer to T 
DBG(46749692)> CPU CMD: Exec 0526: 00 42 1033 1606 1568   Mask (1033 transact rec w1) to get predecessor code -> (1568 transac rec pre 
DBG(46749693)> CPU DETAIL: Read R 1033: 1000009998989950 
DBG(46749694)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46749695)> CPU DETAIL: Result: 0000009998989950 
DBG(46749696)> CPU DETAIL: Write 1568: 0000009998989950 
DBG(46749698)> CPU CMD: Exec 0527: 00 42 1042 1606 1567   Mask (1042 event rec w2) to get predecessor code -> (1567 event rec event co 
DBG(46749699)> CPU DETAIL: Read R 1042: 1000009998989950 
DBG(46749700)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46749701)> CPU DETAIL: Result: 0000009998989950 
DBG(46749702)> CPU DETAIL: Write 1567: 0000009998989950 
DBG(46749704)> CPU CMD: Exec 0528: 15 60 1033 1569 0000   get card code from transac w1 -> (1569 card code)   
DBG(46749705)> CPU DETAIL: Read R 1033: 1000009998989950 
DBG(46749706)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46749707)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46749709)> CPU CMD: Exec 0529: 00 72 1587 0000 0153   if (card code)<>1 goto 0153                            reject transaction if 
DBG(46749710)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46749711)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749714)> CPU CMD: Exec 0530: 00 72 1568 1567 0545   if (1567 event code) <> (1568 transac pred code) goto 0545       to flush ev 
DBG(46749715)> CPU DETAIL: Read R 1568: 0000009998989950 
DBG(46749716)> CPU DETAIL: Read S 1567: 0000009998989950 
DBG(46749717)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749720)> CPU CMD: Exec 0531: 00 60 1568 1042 0000   (1568 transac rec predecessor code) -> (1042 event rec w2)    
DBG(46749721)> CPU DETAIL: Read R 1568: 0000009998989950 
DBG(46749722)> CPU DETAIL: Write 1042: 0000009998989950 
DBG(46749724)> CPU CMD: Exec 0532: 00 42 1036 1593 0000   mask (1036 transac rec w4) with 550..0    
DBG(46749725)> CPU DETAIL: Read R 1036: 5500009898989920 
DBG(46749726)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749727)> CPU DETAIL: Result: 5500000000000000 
DBG(46749730)> CPU CMD: Exec 0533: 00 41 1036 0000 1036   remove 2 leftmost digits from (1036 transac w4)   
DBG(46749731)> CPU DETAIL: Read R 1036: 5500009898989920 
DBG(46749732)> CPU DETAIL: Result: 0000009898989920 
DBG(46749733)> CPU DETAIL: Write 1036: 0000009898989920 
DBG(46749735)> CPU CMD: Exec 0534: 00 60 1036 1148 0000   (1036 transac rec w4) -> (1148 successor list w1)   
DBG(46749736)> CPU DETAIL: Read R 1036: 0000009898989920 
DBG(46749737)> CPU DETAIL: Write 1148: 0000009898989920 
DBG(46749739)> CPU CMD: Exec 0535: 00 40 0534 1629 0536   incr_s incr_t   
DBG(46749740)> CPU DETAIL: Read R 0534: 0060103611480000 
DBG(46749741)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46749742)> CPU DETAIL: Result: 0060103711490000 
DBG(46749743)> CPU DETAIL: Write 0536: 0060103711490000 
DBG(46749745)> CPU CMD: Exec 0536: 00 60 1037 1149 0000   (transac rec w5) -> (1149 event successors)   
DBG(46749746)> CPU DETAIL: Read R 1037: 5555555555555555 
DBG(46749747)> CPU DETAIL: Write 1149: 5555555555555555 
DBG(46749749)> CPU CMD: Exec 0537: 00 40 0536 1629 0538   incr_s incr_t   
DBG(46749750)> CPU DETAIL: Read R 0536: 0060103711490000 
DBG(46749751)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46749752)> CPU DETAIL: Result: 0060103811500000 
DBG(46749753)> CPU DETAIL: Write 0538: 0060103811500000 
DBG(46749755)> CPU CMD: Exec 0538: 00 60 1038 1150 0000   (transac rec w6) -> (1150 event successors)    
DBG(46749756)> CPU DETAIL: Read R 1038: 6666666666666666 
DBG(46749757)> CPU DETAIL: Write 1150: 6666666666666666 
DBG(46749759)> CPU CMD: Exec 0539: 00 60 1588 1041 0000   clear (1041 event rec w1)   
DBG(46749760)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749761)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46749763)> CPU CMD: Exec 0540: 00 60 1588 1047 0000   clear (1047 event rec w7)   
DBG(46749764)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749765)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46749767)> CPU CMD: Exec 0541: 00 60 1588 1048 0000   clear (1048 predecesor list) make sure no predecessors, to save successor if 
DBG(46749768)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749769)> CPU DETAIL: Write 1048: 0000000000000000 
DBG(46749771)> CPU CMD: Exec 0542: 00 60 0000 0000 1800   setup number of words in created event   
DBG(46749772)> CPU DETAIL: Transfer to T 
DBG(46749774)> CPU CMD: Exec 1800: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1 = 007 0..0   
DBG(46749775)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46749776)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46749779)> CPU CMD: Exec 1801: 00 40 1041 0000 1041   set 007 as msg len in event w1    
DBG(46749780)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46749781)> CPU DETAIL: Result: 0070000000000000 
DBG(46749782)> CPU DETAIL: Write 1041: 0070000000000000 
DBG(46749784)> CPU CMD: Exec 1802: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46749785)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749786)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46749788)> CPU CMD: Exec 1803: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46749789)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46749790)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46749792)> CPU CMD: Exec 1804: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)    
DBG(46749793)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46749794)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46749796)> CPU CMD: Exec 1805: 00 70 1048 1588 1812   if no predecessor goto 1812   
DBG(46749797)> CPU DETAIL: Read R 1048: 0000000000000000 
DBG(46749798)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46749799)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749800)> CPU DETAIL: Transfer to T 
DBG(46749802)> CPU CMD: Exec 1812: 00 70 1148 1588 1819   if no successors goto 1819   
DBG(46749803)> CPU DETAIL: Read R 1148: 0000009898989920 
DBG(46749804)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46749805)> CPU DETAIL: Diff: REG1: 0000009898989920
DBG(46749808)> CPU CMD: Exec 1813: 00 60 1587 0000 0000   1 -> REG1   
DBG(46749809)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46749812)> CPU CMD: Exec 1814: 00 40 1047 0000 1047   set (1047 event rec w7) with BB=1 (one successor)   
DBG(46749813)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46749814)> CPU DETAIL: Result: 0000000000000001 
DBG(46749815)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46749817)> CPU CMD: Exec 1815: 00 40 1623 1565 1565   (1565 num of words in event rec) += 3   
DBG(46749818)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749819)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46749820)> CPU DETAIL: Result: 0000000000000010 
DBG(46749821)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46749823)> CPU CMD: Exec 1816: 87 60 1623 0000 0000   3 Shift Left 13 -> REG1 = 003 0..0   
DBG(46749824)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749825)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46749828)> CPU CMD: Exec 1817: 00 40 1041 0000 1041   add to msg len in event w1    
DBG(46749829)> CPU DETAIL: Read R 1041: 0070000000000000 
DBG(46749830)> CPU DETAIL: Result: 0100000000000000 
DBG(46749831)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46749833)> CPU CMD: Exec 1818: 00 60 1623 1564 0000   3 -> (1564 words used by predecessors)    
DBG(46749834)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46749835)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46749837)> CPU CMD: Exec 1819: 00 60 0000 0000 0057   go to process next transaction   
DBG(46749838)> CPU DETAIL: Transfer to T 
DBG(46749840)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46749841)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46749842)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46749843)> CPU DETAIL: Result: 0000000000000007 
DBG(46749846)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46749847)> CPU DETAIL: REG1: 0000000000000007
DBG(46749847)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46749849)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749850)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(46749850)> CPU DETAIL: Read R 0636: 1996609898989910 
DBG(46749851)> CPU DETAIL: Write 1033: 1996609898989910 
DBG(46749853)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749854)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46749855)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749856)> CPU DETAIL: Result: 0060462910340000 
DBG(46749857)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46749859)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749860)> CPU DETAIL: M4: 0008 
DBG(46749861)> CPU DETAIL: Transfer to T 
DBG(46749863)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749864)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(46749864)> CPU DETAIL: Read R 0637: 2222222222222222 
DBG(46749865)> CPU DETAIL: Write 1034: 2222222222222222 
DBG(46749867)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749868)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46749869)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749870)> CPU DETAIL: Result: 0060462910350000 
DBG(46749871)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46749873)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749874)> CPU DETAIL: M4: 0009 
DBG(46749875)> CPU DETAIL: Transfer to T 
DBG(46749877)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749878)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(46749878)> CPU DETAIL: Read R 0638: 3333333333333333 
DBG(46749879)> CPU DETAIL: Write 1035: 3333333333333333 
DBG(46749881)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749882)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46749883)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749884)> CPU DETAIL: Result: 0060462910360000 
DBG(46749885)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46749887)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749888)> CPU DETAIL: M4: 0010 
DBG(46749889)> CPU DETAIL: Transfer to T 
DBG(46749891)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749892)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(46749892)> CPU DETAIL: Read R 0639: 6600009998989960 
DBG(46749893)> CPU DETAIL: Write 1036: 6600009998989960 
DBG(46749895)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749896)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46749897)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749898)> CPU DETAIL: Result: 0060462910370000 
DBG(46749899)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46749901)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749902)> CPU DETAIL: M4: 0011 
DBG(46749903)> CPU DETAIL: Transfer to T 
DBG(46749905)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749906)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(46749906)> CPU DETAIL: Read R 0640: 0000000000000000 
DBG(46749907)> CPU DETAIL: Write 1037: 0000000000000000 
DBG(46749909)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749910)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46749911)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749912)> CPU DETAIL: Result: 0060462910380000 
DBG(46749913)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46749915)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749916)> CPU DETAIL: M4: 0012 
DBG(46749917)> CPU DETAIL: Transfer to T 
DBG(46749919)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749920)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(46749920)> CPU DETAIL: Read R 0641: 0000000000000000 
DBG(46749921)> CPU DETAIL: Write 1038: 0000000000000000 
DBG(46749923)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749924)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46749925)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749926)> CPU DETAIL: Result: 0060462910390000 
DBG(46749927)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46749929)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749930)> CPU DETAIL: M4: 0013 
DBG(46749931)> CPU DETAIL: Transfer to T 
DBG(46749933)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46749934)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(46749934)> CPU DETAIL: Read R 0642: 7777770000008888 
DBG(46749935)> CPU DETAIL: Write 1039: 7777770000008888 
DBG(46749937)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46749938)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46749939)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46749940)> CPU DETAIL: Result: 0060462910400000 
DBG(46749941)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46749943)> CPU CMD: Exec 0065: 04 58 0001 0014 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46749944)> CPU DETAIL: M4: 0014 
DBG(46749947)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46749948)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46749949)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46749952)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46749953)> CPU DETAIL: Read R 0065: 0458000100140063 
DBG(46749954)> CPU DETAIL: Result: 0458000100210063 
DBG(46749955)> CPU DETAIL: Write 0065: 0458000100210063 
DBG(46749957)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46749958)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46749959)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46749961)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46749962)> CPU DETAIL: Read R 1557: 0000000000000007 
DBG(46749963)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46749964)> CPU DETAIL: Result: 0000000000000014 
DBG(46749965)> CPU DETAIL: Write 1557: 0000000000000014 
DBG(46749967)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46749968)> CPU DETAIL: Read R 1036: 6600009998989960 
DBG(46749969)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46749970)> CPU DETAIL: Result: 6600000000000000 
DBG(46749971)> CPU DETAIL: Write 1560: 6600000000000000 
DBG(46749973)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46749974)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46749975)> CPU DETAIL: Diff: REG1: 8900000000000000
DBG(46749978)> CPU CMD: Exec 0072: 00 70 1560 1594 0081   if = 66 0..0 goto to 0081                            if w4=660..0 -> update  
DBG(46749979)> CPU DETAIL: Read R 1560: 6600000000000000 
DBG(46749980)> CPU DETAIL: Read S 1594: 6600000000000000 
DBG(46749981)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46749982)> CPU DETAIL: Transfer to T 
DBG(46749984)> CPU CMD: Exec 0081: 00 60 1608 0146 0000   (1608) -> (0146) for transac event code use 1036 w4   
DBG(46749985)> CPU DETAIL: Read R 1608: 0042103616061568 
DBG(46749986)> CPU DETAIL: Write 0146: 0042103616061568 
DBG(46749988)> CPU CMD: Exec 0082: 00 60 1633 0254 0000   (1633) -> (0254) on card code 2 processing: set to update predecessor activi 
DBG(46749989)> CPU DETAIL: Read R 1633: 0060000000000274 
DBG(46749990)> CPU DETAIL: Write 0254: 0060000000000274 
DBG(46749992)> CPU CMD: Exec 0083: 00 60 1635 0291 0000   (1635) -> (0291) on card code 5 processing: set to delete predecessor activi 
DBG(46749993)> CPU DETAIL: Read R 1635: 0060000000000310 
DBG(46749994)> CPU DETAIL: Write 0291: 0060000000000310 
DBG(46749996)> CPU CMD: Exec 0084: 00 60 1614 0329 0000   (1614) -> (0329) on card code 4 processing: set to process transaction   
DBG(46749997)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46749998)> CPU DETAIL: Write 0329: 0060000000000000 
DBG(46750000)> CPU CMD: Exec 0085: 00 60 1656 0422 0000   (1656) -> (0422) set to insert predecessor on card code=1   
DBG(46750001)> CPU DETAIL: Read R 1656: 0060000000000471 
DBG(46750002)> CPU DETAIL: Write 0422: 0060000000000471 
DBG(46750004)> CPU CMD: Exec 0086: 00 60 1614 0414 0000   (1614) -> (0414)   
DBG(46750005)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46750006)> CPU DETAIL: Write 0414: 0060000000000000 
DBG(46750008)> CPU CMD: Exec 0087: 00 60 1614 0342 0551   (1614) -> (0342), transfer to 0551 (there, if Sw74 off, transfer to 0095)   
DBG(46750009)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46750010)> CPU DETAIL: Transfer to T 
DBG(46750010)> CPU DETAIL: Write 0342: 0060000000000000 
DBG(46750012)> CPU CMD: Exec 0551: 00 74 0000 0000 0553   if Sw74 in "transfer" goto 0553   
DBG(46750013)> CPU DETAIL: Condition not present 
DBG(46750015)> CPU CMD: Exec 0552: 00 60 0000 0000 0000   goto 0095: no, do not create new event. Return back tu update exiting event  
DBG(46750018)> CPU CMD: Exec 0553: 00 42 1036 1606 1568   Mask (1036 transact rec w4) to get successor code -> (1568 transac rec succe 
DBG(46750019)> CPU DETAIL: Read R 1036: 6600009998989960 
DBG(46750020)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46750021)> CPU DETAIL: Result: 0000009998989960 
DBG(46750022)> CPU DETAIL: Write 1568: 0000009998989960 
DBG(46750024)> CPU CMD: Exec 0554: 00 42 1042 1606 1567   Mask (1042 event rec w2) to get predecessor code -> (1567 event rec event co 
DBG(46750025)> CPU DETAIL: Read R 1042: 0000009998989950 
DBG(46750026)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46750027)> CPU DETAIL: Result: 0000009998989950 
DBG(46750028)> CPU DETAIL: Write 1567: 0000009998989950 
DBG(46750030)> CPU CMD: Exec 0555: 15 60 1033 1569 0000   get card code from transac w1 -> (1569 card code)   
DBG(46750031)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46750032)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46750033)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46750035)> CPU CMD: Exec 0556: 00 72 1587 0000 0153   if (card code)<>1 goto 0153                            reject transaction if 
DBG(46750036)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46750037)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46750040)> CPU CMD: Exec 0557: 00 72 1568 1567 0585   if (1567 event code) <> (1568 transac succ code) goto 0585       to flush ev 
DBG(46750041)> CPU DETAIL: Read R 1568: 0000009998989960 
DBG(46750042)> CPU DETAIL: Read S 1567: 0000009998989950 
DBG(46750043)> CPU DETAIL: Diff: REG1: 0000000000000010
DBG(46750044)> CPU DETAIL: Transfer to T 
DBG(46750046)> CPU CMD: Exec 0585: 00 60 1649 0534 0000   set to save event and return to 0558   
DBG(46750047)> CPU DETAIL: Read R 1649: 0060103611480000 
DBG(46750048)> CPU DETAIL: Write 0534: 0060103611480000 
DBG(46750050)> CPU CMD: Exec 0586: 00 60 1646 0573 0000      
DBG(46750051)> CPU DETAIL: Read R 1646: 0042103316061048 
DBG(46750052)> CPU DETAIL: Write 0573: 0042103316061048 
DBG(46750054)> CPU CMD: Exec 0587: 00 60 1650 0224 0163   goto save event rec in output buf    
DBG(46750055)> CPU DETAIL: Read R 1650: 0060158810470558 
DBG(46750056)> CPU DETAIL: Transfer to T 
DBG(46750056)> CPU DETAIL: Write 0224: 0060158810470558 
DBG(46750058)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46750059)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750060)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46750062)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46750063)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46750064)> CPU DETAIL: Read S 1564: 0000000000000003 
DBG(46750065)> CPU DETAIL: Result: 0000000000000003 
DBG(46750068)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46750069)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46750070)> CPU DETAIL: Result: 0000000000000010 
DBG(46750071)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46750073)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46750074)> CPU DETAIL: Read R 1570: 0000000000000000 
DBG(46750075)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46750076)> CPU DETAIL: Result: 0000000000000010 
DBG(46750079)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46750080)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46750081)> CPU DETAIL: Result: 0000000000000190 
DBG(46750084)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46750085)> CPU DETAIL: REG1: 0000000000000190
DBG(46750085)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46750087)> CPU CMD: Exec 0172: 00 54 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46750088)> CPU DETAIL: M4: 0014 
DBG(46750089)> CPU DETAIL: M6: 0013 
DBG(46750090)> CPU DETAIL: Clear M8
DBG(46750090)> CPU DETAIL: M8: 0000 
DBG(46750093)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46750094)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46750095)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000000000000 
DBG(46750098)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46750099)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000000000 
DBG(46750100)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46750102)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46750103)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46750104)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46750105)> CPU DETAIL: Result: 0000000000000001 
DBG(46750106)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(46750109)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46750110)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750111)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46750111)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46750112)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750113)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750116)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46750117)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46750120)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46750121)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46750122)> CPU DETAIL: Result: 0000000000000000 
DBG(46750123)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46750125)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46750126)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46750127)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46750128)> CPU DETAIL: Result: 0000000000000001 
DBG(46750131)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46750132)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750133)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46750133)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46750134)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750135)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46750138)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46750139)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46750142)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46750143)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46750144)> CPU DETAIL: Result: 0030000000000000 
DBG(46750145)> CPU DETAIL: Write 1041: 0030000000000000 
DBG(46750147)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46750148)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750149)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46750152)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46750153)> CPU DETAIL: Read R 1041: 0030000000000000 
DBG(46750154)> CPU DETAIL: Result: 0100000000000000 
DBG(46750155)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46750157)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46750158)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46750159)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46750161)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750162)> CPU DETAIL: Read R 1041: 0100000000000000 
DBG(46750163)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(46750163)> CPU DETAIL: Write 1348: 0100000000000000 
DBG(46750165)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750166)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46750167)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750168)> CPU DETAIL: Result: 0060104293480000 
DBG(46750169)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46750171)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750174)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750175)> CPU DETAIL: M8: 0001 
DBG(46750176)> CPU DETAIL: Transfer to T 
DBG(46750178)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750179)> CPU DETAIL: Read R 1042: 0000009998989950 
DBG(46750180)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(46750180)> CPU DETAIL: Write 1349: 0000009998989950 
DBG(46750182)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750183)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46750184)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750185)> CPU DETAIL: Result: 0060104393480000 
DBG(46750186)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46750188)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750191)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750192)> CPU DETAIL: M8: 0002 
DBG(46750193)> CPU DETAIL: Transfer to T 
DBG(46750195)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750196)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46750197)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(46750197)> CPU DETAIL: Write 1350: 0000000000000000 
DBG(46750199)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750200)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46750201)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750202)> CPU DETAIL: Result: 0060104493480000 
DBG(46750203)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46750205)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750208)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750209)> CPU DETAIL: M8: 0003 
DBG(46750210)> CPU DETAIL: Transfer to T 
DBG(46750212)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750213)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46750214)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(46750214)> CPU DETAIL: Write 1351: 0000000000000000 
DBG(46750216)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750217)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46750218)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750219)> CPU DETAIL: Result: 0060104593480000 
DBG(46750220)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46750222)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750225)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750226)> CPU DETAIL: M8: 0004 
DBG(46750227)> CPU DETAIL: Transfer to T 
DBG(46750229)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750230)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46750231)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(46750231)> CPU DETAIL: Write 1352: 0000000000000000 
DBG(46750233)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750234)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46750235)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750236)> CPU DETAIL: Result: 0060104693480000 
DBG(46750237)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46750239)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750242)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750243)> CPU DETAIL: M8: 0005 
DBG(46750244)> CPU DETAIL: Transfer to T 
DBG(46750246)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750247)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46750248)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(46750248)> CPU DETAIL: Write 1353: 0000000000000000 
DBG(46750250)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750251)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46750252)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750253)> CPU DETAIL: Result: 0060104793480000 
DBG(46750254)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46750256)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750259)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750260)> CPU DETAIL: M8: 0006 
DBG(46750261)> CPU DETAIL: Transfer to T 
DBG(46750263)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46750264)> CPU DETAIL: Read R 1047: 0000000000000001 
DBG(46750265)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(46750265)> CPU DETAIL: Write 1354: 0000000000000001 
DBG(46750267)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46750268)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46750269)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750270)> CPU DETAIL: Result: 0060104893480000 
DBG(46750271)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46750273)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46750276)> CPU CMD: Exec 0189: 08 58 0001 0007 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46750277)> CPU DETAIL: M8: 0007 
DBG(46750280)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46750281)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46750282)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46750284)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46750285)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46750286)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46750288)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46750289)> CPU DETAIL: Read R 1563: 0000000000000000 
DBG(46750290)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46750291)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46750294)> CPU CMD: Exec 0193: 00 60 0000 0000 0203   transfer 203   
DBG(46750295)> CPU DETAIL: Transfer to T 
DBG(46750297)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46750298)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46750299)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46750301)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46750302)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750303)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46750305)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46750306)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46750307)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46750308)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46750309)> CPU DETAIL: Transfer to T 
DBG(46750311)> CPU CMD: Exec 0207: 00 59 0000 0000 0000      
DBG(46750312)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0014 0013 0007
DBG(46750314)> CPU CMD: Exec 0208: 96 42 0000 1582 0216      
DBG(46750315)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46750316)> CPU DETAIL: Result: 0000000000000007 
DBG(46750317)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46750318)> CPU DETAIL: Write 0216: 0000000000070000 
DBG(46750320)> CPU CMD: Exec 0209: 96 60 1564 0000 0000   (1564 words used by successors) Shift left 4 -> REG1   
DBG(46750321)> CPU DETAIL: Read R 1564: 0000000000000003 
DBG(46750322)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46750325)> CPU CMD: Exec 0210: 00 40 1618 0000 0000   (1618) + REG1   
DBG(46750326)> CPU DETAIL: Read R 1618: 0858000100000212 
DBG(46750327)> CPU DETAIL: Result: 0858000100030212 
DBG(46750330)> CPU CMD: Exec 0211: 00 40 0216 0000 0216   (0216) + REG1 -> (0216)   
DBG(46750331)> CPU DETAIL: Read R 0216: 0000000000070000 
DBG(46750332)> CPU DETAIL: Result: 0858000100100212 
DBG(46750333)> CPU DETAIL: Write 0216: 0858000100100212 
DBG(46750335)> CPU CMD: Exec 0212: 00 60 1148 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46750336)> CPU DETAIL: Read R 1148: 0000009898989920 
DBG(46750337)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(46750337)> CPU DETAIL: Write 1355: 0000009898989920 
DBG(46750339)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46750340)> CPU DETAIL: Read R 0212: 0060114893480000 
DBG(46750341)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750342)> CPU DETAIL: Result: 0060114993480000 
DBG(46750343)> CPU DETAIL: Write 0212: 0060114993480000 
DBG(46750345)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46750346)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(46750346)> CPU DETAIL: Read R 1355: 0000009898989920 
DBG(46750347)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46750348)> CPU DETAIL: Diff: REG1: 4500009898989920
DBG(46750351)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46750352)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46750353)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46750354)> CPU DETAIL: Result: 0000000000000001 
DBG(46750355)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46750357)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46750358)> CPU DETAIL: M8: 0008 
DBG(46750359)> CPU DETAIL: Transfer to T 
DBG(46750361)> CPU CMD: Exec 0212: 00 60 1149 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46750362)> CPU DETAIL: Read R 1149: 5555555555555555 
DBG(46750363)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(46750363)> CPU DETAIL: Write 1356: 5555555555555555 
DBG(46750365)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46750366)> CPU DETAIL: Read R 0212: 0060114993480000 
DBG(46750367)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750368)> CPU DETAIL: Result: 0060115093480000 
DBG(46750369)> CPU DETAIL: Write 0212: 0060115093480000 
DBG(46750371)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46750372)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(46750372)> CPU DETAIL: Read R 1356: 5555555555555555 
DBG(46750373)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46750374)> CPU DETAIL: Diff: REG1: 0055555555555555
DBG(46750377)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46750378)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46750379)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46750380)> CPU DETAIL: Result: 0000000000000002 
DBG(46750381)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46750383)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46750384)> CPU DETAIL: M8: 0009 
DBG(46750385)> CPU DETAIL: Transfer to T 
DBG(46750387)> CPU CMD: Exec 0212: 00 60 1150 9348 0000   (1148 successor list) -> (M8 + 1348 event out block)   
DBG(46750388)> CPU DETAIL: Read R 1150: 6666666666666666 
DBG(46750389)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(46750389)> CPU DETAIL: Write 1357: 6666666666666666 
DBG(46750391)> CPU CMD: Exec 0213: 00 40 0212 1612 0212   (0212) + (1612) -> (0212)   
DBG(46750392)> CPU DETAIL: Read R 0212: 0060115093480000 
DBG(46750393)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46750394)> CPU DETAIL: Result: 0060115193480000 
DBG(46750395)> CPU DETAIL: Write 0212: 0060115193480000 
DBG(46750397)> CPU CMD: Exec 0214: 00 70 9348 1593 0594   if (M8+1348 event out block)=550..0 transfer 0594            if =550..0 it i 
DBG(46750398)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(46750398)> CPU DETAIL: Read R 1357: 6666666666666666 
DBG(46750399)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46750400)> CPU DETAIL: Diff: REG1: 1166666666666666
DBG(46750403)> CPU CMD: Exec 0215: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46750404)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46750405)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46750406)> CPU DETAIL: Result: 0000000000000003 
DBG(46750407)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46750409)> CPU CMD: Exec 0216: 08 58 0001 0010 0212      
DBG(46750410)> CPU DETAIL: M8: 0010 
DBG(46750413)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46750414)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46750415)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46750417)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46750418)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750419)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46750421)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46750422)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46750423)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46750426)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46750427)> CPU DETAIL: Read R 0189: 0858000100070186 
DBG(46750428)> CPU DETAIL: Result: 0858000100170186 
DBG(46750429)> CPU DETAIL: Write 0189: 0858000100170186 
DBG(46750431)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46750432)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750433)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46750435)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46750436)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750437)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46750439)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46750440)> CPU DETAIL: Read R 1570: 0000000000000000 
DBG(46750441)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46750442)> CPU DETAIL: Result: 0000000000000010 
DBG(46750443)> CPU DETAIL: Write 1570: 0000000000000010 
DBG(46750445)> CPU CMD: Exec 0224: 00 60 1588 1047 0558   exit if no write to tape   
DBG(46750446)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750447)> CPU DETAIL: Transfer to T 
DBG(46750447)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46750449)> CPU CMD: Exec 0558: 00 42 1036 1593 0000   mask (1036 transac rec w4) with 550..0     
DBG(46750450)> CPU DETAIL: Read R 1036: 6600009998989960 
DBG(46750451)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46750452)> CPU DETAIL: Result: 6600000000000000 
DBG(46750455)> CPU CMD: Exec 0559: 00 41 1036 0000 1042   remove 2 leftmost digits from (1036 transac w4) ->  (1042 event rec w2)    
DBG(46750456)> CPU DETAIL: Read R 1036: 6600009998989960 
DBG(46750457)> CPU DETAIL: Result: 0000009998989960 
DBG(46750458)> CPU DETAIL: Write 1042: 0000009998989960 
DBG(46750460)> CPU CMD: Exec 0560: 10 42 1039 1580 1041   mask (1039 transac w7) with 111111 0..0 -> (1041 event rec w1)     transac w 
DBG(46750461)> CPU DETAIL: Read R 1039: 7777770000008888 
DBG(46750462)> CPU DETAIL: Read S 1580: 1111110000000000 
DBG(46750463)> CPU DETAIL: Result: 7777770000000000 
DBG(46750464)> CPU DETAIL: Word Shift 10 digits right: REG1: 0000000000777777 
DBG(46750465)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46750467)> CPU CMD: Exec 0561: 00 60 1588 1043 0000   clear (1043 event rec w3)   
DBG(46750468)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750469)> CPU DETAIL: Write 1043: 0000000000000000 
DBG(46750471)> CPU CMD: Exec 0562: 00 60 0000 1044 0000   clear (1044 event rec w4)   
DBG(46750472)> CPU DETAIL: Write 1044: 0000000000000000 
DBG(46750474)> CPU CMD: Exec 0563: 00 60 0000 1045 0000   clear (1045 event rec w5   
DBG(46750475)> CPU DETAIL: Write 1045: 0000000000000000 
DBG(46750477)> CPU CMD: Exec 0564: 00 60 0000 1046 0000   clear (1046 event rec w6)   
DBG(46750478)> CPU DETAIL: Write 1046: 0000000000000000 
DBG(46750480)> CPU CMD: Exec 0565: 00 60 0000 1047 0000   clear (1047 event rec w7)   
DBG(46750481)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46750483)> CPU CMD: Exec 0566: 00 60 0000 0000 0000   nop   
DBG(46750486)> CPU CMD: Exec 0567: 88 42 1039 1582 0000   mask (1039 transac w7) with 0..0 1111     tranasc w7 = SCHEDL xx xxxx TSTS   
DBG(46750487)> CPU DETAIL: Read R 1039: 7777770000008888 
DBG(46750488)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46750489)> CPU DETAIL: Result: 0000000000008888 
DBG(46750490)> CPU DETAIL: Word Shift 12 digits left: REG1: 8888000000000000 
DBG(46750493)> CPU CMD: Exec 0568: 00 40 1047 0000 1047   set (1047 event rec w7) with TSTS         event w7= TSTS TTTT xxxx AA BB   A 
DBG(46750494)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46750495)> CPU DETAIL: Result: 8888000000000000 
DBG(46750496)> CPU DETAIL: Write 1047: 8888000000000000 
DBG(46750498)> CPU CMD: Exec 0569: 07 42 1033 1643 0000   Mask (1033 transac w1) shift right 7      transac w1 = A RS 00 0 PPPPPPPPP 0 
DBG(46750499)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46750500)> CPU DETAIL: Read S 1643: 0110000000000000 
DBG(46750501)> CPU DETAIL: Result: 0990000000000000 
DBG(46750502)> CPU DETAIL: Word Shift 7 digits right: REG1: 0000000099000000 
DBG(46750505)> CPU CMD: Exec 0570: 00 40 1047 0000 1047   set (1047 event rec w7) with RS           event w7= TSTS TTTT RS xx AA BB    
DBG(46750506)> CPU DETAIL: Read R 1047: 8888000000000000 
DBG(46750507)> CPU DETAIL: Result: 8888000099000000 
DBG(46750508)> CPU DETAIL: Write 1047: 8888000099000000 
DBG(46750510)> CPU CMD: Exec 0571: 07 42 1033 1644 0000   Mask (1033 transac w1) shift right 7      transac w1 = A RS PR 0 PPPPPPPPP 0 
DBG(46750511)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46750512)> CPU DETAIL: Read S 1644: 0001100000000000 
DBG(46750513)> CPU DETAIL: Result: 0006600000000000 
DBG(46750514)> CPU DETAIL: Word Shift 7 digits right: REG1: 0000000000660000 
DBG(46750517)> CPU CMD: Exec 0572: 00 40 1047 0000 1047   set (1047 event rec w7) with PR           event w7= TSTS TTTT RS PR AA BB    
DBG(46750518)> CPU DETAIL: Read R 1047: 8888000099000000 
DBG(46750519)> CPU DETAIL: Result: 8888000099660000 
DBG(46750520)> CPU DETAIL: Write 1047: 8888000099660000 
DBG(46750522)> CPU CMD: Exec 0573: 00 42 1033 1606 1048   Mask (1033 transac w1) witn event code -> (1048 predecessors list)   
DBG(46750523)> CPU DETAIL: Read R 1033: 1996609898989910 
DBG(46750524)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46750525)> CPU DETAIL: Result: 0000009898989910 
DBG(46750526)> CPU DETAIL: Write 1048: 0000009898989910 
DBG(46750528)> CPU CMD: Exec 0574: 96 42 0573 1582 0000   Mask (0573) to get field T, shift right 4 (to field R)   
DBG(46750529)> CPU DETAIL: Read R 0573: 0042103316061048 
DBG(46750530)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46750531)> CPU DETAIL: Result: 0000000000001048 
DBG(46750532)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000010480000 
DBG(46750535)> CPU CMD: Exec 0575: 00 40 1590 0000 0000   incr_S   
DBG(46750536)> CPU DETAIL: Read R 1590: 0000000000010000 
DBG(46750537)> CPU DETAIL: Result: 0000000010490000 
DBG(46750540)> CPU CMD: Exec 0576: 00 40 1631 0000 0577   set to ...   
DBG(46750541)> CPU DETAIL: Read R 1631: 0060103400000000 
DBG(46750542)> CPU DETAIL: Result: 0060103410490000 
DBG(46750543)> CPU DETAIL: Write 0577: 0060103410490000 
DBG(46750545)> CPU CMD: Exec 0577: 00 60 1034 1049 0000   ... (1034 transac w2) -> (1049 event predecessor list w2)     
DBG(46750546)> CPU DETAIL: Read R 1034: 2222222222222222 
DBG(46750547)> CPU DETAIL: Write 1049: 2222222222222222 
DBG(46750549)> CPU CMD: Exec 0578: 00 40 0577 1629 0579   set to    
DBG(46750550)> CPU DETAIL: Read R 0577: 0060103410490000 
DBG(46750551)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46750552)> CPU DETAIL: Result: 0060103510500000 
DBG(46750553)> CPU DETAIL: Write 0579: 0060103510500000 
DBG(46750555)> CPU CMD: Exec 0579: 00 60 1035 1050 0000   ... (1035 transac w3) -> (1050 event predecessor list w3)     
DBG(46750556)> CPU DETAIL: Read R 1035: 3333333333333333 
DBG(46750557)> CPU DETAIL: Write 1050: 3333333333333333 
DBG(46750559)> CPU CMD: Exec 0580: 00 60 1588 1148 0000   clear (1148 successor list) make sure no successors, to save predecessor if  
DBG(46750560)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750561)> CPU DETAIL: Write 1148: 0000000000000000 
DBG(46750563)> CPU CMD: Exec 0581: 00 60 0000 0000 1800   setup number of words in created event   
DBG(46750564)> CPU DETAIL: Transfer to T 
DBG(46750566)> CPU CMD: Exec 1800: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1 = 007 0..0   
DBG(46750567)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750568)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46750571)> CPU CMD: Exec 1801: 00 40 1041 0000 1041   set 007 as msg len in event w1    
DBG(46750572)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46750573)> CPU DETAIL: Result: 0070000000777777 
DBG(46750574)> CPU DETAIL: Write 1041: 0070000000777777 
DBG(46750576)> CPU CMD: Exec 1802: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46750577)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750578)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46750580)> CPU CMD: Exec 1803: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46750581)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750582)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46750584)> CPU CMD: Exec 1804: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)    
DBG(46750585)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750586)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46750588)> CPU CMD: Exec 1805: 00 70 1048 1588 1812   if no predecessor goto 1812   
DBG(46750589)> CPU DETAIL: Read R 1048: 0000009898989910 
DBG(46750590)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46750591)> CPU DETAIL: Diff: REG1: 0000009898989910
DBG(46750594)> CPU CMD: Exec 1806: 98 60 1587 0000 0000   100 -> REG1   
DBG(46750595)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46750596)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000100 
DBG(46750599)> CPU CMD: Exec 1807: 00 40 1047 0000 1047   set (1047 event rec w7) with AA=1 (one predecessor)   
DBG(46750600)> CPU DETAIL: Read R 1047: 8888000099660000 
DBG(46750601)> CPU DETAIL: Result: 8888000099660100 
DBG(46750602)> CPU DETAIL: Write 1047: 8888000099660100 
DBG(46750604)> CPU CMD: Exec 1808: 00 40 1623 1565 1565   (1565 num of words in event rec) += 3   
DBG(46750605)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750606)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46750607)> CPU DETAIL: Result: 0000000000000010 
DBG(46750608)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46750610)> CPU CMD: Exec 1809: 87 60 1623 0000 0000   3 Shift Left 13 -> REG1 = 003 0..0   
DBG(46750611)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750612)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46750615)> CPU CMD: Exec 1810: 00 40 1041 0000 1041   add to msg len in event w1    
DBG(46750616)> CPU DETAIL: Read R 1041: 0070000000777777 
DBG(46750617)> CPU DETAIL: Result: 0100000000777777 
DBG(46750618)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46750620)> CPU CMD: Exec 1811: 00 60 1623 1563 0000   3 -> (1563 words used by predecessors)    
DBG(46750621)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750622)> CPU DETAIL: Write 1563: 0000000000000003 
DBG(46750624)> CPU CMD: Exec 1812: 00 70 1148 1588 1819   if no successors goto 1819   
DBG(46750625)> CPU DETAIL: Read R 1148: 0000000000000000 
DBG(46750626)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46750627)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46750628)> CPU DETAIL: Transfer to T 
DBG(46750630)> CPU CMD: Exec 1819: 00 60 0000 0000 0057   go to process next transaction   
DBG(46750631)> CPU DETAIL: Transfer to T 
DBG(46750633)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46750634)> CPU DETAIL: Read R 1556: 0000000000000014 
DBG(46750635)> CPU DETAIL: Read S 1557: 0000000000000014 
DBG(46750636)> CPU DETAIL: Result: 0000000000000000 
DBG(46750639)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46750640)> CPU DETAIL: REG1: 0000000000000000
DBG(46750640)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46750642)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46750643)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46750644)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46750646)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46750647)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46750648)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46750650)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46750651)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46750652)> CPU DETAIL: Transfer to T 
DBG(46750652)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46750654)> CPU CMD: Exec 0034: 02 94 0629 0000 0006   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46750655)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0006
DBG(46750655)> MT DATA: Tape unit 2: init read
DBG(46750655)> MT DETAIL: Read tape record (164 chars, used 1.82 inches, needs 10 msec) from tape 2
DBG(46750655)> MT DETAIL: Tape record contents: D*0290020102070006C*1000009999999990C*0000000000000000C*00000000000000...
DBG(46750655)> MT EXP: Start Of Block Word: 0290020102070006
DBG(46750655)> MT EXP: Read Tape Block number 0006
DBG(46750655)> MT EXP: Read forward addr 0629 to 0000
DBG(46750655)> MT EXP: Tape to CRT 0629: 1000009999999990 
DBG(46750655)> MT EXP: Tape to CRT 0630: 0000000000000000 
DBG(46750655)> MT EXP: Tape to CRT 0631: 0000000000000000 
DBG(46750655)> MT EXP: Tape to CRT 0632: 5500009999999990 
DBG(46750655)> MT EXP: Tape to CRT 0633: 0000000000000000 
DBG(46750655)> MT EXP: Tape to CRT 0634: 0000000000000000 
DBG(46750655)> MT EXP: Tape to CRT 0635: 0000000000000000 
DBG(46750655)> MT EXP: End Of Block Word: 0290020102070006, data words in block: 7
DBG(46750655)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.09% of medium (14.76 inches)
DBG(46750658)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46750659)> CPU DETAIL: Condition not present 
DBG(46750661)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46750662)> CPU DETAIL: Condition not present 
DBG(46750664)> CPU CMD: Exec 0037: 00 60 0000 1554 0000   REG1 -> (1554 tape read start of block word)                        
DBG(46750665)> CPU DETAIL: Write 1554: 0290020102070006 
DBG(46750667)> CPU CMD: Exec 0038: 04 42 0000 1585 1555   Mask and shift start of block: bbbb -> (1555)        02 90 aaaa bbbb nnnn ma 
DBG(46750668)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46750669)> CPU DETAIL: Result: 0000000002070000 
DBG(46750670)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000207 
DBG(46750671)> CPU DETAIL: Write 1555: 0000000000000207 
DBG(46750673)> CPU CMD: Exec 0039: 08 42 1554 1586 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(46750674)> CPU DETAIL: Read R 1554: 0290020102070006 
DBG(46750675)> CPU DETAIL: Read S 1586: 0000111100000000 
DBG(46750676)> CPU DETAIL: Result: 0000020100000000 
DBG(46750677)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000201 
DBG(46750680)> CPU CMD: Exec 0040: 00 41 1555 0000 1556   (1555) - REG2 -> (1556 words in transac block)   
DBG(46750681)> CPU DETAIL: Read R 1555: 0000000000000207 
DBG(46750682)> CPU DETAIL: Result: 0000000000000006 
DBG(46750683)> CPU DETAIL: Write 1556: 0000000000000006 
DBG(46750685)> CPU CMD: Exec 0041: 00 40 1587 0000 1556          + 1 -> (1556 words in transac block)                                  
DBG(46750686)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46750687)> CPU DETAIL: Result: 0000000000000007 
DBG(46750688)> CPU DETAIL: Write 1556: 0000000000000007 
DBG(46750690)> CPU CMD: Exec 0042: 00 40 0034 1587 0034   (0034) + 1 -> (0034)                                 incr block num to read  
DBG(46750691)> CPU DETAIL: Read R 0034: 0294062900000006 
DBG(46750692)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46750693)> CPU DETAIL: Result: 0294062900000007 
DBG(46750694)> CPU DETAIL: Write 0034: 0294062900000007 
DBG(46750696)> CPU CMD: Exec 0043: 00 51 0000 0000 0000   Clear M4 then add R S T to M4 M6 M8                  read first transac from 
DBG(46750697)> CPU DETAIL: Clear M4
DBG(46750697)> CPU DETAIL: M4: 0000 
DBG(46750698)> CPU DETAIL: M6: 0013 
DBG(46750699)> CPU DETAIL: M8: 0010 
DBG(46750702)> CPU CMD: Exec 0044: 00 60 0000 0000 0063   nop   
DBG(46750703)> CPU DETAIL: Transfer to T 
DBG(46750705)> CPU CMD: Exec 0063: 00 60 4629 1033 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750706)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(46750706)> CPU DETAIL: Read R 0629: 1000009999999990 
DBG(46750707)> CPU DETAIL: Write 1033: 1000009999999990 
DBG(46750709)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750710)> CPU DETAIL: Read R 0063: 0060462910330000 
DBG(46750711)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750712)> CPU DETAIL: Result: 0060462910340000 
DBG(46750713)> CPU DETAIL: Write 0063: 0060462910340000 
DBG(46750715)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750716)> CPU DETAIL: M4: 0001 
DBG(46750717)> CPU DETAIL: Transfer to T 
DBG(46750719)> CPU CMD: Exec 0063: 00 60 4629 1034 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750720)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(46750720)> CPU DETAIL: Read R 0630: 0000000000000000 
DBG(46750721)> CPU DETAIL: Write 1034: 0000000000000000 
DBG(46750723)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750724)> CPU DETAIL: Read R 0063: 0060462910340000 
DBG(46750725)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750726)> CPU DETAIL: Result: 0060462910350000 
DBG(46750727)> CPU DETAIL: Write 0063: 0060462910350000 
DBG(46750729)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750730)> CPU DETAIL: M4: 0002 
DBG(46750731)> CPU DETAIL: Transfer to T 
DBG(46750733)> CPU CMD: Exec 0063: 00 60 4629 1035 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750734)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(46750734)> CPU DETAIL: Read R 0631: 0000000000000000 
DBG(46750735)> CPU DETAIL: Write 1035: 0000000000000000 
DBG(46750737)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750738)> CPU DETAIL: Read R 0063: 0060462910350000 
DBG(46750739)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750740)> CPU DETAIL: Result: 0060462910360000 
DBG(46750741)> CPU DETAIL: Write 0063: 0060462910360000 
DBG(46750743)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750744)> CPU DETAIL: M4: 0003 
DBG(46750745)> CPU DETAIL: Transfer to T 
DBG(46750747)> CPU CMD: Exec 0063: 00 60 4629 1036 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750748)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(46750748)> CPU DETAIL: Read R 0632: 5500009999999990 
DBG(46750749)> CPU DETAIL: Write 1036: 5500009999999990 
DBG(46750751)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750752)> CPU DETAIL: Read R 0063: 0060462910360000 
DBG(46750753)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750754)> CPU DETAIL: Result: 0060462910370000 
DBG(46750755)> CPU DETAIL: Write 0063: 0060462910370000 
DBG(46750757)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750758)> CPU DETAIL: M4: 0004 
DBG(46750759)> CPU DETAIL: Transfer to T 
DBG(46750761)> CPU CMD: Exec 0063: 00 60 4629 1037 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750762)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(46750762)> CPU DETAIL: Read R 0633: 0000000000000000 
DBG(46750763)> CPU DETAIL: Write 1037: 0000000000000000 
DBG(46750765)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750766)> CPU DETAIL: Read R 0063: 0060462910370000 
DBG(46750767)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750768)> CPU DETAIL: Result: 0060462910380000 
DBG(46750769)> CPU DETAIL: Write 0063: 0060462910380000 
DBG(46750771)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750772)> CPU DETAIL: M4: 0005 
DBG(46750773)> CPU DETAIL: Transfer to T 
DBG(46750775)> CPU CMD: Exec 0063: 00 60 4629 1038 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750776)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(46750776)> CPU DETAIL: Read R 0634: 0000000000000000 
DBG(46750777)> CPU DETAIL: Write 1038: 0000000000000000 
DBG(46750779)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750780)> CPU DETAIL: Read R 0063: 0060462910380000 
DBG(46750781)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750782)> CPU DETAIL: Result: 0060462910390000 
DBG(46750783)> CPU DETAIL: Write 0063: 0060462910390000 
DBG(46750785)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750786)> CPU DETAIL: M4: 0006 
DBG(46750787)> CPU DETAIL: Transfer to T 
DBG(46750789)> CPU CMD: Exec 0063: 00 60 4629 1039 0000   (M4 + 0629 Transac_Block) -> (1033 Transac_rec w1)    M4=index on transac re 
DBG(46750790)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(46750790)> CPU DETAIL: Read R 0635: 0000000000000000 
DBG(46750791)> CPU DETAIL: Write 1039: 0000000000000000 
DBG(46750793)> CPU CMD: Exec 0064: 00 40 0063 1590 0063   (0063) + (1590 INCR_S) -> (0063)                     incr 1033 addr in prev  
DBG(46750794)> CPU DETAIL: Read R 0063: 0060462910390000 
DBG(46750795)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46750796)> CPU DETAIL: Result: 0060462910400000 
DBG(46750797)> CPU DETAIL: Write 0063: 0060462910400000 
DBG(46750799)> CPU CMD: Exec 0065: 04 58 0001 0007 0063   inc M4, if M4 <> 0007 goto 0063 (loop NEXT)          copy transac rec 0629+M 
DBG(46750800)> CPU DETAIL: M4: 0007 
DBG(46750803)> CPU CMD: Exec 0066: 96 60 1591 0000 0000   7 left shift 4 -> REG1                               REG1=0..07 0000   
DBG(46750804)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750805)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000070000 
DBG(46750808)> CPU CMD: Exec 0067: 00 40 0065 0000 0065   (0065) + REG1 -> (0065)                              set M4 loop final value 
DBG(46750809)> CPU DETAIL: Read R 0065: 0458000100070063 
DBG(46750810)> CPU DETAIL: Result: 0458000100140063 
DBG(46750811)> CPU DETAIL: Write 0065: 0458000100140063 
DBG(46750813)> CPU CMD: Exec 0068: 00 60 1592 0063 0000   (1592) -> (0063)                                     reset instr 0063 to its 
DBG(46750814)> CPU DETAIL: Read R 1592: 0060462910330000 
DBG(46750815)> CPU DETAIL: Write 0063: 0060462910330000 
DBG(46750817)> CPU CMD: Exec 0069: 00 40 1557 1591 1557   (1557 words read from transac block) += 7               
DBG(46750818)> CPU DETAIL: Read R 1557: 0000000000000000 
DBG(46750819)> CPU DETAIL: Read S 1591: 0000000000000007 
DBG(46750820)> CPU DETAIL: Result: 0000000000000007 
DBG(46750821)> CPU DETAIL: Write 1557: 0000000000000007 
DBG(46750823)> CPU CMD: Exec 0070: 00 42 1036 1593 1560   mask (1036 transact rec w4) with 550..0 -> (1560 55 0..0 add succesor to eve 
DBG(46750824)> CPU DETAIL: Read R 1036: 5500009999999990 
DBG(46750825)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46750826)> CPU DETAIL: Result: 5500000000000000 
DBG(46750827)> CPU DETAIL: Write 1560: 5500000000000000 
DBG(46750829)> CPU CMD: Exec 0071: 00 70 1593 0000 0074   if = 55 0..0 then goto to 0074                       if w4=550..0 -> update  
DBG(46750830)> CPU DETAIL: Read R 1593: 5500000000000000 
DBG(46750831)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46750832)> CPU DETAIL: Transfer to T 
DBG(46750834)> CPU CMD: Exec 0074: 00 60 1607 0146 0000   (1607) -> (0146) for transac event code use 1033 w1   
DBG(46750835)> CPU DETAIL: Read R 1607: 0042103316061568 
DBG(46750836)> CPU DETAIL: Write 0146: 0042103316061568 
DBG(46750838)> CPU CMD: Exec 0075: 00 60 1614 0254 0000   (1614) -> (0254) on card code 2 processing: set to update successor activity 
DBG(46750839)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46750840)> CPU DETAIL: Write 0254: 0060000000000000 
DBG(46750842)> CPU CMD: Exec 0076: 00 60 1614 0291 0000   (1614) -> (0291) on card code 5 processing: set to delete successor activity 
DBG(46750843)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46750844)> CPU DETAIL: Write 0291: 0060000000000000 
DBG(46750846)> CPU CMD: Exec 0077: 00 60 0341 0329 0000   (0341) -> (0329) on card code 4 processing: set to ignore transaction, just  
DBG(46750847)> CPU DETAIL: Read R 0341: 0060000000000057 
DBG(46750848)> CPU DETAIL: Write 0329: 0060000000000057 
DBG(46750850)> CPU CMD: Exec 0078: 00 60 1680 0422 0000   (1680) -> (0422) set to insert successor on card code=1                      
DBG(46750851)> CPU DETAIL: Read R 1680: 0070156415880421 
DBG(46750852)> CPU DETAIL: Write 0422: 0070156415880421 
DBG(46750854)> CPU CMD: Exec 0079: 00 60 1666 0414 0000   (1666) -> (0414)   
DBG(46750855)> CPU DETAIL: Read R 1666: 0060000000000418 
DBG(46750856)> CPU DETAIL: Write 0414: 0060000000000418 
DBG(46750858)> CPU CMD: Exec 0080: 00 60 1668 0342 0521   (1668) -> (0342), transfer to 0521 (there, if Sw74 off, transfer to 0095)   
DBG(46750859)> CPU DETAIL: Read R 1668: 0060000000000384 
DBG(46750860)> CPU DETAIL: Transfer to T 
DBG(46750860)> CPU DETAIL: Write 0342: 0060000000000384 
DBG(46750862)> CPU CMD: Exec 0521: 00 74 1033 1042 0523   if Sw74 in "transfer" then (1033 Transac_rec w1)->(1042 event rec w2), goto  
DBG(46750863)> CPU DETAIL: Condition not present 
DBG(46750865)> CPU CMD: Exec 0522: 00 60 0000 0000 0526   goto 0095   
DBG(46750866)> CPU DETAIL: Transfer to T 
DBG(46750868)> CPU CMD: Exec 0526: 00 42 1033 1606 1568   Mask (1033 transact rec w1) to get predecessor code -> (1568 transac rec pre 
DBG(46750869)> CPU DETAIL: Read R 1033: 1000009999999990 
DBG(46750870)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46750871)> CPU DETAIL: Result: 0000009999999990 
DBG(46750872)> CPU DETAIL: Write 1568: 0000009999999990 
DBG(46750874)> CPU CMD: Exec 0527: 00 42 1042 1606 1567   Mask (1042 event rec w2) to get predecessor code -> (1567 event rec event co 
DBG(46750875)> CPU DETAIL: Read R 1042: 0000009998989960 
DBG(46750876)> CPU DETAIL: Read S 1606: 0000001111111110 
DBG(46750877)> CPU DETAIL: Result: 0000009998989960 
DBG(46750878)> CPU DETAIL: Write 1567: 0000009998989960 
DBG(46750880)> CPU CMD: Exec 0528: 15 60 1033 1569 0000   get card code from transac w1 -> (1569 card code)   
DBG(46750881)> CPU DETAIL: Read R 1033: 1000009999999990 
DBG(46750882)> CPU DETAIL: Word Shift 15 digits right: REG1: 0000000000000001 
DBG(46750883)> CPU DETAIL: Write 1569: 0000000000000001 
DBG(46750885)> CPU CMD: Exec 0529: 00 72 1587 0000 0153   if (card code)<>1 goto 0153                            reject transaction if 
DBG(46750886)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46750887)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46750890)> CPU CMD: Exec 0530: 00 72 1568 1567 0545   if (1567 event code) <> (1568 transac pred code) goto 0545       to flush ev 
DBG(46750891)> CPU DETAIL: Read R 1568: 0000009999999990 
DBG(46750892)> CPU DETAIL: Read S 1567: 0000009998989960 
DBG(46750893)> CPU DETAIL: Diff: REG1: 0000000001010030
DBG(46750894)> CPU DETAIL: Transfer to T 
DBG(46750896)> CPU CMD: Exec 0545: 00 60 1646 0573 0000   set to save event and return to 0531   
DBG(46750897)> CPU DETAIL: Read R 1646: 0042103316061048 
DBG(46750898)> CPU DETAIL: Write 0573: 0042103316061048 
DBG(46750900)> CPU CMD: Exec 0546: 00 60 1649 0534 0000      
DBG(46750901)> CPU DETAIL: Read R 1649: 0060103611480000 
DBG(46750902)> CPU DETAIL: Write 0534: 0060103611480000 
DBG(46750904)> CPU CMD: Exec 0547: 00 60 1645 0224 0163   goto save event rec in output buf    
DBG(46750905)> CPU DETAIL: Read R 1645: 0060158810470531 
DBG(46750906)> CPU DETAIL: Transfer to T 
DBG(46750906)> CPU DETAIL: Write 0224: 0060158810470531 
DBG(46750908)> CPU CMD: Exec 0163: 00 60 1591 1565 0000   constant 7 -> (1565 num of words in event rec)   
DBG(46750909)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750910)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46750912)> CPU CMD: Exec 0164: 00 40 1563 1564 0000   (1563 words used by predecessors) + (1564 words used by successors) -> REG1  
DBG(46750913)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46750914)> CPU DETAIL: Read S 1564: 0000000000000000 
DBG(46750915)> CPU DETAIL: Result: 0000000000000003 
DBG(46750918)> CPU CMD: Exec 0165: 00 40 1565 0000 1565   (1565 num of words in event rec) += REG1  = (7+pred*3+succ*3)    
DBG(46750919)> CPU DETAIL: Read R 1565: 0000000000000007 
DBG(46750920)> CPU DETAIL: Result: 0000000000000010 
DBG(46750921)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46750923)> CPU CMD: Exec 0166: 00 40 1570 1565 0000   (1570 words used in out event buffer) + (1565 num of words in event rec) ->  
DBG(46750924)> CPU DETAIL: Read R 1570: 0000000000000010 
DBG(46750925)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46750926)> CPU DETAIL: Result: 0000000000000020 
DBG(46750929)> CPU CMD: Exec 0167: 00 41 1609 0000 0000   (1609) - REG1 -> REG1                         reg1=200-reg1=size left in out 
DBG(46750930)> CPU DETAIL: Read R 1609: 0000000000000200 
DBG(46750931)> CPU DETAIL: Result: 0000000000000180 
DBG(46750934)> CPU CMD: Exec 0168: 00 63 0172 0169 0171   TR >=0 goto 0172, =0 goto 0169, <= goto 0171   
DBG(46750935)> CPU DETAIL: REG1: 0000000000000180
DBG(46750935)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(46750937)> CPU CMD: Exec 0172: 00 60 0000 0000 0000   Clear M8 then add R S T to M4 M6 M8                             
DBG(46750940)> CPU CMD: Exec 0173: 97 60 1041 0000 0000   (1041 event rec w1) Shift left 3 -> REG1                      
DBG(46750941)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46750942)> CPU DETAIL: Word Shift 3 digits left: REG1: 0000000777777000 
DBG(46750945)> CPU CMD: Exec 0174: 03 60 0000 1041 0000   REG1 Shift right 3 -> (1041 event rec w1) = 000X..X   
DBG(46750946)> CPU DETAIL: Word Shift 3 digits right: REG1: 0000000000777777 
DBG(46750947)> CPU DETAIL: Write 1041: 0000000000777777 
DBG(46750949)> CPU CMD: Exec 0175: 02 42 1047 1582 0000   Mask (1047 event rec w7) with 0..01111, shift right 2        reg1=AA, event  
DBG(46750950)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46750951)> CPU DETAIL: Read S 1582: 0000000000001111 
DBG(46750952)> CPU DETAIL: Result: 0000000000000100 
DBG(46750953)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(46750956)> CPU CMD: Exec 0176: 88 34 1623 0000 0000   Float (1623 THREE) x REG1   
DBG(46750957)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750958)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46750958)> CPU DETAIL:        REG2: 88 0 1 0000 0000 0000 (0.000000)
DBG(46750959)> CPU DETAIL: Result: 76 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750960)> CPU DETAIL: Shift : 88 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(46750963)> CPU CMD: Exec 0177: 87 60 0000 0000 0000   Reg1 Shift Left 13                                
DBG(46750964)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46750967)> CPU CMD: Exec 0178: 00 40 1041 0000 1041   (1041 event rec w1) += REG1   
DBG(46750968)> CPU DETAIL: Read R 1041: 0000000000777777 
DBG(46750969)> CPU DETAIL: Result: 0030000000777777 
DBG(46750970)> CPU DETAIL: Write 1041: 0030000000777777 
DBG(46750972)> CPU CMD: Exec 0179: 00 42 1047 1596 0000   Mask (1047 event rec w7) with 0..01111   
DBG(46750973)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46750974)> CPU DETAIL: Read S 1596: 0000000000000011 
DBG(46750975)> CPU DETAIL: Result: 0000000000000000 
DBG(46750978)> CPU CMD: Exec 0180: 88 34 1623 0000 0000   Float (1623 three) x REG1   
DBG(46750979)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46750980)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(46750980)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(46750981)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750982)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(46750985)> CPU CMD: Exec 0181: 87 60 0000 0000 0000   Reg1 Shift Left 13   
DBG(46750986)> CPU DETAIL: Word Shift 13 digits left: REG1: 0000000000000000 
DBG(46750989)> CPU CMD: Exec 0182: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN0..0 where NNN=3*num pred 
DBG(46750990)> CPU DETAIL: Read R 1041: 0030000000777777 
DBG(46750991)> CPU DETAIL: Result: 0030000000777777 
DBG(46750992)> CPU DETAIL: Write 1041: 0030000000777777 
DBG(46750994)> CPU CMD: Exec 0183: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1   
DBG(46750995)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46750996)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46750999)> CPU CMD: Exec 0184: 00 40 1041 0000 1041   (1041 event rec w1) += REG1                   = NNN rest of event w1 = msg l 
DBG(46751000)> CPU DETAIL: Read R 1041: 0030000000777777 
DBG(46751001)> CPU DETAIL: Result: 0100000000777777 
DBG(46751002)> CPU DETAIL: Write 1041: 0100000000777777 
DBG(46751004)> CPU CMD: Exec 0185: 13 60 0000 1565 0000   REG1 -> (1565 num of words in event rec)      = NNN=message length   
DBG(46751005)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(46751006)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46751008)> CPU CMD: Exec 0186: 00 60 1041 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751009)> CPU DETAIL: Read R 1041: 0100000000777777 
DBG(46751010)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(46751010)> CPU DETAIL: Write 1358: 0100000000777777 
DBG(46751012)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751013)> CPU DETAIL: Read R 0186: 0060104193480000 
DBG(46751014)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751015)> CPU DETAIL: Result: 0060104293480000 
DBG(46751016)> CPU DETAIL: Write 0186: 0060104293480000 
DBG(46751018)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751021)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751022)> CPU DETAIL: M8: 0011 
DBG(46751023)> CPU DETAIL: Transfer to T 
DBG(46751025)> CPU CMD: Exec 0186: 00 60 1042 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751026)> CPU DETAIL: Read R 1042: 0000009998989960 
DBG(46751027)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(46751027)> CPU DETAIL: Write 1359: 0000009998989960 
DBG(46751029)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751030)> CPU DETAIL: Read R 0186: 0060104293480000 
DBG(46751031)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751032)> CPU DETAIL: Result: 0060104393480000 
DBG(46751033)> CPU DETAIL: Write 0186: 0060104393480000 
DBG(46751035)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751038)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751039)> CPU DETAIL: M8: 0012 
DBG(46751040)> CPU DETAIL: Transfer to T 
DBG(46751042)> CPU CMD: Exec 0186: 00 60 1043 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751043)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(46751044)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(46751044)> CPU DETAIL: Write 1360: 0000000000000000 
DBG(46751046)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751047)> CPU DETAIL: Read R 0186: 0060104393480000 
DBG(46751048)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751049)> CPU DETAIL: Result: 0060104493480000 
DBG(46751050)> CPU DETAIL: Write 0186: 0060104493480000 
DBG(46751052)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751055)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751056)> CPU DETAIL: M8: 0013 
DBG(46751057)> CPU DETAIL: Transfer to T 
DBG(46751059)> CPU CMD: Exec 0186: 00 60 1044 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751060)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(46751061)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(46751061)> CPU DETAIL: Write 1361: 0000000000000000 
DBG(46751063)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751064)> CPU DETAIL: Read R 0186: 0060104493480000 
DBG(46751065)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751066)> CPU DETAIL: Result: 0060104593480000 
DBG(46751067)> CPU DETAIL: Write 0186: 0060104593480000 
DBG(46751069)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751072)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751073)> CPU DETAIL: M8: 0014 
DBG(46751074)> CPU DETAIL: Transfer to T 
DBG(46751076)> CPU CMD: Exec 0186: 00 60 1045 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751077)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(46751078)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(46751078)> CPU DETAIL: Write 1362: 0000000000000000 
DBG(46751080)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751081)> CPU DETAIL: Read R 0186: 0060104593480000 
DBG(46751082)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751083)> CPU DETAIL: Result: 0060104693480000 
DBG(46751084)> CPU DETAIL: Write 0186: 0060104693480000 
DBG(46751086)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751089)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751090)> CPU DETAIL: M8: 0015 
DBG(46751091)> CPU DETAIL: Transfer to T 
DBG(46751093)> CPU CMD: Exec 0186: 00 60 1046 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751094)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(46751095)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(46751095)> CPU DETAIL: Write 1363: 0000000000000000 
DBG(46751097)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751098)> CPU DETAIL: Read R 0186: 0060104693480000 
DBG(46751099)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751100)> CPU DETAIL: Result: 0060104793480000 
DBG(46751101)> CPU DETAIL: Write 0186: 0060104793480000 
DBG(46751103)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751106)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751107)> CPU DETAIL: M8: 0016 
DBG(46751108)> CPU DETAIL: Transfer to T 
DBG(46751110)> CPU CMD: Exec 0186: 00 60 1047 9348 0000   (1041 event rec w1) -> (M8 + 1348 event out block)   
DBG(46751111)> CPU DETAIL: Read R 1047: 8888000099660100 
DBG(46751112)> CPU DETAIL: M8 Address Modifier: 0016 
DBG(46751112)> CPU DETAIL: Write 1364: 8888000099660100 
DBG(46751114)> CPU CMD: Exec 0187: 00 40 0186 1612 0186   incr 1348 at prev instr   
DBG(46751115)> CPU DETAIL: Read R 0186: 0060104793480000 
DBG(46751116)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751117)> CPU DETAIL: Result: 0060104893480000 
DBG(46751118)> CPU DETAIL: Write 0186: 0060104893480000 
DBG(46751120)> CPU CMD: Exec 0188: 00 60 0000 0000 0000   nop                                               
DBG(46751123)> CPU CMD: Exec 0189: 08 58 0001 0017 0186   inc M8, if M8 <> 0007 goto 0186 (loop NEXT)   copy out buf -> 1348..1354   
DBG(46751124)> CPU DETAIL: M8: 0017 
DBG(46751127)> CPU CMD: Exec 0190: 00 60 1613 0186 0000   (1613) -> (0186)                              restore 086 to its initial val 
DBG(46751128)> CPU DETAIL: Read R 1613: 0060104193480000 
DBG(46751129)> CPU DETAIL: Write 0186: 0060104193480000 
DBG(46751131)> CPU CMD: Exec 0191: 00 60 1614 0172 0000   (1614) -> (0172)                              set 0172 to nop (do not clear  
DBG(46751132)> CPU DETAIL: Read R 1614: 0060000000000000 
DBG(46751133)> CPU DETAIL: Write 0172: 0060000000000000 
DBG(46751135)> CPU CMD: Exec 0192: 00 72 1563 1588 0194   if (1563 words used by predecessors) <> zero goto 0194           
DBG(46751136)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46751137)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46751138)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(46751139)> CPU DETAIL: Transfer to T 
DBG(46751141)> CPU CMD: Exec 0194: 00 42 0189 1585 0202      
DBG(46751142)> CPU DETAIL: Read R 0189: 0858000100170186 
DBG(46751143)> CPU DETAIL: Read S 1585: 0000000011110000 
DBG(46751144)> CPU DETAIL: Result: 0000000000170000 
DBG(46751145)> CPU DETAIL: Write 0202: 0000000000170000 
DBG(46751147)> CPU CMD: Exec 0195: 96 60 1563 0000 0000   (1563 words used by predecessors) Shift left 4 -> REG1   
DBG(46751148)> CPU DETAIL: Read R 1563: 0000000000000003 
DBG(46751149)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(46751152)> CPU CMD: Exec 0196: 00 40 1616 0000 0000   (1616) + REG1 -> REG1   
DBG(46751153)> CPU DETAIL: Read R 1616: 0858000100000198 
DBG(46751154)> CPU DETAIL: Result: 0858000100030198 
DBG(46751157)> CPU CMD: Exec 0197: 00 40 0202 0000 0202   (0202) + REG1 -> (0202)   
DBG(46751158)> CPU DETAIL: Read R 0202: 0000000000170000 
DBG(46751159)> CPU DETAIL: Result: 0858000100200198 
DBG(46751160)> CPU DETAIL: Write 0202: 0858000100200198 
DBG(46751162)> CPU CMD: Exec 0198: 00 60 1048 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46751163)> CPU DETAIL: Read R 1048: 0000009898989910 
DBG(46751164)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(46751164)> CPU DETAIL: Write 1365: 0000009898989910 
DBG(46751166)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46751167)> CPU DETAIL: Read R 0198: 0060104893480000 
DBG(46751168)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751169)> CPU DETAIL: Result: 0060104993480000 
DBG(46751170)> CPU DETAIL: Write 0198: 0060104993480000 
DBG(46751172)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46751173)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(46751173)> CPU DETAIL: Read R 1365: 0000009898989910 
DBG(46751174)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46751175)> CPU DETAIL: Diff: REG1: 4500009898989910
DBG(46751178)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46751179)> CPU DETAIL: Read R 1577: 0000000000000000 
DBG(46751180)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46751181)> CPU DETAIL: Result: 0000000000000001 
DBG(46751182)> CPU DETAIL: Write 1577: 0000000000000001 
DBG(46751184)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46751185)> CPU DETAIL: M8: 0018 
DBG(46751186)> CPU DETAIL: Transfer to T 
DBG(46751188)> CPU CMD: Exec 0198: 00 60 1049 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46751189)> CPU DETAIL: Read R 1049: 2222222222222222 
DBG(46751190)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(46751190)> CPU DETAIL: Write 1366: 2222222222222222 
DBG(46751192)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46751193)> CPU DETAIL: Read R 0198: 0060104993480000 
DBG(46751194)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751195)> CPU DETAIL: Result: 0060105093480000 
DBG(46751196)> CPU DETAIL: Write 0198: 0060105093480000 
DBG(46751198)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46751199)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(46751199)> CPU DETAIL: Read R 1366: 2222222222222222 
DBG(46751200)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46751201)> CPU DETAIL: Diff: REG1: 6722222222222222
DBG(46751204)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46751205)> CPU DETAIL: Read R 1577: 0000000000000001 
DBG(46751206)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46751207)> CPU DETAIL: Result: 0000000000000002 
DBG(46751208)> CPU DETAIL: Write 1577: 0000000000000002 
DBG(46751210)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46751211)> CPU DETAIL: M8: 0019 
DBG(46751212)> CPU DETAIL: Transfer to T 
DBG(46751214)> CPU CMD: Exec 0198: 00 60 1050 9348 0000   (1048 predecessors list) -> (M8 + 1348 event out block)   
DBG(46751215)> CPU DETAIL: Read R 1050: 3333333333333333 
DBG(46751216)> CPU DETAIL: M8 Address Modifier: 0019 
DBG(46751216)> CPU DETAIL: Write 1367: 3333333333333333 
DBG(46751218)> CPU CMD: Exec 0199: 00 40 0198 1612 0198   (0198) + (1612) -> (0198)    
DBG(46751219)> CPU DETAIL: Read R 0198: 0060105093480000 
DBG(46751220)> CPU DETAIL: Read S 1612: 0000000100000000 
DBG(46751221)> CPU DETAIL: Result: 0060105193480000 
DBG(46751222)> CPU DETAIL: Write 0198: 0060105193480000 
DBG(46751224)> CPU CMD: Exec 0200: 00 70 9348 1593 0588   if (M8 + 1348 event out block) = (1593 = 550..0) transfer 0588 skip deleted  
DBG(46751225)> CPU DETAIL: M8 Address Modifier: 0019 
DBG(46751225)> CPU DETAIL: Read R 1367: 3333333333333333 
DBG(46751226)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46751227)> CPU DETAIL: Diff: REG1: 7833333333333333
DBG(46751230)> CPU CMD: Exec 0201: 00 40 1577 1587 1577   (1577) + 1 -> (1577)   
DBG(46751231)> CPU DETAIL: Read R 1577: 0000000000000002 
DBG(46751232)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46751233)> CPU DETAIL: Result: 0000000000000003 
DBG(46751234)> CPU DETAIL: Write 1577: 0000000000000003 
DBG(46751236)> CPU CMD: Exec 0202: 08 58 0001 0020 0198      
DBG(46751237)> CPU DETAIL: M8: 0020 
DBG(46751240)> CPU CMD: Exec 0203: 00 60 1617 0198 0000   (1617) -> (0198)                              restore 0198 instr   
DBG(46751241)> CPU DETAIL: Read R 1617: 0060104893480000 
DBG(46751242)> CPU DETAIL: Write 0198: 0060104893480000 
DBG(46751244)> CPU CMD: Exec 0204: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46751245)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751246)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46751248)> CPU CMD: Exec 0205: 00 72 1564 1588 0207   if (1564 words used by successors) <> zero goto 0207   
DBG(46751249)> CPU DETAIL: Read R 1564: 0000000000000000 
DBG(46751250)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46751251)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46751254)> CPU CMD: Exec 0206: 00 60 0000 0000 0217   transfer 0217   
DBG(46751255)> CPU DETAIL: Transfer to T 
DBG(46751257)> CPU CMD: Exec 0217: 00 60 1619 0212 0000   (1619) -> (0212)                              restore 0212 instr   
DBG(46751258)> CPU DETAIL: Read R 1619: 0060114893480000 
DBG(46751259)> CPU DETAIL: Write 0212: 0060114893480000 
DBG(46751261)> CPU CMD: Exec 0218: 00 60 1588 1577 0000   (1588 ZERO) -> (1577)   
DBG(46751262)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751263)> CPU DETAIL: Write 1577: 0000000000000000 
DBG(46751265)> CPU CMD: Exec 0219: 96 60 1565 0000 0000   (1565 num of words in event rec) Shift Left 4 -> REG1                      
DBG(46751266)> CPU DETAIL: Read R 1565: 0000000000000010 
DBG(46751267)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(46751270)> CPU CMD: Exec 0220: 00 40 0189 0000 0189   (0189) + REG1 -> (0189)   
DBG(46751271)> CPU DETAIL: Read R 0189: 0858000100170186 
DBG(46751272)> CPU DETAIL: Result: 0858000100270186 
DBG(46751273)> CPU DETAIL: Write 0189: 0858000100270186 
DBG(46751275)> CPU CMD: Exec 0221: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46751276)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751277)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46751279)> CPU CMD: Exec 0222: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46751280)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751281)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46751283)> CPU CMD: Exec 0223: 00 40 1570 1565 1570   (1570 words used in out event buffer) += (1565 num of words in event rec)   
DBG(46751284)> CPU DETAIL: Read R 1570: 0000000000000010 
DBG(46751285)> CPU DETAIL: Read S 1565: 0000000000000010 
DBG(46751286)> CPU DETAIL: Result: 0000000000000020 
DBG(46751287)> CPU DETAIL: Write 1570: 0000000000000020 
DBG(46751289)> CPU CMD: Exec 0224: 00 60 1588 1047 0531   exit if no write to tape   
DBG(46751290)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751291)> CPU DETAIL: Transfer to T 
DBG(46751291)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46751293)> CPU CMD: Exec 0531: 00 60 1568 1042 0000   (1568 transac rec predecessor code) -> (1042 event rec w2)    
DBG(46751294)> CPU DETAIL: Read R 1568: 0000009999999990 
DBG(46751295)> CPU DETAIL: Write 1042: 0000009999999990 
DBG(46751297)> CPU CMD: Exec 0532: 00 42 1036 1593 0000   mask (1036 transac rec w4) with 550..0    
DBG(46751298)> CPU DETAIL: Read R 1036: 5500009999999990 
DBG(46751299)> CPU DETAIL: Read S 1593: 5500000000000000 
DBG(46751300)> CPU DETAIL: Result: 5500000000000000 
DBG(46751303)> CPU CMD: Exec 0533: 00 41 1036 0000 1036   remove 2 leftmost digits from (1036 transac w4)   
DBG(46751304)> CPU DETAIL: Read R 1036: 5500009999999990 
DBG(46751305)> CPU DETAIL: Result: 0000009999999990 
DBG(46751306)> CPU DETAIL: Write 1036: 0000009999999990 
DBG(46751308)> CPU CMD: Exec 0534: 00 60 1036 1148 0000   (1036 transac rec w4) -> (1148 successor list w1)   
DBG(46751309)> CPU DETAIL: Read R 1036: 0000009999999990 
DBG(46751310)> CPU DETAIL: Write 1148: 0000009999999990 
DBG(46751312)> CPU CMD: Exec 0535: 00 40 0534 1629 0536   incr_s incr_t   
DBG(46751313)> CPU DETAIL: Read R 0534: 0060103611480000 
DBG(46751314)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46751315)> CPU DETAIL: Result: 0060103711490000 
DBG(46751316)> CPU DETAIL: Write 0536: 0060103711490000 
DBG(46751318)> CPU CMD: Exec 0536: 00 60 1037 1149 0000   (transac rec w5) -> (1149 event successors)   
DBG(46751319)> CPU DETAIL: Read R 1037: 0000000000000000 
DBG(46751320)> CPU DETAIL: Write 1149: 0000000000000000 
DBG(46751322)> CPU CMD: Exec 0537: 00 40 0536 1629 0538   incr_s incr_t   
DBG(46751323)> CPU DETAIL: Read R 0536: 0060103711490000 
DBG(46751324)> CPU DETAIL: Read S 1629: 0000000100010000 
DBG(46751325)> CPU DETAIL: Result: 0060103811500000 
DBG(46751326)> CPU DETAIL: Write 0538: 0060103811500000 
DBG(46751328)> CPU CMD: Exec 0538: 00 60 1038 1150 0000   (transac rec w6) -> (1150 event successors)    
DBG(46751329)> CPU DETAIL: Read R 1038: 0000000000000000 
DBG(46751330)> CPU DETAIL: Write 1150: 0000000000000000 
DBG(46751332)> CPU CMD: Exec 0539: 00 60 1588 1041 0000   clear (1041 event rec w1)   
DBG(46751333)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751334)> CPU DETAIL: Write 1041: 0000000000000000 
DBG(46751336)> CPU CMD: Exec 0540: 00 60 1588 1047 0000   clear (1047 event rec w7)   
DBG(46751337)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751338)> CPU DETAIL: Write 1047: 0000000000000000 
DBG(46751340)> CPU CMD: Exec 0541: 00 60 1588 1048 0000   clear (1048 predecesor list) make sure no predecessors, to save successor if 
DBG(46751341)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751342)> CPU DETAIL: Write 1048: 0000000000000000 
DBG(46751344)> CPU CMD: Exec 0542: 00 60 0000 0000 1800   setup number of words in created event   
DBG(46751345)> CPU DETAIL: Transfer to T 
DBG(46751347)> CPU CMD: Exec 1800: 87 60 1591 0000 0000   7 Shift Left 13 -> REG1 = 007 0..0   
DBG(46751348)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46751349)> CPU DETAIL: Word Shift 13 digits left: REG1: 0070000000000000 
DBG(46751352)> CPU CMD: Exec 1801: 00 40 1041 0000 1041   set 007 as msg len in event w1    
DBG(46751353)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(46751354)> CPU DETAIL: Result: 0070000000000000 
DBG(46751355)> CPU DETAIL: Write 1041: 0070000000000000 
DBG(46751357)> CPU CMD: Exec 1802: 00 60 1588 1563 0000   clear (1563 words used by predecessors)   
DBG(46751358)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751359)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(46751361)> CPU CMD: Exec 1803: 00 60 1588 1564 0000   clear (1564 words used by successors)   
DBG(46751362)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751363)> CPU DETAIL: Write 1564: 0000000000000000 
DBG(46751365)> CPU CMD: Exec 1804: 00 60 1591 1565 0000   7 -> (1565 num of words in event rec)    
DBG(46751366)> CPU DETAIL: Read R 1591: 0000000000000007 
DBG(46751367)> CPU DETAIL: Write 1565: 0000000000000007 
DBG(46751369)> CPU CMD: Exec 1805: 00 70 1048 1588 1812   if no predecessor goto 1812   
DBG(46751370)> CPU DETAIL: Read R 1048: 0000000000000000 
DBG(46751371)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46751372)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46751373)> CPU DETAIL: Transfer to T 
DBG(46751375)> CPU CMD: Exec 1812: 00 70 1148 1588 1819   if no successors goto 1819   
DBG(46751376)> CPU DETAIL: Read R 1148: 0000009999999990 
DBG(46751377)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46751378)> CPU DETAIL: Diff: REG1: 0000009999999990
DBG(46751381)> CPU CMD: Exec 1813: 00 60 1587 0000 0000   1 -> REG1   
DBG(46751382)> CPU DETAIL: Read R 1587: 0000000000000001 
DBG(46751385)> CPU CMD: Exec 1814: 00 40 1047 0000 1047   set (1047 event rec w7) with BB=1 (one successor)   
DBG(46751386)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(46751387)> CPU DETAIL: Result: 0000000000000001 
DBG(46751388)> CPU DETAIL: Write 1047: 0000000000000001 
DBG(46751390)> CPU CMD: Exec 1815: 00 40 1623 1565 1565   (1565 num of words in event rec) += 3   
DBG(46751391)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46751392)> CPU DETAIL: Read S 1565: 0000000000000007 
DBG(46751393)> CPU DETAIL: Result: 0000000000000010 
DBG(46751394)> CPU DETAIL: Write 1565: 0000000000000010 
DBG(46751396)> CPU CMD: Exec 1816: 87 60 1623 0000 0000   3 Shift Left 13 -> REG1 = 003 0..0   
DBG(46751397)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46751398)> CPU DETAIL: Word Shift 13 digits left: REG1: 0030000000000000 
DBG(46751401)> CPU CMD: Exec 1817: 00 40 1041 0000 1041   add to msg len in event w1    
DBG(46751402)> CPU DETAIL: Read R 1041: 0070000000000000 
DBG(46751403)> CPU DETAIL: Result: 0100000000000000 
DBG(46751404)> CPU DETAIL: Write 1041: 0100000000000000 
DBG(46751406)> CPU CMD: Exec 1818: 00 60 1623 1564 0000   3 -> (1564 words used by predecessors)    
DBG(46751407)> CPU DETAIL: Read R 1623: 0000000000000003 
DBG(46751408)> CPU DETAIL: Write 1564: 0000000000000003 
DBG(46751410)> CPU CMD: Exec 1819: 00 60 0000 0000 0057   go to process next transaction   
DBG(46751411)> CPU DETAIL: Transfer to T 
DBG(46751413)> CPU CMD: Exec 0057: 00 41 1556 1557 0000   (1556 words in transac block) - (1557 words read from transac block) -> REG1 
DBG(46751414)> CPU DETAIL: Read R 1556: 0000000000000007 
DBG(46751415)> CPU DETAIL: Read S 1557: 0000000000000007 
DBG(46751416)> CPU DETAIL: Result: 0000000000000000 
DBG(46751419)> CPU CMD: Exec 0058: 00 63 0063 0060 0000   TR >0 to 0063, =0 to 0060                               
DBG(46751420)> CPU DETAIL: REG1: 0000000000000000
DBG(46751420)> CPU DETAIL: Transfer to S (REG1=0)
DBG(46751422)> CPU CMD: Exec 0060: 00 60 1669 0065 0000   (1669)->(0065)                                          
DBG(46751423)> CPU DETAIL: Read R 1669: 0458000100070063 
DBG(46751424)> CPU DETAIL: Write 0065: 0458000100070063 
DBG(46751426)> CPU CMD: Exec 0061: 00 60 1588 1557 0000   clear (1557 words read from transac block)   
DBG(46751427)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751428)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(46751430)> CPU CMD: Exec 0062: 00 60 1589 0044 0034   (1589)->(0044), transfert 0034                       read new transact block 
DBG(46751431)> CPU DETAIL: Read R 1589: 0060000000000063 
DBG(46751432)> CPU DETAIL: Transfer to T 
DBG(46751432)> CPU DETAIL: Write 0044: 0060000000000063 
DBG(46751434)> CPU CMD: Exec 0034: 02 94 0629 0000 0007   read block tape 02 at (0629 Transaction block read from tape)   
DBG(46751435)> CPU DETAIL: Tape operation on MT2, Addr 0629->0000, Block Number 0007
DBG(46751435)> MT DATA: Tape unit 2: init read
DBG(46751435)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 2
DBG(46751435)> MT DETAIL: Tape record contents: D*0290000000000000CD
DBG(46751435)> MT EXP: End Of File mark sensed: 0290000000000000 
DBG(46751435)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.10% of medium (16.30 inches)
DBG(46751438)> CPU CMD: Exec 0035: 08 68 0035 0000 1687   if tape check Call 1687 Re-read   
DBG(46751439)> CPU DETAIL: Condition not present 
DBG(46751441)> CPU CMD: Exec 0036: 00 67 0000 0000 0599   if end of file transfer to end of transactions       transaction tape termin 
DBG(46751442)> CPU DETAIL: Reset condition present 
DBG(46751442)> CPU DETAIL: Transfer to T 
DBG(46751444)> CPU CMD: Exec 0599: 00 74 1676 0550 0548   if Sw74 in "transfer" goto 0548   
DBG(46751445)> CPU DETAIL: Condition not present 
DBG(46751447)> CPU CMD: Exec 0600: 00 70 1572 1623 0616   if (1572 Last tape number with EOF)=3 transfer 0616   
DBG(46751448)> CPU DETAIL: Read R 1572: 0000000000000003 
DBG(46751449)> CPU DETAIL: Read S 1623: 0000000000000003 
DBG(46751450)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(46751451)> CPU DETAIL: Transfer to T 
DBG(46751453)> CPU CMD: Exec 0616: 00 70 1570 1588 0618   if (1570 words used in out event buffer)=0 goto 0618   
DBG(46751454)> CPU DETAIL: Read R 1570: 0000000000000020 
DBG(46751455)> CPU DETAIL: Read S 1588: 0000000000000000 
DBG(46751456)> CPU DETAIL: Diff: REG1: 0000000000000020
DBG(46751459)> CPU CMD: Exec 0617: 00 60 0000 0000 0627   goto 0627                                     check sw74, goto 0549   
DBG(46751460)> CPU DETAIL: Transfer to T 
DBG(46751462)> CPU CMD: Exec 0627: 00 74 1676 0550 0549   if Sw74 in "transfer" goto 0549   
DBG(46751463)> CPU DETAIL: Condition not present 
DBG(46751465)> CPU CMD: Exec 0628: 00 60 0000 0000 0549   goto 0549   
DBG(46751466)> CPU DETAIL: Transfer to T 
DBG(46751468)> CPU CMD: Exec 0549: 00 40 1653 1587 0234      
DBG(46751469)> CPU DETAIL: Read R 1653: 0060000000000618 
DBG(46751470)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46751471)> CPU DETAIL: Result: 0060000000000619 
DBG(46751472)> CPU DETAIL: Write 0234: 0060000000000619 
DBG(46751474)> CPU CMD: Exec 0550: 00 60 0000 0000 0225   goto 0225 write output buf to tape 01 new active event tape   
DBG(46751475)> CPU DETAIL: Transfer to T 
DBG(46751477)> CPU CMD: Exec 0225: 96 60 1570 0000 0000   (1570 words used in out event buffer) Shift Left 4 -> REG1   
DBG(46751478)> CPU DETAIL: Read R 1570: 0000000000000020 
DBG(46751479)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000200000 
DBG(46751482)> CPU CMD: Exec 0226: 00 41 0000 1590 1570   REG1 - (1590  INCR_S) -> (1570 last word to write as NNNN 0000)       
DBG(46751483)> CPU DETAIL: Read S 1590: 0000000000010000 
DBG(46751484)> CPU DETAIL: Result: 0000000000190000 
DBG(46751485)> CPU DETAIL: Write 1570: 0000000000190000 
DBG(46751487)> CPU CMD: Exec 0227: 00 40 1620 0000 0228   (1620) + REG1 -> (0228)            last word to write in tape in 0208 instr  
DBG(46751488)> CPU DETAIL: Read R 1620: 0191134813480002 
DBG(46751489)> CPU DETAIL: Result: 0191134813670002 
DBG(46751490)> CPU DETAIL: Write 0228: 0191134813670002 
DBG(46751492)> CPU CMD: Exec 0228: 01 91 1348 1367 0002   01 91 1348 NNNN 0001               write to tape 01 from addr 1348=output bu 
DBG(46751493)> CPU DETAIL: Tape operation on MT1, Addr 1348->1367, Block Number 0002
DBG(46751493)> MT CMD: Tape unit 1: init write
DBG(46751493)> MT EXP: Write from 1348 to 1367 as Block number 0002
DBG(46751493)> MT EXP: Start Of Block: 01 91 1348 1367 0002
DBG(46751493)> MT EXP: CRT 1348 to Tape: 0100000000000000 
DBG(46751493)> MT EXP: CRT 1349 to Tape: 0000009998989950 
DBG(46751493)> MT EXP: CRT 1350 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1351 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1352 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1353 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1354 to Tape: 0000000000000001 
DBG(46751493)> MT EXP: CRT 1355 to Tape: 0000009898989920 
DBG(46751493)> MT EXP: CRT 1356 to Tape: 5555555555555555 
DBG(46751493)> MT EXP: CRT 1357 to Tape: 6666666666666666 
DBG(46751493)> MT EXP: CRT 1358 to Tape: 0100000000777777 
DBG(46751493)> MT EXP: CRT 1359 to Tape: 0000009998989960 
DBG(46751493)> MT EXP: CRT 1360 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1361 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1362 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1363 to Tape: 0000000000000000 
DBG(46751493)> MT EXP: CRT 1364 to Tape: 8888000099660100 
DBG(46751493)> MT EXP: CRT 1365 to Tape: 0000009898989910 
DBG(46751493)> MT EXP: CRT 1366 to Tape: 2222222222222222 
DBG(46751493)> MT EXP: CRT 1367 to Tape: 3333333333333333 
DBG(46751493)> MT EXP: End Of Block: 01 91 1348 1367 0002 (20 words)
DBG(46751493)> MT DETAIL: Write block (398 chars, used 2.28 inches, needs 13 msec) to tape 1
DBG(46751493)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (7.12 inches)
DBG(46751496)> CPU CMD: Exec 0229: 08 60 0229 0000 1704   Call 1704 check Write    
DBG(46751497)> CPU DETAIL: Read R 0229: 0860022900001704 
DBG(46751498)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600229 
DBG(46751499)> CPU DETAIL: Transfer to T 
DBG(46751501)> CPU CMD: Exec 1704: 00 40 1723 0000 1716   (1723 MK_TR60) + REG1 -> (1716 EXIT_1716)   Call: Save exit transfer   
DBG(46751502)> CPU DETAIL: Read R 1723: 0059999991400001 
DBG(46751503)> CPU DETAIL: Result: 0060000000000230 
DBG(46751504)> CPU DETAIL: Write 1716: 0060000000000230 
DBG(46751506)> CPU CMD: Exec 1705: 92 60 0000 0000 0000   REG1 shift left 8 (on listing was 1705 91 60 0000 0000 0000   REG1 shift lef 
DBG(46751507)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000023000000000 
DBG(46751510)> CPU CMD: Exec 1706: 01 40 1724 0000 1708   prepare instr to get tape instr to redo     (00 60 caller-1 1721 0000)   
DBG(46751511)> CPU DETAIL: Read R 1724: 0599998172100000 
DBG(46751512)> CPU DETAIL: Result: 0600021172100000 
DBG(46751513)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060002117210000 
DBG(46751514)> CPU DETAIL: Write 1708: 0060002117210000 
DBG(46751516)> CPU CMD: Exec 1707: 00 60 1717 1718 1715      
DBG(46751517)> CPU DETAIL: Read R 1717: 0061172100001727 
DBG(46751518)> CPU DETAIL: Transfer to T 
DBG(46751518)> CPU DETAIL: Write 1718: 0061172100001727 
DBG(46751520)> CPU CMD: Exec 1715: 00 68 0000 0000 1718   if write ok cont to exit from routine. If tape check transfer to 1718 to red 
DBG(46751521)> CPU DETAIL: Condition not present 
DBG(46751523)> CPU CMD: Exec 1716: 00 60 0000 0000 0230   EXIT_1716=Exit from routine =               00 60 0000 caller+1   
DBG(46751524)> CPU DETAIL: Transfer to T 
DBG(46751526)> CPU CMD: Exec 0230: 00 40 1620 1587 1620   (1620) + 1 -> (1620)               inc block number for next tape write   
DBG(46751527)> CPU DETAIL: Read R 1620: 0191134813480002 
DBG(46751528)> CPU DETAIL: Read S 1587: 0000000000000001 
DBG(46751529)> CPU DETAIL: Result: 0191134813480003 
DBG(46751530)> CPU DETAIL: Write 1620: 0191134813480003 
DBG(46751532)> CPU CMD: Exec 0231: 00 60 1621 0189 0000   (1621) -> (0189)                   restore inst 0189 to its initival value   
DBG(46751533)> CPU DETAIL: Read R 1621: 0858000100070186 
DBG(46751534)> CPU DETAIL: Write 0189: 0858000100070186 
DBG(46751536)> CPU CMD: Exec 0232: 00 60 1615 0172 0000   (1615) -> (0172)                   restore clear M8 on 0172: M8=write output 
DBG(46751537)> CPU DETAIL: Read R 1615: 0054000000000000 
DBG(46751538)> CPU DETAIL: Write 0172: 0054000000000000 
DBG(46751540)> CPU CMD: Exec 0233: 00 60 1588 1570 0000   clear (1570 words used in out event buffer)   
DBG(46751541)> CPU DETAIL: Read R 1588: 0000000000000000 
DBG(46751542)> CPU DETAIL: Write 1570: 0000000000000000 
DBG(46751544)> CPU CMD: Exec 0234: 00 60 0000 0000 0619   transfer 0070                      this is the continue to next transaction  
DBG(46751545)> CPU DETAIL: Transfer to T 
DBG(46751547)> CPU CMD: Exec 0619: 01 91 0000 0000 0000   write end of file in tape 01   
DBG(46751548)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(46751548)> MT CMD: Tape unit 1: init write
DBG(46751548)> MT EXP: End Of File mark: 02d 01 0091 0000 0000
DBG(46751548)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 1
DBG(46751548)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.05% of medium (8.66 inches)
DBG(46751551)> CPU CMD: Exec 0620: 02 98 0000 0000 0000   rewind tape 02   
DBG(46751552)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(46751552)> MT CMD: Tape unit 2: init rewind (current medium used 16.30 inches)
DBG(46751552)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(46751552)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(46751554)> CPU CMD: Exec 0621: 01 98 0000 0000 0000   rewind tape 01   
DBG(46751555)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(46751555)> MT CMD: Tape unit 1: init rewind (current medium used 8.66 inches)
DBG(46751555)> MT CMD: Tape unit 1: rewind time (0 sec)
DBG(46751555)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(46751557)> CPU CMD: Exec 0622: 09 98 0000 0000 0000   rewind tape 09 program   
DBG(46751558)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(46751558)> MT CMD: Tape unit 3: init rewind (current medium used 9.04 inches)
DBG(46751558)> MT CMD: Tape unit 3: rewind time (0 sec)
DBG(46751558)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(46751560)> CPU CMD: Exec 0623: 00 60 0518 0001 0001   set stop in 0001, transfer to 0001            sucessfull program end   
DBG(46751561)> CPU DETAIL: Read R 0518: 0061000000000000 
DBG(46751562)> CPU DETAIL: Transfer to T 
DBG(46751562)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(46751564)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(46751565)> CPU DETAIL: Programmed STOP 
DBG(46751565)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(47256489)> CPU DETAIL: End Wait for TAPE animation (104 msec)
DBG(47256489)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(47256489)> CPU DETAIL: Measured speed: 3470580 Ticks per second
DBG(47256489)> CPU DETAIL: Measured speed: Clock at 3.47 MHz
DBG(47256489)> CPU DETAIL: Speed is x3.5 relative to original hardware
DBG(47256489)> CPU DETAIL: Instructions executed: 2347
DBG(47256489)> CPU DETAIL: Measured speed: 9388 Instructions per second (IPS) achieved
DBG(47256489)> CPU DETAIL: Run elapsed 250 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)

*** print out of new active events in tape

loaded ../PERT_Run06/print_ev_prog.txt from 0008 to 1996 address

*** print events in tape in printer_EV.txt

DBG(47256489)> MT EXP: Tape unit 1: attach file mt_EV.tap
DBG(47256489)> MT EXP: Tape unit 2: attach file mt_EV_prt.tap
DBG(47256489)> CPU DETAIL: Measured speed: init because start of run
DBG(47256491)> CPU CMD: Exec 0008: 00 57 0000 0000 0000   0008        57                                           Clear M4 M6 M8   
DBG(47256492)> CPU DETAIL: Clear M4
DBG(47256492)> CPU DETAIL: M4: 0000 
DBG(47256493)> CPU DETAIL: Clear M6
DBG(47256493)> CPU DETAIL: M6: 0000 
DBG(47256494)> CPU DETAIL: Clear M8
DBG(47256494)> CPU DETAIL: M8: 0000 
DBG(47256497)> CPU CMD: Exec 0009: 09 98 0000 0000 0000            09 98                                           rewind tape 09 prog 
DBG(47256498)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(47256498)> MT EXP: Tape 3: command 98 attempted on tape without file attached
DBG(47256498)> CPU DETAIL: Tape Check signaled
DBG(47256498)> CPU DETAIL: Continue because switch TAPE CHECK set to proceed
DBG(47256500)> CPU CMD: Exec 0010: 00 60 1221 1211 0000               TR       ZERO        EVCOUNT   
DBG(47256501)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256502)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(47256504)> CPU CMD: Exec 0011: 01 94 1219 1219 0000            01 94       TEMP1       TEMP1       0000        read tape 01 label  
DBG(47256505)> CPU DETAIL: Tape operation on MT1, Addr 1219->1219, Block Number 0000
DBG(47256505)> MT DATA: Tape unit 1: init read
DBG(47256505)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 1
DBG(47256505)> MT DETAIL: Tape record contents: D*0191157815780000C*3906000000000000C*0191157815780000CD
DBG(47256505)> MT EXP: Start Of Block Word: 0191157815780000
DBG(47256505)> MT EXP: Read Tape Block number 0000
DBG(47256505)> MT EXP: Read forward addr 1219 to 1219
DBG(47256505)> MT EXP: Tape to CRT 1219: 3906000000000000 
DBG(47256505)> MT EXP: End Of Block Word: 0191157815780000, data words in block: 1
DBG(47256505)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(47256508)> CPU CMD: Exec 0012: 00 68 0012 0000 1991               68       *                       REREAD      if tape check Call  
DBG(47256509)> CPU DETAIL: Condition not present 
DBG(47256511)> CPU CMD: Exec 0013: 00 80 1219 0001 0000               80       TEMP1       0001                    print label for tap 
DBG(47256512)> CPU DETAIL: Read R 1219: 3906000000000000 
DBG(47256513)> CPU DETAIL: Write 0001: 3906000000000000 
DBG(47256515)> CPU CMD: Exec 0014: 00 80 1221 0002 0000               80       ZERO        0002   
DBG(47256516)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256517)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(47256519)> CPU CMD: Exec 0015: 00 80 0000 0003 0000               80                   0003   
DBG(47256520)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(47256522)> CPU CMD: Exec 0016: 00 80 0000 0004 0000               80                   0004   
DBG(47256523)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(47256525)> CPU CMD: Exec 0017: 00 80 0000 0005 0000               80                   0005   
DBG(47256526)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47256528)> CPU CMD: Exec 0018: 00 80 0000 0006 0000               80                   0006   
DBG(47256529)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47256531)> CPU CMD: Exec 0019: 00 81 1221 0007 0000               81       ZERO        0007                    print   
DBG(47256532)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256533)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(47256533)> LP CMD: Printer LP1: init cycle 
DBG(47256533)> LP CMD:      0001: 3906000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(47256533)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(47256533)> LP CMD: Printer 1: ready (fast mode)
DBG(47256535)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(47256536)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(47256536)> MT DATA: Tape unit 1: init read
DBG(47256536)> MT DETAIL: Read tape record (884 chars, used 3.23 inches, needs 20 msec) from tape 1
DBG(47256536)> MT DETAIL: Tape record contents: D*0191134813940001C*0100000000000000C*0000008898989810C*00000000000000...
DBG(47256536)> MT EXP: Start Of Block Word: 0191134813940001
DBG(47256536)> MT EXP: Read Tape Block number 0001
DBG(47256536)> MT EXP: Read forward addr 1001 to 0000
DBG(47256536)> MT EXP: Tape to CRT 1001: 0100000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1002: 0000008898989810 
DBG(47256536)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1005: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1006: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1007: 0000000000000001 
DBG(47256536)> MT EXP: Tape to CRT 1008: 0000009898989840 
DBG(47256536)> MT EXP: Tape to CRT 1009: 5555558855555555 
DBG(47256536)> MT EXP: Tape to CRT 1010: 6666668866666666 
DBG(47256536)> MT EXP: Tape to CRT 1011: 0100000000777777 
DBG(47256536)> MT EXP: Tape to CRT 1012: 0000008898989830 
DBG(47256536)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1017: 8888000099660100 
DBG(47256536)> MT EXP: Tape to CRT 1018: 0000009898989910 
DBG(47256536)> MT EXP: Tape to CRT 1019: 2222222222222222 
DBG(47256536)> MT EXP: Tape to CRT 1020: 3333333333333333 
DBG(47256536)> MT EXP: Tape to CRT 1021: 0100000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1022: 0000009898989810 
DBG(47256536)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1025: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1027: 0000000000000100 
DBG(47256536)> MT EXP: Tape to CRT 1028: 0000003398989830 
DBG(47256536)> MT EXP: Tape to CRT 1029: 0000000000033555 
DBG(47256536)> MT EXP: Tape to CRT 1030: 0000000000033666 
DBG(47256536)> MT EXP: Tape to CRT 1031: 0100000000777777 
DBG(47256536)> MT EXP: Tape to CRT 1032: 0000009898989820 
DBG(47256536)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1035: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1037: 7777777700000001 
DBG(47256536)> MT EXP: Tape to CRT 1038: 0000009898989830 
DBG(47256536)> MT EXP: Tape to CRT 1039: 5555505050505050 
DBG(47256536)> MT EXP: Tape to CRT 1040: 6666606060606060 
DBG(47256536)> MT EXP: Tape to CRT 1041: 0070000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1042: 0000009898989830 
DBG(47256536)> MT EXP: Tape to CRT 1043: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1044: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1045: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(47256536)> MT EXP: Tape to CRT 1047: 0000000000000000 
DBG(47256536)> MT EXP: End Of Block Word: 0191134813940001, data words in block: 47
DBG(47256536)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.03% of medium (4.84 inches)
DBG(47256539)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(47256540)> CPU DETAIL: Condition not present 
DBG(47256542)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(47256543)> CPU DETAIL: Condition not present 
DBG(47256545)> CPU CMD: Exec 0023: 00 60 0000 1219 0000               TR                   TEMP1                   Temp1=start of bloc 
DBG(47256546)> CPU DETAIL: Write 1219: 0191134813940001 
DBG(47256548)> CPU CMD: Exec 0024: 04 42 0000 1228 1220            04 MASK                 FIELD-S     TEMP2       Temp2=bbbb=02 90 aa 
DBG(47256549)> CPU DETAIL: Read S 1228: 0000000011110000 
DBG(47256550)> CPU DETAIL: Result: 0000000013940000 
DBG(47256551)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001394 
DBG(47256552)> CPU DETAIL: Write 1220: 0000000000001394 
DBG(47256554)> CPU CMD: Exec 0025: 08 42 1219 1227 0000            08 MASK     TEMP1       FIELD-R                 REG1=02 90 aaaa bbb 
DBG(47256555)> CPU DETAIL: Read R 1219: 0191134813940001 
DBG(47256556)> CPU DETAIL: Read S 1227: 0000111100000000 
DBG(47256557)> CPU DETAIL: Result: 0000134800000000 
DBG(47256558)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001348 
DBG(47256561)> CPU CMD: Exec 0026: 00 41 1220 0000 0000               SUB      TEMP2                
DBG(47256562)> CPU DETAIL: Read R 1220: 0000000000001394 
DBG(47256563)> CPU DETAIL: Result: 0000000000000046 
DBG(47256566)> CPU CMD: Exec 0027: 00 40 0000 1222 1203               ADD                  ONE         BL-INBUF    BL-INBUF=Block Len  
DBG(47256567)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47256568)> CPU DETAIL: Result: 0000000000000047 
DBG(47256569)> CPU DETAIL: Write 1203: 0000000000000047 
DBG(47256571)> CPU CMD: Exec 0028: 00 41 1226 0000 0000               SUB      N200                                check Block Len fro 
DBG(47256572)> CPU DETAIL: Read R 1226: 0000000000000200 
DBG(47256573)> CPU DETAIL: Result: 0000000000000153 
DBG(47256576)> CPU CMD: Exec 0029: 00 63 0031 0031 0000               TR SGN   LSPL3       LSPL3                   transfer if 200 or  
DBG(47256577)> CPU DETAIL: REG1: 0000000000000153
DBG(47256577)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47256579)> CPU CMD: Exec 0031: 00 60 1221 1204 0000   LSPL3       TR       ZERO        NW-INBUF                NW-INBUF=Number of  
DBG(47256580)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256581)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(47256583)> CPU CMD: Exec 0032: 00 60 0000 0000 0033               TR                               RR-INBUF    goto process first  
DBG(47256584)> CPU DETAIL: Transfer to T 
DBG(47256586)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47256587)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47256588)> CPU DETAIL: Read S 1204: 0000000000000000 
DBG(47256589)> CPU DETAIL: Result: 0000000000000047 
DBG(47256592)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47256593)> CPU DETAIL: REG1: 0000000000000047
DBG(47256593)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47256595)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47256596)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(47256597)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(47256600)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47256601)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47256602)> CPU DETAIL: Result: 0057000000000000 
DBG(47256603)> CPU DETAIL: Write 0038: 0057000000000000 
DBG(47256605)> CPU CMD: Exec 0038: 00 57 0000 0000 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47256606)> CPU DETAIL: Clear M4
DBG(47256606)> CPU DETAIL: M4: 0000 
DBG(47256607)> CPU DETAIL: Clear M6
DBG(47256607)> CPU DETAIL: M6: 0000 
DBG(47256608)> CPU DETAIL: Clear M8
DBG(47256608)> CPU DETAIL: M8: 0000 
DBG(47256611)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256612)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(47256612)> CPU DETAIL: Read R 1001: 0100000000000000 
DBG(47256613)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47256613)> CPU DETAIL: Write 1212: 0100000000000000 
DBG(47256615)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256616)> CPU DETAIL: M4: 0000 
DBG(47256617)> CPU DETAIL: M6: 0001 
DBG(47256618)> CPU DETAIL: M8: 0000 
DBG(47256621)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256622)> CPU DETAIL: M4: 0001 
DBG(47256623)> CPU DETAIL: Transfer to T 
DBG(47256625)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256626)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(47256626)> CPU DETAIL: Read R 1002: 0000008898989810 
DBG(47256627)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47256627)> CPU DETAIL: Write 1213: 0000008898989810 
DBG(47256629)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256630)> CPU DETAIL: M4: 0001 
DBG(47256631)> CPU DETAIL: M6: 0002 
DBG(47256632)> CPU DETAIL: M8: 0000 
DBG(47256635)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256636)> CPU DETAIL: M4: 0002 
DBG(47256637)> CPU DETAIL: Transfer to T 
DBG(47256639)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256640)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(47256640)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(47256641)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47256641)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47256643)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256644)> CPU DETAIL: M4: 0002 
DBG(47256645)> CPU DETAIL: M6: 0003 
DBG(47256646)> CPU DETAIL: M8: 0000 
DBG(47256649)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256650)> CPU DETAIL: M4: 0003 
DBG(47256651)> CPU DETAIL: Transfer to T 
DBG(47256653)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256654)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(47256654)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(47256655)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47256655)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47256657)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256658)> CPU DETAIL: M4: 0003 
DBG(47256659)> CPU DETAIL: M6: 0004 
DBG(47256660)> CPU DETAIL: M8: 0000 
DBG(47256663)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256664)> CPU DETAIL: M4: 0004 
DBG(47256665)> CPU DETAIL: Transfer to T 
DBG(47256667)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256668)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(47256668)> CPU DETAIL: Read R 1005: 0000000000000000 
DBG(47256669)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47256669)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47256671)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256672)> CPU DETAIL: M4: 0004 
DBG(47256673)> CPU DETAIL: M6: 0005 
DBG(47256674)> CPU DETAIL: M8: 0000 
DBG(47256677)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256678)> CPU DETAIL: M4: 0005 
DBG(47256679)> CPU DETAIL: Transfer to T 
DBG(47256681)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256682)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(47256682)> CPU DETAIL: Read R 1006: 0000000000000000 
DBG(47256683)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47256683)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47256685)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256686)> CPU DETAIL: M4: 0005 
DBG(47256687)> CPU DETAIL: M6: 0006 
DBG(47256688)> CPU DETAIL: M8: 0000 
DBG(47256691)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256692)> CPU DETAIL: M4: 0006 
DBG(47256693)> CPU DETAIL: Transfer to T 
DBG(47256695)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256696)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(47256696)> CPU DETAIL: Read R 1007: 0000000000000001 
DBG(47256697)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47256697)> CPU DETAIL: Write 1218: 0000000000000001 
DBG(47256699)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256700)> CPU DETAIL: M4: 0006 
DBG(47256701)> CPU DETAIL: M6: 0007 
DBG(47256702)> CPU DETAIL: M8: 0000 
DBG(47256705)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256706)> CPU DETAIL: M4: 0007 
DBG(47256709)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47256710)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(47256711)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47256712)> CPU DETAIL: Result: 0000000000000007 
DBG(47256713)> CPU DETAIL: Write 1204: 0000000000000007 
DBG(47256715)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47256716)> CPU DETAIL: Read R 1211: 0000000000000000 
DBG(47256717)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47256718)> CPU DETAIL: Result: 0000000000000001 
DBG(47256719)> CPU DETAIL: Write 1211: 0000000000000001 
DBG(47256721)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47256722)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256723)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47256725)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47256726)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256727)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47256729)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47256730)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256731)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47256733)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47256734)> CPU DETAIL: Read R 1212: 0100000000000000 
DBG(47256735)> CPU DETAIL: Write 1206: 0100000000000000 
DBG(47256737)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47256738)> CPU DETAIL: Read R 1213: 0000008898989810 
DBG(47256739)> CPU DETAIL: Write 1207: 0000008898989810 
DBG(47256741)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47256742)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47256743)> CPU DETAIL: Write 1208: 0000000000000001 
DBG(47256745)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47256746)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(47256747)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(47256748)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(47256750)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47256751)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47256752)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47256753)> CPU DETAIL: Transfer to T 
DBG(47256755)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47256756)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47256757)> CPU DETAIL: Result: 0060000000000052 
DBG(47256758)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47256760)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47256761)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(47256762)> CPU DETAIL: Write 0001: 0001000000000000 
DBG(47256764)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47256765)> CPU DETAIL: Read R 1206: 0100000000000000 
DBG(47256766)> CPU DETAIL: Write 0002: 0100000000000000 
DBG(47256768)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47256769)> CPU DETAIL: Read R 1207: 0000008898989810 
DBG(47256770)> CPU DETAIL: Write 0003: 0000008898989810 
DBG(47256772)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47256773)> CPU DETAIL: Read R 1208: 0000000000000001 
DBG(47256774)> CPU DETAIL: Write 0004: 0000000000000001 
DBG(47256776)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47256777)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256778)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47256780)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47256781)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47256783)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47256784)> CPU DETAIL: Reset condition present 
DBG(47256784)> same as above (3 times)
DBG(47256784)> CPU DETAIL: Transfer to T 
DBG(47256786)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47256787)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47256787)> MT CMD: Tape unit 2: init write
DBG(47256787)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47256787)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47256787)> MT EXP: CRT 0001 to Tape: 0001000000000000 
DBG(47256787)> MT EXP: CRT 0002 to Tape: 0100000000000000 
DBG(47256787)> MT EXP: CRT 0003 to Tape: 0000008898989810 
DBG(47256787)> MT EXP: CRT 0004 to Tape: 0000000000000001 
DBG(47256787)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47256787)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47256787)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.72 inches)
DBG(47256790)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47256791)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47256792)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47256793)> CPU DETAIL: Transfer to T 
DBG(47256795)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47256796)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47256797)> CPU DETAIL: Result: 0060000000000094 
DBG(47256798)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47256800)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47256801)> CPU DETAIL: Condition not present 
DBG(47256803)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47256804)> CPU DETAIL: Transfer to T 
DBG(47256806)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47256807)> CPU DETAIL: Transfer to T 
DBG(47256809)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47256810)> CPU DETAIL: Transfer to T 
DBG(47256812)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47256813)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47256814)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47256815)> CPU DETAIL: Result: 0000000000000000 
DBG(47256816)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(47256817)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47256819)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47256820)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47256821)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47256822)> CPU DETAIL: Transfer to T 
DBG(47256824)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47256825)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(47256826)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47256827)> CPU DETAIL: Result: 0001000000000000 
DBG(47256828)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(47256830)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47256831)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47256832)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47256833)> CPU DETAIL: Result: 0000000000000001 
DBG(47256834)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(47256836)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47256837)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47256838)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47256841)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(47256842)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47256842)> CPU DETAIL: Read R 1008: 0000009898989840 
DBG(47256843)> CPU DETAIL: Write 1206: 0000009898989840 
DBG(47256845)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47256846)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47256846)> CPU DETAIL: Read R 1009: 5555558855555555 
DBG(47256847)> CPU DETAIL: Write 1207: 5555558855555555 
DBG(47256849)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47256850)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47256850)> CPU DETAIL: Read R 1010: 6666668866666666 
DBG(47256851)> CPU DETAIL: Write 1208: 6666668866666666 
DBG(47256853)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(47256854)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(47256855)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47256856)> CPU DETAIL: Result: 0001000000000001 
DBG(47256857)> CPU DETAIL: Write 1205: 0001000000000001 
DBG(47256859)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(47256860)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(47256861)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(47256862)> CPU DETAIL: Transfer to T 
DBG(47256864)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47256865)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47256866)> CPU DETAIL: Result: 0060000000000071 
DBG(47256867)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(47256869)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47256870)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(47256871)> CPU DETAIL: Write 0001: 0001000000000001 
DBG(47256873)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47256874)> CPU DETAIL: Read R 1206: 0000009898989840 
DBG(47256875)> CPU DETAIL: Write 0002: 0000009898989840 
DBG(47256877)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47256878)> CPU DETAIL: Read R 1207: 5555558855555555 
DBG(47256879)> CPU DETAIL: Write 0003: 5555558855555555 
DBG(47256881)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47256882)> CPU DETAIL: Read R 1208: 6666668866666666 
DBG(47256883)> CPU DETAIL: Write 0004: 6666668866666666 
DBG(47256885)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47256886)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47256887)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47256889)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47256890)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47256892)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47256893)> CPU DETAIL: Reset condition present 
DBG(47256893)> same as above (3 times)
DBG(47256893)> CPU DETAIL: Transfer to T 
DBG(47256895)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47256896)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47256896)> MT CMD: Tape unit 2: init write
DBG(47256896)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47256896)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47256896)> MT EXP: CRT 0001 to Tape: 0001000000000001 
DBG(47256896)> MT EXP: CRT 0002 to Tape: 0000009898989840 
DBG(47256896)> MT EXP: CRT 0003 to Tape: 5555558855555555 
DBG(47256896)> MT EXP: CRT 0004 to Tape: 6666668866666666 
DBG(47256896)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47256896)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47256896)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.43 inches)
DBG(47256899)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47256900)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47256901)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47256902)> CPU DETAIL: Transfer to T 
DBG(47256904)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47256905)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47256906)> CPU DETAIL: Result: 0060000000000094 
DBG(47256907)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47256909)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47256910)> CPU DETAIL: Condition not present 
DBG(47256912)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47256913)> CPU DETAIL: Transfer to T 
DBG(47256915)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47256916)> CPU DETAIL: Transfer to T 
DBG(47256918)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(47256919)> CPU DETAIL: Transfer to T 
DBG(47256921)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47256922)> CPU DETAIL: Read R 1204: 0000000000000007 
DBG(47256923)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47256924)> CPU DETAIL: Result: 0000000000000010 
DBG(47256925)> CPU DETAIL: Write 1204: 0000000000000010 
DBG(47256927)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47256928)> CPU DETAIL: M4: 0007 
DBG(47256929)> CPU DETAIL: M6: 0010 
DBG(47256930)> CPU DETAIL: M8: 0000 
DBG(47256933)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(47256934)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(47256935)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47256936)> CPU DETAIL: Result: 0000000000000000 
DBG(47256937)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47256939)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(47256940)> CPU DETAIL: Transfer to T 
DBG(47256942)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47256943)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47256944)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47256945)> CPU DETAIL: Transfer to T 
DBG(47256947)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47256948)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(47256949)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47256950)> CPU DETAIL: Result: 0001000000000000 
DBG(47256951)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(47256953)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47256954)> CPU DETAIL: Transfer to T 
DBG(47256956)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47256957)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47256958)> CPU DETAIL: Read S 1204: 0000000000000010 
DBG(47256959)> CPU DETAIL: Result: 0000000000000037 
DBG(47256962)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47256963)> CPU DETAIL: REG1: 0000000000000037
DBG(47256963)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47256965)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47256966)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(47256967)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(47256970)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47256971)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47256972)> CPU DETAIL: Result: 0057000000100000 
DBG(47256973)> CPU DETAIL: Write 0038: 0057000000100000 
DBG(47256975)> CPU CMD: Exec 0038: 00 57 0000 0010 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47256976)> CPU DETAIL: Clear M4
DBG(47256976)> CPU DETAIL: M4: 0000 
DBG(47256977)> CPU DETAIL: Clear M6
DBG(47256977)> CPU DETAIL: M6: 0010 
DBG(47256978)> CPU DETAIL: Clear M8
DBG(47256978)> CPU DETAIL: M8: 0000 
DBG(47256981)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256982)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(47256982)> CPU DETAIL: Read R 1011: 0100000000777777 
DBG(47256983)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47256983)> CPU DETAIL: Write 1212: 0100000000777777 
DBG(47256985)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47256986)> CPU DETAIL: M4: 0000 
DBG(47256987)> CPU DETAIL: M6: 0011 
DBG(47256988)> CPU DETAIL: M8: 0000 
DBG(47256991)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47256992)> CPU DETAIL: M4: 0001 
DBG(47256993)> CPU DETAIL: Transfer to T 
DBG(47256995)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47256996)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(47256996)> CPU DETAIL: Read R 1012: 0000008898989830 
DBG(47256997)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47256997)> CPU DETAIL: Write 1213: 0000008898989830 
DBG(47256999)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257000)> CPU DETAIL: M4: 0001 
DBG(47257001)> CPU DETAIL: M6: 0012 
DBG(47257002)> CPU DETAIL: M8: 0000 
DBG(47257005)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257006)> CPU DETAIL: M4: 0002 
DBG(47257007)> CPU DETAIL: Transfer to T 
DBG(47257009)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257010)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(47257010)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(47257011)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47257011)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47257013)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257014)> CPU DETAIL: M4: 0002 
DBG(47257015)> CPU DETAIL: M6: 0013 
DBG(47257016)> CPU DETAIL: M8: 0000 
DBG(47257019)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257020)> CPU DETAIL: M4: 0003 
DBG(47257021)> CPU DETAIL: Transfer to T 
DBG(47257023)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257024)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(47257024)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(47257025)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47257025)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47257027)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257028)> CPU DETAIL: M4: 0003 
DBG(47257029)> CPU DETAIL: M6: 0014 
DBG(47257030)> CPU DETAIL: M8: 0000 
DBG(47257033)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257034)> CPU DETAIL: M4: 0004 
DBG(47257035)> CPU DETAIL: Transfer to T 
DBG(47257037)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257038)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(47257038)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(47257039)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47257039)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47257041)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257042)> CPU DETAIL: M4: 0004 
DBG(47257043)> CPU DETAIL: M6: 0015 
DBG(47257044)> CPU DETAIL: M8: 0000 
DBG(47257047)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257048)> CPU DETAIL: M4: 0005 
DBG(47257049)> CPU DETAIL: Transfer to T 
DBG(47257051)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257052)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(47257052)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(47257053)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47257053)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47257055)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257056)> CPU DETAIL: M4: 0005 
DBG(47257057)> CPU DETAIL: M6: 0016 
DBG(47257058)> CPU DETAIL: M8: 0000 
DBG(47257061)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257062)> CPU DETAIL: M4: 0006 
DBG(47257063)> CPU DETAIL: Transfer to T 
DBG(47257065)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257066)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(47257066)> CPU DETAIL: Read R 1017: 8888000099660100 
DBG(47257067)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47257067)> CPU DETAIL: Write 1218: 8888000099660100 
DBG(47257069)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257070)> CPU DETAIL: M4: 0006 
DBG(47257071)> CPU DETAIL: M6: 0017 
DBG(47257072)> CPU DETAIL: M8: 0000 
DBG(47257075)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257076)> CPU DETAIL: M4: 0007 
DBG(47257079)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47257080)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(47257081)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47257082)> CPU DETAIL: Result: 0000000000000017 
DBG(47257083)> CPU DETAIL: Write 1204: 0000000000000017 
DBG(47257085)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47257086)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(47257087)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257088)> CPU DETAIL: Result: 0000000000000002 
DBG(47257089)> CPU DETAIL: Write 1211: 0000000000000002 
DBG(47257091)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47257092)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257093)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47257095)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47257096)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257097)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47257099)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47257100)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257101)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47257103)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47257104)> CPU DETAIL: Read R 1212: 0100000000777777 
DBG(47257105)> CPU DETAIL: Write 1206: 0100000000777777 
DBG(47257107)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47257108)> CPU DETAIL: Read R 1213: 0000008898989830 
DBG(47257109)> CPU DETAIL: Write 1207: 0000008898989830 
DBG(47257111)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47257112)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47257113)> CPU DETAIL: Write 1208: 8888000099660100 
DBG(47257115)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47257116)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(47257117)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(47257118)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(47257120)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47257121)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47257122)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47257123)> CPU DETAIL: Transfer to T 
DBG(47257125)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257126)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257127)> CPU DETAIL: Result: 0060000000000052 
DBG(47257128)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47257130)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257131)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(47257132)> CPU DETAIL: Write 0001: 0002000000000000 
DBG(47257134)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257135)> CPU DETAIL: Read R 1206: 0100000000777777 
DBG(47257136)> CPU DETAIL: Write 0002: 0100000000777777 
DBG(47257138)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257139)> CPU DETAIL: Read R 1207: 0000008898989830 
DBG(47257140)> CPU DETAIL: Write 0003: 0000008898989830 
DBG(47257142)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257143)> CPU DETAIL: Read R 1208: 8888000099660100 
DBG(47257144)> CPU DETAIL: Write 0004: 8888000099660100 
DBG(47257146)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257147)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257148)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257150)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47257151)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47257153)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47257154)> CPU DETAIL: Reset condition present 
DBG(47257154)> same as above (3 times)
DBG(47257154)> CPU DETAIL: Transfer to T 
DBG(47257156)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47257157)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47257157)> MT CMD: Tape unit 2: init write
DBG(47257157)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47257157)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47257157)> MT EXP: CRT 0001 to Tape: 0002000000000000 
DBG(47257157)> MT EXP: CRT 0002 to Tape: 0100000000777777 
DBG(47257157)> MT EXP: CRT 0003 to Tape: 0000008898989830 
DBG(47257157)> MT EXP: CRT 0004 to Tape: 8888000099660100 
DBG(47257157)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47257157)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47257157)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (5.14 inches)
DBG(47257160)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47257161)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47257162)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47257163)> CPU DETAIL: Transfer to T 
DBG(47257165)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47257166)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257167)> CPU DETAIL: Result: 0060000000000094 
DBG(47257168)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47257170)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47257171)> CPU DETAIL: Condition not present 
DBG(47257173)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47257174)> CPU DETAIL: Transfer to T 
DBG(47257176)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47257177)> CPU DETAIL: Transfer to T 
DBG(47257179)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47257180)> CPU DETAIL: Transfer to T 
DBG(47257182)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47257183)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47257184)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47257185)> CPU DETAIL: Result: 0000000000000100 
DBG(47257186)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(47257187)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(47257189)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47257190)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257191)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47257194)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(47257195)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47257195)> CPU DETAIL: Read R 1018: 0000009898989910 
DBG(47257196)> CPU DETAIL: Write 1206: 0000009898989910 
DBG(47257198)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47257199)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47257199)> CPU DETAIL: Read R 1019: 2222222222222222 
DBG(47257200)> CPU DETAIL: Write 1207: 2222222222222222 
DBG(47257202)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47257203)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47257203)> CPU DETAIL: Read R 1020: 3333333333333333 
DBG(47257204)> CPU DETAIL: Write 1208: 3333333333333333 
DBG(47257206)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(47257207)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(47257208)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(47257209)> CPU DETAIL: Result: 0002000000000100 
DBG(47257210)> CPU DETAIL: Write 1205: 0002000000000100 
DBG(47257212)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(47257213)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(47257214)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(47257215)> CPU DETAIL: Transfer to T 
DBG(47257217)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257218)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257219)> CPU DETAIL: Result: 0060000000000059 
DBG(47257220)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(47257222)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257223)> CPU DETAIL: Read R 1205: 0002000000000100 
DBG(47257224)> CPU DETAIL: Write 0001: 0002000000000100 
DBG(47257226)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257227)> CPU DETAIL: Read R 1206: 0000009898989910 
DBG(47257228)> CPU DETAIL: Write 0002: 0000009898989910 
DBG(47257230)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257231)> CPU DETAIL: Read R 1207: 2222222222222222 
DBG(47257232)> CPU DETAIL: Write 0003: 2222222222222222 
DBG(47257234)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257235)> CPU DETAIL: Read R 1208: 3333333333333333 
DBG(47257236)> CPU DETAIL: Write 0004: 3333333333333333 
DBG(47257238)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257239)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257240)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257242)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47257243)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47257245)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47257246)> CPU DETAIL: Reset condition present 
DBG(47257246)> same as above (3 times)
DBG(47257246)> CPU DETAIL: Transfer to T 
DBG(47257248)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47257249)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47257249)> MT CMD: Tape unit 2: init write
DBG(47257249)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47257249)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47257249)> MT EXP: CRT 0001 to Tape: 0002000000000100 
DBG(47257249)> MT EXP: CRT 0002 to Tape: 0000009898989910 
DBG(47257249)> MT EXP: CRT 0003 to Tape: 2222222222222222 
DBG(47257249)> MT EXP: CRT 0004 to Tape: 3333333333333333 
DBG(47257249)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47257249)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47257249)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.04% of medium (6.86 inches)
DBG(47257252)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47257253)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47257254)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47257255)> CPU DETAIL: Transfer to T 
DBG(47257257)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47257258)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257259)> CPU DETAIL: Result: 0060000000000094 
DBG(47257260)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47257262)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47257263)> CPU DETAIL: Condition not present 
DBG(47257265)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47257266)> CPU DETAIL: Transfer to T 
DBG(47257268)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47257269)> CPU DETAIL: Transfer to T 
DBG(47257271)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(47257272)> CPU DETAIL: Transfer to T 
DBG(47257274)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47257275)> CPU DETAIL: Read R 1204: 0000000000000017 
DBG(47257276)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47257277)> CPU DETAIL: Result: 0000000000000020 
DBG(47257278)> CPU DETAIL: Write 1204: 0000000000000020 
DBG(47257280)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47257281)> CPU DETAIL: M4: 0007 
DBG(47257282)> CPU DETAIL: M6: 0020 
DBG(47257283)> CPU DETAIL: M8: 0000 
DBG(47257286)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(47257287)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(47257288)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257289)> CPU DETAIL: Result: 0000000000000000 
DBG(47257290)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47257292)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(47257293)> CPU DETAIL: Transfer to T 
DBG(47257295)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47257296)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257297)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47257298)> CPU DETAIL: Transfer to T 
DBG(47257300)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47257301)> CPU DETAIL: Read R 1205: 0002000000000100 
DBG(47257302)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47257303)> CPU DETAIL: Result: 0002000000000000 
DBG(47257304)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(47257306)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47257307)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47257308)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47257309)> CPU DETAIL: Result: 0000000000000000 
DBG(47257310)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47257312)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47257313)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257314)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47257315)> CPU DETAIL: Transfer to T 
DBG(47257317)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47257318)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(47257319)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47257320)> CPU DETAIL: Result: 0002000000000000 
DBG(47257321)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(47257323)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47257324)> CPU DETAIL: Transfer to T 
DBG(47257326)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47257327)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47257328)> CPU DETAIL: Read S 1204: 0000000000000020 
DBG(47257329)> CPU DETAIL: Result: 0000000000000027 
DBG(47257332)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47257333)> CPU DETAIL: REG1: 0000000000000027
DBG(47257333)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47257335)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47257336)> CPU DETAIL: Read R 1204: 0000000000000020 
DBG(47257337)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000200000 
DBG(47257340)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47257341)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47257342)> CPU DETAIL: Result: 0057000000200000 
DBG(47257343)> CPU DETAIL: Write 0038: 0057000000200000 
DBG(47257345)> CPU CMD: Exec 0038: 00 57 0000 0020 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47257346)> CPU DETAIL: Clear M4
DBG(47257346)> CPU DETAIL: M4: 0000 
DBG(47257347)> CPU DETAIL: Clear M6
DBG(47257347)> CPU DETAIL: M6: 0020 
DBG(47257348)> CPU DETAIL: Clear M8
DBG(47257348)> CPU DETAIL: M8: 0000 
DBG(47257351)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257352)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(47257352)> CPU DETAIL: Read R 1021: 0100000000000000 
DBG(47257353)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47257353)> CPU DETAIL: Write 1212: 0100000000000000 
DBG(47257355)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257356)> CPU DETAIL: M4: 0000 
DBG(47257357)> CPU DETAIL: M6: 0021 
DBG(47257358)> CPU DETAIL: M8: 0000 
DBG(47257361)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257362)> CPU DETAIL: M4: 0001 
DBG(47257363)> CPU DETAIL: Transfer to T 
DBG(47257365)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257366)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(47257366)> CPU DETAIL: Read R 1022: 0000009898989810 
DBG(47257367)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47257367)> CPU DETAIL: Write 1213: 0000009898989810 
DBG(47257369)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257370)> CPU DETAIL: M4: 0001 
DBG(47257371)> CPU DETAIL: M6: 0022 
DBG(47257372)> CPU DETAIL: M8: 0000 
DBG(47257375)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257376)> CPU DETAIL: M4: 0002 
DBG(47257377)> CPU DETAIL: Transfer to T 
DBG(47257379)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257380)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(47257380)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(47257381)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47257381)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47257383)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257384)> CPU DETAIL: M4: 0002 
DBG(47257385)> CPU DETAIL: M6: 0023 
DBG(47257386)> CPU DETAIL: M8: 0000 
DBG(47257389)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257390)> CPU DETAIL: M4: 0003 
DBG(47257391)> CPU DETAIL: Transfer to T 
DBG(47257393)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257394)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(47257394)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(47257395)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47257395)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47257397)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257398)> CPU DETAIL: M4: 0003 
DBG(47257399)> CPU DETAIL: M6: 0024 
DBG(47257400)> CPU DETAIL: M8: 0000 
DBG(47257403)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257404)> CPU DETAIL: M4: 0004 
DBG(47257405)> CPU DETAIL: Transfer to T 
DBG(47257407)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257408)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(47257408)> CPU DETAIL: Read R 1025: 0000000000000000 
DBG(47257409)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47257409)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47257411)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257412)> CPU DETAIL: M4: 0004 
DBG(47257413)> CPU DETAIL: M6: 0025 
DBG(47257414)> CPU DETAIL: M8: 0000 
DBG(47257417)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257418)> CPU DETAIL: M4: 0005 
DBG(47257419)> CPU DETAIL: Transfer to T 
DBG(47257421)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257422)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(47257422)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(47257423)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47257423)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47257425)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257426)> CPU DETAIL: M4: 0005 
DBG(47257427)> CPU DETAIL: M6: 0026 
DBG(47257428)> CPU DETAIL: M8: 0000 
DBG(47257431)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257432)> CPU DETAIL: M4: 0006 
DBG(47257433)> CPU DETAIL: Transfer to T 
DBG(47257435)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257436)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(47257436)> CPU DETAIL: Read R 1027: 0000000000000100 
DBG(47257437)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47257437)> CPU DETAIL: Write 1218: 0000000000000100 
DBG(47257439)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257440)> CPU DETAIL: M4: 0006 
DBG(47257441)> CPU DETAIL: M6: 0027 
DBG(47257442)> CPU DETAIL: M8: 0000 
DBG(47257445)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257446)> CPU DETAIL: M4: 0007 
DBG(47257449)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47257450)> CPU DETAIL: Read R 1204: 0000000000000020 
DBG(47257451)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47257452)> CPU DETAIL: Result: 0000000000000027 
DBG(47257453)> CPU DETAIL: Write 1204: 0000000000000027 
DBG(47257455)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47257456)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(47257457)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257458)> CPU DETAIL: Result: 0000000000000003 
DBG(47257459)> CPU DETAIL: Write 1211: 0000000000000003 
DBG(47257461)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47257462)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257463)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47257465)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47257466)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257467)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47257469)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47257470)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257471)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47257473)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47257474)> CPU DETAIL: Read R 1212: 0100000000000000 
DBG(47257475)> CPU DETAIL: Write 1206: 0100000000000000 
DBG(47257477)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47257478)> CPU DETAIL: Read R 1213: 0000009898989810 
DBG(47257479)> CPU DETAIL: Write 1207: 0000009898989810 
DBG(47257481)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47257482)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(47257483)> CPU DETAIL: Write 1208: 0000000000000100 
DBG(47257485)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47257486)> CPU DETAIL: Read R 1211: 0000000000000003 
DBG(47257487)> CPU DETAIL: Word Shift 12 digits left: REG1: 0003000000000000 
DBG(47257488)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(47257490)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47257491)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47257492)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47257493)> CPU DETAIL: Transfer to T 
DBG(47257495)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257496)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257497)> CPU DETAIL: Result: 0060000000000052 
DBG(47257498)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47257500)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257501)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(47257502)> CPU DETAIL: Write 0001: 0003000000000000 
DBG(47257504)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257505)> CPU DETAIL: Read R 1206: 0100000000000000 
DBG(47257506)> CPU DETAIL: Write 0002: 0100000000000000 
DBG(47257508)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257509)> CPU DETAIL: Read R 1207: 0000009898989810 
DBG(47257510)> CPU DETAIL: Write 0003: 0000009898989810 
DBG(47257512)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257513)> CPU DETAIL: Read R 1208: 0000000000000100 
DBG(47257514)> CPU DETAIL: Write 0004: 0000000000000100 
DBG(47257516)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257517)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257518)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257520)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47257521)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47257523)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47257524)> CPU DETAIL: Reset condition present 
DBG(47257524)> same as above (3 times)
DBG(47257524)> CPU DETAIL: Transfer to T 
DBG(47257526)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47257527)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47257527)> MT CMD: Tape unit 2: init write
DBG(47257527)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47257527)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47257527)> MT EXP: CRT 0001 to Tape: 0003000000000000 
DBG(47257527)> MT EXP: CRT 0002 to Tape: 0100000000000000 
DBG(47257527)> MT EXP: CRT 0003 to Tape: 0000009898989810 
DBG(47257527)> MT EXP: CRT 0004 to Tape: 0000000000000100 
DBG(47257527)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47257527)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47257527)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.05% of medium (8.57 inches)
DBG(47257530)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47257531)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47257532)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47257533)> CPU DETAIL: Transfer to T 
DBG(47257535)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47257536)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257537)> CPU DETAIL: Result: 0060000000000094 
DBG(47257538)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47257540)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47257541)> CPU DETAIL: Condition not present 
DBG(47257543)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47257544)> CPU DETAIL: Transfer to T 
DBG(47257546)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47257547)> CPU DETAIL: Transfer to T 
DBG(47257549)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47257550)> CPU DETAIL: Transfer to T 
DBG(47257552)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47257553)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(47257554)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47257555)> CPU DETAIL: Result: 0000000000000100 
DBG(47257556)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(47257557)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(47257559)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47257560)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257561)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47257564)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(47257565)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(47257565)> CPU DETAIL: Read R 1028: 0000003398989830 
DBG(47257566)> CPU DETAIL: Write 1206: 0000003398989830 
DBG(47257568)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47257569)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(47257569)> CPU DETAIL: Read R 1029: 0000000000033555 
DBG(47257570)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(47257572)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47257573)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(47257573)> CPU DETAIL: Read R 1030: 0000000000033666 
DBG(47257574)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(47257576)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(47257577)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(47257578)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(47257579)> CPU DETAIL: Result: 0003000000000100 
DBG(47257580)> CPU DETAIL: Write 1205: 0003000000000100 
DBG(47257582)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(47257583)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(47257584)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(47257585)> CPU DETAIL: Transfer to T 
DBG(47257587)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257588)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257589)> CPU DETAIL: Result: 0060000000000059 
DBG(47257590)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(47257592)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257593)> CPU DETAIL: Read R 1205: 0003000000000100 
DBG(47257594)> CPU DETAIL: Write 0001: 0003000000000100 
DBG(47257596)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257597)> CPU DETAIL: Read R 1206: 0000003398989830 
DBG(47257598)> CPU DETAIL: Write 0002: 0000003398989830 
DBG(47257600)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257601)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(47257602)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(47257604)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257605)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(47257606)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(47257608)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257609)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257610)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257612)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47257613)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47257615)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47257616)> CPU DETAIL: Reset condition present 
DBG(47257616)> same as above (3 times)
DBG(47257616)> CPU DETAIL: Transfer to T 
DBG(47257618)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47257619)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47257619)> MT CMD: Tape unit 2: init write
DBG(47257619)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47257619)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47257619)> MT EXP: CRT 0001 to Tape: 0003000000000100 
DBG(47257619)> MT EXP: CRT 0002 to Tape: 0000003398989830 
DBG(47257619)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(47257619)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(47257619)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47257619)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47257619)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.06% of medium (10.29 inches)
DBG(47257622)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47257623)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47257624)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47257625)> CPU DETAIL: Transfer to T 
DBG(47257627)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47257628)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257629)> CPU DETAIL: Result: 0060000000000094 
DBG(47257630)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47257632)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47257633)> CPU DETAIL: Condition not present 
DBG(47257635)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47257636)> CPU DETAIL: Transfer to T 
DBG(47257638)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47257639)> CPU DETAIL: Transfer to T 
DBG(47257641)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(47257642)> CPU DETAIL: Transfer to T 
DBG(47257644)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47257645)> CPU DETAIL: Read R 1204: 0000000000000027 
DBG(47257646)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47257647)> CPU DETAIL: Result: 0000000000000030 
DBG(47257648)> CPU DETAIL: Write 1204: 0000000000000030 
DBG(47257650)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47257651)> CPU DETAIL: M4: 0007 
DBG(47257652)> CPU DETAIL: M6: 0030 
DBG(47257653)> CPU DETAIL: M8: 0000 
DBG(47257656)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(47257657)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(47257658)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257659)> CPU DETAIL: Result: 0000000000000000 
DBG(47257660)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47257662)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(47257663)> CPU DETAIL: Transfer to T 
DBG(47257665)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47257666)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257667)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47257668)> CPU DETAIL: Transfer to T 
DBG(47257670)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47257671)> CPU DETAIL: Read R 1205: 0003000000000100 
DBG(47257672)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47257673)> CPU DETAIL: Result: 0003000000000000 
DBG(47257674)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(47257676)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47257677)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(47257678)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47257679)> CPU DETAIL: Result: 0000000000000000 
DBG(47257680)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47257682)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47257683)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257684)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47257685)> CPU DETAIL: Transfer to T 
DBG(47257687)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47257688)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(47257689)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47257690)> CPU DETAIL: Result: 0003000000000000 
DBG(47257691)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(47257693)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47257694)> CPU DETAIL: Transfer to T 
DBG(47257696)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47257697)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47257698)> CPU DETAIL: Read S 1204: 0000000000000030 
DBG(47257699)> CPU DETAIL: Result: 0000000000000017 
DBG(47257702)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47257703)> CPU DETAIL: REG1: 0000000000000017
DBG(47257703)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47257705)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47257706)> CPU DETAIL: Read R 1204: 0000000000000030 
DBG(47257707)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000300000 
DBG(47257710)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47257711)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47257712)> CPU DETAIL: Result: 0057000000300000 
DBG(47257713)> CPU DETAIL: Write 0038: 0057000000300000 
DBG(47257715)> CPU CMD: Exec 0038: 00 57 0000 0030 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47257716)> CPU DETAIL: Clear M4
DBG(47257716)> CPU DETAIL: M4: 0000 
DBG(47257717)> CPU DETAIL: Clear M6
DBG(47257717)> CPU DETAIL: M6: 0030 
DBG(47257718)> CPU DETAIL: Clear M8
DBG(47257718)> CPU DETAIL: M8: 0000 
DBG(47257721)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257722)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(47257722)> CPU DETAIL: Read R 1031: 0100000000777777 
DBG(47257723)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47257723)> CPU DETAIL: Write 1212: 0100000000777777 
DBG(47257725)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257726)> CPU DETAIL: M4: 0000 
DBG(47257727)> CPU DETAIL: M6: 0031 
DBG(47257728)> CPU DETAIL: M8: 0000 
DBG(47257731)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257732)> CPU DETAIL: M4: 0001 
DBG(47257733)> CPU DETAIL: Transfer to T 
DBG(47257735)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257736)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(47257736)> CPU DETAIL: Read R 1032: 0000009898989820 
DBG(47257737)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47257737)> CPU DETAIL: Write 1213: 0000009898989820 
DBG(47257739)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257740)> CPU DETAIL: M4: 0001 
DBG(47257741)> CPU DETAIL: M6: 0032 
DBG(47257742)> CPU DETAIL: M8: 0000 
DBG(47257745)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257746)> CPU DETAIL: M4: 0002 
DBG(47257747)> CPU DETAIL: Transfer to T 
DBG(47257749)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257750)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(47257750)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(47257751)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47257751)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47257753)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257754)> CPU DETAIL: M4: 0002 
DBG(47257755)> CPU DETAIL: M6: 0033 
DBG(47257756)> CPU DETAIL: M8: 0000 
DBG(47257759)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257760)> CPU DETAIL: M4: 0003 
DBG(47257761)> CPU DETAIL: Transfer to T 
DBG(47257763)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257764)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(47257764)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(47257765)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47257765)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47257767)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257768)> CPU DETAIL: M4: 0003 
DBG(47257769)> CPU DETAIL: M6: 0034 
DBG(47257770)> CPU DETAIL: M8: 0000 
DBG(47257773)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257774)> CPU DETAIL: M4: 0004 
DBG(47257775)> CPU DETAIL: Transfer to T 
DBG(47257777)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257778)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(47257778)> CPU DETAIL: Read R 1035: 0000000000000000 
DBG(47257779)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47257779)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47257781)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257782)> CPU DETAIL: M4: 0004 
DBG(47257783)> CPU DETAIL: M6: 0035 
DBG(47257784)> CPU DETAIL: M8: 0000 
DBG(47257787)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257788)> CPU DETAIL: M4: 0005 
DBG(47257789)> CPU DETAIL: Transfer to T 
DBG(47257791)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257792)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(47257792)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(47257793)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47257793)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47257795)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257796)> CPU DETAIL: M4: 0005 
DBG(47257797)> CPU DETAIL: M6: 0036 
DBG(47257798)> CPU DETAIL: M8: 0000 
DBG(47257801)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257802)> CPU DETAIL: M4: 0006 
DBG(47257803)> CPU DETAIL: Transfer to T 
DBG(47257805)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47257806)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(47257806)> CPU DETAIL: Read R 1037: 7777777700000001 
DBG(47257807)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47257807)> CPU DETAIL: Write 1218: 7777777700000001 
DBG(47257809)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47257810)> CPU DETAIL: M4: 0006 
DBG(47257811)> CPU DETAIL: M6: 0037 
DBG(47257812)> CPU DETAIL: M8: 0000 
DBG(47257815)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47257816)> CPU DETAIL: M4: 0007 
DBG(47257819)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47257820)> CPU DETAIL: Read R 1204: 0000000000000030 
DBG(47257821)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47257822)> CPU DETAIL: Result: 0000000000000037 
DBG(47257823)> CPU DETAIL: Write 1204: 0000000000000037 
DBG(47257825)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47257826)> CPU DETAIL: Read R 1211: 0000000000000003 
DBG(47257827)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257828)> CPU DETAIL: Result: 0000000000000004 
DBG(47257829)> CPU DETAIL: Write 1211: 0000000000000004 
DBG(47257831)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47257832)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257833)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47257835)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47257836)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257837)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47257839)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47257840)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257841)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47257843)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47257844)> CPU DETAIL: Read R 1212: 0100000000777777 
DBG(47257845)> CPU DETAIL: Write 1206: 0100000000777777 
DBG(47257847)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47257848)> CPU DETAIL: Read R 1213: 0000009898989820 
DBG(47257849)> CPU DETAIL: Write 1207: 0000009898989820 
DBG(47257851)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47257852)> CPU DETAIL: Read R 1218: 7777777700000001 
DBG(47257853)> CPU DETAIL: Write 1208: 7777777700000001 
DBG(47257855)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47257856)> CPU DETAIL: Read R 1211: 0000000000000004 
DBG(47257857)> CPU DETAIL: Word Shift 12 digits left: REG1: 0004000000000000 
DBG(47257858)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(47257860)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47257861)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47257862)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47257863)> CPU DETAIL: Transfer to T 
DBG(47257865)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257866)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257867)> CPU DETAIL: Result: 0060000000000052 
DBG(47257868)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47257870)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257871)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(47257872)> CPU DETAIL: Write 0001: 0004000000000000 
DBG(47257874)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257875)> CPU DETAIL: Read R 1206: 0100000000777777 
DBG(47257876)> CPU DETAIL: Write 0002: 0100000000777777 
DBG(47257878)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257879)> CPU DETAIL: Read R 1207: 0000009898989820 
DBG(47257880)> CPU DETAIL: Write 0003: 0000009898989820 
DBG(47257882)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257883)> CPU DETAIL: Read R 1208: 7777777700000001 
DBG(47257884)> CPU DETAIL: Write 0004: 7777777700000001 
DBG(47257886)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257887)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257888)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257890)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47257891)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47257893)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47257894)> CPU DETAIL: Reset condition present 
DBG(47257894)> same as above (3 times)
DBG(47257894)> CPU DETAIL: Transfer to T 
DBG(47257896)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47257897)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47257897)> MT CMD: Tape unit 2: init write
DBG(47257897)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47257897)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47257897)> MT EXP: CRT 0001 to Tape: 0004000000000000 
DBG(47257897)> MT EXP: CRT 0002 to Tape: 0100000000777777 
DBG(47257897)> MT EXP: CRT 0003 to Tape: 0000009898989820 
DBG(47257897)> MT EXP: CRT 0004 to Tape: 7777777700000001 
DBG(47257897)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47257897)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47257897)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.07% of medium (12.01 inches)
DBG(47257900)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47257901)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47257902)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47257903)> CPU DETAIL: Transfer to T 
DBG(47257905)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47257906)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257907)> CPU DETAIL: Result: 0060000000000094 
DBG(47257908)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47257910)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47257911)> CPU DETAIL: Condition not present 
DBG(47257913)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47257914)> CPU DETAIL: Transfer to T 
DBG(47257916)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47257917)> CPU DETAIL: Transfer to T 
DBG(47257919)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47257920)> CPU DETAIL: Transfer to T 
DBG(47257922)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47257923)> CPU DETAIL: Read R 1218: 7777777700000001 
DBG(47257924)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47257925)> CPU DETAIL: Result: 0000000000000000 
DBG(47257926)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(47257927)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47257929)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47257930)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257931)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47257932)> CPU DETAIL: Transfer to T 
DBG(47257934)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47257935)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(47257936)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47257937)> CPU DETAIL: Result: 0004000000000000 
DBG(47257938)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(47257940)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47257941)> CPU DETAIL: Read R 1218: 7777777700000001 
DBG(47257942)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47257943)> CPU DETAIL: Result: 0000000000000001 
DBG(47257944)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(47257946)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47257947)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47257948)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47257951)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(47257952)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(47257952)> CPU DETAIL: Read R 1038: 0000009898989830 
DBG(47257953)> CPU DETAIL: Write 1206: 0000009898989830 
DBG(47257955)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47257956)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(47257956)> CPU DETAIL: Read R 1039: 5555505050505050 
DBG(47257957)> CPU DETAIL: Write 1207: 5555505050505050 
DBG(47257959)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47257960)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(47257960)> CPU DETAIL: Read R 1040: 6666606060606060 
DBG(47257961)> CPU DETAIL: Write 1208: 6666606060606060 
DBG(47257963)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(47257964)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(47257965)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47257966)> CPU DETAIL: Result: 0004000000000001 
DBG(47257967)> CPU DETAIL: Write 1205: 0004000000000001 
DBG(47257969)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(47257970)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(47257971)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(47257972)> CPU DETAIL: Transfer to T 
DBG(47257974)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47257975)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47257976)> CPU DETAIL: Result: 0060000000000071 
DBG(47257977)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(47257979)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47257980)> CPU DETAIL: Read R 1205: 0004000000000001 
DBG(47257981)> CPU DETAIL: Write 0001: 0004000000000001 
DBG(47257983)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47257984)> CPU DETAIL: Read R 1206: 0000009898989830 
DBG(47257985)> CPU DETAIL: Write 0002: 0000009898989830 
DBG(47257987)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47257988)> CPU DETAIL: Read R 1207: 5555505050505050 
DBG(47257989)> CPU DETAIL: Write 0003: 5555505050505050 
DBG(47257991)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47257992)> CPU DETAIL: Read R 1208: 6666606060606060 
DBG(47257993)> CPU DETAIL: Write 0004: 6666606060606060 
DBG(47257995)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47257996)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47257997)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47257999)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47258000)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47258002)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47258003)> CPU DETAIL: Reset condition present 
DBG(47258003)> same as above (3 times)
DBG(47258003)> CPU DETAIL: Transfer to T 
DBG(47258005)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47258006)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47258006)> MT CMD: Tape unit 2: init write
DBG(47258006)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47258006)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47258006)> MT EXP: CRT 0001 to Tape: 0004000000000001 
DBG(47258006)> MT EXP: CRT 0002 to Tape: 0000009898989830 
DBG(47258006)> MT EXP: CRT 0003 to Tape: 5555505050505050 
DBG(47258006)> MT EXP: CRT 0004 to Tape: 6666606060606060 
DBG(47258006)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47258006)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47258006)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.08% of medium (13.72 inches)
DBG(47258009)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47258010)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47258011)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47258012)> CPU DETAIL: Transfer to T 
DBG(47258014)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47258015)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258016)> CPU DETAIL: Result: 0060000000000094 
DBG(47258017)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47258019)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47258020)> CPU DETAIL: Condition not present 
DBG(47258022)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47258023)> CPU DETAIL: Transfer to T 
DBG(47258025)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47258026)> CPU DETAIL: Transfer to T 
DBG(47258028)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(47258029)> CPU DETAIL: Transfer to T 
DBG(47258031)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47258032)> CPU DETAIL: Read R 1204: 0000000000000037 
DBG(47258033)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47258034)> CPU DETAIL: Result: 0000000000000040 
DBG(47258035)> CPU DETAIL: Write 1204: 0000000000000040 
DBG(47258037)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47258038)> CPU DETAIL: M4: 0007 
DBG(47258039)> CPU DETAIL: M6: 0040 
DBG(47258040)> CPU DETAIL: M8: 0000 
DBG(47258043)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(47258044)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(47258045)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258046)> CPU DETAIL: Result: 0000000000000000 
DBG(47258047)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47258049)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(47258050)> CPU DETAIL: Transfer to T 
DBG(47258052)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47258053)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258054)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47258055)> CPU DETAIL: Transfer to T 
DBG(47258057)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47258058)> CPU DETAIL: Read R 1205: 0004000000000001 
DBG(47258059)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47258060)> CPU DETAIL: Result: 0004000000000000 
DBG(47258061)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(47258063)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47258064)> CPU DETAIL: Transfer to T 
DBG(47258066)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47258067)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47258068)> CPU DETAIL: Read S 1204: 0000000000000040 
DBG(47258069)> CPU DETAIL: Result: 0000000000000007 
DBG(47258072)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47258073)> CPU DETAIL: REG1: 0000000000000007
DBG(47258073)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47258075)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47258076)> CPU DETAIL: Read R 1204: 0000000000000040 
DBG(47258077)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000400000 
DBG(47258080)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47258081)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47258082)> CPU DETAIL: Result: 0057000000400000 
DBG(47258083)> CPU DETAIL: Write 0038: 0057000000400000 
DBG(47258085)> CPU CMD: Exec 0038: 00 57 0000 0040 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47258086)> CPU DETAIL: Clear M4
DBG(47258086)> CPU DETAIL: M4: 0000 
DBG(47258087)> CPU DETAIL: Clear M6
DBG(47258087)> CPU DETAIL: M6: 0040 
DBG(47258088)> CPU DETAIL: Clear M8
DBG(47258088)> CPU DETAIL: M8: 0000 
DBG(47258091)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258092)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(47258092)> CPU DETAIL: Read R 1041: 0070000000000000 
DBG(47258093)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47258093)> CPU DETAIL: Write 1212: 0070000000000000 
DBG(47258095)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258096)> CPU DETAIL: M4: 0000 
DBG(47258097)> CPU DETAIL: M6: 0041 
DBG(47258098)> CPU DETAIL: M8: 0000 
DBG(47258101)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258102)> CPU DETAIL: M4: 0001 
DBG(47258103)> CPU DETAIL: Transfer to T 
DBG(47258105)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258106)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(47258106)> CPU DETAIL: Read R 1042: 0000009898989830 
DBG(47258107)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47258107)> CPU DETAIL: Write 1213: 0000009898989830 
DBG(47258109)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258110)> CPU DETAIL: M4: 0001 
DBG(47258111)> CPU DETAIL: M6: 0042 
DBG(47258112)> CPU DETAIL: M8: 0000 
DBG(47258115)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258116)> CPU DETAIL: M4: 0002 
DBG(47258117)> CPU DETAIL: Transfer to T 
DBG(47258119)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258120)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(47258120)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(47258121)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47258121)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47258123)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258124)> CPU DETAIL: M4: 0002 
DBG(47258125)> CPU DETAIL: M6: 0043 
DBG(47258126)> CPU DETAIL: M8: 0000 
DBG(47258129)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258130)> CPU DETAIL: M4: 0003 
DBG(47258131)> CPU DETAIL: Transfer to T 
DBG(47258133)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258134)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(47258134)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(47258135)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47258135)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47258137)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258138)> CPU DETAIL: M4: 0003 
DBG(47258139)> CPU DETAIL: M6: 0044 
DBG(47258140)> CPU DETAIL: M8: 0000 
DBG(47258143)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258144)> CPU DETAIL: M4: 0004 
DBG(47258145)> CPU DETAIL: Transfer to T 
DBG(47258147)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258148)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(47258148)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(47258149)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47258149)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47258151)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258152)> CPU DETAIL: M4: 0004 
DBG(47258153)> CPU DETAIL: M6: 0045 
DBG(47258154)> CPU DETAIL: M8: 0000 
DBG(47258157)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258158)> CPU DETAIL: M4: 0005 
DBG(47258159)> CPU DETAIL: Transfer to T 
DBG(47258161)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258162)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(47258162)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(47258163)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47258163)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47258165)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258166)> CPU DETAIL: M4: 0005 
DBG(47258167)> CPU DETAIL: M6: 0046 
DBG(47258168)> CPU DETAIL: M8: 0000 
DBG(47258171)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258172)> CPU DETAIL: M4: 0006 
DBG(47258173)> CPU DETAIL: Transfer to T 
DBG(47258175)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258176)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(47258176)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(47258177)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47258177)> CPU DETAIL: Write 1218: 0000000000000000 
DBG(47258179)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258180)> CPU DETAIL: M4: 0006 
DBG(47258181)> CPU DETAIL: M6: 0047 
DBG(47258182)> CPU DETAIL: M8: 0000 
DBG(47258185)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258186)> CPU DETAIL: M4: 0007 
DBG(47258189)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47258190)> CPU DETAIL: Read R 1204: 0000000000000040 
DBG(47258191)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47258192)> CPU DETAIL: Result: 0000000000000047 
DBG(47258193)> CPU DETAIL: Write 1204: 0000000000000047 
DBG(47258195)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47258196)> CPU DETAIL: Read R 1211: 0000000000000004 
DBG(47258197)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258198)> CPU DETAIL: Result: 0000000000000005 
DBG(47258199)> CPU DETAIL: Write 1211: 0000000000000005 
DBG(47258201)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47258202)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258203)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47258205)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47258206)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258207)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47258209)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47258210)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258211)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47258213)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47258214)> CPU DETAIL: Read R 1212: 0070000000000000 
DBG(47258215)> CPU DETAIL: Write 1206: 0070000000000000 
DBG(47258217)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47258218)> CPU DETAIL: Read R 1213: 0000009898989830 
DBG(47258219)> CPU DETAIL: Write 1207: 0000009898989830 
DBG(47258221)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47258222)> CPU DETAIL: Read R 1218: 0000000000000000 
DBG(47258223)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47258225)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47258226)> CPU DETAIL: Read R 1211: 0000000000000005 
DBG(47258227)> CPU DETAIL: Word Shift 12 digits left: REG1: 0005000000000000 
DBG(47258228)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(47258230)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47258231)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47258232)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47258233)> CPU DETAIL: Transfer to T 
DBG(47258235)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47258236)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258237)> CPU DETAIL: Result: 0060000000000052 
DBG(47258238)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47258240)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47258241)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(47258242)> CPU DETAIL: Write 0001: 0005000000000000 
DBG(47258244)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47258245)> CPU DETAIL: Read R 1206: 0070000000000000 
DBG(47258246)> CPU DETAIL: Write 0002: 0070000000000000 
DBG(47258248)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47258249)> CPU DETAIL: Read R 1207: 0000009898989830 
DBG(47258250)> CPU DETAIL: Write 0003: 0000009898989830 
DBG(47258252)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47258253)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(47258254)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(47258256)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47258257)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258258)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47258260)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47258261)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47258263)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47258264)> CPU DETAIL: Reset condition present 
DBG(47258264)> same as above (3 times)
DBG(47258264)> CPU DETAIL: Transfer to T 
DBG(47258266)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47258267)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47258267)> MT CMD: Tape unit 2: init write
DBG(47258267)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47258267)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47258267)> MT EXP: CRT 0001 to Tape: 0005000000000000 
DBG(47258267)> MT EXP: CRT 0002 to Tape: 0070000000000000 
DBG(47258267)> MT EXP: CRT 0003 to Tape: 0000009898989830 
DBG(47258267)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(47258267)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47258267)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47258267)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.09% of medium (15.44 inches)
DBG(47258270)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47258271)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47258272)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47258273)> CPU DETAIL: Transfer to T 
DBG(47258275)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47258276)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258277)> CPU DETAIL: Result: 0060000000000094 
DBG(47258278)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47258280)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47258281)> CPU DETAIL: Condition not present 
DBG(47258283)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47258284)> CPU DETAIL: Transfer to T 
DBG(47258286)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47258287)> CPU DETAIL: Transfer to T 
DBG(47258289)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47258290)> CPU DETAIL: Transfer to T 
DBG(47258292)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47258293)> CPU DETAIL: Read R 1218: 0000000000000000 
DBG(47258294)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47258295)> CPU DETAIL: Result: 0000000000000000 
DBG(47258296)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(47258297)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47258299)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47258300)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258301)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47258302)> CPU DETAIL: Transfer to T 
DBG(47258304)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47258305)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(47258306)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47258307)> CPU DETAIL: Result: 0005000000000000 
DBG(47258308)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(47258310)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47258311)> CPU DETAIL: Read R 1218: 0000000000000000 
DBG(47258312)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47258313)> CPU DETAIL: Result: 0000000000000000 
DBG(47258314)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47258316)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47258317)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258318)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47258319)> CPU DETAIL: Transfer to T 
DBG(47258321)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47258322)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(47258323)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47258324)> CPU DETAIL: Result: 0005000000000000 
DBG(47258325)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(47258327)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47258328)> CPU DETAIL: Transfer to T 
DBG(47258330)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47258331)> CPU DETAIL: Read R 1203: 0000000000000047 
DBG(47258332)> CPU DETAIL: Read S 1204: 0000000000000047 
DBG(47258333)> CPU DETAIL: Result: 0000000000000000 
DBG(47258336)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47258337)> CPU DETAIL: REG1: 0000000000000000
DBG(47258337)> CPU DETAIL: Transfer to S (REG1=0)
DBG(47258339)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(47258340)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(47258340)> MT DATA: Tape unit 1: init read
DBG(47258340)> MT DETAIL: Read tape record (398 chars, used 2.28 inches, needs 13 msec) from tape 1
DBG(47258340)> MT DETAIL: Tape record contents: D*0191134813670002C*0100000000000000C*0000009998989950C*00000000000000...
DBG(47258340)> MT EXP: Start Of Block Word: 0191134813670002
DBG(47258340)> MT EXP: Read Tape Block number 0002
DBG(47258340)> MT EXP: Read forward addr 1001 to 0000
DBG(47258340)> MT EXP: Tape to CRT 1001: 0100000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1002: 0000009998989950 
DBG(47258340)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1005: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1006: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1007: 0000000000000001 
DBG(47258340)> MT EXP: Tape to CRT 1008: 0000009898989920 
DBG(47258340)> MT EXP: Tape to CRT 1009: 5555555555555555 
DBG(47258340)> MT EXP: Tape to CRT 1010: 6666666666666666 
DBG(47258340)> MT EXP: Tape to CRT 1011: 0100000000777777 
DBG(47258340)> MT EXP: Tape to CRT 1012: 0000009998989960 
DBG(47258340)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(47258340)> MT EXP: Tape to CRT 1017: 8888000099660100 
DBG(47258340)> MT EXP: Tape to CRT 1018: 0000009898989910 
DBG(47258340)> MT EXP: Tape to CRT 1019: 2222222222222222 
DBG(47258340)> MT EXP: Tape to CRT 1020: 3333333333333333 
DBG(47258340)> MT EXP: End Of Block Word: 0191134813670002, data words in block: 20
DBG(47258340)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (7.12 inches)
DBG(47258343)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(47258344)> CPU DETAIL: Condition not present 
DBG(47258346)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(47258347)> CPU DETAIL: Condition not present 
DBG(47258349)> CPU CMD: Exec 0023: 00 60 0000 1219 0000               TR                   TEMP1                   Temp1=start of bloc 
DBG(47258350)> CPU DETAIL: Write 1219: 0191134813670002 
DBG(47258352)> CPU CMD: Exec 0024: 04 42 0000 1228 1220            04 MASK                 FIELD-S     TEMP2       Temp2=bbbb=02 90 aa 
DBG(47258353)> CPU DETAIL: Read S 1228: 0000000011110000 
DBG(47258354)> CPU DETAIL: Result: 0000000013670000 
DBG(47258355)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001367 
DBG(47258356)> CPU DETAIL: Write 1220: 0000000000001367 
DBG(47258358)> CPU CMD: Exec 0025: 08 42 1219 1227 0000            08 MASK     TEMP1       FIELD-R                 REG1=02 90 aaaa bbb 
DBG(47258359)> CPU DETAIL: Read R 1219: 0191134813670002 
DBG(47258360)> CPU DETAIL: Read S 1227: 0000111100000000 
DBG(47258361)> CPU DETAIL: Result: 0000134800000000 
DBG(47258362)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001348 
DBG(47258365)> CPU CMD: Exec 0026: 00 41 1220 0000 0000               SUB      TEMP2                
DBG(47258366)> CPU DETAIL: Read R 1220: 0000000000001367 
DBG(47258367)> CPU DETAIL: Result: 0000000000000019 
DBG(47258370)> CPU CMD: Exec 0027: 00 40 0000 1222 1203               ADD                  ONE         BL-INBUF    BL-INBUF=Block Len  
DBG(47258371)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258372)> CPU DETAIL: Result: 0000000000000020 
DBG(47258373)> CPU DETAIL: Write 1203: 0000000000000020 
DBG(47258375)> CPU CMD: Exec 0028: 00 41 1226 0000 0000               SUB      N200                                check Block Len fro 
DBG(47258376)> CPU DETAIL: Read R 1226: 0000000000000200 
DBG(47258377)> CPU DETAIL: Result: 0000000000000180 
DBG(47258380)> CPU CMD: Exec 0029: 00 63 0031 0031 0000               TR SGN   LSPL3       LSPL3                   transfer if 200 or  
DBG(47258381)> CPU DETAIL: REG1: 0000000000000180
DBG(47258381)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47258383)> CPU CMD: Exec 0031: 00 60 1221 1204 0000   LSPL3       TR       ZERO        NW-INBUF                NW-INBUF=Number of  
DBG(47258384)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258385)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(47258387)> CPU CMD: Exec 0032: 00 60 0000 0000 0033               TR                               RR-INBUF    goto process first  
DBG(47258388)> CPU DETAIL: Transfer to T 
DBG(47258390)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47258391)> CPU DETAIL: Read R 1203: 0000000000000020 
DBG(47258392)> CPU DETAIL: Read S 1204: 0000000000000000 
DBG(47258393)> CPU DETAIL: Result: 0000000000000020 
DBG(47258396)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47258397)> CPU DETAIL: REG1: 0000000000000020
DBG(47258397)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47258399)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47258400)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(47258401)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(47258404)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47258405)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47258406)> CPU DETAIL: Result: 0057000000000000 
DBG(47258407)> CPU DETAIL: Write 0038: 0057000000000000 
DBG(47258409)> CPU CMD: Exec 0038: 00 57 0000 0000 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47258410)> CPU DETAIL: Clear M4
DBG(47258410)> CPU DETAIL: M4: 0000 
DBG(47258411)> CPU DETAIL: Clear M6
DBG(47258411)> CPU DETAIL: M6: 0000 
DBG(47258412)> CPU DETAIL: Clear M8
DBG(47258412)> CPU DETAIL: M8: 0000 
DBG(47258415)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258416)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(47258416)> CPU DETAIL: Read R 1001: 0100000000000000 
DBG(47258417)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47258417)> CPU DETAIL: Write 1212: 0100000000000000 
DBG(47258419)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258420)> CPU DETAIL: M4: 0000 
DBG(47258421)> CPU DETAIL: M6: 0001 
DBG(47258422)> CPU DETAIL: M8: 0000 
DBG(47258425)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258426)> CPU DETAIL: M4: 0001 
DBG(47258427)> CPU DETAIL: Transfer to T 
DBG(47258429)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258430)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(47258430)> CPU DETAIL: Read R 1002: 0000009998989950 
DBG(47258431)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47258431)> CPU DETAIL: Write 1213: 0000009998989950 
DBG(47258433)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258434)> CPU DETAIL: M4: 0001 
DBG(47258435)> CPU DETAIL: M6: 0002 
DBG(47258436)> CPU DETAIL: M8: 0000 
DBG(47258439)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258440)> CPU DETAIL: M4: 0002 
DBG(47258441)> CPU DETAIL: Transfer to T 
DBG(47258443)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258444)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(47258444)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(47258445)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47258445)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47258447)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258448)> CPU DETAIL: M4: 0002 
DBG(47258449)> CPU DETAIL: M6: 0003 
DBG(47258450)> CPU DETAIL: M8: 0000 
DBG(47258453)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258454)> CPU DETAIL: M4: 0003 
DBG(47258455)> CPU DETAIL: Transfer to T 
DBG(47258457)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258458)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(47258458)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(47258459)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47258459)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47258461)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258462)> CPU DETAIL: M4: 0003 
DBG(47258463)> CPU DETAIL: M6: 0004 
DBG(47258464)> CPU DETAIL: M8: 0000 
DBG(47258467)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258468)> CPU DETAIL: M4: 0004 
DBG(47258469)> CPU DETAIL: Transfer to T 
DBG(47258471)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258472)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(47258472)> CPU DETAIL: Read R 1005: 0000000000000000 
DBG(47258473)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47258473)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47258475)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258476)> CPU DETAIL: M4: 0004 
DBG(47258477)> CPU DETAIL: M6: 0005 
DBG(47258478)> CPU DETAIL: M8: 0000 
DBG(47258481)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258482)> CPU DETAIL: M4: 0005 
DBG(47258483)> CPU DETAIL: Transfer to T 
DBG(47258485)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258486)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(47258486)> CPU DETAIL: Read R 1006: 0000000000000000 
DBG(47258487)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47258487)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47258489)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258490)> CPU DETAIL: M4: 0005 
DBG(47258491)> CPU DETAIL: M6: 0006 
DBG(47258492)> CPU DETAIL: M8: 0000 
DBG(47258495)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258496)> CPU DETAIL: M4: 0006 
DBG(47258497)> CPU DETAIL: Transfer to T 
DBG(47258499)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258500)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(47258500)> CPU DETAIL: Read R 1007: 0000000000000001 
DBG(47258501)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47258501)> CPU DETAIL: Write 1218: 0000000000000001 
DBG(47258503)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258504)> CPU DETAIL: M4: 0006 
DBG(47258505)> CPU DETAIL: M6: 0007 
DBG(47258506)> CPU DETAIL: M8: 0000 
DBG(47258509)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258510)> CPU DETAIL: M4: 0007 
DBG(47258513)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47258514)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(47258515)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47258516)> CPU DETAIL: Result: 0000000000000007 
DBG(47258517)> CPU DETAIL: Write 1204: 0000000000000007 
DBG(47258519)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47258520)> CPU DETAIL: Read R 1211: 0000000000000005 
DBG(47258521)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258522)> CPU DETAIL: Result: 0000000000000006 
DBG(47258523)> CPU DETAIL: Write 1211: 0000000000000006 
DBG(47258525)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47258526)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258527)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47258529)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47258530)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258531)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47258533)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47258534)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258535)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47258537)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47258538)> CPU DETAIL: Read R 1212: 0100000000000000 
DBG(47258539)> CPU DETAIL: Write 1206: 0100000000000000 
DBG(47258541)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47258542)> CPU DETAIL: Read R 1213: 0000009998989950 
DBG(47258543)> CPU DETAIL: Write 1207: 0000009998989950 
DBG(47258545)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47258546)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47258547)> CPU DETAIL: Write 1208: 0000000000000001 
DBG(47258549)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47258550)> CPU DETAIL: Read R 1211: 0000000000000006 
DBG(47258551)> CPU DETAIL: Word Shift 12 digits left: REG1: 0006000000000000 
DBG(47258552)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(47258554)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47258555)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47258556)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47258557)> CPU DETAIL: Transfer to T 
DBG(47258559)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47258560)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258561)> CPU DETAIL: Result: 0060000000000052 
DBG(47258562)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47258564)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47258565)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(47258566)> CPU DETAIL: Write 0001: 0006000000000000 
DBG(47258568)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47258569)> CPU DETAIL: Read R 1206: 0100000000000000 
DBG(47258570)> CPU DETAIL: Write 0002: 0100000000000000 
DBG(47258572)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47258573)> CPU DETAIL: Read R 1207: 0000009998989950 
DBG(47258574)> CPU DETAIL: Write 0003: 0000009998989950 
DBG(47258576)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47258577)> CPU DETAIL: Read R 1208: 0000000000000001 
DBG(47258578)> CPU DETAIL: Write 0004: 0000000000000001 
DBG(47258580)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47258581)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258582)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47258584)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47258585)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47258587)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47258588)> CPU DETAIL: Reset condition present 
DBG(47258588)> same as above (3 times)
DBG(47258588)> CPU DETAIL: Transfer to T 
DBG(47258590)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47258591)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47258591)> MT CMD: Tape unit 2: init write
DBG(47258591)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47258591)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47258591)> MT EXP: CRT 0001 to Tape: 0006000000000000 
DBG(47258591)> MT EXP: CRT 0002 to Tape: 0100000000000000 
DBG(47258591)> MT EXP: CRT 0003 to Tape: 0000009998989950 
DBG(47258591)> MT EXP: CRT 0004 to Tape: 0000000000000001 
DBG(47258591)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47258591)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47258591)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.10% of medium (17.15 inches)
DBG(47258594)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47258595)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47258596)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47258597)> CPU DETAIL: Transfer to T 
DBG(47258599)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47258600)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258601)> CPU DETAIL: Result: 0060000000000094 
DBG(47258602)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47258604)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47258605)> CPU DETAIL: Condition not present 
DBG(47258607)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47258608)> CPU DETAIL: Transfer to T 
DBG(47258610)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47258611)> CPU DETAIL: Transfer to T 
DBG(47258613)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47258614)> CPU DETAIL: Transfer to T 
DBG(47258616)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47258617)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47258618)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47258619)> CPU DETAIL: Result: 0000000000000000 
DBG(47258620)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(47258621)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47258623)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47258624)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258625)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47258626)> CPU DETAIL: Transfer to T 
DBG(47258628)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47258629)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(47258630)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47258631)> CPU DETAIL: Result: 0006000000000000 
DBG(47258632)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(47258634)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47258635)> CPU DETAIL: Read R 1218: 0000000000000001 
DBG(47258636)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47258637)> CPU DETAIL: Result: 0000000000000001 
DBG(47258638)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(47258640)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47258641)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258642)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47258645)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(47258646)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47258646)> CPU DETAIL: Read R 1008: 0000009898989920 
DBG(47258647)> CPU DETAIL: Write 1206: 0000009898989920 
DBG(47258649)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47258650)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47258650)> CPU DETAIL: Read R 1009: 5555555555555555 
DBG(47258651)> CPU DETAIL: Write 1207: 5555555555555555 
DBG(47258653)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47258654)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(47258654)> CPU DETAIL: Read R 1010: 6666666666666666 
DBG(47258655)> CPU DETAIL: Write 1208: 6666666666666666 
DBG(47258657)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(47258658)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(47258659)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258660)> CPU DETAIL: Result: 0006000000000001 
DBG(47258661)> CPU DETAIL: Write 1205: 0006000000000001 
DBG(47258663)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(47258664)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(47258665)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(47258666)> CPU DETAIL: Transfer to T 
DBG(47258668)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47258669)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258670)> CPU DETAIL: Result: 0060000000000071 
DBG(47258671)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(47258673)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47258674)> CPU DETAIL: Read R 1205: 0006000000000001 
DBG(47258675)> CPU DETAIL: Write 0001: 0006000000000001 
DBG(47258677)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47258678)> CPU DETAIL: Read R 1206: 0000009898989920 
DBG(47258679)> CPU DETAIL: Write 0002: 0000009898989920 
DBG(47258681)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47258682)> CPU DETAIL: Read R 1207: 5555555555555555 
DBG(47258683)> CPU DETAIL: Write 0003: 5555555555555555 
DBG(47258685)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47258686)> CPU DETAIL: Read R 1208: 6666666666666666 
DBG(47258687)> CPU DETAIL: Write 0004: 6666666666666666 
DBG(47258689)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47258690)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258691)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47258693)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47258694)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47258696)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47258697)> CPU DETAIL: Reset condition present 
DBG(47258697)> same as above (3 times)
DBG(47258697)> CPU DETAIL: Transfer to T 
DBG(47258699)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47258700)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47258700)> MT CMD: Tape unit 2: init write
DBG(47258700)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47258700)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47258700)> MT EXP: CRT 0001 to Tape: 0006000000000001 
DBG(47258700)> MT EXP: CRT 0002 to Tape: 0000009898989920 
DBG(47258700)> MT EXP: CRT 0003 to Tape: 5555555555555555 
DBG(47258700)> MT EXP: CRT 0004 to Tape: 6666666666666666 
DBG(47258700)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47258700)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47258700)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.11% of medium (18.86 inches)
DBG(47258703)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47258704)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47258705)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47258706)> CPU DETAIL: Transfer to T 
DBG(47258708)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47258709)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258710)> CPU DETAIL: Result: 0060000000000094 
DBG(47258711)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47258713)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47258714)> CPU DETAIL: Condition not present 
DBG(47258716)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47258717)> CPU DETAIL: Transfer to T 
DBG(47258719)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47258720)> CPU DETAIL: Transfer to T 
DBG(47258722)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(47258723)> CPU DETAIL: Transfer to T 
DBG(47258725)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47258726)> CPU DETAIL: Read R 1204: 0000000000000007 
DBG(47258727)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47258728)> CPU DETAIL: Result: 0000000000000010 
DBG(47258729)> CPU DETAIL: Write 1204: 0000000000000010 
DBG(47258731)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47258732)> CPU DETAIL: M4: 0007 
DBG(47258733)> CPU DETAIL: M6: 0010 
DBG(47258734)> CPU DETAIL: M8: 0000 
DBG(47258737)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(47258738)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(47258739)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258740)> CPU DETAIL: Result: 0000000000000000 
DBG(47258741)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47258743)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(47258744)> CPU DETAIL: Transfer to T 
DBG(47258746)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47258747)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258748)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47258749)> CPU DETAIL: Transfer to T 
DBG(47258751)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47258752)> CPU DETAIL: Read R 1205: 0006000000000001 
DBG(47258753)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47258754)> CPU DETAIL: Result: 0006000000000000 
DBG(47258755)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(47258757)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47258758)> CPU DETAIL: Transfer to T 
DBG(47258760)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47258761)> CPU DETAIL: Read R 1203: 0000000000000020 
DBG(47258762)> CPU DETAIL: Read S 1204: 0000000000000010 
DBG(47258763)> CPU DETAIL: Result: 0000000000000010 
DBG(47258766)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47258767)> CPU DETAIL: REG1: 0000000000000010
DBG(47258767)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(47258769)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(47258770)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(47258771)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(47258774)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(47258775)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(47258776)> CPU DETAIL: Result: 0057000000100000 
DBG(47258777)> CPU DETAIL: Write 0038: 0057000000100000 
DBG(47258779)> CPU CMD: Exec 0038: 00 57 0000 0010 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(47258780)> CPU DETAIL: Clear M4
DBG(47258780)> CPU DETAIL: M4: 0000 
DBG(47258781)> CPU DETAIL: Clear M6
DBG(47258781)> CPU DETAIL: M6: 0010 
DBG(47258782)> CPU DETAIL: Clear M8
DBG(47258782)> CPU DETAIL: M8: 0000 
DBG(47258785)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258786)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(47258786)> CPU DETAIL: Read R 1011: 0100000000777777 
DBG(47258787)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(47258787)> CPU DETAIL: Write 1212: 0100000000777777 
DBG(47258789)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258790)> CPU DETAIL: M4: 0000 
DBG(47258791)> CPU DETAIL: M6: 0011 
DBG(47258792)> CPU DETAIL: M8: 0000 
DBG(47258795)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258796)> CPU DETAIL: M4: 0001 
DBG(47258797)> CPU DETAIL: Transfer to T 
DBG(47258799)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258800)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(47258800)> CPU DETAIL: Read R 1012: 0000009998989960 
DBG(47258801)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(47258801)> CPU DETAIL: Write 1213: 0000009998989960 
DBG(47258803)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258804)> CPU DETAIL: M4: 0001 
DBG(47258805)> CPU DETAIL: M6: 0012 
DBG(47258806)> CPU DETAIL: M8: 0000 
DBG(47258809)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258810)> CPU DETAIL: M4: 0002 
DBG(47258811)> CPU DETAIL: Transfer to T 
DBG(47258813)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258814)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(47258814)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(47258815)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(47258815)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(47258817)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258818)> CPU DETAIL: M4: 0002 
DBG(47258819)> CPU DETAIL: M6: 0013 
DBG(47258820)> CPU DETAIL: M8: 0000 
DBG(47258823)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258824)> CPU DETAIL: M4: 0003 
DBG(47258825)> CPU DETAIL: Transfer to T 
DBG(47258827)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258828)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(47258828)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(47258829)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(47258829)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(47258831)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258832)> CPU DETAIL: M4: 0003 
DBG(47258833)> CPU DETAIL: M6: 0014 
DBG(47258834)> CPU DETAIL: M8: 0000 
DBG(47258837)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258838)> CPU DETAIL: M4: 0004 
DBG(47258839)> CPU DETAIL: Transfer to T 
DBG(47258841)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258842)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(47258842)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(47258843)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(47258843)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(47258845)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258846)> CPU DETAIL: M4: 0004 
DBG(47258847)> CPU DETAIL: M6: 0015 
DBG(47258848)> CPU DETAIL: M8: 0000 
DBG(47258851)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258852)> CPU DETAIL: M4: 0005 
DBG(47258853)> CPU DETAIL: Transfer to T 
DBG(47258855)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258856)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(47258856)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(47258857)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(47258857)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(47258859)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258860)> CPU DETAIL: M4: 0005 
DBG(47258861)> CPU DETAIL: M6: 0016 
DBG(47258862)> CPU DETAIL: M8: 0000 
DBG(47258865)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258866)> CPU DETAIL: M4: 0006 
DBG(47258867)> CPU DETAIL: Transfer to T 
DBG(47258869)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(47258870)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(47258870)> CPU DETAIL: Read R 1017: 8888000099660100 
DBG(47258871)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(47258871)> CPU DETAIL: Write 1218: 8888000099660100 
DBG(47258873)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(47258874)> CPU DETAIL: M4: 0006 
DBG(47258875)> CPU DETAIL: M6: 0017 
DBG(47258876)> CPU DETAIL: M8: 0000 
DBG(47258879)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(47258880)> CPU DETAIL: M4: 0007 
DBG(47258883)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(47258884)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(47258885)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(47258886)> CPU DETAIL: Result: 0000000000000017 
DBG(47258887)> CPU DETAIL: Write 1204: 0000000000000017 
DBG(47258889)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(47258890)> CPU DETAIL: Read R 1211: 0000000000000006 
DBG(47258891)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47258892)> CPU DETAIL: Result: 0000000000000007 
DBG(47258893)> CPU DETAIL: Write 1211: 0000000000000007 
DBG(47258895)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(47258896)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258897)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(47258899)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(47258900)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258901)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(47258903)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(47258904)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258905)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(47258907)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(47258908)> CPU DETAIL: Read R 1212: 0100000000777777 
DBG(47258909)> CPU DETAIL: Write 1206: 0100000000777777 
DBG(47258911)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(47258912)> CPU DETAIL: Read R 1213: 0000009998989960 
DBG(47258913)> CPU DETAIL: Write 1207: 0000009998989960 
DBG(47258915)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(47258916)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47258917)> CPU DETAIL: Write 1208: 8888000099660100 
DBG(47258919)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(47258920)> CPU DETAIL: Read R 1211: 0000000000000007 
DBG(47258921)> CPU DETAIL: Word Shift 12 digits left: REG1: 0007000000000000 
DBG(47258922)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(47258924)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(47258925)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(47258926)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(47258927)> CPU DETAIL: Transfer to T 
DBG(47258929)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47258930)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258931)> CPU DETAIL: Result: 0060000000000052 
DBG(47258932)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(47258934)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47258935)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(47258936)> CPU DETAIL: Write 0001: 0007000000000000 
DBG(47258938)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47258939)> CPU DETAIL: Read R 1206: 0100000000777777 
DBG(47258940)> CPU DETAIL: Write 0002: 0100000000777777 
DBG(47258942)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47258943)> CPU DETAIL: Read R 1207: 0000009998989960 
DBG(47258944)> CPU DETAIL: Write 0003: 0000009998989960 
DBG(47258946)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47258947)> CPU DETAIL: Read R 1208: 8888000099660100 
DBG(47258948)> CPU DETAIL: Write 0004: 8888000099660100 
DBG(47258950)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47258951)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47258952)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47258954)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47258955)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47258957)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47258958)> CPU DETAIL: Reset condition present 
DBG(47258958)> same as above (3 times)
DBG(47258958)> CPU DETAIL: Transfer to T 
DBG(47258960)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47258961)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47258961)> MT CMD: Tape unit 2: init write
DBG(47258961)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47258961)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47258961)> MT EXP: CRT 0001 to Tape: 0007000000000000 
DBG(47258961)> MT EXP: CRT 0002 to Tape: 0100000000777777 
DBG(47258961)> MT EXP: CRT 0003 to Tape: 0000009998989960 
DBG(47258961)> MT EXP: CRT 0004 to Tape: 8888000099660100 
DBG(47258961)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47258961)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47258961)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.12% of medium (20.58 inches)
DBG(47258964)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47258965)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47258966)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47258967)> CPU DETAIL: Transfer to T 
DBG(47258969)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47258970)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47258971)> CPU DETAIL: Result: 0060000000000094 
DBG(47258972)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47258974)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47258975)> CPU DETAIL: Condition not present 
DBG(47258977)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47258978)> CPU DETAIL: Transfer to T 
DBG(47258980)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47258981)> CPU DETAIL: Transfer to T 
DBG(47258983)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(47258984)> CPU DETAIL: Transfer to T 
DBG(47258986)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(47258987)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47258988)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(47258989)> CPU DETAIL: Result: 0000000000000100 
DBG(47258990)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(47258991)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(47258993)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47258994)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47258995)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(47258998)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(47258999)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47258999)> CPU DETAIL: Read R 1018: 0000009898989910 
DBG(47259000)> CPU DETAIL: Write 1206: 0000009898989910 
DBG(47259002)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(47259003)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47259003)> CPU DETAIL: Read R 1019: 2222222222222222 
DBG(47259004)> CPU DETAIL: Write 1207: 2222222222222222 
DBG(47259006)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(47259007)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(47259007)> CPU DETAIL: Read R 1020: 3333333333333333 
DBG(47259008)> CPU DETAIL: Write 1208: 3333333333333333 
DBG(47259010)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(47259011)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(47259012)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(47259013)> CPU DETAIL: Result: 0007000000000100 
DBG(47259014)> CPU DETAIL: Write 1205: 0007000000000100 
DBG(47259016)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(47259017)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(47259018)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(47259019)> CPU DETAIL: Transfer to T 
DBG(47259021)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(47259022)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47259023)> CPU DETAIL: Result: 0060000000000059 
DBG(47259024)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(47259026)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(47259027)> CPU DETAIL: Read R 1205: 0007000000000100 
DBG(47259028)> CPU DETAIL: Write 0001: 0007000000000100 
DBG(47259030)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(47259031)> CPU DETAIL: Read R 1206: 0000009898989910 
DBG(47259032)> CPU DETAIL: Write 0002: 0000009898989910 
DBG(47259034)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(47259035)> CPU DETAIL: Read R 1207: 2222222222222222 
DBG(47259036)> CPU DETAIL: Write 0003: 2222222222222222 
DBG(47259038)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(47259039)> CPU DETAIL: Read R 1208: 3333333333333333 
DBG(47259040)> CPU DETAIL: Write 0004: 3333333333333333 
DBG(47259042)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(47259043)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(47259044)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(47259046)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(47259047)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(47259049)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(47259050)> CPU DETAIL: Reset condition present 
DBG(47259050)> same as above (3 times)
DBG(47259050)> CPU DETAIL: Transfer to T 
DBG(47259052)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(47259053)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(47259053)> MT CMD: Tape unit 2: init write
DBG(47259053)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(47259053)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(47259053)> MT EXP: CRT 0001 to Tape: 0007000000000100 
DBG(47259053)> MT EXP: CRT 0002 to Tape: 0000009898989910 
DBG(47259053)> MT EXP: CRT 0003 to Tape: 2222222222222222 
DBG(47259053)> MT EXP: CRT 0004 to Tape: 3333333333333333 
DBG(47259053)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(47259053)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(47259053)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.13% of medium (22.30 inches)
DBG(47259056)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47259057)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(47259058)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(47259059)> CPU DETAIL: Transfer to T 
DBG(47259061)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47259062)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47259063)> CPU DETAIL: Result: 0060000000000094 
DBG(47259064)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(47259066)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47259067)> CPU DETAIL: Condition not present 
DBG(47259069)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(47259070)> CPU DETAIL: Transfer to T 
DBG(47259072)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(47259073)> CPU DETAIL: Transfer to T 
DBG(47259075)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(47259076)> CPU DETAIL: Transfer to T 
DBG(47259078)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(47259079)> CPU DETAIL: Read R 1204: 0000000000000017 
DBG(47259080)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(47259081)> CPU DETAIL: Result: 0000000000000020 
DBG(47259082)> CPU DETAIL: Write 1204: 0000000000000020 
DBG(47259084)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(47259085)> CPU DETAIL: M4: 0007 
DBG(47259086)> CPU DETAIL: M6: 0020 
DBG(47259087)> CPU DETAIL: M8: 0000 
DBG(47259090)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(47259091)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(47259092)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(47259093)> CPU DETAIL: Result: 0000000000000000 
DBG(47259094)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(47259096)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(47259097)> CPU DETAIL: Transfer to T 
DBG(47259099)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(47259100)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47259101)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47259102)> CPU DETAIL: Transfer to T 
DBG(47259104)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47259105)> CPU DETAIL: Read R 1205: 0007000000000100 
DBG(47259106)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47259107)> CPU DETAIL: Result: 0007000000000000 
DBG(47259108)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(47259110)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(47259111)> CPU DETAIL: Read R 1218: 8888000099660100 
DBG(47259112)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(47259113)> CPU DETAIL: Result: 0000000000000000 
DBG(47259114)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(47259116)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(47259117)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(47259118)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(47259119)> CPU DETAIL: Transfer to T 
DBG(47259121)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(47259122)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(47259123)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(47259124)> CPU DETAIL: Result: 0007000000000000 
DBG(47259125)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(47259127)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(47259128)> CPU DETAIL: Transfer to T 
DBG(47259130)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(47259131)> CPU DETAIL: Read R 1203: 0000000000000020 
DBG(47259132)> CPU DETAIL: Read S 1204: 0000000000000020 
DBG(47259133)> CPU DETAIL: Result: 0000000000000000 
DBG(47259136)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(47259137)> CPU DETAIL: REG1: 0000000000000000
DBG(47259137)> CPU DETAIL: Transfer to S (REG1=0)
DBG(47259139)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(47259140)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(47259140)> MT DATA: Tape unit 1: init read
DBG(47259140)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 1
DBG(47259140)> MT DETAIL: Tape record contents: D*0191000000000000CD
DBG(47259140)> MT EXP: End Of File mark sensed: 0191000000000000 
DBG(47259140)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.05% of medium (8.66 inches)
DBG(47259143)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(47259144)> CPU DETAIL: Condition not present 
DBG(47259146)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(47259147)> CPU DETAIL: Reset condition present 
DBG(47259147)> CPU DETAIL: Transfer to T 
DBG(47259149)> CPU CMD: Exec 0080: 00 74 0000 0000 0077   END         74                               END-TAP     if switch 74 set to 
DBG(47259150)> CPU DETAIL: Reset condition present 
DBG(47259150)> same as above (3 times)
DBG(47259150)> CPU DETAIL: Transfer to T 
DBG(47259152)> CPU CMD: Exec 0077: 02 91 0000 0000 0000   END-TAP  02 91       0000        0000                    write end of tape   
DBG(47259153)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(47259153)> MT CMD: Tape unit 2: init write
DBG(47259153)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(47259153)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(47259153)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.14% of medium (23.83 inches)
DBG(47259156)> CPU CMD: Exec 0078: 08 60 0078 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(47259157)> CPU DETAIL: Read R 0078: 0860007800001992 
DBG(47259158)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600078 
DBG(47259159)> CPU DETAIL: Transfer to T 
DBG(47259161)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(47259162)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(47259163)> CPU DETAIL: Result: 0060000000000079 
DBG(47259164)> CPU DETAIL: Write 1994: 0060000000000079 
DBG(47259166)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(47259167)> CPU DETAIL: Condition not present 
DBG(47259169)> CPU CMD: Exec 1994: 00 60 0000 0000 0079   LCHKEX      00                                           if no tape chek, re 
DBG(47259170)> CPU DETAIL: Transfer to T 
DBG(47259172)> CPU CMD: Exec 0079: 00 60 1235 0001 0001               TR       STOP-OP     0001        0001        set stop in 0001, t 
DBG(47259173)> CPU DETAIL: Read R 1235: 0061000000000000 
DBG(47259174)> CPU DETAIL: Transfer to T 
DBG(47259174)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(47259176)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(47259177)> CPU DETAIL: Programmed STOP 
DBG(47259177)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(48080923)> CPU DETAIL: End Wait for TAPE animation (113 msec)
DBG(48080923)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(48080923)> CPU DETAIL: Measured speed: 7110217 Ticks per second
DBG(48080923)> CPU DETAIL: Measured speed: Clock at 7.11 MHz
DBG(48080923)> CPU DETAIL: Speed is x7.1 relative to original hardware
DBG(48080923)> CPU DETAIL: Instructions executed: 607
DBG(48080923)> CPU DETAIL: Measured speed: 4129 Instructions per second (IPS) achieved
DBG(48080923)> CPU DETAIL: Run elapsed 147 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)
DBG(48080923)> MT EXP: Tape unit 0: attach file mt_EV_prt.tap
DBG(48080923)> CTC DETAIL: Punch Card:            0001000000000000010000000000000000000088989898100000000000000001
DBG(48080923)> CTC DETAIL: Punch Card:            0001000000000001000000989898984055555588555555556666668866666666
DBG(48080923)> CTC DETAIL: Punch Card:            0002000000000000010000000077777700000088989898308888000099660100
DBG(48080923)> CTC DETAIL: Punch Card:            0002000000000100000000989898991022222222222222223333333333333333
DBG(48080923)> CTC DETAIL: Punch Card:            0003000000000000010000000000000000000098989898100000000000000100
DBG(48080923)> CTC DETAIL: Punch Card:            0003000000000100000000339898983000000000000335550000000000033666
DBG(48080923)> CTC DETAIL: Punch Card:            0004000000000000010000000077777700000098989898207777777700000001
DBG(48080923)> CTC DETAIL: Punch Card:            0004000000000001000000989898983055555050505050506666606060606060
DBG(48080923)> CTC DETAIL: Punch Card:            0005000000000000007000000000000000000098989898300000000000000000
DBG(48080923)> CTC DETAIL: Punch Card:            0006000000000000010000000000000000000099989899500000000000000001
DBG(48080923)> CTC DETAIL: Punch Card:            0006000000000001000000989898992055555555555555556666666666666666
DBG(48080923)> CTC DETAIL: Punch Card:            0007000000000000010000000077777700000099989899608888000099660100
DBG(48080923)> CTC DETAIL: Punch Card:            0007000000000100000000989898991022222222222222223333333333333333

Exec Ok
******************************


*** use ctc to load sample event tape to sequence

Punched 59 cards 
DBG(48080923)> MT EXP: Tape unit 0: attach file sample/mt1.tap
Read 59 cards in CTC 
DBG(48080923)> CTC DETAIL: Read Card:            !1900303030300003906000000000000019003030303000!!190030103200001
DBG(48080923)> CTC DETAIL: Read Card:            0100000000111111000000020100000300000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000022224444556600010000000209999990
DBG(48080923)> CTC DETAIL: Read Card:            0104110000000000000120999999999701000000001111120000000209999990
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000100000000020100000000000000000335550000000000033666
DBG(48080923)> CTC DETAIL: Read Card:            019003010320000J!19003010352000201300000001211110000000231000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            3333444455660002000000023101000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000231020000000000000000000000000000000000000130000000121112
DBG(48080923)> CTC DETAIL: Read Card:            0000000231010000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000333444445566010100000002310000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000023103000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0130000000121113000000023102000300000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000033354444556601010000000231000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000002310300000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000013000000012111400000002310300000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003336000000000200
DBG(48080923)> CTC DETAIL: Read Card:            0000000231010000000000000000000000000000000000000000000231020000
DBG(48080923)> CTC DETAIL: Read Card:            00000000000000000000000000000000019003010352000K!190030103390003
DBG(48080923)> CTC DETAIL: Read Card:            0130000000131111000000023200000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000033334444556600020000000232010000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000002320900000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000013000000013111200000002320100000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003334444455660101
DBG(48080923)> CTC DETAIL: Read Card:            0000000232000000000000000000000000000000000000000000000232090000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000001300000001311130000000232090000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            3336000000000200000000023200000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            000000023201000000000000000000000000000000000000019003010339000L
DBG(48080923)> CTC DETAIL: Read Card:            !190030103770004013000000014111100000002330000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003333444455660002
DBG(48080923)> CTC DETAIL: Read Card:            0000000233010000000000000000000000000000000000000000000233020000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000001900000001411120000000233010000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            3334444455660103000000023300000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000233020000000000000000000000000000000000000000000233030000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000002330900000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000016000000014101300000002330200030000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003335444455660201
DBG(48080923)> CTC DETAIL: Read Card:            0000000233000000000000000000000000000000000000000000000233010000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000002330300000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000016000000014101400000002330300000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003336000000000201
DBG(48080923)> CTC DETAIL: Read Card:            0000000233010000000000000000000000000000000000000000000233020000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000002330900000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000013000000014101500000002330900000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000003336000000000200
DBG(48080923)> CTC DETAIL: Read Card:            0000000233010000000000000000000000000000000000000000000233030000
DBG(48080923)> CTC DETAIL: Read Card:            00000000000000000000000000000000019003010377000M!190030103330005
DBG(48080923)> CTC DETAIL: Read Card:            0100000000151111000000024100000300000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000022224444556600010000000242009990
DBG(48080923)> CTC DETAIL: Read Card:            0104110000000000000120999999999701300000001511130000000242009990
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000101000000024100000000000000000335550000000000033666
DBG(48080923)> CTC DETAIL: Read Card:            0000000249999990000000000003355500000000000336660100000000151113
DBG(48080923)> CTC DETAIL: Read Card:            0000000249999990000000000000000000000000000000000000000000000000
DBG(48080923)> CTC DETAIL: Read Card:            0000000000000000000000000000010000000002420099900000000000033555
DBG(48080923)> CTC DETAIL: Read Card:            0000000000033666019003010333000N!19000000000000!
Written 222 words in Tape 
