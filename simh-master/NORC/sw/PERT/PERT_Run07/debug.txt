Debug output to "debug.txt" at Sun Feb 07 21:41:01 2021
IBM NORC simulator V4.0-0 Current        git commit id: d0022e93

*********************************
Exec PERT Run07 (sequence)


*** load program on computer and prepare prog initial settings

loaded sequence_prog.txt from 0008 to 1762 address
DBG(48080923)> MT EXP: Tape unit 1: attach file sample/mt1.tap
DBG(48080923)> MT EXP: Tape unit 2: attach file mt2.tap
DBG(48080923)> MT EXP: Tape unit 3: attach file mt_EV_Seq.tap
DBG(48080923)> MT EXP: Tape unit 4: attach file mt4.tap
DBG(48080923)> MT EXP: Tape unit 5: attach file mt5.tap
DBG(48080923)> MT EXP: Tape unit 6: attach file mt6.tap
DBG(48080923)> CPU DETAIL: Measured speed: init because start of run
DBG(48080925)> CPU CMD: Exec 0008: 01 94 1602 1602 0000   read tape 01 (1602 input tape 01 label)       
DBG(48080926)> CPU DETAIL: Tape operation on MT1, Addr 1602->1602, Block Number 0000
DBG(48080926)> MT DATA: Tape unit 1: init read
DBG(48080926)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 1
DBG(48080926)> MT DETAIL: Tape record contents: D*0190030303030000C*3906000000000000C*0190030303030000CD
DBG(48080926)> MT EXP: Start Of Block Word: 0190030303030000
DBG(48080926)> MT EXP: Read Tape Block number 0000
DBG(48080926)> MT EXP: Read forward addr 1602 to 1602
DBG(48080926)> MT EXP: Tape to CRT 1602: 3906000000000000 
DBG(48080926)> MT EXP: End Of Block Word: 0190030303030000, data words in block: 1
DBG(48080926)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(48080929)> CPU CMD: Exec 0009: 08 68 0009 0000 1713   if tape check, call 1713 reread      
DBG(48080930)> CPU DETAIL: Condition not present 
DBG(48080932)> CPU CMD: Exec 0010: 00 61 0000 0000 0088   stop, then goto 0088 (print label), then continue to 0011   
DBG(48080933)> CPU DETAIL: Transfer to T 
DBG(48080933)> CPU DETAIL: Programmed STOP 
DBG(48080933)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(48564690)> CPU DETAIL: End Wait for TAPE animation (71 msec)
DBG(48564690)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(48564690)> CPU DETAIL: Measured speed: 6938239 Ticks per second
DBG(48564690)> CPU DETAIL: Measured speed: Clock at 6.94 MHz
DBG(48564690)> CPU DETAIL: Speed is x6.9 relative to original hardware
DBG(48564690)> CPU DETAIL: Instructions executed: 3
DBG(48564690)> CPU DETAIL: Measured speed: 42 Instructions per second (IPS) achieved
DBG(48564690)> CPU DETAIL: Run elapsed 71 msec

Program STOP, IC: 00010 (00 61 0000 0000 0088)
DBG(48564690)> CPU DETAIL: Measured speed: init because start of run
DBG(48564692)> CPU CMD: Exec 0088: 00 80 1602 0001 0000   print input tape 01 label as read from tape      
DBG(48564693)> CPU DETAIL: Read R 1602: 3906000000000000 
DBG(48564694)> CPU DETAIL: Write 0001: 3906000000000000 
DBG(48564696)> CPU CMD: Exec 0089: 00 80 1631 0002 0000   print expected input tape 01 label = 3906 0..0 + input tape week NNNN     
DBG(48564697)> CPU DETAIL: Read R 1631: 0000000000000000 
DBG(48564698)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(48564700)> CPU CMD: Exec 0090: 00 80 1629 0003 0000   print output tape label with week info   
DBG(48564701)> CPU DETAIL: Read R 1629: 0000000000000000 
DBG(48564702)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(48564704)> CPU CMD: Exec 0091: 00 80 1640 0004 0000   print zero   
DBG(48564705)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48564706)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(48564708)> CPU CMD: Exec 0092: 00 80 0000 0005 0000   print zero    
DBG(48564709)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(48564711)> CPU CMD: Exec 0093: 00 80 0000 0006 0000   print zero    
DBG(48564712)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(48564714)> CPU CMD: Exec 0094: 00 83 0000 0007 0011   print special, goto 0011    
DBG(48564715)> CPU DETAIL: Transfer to T 
DBG(48564715)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(48564715)> LP CMD: Printer LP1: init cycle special
DBG(48564715)> LP CMD:      0001: 3906000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(48564715)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(48564715)> LP CMD: Printer 1: ready (fast mode)
DBG(48564717)> CPU CMD: Exec 0011: 00 40 1631 1697 1631   set (1631 input tape 01 label) = 3906 0..0 + input tape week NNNN = expected 
DBG(48564718)> CPU DETAIL: Read R 1631: 0000000000000000 
DBG(48564719)> CPU DETAIL: Read S 1697: 3906000000000000 
DBG(48564720)> CPU DETAIL: Result: 3906000000000000 
DBG(48564721)> CPU DETAIL: Write 1631: 3906000000000000 
DBG(48564723)> CPU CMD: Exec 0012: 00 70 1602 0000 0014   if tape 01 label match goto 0014   
DBG(48564724)> CPU DETAIL: Read R 1602: 3906000000000000 
DBG(48564725)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48564726)> CPU DETAIL: Transfer to T 
DBG(48564728)> CPU CMD: Exec 0014: 00 40 1710 1697 0000   const 00 01 0..0 + const 39 06 0..0 -> 39 07 0..0 new output label    
DBG(48564729)> CPU DETAIL: Read R 1710: 0001000000000000 
DBG(48564730)> CPU DETAIL: Read S 1697: 3906000000000000 
DBG(48564731)> CPU DETAIL: Result: 3907000000000000 
DBG(48564734)> CPU CMD: Exec 0015: 00 40 1629 0000 1629   add 39 07 0..0 to week now -> (1629 output tape label with week info)     
DBG(48564735)> CPU DETAIL: Read R 1629: 0000000000000000 
DBG(48564736)> CPU DETAIL: Result: 3907000000000000 
DBG(48564737)> CPU DETAIL: Write 1629: 3907000000000000 
DBG(48564739)> CPU CMD: Exec 0016: 03 91 1629 1629 0000   write tape 03 label -> output tape 39 07 0000 0000 NNNN with NNN.N = week no 
DBG(48564740)> CPU DETAIL: Tape operation on MT3, Addr 1629->1629, Block Number 0000
DBG(48564740)> MT CMD: Tape unit 3: init write
DBG(48564740)> MT EXP: Write from 1629 to 1629 as Block number 0000
DBG(48564740)> MT EXP: Start Of Block: 03 91 1629 1629 0000
DBG(48564740)> MT EXP: CRT 1629 to Tape: 3907000000000000 
DBG(48564740)> MT EXP: End Of Block: 03 91 1629 1629 0000 (1 words)
DBG(48564740)> MT DETAIL: Write block (56 chars, used 1.61 inches, needs 8 msec) to tape 3
DBG(48564740)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(48564743)> CPU CMD: Exec 0017: 08 60 0017 0000 1730   call 1730 check write   
DBG(48564744)> CPU DETAIL: Read R 0017: 0860001700001730 
DBG(48564745)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600017 
DBG(48564746)> CPU DETAIL: Transfer to T 
DBG(48564748)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48564749)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48564750)> CPU DETAIL: Result: 0060000000000018 
DBG(48564751)> CPU DETAIL: Write 1742: 0060000000000018 
DBG(48564753)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48564754)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000018000000000 
DBG(48564757)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48564758)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48564759)> CPU DETAIL: Result: 0600016174700000 
DBG(48564760)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060001617470000 
DBG(48564761)> CPU DETAIL: Write 1734: 0060001617470000 
DBG(48564763)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48564764)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48564765)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48564767)> CPU CMD: Exec 1734: 00 60 0016 1747 0000      
DBG(48564768)> CPU DETAIL: Read R 0016: 0391162916290000 
DBG(48564769)> CPU DETAIL: Write 1747: 0391162916290000 
DBG(48564771)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48564772)> CPU DETAIL: Condition not present 
DBG(48564774)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48564775)> CPU DETAIL: Transfer to T 
DBG(48564777)> CPU CMD: Exec 1742: 00 60 0000 0000 0018   EXIT_CheckWrite   
DBG(48564778)> CPU DETAIL: Transfer to T 
DBG(48564780)> CPU CMD: Exec 0018: 00 57 0000 0000 0000   clear M4 M6 M8   
DBG(48564781)> CPU DETAIL: Clear M4
DBG(48564781)> CPU DETAIL: M4: 0000 
DBG(48564782)> CPU DETAIL: Clear M6
DBG(48564782)> CPU DETAIL: M6: 0000 
DBG(48564783)> CPU DETAIL: Clear M8
DBG(48564783)> CPU DETAIL: M8: 0000 
DBG(48564786)> CPU CMD: Exec 0019: 01 94 0397 0000 0001   read input tape 01 -> (0397) record 0001      
DBG(48564787)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0001
DBG(48564787)> MT DATA: Tape unit 1: init read
DBG(48564787)> MT DETAIL: Read tape record (398 chars, used 2.28 inches, needs 13 msec) from tape 1
DBG(48564787)> MT DETAIL: Tape record contents: D*0190030103200001C*0100000000111111C*0000000201000003C*00000000000000...
DBG(48564787)> MT EXP: Start Of Block Word: 0190030103200001
DBG(48564787)> MT EXP: Read Tape Block number 0001
DBG(48564787)> MT EXP: Read forward addr 0397 to 0000
DBG(48564787)> MT EXP: Tape to CRT 0397: 0100000000111111 
DBG(48564787)> MT EXP: Tape to CRT 0398: 0000000201000003 
DBG(48564787)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0403: 2222444455660001 
DBG(48564787)> MT EXP: Tape to CRT 0404: 0000000209999990 
DBG(48564787)> MT EXP: Tape to CRT 0405: 0104110000000000 
DBG(48564787)> MT EXP: Tape to CRT 0406: 0001209999999997 
DBG(48564787)> MT EXP: Tape to CRT 0407: 0100000000111112 
DBG(48564787)> MT EXP: Tape to CRT 0408: 0000000209999990 
DBG(48564787)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0410: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0411: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48564787)> MT EXP: Tape to CRT 0413: 0000000000000100 
DBG(48564787)> MT EXP: Tape to CRT 0414: 0000000201000000 
DBG(48564787)> MT EXP: Tape to CRT 0415: 0000000000033555 
DBG(48564787)> MT EXP: Tape to CRT 0416: 0000000000033666 
DBG(48564787)> MT EXP: End Of Block Word: 0190030103200001, data words in block: 20
DBG(48564787)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.02% of medium (3.89 inches)
DBG(48564790)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48564791)> CPU DETAIL: Condition not present 
DBG(48564793)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48564794)> CPU DETAIL: Condition not present 
DBG(48564796)> CPU CMD: Exec 0022: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48564797)> CPU DETAIL: Write 1603: 0190030103200001 
DBG(48564799)> CPU CMD: Exec 0023: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        01 90 aaaa bbbb nnnn ma 
DBG(48564800)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48564801)> CPU DETAIL: Result: 0000000003200000 
DBG(48564802)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000320 
DBG(48564803)> CPU DETAIL: Write 1604: 0000000000000320 
DBG(48564805)> CPU CMD: Exec 0024: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        01 90 aaaa bbbb nnnn ma 
DBG(48564806)> CPU DETAIL: Read R 1603: 0190030103200001 
DBG(48564807)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48564808)> CPU DETAIL: Result: 0000030100000000 
DBG(48564809)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48564812)> CPU CMD: Exec 0025: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48564813)> CPU DETAIL: Read R 1604: 0000000000000320 
DBG(48564814)> CPU DETAIL: Result: 0000000000000019 
DBG(48564815)> CPU DETAIL: Write 1605: 0000000000000019 
DBG(48564817)> CPU CMD: Exec 0026: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48564818)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48564819)> CPU DETAIL: Result: 0000000000000020 
DBG(48564820)> CPU DETAIL: Write 1605: 0000000000000020 
DBG(48564822)> CPU CMD: Exec 0027: 00 52 0000 0000 0000   clear M6   
DBG(48564823)> CPU DETAIL: M4: 0000 
DBG(48564824)> CPU DETAIL: Clear M6
DBG(48564824)> CPU DETAIL: M6: 0000 
DBG(48564825)> CPU DETAIL: M8: 0000 
DBG(48564828)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48564829)> CPU DETAIL: Read R 1605: 0000000000000020 
DBG(48564830)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48564831)> CPU DETAIL: Result: 0000000000000020 
DBG(48564834)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48564835)> CPU DETAIL: REG1: 0000000000000020
DBG(48564835)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48564837)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48564838)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48564838)> CPU DETAIL: Read R 0397: 0100000000111111 
DBG(48564839)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48564840)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48564842)> CPU CMD: Exec 0036: 00 60 0403 1608 0000   (0403 = event w7) -> (1608)   
DBG(48564843)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48564844)> CPU DETAIL: Write 1608: 2222444455660001 
DBG(48564846)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48564847)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48564848)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48564849)> CPU DETAIL: Result: 0000000000000000 
DBG(48564850)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48564851)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48564853)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48564854)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48564855)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48564856)> CPU DETAIL: Result: 0000000000000001 
DBG(48564857)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48564859)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48564860)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48564861)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48564862)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48564865)> CPU CMD: Exec 0040: 00 60 1646 0054 0000   predecessor=0 -> set 0054 as nop to save event in tape 2   
DBG(48564866)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48564867)> CPU DETAIL: Write 0054: 0060000000000000 
DBG(48564869)> CPU CMD: Exec 0041: 00 70 1610 1640 0044   if num successors w7 = zero goto 0044   
DBG(48564870)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48564871)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48564872)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48564875)> CPU CMD: Exec 0042: 00 60 0000 0000 0045   goto 0045   
DBG(48564876)> CPU DETAIL: Transfer to T 
DBG(48564878)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48564879)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48564880)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48564883)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48564884)> CPU DETAIL: Read R 0050: 0658000100000048 
DBG(48564885)> CPU DETAIL: Result: 0658000100100048 
DBG(48564886)> CPU DETAIL: Write 0050: 0658000100100048 
DBG(48564888)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48564889)> CPU DETAIL: M4: 0000 
DBG(48564890)> CPU DETAIL: M6: 0000 
DBG(48564891)> CPU DETAIL: Clear M8
DBG(48564891)> CPU DETAIL: M8: 0000 
DBG(48564894)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564895)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48564895)> CPU DETAIL: Read R 0397: 0100000000111111 
DBG(48564896)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48564896)> CPU DETAIL: Write 0598: 0100000000111111 
DBG(48564898)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564899)> CPU DETAIL: M4: 0000 
DBG(48564900)> CPU DETAIL: M6: 0000 
DBG(48564901)> CPU DETAIL: M8: 0001 
DBG(48564904)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564905)> CPU DETAIL: M6: 0001 
DBG(48564906)> CPU DETAIL: Transfer to T 
DBG(48564908)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564909)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48564909)> CPU DETAIL: Read R 0398: 0000000201000003 
DBG(48564910)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48564910)> CPU DETAIL: Write 0599: 0000000201000003 
DBG(48564912)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564913)> CPU DETAIL: M4: 0000 
DBG(48564914)> CPU DETAIL: M6: 0001 
DBG(48564915)> CPU DETAIL: M8: 0002 
DBG(48564918)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564919)> CPU DETAIL: M6: 0002 
DBG(48564920)> CPU DETAIL: Transfer to T 
DBG(48564922)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564923)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48564923)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48564924)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48564924)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48564926)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564927)> CPU DETAIL: M4: 0000 
DBG(48564928)> CPU DETAIL: M6: 0002 
DBG(48564929)> CPU DETAIL: M8: 0003 
DBG(48564932)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564933)> CPU DETAIL: M6: 0003 
DBG(48564934)> CPU DETAIL: Transfer to T 
DBG(48564936)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564937)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48564937)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48564938)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48564938)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48564940)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564941)> CPU DETAIL: M4: 0000 
DBG(48564942)> CPU DETAIL: M6: 0003 
DBG(48564943)> CPU DETAIL: M8: 0004 
DBG(48564946)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564947)> CPU DETAIL: M6: 0004 
DBG(48564948)> CPU DETAIL: Transfer to T 
DBG(48564950)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564951)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48564951)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48564952)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48564952)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48564954)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564955)> CPU DETAIL: M4: 0000 
DBG(48564956)> CPU DETAIL: M6: 0004 
DBG(48564957)> CPU DETAIL: M8: 0005 
DBG(48564960)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564961)> CPU DETAIL: M6: 0005 
DBG(48564962)> CPU DETAIL: Transfer to T 
DBG(48564964)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564965)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48564965)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48564966)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48564966)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48564968)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564969)> CPU DETAIL: M4: 0000 
DBG(48564970)> CPU DETAIL: M6: 0005 
DBG(48564971)> CPU DETAIL: M8: 0006 
DBG(48564974)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564975)> CPU DETAIL: M6: 0006 
DBG(48564976)> CPU DETAIL: Transfer to T 
DBG(48564978)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564979)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48564979)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48564980)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48564980)> CPU DETAIL: Write 0604: 2222444455660001 
DBG(48564982)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564983)> CPU DETAIL: M4: 0000 
DBG(48564984)> CPU DETAIL: M6: 0006 
DBG(48564985)> CPU DETAIL: M8: 0007 
DBG(48564988)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48564989)> CPU DETAIL: M6: 0007 
DBG(48564990)> CPU DETAIL: Transfer to T 
DBG(48564992)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48564993)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48564993)> CPU DETAIL: Read R 0404: 0000000209999990 
DBG(48564994)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48564994)> CPU DETAIL: Write 0605: 0000000209999990 
DBG(48564996)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48564997)> CPU DETAIL: M4: 0000 
DBG(48564998)> CPU DETAIL: M6: 0007 
DBG(48564999)> CPU DETAIL: M8: 0008 
DBG(48565002)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565003)> CPU DETAIL: M6: 0008 
DBG(48565004)> CPU DETAIL: Transfer to T 
DBG(48565006)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565007)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48565007)> CPU DETAIL: Read R 0405: 0104110000000000 
DBG(48565008)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48565008)> CPU DETAIL: Write 0606: 0104110000000000 
DBG(48565010)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565011)> CPU DETAIL: M4: 0000 
DBG(48565012)> CPU DETAIL: M6: 0008 
DBG(48565013)> CPU DETAIL: M8: 0009 
DBG(48565016)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565017)> CPU DETAIL: M6: 0009 
DBG(48565018)> CPU DETAIL: Transfer to T 
DBG(48565020)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565021)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48565021)> CPU DETAIL: Read R 0406: 0001209999999997 
DBG(48565022)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48565022)> CPU DETAIL: Write 0607: 0001209999999997 
DBG(48565024)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565025)> CPU DETAIL: M4: 0000 
DBG(48565026)> CPU DETAIL: M6: 0009 
DBG(48565027)> CPU DETAIL: M8: 0010 
DBG(48565030)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565031)> CPU DETAIL: M6: 0010 
DBG(48565034)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48565035)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565036)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48565037)> CPU DETAIL: Result: 0000000000000010 
DBG(48565038)> CPU DETAIL: Write 1606: 0000000000000010 
DBG(48565040)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48565041)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565042)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48565045)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48565046)> CPU DETAIL: Read R 0036: 0060040316080000 
DBG(48565047)> CPU DETAIL: Result: 0060041316080000 
DBG(48565048)> CPU DETAIL: Write 0036: 0060041316080000 
DBG(48565050)> CPU CMD: Exec 0054: 00 60 0000 0000 0000   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48565053)> CPU CMD: Exec 0055: 00 40 1611 1607 0000   (1611 num of words in output block) + (1607 event rec len NNN) -> REG1   
DBG(48565054)> CPU DETAIL: Read R 1611: 0000000000000000 
DBG(48565055)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48565056)> CPU DETAIL: Result: 0000000000000010 
DBG(48565059)> CPU CMD: Exec 0056: 00 41 1650 0000 0000   const 200 - REG1   
DBG(48565060)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48565061)> CPU DETAIL: Result: 0000000000000190 
DBG(48565064)> CPU CMD: Exec 0057: 00 63 0000 0060 0059   if =0 goto 0060, if <0 goto 0059   
DBG(48565065)> CPU DETAIL: REG1: 0000000000000190
DBG(48565065)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48565067)> CPU CMD: Exec 0058: 00 60 1647 0069 0062   enough room in out block for event: set exit to read next event rec, goto 00 
DBG(48565068)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48565069)> CPU DETAIL: Transfer to T 
DBG(48565069)> CPU DETAIL: Write 0069: 0060000000000028 
DBG(48565071)> CPU CMD: Exec 0062: 00 51 0000 0000 0000   clear M4   
DBG(48565072)> CPU DETAIL: Clear M4
DBG(48565072)> CPU DETAIL: M4: 0000 
DBG(48565073)> CPU DETAIL: M6: 0010 
DBG(48565074)> CPU DETAIL: M8: 0010 
DBG(48565077)> CPU CMD: Exec 0063: 96 60 1607 0000 0000   set instr 0068    
DBG(48565078)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565079)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48565082)> CPU CMD: Exec 0064: 00 40 1649 0000 0068   ... to loop if M4<>(1607 event rec len NNN)   
DBG(48565083)> CPU DETAIL: Read R 1649: 0458000100000065 
DBG(48565084)> CPU DETAIL: Result: 0458000100100065 
DBG(48565085)> CPU DETAIL: Write 0068: 0458000100100065 
DBG(48565087)> CPU CMD: Exec 0065: 00 60 4598 0798 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565088)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48565088)> CPU DETAIL: Read R 0598: 0100000000111111 
DBG(48565089)> CPU DETAIL: Write 0798: 0100000000111111 
DBG(48565091)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565092)> CPU DETAIL: Read R 0065: 0060459807980000 
DBG(48565093)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565094)> CPU DETAIL: Result: 0060459807990000 
DBG(48565095)> CPU DETAIL: Write 0065: 0060459807990000 
DBG(48565097)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565098)> CPU DETAIL: Read R 1611: 0000000000000000 
DBG(48565099)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565100)> CPU DETAIL: Result: 0000000000000001 
DBG(48565101)> CPU DETAIL: Write 1611: 0000000000000001 
DBG(48565103)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565104)> CPU DETAIL: M4: 0001 
DBG(48565105)> CPU DETAIL: Transfer to T 
DBG(48565107)> CPU CMD: Exec 0065: 00 60 4598 0799 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565108)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48565108)> CPU DETAIL: Read R 0599: 0000000201000003 
DBG(48565109)> CPU DETAIL: Write 0799: 0000000201000003 
DBG(48565111)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565112)> CPU DETAIL: Read R 0065: 0060459807990000 
DBG(48565113)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565114)> CPU DETAIL: Result: 0060459808000000 
DBG(48565115)> CPU DETAIL: Write 0065: 0060459808000000 
DBG(48565117)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565118)> CPU DETAIL: Read R 1611: 0000000000000001 
DBG(48565119)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565120)> CPU DETAIL: Result: 0000000000000002 
DBG(48565121)> CPU DETAIL: Write 1611: 0000000000000002 
DBG(48565123)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565124)> CPU DETAIL: M4: 0002 
DBG(48565125)> CPU DETAIL: Transfer to T 
DBG(48565127)> CPU CMD: Exec 0065: 00 60 4598 0800 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565128)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48565128)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48565129)> CPU DETAIL: Write 0800: 0000000000000000 
DBG(48565131)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565132)> CPU DETAIL: Read R 0065: 0060459808000000 
DBG(48565133)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565134)> CPU DETAIL: Result: 0060459808010000 
DBG(48565135)> CPU DETAIL: Write 0065: 0060459808010000 
DBG(48565137)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565138)> CPU DETAIL: Read R 1611: 0000000000000002 
DBG(48565139)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565140)> CPU DETAIL: Result: 0000000000000003 
DBG(48565141)> CPU DETAIL: Write 1611: 0000000000000003 
DBG(48565143)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565144)> CPU DETAIL: M4: 0003 
DBG(48565145)> CPU DETAIL: Transfer to T 
DBG(48565147)> CPU CMD: Exec 0065: 00 60 4598 0801 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565148)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48565148)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48565149)> CPU DETAIL: Write 0801: 0000000000000000 
DBG(48565151)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565152)> CPU DETAIL: Read R 0065: 0060459808010000 
DBG(48565153)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565154)> CPU DETAIL: Result: 0060459808020000 
DBG(48565155)> CPU DETAIL: Write 0065: 0060459808020000 
DBG(48565157)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565158)> CPU DETAIL: Read R 1611: 0000000000000003 
DBG(48565159)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565160)> CPU DETAIL: Result: 0000000000000004 
DBG(48565161)> CPU DETAIL: Write 1611: 0000000000000004 
DBG(48565163)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565164)> CPU DETAIL: M4: 0004 
DBG(48565165)> CPU DETAIL: Transfer to T 
DBG(48565167)> CPU CMD: Exec 0065: 00 60 4598 0802 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565168)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48565168)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48565169)> CPU DETAIL: Write 0802: 0000000000000000 
DBG(48565171)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565172)> CPU DETAIL: Read R 0065: 0060459808020000 
DBG(48565173)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565174)> CPU DETAIL: Result: 0060459808030000 
DBG(48565175)> CPU DETAIL: Write 0065: 0060459808030000 
DBG(48565177)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565178)> CPU DETAIL: Read R 1611: 0000000000000004 
DBG(48565179)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565180)> CPU DETAIL: Result: 0000000000000005 
DBG(48565181)> CPU DETAIL: Write 1611: 0000000000000005 
DBG(48565183)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565184)> CPU DETAIL: M4: 0005 
DBG(48565185)> CPU DETAIL: Transfer to T 
DBG(48565187)> CPU CMD: Exec 0065: 00 60 4598 0803 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565188)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48565188)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48565189)> CPU DETAIL: Write 0803: 0000000000000000 
DBG(48565191)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565192)> CPU DETAIL: Read R 0065: 0060459808030000 
DBG(48565193)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565194)> CPU DETAIL: Result: 0060459808040000 
DBG(48565195)> CPU DETAIL: Write 0065: 0060459808040000 
DBG(48565197)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565198)> CPU DETAIL: Read R 1611: 0000000000000005 
DBG(48565199)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565200)> CPU DETAIL: Result: 0000000000000006 
DBG(48565201)> CPU DETAIL: Write 1611: 0000000000000006 
DBG(48565203)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565204)> CPU DETAIL: M4: 0006 
DBG(48565205)> CPU DETAIL: Transfer to T 
DBG(48565207)> CPU CMD: Exec 0065: 00 60 4598 0804 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565208)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48565208)> CPU DETAIL: Read R 0604: 2222444455660001 
DBG(48565209)> CPU DETAIL: Write 0804: 2222444455660001 
DBG(48565211)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565212)> CPU DETAIL: Read R 0065: 0060459808040000 
DBG(48565213)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565214)> CPU DETAIL: Result: 0060459808050000 
DBG(48565215)> CPU DETAIL: Write 0065: 0060459808050000 
DBG(48565217)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565218)> CPU DETAIL: Read R 1611: 0000000000000006 
DBG(48565219)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565220)> CPU DETAIL: Result: 0000000000000007 
DBG(48565221)> CPU DETAIL: Write 1611: 0000000000000007 
DBG(48565223)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565224)> CPU DETAIL: M4: 0007 
DBG(48565225)> CPU DETAIL: Transfer to T 
DBG(48565227)> CPU CMD: Exec 0065: 00 60 4598 0805 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565228)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48565228)> CPU DETAIL: Read R 0605: 0000000209999990 
DBG(48565229)> CPU DETAIL: Write 0805: 0000000209999990 
DBG(48565231)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565232)> CPU DETAIL: Read R 0065: 0060459808050000 
DBG(48565233)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565234)> CPU DETAIL: Result: 0060459808060000 
DBG(48565235)> CPU DETAIL: Write 0065: 0060459808060000 
DBG(48565237)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565238)> CPU DETAIL: Read R 1611: 0000000000000007 
DBG(48565239)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565240)> CPU DETAIL: Result: 0000000000000008 
DBG(48565241)> CPU DETAIL: Write 1611: 0000000000000008 
DBG(48565243)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565244)> CPU DETAIL: M4: 0008 
DBG(48565245)> CPU DETAIL: Transfer to T 
DBG(48565247)> CPU CMD: Exec 0065: 00 60 4598 0806 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565248)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48565248)> CPU DETAIL: Read R 0606: 0104110000000000 
DBG(48565249)> CPU DETAIL: Write 0806: 0104110000000000 
DBG(48565251)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565252)> CPU DETAIL: Read R 0065: 0060459808060000 
DBG(48565253)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565254)> CPU DETAIL: Result: 0060459808070000 
DBG(48565255)> CPU DETAIL: Write 0065: 0060459808070000 
DBG(48565257)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565258)> CPU DETAIL: Read R 1611: 0000000000000008 
DBG(48565259)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565260)> CPU DETAIL: Result: 0000000000000009 
DBG(48565261)> CPU DETAIL: Write 1611: 0000000000000009 
DBG(48565263)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565264)> CPU DETAIL: M4: 0009 
DBG(48565265)> CPU DETAIL: Transfer to T 
DBG(48565267)> CPU CMD: Exec 0065: 00 60 4598 0807 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565268)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48565268)> CPU DETAIL: Read R 0607: 0001209999999997 
DBG(48565269)> CPU DETAIL: Write 0807: 0001209999999997 
DBG(48565271)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565272)> CPU DETAIL: Read R 0065: 0060459808070000 
DBG(48565273)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565274)> CPU DETAIL: Result: 0060459808080000 
DBG(48565275)> CPU DETAIL: Write 0065: 0060459808080000 
DBG(48565277)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565278)> CPU DETAIL: Read R 1611: 0000000000000009 
DBG(48565279)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565280)> CPU DETAIL: Result: 0000000000000010 
DBG(48565281)> CPU DETAIL: Write 1611: 0000000000000010 
DBG(48565283)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565284)> CPU DETAIL: M4: 0010 
DBG(48565287)> CPU CMD: Exec 0069: 00 60 0000 0000 0028   exit: goto 0028 read next event rec   
DBG(48565288)> CPU DETAIL: Transfer to T 
DBG(48565290)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48565291)> CPU DETAIL: Read R 1605: 0000000000000020 
DBG(48565292)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48565293)> CPU DETAIL: Result: 0000000000000010 
DBG(48565296)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48565297)> CPU DETAIL: REG1: 0000000000000010
DBG(48565297)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48565299)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48565300)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48565300)> CPU DETAIL: Read R 0407: 0100000000111112 
DBG(48565301)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48565302)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48565304)> CPU CMD: Exec 0036: 00 60 0413 1608 0000   (0403 = event w7) -> (1608)   
DBG(48565305)> CPU DETAIL: Read R 0413: 0000000000000100 
DBG(48565306)> CPU DETAIL: Write 1608: 0000000000000100 
DBG(48565308)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48565309)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48565310)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48565311)> CPU DETAIL: Result: 0000000000000100 
DBG(48565312)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48565313)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48565315)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48565316)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48565317)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48565318)> CPU DETAIL: Result: 0000000000000000 
DBG(48565319)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48565321)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48565322)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48565323)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48565324)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48565325)> CPU DETAIL: Transfer to T 
DBG(48565327)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48565328)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48565329)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48565331)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48565332)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565333)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48565336)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48565337)> CPU DETAIL: Read R 0050: 0658000100100048 
DBG(48565338)> CPU DETAIL: Result: 0658000100200048 
DBG(48565339)> CPU DETAIL: Write 0050: 0658000100200048 
DBG(48565341)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48565342)> CPU DETAIL: M4: 0010 
DBG(48565343)> CPU DETAIL: M6: 0010 
DBG(48565344)> CPU DETAIL: Clear M8
DBG(48565344)> CPU DETAIL: M8: 0000 
DBG(48565347)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565348)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48565348)> CPU DETAIL: Read R 0407: 0100000000111112 
DBG(48565349)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48565349)> CPU DETAIL: Write 0598: 0100000000111112 
DBG(48565351)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565352)> CPU DETAIL: M4: 0010 
DBG(48565353)> CPU DETAIL: M6: 0010 
DBG(48565354)> CPU DETAIL: M8: 0001 
DBG(48565357)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565358)> CPU DETAIL: M6: 0011 
DBG(48565359)> CPU DETAIL: Transfer to T 
DBG(48565361)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565362)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48565362)> CPU DETAIL: Read R 0408: 0000000209999990 
DBG(48565363)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48565363)> CPU DETAIL: Write 0599: 0000000209999990 
DBG(48565365)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565366)> CPU DETAIL: M4: 0010 
DBG(48565367)> CPU DETAIL: M6: 0011 
DBG(48565368)> CPU DETAIL: M8: 0002 
DBG(48565371)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565372)> CPU DETAIL: M6: 0012 
DBG(48565373)> CPU DETAIL: Transfer to T 
DBG(48565375)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565376)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48565376)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48565377)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48565377)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48565379)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565380)> CPU DETAIL: M4: 0010 
DBG(48565381)> CPU DETAIL: M6: 0012 
DBG(48565382)> CPU DETAIL: M8: 0003 
DBG(48565385)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565386)> CPU DETAIL: M6: 0013 
DBG(48565387)> CPU DETAIL: Transfer to T 
DBG(48565389)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565390)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48565390)> CPU DETAIL: Read R 0410: 0000000000000000 
DBG(48565391)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48565391)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48565393)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565394)> CPU DETAIL: M4: 0010 
DBG(48565395)> CPU DETAIL: M6: 0013 
DBG(48565396)> CPU DETAIL: M8: 0004 
DBG(48565399)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565400)> CPU DETAIL: M6: 0014 
DBG(48565401)> CPU DETAIL: Transfer to T 
DBG(48565403)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565404)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48565404)> CPU DETAIL: Read R 0411: 0000000000000000 
DBG(48565405)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48565405)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48565407)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565408)> CPU DETAIL: M4: 0010 
DBG(48565409)> CPU DETAIL: M6: 0014 
DBG(48565410)> CPU DETAIL: M8: 0005 
DBG(48565413)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565414)> CPU DETAIL: M6: 0015 
DBG(48565415)> CPU DETAIL: Transfer to T 
DBG(48565417)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565418)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48565418)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48565419)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48565419)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48565421)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565422)> CPU DETAIL: M4: 0010 
DBG(48565423)> CPU DETAIL: M6: 0015 
DBG(48565424)> CPU DETAIL: M8: 0006 
DBG(48565427)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565428)> CPU DETAIL: M6: 0016 
DBG(48565429)> CPU DETAIL: Transfer to T 
DBG(48565431)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565432)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48565432)> CPU DETAIL: Read R 0413: 0000000000000100 
DBG(48565433)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48565433)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48565435)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565436)> CPU DETAIL: M4: 0010 
DBG(48565437)> CPU DETAIL: M6: 0016 
DBG(48565438)> CPU DETAIL: M8: 0007 
DBG(48565441)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565442)> CPU DETAIL: M6: 0017 
DBG(48565443)> CPU DETAIL: Transfer to T 
DBG(48565445)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565446)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48565446)> CPU DETAIL: Read R 0414: 0000000201000000 
DBG(48565447)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48565447)> CPU DETAIL: Write 0605: 0000000201000000 
DBG(48565449)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565450)> CPU DETAIL: M4: 0010 
DBG(48565451)> CPU DETAIL: M6: 0017 
DBG(48565452)> CPU DETAIL: M8: 0008 
DBG(48565455)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565456)> CPU DETAIL: M6: 0018 
DBG(48565457)> CPU DETAIL: Transfer to T 
DBG(48565459)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565460)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48565460)> CPU DETAIL: Read R 0415: 0000000000033555 
DBG(48565461)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48565461)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48565463)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565464)> CPU DETAIL: M4: 0010 
DBG(48565465)> CPU DETAIL: M6: 0018 
DBG(48565466)> CPU DETAIL: M8: 0009 
DBG(48565469)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565470)> CPU DETAIL: M6: 0019 
DBG(48565471)> CPU DETAIL: Transfer to T 
DBG(48565473)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565474)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48565474)> CPU DETAIL: Read R 0416: 0000000000033666 
DBG(48565475)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48565475)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48565477)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565478)> CPU DETAIL: M4: 0010 
DBG(48565479)> CPU DETAIL: M6: 0019 
DBG(48565480)> CPU DETAIL: M8: 0010 
DBG(48565483)> CPU CMD: Exec 0050: 06 58 0001 0020 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565484)> CPU DETAIL: M6: 0020 
DBG(48565487)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48565488)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565489)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48565490)> CPU DETAIL: Result: 0000000000000020 
DBG(48565491)> CPU DETAIL: Write 1606: 0000000000000020 
DBG(48565493)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48565494)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48565495)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48565498)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48565499)> CPU DETAIL: Read R 0036: 0060041316080000 
DBG(48565500)> CPU DETAIL: Result: 0060042316080000 
DBG(48565501)> CPU DETAIL: Write 0036: 0060042316080000 
DBG(48565503)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48565504)> CPU DETAIL: Transfer to T 
DBG(48565506)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48565507)> CPU DETAIL: Read R 1605: 0000000000000020 
DBG(48565508)> CPU DETAIL: Read S 1606: 0000000000000020 
DBG(48565509)> CPU DETAIL: Result: 0000000000000000 
DBG(48565512)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48565513)> CPU DETAIL: REG1: 0000000000000000
DBG(48565513)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48565515)> CPU CMD: Exec 0031: 00 60 1658 0050 0000   restore instr 0050   
DBG(48565516)> CPU DETAIL: Read R 1658: 0658000100000048 
DBG(48565517)> CPU DETAIL: Write 0050: 0658000100000048 
DBG(48565519)> CPU CMD: Exec 0032: 00 40 0019 1639 0019   (0019) + 1 -> (0019) incr number of block to read from input tape 01   
DBG(48565520)> CPU DETAIL: Read R 0019: 0194039700000001 
DBG(48565521)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565522)> CPU DETAIL: Result: 0194039700000002 
DBG(48565523)> CPU DETAIL: Write 0019: 0194039700000002 
DBG(48565525)> CPU CMD: Exec 0033: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48565526)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48565527)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48565529)> CPU CMD: Exec 0034: 00 60 1645 0036 0019   restore instr 0036, goto 0019 to read next tape 1 event block   
DBG(48565530)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48565531)> CPU DETAIL: Transfer to T 
DBG(48565531)> CPU DETAIL: Write 0036: 0060040316080000 
DBG(48565533)> CPU CMD: Exec 0019: 01 94 0397 0000 0002   read input tape 01 -> (0397) record 0001      
DBG(48565534)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0002
DBG(48565534)> MT DATA: Tape unit 1: init read
DBG(48565534)> MT DETAIL: Read tape record (974 chars, used 3.41 inches, needs 21 msec) from tape 1
DBG(48565534)> MT DETAIL: Tape record contents: D*0190030103520002C*0130000000121111C*0000000231000000C*00000000000000...
DBG(48565534)> MT EXP: Start Of Block Word: 0190030103520002
DBG(48565534)> MT EXP: Read Tape Block number 0002
DBG(48565534)> MT EXP: Read forward addr 0397 to 0000
DBG(48565534)> MT EXP: Tape to CRT 0397: 0130000000121111 
DBG(48565534)> MT EXP: Tape to CRT 0398: 0000000231000000 
DBG(48565534)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0403: 3333444455660002 
DBG(48565534)> MT EXP: Tape to CRT 0404: 0000000231010000 
DBG(48565534)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0407: 0000000231020000 
DBG(48565534)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0410: 0130000000121112 
DBG(48565534)> MT EXP: Tape to CRT 0411: 0000000231010000 
DBG(48565534)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0413: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0414: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0416: 3334444455660101 
DBG(48565534)> MT EXP: Tape to CRT 0417: 0000000231000000 
DBG(48565534)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0420: 0000000231030000 
DBG(48565534)> MT EXP: Tape to CRT 0421: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0423: 0130000000121113 
DBG(48565534)> MT EXP: Tape to CRT 0424: 0000000231020003 
DBG(48565534)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0426: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0427: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0429: 3335444455660101 
DBG(48565534)> MT EXP: Tape to CRT 0430: 0000000231000000 
DBG(48565534)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0433: 0000000231030000 
DBG(48565534)> MT EXP: Tape to CRT 0434: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0435: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0436: 0130000000121114 
DBG(48565534)> MT EXP: Tape to CRT 0437: 0000000231030000 
DBG(48565534)> MT EXP: Tape to CRT 0438: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0439: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0440: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0441: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0442: 3336000000000200 
DBG(48565534)> MT EXP: Tape to CRT 0443: 0000000231010000 
DBG(48565534)> MT EXP: Tape to CRT 0444: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0445: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0446: 0000000231020000 
DBG(48565534)> MT EXP: Tape to CRT 0447: 0000000000000000 
DBG(48565534)> MT EXP: Tape to CRT 0448: 0000000000000000 
DBG(48565534)> MT EXP: End Of Block Word: 0190030103520002, data words in block: 52
DBG(48565534)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (7.30 inches)
DBG(48565537)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48565538)> CPU DETAIL: Condition not present 
DBG(48565540)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48565541)> CPU DETAIL: Condition not present 
DBG(48565543)> CPU CMD: Exec 0022: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48565544)> CPU DETAIL: Write 1603: 0190030103520002 
DBG(48565546)> CPU CMD: Exec 0023: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        01 90 aaaa bbbb nnnn ma 
DBG(48565547)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48565548)> CPU DETAIL: Result: 0000000003520000 
DBG(48565549)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000352 
DBG(48565550)> CPU DETAIL: Write 1604: 0000000000000352 
DBG(48565552)> CPU CMD: Exec 0024: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        01 90 aaaa bbbb nnnn ma 
DBG(48565553)> CPU DETAIL: Read R 1603: 0190030103520002 
DBG(48565554)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48565555)> CPU DETAIL: Result: 0000030100000000 
DBG(48565556)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48565559)> CPU CMD: Exec 0025: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48565560)> CPU DETAIL: Read R 1604: 0000000000000352 
DBG(48565561)> CPU DETAIL: Result: 0000000000000051 
DBG(48565562)> CPU DETAIL: Write 1605: 0000000000000051 
DBG(48565564)> CPU CMD: Exec 0026: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48565565)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48565566)> CPU DETAIL: Result: 0000000000000052 
DBG(48565567)> CPU DETAIL: Write 1605: 0000000000000052 
DBG(48565569)> CPU CMD: Exec 0027: 00 52 0000 0000 0000   clear M6   
DBG(48565570)> CPU DETAIL: M4: 0010 
DBG(48565571)> CPU DETAIL: Clear M6
DBG(48565571)> CPU DETAIL: M6: 0000 
DBG(48565572)> CPU DETAIL: M8: 0010 
DBG(48565575)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48565576)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48565577)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48565578)> CPU DETAIL: Result: 0000000000000052 
DBG(48565581)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48565582)> CPU DETAIL: REG1: 0000000000000052
DBG(48565582)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48565584)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48565585)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48565585)> CPU DETAIL: Read R 0397: 0130000000121111 
DBG(48565586)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48565587)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48565589)> CPU CMD: Exec 0036: 00 60 0403 1608 0000   (0403 = event w7) -> (1608)   
DBG(48565590)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48565591)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48565593)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48565594)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48565595)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48565596)> CPU DETAIL: Result: 0000000000000000 
DBG(48565597)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48565598)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48565600)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48565601)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48565602)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48565603)> CPU DETAIL: Result: 0000000000000002 
DBG(48565604)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48565606)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48565607)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48565608)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48565609)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48565612)> CPU CMD: Exec 0040: 00 60 1646 0054 0000   predecessor=0 -> set 0054 as nop to save event in tape 2   
DBG(48565613)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48565614)> CPU DETAIL: Write 0054: 0060000000000000 
DBG(48565616)> CPU CMD: Exec 0041: 00 70 1610 1640 0044   if num successors w7 = zero goto 0044   
DBG(48565617)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48565618)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48565619)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48565622)> CPU CMD: Exec 0042: 00 60 0000 0000 0045   goto 0045   
DBG(48565623)> CPU DETAIL: Transfer to T 
DBG(48565625)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48565626)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48565627)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48565630)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48565631)> CPU DETAIL: Read R 0050: 0658000100000048 
DBG(48565632)> CPU DETAIL: Result: 0658000100130048 
DBG(48565633)> CPU DETAIL: Write 0050: 0658000100130048 
DBG(48565635)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48565636)> CPU DETAIL: M4: 0010 
DBG(48565637)> CPU DETAIL: M6: 0000 
DBG(48565638)> CPU DETAIL: Clear M8
DBG(48565638)> CPU DETAIL: M8: 0000 
DBG(48565641)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565642)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48565642)> CPU DETAIL: Read R 0397: 0130000000121111 
DBG(48565643)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48565643)> CPU DETAIL: Write 0598: 0130000000121111 
DBG(48565645)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565646)> CPU DETAIL: M4: 0010 
DBG(48565647)> CPU DETAIL: M6: 0000 
DBG(48565648)> CPU DETAIL: M8: 0001 
DBG(48565651)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565652)> CPU DETAIL: M6: 0001 
DBG(48565653)> CPU DETAIL: Transfer to T 
DBG(48565655)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565656)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48565656)> CPU DETAIL: Read R 0398: 0000000231000000 
DBG(48565657)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48565657)> CPU DETAIL: Write 0599: 0000000231000000 
DBG(48565659)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565660)> CPU DETAIL: M4: 0010 
DBG(48565661)> CPU DETAIL: M6: 0001 
DBG(48565662)> CPU DETAIL: M8: 0002 
DBG(48565665)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565666)> CPU DETAIL: M6: 0002 
DBG(48565667)> CPU DETAIL: Transfer to T 
DBG(48565669)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565670)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48565670)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48565671)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48565671)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48565673)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565674)> CPU DETAIL: M4: 0010 
DBG(48565675)> CPU DETAIL: M6: 0002 
DBG(48565676)> CPU DETAIL: M8: 0003 
DBG(48565679)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565680)> CPU DETAIL: M6: 0003 
DBG(48565681)> CPU DETAIL: Transfer to T 
DBG(48565683)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565684)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48565684)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48565685)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48565685)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48565687)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565688)> CPU DETAIL: M4: 0010 
DBG(48565689)> CPU DETAIL: M6: 0003 
DBG(48565690)> CPU DETAIL: M8: 0004 
DBG(48565693)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565694)> CPU DETAIL: M6: 0004 
DBG(48565695)> CPU DETAIL: Transfer to T 
DBG(48565697)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565698)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48565698)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48565699)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48565699)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48565701)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565702)> CPU DETAIL: M4: 0010 
DBG(48565703)> CPU DETAIL: M6: 0004 
DBG(48565704)> CPU DETAIL: M8: 0005 
DBG(48565707)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565708)> CPU DETAIL: M6: 0005 
DBG(48565709)> CPU DETAIL: Transfer to T 
DBG(48565711)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565712)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48565712)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48565713)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48565713)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48565715)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565716)> CPU DETAIL: M4: 0010 
DBG(48565717)> CPU DETAIL: M6: 0005 
DBG(48565718)> CPU DETAIL: M8: 0006 
DBG(48565721)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565722)> CPU DETAIL: M6: 0006 
DBG(48565723)> CPU DETAIL: Transfer to T 
DBG(48565725)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565726)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48565726)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48565727)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48565727)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48565729)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565730)> CPU DETAIL: M4: 0010 
DBG(48565731)> CPU DETAIL: M6: 0006 
DBG(48565732)> CPU DETAIL: M8: 0007 
DBG(48565735)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565736)> CPU DETAIL: M6: 0007 
DBG(48565737)> CPU DETAIL: Transfer to T 
DBG(48565739)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565740)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48565740)> CPU DETAIL: Read R 0404: 0000000231010000 
DBG(48565741)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48565741)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48565743)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565744)> CPU DETAIL: M4: 0010 
DBG(48565745)> CPU DETAIL: M6: 0007 
DBG(48565746)> CPU DETAIL: M8: 0008 
DBG(48565749)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565750)> CPU DETAIL: M6: 0008 
DBG(48565751)> CPU DETAIL: Transfer to T 
DBG(48565753)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565754)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48565754)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48565755)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48565755)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48565757)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565758)> CPU DETAIL: M4: 0010 
DBG(48565759)> CPU DETAIL: M6: 0008 
DBG(48565760)> CPU DETAIL: M8: 0009 
DBG(48565763)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565764)> CPU DETAIL: M6: 0009 
DBG(48565765)> CPU DETAIL: Transfer to T 
DBG(48565767)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565768)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48565768)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48565769)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48565769)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48565771)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565772)> CPU DETAIL: M4: 0010 
DBG(48565773)> CPU DETAIL: M6: 0009 
DBG(48565774)> CPU DETAIL: M8: 0010 
DBG(48565777)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565778)> CPU DETAIL: M6: 0010 
DBG(48565779)> CPU DETAIL: Transfer to T 
DBG(48565781)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565782)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48565782)> CPU DETAIL: Read R 0407: 0000000231020000 
DBG(48565783)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48565783)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48565785)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565786)> CPU DETAIL: M4: 0010 
DBG(48565787)> CPU DETAIL: M6: 0010 
DBG(48565788)> CPU DETAIL: M8: 0011 
DBG(48565791)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565792)> CPU DETAIL: M6: 0011 
DBG(48565793)> CPU DETAIL: Transfer to T 
DBG(48565795)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565796)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48565796)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48565797)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48565797)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48565799)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565800)> CPU DETAIL: M4: 0010 
DBG(48565801)> CPU DETAIL: M6: 0011 
DBG(48565802)> CPU DETAIL: M8: 0012 
DBG(48565805)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565806)> CPU DETAIL: M6: 0012 
DBG(48565807)> CPU DETAIL: Transfer to T 
DBG(48565809)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48565810)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48565810)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48565811)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48565811)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48565813)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48565814)> CPU DETAIL: M4: 0010 
DBG(48565815)> CPU DETAIL: M6: 0012 
DBG(48565816)> CPU DETAIL: M8: 0013 
DBG(48565819)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48565820)> CPU DETAIL: M6: 0013 
DBG(48565823)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48565824)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48565825)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48565826)> CPU DETAIL: Result: 0000000000000013 
DBG(48565827)> CPU DETAIL: Write 1606: 0000000000000013 
DBG(48565829)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48565830)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48565831)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48565834)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48565835)> CPU DETAIL: Read R 0036: 0060040316080000 
DBG(48565836)> CPU DETAIL: Result: 0060041616080000 
DBG(48565837)> CPU DETAIL: Write 0036: 0060041616080000 
DBG(48565839)> CPU CMD: Exec 0054: 00 60 0000 0000 0000   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48565842)> CPU CMD: Exec 0055: 00 40 1611 1607 0000   (1611 num of words in output block) + (1607 event rec len NNN) -> REG1   
DBG(48565843)> CPU DETAIL: Read R 1611: 0000000000000010 
DBG(48565844)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48565845)> CPU DETAIL: Result: 0000000000000023 
DBG(48565848)> CPU CMD: Exec 0056: 00 41 1650 0000 0000   const 200 - REG1   
DBG(48565849)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48565850)> CPU DETAIL: Result: 0000000000000177 
DBG(48565853)> CPU CMD: Exec 0057: 00 63 0000 0060 0059   if =0 goto 0060, if <0 goto 0059   
DBG(48565854)> CPU DETAIL: REG1: 0000000000000177
DBG(48565854)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48565856)> CPU CMD: Exec 0058: 00 60 1647 0069 0062   enough room in out block for event: set exit to read next event rec, goto 00 
DBG(48565857)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48565858)> CPU DETAIL: Transfer to T 
DBG(48565858)> CPU DETAIL: Write 0069: 0060000000000028 
DBG(48565860)> CPU CMD: Exec 0062: 00 51 0000 0000 0000   clear M4   
DBG(48565861)> CPU DETAIL: Clear M4
DBG(48565861)> CPU DETAIL: M4: 0000 
DBG(48565862)> CPU DETAIL: M6: 0013 
DBG(48565863)> CPU DETAIL: M8: 0013 
DBG(48565866)> CPU CMD: Exec 0063: 96 60 1607 0000 0000   set instr 0068    
DBG(48565867)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48565868)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48565871)> CPU CMD: Exec 0064: 00 40 1649 0000 0068   ... to loop if M4<>(1607 event rec len NNN)   
DBG(48565872)> CPU DETAIL: Read R 1649: 0458000100000065 
DBG(48565873)> CPU DETAIL: Result: 0458000100130065 
DBG(48565874)> CPU DETAIL: Write 0068: 0458000100130065 
DBG(48565876)> CPU CMD: Exec 0065: 00 60 4598 0808 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565877)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48565877)> CPU DETAIL: Read R 0598: 0130000000121111 
DBG(48565878)> CPU DETAIL: Write 0808: 0130000000121111 
DBG(48565880)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565881)> CPU DETAIL: Read R 0065: 0060459808080000 
DBG(48565882)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565883)> CPU DETAIL: Result: 0060459808090000 
DBG(48565884)> CPU DETAIL: Write 0065: 0060459808090000 
DBG(48565886)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565887)> CPU DETAIL: Read R 1611: 0000000000000010 
DBG(48565888)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565889)> CPU DETAIL: Result: 0000000000000011 
DBG(48565890)> CPU DETAIL: Write 1611: 0000000000000011 
DBG(48565892)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565893)> CPU DETAIL: M4: 0001 
DBG(48565894)> CPU DETAIL: Transfer to T 
DBG(48565896)> CPU CMD: Exec 0065: 00 60 4598 0809 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565897)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48565897)> CPU DETAIL: Read R 0599: 0000000231000000 
DBG(48565898)> CPU DETAIL: Write 0809: 0000000231000000 
DBG(48565900)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565901)> CPU DETAIL: Read R 0065: 0060459808090000 
DBG(48565902)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565903)> CPU DETAIL: Result: 0060459808100000 
DBG(48565904)> CPU DETAIL: Write 0065: 0060459808100000 
DBG(48565906)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565907)> CPU DETAIL: Read R 1611: 0000000000000011 
DBG(48565908)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565909)> CPU DETAIL: Result: 0000000000000012 
DBG(48565910)> CPU DETAIL: Write 1611: 0000000000000012 
DBG(48565912)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565913)> CPU DETAIL: M4: 0002 
DBG(48565914)> CPU DETAIL: Transfer to T 
DBG(48565916)> CPU CMD: Exec 0065: 00 60 4598 0810 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565917)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48565917)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48565918)> CPU DETAIL: Write 0810: 0000000000000000 
DBG(48565920)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565921)> CPU DETAIL: Read R 0065: 0060459808100000 
DBG(48565922)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565923)> CPU DETAIL: Result: 0060459808110000 
DBG(48565924)> CPU DETAIL: Write 0065: 0060459808110000 
DBG(48565926)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565927)> CPU DETAIL: Read R 1611: 0000000000000012 
DBG(48565928)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565929)> CPU DETAIL: Result: 0000000000000013 
DBG(48565930)> CPU DETAIL: Write 1611: 0000000000000013 
DBG(48565932)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565933)> CPU DETAIL: M4: 0003 
DBG(48565934)> CPU DETAIL: Transfer to T 
DBG(48565936)> CPU CMD: Exec 0065: 00 60 4598 0811 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565937)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48565937)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48565938)> CPU DETAIL: Write 0811: 0000000000000000 
DBG(48565940)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565941)> CPU DETAIL: Read R 0065: 0060459808110000 
DBG(48565942)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565943)> CPU DETAIL: Result: 0060459808120000 
DBG(48565944)> CPU DETAIL: Write 0065: 0060459808120000 
DBG(48565946)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565947)> CPU DETAIL: Read R 1611: 0000000000000013 
DBG(48565948)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565949)> CPU DETAIL: Result: 0000000000000014 
DBG(48565950)> CPU DETAIL: Write 1611: 0000000000000014 
DBG(48565952)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565953)> CPU DETAIL: M4: 0004 
DBG(48565954)> CPU DETAIL: Transfer to T 
DBG(48565956)> CPU CMD: Exec 0065: 00 60 4598 0812 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565957)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48565957)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48565958)> CPU DETAIL: Write 0812: 0000000000000000 
DBG(48565960)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565961)> CPU DETAIL: Read R 0065: 0060459808120000 
DBG(48565962)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565963)> CPU DETAIL: Result: 0060459808130000 
DBG(48565964)> CPU DETAIL: Write 0065: 0060459808130000 
DBG(48565966)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565967)> CPU DETAIL: Read R 1611: 0000000000000014 
DBG(48565968)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565969)> CPU DETAIL: Result: 0000000000000015 
DBG(48565970)> CPU DETAIL: Write 1611: 0000000000000015 
DBG(48565972)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565973)> CPU DETAIL: M4: 0005 
DBG(48565974)> CPU DETAIL: Transfer to T 
DBG(48565976)> CPU CMD: Exec 0065: 00 60 4598 0813 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565977)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48565977)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48565978)> CPU DETAIL: Write 0813: 0000000000000000 
DBG(48565980)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48565981)> CPU DETAIL: Read R 0065: 0060459808130000 
DBG(48565982)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48565983)> CPU DETAIL: Result: 0060459808140000 
DBG(48565984)> CPU DETAIL: Write 0065: 0060459808140000 
DBG(48565986)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48565987)> CPU DETAIL: Read R 1611: 0000000000000015 
DBG(48565988)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48565989)> CPU DETAIL: Result: 0000000000000016 
DBG(48565990)> CPU DETAIL: Write 1611: 0000000000000016 
DBG(48565992)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48565993)> CPU DETAIL: M4: 0006 
DBG(48565994)> CPU DETAIL: Transfer to T 
DBG(48565996)> CPU CMD: Exec 0065: 00 60 4598 0814 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48565997)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48565997)> CPU DETAIL: Read R 0604: 3333444455660002 
DBG(48565998)> CPU DETAIL: Write 0814: 3333444455660002 
DBG(48566000)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566001)> CPU DETAIL: Read R 0065: 0060459808140000 
DBG(48566002)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566003)> CPU DETAIL: Result: 0060459808150000 
DBG(48566004)> CPU DETAIL: Write 0065: 0060459808150000 
DBG(48566006)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566007)> CPU DETAIL: Read R 1611: 0000000000000016 
DBG(48566008)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566009)> CPU DETAIL: Result: 0000000000000017 
DBG(48566010)> CPU DETAIL: Write 1611: 0000000000000017 
DBG(48566012)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566013)> CPU DETAIL: M4: 0007 
DBG(48566014)> CPU DETAIL: Transfer to T 
DBG(48566016)> CPU CMD: Exec 0065: 00 60 4598 0815 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566017)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48566017)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48566018)> CPU DETAIL: Write 0815: 0000000231010000 
DBG(48566020)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566021)> CPU DETAIL: Read R 0065: 0060459808150000 
DBG(48566022)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566023)> CPU DETAIL: Result: 0060459808160000 
DBG(48566024)> CPU DETAIL: Write 0065: 0060459808160000 
DBG(48566026)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566027)> CPU DETAIL: Read R 1611: 0000000000000017 
DBG(48566028)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566029)> CPU DETAIL: Result: 0000000000000018 
DBG(48566030)> CPU DETAIL: Write 1611: 0000000000000018 
DBG(48566032)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566033)> CPU DETAIL: M4: 0008 
DBG(48566034)> CPU DETAIL: Transfer to T 
DBG(48566036)> CPU CMD: Exec 0065: 00 60 4598 0816 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566037)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48566037)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48566038)> CPU DETAIL: Write 0816: 0000000000000000 
DBG(48566040)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566041)> CPU DETAIL: Read R 0065: 0060459808160000 
DBG(48566042)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566043)> CPU DETAIL: Result: 0060459808170000 
DBG(48566044)> CPU DETAIL: Write 0065: 0060459808170000 
DBG(48566046)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566047)> CPU DETAIL: Read R 1611: 0000000000000018 
DBG(48566048)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566049)> CPU DETAIL: Result: 0000000000000019 
DBG(48566050)> CPU DETAIL: Write 1611: 0000000000000019 
DBG(48566052)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566053)> CPU DETAIL: M4: 0009 
DBG(48566054)> CPU DETAIL: Transfer to T 
DBG(48566056)> CPU CMD: Exec 0065: 00 60 4598 0817 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566057)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48566057)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48566058)> CPU DETAIL: Write 0817: 0000000000000000 
DBG(48566060)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566061)> CPU DETAIL: Read R 0065: 0060459808170000 
DBG(48566062)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566063)> CPU DETAIL: Result: 0060459808180000 
DBG(48566064)> CPU DETAIL: Write 0065: 0060459808180000 
DBG(48566066)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566067)> CPU DETAIL: Read R 1611: 0000000000000019 
DBG(48566068)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566069)> CPU DETAIL: Result: 0000000000000020 
DBG(48566070)> CPU DETAIL: Write 1611: 0000000000000020 
DBG(48566072)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566073)> CPU DETAIL: M4: 0010 
DBG(48566074)> CPU DETAIL: Transfer to T 
DBG(48566076)> CPU CMD: Exec 0065: 00 60 4598 0818 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566077)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48566077)> CPU DETAIL: Read R 0608: 0000000231020000 
DBG(48566078)> CPU DETAIL: Write 0818: 0000000231020000 
DBG(48566080)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566081)> CPU DETAIL: Read R 0065: 0060459808180000 
DBG(48566082)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566083)> CPU DETAIL: Result: 0060459808190000 
DBG(48566084)> CPU DETAIL: Write 0065: 0060459808190000 
DBG(48566086)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566087)> CPU DETAIL: Read R 1611: 0000000000000020 
DBG(48566088)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566089)> CPU DETAIL: Result: 0000000000000021 
DBG(48566090)> CPU DETAIL: Write 1611: 0000000000000021 
DBG(48566092)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566093)> CPU DETAIL: M4: 0011 
DBG(48566094)> CPU DETAIL: Transfer to T 
DBG(48566096)> CPU CMD: Exec 0065: 00 60 4598 0819 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566097)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48566097)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48566098)> CPU DETAIL: Write 0819: 0000000000000000 
DBG(48566100)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566101)> CPU DETAIL: Read R 0065: 0060459808190000 
DBG(48566102)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566103)> CPU DETAIL: Result: 0060459808200000 
DBG(48566104)> CPU DETAIL: Write 0065: 0060459808200000 
DBG(48566106)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566107)> CPU DETAIL: Read R 1611: 0000000000000021 
DBG(48566108)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566109)> CPU DETAIL: Result: 0000000000000022 
DBG(48566110)> CPU DETAIL: Write 1611: 0000000000000022 
DBG(48566112)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566113)> CPU DETAIL: M4: 0012 
DBG(48566114)> CPU DETAIL: Transfer to T 
DBG(48566116)> CPU CMD: Exec 0065: 00 60 4598 0820 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48566117)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48566117)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48566118)> CPU DETAIL: Write 0820: 0000000000000000 
DBG(48566120)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48566121)> CPU DETAIL: Read R 0065: 0060459808200000 
DBG(48566122)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48566123)> CPU DETAIL: Result: 0060459808210000 
DBG(48566124)> CPU DETAIL: Write 0065: 0060459808210000 
DBG(48566126)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48566127)> CPU DETAIL: Read R 1611: 0000000000000022 
DBG(48566128)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566129)> CPU DETAIL: Result: 0000000000000023 
DBG(48566130)> CPU DETAIL: Write 1611: 0000000000000023 
DBG(48566132)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48566133)> CPU DETAIL: M4: 0013 
DBG(48566136)> CPU CMD: Exec 0069: 00 60 0000 0000 0028   exit: goto 0028 read next event rec   
DBG(48566137)> CPU DETAIL: Transfer to T 
DBG(48566139)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48566140)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48566141)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48566142)> CPU DETAIL: Result: 0000000000000039 
DBG(48566145)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48566146)> CPU DETAIL: REG1: 0000000000000039
DBG(48566146)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48566148)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48566149)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48566149)> CPU DETAIL: Read R 0410: 0130000000121112 
DBG(48566150)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48566151)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48566153)> CPU CMD: Exec 0036: 00 60 0416 1608 0000   (0403 = event w7) -> (1608)   
DBG(48566154)> CPU DETAIL: Read R 0416: 3334444455660101 
DBG(48566155)> CPU DETAIL: Write 1608: 3334444455660101 
DBG(48566157)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48566158)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48566159)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48566160)> CPU DETAIL: Result: 0000000000000100 
DBG(48566161)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48566162)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48566164)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48566165)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48566166)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48566167)> CPU DETAIL: Result: 0000000000000001 
DBG(48566168)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48566170)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48566171)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48566172)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48566173)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48566174)> CPU DETAIL: Transfer to T 
DBG(48566176)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48566177)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48566178)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48566180)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48566181)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566182)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48566185)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48566186)> CPU DETAIL: Read R 0050: 0658000100130048 
DBG(48566187)> CPU DETAIL: Result: 0658000100260048 
DBG(48566188)> CPU DETAIL: Write 0050: 0658000100260048 
DBG(48566190)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48566191)> CPU DETAIL: M4: 0013 
DBG(48566192)> CPU DETAIL: M6: 0013 
DBG(48566193)> CPU DETAIL: Clear M8
DBG(48566193)> CPU DETAIL: M8: 0000 
DBG(48566196)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566197)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48566197)> CPU DETAIL: Read R 0410: 0130000000121112 
DBG(48566198)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48566198)> CPU DETAIL: Write 0598: 0130000000121112 
DBG(48566200)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566201)> CPU DETAIL: M4: 0013 
DBG(48566202)> CPU DETAIL: M6: 0013 
DBG(48566203)> CPU DETAIL: M8: 0001 
DBG(48566206)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566207)> CPU DETAIL: M6: 0014 
DBG(48566208)> CPU DETAIL: Transfer to T 
DBG(48566210)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566211)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48566211)> CPU DETAIL: Read R 0411: 0000000231010000 
DBG(48566212)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48566212)> CPU DETAIL: Write 0599: 0000000231010000 
DBG(48566214)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566215)> CPU DETAIL: M4: 0013 
DBG(48566216)> CPU DETAIL: M6: 0014 
DBG(48566217)> CPU DETAIL: M8: 0002 
DBG(48566220)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566221)> CPU DETAIL: M6: 0015 
DBG(48566222)> CPU DETAIL: Transfer to T 
DBG(48566224)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566225)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48566225)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48566226)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48566226)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48566228)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566229)> CPU DETAIL: M4: 0013 
DBG(48566230)> CPU DETAIL: M6: 0015 
DBG(48566231)> CPU DETAIL: M8: 0003 
DBG(48566234)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566235)> CPU DETAIL: M6: 0016 
DBG(48566236)> CPU DETAIL: Transfer to T 
DBG(48566238)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566239)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48566239)> CPU DETAIL: Read R 0413: 0000000000000000 
DBG(48566240)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48566240)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48566242)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566243)> CPU DETAIL: M4: 0013 
DBG(48566244)> CPU DETAIL: M6: 0016 
DBG(48566245)> CPU DETAIL: M8: 0004 
DBG(48566248)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566249)> CPU DETAIL: M6: 0017 
DBG(48566250)> CPU DETAIL: Transfer to T 
DBG(48566252)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566253)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48566253)> CPU DETAIL: Read R 0414: 0000000000000000 
DBG(48566254)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48566254)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48566256)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566257)> CPU DETAIL: M4: 0013 
DBG(48566258)> CPU DETAIL: M6: 0017 
DBG(48566259)> CPU DETAIL: M8: 0005 
DBG(48566262)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566263)> CPU DETAIL: M6: 0018 
DBG(48566264)> CPU DETAIL: Transfer to T 
DBG(48566266)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566267)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48566267)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48566268)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48566268)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48566270)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566271)> CPU DETAIL: M4: 0013 
DBG(48566272)> CPU DETAIL: M6: 0018 
DBG(48566273)> CPU DETAIL: M8: 0006 
DBG(48566276)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566277)> CPU DETAIL: M6: 0019 
DBG(48566278)> CPU DETAIL: Transfer to T 
DBG(48566280)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566281)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48566281)> CPU DETAIL: Read R 0416: 3334444455660101 
DBG(48566282)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48566282)> CPU DETAIL: Write 0604: 3334444455660101 
DBG(48566284)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566285)> CPU DETAIL: M4: 0013 
DBG(48566286)> CPU DETAIL: M6: 0019 
DBG(48566287)> CPU DETAIL: M8: 0007 
DBG(48566290)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566291)> CPU DETAIL: M6: 0020 
DBG(48566292)> CPU DETAIL: Transfer to T 
DBG(48566294)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566295)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48566295)> CPU DETAIL: Read R 0417: 0000000231000000 
DBG(48566296)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48566296)> CPU DETAIL: Write 0605: 0000000231000000 
DBG(48566298)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566299)> CPU DETAIL: M4: 0013 
DBG(48566300)> CPU DETAIL: M6: 0020 
DBG(48566301)> CPU DETAIL: M8: 0008 
DBG(48566304)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566305)> CPU DETAIL: M6: 0021 
DBG(48566306)> CPU DETAIL: Transfer to T 
DBG(48566308)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566309)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48566309)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48566310)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48566310)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48566312)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566313)> CPU DETAIL: M4: 0013 
DBG(48566314)> CPU DETAIL: M6: 0021 
DBG(48566315)> CPU DETAIL: M8: 0009 
DBG(48566318)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566319)> CPU DETAIL: M6: 0022 
DBG(48566320)> CPU DETAIL: Transfer to T 
DBG(48566322)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566323)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48566323)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48566324)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48566324)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48566326)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566327)> CPU DETAIL: M4: 0013 
DBG(48566328)> CPU DETAIL: M6: 0022 
DBG(48566329)> CPU DETAIL: M8: 0010 
DBG(48566332)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566333)> CPU DETAIL: M6: 0023 
DBG(48566334)> CPU DETAIL: Transfer to T 
DBG(48566336)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566337)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48566337)> CPU DETAIL: Read R 0420: 0000000231030000 
DBG(48566338)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48566338)> CPU DETAIL: Write 0608: 0000000231030000 
DBG(48566340)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566341)> CPU DETAIL: M4: 0013 
DBG(48566342)> CPU DETAIL: M6: 0023 
DBG(48566343)> CPU DETAIL: M8: 0011 
DBG(48566346)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566347)> CPU DETAIL: M6: 0024 
DBG(48566348)> CPU DETAIL: Transfer to T 
DBG(48566350)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566351)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48566351)> CPU DETAIL: Read R 0421: 0000000000000000 
DBG(48566352)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48566352)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48566354)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566355)> CPU DETAIL: M4: 0013 
DBG(48566356)> CPU DETAIL: M6: 0024 
DBG(48566357)> CPU DETAIL: M8: 0012 
DBG(48566360)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566361)> CPU DETAIL: M6: 0025 
DBG(48566362)> CPU DETAIL: Transfer to T 
DBG(48566364)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566365)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48566365)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48566366)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48566366)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48566368)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566369)> CPU DETAIL: M4: 0013 
DBG(48566370)> CPU DETAIL: M6: 0025 
DBG(48566371)> CPU DETAIL: M8: 0013 
DBG(48566374)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566375)> CPU DETAIL: M6: 0026 
DBG(48566378)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48566379)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566380)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48566381)> CPU DETAIL: Result: 0000000000000026 
DBG(48566382)> CPU DETAIL: Write 1606: 0000000000000026 
DBG(48566384)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48566385)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566386)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48566389)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48566390)> CPU DETAIL: Read R 0036: 0060041616080000 
DBG(48566391)> CPU DETAIL: Result: 0060042916080000 
DBG(48566392)> CPU DETAIL: Write 0036: 0060042916080000 
DBG(48566394)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48566395)> CPU DETAIL: Transfer to T 
DBG(48566397)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48566398)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48566399)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48566400)> CPU DETAIL: Result: 0000000000000026 
DBG(48566403)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48566404)> CPU DETAIL: REG1: 0000000000000026
DBG(48566404)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48566406)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48566407)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48566407)> CPU DETAIL: Read R 0423: 0130000000121113 
DBG(48566408)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48566409)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48566411)> CPU CMD: Exec 0036: 00 60 0429 1608 0000   (0403 = event w7) -> (1608)   
DBG(48566412)> CPU DETAIL: Read R 0429: 3335444455660101 
DBG(48566413)> CPU DETAIL: Write 1608: 3335444455660101 
DBG(48566415)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48566416)> CPU DETAIL: Read R 1608: 3335444455660101 
DBG(48566417)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48566418)> CPU DETAIL: Result: 0000000000000100 
DBG(48566419)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48566420)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48566422)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48566423)> CPU DETAIL: Read R 1608: 3335444455660101 
DBG(48566424)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48566425)> CPU DETAIL: Result: 0000000000000001 
DBG(48566426)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48566428)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48566429)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48566430)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48566431)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48566432)> CPU DETAIL: Transfer to T 
DBG(48566434)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48566435)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48566436)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48566438)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48566439)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566440)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48566443)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48566444)> CPU DETAIL: Read R 0050: 0658000100260048 
DBG(48566445)> CPU DETAIL: Result: 0658000100390048 
DBG(48566446)> CPU DETAIL: Write 0050: 0658000100390048 
DBG(48566448)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48566449)> CPU DETAIL: M4: 0013 
DBG(48566450)> CPU DETAIL: M6: 0026 
DBG(48566451)> CPU DETAIL: Clear M8
DBG(48566451)> CPU DETAIL: M8: 0000 
DBG(48566454)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566455)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48566455)> CPU DETAIL: Read R 0423: 0130000000121113 
DBG(48566456)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48566456)> CPU DETAIL: Write 0598: 0130000000121113 
DBG(48566458)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566459)> CPU DETAIL: M4: 0013 
DBG(48566460)> CPU DETAIL: M6: 0026 
DBG(48566461)> CPU DETAIL: M8: 0001 
DBG(48566464)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566465)> CPU DETAIL: M6: 0027 
DBG(48566466)> CPU DETAIL: Transfer to T 
DBG(48566468)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566469)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48566469)> CPU DETAIL: Read R 0424: 0000000231020003 
DBG(48566470)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48566470)> CPU DETAIL: Write 0599: 0000000231020003 
DBG(48566472)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566473)> CPU DETAIL: M4: 0013 
DBG(48566474)> CPU DETAIL: M6: 0027 
DBG(48566475)> CPU DETAIL: M8: 0002 
DBG(48566478)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566479)> CPU DETAIL: M6: 0028 
DBG(48566480)> CPU DETAIL: Transfer to T 
DBG(48566482)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566483)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48566483)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48566484)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48566484)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48566486)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566487)> CPU DETAIL: M4: 0013 
DBG(48566488)> CPU DETAIL: M6: 0028 
DBG(48566489)> CPU DETAIL: M8: 0003 
DBG(48566492)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566493)> CPU DETAIL: M6: 0029 
DBG(48566494)> CPU DETAIL: Transfer to T 
DBG(48566496)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566497)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48566497)> CPU DETAIL: Read R 0426: 0000000000000000 
DBG(48566498)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48566498)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48566500)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566501)> CPU DETAIL: M4: 0013 
DBG(48566502)> CPU DETAIL: M6: 0029 
DBG(48566503)> CPU DETAIL: M8: 0004 
DBG(48566506)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566507)> CPU DETAIL: M6: 0030 
DBG(48566508)> CPU DETAIL: Transfer to T 
DBG(48566510)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566511)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48566511)> CPU DETAIL: Read R 0427: 0000000000000000 
DBG(48566512)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48566512)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48566514)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566515)> CPU DETAIL: M4: 0013 
DBG(48566516)> CPU DETAIL: M6: 0030 
DBG(48566517)> CPU DETAIL: M8: 0005 
DBG(48566520)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566521)> CPU DETAIL: M6: 0031 
DBG(48566522)> CPU DETAIL: Transfer to T 
DBG(48566524)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566525)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48566525)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48566526)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48566526)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48566528)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566529)> CPU DETAIL: M4: 0013 
DBG(48566530)> CPU DETAIL: M6: 0031 
DBG(48566531)> CPU DETAIL: M8: 0006 
DBG(48566534)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566535)> CPU DETAIL: M6: 0032 
DBG(48566536)> CPU DETAIL: Transfer to T 
DBG(48566538)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566539)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48566539)> CPU DETAIL: Read R 0429: 3335444455660101 
DBG(48566540)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48566540)> CPU DETAIL: Write 0604: 3335444455660101 
DBG(48566542)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566543)> CPU DETAIL: M4: 0013 
DBG(48566544)> CPU DETAIL: M6: 0032 
DBG(48566545)> CPU DETAIL: M8: 0007 
DBG(48566548)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566549)> CPU DETAIL: M6: 0033 
DBG(48566550)> CPU DETAIL: Transfer to T 
DBG(48566552)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566553)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48566553)> CPU DETAIL: Read R 0430: 0000000231000000 
DBG(48566554)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48566554)> CPU DETAIL: Write 0605: 0000000231000000 
DBG(48566556)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566557)> CPU DETAIL: M4: 0013 
DBG(48566558)> CPU DETAIL: M6: 0033 
DBG(48566559)> CPU DETAIL: M8: 0008 
DBG(48566562)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566563)> CPU DETAIL: M6: 0034 
DBG(48566564)> CPU DETAIL: Transfer to T 
DBG(48566566)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566567)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48566567)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48566568)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48566568)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48566570)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566571)> CPU DETAIL: M4: 0013 
DBG(48566572)> CPU DETAIL: M6: 0034 
DBG(48566573)> CPU DETAIL: M8: 0009 
DBG(48566576)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566577)> CPU DETAIL: M6: 0035 
DBG(48566578)> CPU DETAIL: Transfer to T 
DBG(48566580)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566581)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48566581)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48566582)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48566582)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48566584)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566585)> CPU DETAIL: M4: 0013 
DBG(48566586)> CPU DETAIL: M6: 0035 
DBG(48566587)> CPU DETAIL: M8: 0010 
DBG(48566590)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566591)> CPU DETAIL: M6: 0036 
DBG(48566592)> CPU DETAIL: Transfer to T 
DBG(48566594)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566595)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48566595)> CPU DETAIL: Read R 0433: 0000000231030000 
DBG(48566596)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48566596)> CPU DETAIL: Write 0608: 0000000231030000 
DBG(48566598)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566599)> CPU DETAIL: M4: 0013 
DBG(48566600)> CPU DETAIL: M6: 0036 
DBG(48566601)> CPU DETAIL: M8: 0011 
DBG(48566604)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566605)> CPU DETAIL: M6: 0037 
DBG(48566606)> CPU DETAIL: Transfer to T 
DBG(48566608)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566609)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48566609)> CPU DETAIL: Read R 0434: 0000000000000000 
DBG(48566610)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48566610)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48566612)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566613)> CPU DETAIL: M4: 0013 
DBG(48566614)> CPU DETAIL: M6: 0037 
DBG(48566615)> CPU DETAIL: M8: 0012 
DBG(48566618)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566619)> CPU DETAIL: M6: 0038 
DBG(48566620)> CPU DETAIL: Transfer to T 
DBG(48566622)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566623)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48566623)> CPU DETAIL: Read R 0435: 0000000000000000 
DBG(48566624)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48566624)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48566626)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566627)> CPU DETAIL: M4: 0013 
DBG(48566628)> CPU DETAIL: M6: 0038 
DBG(48566629)> CPU DETAIL: M8: 0013 
DBG(48566632)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566633)> CPU DETAIL: M6: 0039 
DBG(48566636)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48566637)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566638)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48566639)> CPU DETAIL: Result: 0000000000000039 
DBG(48566640)> CPU DETAIL: Write 1606: 0000000000000039 
DBG(48566642)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48566643)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566644)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48566647)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48566648)> CPU DETAIL: Read R 0036: 0060042916080000 
DBG(48566649)> CPU DETAIL: Result: 0060044216080000 
DBG(48566650)> CPU DETAIL: Write 0036: 0060044216080000 
DBG(48566652)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48566653)> CPU DETAIL: Transfer to T 
DBG(48566655)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48566656)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48566657)> CPU DETAIL: Read S 1606: 0000000000000039 
DBG(48566658)> CPU DETAIL: Result: 0000000000000013 
DBG(48566661)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48566662)> CPU DETAIL: REG1: 0000000000000013
DBG(48566662)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48566664)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48566665)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48566665)> CPU DETAIL: Read R 0436: 0130000000121114 
DBG(48566666)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48566667)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48566669)> CPU CMD: Exec 0036: 00 60 0442 1608 0000   (0403 = event w7) -> (1608)   
DBG(48566670)> CPU DETAIL: Read R 0442: 3336000000000200 
DBG(48566671)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48566673)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48566674)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48566675)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48566676)> CPU DETAIL: Result: 0000000000000200 
DBG(48566677)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48566678)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48566680)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48566681)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48566682)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48566683)> CPU DETAIL: Result: 0000000000000000 
DBG(48566684)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48566686)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48566687)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48566688)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48566689)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48566690)> CPU DETAIL: Transfer to T 
DBG(48566692)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48566693)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48566694)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48566696)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48566697)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566698)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48566701)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48566702)> CPU DETAIL: Read R 0050: 0658000100390048 
DBG(48566703)> CPU DETAIL: Result: 0658000100520048 
DBG(48566704)> CPU DETAIL: Write 0050: 0658000100520048 
DBG(48566706)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48566707)> CPU DETAIL: M4: 0013 
DBG(48566708)> CPU DETAIL: M6: 0039 
DBG(48566709)> CPU DETAIL: Clear M8
DBG(48566709)> CPU DETAIL: M8: 0000 
DBG(48566712)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566713)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48566713)> CPU DETAIL: Read R 0436: 0130000000121114 
DBG(48566714)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48566714)> CPU DETAIL: Write 0598: 0130000000121114 
DBG(48566716)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566717)> CPU DETAIL: M4: 0013 
DBG(48566718)> CPU DETAIL: M6: 0039 
DBG(48566719)> CPU DETAIL: M8: 0001 
DBG(48566722)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566723)> CPU DETAIL: M6: 0040 
DBG(48566724)> CPU DETAIL: Transfer to T 
DBG(48566726)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566727)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48566727)> CPU DETAIL: Read R 0437: 0000000231030000 
DBG(48566728)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48566728)> CPU DETAIL: Write 0599: 0000000231030000 
DBG(48566730)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566731)> CPU DETAIL: M4: 0013 
DBG(48566732)> CPU DETAIL: M6: 0040 
DBG(48566733)> CPU DETAIL: M8: 0002 
DBG(48566736)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566737)> CPU DETAIL: M6: 0041 
DBG(48566738)> CPU DETAIL: Transfer to T 
DBG(48566740)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566741)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48566741)> CPU DETAIL: Read R 0438: 0000000000000000 
DBG(48566742)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48566742)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48566744)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566745)> CPU DETAIL: M4: 0013 
DBG(48566746)> CPU DETAIL: M6: 0041 
DBG(48566747)> CPU DETAIL: M8: 0003 
DBG(48566750)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566751)> CPU DETAIL: M6: 0042 
DBG(48566752)> CPU DETAIL: Transfer to T 
DBG(48566754)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566755)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48566755)> CPU DETAIL: Read R 0439: 0000000000000000 
DBG(48566756)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48566756)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48566758)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566759)> CPU DETAIL: M4: 0013 
DBG(48566760)> CPU DETAIL: M6: 0042 
DBG(48566761)> CPU DETAIL: M8: 0004 
DBG(48566764)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566765)> CPU DETAIL: M6: 0043 
DBG(48566766)> CPU DETAIL: Transfer to T 
DBG(48566768)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566769)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48566769)> CPU DETAIL: Read R 0440: 0000000000000000 
DBG(48566770)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48566770)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48566772)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566773)> CPU DETAIL: M4: 0013 
DBG(48566774)> CPU DETAIL: M6: 0043 
DBG(48566775)> CPU DETAIL: M8: 0005 
DBG(48566778)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566779)> CPU DETAIL: M6: 0044 
DBG(48566780)> CPU DETAIL: Transfer to T 
DBG(48566782)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566783)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48566783)> CPU DETAIL: Read R 0441: 0000000000000000 
DBG(48566784)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48566784)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48566786)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566787)> CPU DETAIL: M4: 0013 
DBG(48566788)> CPU DETAIL: M6: 0044 
DBG(48566789)> CPU DETAIL: M8: 0006 
DBG(48566792)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566793)> CPU DETAIL: M6: 0045 
DBG(48566794)> CPU DETAIL: Transfer to T 
DBG(48566796)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566797)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48566797)> CPU DETAIL: Read R 0442: 3336000000000200 
DBG(48566798)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48566798)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48566800)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566801)> CPU DETAIL: M4: 0013 
DBG(48566802)> CPU DETAIL: M6: 0045 
DBG(48566803)> CPU DETAIL: M8: 0007 
DBG(48566806)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566807)> CPU DETAIL: M6: 0046 
DBG(48566808)> CPU DETAIL: Transfer to T 
DBG(48566810)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566811)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48566811)> CPU DETAIL: Read R 0443: 0000000231010000 
DBG(48566812)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48566812)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48566814)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566815)> CPU DETAIL: M4: 0013 
DBG(48566816)> CPU DETAIL: M6: 0046 
DBG(48566817)> CPU DETAIL: M8: 0008 
DBG(48566820)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566821)> CPU DETAIL: M6: 0047 
DBG(48566822)> CPU DETAIL: Transfer to T 
DBG(48566824)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566825)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48566825)> CPU DETAIL: Read R 0444: 0000000000000000 
DBG(48566826)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48566826)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48566828)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566829)> CPU DETAIL: M4: 0013 
DBG(48566830)> CPU DETAIL: M6: 0047 
DBG(48566831)> CPU DETAIL: M8: 0009 
DBG(48566834)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566835)> CPU DETAIL: M6: 0048 
DBG(48566836)> CPU DETAIL: Transfer to T 
DBG(48566838)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566839)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48566839)> CPU DETAIL: Read R 0445: 0000000000000000 
DBG(48566840)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48566840)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48566842)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566843)> CPU DETAIL: M4: 0013 
DBG(48566844)> CPU DETAIL: M6: 0048 
DBG(48566845)> CPU DETAIL: M8: 0010 
DBG(48566848)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566849)> CPU DETAIL: M6: 0049 
DBG(48566850)> CPU DETAIL: Transfer to T 
DBG(48566852)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566853)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48566853)> CPU DETAIL: Read R 0446: 0000000231020000 
DBG(48566854)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48566854)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48566856)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566857)> CPU DETAIL: M4: 0013 
DBG(48566858)> CPU DETAIL: M6: 0049 
DBG(48566859)> CPU DETAIL: M8: 0011 
DBG(48566862)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566863)> CPU DETAIL: M6: 0050 
DBG(48566864)> CPU DETAIL: Transfer to T 
DBG(48566866)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566867)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48566867)> CPU DETAIL: Read R 0447: 0000000000000000 
DBG(48566868)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48566868)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48566870)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566871)> CPU DETAIL: M4: 0013 
DBG(48566872)> CPU DETAIL: M6: 0050 
DBG(48566873)> CPU DETAIL: M8: 0012 
DBG(48566876)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566877)> CPU DETAIL: M6: 0051 
DBG(48566878)> CPU DETAIL: Transfer to T 
DBG(48566880)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48566881)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48566881)> CPU DETAIL: Read R 0448: 0000000000000000 
DBG(48566882)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48566882)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48566884)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48566885)> CPU DETAIL: M4: 0013 
DBG(48566886)> CPU DETAIL: M6: 0051 
DBG(48566887)> CPU DETAIL: M8: 0013 
DBG(48566890)> CPU CMD: Exec 0050: 06 58 0001 0052 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48566891)> CPU DETAIL: M6: 0052 
DBG(48566894)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48566895)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566896)> CPU DETAIL: Read S 1606: 0000000000000039 
DBG(48566897)> CPU DETAIL: Result: 0000000000000052 
DBG(48566898)> CPU DETAIL: Write 1606: 0000000000000052 
DBG(48566900)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48566901)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48566902)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48566905)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48566906)> CPU DETAIL: Read R 0036: 0060044216080000 
DBG(48566907)> CPU DETAIL: Result: 0060045516080000 
DBG(48566908)> CPU DETAIL: Write 0036: 0060045516080000 
DBG(48566910)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48566911)> CPU DETAIL: Transfer to T 
DBG(48566913)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48566914)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48566915)> CPU DETAIL: Read S 1606: 0000000000000052 
DBG(48566916)> CPU DETAIL: Result: 0000000000000000 
DBG(48566919)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48566920)> CPU DETAIL: REG1: 0000000000000000
DBG(48566920)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48566922)> CPU CMD: Exec 0031: 00 60 1658 0050 0000   restore instr 0050   
DBG(48566923)> CPU DETAIL: Read R 1658: 0658000100000048 
DBG(48566924)> CPU DETAIL: Write 0050: 0658000100000048 
DBG(48566926)> CPU CMD: Exec 0032: 00 40 0019 1639 0019   (0019) + 1 -> (0019) incr number of block to read from input tape 01   
DBG(48566927)> CPU DETAIL: Read R 0019: 0194039700000002 
DBG(48566928)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48566929)> CPU DETAIL: Result: 0194039700000003 
DBG(48566930)> CPU DETAIL: Write 0019: 0194039700000003 
DBG(48566932)> CPU CMD: Exec 0033: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48566933)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48566934)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48566936)> CPU CMD: Exec 0034: 00 60 1645 0036 0019   restore instr 0036, goto 0019 to read next tape 1 event block   
DBG(48566937)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48566938)> CPU DETAIL: Transfer to T 
DBG(48566938)> CPU DETAIL: Write 0036: 0060040316080000 
DBG(48566940)> CPU CMD: Exec 0019: 01 94 0397 0000 0003   read input tape 01 -> (0397) record 0001      
DBG(48566941)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0003
DBG(48566941)> MT DATA: Tape unit 1: init read
DBG(48566941)> MT DETAIL: Read tape record (740 chars, used 2.95 inches, needs 18 msec) from tape 1
DBG(48566941)> MT DETAIL: Tape record contents: D*0190030103390003C*0130000000131111C*0000000232000000C*00000000000000...
DBG(48566941)> MT EXP: Start Of Block Word: 0190030103390003
DBG(48566941)> MT EXP: Read Tape Block number 0003
DBG(48566941)> MT EXP: Read forward addr 0397 to 0000
DBG(48566941)> MT EXP: Tape to CRT 0397: 0130000000131111 
DBG(48566941)> MT EXP: Tape to CRT 0398: 0000000232000000 
DBG(48566941)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0403: 3333444455660002 
DBG(48566941)> MT EXP: Tape to CRT 0404: 0000000232010000 
DBG(48566941)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0407: 0000000232090000 
DBG(48566941)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0410: 0130000000131112 
DBG(48566941)> MT EXP: Tape to CRT 0411: 0000000232010000 
DBG(48566941)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0413: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0414: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0416: 3334444455660101 
DBG(48566941)> MT EXP: Tape to CRT 0417: 0000000232000000 
DBG(48566941)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0420: 0000000232090000 
DBG(48566941)> MT EXP: Tape to CRT 0421: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0423: 0130000000131113 
DBG(48566941)> MT EXP: Tape to CRT 0424: 0000000232090000 
DBG(48566941)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0426: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0427: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0429: 3336000000000200 
DBG(48566941)> MT EXP: Tape to CRT 0430: 0000000232000000 
DBG(48566941)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0433: 0000000232010000 
DBG(48566941)> MT EXP: Tape to CRT 0434: 0000000000000000 
DBG(48566941)> MT EXP: Tape to CRT 0435: 0000000000000000 
DBG(48566941)> MT EXP: End Of Block Word: 0190030103390003, data words in block: 39
DBG(48566941)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.06% of medium (10.25 inches)
DBG(48566944)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48566945)> CPU DETAIL: Condition not present 
DBG(48566947)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48566948)> CPU DETAIL: Condition not present 
DBG(48566950)> CPU CMD: Exec 0022: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48566951)> CPU DETAIL: Write 1603: 0190030103390003 
DBG(48566953)> CPU CMD: Exec 0023: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        01 90 aaaa bbbb nnnn ma 
DBG(48566954)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48566955)> CPU DETAIL: Result: 0000000003390000 
DBG(48566956)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000339 
DBG(48566957)> CPU DETAIL: Write 1604: 0000000000000339 
DBG(48566959)> CPU CMD: Exec 0024: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        01 90 aaaa bbbb nnnn ma 
DBG(48566960)> CPU DETAIL: Read R 1603: 0190030103390003 
DBG(48566961)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48566962)> CPU DETAIL: Result: 0000030100000000 
DBG(48566963)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48566966)> CPU CMD: Exec 0025: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48566967)> CPU DETAIL: Read R 1604: 0000000000000339 
DBG(48566968)> CPU DETAIL: Result: 0000000000000038 
DBG(48566969)> CPU DETAIL: Write 1605: 0000000000000038 
DBG(48566971)> CPU CMD: Exec 0026: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48566972)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48566973)> CPU DETAIL: Result: 0000000000000039 
DBG(48566974)> CPU DETAIL: Write 1605: 0000000000000039 
DBG(48566976)> CPU CMD: Exec 0027: 00 52 0000 0000 0000   clear M6   
DBG(48566977)> CPU DETAIL: M4: 0013 
DBG(48566978)> CPU DETAIL: Clear M6
DBG(48566978)> CPU DETAIL: M6: 0000 
DBG(48566979)> CPU DETAIL: M8: 0013 
DBG(48566982)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48566983)> CPU DETAIL: Read R 1605: 0000000000000039 
DBG(48566984)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48566985)> CPU DETAIL: Result: 0000000000000039 
DBG(48566988)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48566989)> CPU DETAIL: REG1: 0000000000000039
DBG(48566989)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48566991)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48566992)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48566992)> CPU DETAIL: Read R 0397: 0130000000131111 
DBG(48566993)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48566994)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48566996)> CPU CMD: Exec 0036: 00 60 0403 1608 0000   (0403 = event w7) -> (1608)   
DBG(48566997)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48566998)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48567000)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48567001)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48567002)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48567003)> CPU DETAIL: Result: 0000000000000000 
DBG(48567004)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48567005)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48567007)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48567008)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48567009)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48567010)> CPU DETAIL: Result: 0000000000000002 
DBG(48567011)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48567013)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48567014)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48567015)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48567016)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48567019)> CPU CMD: Exec 0040: 00 60 1646 0054 0000   predecessor=0 -> set 0054 as nop to save event in tape 2   
DBG(48567020)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48567021)> CPU DETAIL: Write 0054: 0060000000000000 
DBG(48567023)> CPU CMD: Exec 0041: 00 70 1610 1640 0044   if num successors w7 = zero goto 0044   
DBG(48567024)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48567025)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48567026)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48567029)> CPU CMD: Exec 0042: 00 60 0000 0000 0045   goto 0045   
DBG(48567030)> CPU DETAIL: Transfer to T 
DBG(48567032)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48567033)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567034)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48567037)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48567038)> CPU DETAIL: Read R 0050: 0658000100000048 
DBG(48567039)> CPU DETAIL: Result: 0658000100130048 
DBG(48567040)> CPU DETAIL: Write 0050: 0658000100130048 
DBG(48567042)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48567043)> CPU DETAIL: M4: 0013 
DBG(48567044)> CPU DETAIL: M6: 0000 
DBG(48567045)> CPU DETAIL: Clear M8
DBG(48567045)> CPU DETAIL: M8: 0000 
DBG(48567048)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567049)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48567049)> CPU DETAIL: Read R 0397: 0130000000131111 
DBG(48567050)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48567050)> CPU DETAIL: Write 0598: 0130000000131111 
DBG(48567052)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567053)> CPU DETAIL: M4: 0013 
DBG(48567054)> CPU DETAIL: M6: 0000 
DBG(48567055)> CPU DETAIL: M8: 0001 
DBG(48567058)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567059)> CPU DETAIL: M6: 0001 
DBG(48567060)> CPU DETAIL: Transfer to T 
DBG(48567062)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567063)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48567063)> CPU DETAIL: Read R 0398: 0000000232000000 
DBG(48567064)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48567064)> CPU DETAIL: Write 0599: 0000000232000000 
DBG(48567066)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567067)> CPU DETAIL: M4: 0013 
DBG(48567068)> CPU DETAIL: M6: 0001 
DBG(48567069)> CPU DETAIL: M8: 0002 
DBG(48567072)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567073)> CPU DETAIL: M6: 0002 
DBG(48567074)> CPU DETAIL: Transfer to T 
DBG(48567076)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567077)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48567077)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48567078)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48567078)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48567080)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567081)> CPU DETAIL: M4: 0013 
DBG(48567082)> CPU DETAIL: M6: 0002 
DBG(48567083)> CPU DETAIL: M8: 0003 
DBG(48567086)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567087)> CPU DETAIL: M6: 0003 
DBG(48567088)> CPU DETAIL: Transfer to T 
DBG(48567090)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567091)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48567091)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48567092)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48567092)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48567094)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567095)> CPU DETAIL: M4: 0013 
DBG(48567096)> CPU DETAIL: M6: 0003 
DBG(48567097)> CPU DETAIL: M8: 0004 
DBG(48567100)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567101)> CPU DETAIL: M6: 0004 
DBG(48567102)> CPU DETAIL: Transfer to T 
DBG(48567104)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567105)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48567105)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48567106)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48567106)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48567108)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567109)> CPU DETAIL: M4: 0013 
DBG(48567110)> CPU DETAIL: M6: 0004 
DBG(48567111)> CPU DETAIL: M8: 0005 
DBG(48567114)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567115)> CPU DETAIL: M6: 0005 
DBG(48567116)> CPU DETAIL: Transfer to T 
DBG(48567118)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567119)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48567119)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48567120)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48567120)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48567122)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567123)> CPU DETAIL: M4: 0013 
DBG(48567124)> CPU DETAIL: M6: 0005 
DBG(48567125)> CPU DETAIL: M8: 0006 
DBG(48567128)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567129)> CPU DETAIL: M6: 0006 
DBG(48567130)> CPU DETAIL: Transfer to T 
DBG(48567132)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567133)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48567133)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48567134)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48567134)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48567136)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567137)> CPU DETAIL: M4: 0013 
DBG(48567138)> CPU DETAIL: M6: 0006 
DBG(48567139)> CPU DETAIL: M8: 0007 
DBG(48567142)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567143)> CPU DETAIL: M6: 0007 
DBG(48567144)> CPU DETAIL: Transfer to T 
DBG(48567146)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567147)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48567147)> CPU DETAIL: Read R 0404: 0000000232010000 
DBG(48567148)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48567148)> CPU DETAIL: Write 0605: 0000000232010000 
DBG(48567150)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567151)> CPU DETAIL: M4: 0013 
DBG(48567152)> CPU DETAIL: M6: 0007 
DBG(48567153)> CPU DETAIL: M8: 0008 
DBG(48567156)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567157)> CPU DETAIL: M6: 0008 
DBG(48567158)> CPU DETAIL: Transfer to T 
DBG(48567160)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567161)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48567161)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48567162)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48567162)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48567164)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567165)> CPU DETAIL: M4: 0013 
DBG(48567166)> CPU DETAIL: M6: 0008 
DBG(48567167)> CPU DETAIL: M8: 0009 
DBG(48567170)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567171)> CPU DETAIL: M6: 0009 
DBG(48567172)> CPU DETAIL: Transfer to T 
DBG(48567174)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567175)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48567175)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48567176)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48567176)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48567178)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567179)> CPU DETAIL: M4: 0013 
DBG(48567180)> CPU DETAIL: M6: 0009 
DBG(48567181)> CPU DETAIL: M8: 0010 
DBG(48567184)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567185)> CPU DETAIL: M6: 0010 
DBG(48567186)> CPU DETAIL: Transfer to T 
DBG(48567188)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567189)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48567189)> CPU DETAIL: Read R 0407: 0000000232090000 
DBG(48567190)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48567190)> CPU DETAIL: Write 0608: 0000000232090000 
DBG(48567192)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567193)> CPU DETAIL: M4: 0013 
DBG(48567194)> CPU DETAIL: M6: 0010 
DBG(48567195)> CPU DETAIL: M8: 0011 
DBG(48567198)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567199)> CPU DETAIL: M6: 0011 
DBG(48567200)> CPU DETAIL: Transfer to T 
DBG(48567202)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567203)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48567203)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48567204)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48567204)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48567206)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567207)> CPU DETAIL: M4: 0013 
DBG(48567208)> CPU DETAIL: M6: 0011 
DBG(48567209)> CPU DETAIL: M8: 0012 
DBG(48567212)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567213)> CPU DETAIL: M6: 0012 
DBG(48567214)> CPU DETAIL: Transfer to T 
DBG(48567216)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567217)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48567217)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48567218)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48567218)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48567220)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567221)> CPU DETAIL: M4: 0013 
DBG(48567222)> CPU DETAIL: M6: 0012 
DBG(48567223)> CPU DETAIL: M8: 0013 
DBG(48567226)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567227)> CPU DETAIL: M6: 0013 
DBG(48567230)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48567231)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567232)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48567233)> CPU DETAIL: Result: 0000000000000013 
DBG(48567234)> CPU DETAIL: Write 1606: 0000000000000013 
DBG(48567236)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48567237)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567238)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48567241)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48567242)> CPU DETAIL: Read R 0036: 0060040316080000 
DBG(48567243)> CPU DETAIL: Result: 0060041616080000 
DBG(48567244)> CPU DETAIL: Write 0036: 0060041616080000 
DBG(48567246)> CPU CMD: Exec 0054: 00 60 0000 0000 0000   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48567249)> CPU CMD: Exec 0055: 00 40 1611 1607 0000   (1611 num of words in output block) + (1607 event rec len NNN) -> REG1   
DBG(48567250)> CPU DETAIL: Read R 1611: 0000000000000023 
DBG(48567251)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48567252)> CPU DETAIL: Result: 0000000000000036 
DBG(48567255)> CPU CMD: Exec 0056: 00 41 1650 0000 0000   const 200 - REG1   
DBG(48567256)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48567257)> CPU DETAIL: Result: 0000000000000164 
DBG(48567260)> CPU CMD: Exec 0057: 00 63 0000 0060 0059   if =0 goto 0060, if <0 goto 0059   
DBG(48567261)> CPU DETAIL: REG1: 0000000000000164
DBG(48567261)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48567263)> CPU CMD: Exec 0058: 00 60 1647 0069 0062   enough room in out block for event: set exit to read next event rec, goto 00 
DBG(48567264)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48567265)> CPU DETAIL: Transfer to T 
DBG(48567265)> CPU DETAIL: Write 0069: 0060000000000028 
DBG(48567267)> CPU CMD: Exec 0062: 00 51 0000 0000 0000   clear M4   
DBG(48567268)> CPU DETAIL: Clear M4
DBG(48567268)> CPU DETAIL: M4: 0000 
DBG(48567269)> CPU DETAIL: M6: 0013 
DBG(48567270)> CPU DETAIL: M8: 0013 
DBG(48567273)> CPU CMD: Exec 0063: 96 60 1607 0000 0000   set instr 0068    
DBG(48567274)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567275)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48567278)> CPU CMD: Exec 0064: 00 40 1649 0000 0068   ... to loop if M4<>(1607 event rec len NNN)   
DBG(48567279)> CPU DETAIL: Read R 1649: 0458000100000065 
DBG(48567280)> CPU DETAIL: Result: 0458000100130065 
DBG(48567281)> CPU DETAIL: Write 0068: 0458000100130065 
DBG(48567283)> CPU CMD: Exec 0065: 00 60 4598 0821 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567284)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48567284)> CPU DETAIL: Read R 0598: 0130000000131111 
DBG(48567285)> CPU DETAIL: Write 0821: 0130000000131111 
DBG(48567287)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567288)> CPU DETAIL: Read R 0065: 0060459808210000 
DBG(48567289)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567290)> CPU DETAIL: Result: 0060459808220000 
DBG(48567291)> CPU DETAIL: Write 0065: 0060459808220000 
DBG(48567293)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567294)> CPU DETAIL: Read R 1611: 0000000000000023 
DBG(48567295)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567296)> CPU DETAIL: Result: 0000000000000024 
DBG(48567297)> CPU DETAIL: Write 1611: 0000000000000024 
DBG(48567299)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567300)> CPU DETAIL: M4: 0001 
DBG(48567301)> CPU DETAIL: Transfer to T 
DBG(48567303)> CPU CMD: Exec 0065: 00 60 4598 0822 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567304)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48567304)> CPU DETAIL: Read R 0599: 0000000232000000 
DBG(48567305)> CPU DETAIL: Write 0822: 0000000232000000 
DBG(48567307)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567308)> CPU DETAIL: Read R 0065: 0060459808220000 
DBG(48567309)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567310)> CPU DETAIL: Result: 0060459808230000 
DBG(48567311)> CPU DETAIL: Write 0065: 0060459808230000 
DBG(48567313)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567314)> CPU DETAIL: Read R 1611: 0000000000000024 
DBG(48567315)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567316)> CPU DETAIL: Result: 0000000000000025 
DBG(48567317)> CPU DETAIL: Write 1611: 0000000000000025 
DBG(48567319)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567320)> CPU DETAIL: M4: 0002 
DBG(48567321)> CPU DETAIL: Transfer to T 
DBG(48567323)> CPU CMD: Exec 0065: 00 60 4598 0823 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567324)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48567324)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48567325)> CPU DETAIL: Write 0823: 0000000000000000 
DBG(48567327)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567328)> CPU DETAIL: Read R 0065: 0060459808230000 
DBG(48567329)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567330)> CPU DETAIL: Result: 0060459808240000 
DBG(48567331)> CPU DETAIL: Write 0065: 0060459808240000 
DBG(48567333)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567334)> CPU DETAIL: Read R 1611: 0000000000000025 
DBG(48567335)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567336)> CPU DETAIL: Result: 0000000000000026 
DBG(48567337)> CPU DETAIL: Write 1611: 0000000000000026 
DBG(48567339)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567340)> CPU DETAIL: M4: 0003 
DBG(48567341)> CPU DETAIL: Transfer to T 
DBG(48567343)> CPU CMD: Exec 0065: 00 60 4598 0824 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567344)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48567344)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48567345)> CPU DETAIL: Write 0824: 0000000000000000 
DBG(48567347)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567348)> CPU DETAIL: Read R 0065: 0060459808240000 
DBG(48567349)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567350)> CPU DETAIL: Result: 0060459808250000 
DBG(48567351)> CPU DETAIL: Write 0065: 0060459808250000 
DBG(48567353)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567354)> CPU DETAIL: Read R 1611: 0000000000000026 
DBG(48567355)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567356)> CPU DETAIL: Result: 0000000000000027 
DBG(48567357)> CPU DETAIL: Write 1611: 0000000000000027 
DBG(48567359)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567360)> CPU DETAIL: M4: 0004 
DBG(48567361)> CPU DETAIL: Transfer to T 
DBG(48567363)> CPU CMD: Exec 0065: 00 60 4598 0825 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567364)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48567364)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48567365)> CPU DETAIL: Write 0825: 0000000000000000 
DBG(48567367)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567368)> CPU DETAIL: Read R 0065: 0060459808250000 
DBG(48567369)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567370)> CPU DETAIL: Result: 0060459808260000 
DBG(48567371)> CPU DETAIL: Write 0065: 0060459808260000 
DBG(48567373)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567374)> CPU DETAIL: Read R 1611: 0000000000000027 
DBG(48567375)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567376)> CPU DETAIL: Result: 0000000000000028 
DBG(48567377)> CPU DETAIL: Write 1611: 0000000000000028 
DBG(48567379)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567380)> CPU DETAIL: M4: 0005 
DBG(48567381)> CPU DETAIL: Transfer to T 
DBG(48567383)> CPU CMD: Exec 0065: 00 60 4598 0826 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567384)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48567384)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48567385)> CPU DETAIL: Write 0826: 0000000000000000 
DBG(48567387)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567388)> CPU DETAIL: Read R 0065: 0060459808260000 
DBG(48567389)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567390)> CPU DETAIL: Result: 0060459808270000 
DBG(48567391)> CPU DETAIL: Write 0065: 0060459808270000 
DBG(48567393)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567394)> CPU DETAIL: Read R 1611: 0000000000000028 
DBG(48567395)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567396)> CPU DETAIL: Result: 0000000000000029 
DBG(48567397)> CPU DETAIL: Write 1611: 0000000000000029 
DBG(48567399)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567400)> CPU DETAIL: M4: 0006 
DBG(48567401)> CPU DETAIL: Transfer to T 
DBG(48567403)> CPU CMD: Exec 0065: 00 60 4598 0827 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567404)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48567404)> CPU DETAIL: Read R 0604: 3333444455660002 
DBG(48567405)> CPU DETAIL: Write 0827: 3333444455660002 
DBG(48567407)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567408)> CPU DETAIL: Read R 0065: 0060459808270000 
DBG(48567409)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567410)> CPU DETAIL: Result: 0060459808280000 
DBG(48567411)> CPU DETAIL: Write 0065: 0060459808280000 
DBG(48567413)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567414)> CPU DETAIL: Read R 1611: 0000000000000029 
DBG(48567415)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567416)> CPU DETAIL: Result: 0000000000000030 
DBG(48567417)> CPU DETAIL: Write 1611: 0000000000000030 
DBG(48567419)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567420)> CPU DETAIL: M4: 0007 
DBG(48567421)> CPU DETAIL: Transfer to T 
DBG(48567423)> CPU CMD: Exec 0065: 00 60 4598 0828 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567424)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48567424)> CPU DETAIL: Read R 0605: 0000000232010000 
DBG(48567425)> CPU DETAIL: Write 0828: 0000000232010000 
DBG(48567427)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567428)> CPU DETAIL: Read R 0065: 0060459808280000 
DBG(48567429)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567430)> CPU DETAIL: Result: 0060459808290000 
DBG(48567431)> CPU DETAIL: Write 0065: 0060459808290000 
DBG(48567433)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567434)> CPU DETAIL: Read R 1611: 0000000000000030 
DBG(48567435)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567436)> CPU DETAIL: Result: 0000000000000031 
DBG(48567437)> CPU DETAIL: Write 1611: 0000000000000031 
DBG(48567439)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567440)> CPU DETAIL: M4: 0008 
DBG(48567441)> CPU DETAIL: Transfer to T 
DBG(48567443)> CPU CMD: Exec 0065: 00 60 4598 0829 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567444)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48567444)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48567445)> CPU DETAIL: Write 0829: 0000000000000000 
DBG(48567447)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567448)> CPU DETAIL: Read R 0065: 0060459808290000 
DBG(48567449)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567450)> CPU DETAIL: Result: 0060459808300000 
DBG(48567451)> CPU DETAIL: Write 0065: 0060459808300000 
DBG(48567453)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567454)> CPU DETAIL: Read R 1611: 0000000000000031 
DBG(48567455)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567456)> CPU DETAIL: Result: 0000000000000032 
DBG(48567457)> CPU DETAIL: Write 1611: 0000000000000032 
DBG(48567459)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567460)> CPU DETAIL: M4: 0009 
DBG(48567461)> CPU DETAIL: Transfer to T 
DBG(48567463)> CPU CMD: Exec 0065: 00 60 4598 0830 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567464)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48567464)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48567465)> CPU DETAIL: Write 0830: 0000000000000000 
DBG(48567467)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567468)> CPU DETAIL: Read R 0065: 0060459808300000 
DBG(48567469)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567470)> CPU DETAIL: Result: 0060459808310000 
DBG(48567471)> CPU DETAIL: Write 0065: 0060459808310000 
DBG(48567473)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567474)> CPU DETAIL: Read R 1611: 0000000000000032 
DBG(48567475)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567476)> CPU DETAIL: Result: 0000000000000033 
DBG(48567477)> CPU DETAIL: Write 1611: 0000000000000033 
DBG(48567479)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567480)> CPU DETAIL: M4: 0010 
DBG(48567481)> CPU DETAIL: Transfer to T 
DBG(48567483)> CPU CMD: Exec 0065: 00 60 4598 0831 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567484)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48567484)> CPU DETAIL: Read R 0608: 0000000232090000 
DBG(48567485)> CPU DETAIL: Write 0831: 0000000232090000 
DBG(48567487)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567488)> CPU DETAIL: Read R 0065: 0060459808310000 
DBG(48567489)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567490)> CPU DETAIL: Result: 0060459808320000 
DBG(48567491)> CPU DETAIL: Write 0065: 0060459808320000 
DBG(48567493)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567494)> CPU DETAIL: Read R 1611: 0000000000000033 
DBG(48567495)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567496)> CPU DETAIL: Result: 0000000000000034 
DBG(48567497)> CPU DETAIL: Write 1611: 0000000000000034 
DBG(48567499)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567500)> CPU DETAIL: M4: 0011 
DBG(48567501)> CPU DETAIL: Transfer to T 
DBG(48567503)> CPU CMD: Exec 0065: 00 60 4598 0832 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567504)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48567504)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48567505)> CPU DETAIL: Write 0832: 0000000000000000 
DBG(48567507)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567508)> CPU DETAIL: Read R 0065: 0060459808320000 
DBG(48567509)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567510)> CPU DETAIL: Result: 0060459808330000 
DBG(48567511)> CPU DETAIL: Write 0065: 0060459808330000 
DBG(48567513)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567514)> CPU DETAIL: Read R 1611: 0000000000000034 
DBG(48567515)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567516)> CPU DETAIL: Result: 0000000000000035 
DBG(48567517)> CPU DETAIL: Write 1611: 0000000000000035 
DBG(48567519)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567520)> CPU DETAIL: M4: 0012 
DBG(48567521)> CPU DETAIL: Transfer to T 
DBG(48567523)> CPU CMD: Exec 0065: 00 60 4598 0833 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48567524)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48567524)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48567525)> CPU DETAIL: Write 0833: 0000000000000000 
DBG(48567527)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48567528)> CPU DETAIL: Read R 0065: 0060459808330000 
DBG(48567529)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48567530)> CPU DETAIL: Result: 0060459808340000 
DBG(48567531)> CPU DETAIL: Write 0065: 0060459808340000 
DBG(48567533)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48567534)> CPU DETAIL: Read R 1611: 0000000000000035 
DBG(48567535)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48567536)> CPU DETAIL: Result: 0000000000000036 
DBG(48567537)> CPU DETAIL: Write 1611: 0000000000000036 
DBG(48567539)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48567540)> CPU DETAIL: M4: 0013 
DBG(48567543)> CPU CMD: Exec 0069: 00 60 0000 0000 0028   exit: goto 0028 read next event rec   
DBG(48567544)> CPU DETAIL: Transfer to T 
DBG(48567546)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48567547)> CPU DETAIL: Read R 1605: 0000000000000039 
DBG(48567548)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48567549)> CPU DETAIL: Result: 0000000000000026 
DBG(48567552)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48567553)> CPU DETAIL: REG1: 0000000000000026
DBG(48567553)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48567555)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48567556)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48567556)> CPU DETAIL: Read R 0410: 0130000000131112 
DBG(48567557)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48567558)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48567560)> CPU CMD: Exec 0036: 00 60 0416 1608 0000   (0403 = event w7) -> (1608)   
DBG(48567561)> CPU DETAIL: Read R 0416: 3334444455660101 
DBG(48567562)> CPU DETAIL: Write 1608: 3334444455660101 
DBG(48567564)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48567565)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48567566)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48567567)> CPU DETAIL: Result: 0000000000000100 
DBG(48567568)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48567569)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48567571)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48567572)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48567573)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48567574)> CPU DETAIL: Result: 0000000000000001 
DBG(48567575)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48567577)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48567578)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48567579)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48567580)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48567581)> CPU DETAIL: Transfer to T 
DBG(48567583)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48567584)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48567585)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48567587)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48567588)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567589)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48567592)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48567593)> CPU DETAIL: Read R 0050: 0658000100130048 
DBG(48567594)> CPU DETAIL: Result: 0658000100260048 
DBG(48567595)> CPU DETAIL: Write 0050: 0658000100260048 
DBG(48567597)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48567598)> CPU DETAIL: M4: 0013 
DBG(48567599)> CPU DETAIL: M6: 0013 
DBG(48567600)> CPU DETAIL: Clear M8
DBG(48567600)> CPU DETAIL: M8: 0000 
DBG(48567603)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567604)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48567604)> CPU DETAIL: Read R 0410: 0130000000131112 
DBG(48567605)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48567605)> CPU DETAIL: Write 0598: 0130000000131112 
DBG(48567607)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567608)> CPU DETAIL: M4: 0013 
DBG(48567609)> CPU DETAIL: M6: 0013 
DBG(48567610)> CPU DETAIL: M8: 0001 
DBG(48567613)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567614)> CPU DETAIL: M6: 0014 
DBG(48567615)> CPU DETAIL: Transfer to T 
DBG(48567617)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567618)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48567618)> CPU DETAIL: Read R 0411: 0000000232010000 
DBG(48567619)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48567619)> CPU DETAIL: Write 0599: 0000000232010000 
DBG(48567621)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567622)> CPU DETAIL: M4: 0013 
DBG(48567623)> CPU DETAIL: M6: 0014 
DBG(48567624)> CPU DETAIL: M8: 0002 
DBG(48567627)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567628)> CPU DETAIL: M6: 0015 
DBG(48567629)> CPU DETAIL: Transfer to T 
DBG(48567631)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567632)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48567632)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48567633)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48567633)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48567635)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567636)> CPU DETAIL: M4: 0013 
DBG(48567637)> CPU DETAIL: M6: 0015 
DBG(48567638)> CPU DETAIL: M8: 0003 
DBG(48567641)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567642)> CPU DETAIL: M6: 0016 
DBG(48567643)> CPU DETAIL: Transfer to T 
DBG(48567645)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567646)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48567646)> CPU DETAIL: Read R 0413: 0000000000000000 
DBG(48567647)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48567647)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48567649)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567650)> CPU DETAIL: M4: 0013 
DBG(48567651)> CPU DETAIL: M6: 0016 
DBG(48567652)> CPU DETAIL: M8: 0004 
DBG(48567655)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567656)> CPU DETAIL: M6: 0017 
DBG(48567657)> CPU DETAIL: Transfer to T 
DBG(48567659)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567660)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48567660)> CPU DETAIL: Read R 0414: 0000000000000000 
DBG(48567661)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48567661)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48567663)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567664)> CPU DETAIL: M4: 0013 
DBG(48567665)> CPU DETAIL: M6: 0017 
DBG(48567666)> CPU DETAIL: M8: 0005 
DBG(48567669)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567670)> CPU DETAIL: M6: 0018 
DBG(48567671)> CPU DETAIL: Transfer to T 
DBG(48567673)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567674)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48567674)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48567675)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48567675)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48567677)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567678)> CPU DETAIL: M4: 0013 
DBG(48567679)> CPU DETAIL: M6: 0018 
DBG(48567680)> CPU DETAIL: M8: 0006 
DBG(48567683)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567684)> CPU DETAIL: M6: 0019 
DBG(48567685)> CPU DETAIL: Transfer to T 
DBG(48567687)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567688)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48567688)> CPU DETAIL: Read R 0416: 3334444455660101 
DBG(48567689)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48567689)> CPU DETAIL: Write 0604: 3334444455660101 
DBG(48567691)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567692)> CPU DETAIL: M4: 0013 
DBG(48567693)> CPU DETAIL: M6: 0019 
DBG(48567694)> CPU DETAIL: M8: 0007 
DBG(48567697)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567698)> CPU DETAIL: M6: 0020 
DBG(48567699)> CPU DETAIL: Transfer to T 
DBG(48567701)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567702)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48567702)> CPU DETAIL: Read R 0417: 0000000232000000 
DBG(48567703)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48567703)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48567705)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567706)> CPU DETAIL: M4: 0013 
DBG(48567707)> CPU DETAIL: M6: 0020 
DBG(48567708)> CPU DETAIL: M8: 0008 
DBG(48567711)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567712)> CPU DETAIL: M6: 0021 
DBG(48567713)> CPU DETAIL: Transfer to T 
DBG(48567715)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567716)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48567716)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48567717)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48567717)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48567719)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567720)> CPU DETAIL: M4: 0013 
DBG(48567721)> CPU DETAIL: M6: 0021 
DBG(48567722)> CPU DETAIL: M8: 0009 
DBG(48567725)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567726)> CPU DETAIL: M6: 0022 
DBG(48567727)> CPU DETAIL: Transfer to T 
DBG(48567729)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567730)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48567730)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48567731)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48567731)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48567733)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567734)> CPU DETAIL: M4: 0013 
DBG(48567735)> CPU DETAIL: M6: 0022 
DBG(48567736)> CPU DETAIL: M8: 0010 
DBG(48567739)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567740)> CPU DETAIL: M6: 0023 
DBG(48567741)> CPU DETAIL: Transfer to T 
DBG(48567743)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567744)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48567744)> CPU DETAIL: Read R 0420: 0000000232090000 
DBG(48567745)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48567745)> CPU DETAIL: Write 0608: 0000000232090000 
DBG(48567747)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567748)> CPU DETAIL: M4: 0013 
DBG(48567749)> CPU DETAIL: M6: 0023 
DBG(48567750)> CPU DETAIL: M8: 0011 
DBG(48567753)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567754)> CPU DETAIL: M6: 0024 
DBG(48567755)> CPU DETAIL: Transfer to T 
DBG(48567757)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567758)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48567758)> CPU DETAIL: Read R 0421: 0000000000000000 
DBG(48567759)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48567759)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48567761)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567762)> CPU DETAIL: M4: 0013 
DBG(48567763)> CPU DETAIL: M6: 0024 
DBG(48567764)> CPU DETAIL: M8: 0012 
DBG(48567767)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567768)> CPU DETAIL: M6: 0025 
DBG(48567769)> CPU DETAIL: Transfer to T 
DBG(48567771)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567772)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48567772)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48567773)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48567773)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48567775)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567776)> CPU DETAIL: M4: 0013 
DBG(48567777)> CPU DETAIL: M6: 0025 
DBG(48567778)> CPU DETAIL: M8: 0013 
DBG(48567781)> CPU CMD: Exec 0050: 06 58 0001 0026 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567782)> CPU DETAIL: M6: 0026 
DBG(48567785)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48567786)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567787)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48567788)> CPU DETAIL: Result: 0000000000000026 
DBG(48567789)> CPU DETAIL: Write 1606: 0000000000000026 
DBG(48567791)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48567792)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567793)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48567796)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48567797)> CPU DETAIL: Read R 0036: 0060041616080000 
DBG(48567798)> CPU DETAIL: Result: 0060042916080000 
DBG(48567799)> CPU DETAIL: Write 0036: 0060042916080000 
DBG(48567801)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48567802)> CPU DETAIL: Transfer to T 
DBG(48567804)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48567805)> CPU DETAIL: Read R 1605: 0000000000000039 
DBG(48567806)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48567807)> CPU DETAIL: Result: 0000000000000013 
DBG(48567810)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48567811)> CPU DETAIL: REG1: 0000000000000013
DBG(48567811)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48567813)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48567814)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48567814)> CPU DETAIL: Read R 0423: 0130000000131113 
DBG(48567815)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48567816)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48567818)> CPU CMD: Exec 0036: 00 60 0429 1608 0000   (0403 = event w7) -> (1608)   
DBG(48567819)> CPU DETAIL: Read R 0429: 3336000000000200 
DBG(48567820)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48567822)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48567823)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48567824)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48567825)> CPU DETAIL: Result: 0000000000000200 
DBG(48567826)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48567827)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48567829)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48567830)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48567831)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48567832)> CPU DETAIL: Result: 0000000000000000 
DBG(48567833)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48567835)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48567836)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48567837)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48567838)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48567839)> CPU DETAIL: Transfer to T 
DBG(48567841)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48567842)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48567843)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48567845)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48567846)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48567847)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48567850)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48567851)> CPU DETAIL: Read R 0050: 0658000100260048 
DBG(48567852)> CPU DETAIL: Result: 0658000100390048 
DBG(48567853)> CPU DETAIL: Write 0050: 0658000100390048 
DBG(48567855)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48567856)> CPU DETAIL: M4: 0013 
DBG(48567857)> CPU DETAIL: M6: 0026 
DBG(48567858)> CPU DETAIL: Clear M8
DBG(48567858)> CPU DETAIL: M8: 0000 
DBG(48567861)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567862)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48567862)> CPU DETAIL: Read R 0423: 0130000000131113 
DBG(48567863)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48567863)> CPU DETAIL: Write 0598: 0130000000131113 
DBG(48567865)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567866)> CPU DETAIL: M4: 0013 
DBG(48567867)> CPU DETAIL: M6: 0026 
DBG(48567868)> CPU DETAIL: M8: 0001 
DBG(48567871)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567872)> CPU DETAIL: M6: 0027 
DBG(48567873)> CPU DETAIL: Transfer to T 
DBG(48567875)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567876)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48567876)> CPU DETAIL: Read R 0424: 0000000232090000 
DBG(48567877)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48567877)> CPU DETAIL: Write 0599: 0000000232090000 
DBG(48567879)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567880)> CPU DETAIL: M4: 0013 
DBG(48567881)> CPU DETAIL: M6: 0027 
DBG(48567882)> CPU DETAIL: M8: 0002 
DBG(48567885)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567886)> CPU DETAIL: M6: 0028 
DBG(48567887)> CPU DETAIL: Transfer to T 
DBG(48567889)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567890)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48567890)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48567891)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48567891)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48567893)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567894)> CPU DETAIL: M4: 0013 
DBG(48567895)> CPU DETAIL: M6: 0028 
DBG(48567896)> CPU DETAIL: M8: 0003 
DBG(48567899)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567900)> CPU DETAIL: M6: 0029 
DBG(48567901)> CPU DETAIL: Transfer to T 
DBG(48567903)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567904)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48567904)> CPU DETAIL: Read R 0426: 0000000000000000 
DBG(48567905)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48567905)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48567907)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567908)> CPU DETAIL: M4: 0013 
DBG(48567909)> CPU DETAIL: M6: 0029 
DBG(48567910)> CPU DETAIL: M8: 0004 
DBG(48567913)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567914)> CPU DETAIL: M6: 0030 
DBG(48567915)> CPU DETAIL: Transfer to T 
DBG(48567917)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567918)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48567918)> CPU DETAIL: Read R 0427: 0000000000000000 
DBG(48567919)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48567919)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48567921)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567922)> CPU DETAIL: M4: 0013 
DBG(48567923)> CPU DETAIL: M6: 0030 
DBG(48567924)> CPU DETAIL: M8: 0005 
DBG(48567927)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567928)> CPU DETAIL: M6: 0031 
DBG(48567929)> CPU DETAIL: Transfer to T 
DBG(48567931)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567932)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48567932)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48567933)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48567933)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48567935)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567936)> CPU DETAIL: M4: 0013 
DBG(48567937)> CPU DETAIL: M6: 0031 
DBG(48567938)> CPU DETAIL: M8: 0006 
DBG(48567941)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567942)> CPU DETAIL: M6: 0032 
DBG(48567943)> CPU DETAIL: Transfer to T 
DBG(48567945)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567946)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48567946)> CPU DETAIL: Read R 0429: 3336000000000200 
DBG(48567947)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48567947)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48567949)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567950)> CPU DETAIL: M4: 0013 
DBG(48567951)> CPU DETAIL: M6: 0032 
DBG(48567952)> CPU DETAIL: M8: 0007 
DBG(48567955)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567956)> CPU DETAIL: M6: 0033 
DBG(48567957)> CPU DETAIL: Transfer to T 
DBG(48567959)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567960)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48567960)> CPU DETAIL: Read R 0430: 0000000232000000 
DBG(48567961)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48567961)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48567963)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567964)> CPU DETAIL: M4: 0013 
DBG(48567965)> CPU DETAIL: M6: 0033 
DBG(48567966)> CPU DETAIL: M8: 0008 
DBG(48567969)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567970)> CPU DETAIL: M6: 0034 
DBG(48567971)> CPU DETAIL: Transfer to T 
DBG(48567973)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567974)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48567974)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48567975)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48567975)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48567977)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567978)> CPU DETAIL: M4: 0013 
DBG(48567979)> CPU DETAIL: M6: 0034 
DBG(48567980)> CPU DETAIL: M8: 0009 
DBG(48567983)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567984)> CPU DETAIL: M6: 0035 
DBG(48567985)> CPU DETAIL: Transfer to T 
DBG(48567987)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48567988)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48567988)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48567989)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48567989)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48567991)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48567992)> CPU DETAIL: M4: 0013 
DBG(48567993)> CPU DETAIL: M6: 0035 
DBG(48567994)> CPU DETAIL: M8: 0010 
DBG(48567997)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48567998)> CPU DETAIL: M6: 0036 
DBG(48567999)> CPU DETAIL: Transfer to T 
DBG(48568001)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568002)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48568002)> CPU DETAIL: Read R 0433: 0000000232010000 
DBG(48568003)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48568003)> CPU DETAIL: Write 0608: 0000000232010000 
DBG(48568005)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568006)> CPU DETAIL: M4: 0013 
DBG(48568007)> CPU DETAIL: M6: 0036 
DBG(48568008)> CPU DETAIL: M8: 0011 
DBG(48568011)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568012)> CPU DETAIL: M6: 0037 
DBG(48568013)> CPU DETAIL: Transfer to T 
DBG(48568015)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568016)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48568016)> CPU DETAIL: Read R 0434: 0000000000000000 
DBG(48568017)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48568017)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48568019)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568020)> CPU DETAIL: M4: 0013 
DBG(48568021)> CPU DETAIL: M6: 0037 
DBG(48568022)> CPU DETAIL: M8: 0012 
DBG(48568025)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568026)> CPU DETAIL: M6: 0038 
DBG(48568027)> CPU DETAIL: Transfer to T 
DBG(48568029)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568030)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48568030)> CPU DETAIL: Read R 0435: 0000000000000000 
DBG(48568031)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48568031)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48568033)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568034)> CPU DETAIL: M4: 0013 
DBG(48568035)> CPU DETAIL: M6: 0038 
DBG(48568036)> CPU DETAIL: M8: 0013 
DBG(48568039)> CPU CMD: Exec 0050: 06 58 0001 0039 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568040)> CPU DETAIL: M6: 0039 
DBG(48568043)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48568044)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568045)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48568046)> CPU DETAIL: Result: 0000000000000039 
DBG(48568047)> CPU DETAIL: Write 1606: 0000000000000039 
DBG(48568049)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48568050)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568051)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48568054)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48568055)> CPU DETAIL: Read R 0036: 0060042916080000 
DBG(48568056)> CPU DETAIL: Result: 0060044216080000 
DBG(48568057)> CPU DETAIL: Write 0036: 0060044216080000 
DBG(48568059)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48568060)> CPU DETAIL: Transfer to T 
DBG(48568062)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48568063)> CPU DETAIL: Read R 1605: 0000000000000039 
DBG(48568064)> CPU DETAIL: Read S 1606: 0000000000000039 
DBG(48568065)> CPU DETAIL: Result: 0000000000000000 
DBG(48568068)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48568069)> CPU DETAIL: REG1: 0000000000000000
DBG(48568069)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48568071)> CPU CMD: Exec 0031: 00 60 1658 0050 0000   restore instr 0050   
DBG(48568072)> CPU DETAIL: Read R 1658: 0658000100000048 
DBG(48568073)> CPU DETAIL: Write 0050: 0658000100000048 
DBG(48568075)> CPU CMD: Exec 0032: 00 40 0019 1639 0019   (0019) + 1 -> (0019) incr number of block to read from input tape 01   
DBG(48568076)> CPU DETAIL: Read R 0019: 0194039700000003 
DBG(48568077)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568078)> CPU DETAIL: Result: 0194039700000004 
DBG(48568079)> CPU DETAIL: Write 0019: 0194039700000004 
DBG(48568081)> CPU CMD: Exec 0033: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48568082)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48568083)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48568085)> CPU CMD: Exec 0034: 00 60 1645 0036 0019   restore instr 0036, goto 0019 to read next tape 1 event block   
DBG(48568086)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48568087)> CPU DETAIL: Transfer to T 
DBG(48568087)> CPU DETAIL: Write 0036: 0060040316080000 
DBG(48568089)> CPU CMD: Exec 0019: 01 94 0397 0000 0004   read input tape 01 -> (0397) record 0001      
DBG(48568090)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0004
DBG(48568090)> MT DATA: Tape unit 1: init read
DBG(48568090)> MT DETAIL: Read tape record (1424 chars, used 4.29 inches, needs 27 msec) from tape 1
DBG(48568090)> MT DETAIL: Tape record contents: D*0190030103770004C*0130000000141111C*0000000233000000C*00000000000000...
DBG(48568090)> MT EXP: Start Of Block Word: 0190030103770004
DBG(48568090)> MT EXP: Read Tape Block number 0004
DBG(48568090)> MT EXP: Read forward addr 0397 to 0000
DBG(48568090)> MT EXP: Tape to CRT 0397: 0130000000141111 
DBG(48568090)> MT EXP: Tape to CRT 0398: 0000000233000000 
DBG(48568090)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0403: 3333444455660002 
DBG(48568090)> MT EXP: Tape to CRT 0404: 0000000233010000 
DBG(48568090)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0407: 0000000233020000 
DBG(48568090)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0410: 0190000000141112 
DBG(48568090)> MT EXP: Tape to CRT 0411: 0000000233010000 
DBG(48568090)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0413: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0414: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0416: 3334444455660103 
DBG(48568090)> MT EXP: Tape to CRT 0417: 0000000233000000 
DBG(48568090)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0420: 0000000233020000 
DBG(48568090)> MT EXP: Tape to CRT 0421: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0423: 0000000233030000 
DBG(48568090)> MT EXP: Tape to CRT 0424: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0426: 0000000233090000 
DBG(48568090)> MT EXP: Tape to CRT 0427: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0429: 0160000000141013 
DBG(48568090)> MT EXP: Tape to CRT 0430: 0000000233020003 
DBG(48568090)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0433: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0434: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0435: 3335444455660201 
DBG(48568090)> MT EXP: Tape to CRT 0436: 0000000233000000 
DBG(48568090)> MT EXP: Tape to CRT 0437: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0438: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0439: 0000000233010000 
DBG(48568090)> MT EXP: Tape to CRT 0440: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0441: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0442: 0000000233030000 
DBG(48568090)> MT EXP: Tape to CRT 0443: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0444: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0445: 0160000000141014 
DBG(48568090)> MT EXP: Tape to CRT 0446: 0000000233030000 
DBG(48568090)> MT EXP: Tape to CRT 0447: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0448: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0449: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0450: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0451: 3336000000000201 
DBG(48568090)> MT EXP: Tape to CRT 0452: 0000000233010000 
DBG(48568090)> MT EXP: Tape to CRT 0453: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0454: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0455: 0000000233020000 
DBG(48568090)> MT EXP: Tape to CRT 0456: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0457: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0458: 0000000233090000 
DBG(48568090)> MT EXP: Tape to CRT 0459: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0460: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0461: 0130000000141015 
DBG(48568090)> MT EXP: Tape to CRT 0462: 0000000233090000 
DBG(48568090)> MT EXP: Tape to CRT 0463: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0464: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0465: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0466: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0467: 3336000000000200 
DBG(48568090)> MT EXP: Tape to CRT 0468: 0000000233010000 
DBG(48568090)> MT EXP: Tape to CRT 0469: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0470: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0471: 0000000233030000 
DBG(48568090)> MT EXP: Tape to CRT 0472: 0000000000000000 
DBG(48568090)> MT EXP: Tape to CRT 0473: 0000000000000000 
DBG(48568090)> MT EXP: End Of Block Word: 0190030103770004, data words in block: 77
DBG(48568090)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.09% of medium (14.54 inches)
DBG(48568093)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48568094)> CPU DETAIL: Condition not present 
DBG(48568096)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48568097)> CPU DETAIL: Condition not present 
DBG(48568099)> CPU CMD: Exec 0022: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48568100)> CPU DETAIL: Write 1603: 0190030103770004 
DBG(48568102)> CPU CMD: Exec 0023: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        01 90 aaaa bbbb nnnn ma 
DBG(48568103)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48568104)> CPU DETAIL: Result: 0000000003770000 
DBG(48568105)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000377 
DBG(48568106)> CPU DETAIL: Write 1604: 0000000000000377 
DBG(48568108)> CPU CMD: Exec 0024: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        01 90 aaaa bbbb nnnn ma 
DBG(48568109)> CPU DETAIL: Read R 1603: 0190030103770004 
DBG(48568110)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48568111)> CPU DETAIL: Result: 0000030100000000 
DBG(48568112)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48568115)> CPU CMD: Exec 0025: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48568116)> CPU DETAIL: Read R 1604: 0000000000000377 
DBG(48568117)> CPU DETAIL: Result: 0000000000000076 
DBG(48568118)> CPU DETAIL: Write 1605: 0000000000000076 
DBG(48568120)> CPU CMD: Exec 0026: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48568121)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48568122)> CPU DETAIL: Result: 0000000000000077 
DBG(48568123)> CPU DETAIL: Write 1605: 0000000000000077 
DBG(48568125)> CPU CMD: Exec 0027: 00 52 0000 0000 0000   clear M6   
DBG(48568126)> CPU DETAIL: M4: 0013 
DBG(48568127)> CPU DETAIL: Clear M6
DBG(48568127)> CPU DETAIL: M6: 0000 
DBG(48568128)> CPU DETAIL: M8: 0013 
DBG(48568131)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48568132)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48568133)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48568134)> CPU DETAIL: Result: 0000000000000077 
DBG(48568137)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48568138)> CPU DETAIL: REG1: 0000000000000077
DBG(48568138)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48568140)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48568141)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48568141)> CPU DETAIL: Read R 0397: 0130000000141111 
DBG(48568142)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48568143)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48568145)> CPU CMD: Exec 0036: 00 60 0403 1608 0000   (0403 = event w7) -> (1608)   
DBG(48568146)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48568147)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48568149)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48568150)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48568151)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48568152)> CPU DETAIL: Result: 0000000000000000 
DBG(48568153)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48568154)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48568156)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48568157)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48568158)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48568159)> CPU DETAIL: Result: 0000000000000002 
DBG(48568160)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48568162)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48568163)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48568164)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48568165)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48568168)> CPU CMD: Exec 0040: 00 60 1646 0054 0000   predecessor=0 -> set 0054 as nop to save event in tape 2   
DBG(48568169)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48568170)> CPU DETAIL: Write 0054: 0060000000000000 
DBG(48568172)> CPU CMD: Exec 0041: 00 70 1610 1640 0044   if num successors w7 = zero goto 0044   
DBG(48568173)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48568174)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48568175)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48568178)> CPU CMD: Exec 0042: 00 60 0000 0000 0045   goto 0045   
DBG(48568179)> CPU DETAIL: Transfer to T 
DBG(48568181)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48568182)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568183)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48568186)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48568187)> CPU DETAIL: Read R 0050: 0658000100000048 
DBG(48568188)> CPU DETAIL: Result: 0658000100130048 
DBG(48568189)> CPU DETAIL: Write 0050: 0658000100130048 
DBG(48568191)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48568192)> CPU DETAIL: M4: 0013 
DBG(48568193)> CPU DETAIL: M6: 0000 
DBG(48568194)> CPU DETAIL: Clear M8
DBG(48568194)> CPU DETAIL: M8: 0000 
DBG(48568197)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568198)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48568198)> CPU DETAIL: Read R 0397: 0130000000141111 
DBG(48568199)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48568199)> CPU DETAIL: Write 0598: 0130000000141111 
DBG(48568201)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568202)> CPU DETAIL: M4: 0013 
DBG(48568203)> CPU DETAIL: M6: 0000 
DBG(48568204)> CPU DETAIL: M8: 0001 
DBG(48568207)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568208)> CPU DETAIL: M6: 0001 
DBG(48568209)> CPU DETAIL: Transfer to T 
DBG(48568211)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568212)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48568212)> CPU DETAIL: Read R 0398: 0000000233000000 
DBG(48568213)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48568213)> CPU DETAIL: Write 0599: 0000000233000000 
DBG(48568215)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568216)> CPU DETAIL: M4: 0013 
DBG(48568217)> CPU DETAIL: M6: 0001 
DBG(48568218)> CPU DETAIL: M8: 0002 
DBG(48568221)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568222)> CPU DETAIL: M6: 0002 
DBG(48568223)> CPU DETAIL: Transfer to T 
DBG(48568225)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568226)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48568226)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48568227)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48568227)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48568229)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568230)> CPU DETAIL: M4: 0013 
DBG(48568231)> CPU DETAIL: M6: 0002 
DBG(48568232)> CPU DETAIL: M8: 0003 
DBG(48568235)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568236)> CPU DETAIL: M6: 0003 
DBG(48568237)> CPU DETAIL: Transfer to T 
DBG(48568239)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568240)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48568240)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48568241)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48568241)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48568243)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568244)> CPU DETAIL: M4: 0013 
DBG(48568245)> CPU DETAIL: M6: 0003 
DBG(48568246)> CPU DETAIL: M8: 0004 
DBG(48568249)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568250)> CPU DETAIL: M6: 0004 
DBG(48568251)> CPU DETAIL: Transfer to T 
DBG(48568253)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568254)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48568254)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48568255)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48568255)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48568257)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568258)> CPU DETAIL: M4: 0013 
DBG(48568259)> CPU DETAIL: M6: 0004 
DBG(48568260)> CPU DETAIL: M8: 0005 
DBG(48568263)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568264)> CPU DETAIL: M6: 0005 
DBG(48568265)> CPU DETAIL: Transfer to T 
DBG(48568267)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568268)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48568268)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48568269)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48568269)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48568271)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568272)> CPU DETAIL: M4: 0013 
DBG(48568273)> CPU DETAIL: M6: 0005 
DBG(48568274)> CPU DETAIL: M8: 0006 
DBG(48568277)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568278)> CPU DETAIL: M6: 0006 
DBG(48568279)> CPU DETAIL: Transfer to T 
DBG(48568281)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568282)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48568282)> CPU DETAIL: Read R 0403: 3333444455660002 
DBG(48568283)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48568283)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48568285)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568286)> CPU DETAIL: M4: 0013 
DBG(48568287)> CPU DETAIL: M6: 0006 
DBG(48568288)> CPU DETAIL: M8: 0007 
DBG(48568291)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568292)> CPU DETAIL: M6: 0007 
DBG(48568293)> CPU DETAIL: Transfer to T 
DBG(48568295)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568296)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48568296)> CPU DETAIL: Read R 0404: 0000000233010000 
DBG(48568297)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48568297)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48568299)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568300)> CPU DETAIL: M4: 0013 
DBG(48568301)> CPU DETAIL: M6: 0007 
DBG(48568302)> CPU DETAIL: M8: 0008 
DBG(48568305)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568306)> CPU DETAIL: M6: 0008 
DBG(48568307)> CPU DETAIL: Transfer to T 
DBG(48568309)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568310)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48568310)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48568311)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48568311)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48568313)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568314)> CPU DETAIL: M4: 0013 
DBG(48568315)> CPU DETAIL: M6: 0008 
DBG(48568316)> CPU DETAIL: M8: 0009 
DBG(48568319)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568320)> CPU DETAIL: M6: 0009 
DBG(48568321)> CPU DETAIL: Transfer to T 
DBG(48568323)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568324)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48568324)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48568325)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48568325)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48568327)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568328)> CPU DETAIL: M4: 0013 
DBG(48568329)> CPU DETAIL: M6: 0009 
DBG(48568330)> CPU DETAIL: M8: 0010 
DBG(48568333)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568334)> CPU DETAIL: M6: 0010 
DBG(48568335)> CPU DETAIL: Transfer to T 
DBG(48568337)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568338)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48568338)> CPU DETAIL: Read R 0407: 0000000233020000 
DBG(48568339)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48568339)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48568341)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568342)> CPU DETAIL: M4: 0013 
DBG(48568343)> CPU DETAIL: M6: 0010 
DBG(48568344)> CPU DETAIL: M8: 0011 
DBG(48568347)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568348)> CPU DETAIL: M6: 0011 
DBG(48568349)> CPU DETAIL: Transfer to T 
DBG(48568351)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568352)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48568352)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48568353)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48568353)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48568355)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568356)> CPU DETAIL: M4: 0013 
DBG(48568357)> CPU DETAIL: M6: 0011 
DBG(48568358)> CPU DETAIL: M8: 0012 
DBG(48568361)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568362)> CPU DETAIL: M6: 0012 
DBG(48568363)> CPU DETAIL: Transfer to T 
DBG(48568365)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568366)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48568366)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48568367)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48568367)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48568369)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568370)> CPU DETAIL: M4: 0013 
DBG(48568371)> CPU DETAIL: M6: 0012 
DBG(48568372)> CPU DETAIL: M8: 0013 
DBG(48568375)> CPU CMD: Exec 0050: 06 58 0001 0013 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568376)> CPU DETAIL: M6: 0013 
DBG(48568379)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48568380)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568381)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48568382)> CPU DETAIL: Result: 0000000000000013 
DBG(48568383)> CPU DETAIL: Write 1606: 0000000000000013 
DBG(48568385)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48568386)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568387)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48568390)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48568391)> CPU DETAIL: Read R 0036: 0060040316080000 
DBG(48568392)> CPU DETAIL: Result: 0060041616080000 
DBG(48568393)> CPU DETAIL: Write 0036: 0060041616080000 
DBG(48568395)> CPU CMD: Exec 0054: 00 60 0000 0000 0000   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48568398)> CPU CMD: Exec 0055: 00 40 1611 1607 0000   (1611 num of words in output block) + (1607 event rec len NNN) -> REG1   
DBG(48568399)> CPU DETAIL: Read R 1611: 0000000000000036 
DBG(48568400)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48568401)> CPU DETAIL: Result: 0000000000000049 
DBG(48568404)> CPU CMD: Exec 0056: 00 41 1650 0000 0000   const 200 - REG1   
DBG(48568405)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48568406)> CPU DETAIL: Result: 0000000000000151 
DBG(48568409)> CPU CMD: Exec 0057: 00 63 0000 0060 0059   if =0 goto 0060, if <0 goto 0059   
DBG(48568410)> CPU DETAIL: REG1: 0000000000000151
DBG(48568410)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48568412)> CPU CMD: Exec 0058: 00 60 1647 0069 0062   enough room in out block for event: set exit to read next event rec, goto 00 
DBG(48568413)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48568414)> CPU DETAIL: Transfer to T 
DBG(48568414)> CPU DETAIL: Write 0069: 0060000000000028 
DBG(48568416)> CPU CMD: Exec 0062: 00 51 0000 0000 0000   clear M4   
DBG(48568417)> CPU DETAIL: Clear M4
DBG(48568417)> CPU DETAIL: M4: 0000 
DBG(48568418)> CPU DETAIL: M6: 0013 
DBG(48568419)> CPU DETAIL: M8: 0013 
DBG(48568422)> CPU CMD: Exec 0063: 96 60 1607 0000 0000   set instr 0068    
DBG(48568423)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48568424)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48568427)> CPU CMD: Exec 0064: 00 40 1649 0000 0068   ... to loop if M4<>(1607 event rec len NNN)   
DBG(48568428)> CPU DETAIL: Read R 1649: 0458000100000065 
DBG(48568429)> CPU DETAIL: Result: 0458000100130065 
DBG(48568430)> CPU DETAIL: Write 0068: 0458000100130065 
DBG(48568432)> CPU CMD: Exec 0065: 00 60 4598 0834 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568433)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48568433)> CPU DETAIL: Read R 0598: 0130000000141111 
DBG(48568434)> CPU DETAIL: Write 0834: 0130000000141111 
DBG(48568436)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568437)> CPU DETAIL: Read R 0065: 0060459808340000 
DBG(48568438)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568439)> CPU DETAIL: Result: 0060459808350000 
DBG(48568440)> CPU DETAIL: Write 0065: 0060459808350000 
DBG(48568442)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568443)> CPU DETAIL: Read R 1611: 0000000000000036 
DBG(48568444)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568445)> CPU DETAIL: Result: 0000000000000037 
DBG(48568446)> CPU DETAIL: Write 1611: 0000000000000037 
DBG(48568448)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568449)> CPU DETAIL: M4: 0001 
DBG(48568450)> CPU DETAIL: Transfer to T 
DBG(48568452)> CPU CMD: Exec 0065: 00 60 4598 0835 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568453)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48568453)> CPU DETAIL: Read R 0599: 0000000233000000 
DBG(48568454)> CPU DETAIL: Write 0835: 0000000233000000 
DBG(48568456)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568457)> CPU DETAIL: Read R 0065: 0060459808350000 
DBG(48568458)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568459)> CPU DETAIL: Result: 0060459808360000 
DBG(48568460)> CPU DETAIL: Write 0065: 0060459808360000 
DBG(48568462)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568463)> CPU DETAIL: Read R 1611: 0000000000000037 
DBG(48568464)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568465)> CPU DETAIL: Result: 0000000000000038 
DBG(48568466)> CPU DETAIL: Write 1611: 0000000000000038 
DBG(48568468)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568469)> CPU DETAIL: M4: 0002 
DBG(48568470)> CPU DETAIL: Transfer to T 
DBG(48568472)> CPU CMD: Exec 0065: 00 60 4598 0836 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568473)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48568473)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48568474)> CPU DETAIL: Write 0836: 0000000000000000 
DBG(48568476)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568477)> CPU DETAIL: Read R 0065: 0060459808360000 
DBG(48568478)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568479)> CPU DETAIL: Result: 0060459808370000 
DBG(48568480)> CPU DETAIL: Write 0065: 0060459808370000 
DBG(48568482)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568483)> CPU DETAIL: Read R 1611: 0000000000000038 
DBG(48568484)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568485)> CPU DETAIL: Result: 0000000000000039 
DBG(48568486)> CPU DETAIL: Write 1611: 0000000000000039 
DBG(48568488)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568489)> CPU DETAIL: M4: 0003 
DBG(48568490)> CPU DETAIL: Transfer to T 
DBG(48568492)> CPU CMD: Exec 0065: 00 60 4598 0837 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568493)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48568493)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48568494)> CPU DETAIL: Write 0837: 0000000000000000 
DBG(48568496)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568497)> CPU DETAIL: Read R 0065: 0060459808370000 
DBG(48568498)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568499)> CPU DETAIL: Result: 0060459808380000 
DBG(48568500)> CPU DETAIL: Write 0065: 0060459808380000 
DBG(48568502)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568503)> CPU DETAIL: Read R 1611: 0000000000000039 
DBG(48568504)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568505)> CPU DETAIL: Result: 0000000000000040 
DBG(48568506)> CPU DETAIL: Write 1611: 0000000000000040 
DBG(48568508)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568509)> CPU DETAIL: M4: 0004 
DBG(48568510)> CPU DETAIL: Transfer to T 
DBG(48568512)> CPU CMD: Exec 0065: 00 60 4598 0838 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568513)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48568513)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48568514)> CPU DETAIL: Write 0838: 0000000000000000 
DBG(48568516)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568517)> CPU DETAIL: Read R 0065: 0060459808380000 
DBG(48568518)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568519)> CPU DETAIL: Result: 0060459808390000 
DBG(48568520)> CPU DETAIL: Write 0065: 0060459808390000 
DBG(48568522)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568523)> CPU DETAIL: Read R 1611: 0000000000000040 
DBG(48568524)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568525)> CPU DETAIL: Result: 0000000000000041 
DBG(48568526)> CPU DETAIL: Write 1611: 0000000000000041 
DBG(48568528)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568529)> CPU DETAIL: M4: 0005 
DBG(48568530)> CPU DETAIL: Transfer to T 
DBG(48568532)> CPU CMD: Exec 0065: 00 60 4598 0839 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568533)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48568533)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48568534)> CPU DETAIL: Write 0839: 0000000000000000 
DBG(48568536)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568537)> CPU DETAIL: Read R 0065: 0060459808390000 
DBG(48568538)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568539)> CPU DETAIL: Result: 0060459808400000 
DBG(48568540)> CPU DETAIL: Write 0065: 0060459808400000 
DBG(48568542)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568543)> CPU DETAIL: Read R 1611: 0000000000000041 
DBG(48568544)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568545)> CPU DETAIL: Result: 0000000000000042 
DBG(48568546)> CPU DETAIL: Write 1611: 0000000000000042 
DBG(48568548)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568549)> CPU DETAIL: M4: 0006 
DBG(48568550)> CPU DETAIL: Transfer to T 
DBG(48568552)> CPU CMD: Exec 0065: 00 60 4598 0840 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568553)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48568553)> CPU DETAIL: Read R 0604: 3333444455660002 
DBG(48568554)> CPU DETAIL: Write 0840: 3333444455660002 
DBG(48568556)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568557)> CPU DETAIL: Read R 0065: 0060459808400000 
DBG(48568558)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568559)> CPU DETAIL: Result: 0060459808410000 
DBG(48568560)> CPU DETAIL: Write 0065: 0060459808410000 
DBG(48568562)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568563)> CPU DETAIL: Read R 1611: 0000000000000042 
DBG(48568564)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568565)> CPU DETAIL: Result: 0000000000000043 
DBG(48568566)> CPU DETAIL: Write 1611: 0000000000000043 
DBG(48568568)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568569)> CPU DETAIL: M4: 0007 
DBG(48568570)> CPU DETAIL: Transfer to T 
DBG(48568572)> CPU CMD: Exec 0065: 00 60 4598 0841 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568573)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48568573)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48568574)> CPU DETAIL: Write 0841: 0000000233010000 
DBG(48568576)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568577)> CPU DETAIL: Read R 0065: 0060459808410000 
DBG(48568578)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568579)> CPU DETAIL: Result: 0060459808420000 
DBG(48568580)> CPU DETAIL: Write 0065: 0060459808420000 
DBG(48568582)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568583)> CPU DETAIL: Read R 1611: 0000000000000043 
DBG(48568584)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568585)> CPU DETAIL: Result: 0000000000000044 
DBG(48568586)> CPU DETAIL: Write 1611: 0000000000000044 
DBG(48568588)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568589)> CPU DETAIL: M4: 0008 
DBG(48568590)> CPU DETAIL: Transfer to T 
DBG(48568592)> CPU CMD: Exec 0065: 00 60 4598 0842 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568593)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48568593)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48568594)> CPU DETAIL: Write 0842: 0000000000000000 
DBG(48568596)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568597)> CPU DETAIL: Read R 0065: 0060459808420000 
DBG(48568598)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568599)> CPU DETAIL: Result: 0060459808430000 
DBG(48568600)> CPU DETAIL: Write 0065: 0060459808430000 
DBG(48568602)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568603)> CPU DETAIL: Read R 1611: 0000000000000044 
DBG(48568604)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568605)> CPU DETAIL: Result: 0000000000000045 
DBG(48568606)> CPU DETAIL: Write 1611: 0000000000000045 
DBG(48568608)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568609)> CPU DETAIL: M4: 0009 
DBG(48568610)> CPU DETAIL: Transfer to T 
DBG(48568612)> CPU CMD: Exec 0065: 00 60 4598 0843 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568613)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48568613)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48568614)> CPU DETAIL: Write 0843: 0000000000000000 
DBG(48568616)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568617)> CPU DETAIL: Read R 0065: 0060459808430000 
DBG(48568618)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568619)> CPU DETAIL: Result: 0060459808440000 
DBG(48568620)> CPU DETAIL: Write 0065: 0060459808440000 
DBG(48568622)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568623)> CPU DETAIL: Read R 1611: 0000000000000045 
DBG(48568624)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568625)> CPU DETAIL: Result: 0000000000000046 
DBG(48568626)> CPU DETAIL: Write 1611: 0000000000000046 
DBG(48568628)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568629)> CPU DETAIL: M4: 0010 
DBG(48568630)> CPU DETAIL: Transfer to T 
DBG(48568632)> CPU CMD: Exec 0065: 00 60 4598 0844 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568633)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48568633)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48568634)> CPU DETAIL: Write 0844: 0000000233020000 
DBG(48568636)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568637)> CPU DETAIL: Read R 0065: 0060459808440000 
DBG(48568638)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568639)> CPU DETAIL: Result: 0060459808450000 
DBG(48568640)> CPU DETAIL: Write 0065: 0060459808450000 
DBG(48568642)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568643)> CPU DETAIL: Read R 1611: 0000000000000046 
DBG(48568644)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568645)> CPU DETAIL: Result: 0000000000000047 
DBG(48568646)> CPU DETAIL: Write 1611: 0000000000000047 
DBG(48568648)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568649)> CPU DETAIL: M4: 0011 
DBG(48568650)> CPU DETAIL: Transfer to T 
DBG(48568652)> CPU CMD: Exec 0065: 00 60 4598 0845 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568653)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48568653)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48568654)> CPU DETAIL: Write 0845: 0000000000000000 
DBG(48568656)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568657)> CPU DETAIL: Read R 0065: 0060459808450000 
DBG(48568658)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568659)> CPU DETAIL: Result: 0060459808460000 
DBG(48568660)> CPU DETAIL: Write 0065: 0060459808460000 
DBG(48568662)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568663)> CPU DETAIL: Read R 1611: 0000000000000047 
DBG(48568664)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568665)> CPU DETAIL: Result: 0000000000000048 
DBG(48568666)> CPU DETAIL: Write 1611: 0000000000000048 
DBG(48568668)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568669)> CPU DETAIL: M4: 0012 
DBG(48568670)> CPU DETAIL: Transfer to T 
DBG(48568672)> CPU CMD: Exec 0065: 00 60 4598 0846 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48568673)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48568673)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48568674)> CPU DETAIL: Write 0846: 0000000000000000 
DBG(48568676)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48568677)> CPU DETAIL: Read R 0065: 0060459808460000 
DBG(48568678)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48568679)> CPU DETAIL: Result: 0060459808470000 
DBG(48568680)> CPU DETAIL: Write 0065: 0060459808470000 
DBG(48568682)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48568683)> CPU DETAIL: Read R 1611: 0000000000000048 
DBG(48568684)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48568685)> CPU DETAIL: Result: 0000000000000049 
DBG(48568686)> CPU DETAIL: Write 1611: 0000000000000049 
DBG(48568688)> CPU CMD: Exec 0068: 04 58 0001 0013 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48568689)> CPU DETAIL: M4: 0013 
DBG(48568692)> CPU CMD: Exec 0069: 00 60 0000 0000 0028   exit: goto 0028 read next event rec   
DBG(48568693)> CPU DETAIL: Transfer to T 
DBG(48568695)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48568696)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48568697)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48568698)> CPU DETAIL: Result: 0000000000000064 
DBG(48568701)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48568702)> CPU DETAIL: REG1: 0000000000000064
DBG(48568702)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48568704)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48568705)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48568705)> CPU DETAIL: Read R 0410: 0190000000141112 
DBG(48568706)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000019 
DBG(48568707)> CPU DETAIL: Write 1607: 0000000000000019 
DBG(48568709)> CPU CMD: Exec 0036: 00 60 0416 1608 0000   (0403 = event w7) -> (1608)   
DBG(48568710)> CPU DETAIL: Read R 0416: 3334444455660103 
DBG(48568711)> CPU DETAIL: Write 1608: 3334444455660103 
DBG(48568713)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48568714)> CPU DETAIL: Read R 1608: 3334444455660103 
DBG(48568715)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48568716)> CPU DETAIL: Result: 0000000000000100 
DBG(48568717)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48568718)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48568720)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48568721)> CPU DETAIL: Read R 1608: 3334444455660103 
DBG(48568722)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48568723)> CPU DETAIL: Result: 0000000000000003 
DBG(48568724)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48568726)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48568727)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48568728)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48568729)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48568730)> CPU DETAIL: Transfer to T 
DBG(48568732)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48568733)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48568734)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48568736)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48568737)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48568738)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000190000 
DBG(48568741)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48568742)> CPU DETAIL: Read R 0050: 0658000100130048 
DBG(48568743)> CPU DETAIL: Result: 0658000100320048 
DBG(48568744)> CPU DETAIL: Write 0050: 0658000100320048 
DBG(48568746)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48568747)> CPU DETAIL: M4: 0013 
DBG(48568748)> CPU DETAIL: M6: 0013 
DBG(48568749)> CPU DETAIL: Clear M8
DBG(48568749)> CPU DETAIL: M8: 0000 
DBG(48568752)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568753)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48568753)> CPU DETAIL: Read R 0410: 0190000000141112 
DBG(48568754)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48568754)> CPU DETAIL: Write 0598: 0190000000141112 
DBG(48568756)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568757)> CPU DETAIL: M4: 0013 
DBG(48568758)> CPU DETAIL: M6: 0013 
DBG(48568759)> CPU DETAIL: M8: 0001 
DBG(48568762)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568763)> CPU DETAIL: M6: 0014 
DBG(48568764)> CPU DETAIL: Transfer to T 
DBG(48568766)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568767)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48568767)> CPU DETAIL: Read R 0411: 0000000233010000 
DBG(48568768)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48568768)> CPU DETAIL: Write 0599: 0000000233010000 
DBG(48568770)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568771)> CPU DETAIL: M4: 0013 
DBG(48568772)> CPU DETAIL: M6: 0014 
DBG(48568773)> CPU DETAIL: M8: 0002 
DBG(48568776)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568777)> CPU DETAIL: M6: 0015 
DBG(48568778)> CPU DETAIL: Transfer to T 
DBG(48568780)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568781)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48568781)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48568782)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48568782)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48568784)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568785)> CPU DETAIL: M4: 0013 
DBG(48568786)> CPU DETAIL: M6: 0015 
DBG(48568787)> CPU DETAIL: M8: 0003 
DBG(48568790)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568791)> CPU DETAIL: M6: 0016 
DBG(48568792)> CPU DETAIL: Transfer to T 
DBG(48568794)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568795)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48568795)> CPU DETAIL: Read R 0413: 0000000000000000 
DBG(48568796)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48568796)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48568798)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568799)> CPU DETAIL: M4: 0013 
DBG(48568800)> CPU DETAIL: M6: 0016 
DBG(48568801)> CPU DETAIL: M8: 0004 
DBG(48568804)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568805)> CPU DETAIL: M6: 0017 
DBG(48568806)> CPU DETAIL: Transfer to T 
DBG(48568808)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568809)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48568809)> CPU DETAIL: Read R 0414: 0000000000000000 
DBG(48568810)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48568810)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48568812)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568813)> CPU DETAIL: M4: 0013 
DBG(48568814)> CPU DETAIL: M6: 0017 
DBG(48568815)> CPU DETAIL: M8: 0005 
DBG(48568818)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568819)> CPU DETAIL: M6: 0018 
DBG(48568820)> CPU DETAIL: Transfer to T 
DBG(48568822)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568823)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48568823)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48568824)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48568824)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48568826)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568827)> CPU DETAIL: M4: 0013 
DBG(48568828)> CPU DETAIL: M6: 0018 
DBG(48568829)> CPU DETAIL: M8: 0006 
DBG(48568832)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568833)> CPU DETAIL: M6: 0019 
DBG(48568834)> CPU DETAIL: Transfer to T 
DBG(48568836)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568837)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48568837)> CPU DETAIL: Read R 0416: 3334444455660103 
DBG(48568838)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48568838)> CPU DETAIL: Write 0604: 3334444455660103 
DBG(48568840)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568841)> CPU DETAIL: M4: 0013 
DBG(48568842)> CPU DETAIL: M6: 0019 
DBG(48568843)> CPU DETAIL: M8: 0007 
DBG(48568846)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568847)> CPU DETAIL: M6: 0020 
DBG(48568848)> CPU DETAIL: Transfer to T 
DBG(48568850)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568851)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48568851)> CPU DETAIL: Read R 0417: 0000000233000000 
DBG(48568852)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48568852)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48568854)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568855)> CPU DETAIL: M4: 0013 
DBG(48568856)> CPU DETAIL: M6: 0020 
DBG(48568857)> CPU DETAIL: M8: 0008 
DBG(48568860)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568861)> CPU DETAIL: M6: 0021 
DBG(48568862)> CPU DETAIL: Transfer to T 
DBG(48568864)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568865)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48568865)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48568866)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48568866)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48568868)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568869)> CPU DETAIL: M4: 0013 
DBG(48568870)> CPU DETAIL: M6: 0021 
DBG(48568871)> CPU DETAIL: M8: 0009 
DBG(48568874)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568875)> CPU DETAIL: M6: 0022 
DBG(48568876)> CPU DETAIL: Transfer to T 
DBG(48568878)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568879)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48568879)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48568880)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48568880)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48568882)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568883)> CPU DETAIL: M4: 0013 
DBG(48568884)> CPU DETAIL: M6: 0022 
DBG(48568885)> CPU DETAIL: M8: 0010 
DBG(48568888)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568889)> CPU DETAIL: M6: 0023 
DBG(48568890)> CPU DETAIL: Transfer to T 
DBG(48568892)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568893)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48568893)> CPU DETAIL: Read R 0420: 0000000233020000 
DBG(48568894)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48568894)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48568896)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568897)> CPU DETAIL: M4: 0013 
DBG(48568898)> CPU DETAIL: M6: 0023 
DBG(48568899)> CPU DETAIL: M8: 0011 
DBG(48568902)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568903)> CPU DETAIL: M6: 0024 
DBG(48568904)> CPU DETAIL: Transfer to T 
DBG(48568906)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568907)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48568907)> CPU DETAIL: Read R 0421: 0000000000000000 
DBG(48568908)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48568908)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48568910)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568911)> CPU DETAIL: M4: 0013 
DBG(48568912)> CPU DETAIL: M6: 0024 
DBG(48568913)> CPU DETAIL: M8: 0012 
DBG(48568916)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568917)> CPU DETAIL: M6: 0025 
DBG(48568918)> CPU DETAIL: Transfer to T 
DBG(48568920)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568921)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48568921)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48568922)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48568922)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48568924)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568925)> CPU DETAIL: M4: 0013 
DBG(48568926)> CPU DETAIL: M6: 0025 
DBG(48568927)> CPU DETAIL: M8: 0013 
DBG(48568930)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568931)> CPU DETAIL: M6: 0026 
DBG(48568932)> CPU DETAIL: Transfer to T 
DBG(48568934)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568935)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48568935)> CPU DETAIL: Read R 0423: 0000000233030000 
DBG(48568936)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48568936)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48568938)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568939)> CPU DETAIL: M4: 0013 
DBG(48568940)> CPU DETAIL: M6: 0026 
DBG(48568941)> CPU DETAIL: M8: 0014 
DBG(48568944)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568945)> CPU DETAIL: M6: 0027 
DBG(48568946)> CPU DETAIL: Transfer to T 
DBG(48568948)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568949)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48568949)> CPU DETAIL: Read R 0424: 0000000000000000 
DBG(48568950)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48568950)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48568952)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568953)> CPU DETAIL: M4: 0013 
DBG(48568954)> CPU DETAIL: M6: 0027 
DBG(48568955)> CPU DETAIL: M8: 0015 
DBG(48568958)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568959)> CPU DETAIL: M6: 0028 
DBG(48568960)> CPU DETAIL: Transfer to T 
DBG(48568962)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568963)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48568963)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48568964)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48568964)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48568966)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568967)> CPU DETAIL: M4: 0013 
DBG(48568968)> CPU DETAIL: M6: 0028 
DBG(48568969)> CPU DETAIL: M8: 0016 
DBG(48568972)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568973)> CPU DETAIL: M6: 0029 
DBG(48568974)> CPU DETAIL: Transfer to T 
DBG(48568976)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568977)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48568977)> CPU DETAIL: Read R 0426: 0000000233090000 
DBG(48568978)> CPU DETAIL: M8 Address Modifier: 0016 
DBG(48568978)> CPU DETAIL: Write 0614: 0000000233090000 
DBG(48568980)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568981)> CPU DETAIL: M4: 0013 
DBG(48568982)> CPU DETAIL: M6: 0029 
DBG(48568983)> CPU DETAIL: M8: 0017 
DBG(48568986)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48568987)> CPU DETAIL: M6: 0030 
DBG(48568988)> CPU DETAIL: Transfer to T 
DBG(48568990)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48568991)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48568991)> CPU DETAIL: Read R 0427: 0000000000000000 
DBG(48568992)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(48568992)> CPU DETAIL: Write 0615: 0000000000000000 
DBG(48568994)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48568995)> CPU DETAIL: M4: 0013 
DBG(48568996)> CPU DETAIL: M6: 0030 
DBG(48568997)> CPU DETAIL: M8: 0018 
DBG(48569000)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569001)> CPU DETAIL: M6: 0031 
DBG(48569002)> CPU DETAIL: Transfer to T 
DBG(48569004)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569005)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48569005)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48569006)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(48569006)> CPU DETAIL: Write 0616: 0000000000000000 
DBG(48569008)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569009)> CPU DETAIL: M4: 0013 
DBG(48569010)> CPU DETAIL: M6: 0031 
DBG(48569011)> CPU DETAIL: M8: 0019 
DBG(48569014)> CPU CMD: Exec 0050: 06 58 0001 0032 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569015)> CPU DETAIL: M6: 0032 
DBG(48569018)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48569019)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48569020)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48569021)> CPU DETAIL: Result: 0000000000000032 
DBG(48569022)> CPU DETAIL: Write 1606: 0000000000000032 
DBG(48569024)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48569025)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48569026)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001900000000 
DBG(48569029)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48569030)> CPU DETAIL: Read R 0036: 0060041616080000 
DBG(48569031)> CPU DETAIL: Result: 0060043516080000 
DBG(48569032)> CPU DETAIL: Write 0036: 0060043516080000 
DBG(48569034)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48569035)> CPU DETAIL: Transfer to T 
DBG(48569037)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48569038)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48569039)> CPU DETAIL: Read S 1606: 0000000000000032 
DBG(48569040)> CPU DETAIL: Result: 0000000000000045 
DBG(48569043)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48569044)> CPU DETAIL: REG1: 0000000000000045
DBG(48569044)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48569046)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48569047)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48569047)> CPU DETAIL: Read R 0429: 0160000000141013 
DBG(48569048)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48569049)> CPU DETAIL: Write 1607: 0000000000000016 
DBG(48569051)> CPU CMD: Exec 0036: 00 60 0435 1608 0000   (0403 = event w7) -> (1608)   
DBG(48569052)> CPU DETAIL: Read R 0435: 3335444455660201 
DBG(48569053)> CPU DETAIL: Write 1608: 3335444455660201 
DBG(48569055)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48569056)> CPU DETAIL: Read R 1608: 3335444455660201 
DBG(48569057)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48569058)> CPU DETAIL: Result: 0000000000000200 
DBG(48569059)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48569060)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48569062)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48569063)> CPU DETAIL: Read R 1608: 3335444455660201 
DBG(48569064)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48569065)> CPU DETAIL: Result: 0000000000000001 
DBG(48569066)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48569068)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48569069)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48569070)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48569071)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48569072)> CPU DETAIL: Transfer to T 
DBG(48569074)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48569075)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48569076)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48569078)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48569079)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569080)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48569083)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48569084)> CPU DETAIL: Read R 0050: 0658000100320048 
DBG(48569085)> CPU DETAIL: Result: 0658000100480048 
DBG(48569086)> CPU DETAIL: Write 0050: 0658000100480048 
DBG(48569088)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48569089)> CPU DETAIL: M4: 0013 
DBG(48569090)> CPU DETAIL: M6: 0032 
DBG(48569091)> CPU DETAIL: Clear M8
DBG(48569091)> CPU DETAIL: M8: 0000 
DBG(48569094)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569095)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48569095)> CPU DETAIL: Read R 0429: 0160000000141013 
DBG(48569096)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48569096)> CPU DETAIL: Write 0598: 0160000000141013 
DBG(48569098)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569099)> CPU DETAIL: M4: 0013 
DBG(48569100)> CPU DETAIL: M6: 0032 
DBG(48569101)> CPU DETAIL: M8: 0001 
DBG(48569104)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569105)> CPU DETAIL: M6: 0033 
DBG(48569106)> CPU DETAIL: Transfer to T 
DBG(48569108)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569109)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48569109)> CPU DETAIL: Read R 0430: 0000000233020003 
DBG(48569110)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48569110)> CPU DETAIL: Write 0599: 0000000233020003 
DBG(48569112)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569113)> CPU DETAIL: M4: 0013 
DBG(48569114)> CPU DETAIL: M6: 0033 
DBG(48569115)> CPU DETAIL: M8: 0002 
DBG(48569118)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569119)> CPU DETAIL: M6: 0034 
DBG(48569120)> CPU DETAIL: Transfer to T 
DBG(48569122)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569123)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48569123)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48569124)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48569124)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48569126)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569127)> CPU DETAIL: M4: 0013 
DBG(48569128)> CPU DETAIL: M6: 0034 
DBG(48569129)> CPU DETAIL: M8: 0003 
DBG(48569132)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569133)> CPU DETAIL: M6: 0035 
DBG(48569134)> CPU DETAIL: Transfer to T 
DBG(48569136)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569137)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48569137)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48569138)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48569138)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48569140)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569141)> CPU DETAIL: M4: 0013 
DBG(48569142)> CPU DETAIL: M6: 0035 
DBG(48569143)> CPU DETAIL: M8: 0004 
DBG(48569146)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569147)> CPU DETAIL: M6: 0036 
DBG(48569148)> CPU DETAIL: Transfer to T 
DBG(48569150)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569151)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48569151)> CPU DETAIL: Read R 0433: 0000000000000000 
DBG(48569152)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48569152)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48569154)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569155)> CPU DETAIL: M4: 0013 
DBG(48569156)> CPU DETAIL: M6: 0036 
DBG(48569157)> CPU DETAIL: M8: 0005 
DBG(48569160)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569161)> CPU DETAIL: M6: 0037 
DBG(48569162)> CPU DETAIL: Transfer to T 
DBG(48569164)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569165)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48569165)> CPU DETAIL: Read R 0434: 0000000000000000 
DBG(48569166)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48569166)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48569168)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569169)> CPU DETAIL: M4: 0013 
DBG(48569170)> CPU DETAIL: M6: 0037 
DBG(48569171)> CPU DETAIL: M8: 0006 
DBG(48569174)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569175)> CPU DETAIL: M6: 0038 
DBG(48569176)> CPU DETAIL: Transfer to T 
DBG(48569178)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569179)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48569179)> CPU DETAIL: Read R 0435: 3335444455660201 
DBG(48569180)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48569180)> CPU DETAIL: Write 0604: 3335444455660201 
DBG(48569182)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569183)> CPU DETAIL: M4: 0013 
DBG(48569184)> CPU DETAIL: M6: 0038 
DBG(48569185)> CPU DETAIL: M8: 0007 
DBG(48569188)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569189)> CPU DETAIL: M6: 0039 
DBG(48569190)> CPU DETAIL: Transfer to T 
DBG(48569192)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569193)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48569193)> CPU DETAIL: Read R 0436: 0000000233000000 
DBG(48569194)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48569194)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48569196)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569197)> CPU DETAIL: M4: 0013 
DBG(48569198)> CPU DETAIL: M6: 0039 
DBG(48569199)> CPU DETAIL: M8: 0008 
DBG(48569202)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569203)> CPU DETAIL: M6: 0040 
DBG(48569204)> CPU DETAIL: Transfer to T 
DBG(48569206)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569207)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48569207)> CPU DETAIL: Read R 0437: 0000000000000000 
DBG(48569208)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48569208)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48569210)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569211)> CPU DETAIL: M4: 0013 
DBG(48569212)> CPU DETAIL: M6: 0040 
DBG(48569213)> CPU DETAIL: M8: 0009 
DBG(48569216)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569217)> CPU DETAIL: M6: 0041 
DBG(48569218)> CPU DETAIL: Transfer to T 
DBG(48569220)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569221)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48569221)> CPU DETAIL: Read R 0438: 0000000000000000 
DBG(48569222)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48569222)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48569224)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569225)> CPU DETAIL: M4: 0013 
DBG(48569226)> CPU DETAIL: M6: 0041 
DBG(48569227)> CPU DETAIL: M8: 0010 
DBG(48569230)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569231)> CPU DETAIL: M6: 0042 
DBG(48569232)> CPU DETAIL: Transfer to T 
DBG(48569234)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569235)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48569235)> CPU DETAIL: Read R 0439: 0000000233010000 
DBG(48569236)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48569236)> CPU DETAIL: Write 0608: 0000000233010000 
DBG(48569238)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569239)> CPU DETAIL: M4: 0013 
DBG(48569240)> CPU DETAIL: M6: 0042 
DBG(48569241)> CPU DETAIL: M8: 0011 
DBG(48569244)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569245)> CPU DETAIL: M6: 0043 
DBG(48569246)> CPU DETAIL: Transfer to T 
DBG(48569248)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569249)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48569249)> CPU DETAIL: Read R 0440: 0000000000000000 
DBG(48569250)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48569250)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48569252)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569253)> CPU DETAIL: M4: 0013 
DBG(48569254)> CPU DETAIL: M6: 0043 
DBG(48569255)> CPU DETAIL: M8: 0012 
DBG(48569258)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569259)> CPU DETAIL: M6: 0044 
DBG(48569260)> CPU DETAIL: Transfer to T 
DBG(48569262)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569263)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48569263)> CPU DETAIL: Read R 0441: 0000000000000000 
DBG(48569264)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48569264)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48569266)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569267)> CPU DETAIL: M4: 0013 
DBG(48569268)> CPU DETAIL: M6: 0044 
DBG(48569269)> CPU DETAIL: M8: 0013 
DBG(48569272)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569273)> CPU DETAIL: M6: 0045 
DBG(48569274)> CPU DETAIL: Transfer to T 
DBG(48569276)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569277)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48569277)> CPU DETAIL: Read R 0442: 0000000233030000 
DBG(48569278)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48569278)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48569280)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569281)> CPU DETAIL: M4: 0013 
DBG(48569282)> CPU DETAIL: M6: 0045 
DBG(48569283)> CPU DETAIL: M8: 0014 
DBG(48569286)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569287)> CPU DETAIL: M6: 0046 
DBG(48569288)> CPU DETAIL: Transfer to T 
DBG(48569290)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569291)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48569291)> CPU DETAIL: Read R 0443: 0000000000000000 
DBG(48569292)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48569292)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48569294)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569295)> CPU DETAIL: M4: 0013 
DBG(48569296)> CPU DETAIL: M6: 0046 
DBG(48569297)> CPU DETAIL: M8: 0015 
DBG(48569300)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569301)> CPU DETAIL: M6: 0047 
DBG(48569302)> CPU DETAIL: Transfer to T 
DBG(48569304)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569305)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48569305)> CPU DETAIL: Read R 0444: 0000000000000000 
DBG(48569306)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48569306)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48569308)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569309)> CPU DETAIL: M4: 0013 
DBG(48569310)> CPU DETAIL: M6: 0047 
DBG(48569311)> CPU DETAIL: M8: 0016 
DBG(48569314)> CPU CMD: Exec 0050: 06 58 0001 0048 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569315)> CPU DETAIL: M6: 0048 
DBG(48569318)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48569319)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569320)> CPU DETAIL: Read S 1606: 0000000000000032 
DBG(48569321)> CPU DETAIL: Result: 0000000000000048 
DBG(48569322)> CPU DETAIL: Write 1606: 0000000000000048 
DBG(48569324)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48569325)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569326)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48569329)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48569330)> CPU DETAIL: Read R 0036: 0060043516080000 
DBG(48569331)> CPU DETAIL: Result: 0060045116080000 
DBG(48569332)> CPU DETAIL: Write 0036: 0060045116080000 
DBG(48569334)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48569335)> CPU DETAIL: Transfer to T 
DBG(48569337)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48569338)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48569339)> CPU DETAIL: Read S 1606: 0000000000000048 
DBG(48569340)> CPU DETAIL: Result: 0000000000000029 
DBG(48569343)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48569344)> CPU DETAIL: REG1: 0000000000000029
DBG(48569344)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48569346)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48569347)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48569347)> CPU DETAIL: Read R 0445: 0160000000141014 
DBG(48569348)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48569349)> CPU DETAIL: Write 1607: 0000000000000016 
DBG(48569351)> CPU CMD: Exec 0036: 00 60 0451 1608 0000   (0403 = event w7) -> (1608)   
DBG(48569352)> CPU DETAIL: Read R 0451: 3336000000000201 
DBG(48569353)> CPU DETAIL: Write 1608: 3336000000000201 
DBG(48569355)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48569356)> CPU DETAIL: Read R 1608: 3336000000000201 
DBG(48569357)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48569358)> CPU DETAIL: Result: 0000000000000200 
DBG(48569359)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48569360)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48569362)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48569363)> CPU DETAIL: Read R 1608: 3336000000000201 
DBG(48569364)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48569365)> CPU DETAIL: Result: 0000000000000001 
DBG(48569366)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48569368)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48569369)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48569370)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48569371)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48569372)> CPU DETAIL: Transfer to T 
DBG(48569374)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48569375)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48569376)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48569378)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48569379)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569380)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48569383)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48569384)> CPU DETAIL: Read R 0050: 0658000100480048 
DBG(48569385)> CPU DETAIL: Result: 0658000100640048 
DBG(48569386)> CPU DETAIL: Write 0050: 0658000100640048 
DBG(48569388)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48569389)> CPU DETAIL: M4: 0013 
DBG(48569390)> CPU DETAIL: M6: 0048 
DBG(48569391)> CPU DETAIL: Clear M8
DBG(48569391)> CPU DETAIL: M8: 0000 
DBG(48569394)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569395)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48569395)> CPU DETAIL: Read R 0445: 0160000000141014 
DBG(48569396)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48569396)> CPU DETAIL: Write 0598: 0160000000141014 
DBG(48569398)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569399)> CPU DETAIL: M4: 0013 
DBG(48569400)> CPU DETAIL: M6: 0048 
DBG(48569401)> CPU DETAIL: M8: 0001 
DBG(48569404)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569405)> CPU DETAIL: M6: 0049 
DBG(48569406)> CPU DETAIL: Transfer to T 
DBG(48569408)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569409)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48569409)> CPU DETAIL: Read R 0446: 0000000233030000 
DBG(48569410)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48569410)> CPU DETAIL: Write 0599: 0000000233030000 
DBG(48569412)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569413)> CPU DETAIL: M4: 0013 
DBG(48569414)> CPU DETAIL: M6: 0049 
DBG(48569415)> CPU DETAIL: M8: 0002 
DBG(48569418)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569419)> CPU DETAIL: M6: 0050 
DBG(48569420)> CPU DETAIL: Transfer to T 
DBG(48569422)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569423)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48569423)> CPU DETAIL: Read R 0447: 0000000000000000 
DBG(48569424)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48569424)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48569426)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569427)> CPU DETAIL: M4: 0013 
DBG(48569428)> CPU DETAIL: M6: 0050 
DBG(48569429)> CPU DETAIL: M8: 0003 
DBG(48569432)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569433)> CPU DETAIL: M6: 0051 
DBG(48569434)> CPU DETAIL: Transfer to T 
DBG(48569436)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569437)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48569437)> CPU DETAIL: Read R 0448: 0000000000000000 
DBG(48569438)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48569438)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48569440)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569441)> CPU DETAIL: M4: 0013 
DBG(48569442)> CPU DETAIL: M6: 0051 
DBG(48569443)> CPU DETAIL: M8: 0004 
DBG(48569446)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569447)> CPU DETAIL: M6: 0052 
DBG(48569448)> CPU DETAIL: Transfer to T 
DBG(48569450)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569451)> CPU DETAIL: M6 Address Modifier: 0052 
DBG(48569451)> CPU DETAIL: Read R 0449: 0000000000000000 
DBG(48569452)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48569452)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48569454)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569455)> CPU DETAIL: M4: 0013 
DBG(48569456)> CPU DETAIL: M6: 0052 
DBG(48569457)> CPU DETAIL: M8: 0005 
DBG(48569460)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569461)> CPU DETAIL: M6: 0053 
DBG(48569462)> CPU DETAIL: Transfer to T 
DBG(48569464)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569465)> CPU DETAIL: M6 Address Modifier: 0053 
DBG(48569465)> CPU DETAIL: Read R 0450: 0000000000000000 
DBG(48569466)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48569466)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48569468)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569469)> CPU DETAIL: M4: 0013 
DBG(48569470)> CPU DETAIL: M6: 0053 
DBG(48569471)> CPU DETAIL: M8: 0006 
DBG(48569474)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569475)> CPU DETAIL: M6: 0054 
DBG(48569476)> CPU DETAIL: Transfer to T 
DBG(48569478)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569479)> CPU DETAIL: M6 Address Modifier: 0054 
DBG(48569479)> CPU DETAIL: Read R 0451: 3336000000000201 
DBG(48569480)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48569480)> CPU DETAIL: Write 0604: 3336000000000201 
DBG(48569482)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569483)> CPU DETAIL: M4: 0013 
DBG(48569484)> CPU DETAIL: M6: 0054 
DBG(48569485)> CPU DETAIL: M8: 0007 
DBG(48569488)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569489)> CPU DETAIL: M6: 0055 
DBG(48569490)> CPU DETAIL: Transfer to T 
DBG(48569492)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569493)> CPU DETAIL: M6 Address Modifier: 0055 
DBG(48569493)> CPU DETAIL: Read R 0452: 0000000233010000 
DBG(48569494)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48569494)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48569496)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569497)> CPU DETAIL: M4: 0013 
DBG(48569498)> CPU DETAIL: M6: 0055 
DBG(48569499)> CPU DETAIL: M8: 0008 
DBG(48569502)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569503)> CPU DETAIL: M6: 0056 
DBG(48569504)> CPU DETAIL: Transfer to T 
DBG(48569506)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569507)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(48569507)> CPU DETAIL: Read R 0453: 0000000000000000 
DBG(48569508)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48569508)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48569510)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569511)> CPU DETAIL: M4: 0013 
DBG(48569512)> CPU DETAIL: M6: 0056 
DBG(48569513)> CPU DETAIL: M8: 0009 
DBG(48569516)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569517)> CPU DETAIL: M6: 0057 
DBG(48569518)> CPU DETAIL: Transfer to T 
DBG(48569520)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569521)> CPU DETAIL: M6 Address Modifier: 0057 
DBG(48569521)> CPU DETAIL: Read R 0454: 0000000000000000 
DBG(48569522)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48569522)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48569524)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569525)> CPU DETAIL: M4: 0013 
DBG(48569526)> CPU DETAIL: M6: 0057 
DBG(48569527)> CPU DETAIL: M8: 0010 
DBG(48569530)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569531)> CPU DETAIL: M6: 0058 
DBG(48569532)> CPU DETAIL: Transfer to T 
DBG(48569534)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569535)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48569535)> CPU DETAIL: Read R 0455: 0000000233020000 
DBG(48569536)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48569536)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48569538)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569539)> CPU DETAIL: M4: 0013 
DBG(48569540)> CPU DETAIL: M6: 0058 
DBG(48569541)> CPU DETAIL: M8: 0011 
DBG(48569544)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569545)> CPU DETAIL: M6: 0059 
DBG(48569546)> CPU DETAIL: Transfer to T 
DBG(48569548)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569549)> CPU DETAIL: M6 Address Modifier: 0059 
DBG(48569549)> CPU DETAIL: Read R 0456: 0000000000000000 
DBG(48569550)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48569550)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48569552)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569553)> CPU DETAIL: M4: 0013 
DBG(48569554)> CPU DETAIL: M6: 0059 
DBG(48569555)> CPU DETAIL: M8: 0012 
DBG(48569558)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569559)> CPU DETAIL: M6: 0060 
DBG(48569560)> CPU DETAIL: Transfer to T 
DBG(48569562)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569563)> CPU DETAIL: M6 Address Modifier: 0060 
DBG(48569563)> CPU DETAIL: Read R 0457: 0000000000000000 
DBG(48569564)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48569564)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48569566)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569567)> CPU DETAIL: M4: 0013 
DBG(48569568)> CPU DETAIL: M6: 0060 
DBG(48569569)> CPU DETAIL: M8: 0013 
DBG(48569572)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569573)> CPU DETAIL: M6: 0061 
DBG(48569574)> CPU DETAIL: Transfer to T 
DBG(48569576)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569577)> CPU DETAIL: M6 Address Modifier: 0061 
DBG(48569577)> CPU DETAIL: Read R 0458: 0000000233090000 
DBG(48569578)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48569578)> CPU DETAIL: Write 0611: 0000000233090000 
DBG(48569580)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569581)> CPU DETAIL: M4: 0013 
DBG(48569582)> CPU DETAIL: M6: 0061 
DBG(48569583)> CPU DETAIL: M8: 0014 
DBG(48569586)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569587)> CPU DETAIL: M6: 0062 
DBG(48569588)> CPU DETAIL: Transfer to T 
DBG(48569590)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569591)> CPU DETAIL: M6 Address Modifier: 0062 
DBG(48569591)> CPU DETAIL: Read R 0459: 0000000000000000 
DBG(48569592)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48569592)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48569594)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569595)> CPU DETAIL: M4: 0013 
DBG(48569596)> CPU DETAIL: M6: 0062 
DBG(48569597)> CPU DETAIL: M8: 0015 
DBG(48569600)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569601)> CPU DETAIL: M6: 0063 
DBG(48569602)> CPU DETAIL: Transfer to T 
DBG(48569604)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569605)> CPU DETAIL: M6 Address Modifier: 0063 
DBG(48569605)> CPU DETAIL: Read R 0460: 0000000000000000 
DBG(48569606)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48569606)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48569608)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569609)> CPU DETAIL: M4: 0013 
DBG(48569610)> CPU DETAIL: M6: 0063 
DBG(48569611)> CPU DETAIL: M8: 0016 
DBG(48569614)> CPU CMD: Exec 0050: 06 58 0001 0064 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569615)> CPU DETAIL: M6: 0064 
DBG(48569618)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48569619)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569620)> CPU DETAIL: Read S 1606: 0000000000000048 
DBG(48569621)> CPU DETAIL: Result: 0000000000000064 
DBG(48569622)> CPU DETAIL: Write 1606: 0000000000000064 
DBG(48569624)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48569625)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48569626)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48569629)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48569630)> CPU DETAIL: Read R 0036: 0060045116080000 
DBG(48569631)> CPU DETAIL: Result: 0060046716080000 
DBG(48569632)> CPU DETAIL: Write 0036: 0060046716080000 
DBG(48569634)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48569635)> CPU DETAIL: Transfer to T 
DBG(48569637)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48569638)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48569639)> CPU DETAIL: Read S 1606: 0000000000000064 
DBG(48569640)> CPU DETAIL: Result: 0000000000000013 
DBG(48569643)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48569644)> CPU DETAIL: REG1: 0000000000000013
DBG(48569644)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48569646)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48569647)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48569647)> CPU DETAIL: Read R 0461: 0130000000141015 
DBG(48569648)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48569649)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48569651)> CPU CMD: Exec 0036: 00 60 0467 1608 0000   (0403 = event w7) -> (1608)   
DBG(48569652)> CPU DETAIL: Read R 0467: 3336000000000200 
DBG(48569653)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48569655)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48569656)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48569657)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48569658)> CPU DETAIL: Result: 0000000000000200 
DBG(48569659)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48569660)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48569662)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48569663)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48569664)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48569665)> CPU DETAIL: Result: 0000000000000000 
DBG(48569666)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48569668)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48569669)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48569670)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48569671)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48569672)> CPU DETAIL: Transfer to T 
DBG(48569674)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48569675)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48569676)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48569678)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48569679)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48569680)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48569683)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48569684)> CPU DETAIL: Read R 0050: 0658000100640048 
DBG(48569685)> CPU DETAIL: Result: 0658000100770048 
DBG(48569686)> CPU DETAIL: Write 0050: 0658000100770048 
DBG(48569688)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48569689)> CPU DETAIL: M4: 0013 
DBG(48569690)> CPU DETAIL: M6: 0064 
DBG(48569691)> CPU DETAIL: Clear M8
DBG(48569691)> CPU DETAIL: M8: 0000 
DBG(48569694)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569695)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48569695)> CPU DETAIL: Read R 0461: 0130000000141015 
DBG(48569696)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48569696)> CPU DETAIL: Write 0598: 0130000000141015 
DBG(48569698)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569699)> CPU DETAIL: M4: 0013 
DBG(48569700)> CPU DETAIL: M6: 0064 
DBG(48569701)> CPU DETAIL: M8: 0001 
DBG(48569704)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569705)> CPU DETAIL: M6: 0065 
DBG(48569706)> CPU DETAIL: Transfer to T 
DBG(48569708)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569709)> CPU DETAIL: M6 Address Modifier: 0065 
DBG(48569709)> CPU DETAIL: Read R 0462: 0000000233090000 
DBG(48569710)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48569710)> CPU DETAIL: Write 0599: 0000000233090000 
DBG(48569712)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569713)> CPU DETAIL: M4: 0013 
DBG(48569714)> CPU DETAIL: M6: 0065 
DBG(48569715)> CPU DETAIL: M8: 0002 
DBG(48569718)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569719)> CPU DETAIL: M6: 0066 
DBG(48569720)> CPU DETAIL: Transfer to T 
DBG(48569722)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569723)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(48569723)> CPU DETAIL: Read R 0463: 0000000000000000 
DBG(48569724)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48569724)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48569726)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569727)> CPU DETAIL: M4: 0013 
DBG(48569728)> CPU DETAIL: M6: 0066 
DBG(48569729)> CPU DETAIL: M8: 0003 
DBG(48569732)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569733)> CPU DETAIL: M6: 0067 
DBG(48569734)> CPU DETAIL: Transfer to T 
DBG(48569736)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569737)> CPU DETAIL: M6 Address Modifier: 0067 
DBG(48569737)> CPU DETAIL: Read R 0464: 0000000000000000 
DBG(48569738)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48569738)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48569740)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569741)> CPU DETAIL: M4: 0013 
DBG(48569742)> CPU DETAIL: M6: 0067 
DBG(48569743)> CPU DETAIL: M8: 0004 
DBG(48569746)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569747)> CPU DETAIL: M6: 0068 
DBG(48569748)> CPU DETAIL: Transfer to T 
DBG(48569750)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569751)> CPU DETAIL: M6 Address Modifier: 0068 
DBG(48569751)> CPU DETAIL: Read R 0465: 0000000000000000 
DBG(48569752)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48569752)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48569754)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569755)> CPU DETAIL: M4: 0013 
DBG(48569756)> CPU DETAIL: M6: 0068 
DBG(48569757)> CPU DETAIL: M8: 0005 
DBG(48569760)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569761)> CPU DETAIL: M6: 0069 
DBG(48569762)> CPU DETAIL: Transfer to T 
DBG(48569764)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569765)> CPU DETAIL: M6 Address Modifier: 0069 
DBG(48569765)> CPU DETAIL: Read R 0466: 0000000000000000 
DBG(48569766)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48569766)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48569768)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569769)> CPU DETAIL: M4: 0013 
DBG(48569770)> CPU DETAIL: M6: 0069 
DBG(48569771)> CPU DETAIL: M8: 0006 
DBG(48569774)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569775)> CPU DETAIL: M6: 0070 
DBG(48569776)> CPU DETAIL: Transfer to T 
DBG(48569778)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569779)> CPU DETAIL: M6 Address Modifier: 0070 
DBG(48569779)> CPU DETAIL: Read R 0467: 3336000000000200 
DBG(48569780)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48569780)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48569782)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569783)> CPU DETAIL: M4: 0013 
DBG(48569784)> CPU DETAIL: M6: 0070 
DBG(48569785)> CPU DETAIL: M8: 0007 
DBG(48569788)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569789)> CPU DETAIL: M6: 0071 
DBG(48569790)> CPU DETAIL: Transfer to T 
DBG(48569792)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569793)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48569793)> CPU DETAIL: Read R 0468: 0000000233010000 
DBG(48569794)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48569794)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48569796)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569797)> CPU DETAIL: M4: 0013 
DBG(48569798)> CPU DETAIL: M6: 0071 
DBG(48569799)> CPU DETAIL: M8: 0008 
DBG(48569802)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569803)> CPU DETAIL: M6: 0072 
DBG(48569804)> CPU DETAIL: Transfer to T 
DBG(48569806)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569807)> CPU DETAIL: M6 Address Modifier: 0072 
DBG(48569807)> CPU DETAIL: Read R 0469: 0000000000000000 
DBG(48569808)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48569808)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48569810)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569811)> CPU DETAIL: M4: 0013 
DBG(48569812)> CPU DETAIL: M6: 0072 
DBG(48569813)> CPU DETAIL: M8: 0009 
DBG(48569816)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569817)> CPU DETAIL: M6: 0073 
DBG(48569818)> CPU DETAIL: Transfer to T 
DBG(48569820)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569821)> CPU DETAIL: M6 Address Modifier: 0073 
DBG(48569821)> CPU DETAIL: Read R 0470: 0000000000000000 
DBG(48569822)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48569822)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48569824)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569825)> CPU DETAIL: M4: 0013 
DBG(48569826)> CPU DETAIL: M6: 0073 
DBG(48569827)> CPU DETAIL: M8: 0010 
DBG(48569830)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569831)> CPU DETAIL: M6: 0074 
DBG(48569832)> CPU DETAIL: Transfer to T 
DBG(48569834)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569835)> CPU DETAIL: M6 Address Modifier: 0074 
DBG(48569835)> CPU DETAIL: Read R 0471: 0000000233030000 
DBG(48569836)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48569836)> CPU DETAIL: Write 0608: 0000000233030000 
DBG(48569838)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569839)> CPU DETAIL: M4: 0013 
DBG(48569840)> CPU DETAIL: M6: 0074 
DBG(48569841)> CPU DETAIL: M8: 0011 
DBG(48569844)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569845)> CPU DETAIL: M6: 0075 
DBG(48569846)> CPU DETAIL: Transfer to T 
DBG(48569848)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569849)> CPU DETAIL: M6 Address Modifier: 0075 
DBG(48569849)> CPU DETAIL: Read R 0472: 0000000000000000 
DBG(48569850)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48569850)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48569852)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569853)> CPU DETAIL: M4: 0013 
DBG(48569854)> CPU DETAIL: M6: 0075 
DBG(48569855)> CPU DETAIL: M8: 0012 
DBG(48569858)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569859)> CPU DETAIL: M6: 0076 
DBG(48569860)> CPU DETAIL: Transfer to T 
DBG(48569862)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48569863)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(48569863)> CPU DETAIL: Read R 0473: 0000000000000000 
DBG(48569864)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48569864)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48569866)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48569867)> CPU DETAIL: M4: 0013 
DBG(48569868)> CPU DETAIL: M6: 0076 
DBG(48569869)> CPU DETAIL: M8: 0013 
DBG(48569872)> CPU CMD: Exec 0050: 06 58 0001 0077 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48569873)> CPU DETAIL: M6: 0077 
DBG(48569876)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48569877)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48569878)> CPU DETAIL: Read S 1606: 0000000000000064 
DBG(48569879)> CPU DETAIL: Result: 0000000000000077 
DBG(48569880)> CPU DETAIL: Write 1606: 0000000000000077 
DBG(48569882)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48569883)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48569884)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48569887)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48569888)> CPU DETAIL: Read R 0036: 0060046716080000 
DBG(48569889)> CPU DETAIL: Result: 0060048016080000 
DBG(48569890)> CPU DETAIL: Write 0036: 0060048016080000 
DBG(48569892)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48569893)> CPU DETAIL: Transfer to T 
DBG(48569895)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48569896)> CPU DETAIL: Read R 1605: 0000000000000077 
DBG(48569897)> CPU DETAIL: Read S 1606: 0000000000000077 
DBG(48569898)> CPU DETAIL: Result: 0000000000000000 
DBG(48569901)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48569902)> CPU DETAIL: REG1: 0000000000000000
DBG(48569902)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48569904)> CPU CMD: Exec 0031: 00 60 1658 0050 0000   restore instr 0050   
DBG(48569905)> CPU DETAIL: Read R 1658: 0658000100000048 
DBG(48569906)> CPU DETAIL: Write 0050: 0658000100000048 
DBG(48569908)> CPU CMD: Exec 0032: 00 40 0019 1639 0019   (0019) + 1 -> (0019) incr number of block to read from input tape 01   
DBG(48569909)> CPU DETAIL: Read R 0019: 0194039700000004 
DBG(48569910)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48569911)> CPU DETAIL: Result: 0194039700000005 
DBG(48569912)> CPU DETAIL: Write 0019: 0194039700000005 
DBG(48569914)> CPU CMD: Exec 0033: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48569915)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48569916)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48569918)> CPU CMD: Exec 0034: 00 60 1645 0036 0019   restore instr 0036, goto 0019 to read next tape 1 event block   
DBG(48569919)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48569920)> CPU DETAIL: Transfer to T 
DBG(48569920)> CPU DETAIL: Write 0036: 0060040316080000 
DBG(48569922)> CPU CMD: Exec 0019: 01 94 0397 0000 0005   read input tape 01 -> (0397) record 0001      
DBG(48569923)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0005
DBG(48569923)> MT DATA: Tape unit 1: init read
DBG(48569923)> MT DETAIL: Read tape record (632 chars, used 2.74 inches, needs 16 msec) from tape 1
DBG(48569923)> MT DETAIL: Tape record contents: D*0190030103330005C*0100000000151111C*0000000241000003C*00000000000000...
DBG(48569923)> MT EXP: Start Of Block Word: 0190030103330005
DBG(48569923)> MT EXP: Read Tape Block number 0005
DBG(48569923)> MT EXP: Read forward addr 0397 to 0000
DBG(48569923)> MT EXP: Tape to CRT 0397: 0100000000151111 
DBG(48569923)> MT EXP: Tape to CRT 0398: 0000000241000003 
DBG(48569923)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0403: 2222444455660001 
DBG(48569923)> MT EXP: Tape to CRT 0404: 0000000242009990 
DBG(48569923)> MT EXP: Tape to CRT 0405: 0104110000000000 
DBG(48569923)> MT EXP: Tape to CRT 0406: 0001209999999997 
DBG(48569923)> MT EXP: Tape to CRT 0407: 0130000000151113 
DBG(48569923)> MT EXP: Tape to CRT 0408: 0000000242009990 
DBG(48569923)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0410: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0411: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0413: 0000000000000101 
DBG(48569923)> MT EXP: Tape to CRT 0414: 0000000241000000 
DBG(48569923)> MT EXP: Tape to CRT 0415: 0000000000033555 
DBG(48569923)> MT EXP: Tape to CRT 0416: 0000000000033666 
DBG(48569923)> MT EXP: Tape to CRT 0417: 0000000249999990 
DBG(48569923)> MT EXP: Tape to CRT 0418: 0000000000033555 
DBG(48569923)> MT EXP: Tape to CRT 0419: 0000000000033666 
DBG(48569923)> MT EXP: Tape to CRT 0420: 0100000000151113 
DBG(48569923)> MT EXP: Tape to CRT 0421: 0000000249999990 
DBG(48569923)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0423: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0424: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48569923)> MT EXP: Tape to CRT 0426: 0000000000000100 
DBG(48569923)> MT EXP: Tape to CRT 0427: 0000000242009990 
DBG(48569923)> MT EXP: Tape to CRT 0428: 0000000000033555 
DBG(48569923)> MT EXP: Tape to CRT 0429: 0000000000033666 
DBG(48569923)> MT EXP: End Of Block Word: 0190030103330005, data words in block: 33
DBG(48569923)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.10% of medium (17.28 inches)
DBG(48569926)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48569927)> CPU DETAIL: Condition not present 
DBG(48569929)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48569930)> CPU DETAIL: Condition not present 
DBG(48569932)> CPU CMD: Exec 0022: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48569933)> CPU DETAIL: Write 1603: 0190030103330005 
DBG(48569935)> CPU CMD: Exec 0023: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        01 90 aaaa bbbb nnnn ma 
DBG(48569936)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48569937)> CPU DETAIL: Result: 0000000003330000 
DBG(48569938)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000333 
DBG(48569939)> CPU DETAIL: Write 1604: 0000000000000333 
DBG(48569941)> CPU CMD: Exec 0024: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        01 90 aaaa bbbb nnnn ma 
DBG(48569942)> CPU DETAIL: Read R 1603: 0190030103330005 
DBG(48569943)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48569944)> CPU DETAIL: Result: 0000030100000000 
DBG(48569945)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48569948)> CPU CMD: Exec 0025: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48569949)> CPU DETAIL: Read R 1604: 0000000000000333 
DBG(48569950)> CPU DETAIL: Result: 0000000000000032 
DBG(48569951)> CPU DETAIL: Write 1605: 0000000000000032 
DBG(48569953)> CPU CMD: Exec 0026: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48569954)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48569955)> CPU DETAIL: Result: 0000000000000033 
DBG(48569956)> CPU DETAIL: Write 1605: 0000000000000033 
DBG(48569958)> CPU CMD: Exec 0027: 00 52 0000 0000 0000   clear M6   
DBG(48569959)> CPU DETAIL: M4: 0013 
DBG(48569960)> CPU DETAIL: Clear M6
DBG(48569960)> CPU DETAIL: M6: 0000 
DBG(48569961)> CPU DETAIL: M8: 0013 
DBG(48569964)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48569965)> CPU DETAIL: Read R 1605: 0000000000000033 
DBG(48569966)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48569967)> CPU DETAIL: Result: 0000000000000033 
DBG(48569970)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48569971)> CPU DETAIL: REG1: 0000000000000033
DBG(48569971)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48569973)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48569974)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48569974)> CPU DETAIL: Read R 0397: 0100000000151111 
DBG(48569975)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48569976)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48569978)> CPU CMD: Exec 0036: 00 60 0403 1608 0000   (0403 = event w7) -> (1608)   
DBG(48569979)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48569980)> CPU DETAIL: Write 1608: 2222444455660001 
DBG(48569982)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48569983)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48569984)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48569985)> CPU DETAIL: Result: 0000000000000000 
DBG(48569986)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48569987)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48569989)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48569990)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48569991)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48569992)> CPU DETAIL: Result: 0000000000000001 
DBG(48569993)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48569995)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48569996)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48569997)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48569998)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48570001)> CPU CMD: Exec 0040: 00 60 1646 0054 0000   predecessor=0 -> set 0054 as nop to save event in tape 2   
DBG(48570002)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48570003)> CPU DETAIL: Write 0054: 0060000000000000 
DBG(48570005)> CPU CMD: Exec 0041: 00 70 1610 1640 0044   if num successors w7 = zero goto 0044   
DBG(48570006)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48570007)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48570008)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48570011)> CPU CMD: Exec 0042: 00 60 0000 0000 0045   goto 0045   
DBG(48570012)> CPU DETAIL: Transfer to T 
DBG(48570014)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48570015)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570016)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48570019)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48570020)> CPU DETAIL: Read R 0050: 0658000100000048 
DBG(48570021)> CPU DETAIL: Result: 0658000100100048 
DBG(48570022)> CPU DETAIL: Write 0050: 0658000100100048 
DBG(48570024)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48570025)> CPU DETAIL: M4: 0013 
DBG(48570026)> CPU DETAIL: M6: 0000 
DBG(48570027)> CPU DETAIL: Clear M8
DBG(48570027)> CPU DETAIL: M8: 0000 
DBG(48570030)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570031)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48570031)> CPU DETAIL: Read R 0397: 0100000000151111 
DBG(48570032)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48570032)> CPU DETAIL: Write 0598: 0100000000151111 
DBG(48570034)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570035)> CPU DETAIL: M4: 0013 
DBG(48570036)> CPU DETAIL: M6: 0000 
DBG(48570037)> CPU DETAIL: M8: 0001 
DBG(48570040)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570041)> CPU DETAIL: M6: 0001 
DBG(48570042)> CPU DETAIL: Transfer to T 
DBG(48570044)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570045)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48570045)> CPU DETAIL: Read R 0398: 0000000241000003 
DBG(48570046)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48570046)> CPU DETAIL: Write 0599: 0000000241000003 
DBG(48570048)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570049)> CPU DETAIL: M4: 0013 
DBG(48570050)> CPU DETAIL: M6: 0001 
DBG(48570051)> CPU DETAIL: M8: 0002 
DBG(48570054)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570055)> CPU DETAIL: M6: 0002 
DBG(48570056)> CPU DETAIL: Transfer to T 
DBG(48570058)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570059)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48570059)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48570060)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48570060)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48570062)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570063)> CPU DETAIL: M4: 0013 
DBG(48570064)> CPU DETAIL: M6: 0002 
DBG(48570065)> CPU DETAIL: M8: 0003 
DBG(48570068)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570069)> CPU DETAIL: M6: 0003 
DBG(48570070)> CPU DETAIL: Transfer to T 
DBG(48570072)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570073)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48570073)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48570074)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48570074)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48570076)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570077)> CPU DETAIL: M4: 0013 
DBG(48570078)> CPU DETAIL: M6: 0003 
DBG(48570079)> CPU DETAIL: M8: 0004 
DBG(48570082)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570083)> CPU DETAIL: M6: 0004 
DBG(48570084)> CPU DETAIL: Transfer to T 
DBG(48570086)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570087)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48570087)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48570088)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48570088)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48570090)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570091)> CPU DETAIL: M4: 0013 
DBG(48570092)> CPU DETAIL: M6: 0004 
DBG(48570093)> CPU DETAIL: M8: 0005 
DBG(48570096)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570097)> CPU DETAIL: M6: 0005 
DBG(48570098)> CPU DETAIL: Transfer to T 
DBG(48570100)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570101)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48570101)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48570102)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48570102)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48570104)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570105)> CPU DETAIL: M4: 0013 
DBG(48570106)> CPU DETAIL: M6: 0005 
DBG(48570107)> CPU DETAIL: M8: 0006 
DBG(48570110)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570111)> CPU DETAIL: M6: 0006 
DBG(48570112)> CPU DETAIL: Transfer to T 
DBG(48570114)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570115)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48570115)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48570116)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48570116)> CPU DETAIL: Write 0604: 2222444455660001 
DBG(48570118)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570119)> CPU DETAIL: M4: 0013 
DBG(48570120)> CPU DETAIL: M6: 0006 
DBG(48570121)> CPU DETAIL: M8: 0007 
DBG(48570124)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570125)> CPU DETAIL: M6: 0007 
DBG(48570126)> CPU DETAIL: Transfer to T 
DBG(48570128)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570129)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48570129)> CPU DETAIL: Read R 0404: 0000000242009990 
DBG(48570130)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48570130)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48570132)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570133)> CPU DETAIL: M4: 0013 
DBG(48570134)> CPU DETAIL: M6: 0007 
DBG(48570135)> CPU DETAIL: M8: 0008 
DBG(48570138)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570139)> CPU DETAIL: M6: 0008 
DBG(48570140)> CPU DETAIL: Transfer to T 
DBG(48570142)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570143)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48570143)> CPU DETAIL: Read R 0405: 0104110000000000 
DBG(48570144)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48570144)> CPU DETAIL: Write 0606: 0104110000000000 
DBG(48570146)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570147)> CPU DETAIL: M4: 0013 
DBG(48570148)> CPU DETAIL: M6: 0008 
DBG(48570149)> CPU DETAIL: M8: 0009 
DBG(48570152)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570153)> CPU DETAIL: M6: 0009 
DBG(48570154)> CPU DETAIL: Transfer to T 
DBG(48570156)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570157)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48570157)> CPU DETAIL: Read R 0406: 0001209999999997 
DBG(48570158)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48570158)> CPU DETAIL: Write 0607: 0001209999999997 
DBG(48570160)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570161)> CPU DETAIL: M4: 0013 
DBG(48570162)> CPU DETAIL: M6: 0009 
DBG(48570163)> CPU DETAIL: M8: 0010 
DBG(48570166)> CPU CMD: Exec 0050: 06 58 0001 0010 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570167)> CPU DETAIL: M6: 0010 
DBG(48570170)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48570171)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570172)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48570173)> CPU DETAIL: Result: 0000000000000010 
DBG(48570174)> CPU DETAIL: Write 1606: 0000000000000010 
DBG(48570176)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48570177)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570178)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48570181)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48570182)> CPU DETAIL: Read R 0036: 0060040316080000 
DBG(48570183)> CPU DETAIL: Result: 0060041316080000 
DBG(48570184)> CPU DETAIL: Write 0036: 0060041316080000 
DBG(48570186)> CPU CMD: Exec 0054: 00 60 0000 0000 0000   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48570189)> CPU CMD: Exec 0055: 00 40 1611 1607 0000   (1611 num of words in output block) + (1607 event rec len NNN) -> REG1   
DBG(48570190)> CPU DETAIL: Read R 1611: 0000000000000049 
DBG(48570191)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48570192)> CPU DETAIL: Result: 0000000000000059 
DBG(48570195)> CPU CMD: Exec 0056: 00 41 1650 0000 0000   const 200 - REG1   
DBG(48570196)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48570197)> CPU DETAIL: Result: 0000000000000141 
DBG(48570200)> CPU CMD: Exec 0057: 00 63 0000 0060 0059   if =0 goto 0060, if <0 goto 0059   
DBG(48570201)> CPU DETAIL: REG1: 0000000000000141
DBG(48570201)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48570203)> CPU CMD: Exec 0058: 00 60 1647 0069 0062   enough room in out block for event: set exit to read next event rec, goto 00 
DBG(48570204)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48570205)> CPU DETAIL: Transfer to T 
DBG(48570205)> CPU DETAIL: Write 0069: 0060000000000028 
DBG(48570207)> CPU CMD: Exec 0062: 00 51 0000 0000 0000   clear M4   
DBG(48570208)> CPU DETAIL: Clear M4
DBG(48570208)> CPU DETAIL: M4: 0000 
DBG(48570209)> CPU DETAIL: M6: 0010 
DBG(48570210)> CPU DETAIL: M8: 0010 
DBG(48570213)> CPU CMD: Exec 0063: 96 60 1607 0000 0000   set instr 0068    
DBG(48570214)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570215)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48570218)> CPU CMD: Exec 0064: 00 40 1649 0000 0068   ... to loop if M4<>(1607 event rec len NNN)   
DBG(48570219)> CPU DETAIL: Read R 1649: 0458000100000065 
DBG(48570220)> CPU DETAIL: Result: 0458000100100065 
DBG(48570221)> CPU DETAIL: Write 0068: 0458000100100065 
DBG(48570223)> CPU CMD: Exec 0065: 00 60 4598 0847 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570224)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48570224)> CPU DETAIL: Read R 0598: 0100000000151111 
DBG(48570225)> CPU DETAIL: Write 0847: 0100000000151111 
DBG(48570227)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570228)> CPU DETAIL: Read R 0065: 0060459808470000 
DBG(48570229)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570230)> CPU DETAIL: Result: 0060459808480000 
DBG(48570231)> CPU DETAIL: Write 0065: 0060459808480000 
DBG(48570233)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570234)> CPU DETAIL: Read R 1611: 0000000000000049 
DBG(48570235)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570236)> CPU DETAIL: Result: 0000000000000050 
DBG(48570237)> CPU DETAIL: Write 1611: 0000000000000050 
DBG(48570239)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570240)> CPU DETAIL: M4: 0001 
DBG(48570241)> CPU DETAIL: Transfer to T 
DBG(48570243)> CPU CMD: Exec 0065: 00 60 4598 0848 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570244)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48570244)> CPU DETAIL: Read R 0599: 0000000241000003 
DBG(48570245)> CPU DETAIL: Write 0848: 0000000241000003 
DBG(48570247)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570248)> CPU DETAIL: Read R 0065: 0060459808480000 
DBG(48570249)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570250)> CPU DETAIL: Result: 0060459808490000 
DBG(48570251)> CPU DETAIL: Write 0065: 0060459808490000 
DBG(48570253)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570254)> CPU DETAIL: Read R 1611: 0000000000000050 
DBG(48570255)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570256)> CPU DETAIL: Result: 0000000000000051 
DBG(48570257)> CPU DETAIL: Write 1611: 0000000000000051 
DBG(48570259)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570260)> CPU DETAIL: M4: 0002 
DBG(48570261)> CPU DETAIL: Transfer to T 
DBG(48570263)> CPU CMD: Exec 0065: 00 60 4598 0849 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570264)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48570264)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48570265)> CPU DETAIL: Write 0849: 0000000000000000 
DBG(48570267)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570268)> CPU DETAIL: Read R 0065: 0060459808490000 
DBG(48570269)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570270)> CPU DETAIL: Result: 0060459808500000 
DBG(48570271)> CPU DETAIL: Write 0065: 0060459808500000 
DBG(48570273)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570274)> CPU DETAIL: Read R 1611: 0000000000000051 
DBG(48570275)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570276)> CPU DETAIL: Result: 0000000000000052 
DBG(48570277)> CPU DETAIL: Write 1611: 0000000000000052 
DBG(48570279)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570280)> CPU DETAIL: M4: 0003 
DBG(48570281)> CPU DETAIL: Transfer to T 
DBG(48570283)> CPU CMD: Exec 0065: 00 60 4598 0850 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570284)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48570284)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48570285)> CPU DETAIL: Write 0850: 0000000000000000 
DBG(48570287)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570288)> CPU DETAIL: Read R 0065: 0060459808500000 
DBG(48570289)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570290)> CPU DETAIL: Result: 0060459808510000 
DBG(48570291)> CPU DETAIL: Write 0065: 0060459808510000 
DBG(48570293)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570294)> CPU DETAIL: Read R 1611: 0000000000000052 
DBG(48570295)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570296)> CPU DETAIL: Result: 0000000000000053 
DBG(48570297)> CPU DETAIL: Write 1611: 0000000000000053 
DBG(48570299)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570300)> CPU DETAIL: M4: 0004 
DBG(48570301)> CPU DETAIL: Transfer to T 
DBG(48570303)> CPU CMD: Exec 0065: 00 60 4598 0851 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570304)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48570304)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48570305)> CPU DETAIL: Write 0851: 0000000000000000 
DBG(48570307)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570308)> CPU DETAIL: Read R 0065: 0060459808510000 
DBG(48570309)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570310)> CPU DETAIL: Result: 0060459808520000 
DBG(48570311)> CPU DETAIL: Write 0065: 0060459808520000 
DBG(48570313)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570314)> CPU DETAIL: Read R 1611: 0000000000000053 
DBG(48570315)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570316)> CPU DETAIL: Result: 0000000000000054 
DBG(48570317)> CPU DETAIL: Write 1611: 0000000000000054 
DBG(48570319)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570320)> CPU DETAIL: M4: 0005 
DBG(48570321)> CPU DETAIL: Transfer to T 
DBG(48570323)> CPU CMD: Exec 0065: 00 60 4598 0852 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570324)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48570324)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48570325)> CPU DETAIL: Write 0852: 0000000000000000 
DBG(48570327)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570328)> CPU DETAIL: Read R 0065: 0060459808520000 
DBG(48570329)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570330)> CPU DETAIL: Result: 0060459808530000 
DBG(48570331)> CPU DETAIL: Write 0065: 0060459808530000 
DBG(48570333)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570334)> CPU DETAIL: Read R 1611: 0000000000000054 
DBG(48570335)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570336)> CPU DETAIL: Result: 0000000000000055 
DBG(48570337)> CPU DETAIL: Write 1611: 0000000000000055 
DBG(48570339)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570340)> CPU DETAIL: M4: 0006 
DBG(48570341)> CPU DETAIL: Transfer to T 
DBG(48570343)> CPU CMD: Exec 0065: 00 60 4598 0853 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570344)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48570344)> CPU DETAIL: Read R 0604: 2222444455660001 
DBG(48570345)> CPU DETAIL: Write 0853: 2222444455660001 
DBG(48570347)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570348)> CPU DETAIL: Read R 0065: 0060459808530000 
DBG(48570349)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570350)> CPU DETAIL: Result: 0060459808540000 
DBG(48570351)> CPU DETAIL: Write 0065: 0060459808540000 
DBG(48570353)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570354)> CPU DETAIL: Read R 1611: 0000000000000055 
DBG(48570355)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570356)> CPU DETAIL: Result: 0000000000000056 
DBG(48570357)> CPU DETAIL: Write 1611: 0000000000000056 
DBG(48570359)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570360)> CPU DETAIL: M4: 0007 
DBG(48570361)> CPU DETAIL: Transfer to T 
DBG(48570363)> CPU CMD: Exec 0065: 00 60 4598 0854 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570364)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48570364)> CPU DETAIL: Read R 0605: 0000000242009990 
DBG(48570365)> CPU DETAIL: Write 0854: 0000000242009990 
DBG(48570367)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570368)> CPU DETAIL: Read R 0065: 0060459808540000 
DBG(48570369)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570370)> CPU DETAIL: Result: 0060459808550000 
DBG(48570371)> CPU DETAIL: Write 0065: 0060459808550000 
DBG(48570373)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570374)> CPU DETAIL: Read R 1611: 0000000000000056 
DBG(48570375)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570376)> CPU DETAIL: Result: 0000000000000057 
DBG(48570377)> CPU DETAIL: Write 1611: 0000000000000057 
DBG(48570379)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570380)> CPU DETAIL: M4: 0008 
DBG(48570381)> CPU DETAIL: Transfer to T 
DBG(48570383)> CPU CMD: Exec 0065: 00 60 4598 0855 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570384)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48570384)> CPU DETAIL: Read R 0606: 0104110000000000 
DBG(48570385)> CPU DETAIL: Write 0855: 0104110000000000 
DBG(48570387)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570388)> CPU DETAIL: Read R 0065: 0060459808550000 
DBG(48570389)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570390)> CPU DETAIL: Result: 0060459808560000 
DBG(48570391)> CPU DETAIL: Write 0065: 0060459808560000 
DBG(48570393)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570394)> CPU DETAIL: Read R 1611: 0000000000000057 
DBG(48570395)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570396)> CPU DETAIL: Result: 0000000000000058 
DBG(48570397)> CPU DETAIL: Write 1611: 0000000000000058 
DBG(48570399)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570400)> CPU DETAIL: M4: 0009 
DBG(48570401)> CPU DETAIL: Transfer to T 
DBG(48570403)> CPU CMD: Exec 0065: 00 60 4598 0856 0000   (M4 + 0598 event rec) -> (0798 event output block)   
DBG(48570404)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48570404)> CPU DETAIL: Read R 0607: 0001209999999997 
DBG(48570405)> CPU DETAIL: Write 0856: 0001209999999997 
DBG(48570407)> CPU CMD: Exec 0066: 00 40 0065 1648 0065   incr S   
DBG(48570408)> CPU DETAIL: Read R 0065: 0060459808560000 
DBG(48570409)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570410)> CPU DETAIL: Result: 0060459808570000 
DBG(48570411)> CPU DETAIL: Write 0065: 0060459808570000 
DBG(48570413)> CPU CMD: Exec 0067: 00 40 1611 1639 1611   incr (1611 num of words in output block)   
DBG(48570414)> CPU DETAIL: Read R 1611: 0000000000000058 
DBG(48570415)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570416)> CPU DETAIL: Result: 0000000000000059 
DBG(48570417)> CPU DETAIL: Write 1611: 0000000000000059 
DBG(48570419)> CPU CMD: Exec 0068: 04 58 0001 0010 0065   loop M4, incr M4, if M4<>(1607 event rec len NNN) goto 0065   
DBG(48570420)> CPU DETAIL: M4: 0010 
DBG(48570423)> CPU CMD: Exec 0069: 00 60 0000 0000 0028   exit: goto 0028 read next event rec   
DBG(48570424)> CPU DETAIL: Transfer to T 
DBG(48570426)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48570427)> CPU DETAIL: Read R 1605: 0000000000000033 
DBG(48570428)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48570429)> CPU DETAIL: Result: 0000000000000023 
DBG(48570432)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48570433)> CPU DETAIL: REG1: 0000000000000023
DBG(48570433)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48570435)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48570436)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48570436)> CPU DETAIL: Read R 0407: 0130000000151113 
DBG(48570437)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48570438)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48570440)> CPU CMD: Exec 0036: 00 60 0413 1608 0000   (0403 = event w7) -> (1608)   
DBG(48570441)> CPU DETAIL: Read R 0413: 0000000000000101 
DBG(48570442)> CPU DETAIL: Write 1608: 0000000000000101 
DBG(48570444)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48570445)> CPU DETAIL: Read R 1608: 0000000000000101 
DBG(48570446)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48570447)> CPU DETAIL: Result: 0000000000000100 
DBG(48570448)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48570449)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48570451)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48570452)> CPU DETAIL: Read R 1608: 0000000000000101 
DBG(48570453)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48570454)> CPU DETAIL: Result: 0000000000000001 
DBG(48570455)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48570457)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48570458)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48570459)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48570460)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48570461)> CPU DETAIL: Transfer to T 
DBG(48570463)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48570464)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48570465)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48570467)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48570468)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48570469)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48570472)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48570473)> CPU DETAIL: Read R 0050: 0658000100100048 
DBG(48570474)> CPU DETAIL: Result: 0658000100230048 
DBG(48570475)> CPU DETAIL: Write 0050: 0658000100230048 
DBG(48570477)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48570478)> CPU DETAIL: M4: 0010 
DBG(48570479)> CPU DETAIL: M6: 0010 
DBG(48570480)> CPU DETAIL: Clear M8
DBG(48570480)> CPU DETAIL: M8: 0000 
DBG(48570483)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570484)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48570484)> CPU DETAIL: Read R 0407: 0130000000151113 
DBG(48570485)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48570485)> CPU DETAIL: Write 0598: 0130000000151113 
DBG(48570487)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570488)> CPU DETAIL: M4: 0010 
DBG(48570489)> CPU DETAIL: M6: 0010 
DBG(48570490)> CPU DETAIL: M8: 0001 
DBG(48570493)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570494)> CPU DETAIL: M6: 0011 
DBG(48570495)> CPU DETAIL: Transfer to T 
DBG(48570497)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570498)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48570498)> CPU DETAIL: Read R 0408: 0000000242009990 
DBG(48570499)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48570499)> CPU DETAIL: Write 0599: 0000000242009990 
DBG(48570501)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570502)> CPU DETAIL: M4: 0010 
DBG(48570503)> CPU DETAIL: M6: 0011 
DBG(48570504)> CPU DETAIL: M8: 0002 
DBG(48570507)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570508)> CPU DETAIL: M6: 0012 
DBG(48570509)> CPU DETAIL: Transfer to T 
DBG(48570511)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570512)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48570512)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48570513)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48570513)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48570515)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570516)> CPU DETAIL: M4: 0010 
DBG(48570517)> CPU DETAIL: M6: 0012 
DBG(48570518)> CPU DETAIL: M8: 0003 
DBG(48570521)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570522)> CPU DETAIL: M6: 0013 
DBG(48570523)> CPU DETAIL: Transfer to T 
DBG(48570525)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570526)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48570526)> CPU DETAIL: Read R 0410: 0000000000000000 
DBG(48570527)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48570527)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48570529)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570530)> CPU DETAIL: M4: 0010 
DBG(48570531)> CPU DETAIL: M6: 0013 
DBG(48570532)> CPU DETAIL: M8: 0004 
DBG(48570535)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570536)> CPU DETAIL: M6: 0014 
DBG(48570537)> CPU DETAIL: Transfer to T 
DBG(48570539)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570540)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48570540)> CPU DETAIL: Read R 0411: 0000000000000000 
DBG(48570541)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48570541)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48570543)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570544)> CPU DETAIL: M4: 0010 
DBG(48570545)> CPU DETAIL: M6: 0014 
DBG(48570546)> CPU DETAIL: M8: 0005 
DBG(48570549)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570550)> CPU DETAIL: M6: 0015 
DBG(48570551)> CPU DETAIL: Transfer to T 
DBG(48570553)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570554)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48570554)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48570555)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48570555)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48570557)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570558)> CPU DETAIL: M4: 0010 
DBG(48570559)> CPU DETAIL: M6: 0015 
DBG(48570560)> CPU DETAIL: M8: 0006 
DBG(48570563)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570564)> CPU DETAIL: M6: 0016 
DBG(48570565)> CPU DETAIL: Transfer to T 
DBG(48570567)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570568)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48570568)> CPU DETAIL: Read R 0413: 0000000000000101 
DBG(48570569)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48570569)> CPU DETAIL: Write 0604: 0000000000000101 
DBG(48570571)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570572)> CPU DETAIL: M4: 0010 
DBG(48570573)> CPU DETAIL: M6: 0016 
DBG(48570574)> CPU DETAIL: M8: 0007 
DBG(48570577)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570578)> CPU DETAIL: M6: 0017 
DBG(48570579)> CPU DETAIL: Transfer to T 
DBG(48570581)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570582)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48570582)> CPU DETAIL: Read R 0414: 0000000241000000 
DBG(48570583)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48570583)> CPU DETAIL: Write 0605: 0000000241000000 
DBG(48570585)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570586)> CPU DETAIL: M4: 0010 
DBG(48570587)> CPU DETAIL: M6: 0017 
DBG(48570588)> CPU DETAIL: M8: 0008 
DBG(48570591)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570592)> CPU DETAIL: M6: 0018 
DBG(48570593)> CPU DETAIL: Transfer to T 
DBG(48570595)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570596)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48570596)> CPU DETAIL: Read R 0415: 0000000000033555 
DBG(48570597)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48570597)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48570599)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570600)> CPU DETAIL: M4: 0010 
DBG(48570601)> CPU DETAIL: M6: 0018 
DBG(48570602)> CPU DETAIL: M8: 0009 
DBG(48570605)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570606)> CPU DETAIL: M6: 0019 
DBG(48570607)> CPU DETAIL: Transfer to T 
DBG(48570609)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570610)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48570610)> CPU DETAIL: Read R 0416: 0000000000033666 
DBG(48570611)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48570611)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48570613)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570614)> CPU DETAIL: M4: 0010 
DBG(48570615)> CPU DETAIL: M6: 0019 
DBG(48570616)> CPU DETAIL: M8: 0010 
DBG(48570619)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570620)> CPU DETAIL: M6: 0020 
DBG(48570621)> CPU DETAIL: Transfer to T 
DBG(48570623)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570624)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48570624)> CPU DETAIL: Read R 0417: 0000000249999990 
DBG(48570625)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48570625)> CPU DETAIL: Write 0608: 0000000249999990 
DBG(48570627)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570628)> CPU DETAIL: M4: 0010 
DBG(48570629)> CPU DETAIL: M6: 0020 
DBG(48570630)> CPU DETAIL: M8: 0011 
DBG(48570633)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570634)> CPU DETAIL: M6: 0021 
DBG(48570635)> CPU DETAIL: Transfer to T 
DBG(48570637)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570638)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48570638)> CPU DETAIL: Read R 0418: 0000000000033555 
DBG(48570639)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48570639)> CPU DETAIL: Write 0609: 0000000000033555 
DBG(48570641)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570642)> CPU DETAIL: M4: 0010 
DBG(48570643)> CPU DETAIL: M6: 0021 
DBG(48570644)> CPU DETAIL: M8: 0012 
DBG(48570647)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570648)> CPU DETAIL: M6: 0022 
DBG(48570649)> CPU DETAIL: Transfer to T 
DBG(48570651)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570652)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48570652)> CPU DETAIL: Read R 0419: 0000000000033666 
DBG(48570653)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48570653)> CPU DETAIL: Write 0610: 0000000000033666 
DBG(48570655)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570656)> CPU DETAIL: M4: 0010 
DBG(48570657)> CPU DETAIL: M6: 0022 
DBG(48570658)> CPU DETAIL: M8: 0013 
DBG(48570661)> CPU CMD: Exec 0050: 06 58 0001 0023 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570662)> CPU DETAIL: M6: 0023 
DBG(48570665)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48570666)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48570667)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48570668)> CPU DETAIL: Result: 0000000000000023 
DBG(48570669)> CPU DETAIL: Write 1606: 0000000000000023 
DBG(48570671)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48570672)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48570673)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48570676)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48570677)> CPU DETAIL: Read R 0036: 0060041316080000 
DBG(48570678)> CPU DETAIL: Result: 0060042616080000 
DBG(48570679)> CPU DETAIL: Write 0036: 0060042616080000 
DBG(48570681)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48570682)> CPU DETAIL: Transfer to T 
DBG(48570684)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48570685)> CPU DETAIL: Read R 1605: 0000000000000033 
DBG(48570686)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48570687)> CPU DETAIL: Result: 0000000000000010 
DBG(48570690)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48570691)> CPU DETAIL: REG1: 0000000000000010
DBG(48570691)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48570693)> CPU CMD: Exec 0035: 13 60 6397 1607 0000   (M6 + 0397 input event block) -> (1607) = NNN=event len=7+3*num pred+3*num s 
DBG(48570694)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48570694)> CPU DETAIL: Read R 0420: 0100000000151113 
DBG(48570695)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48570696)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48570698)> CPU CMD: Exec 0036: 00 60 0426 1608 0000   (0403 = event w7) -> (1608)   
DBG(48570699)> CPU DETAIL: Read R 0426: 0000000000000100 
DBG(48570700)> CPU DETAIL: Write 1608: 0000000000000100 
DBG(48570702)> CPU CMD: Exec 0037: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48570703)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48570704)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48570705)> CPU DETAIL: Result: 0000000000000100 
DBG(48570706)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48570707)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48570709)> CPU CMD: Exec 0038: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48570710)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48570711)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48570712)> CPU DETAIL: Result: 0000000000000000 
DBG(48570713)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48570715)> CPU CMD: Exec 0039: 00 72 1609 1640 0044   if num predecessors w7 <> zero goto 0044   
DBG(48570716)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48570717)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48570718)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48570719)> CPU DETAIL: Transfer to T 
DBG(48570721)> CPU CMD: Exec 0044: 00 60 1647 0054 0000   set 0054 as goto read next event, so event is not saved on tape 2   
DBG(48570722)> CPU DETAIL: Read R 1647: 0060000000000028 
DBG(48570723)> CPU DETAIL: Write 0054: 0060000000000028 
DBG(48570725)> CPU CMD: Exec 0045: 96 60 1607 0000 0000   (1607 event rec len NNN) -> REG1      
DBG(48570726)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570727)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48570730)> CPU CMD: Exec 0046: 00 40 0050 0000 0050   set end of loop to NNN                                  
DBG(48570731)> CPU DETAIL: Read R 0050: 0658000100230048 
DBG(48570732)> CPU DETAIL: Result: 0658000100330048 
DBG(48570733)> CPU DETAIL: Write 0050: 0658000100330048 
DBG(48570735)> CPU CMD: Exec 0047: 00 54 0000 0000 0000   clear M8                                        
DBG(48570736)> CPU DETAIL: M4: 0010 
DBG(48570737)> CPU DETAIL: M6: 0023 
DBG(48570738)> CPU DETAIL: Clear M8
DBG(48570738)> CPU DETAIL: M8: 0000 
DBG(48570741)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570742)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48570742)> CPU DETAIL: Read R 0420: 0100000000151113 
DBG(48570743)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48570743)> CPU DETAIL: Write 0598: 0100000000151113 
DBG(48570745)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570746)> CPU DETAIL: M4: 0010 
DBG(48570747)> CPU DETAIL: M6: 0023 
DBG(48570748)> CPU DETAIL: M8: 0001 
DBG(48570751)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570752)> CPU DETAIL: M6: 0024 
DBG(48570753)> CPU DETAIL: Transfer to T 
DBG(48570755)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570756)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48570756)> CPU DETAIL: Read R 0421: 0000000249999990 
DBG(48570757)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48570757)> CPU DETAIL: Write 0599: 0000000249999990 
DBG(48570759)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570760)> CPU DETAIL: M4: 0010 
DBG(48570761)> CPU DETAIL: M6: 0024 
DBG(48570762)> CPU DETAIL: M8: 0002 
DBG(48570765)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570766)> CPU DETAIL: M6: 0025 
DBG(48570767)> CPU DETAIL: Transfer to T 
DBG(48570769)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570770)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48570770)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48570771)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48570771)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48570773)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570774)> CPU DETAIL: M4: 0010 
DBG(48570775)> CPU DETAIL: M6: 0025 
DBG(48570776)> CPU DETAIL: M8: 0003 
DBG(48570779)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570780)> CPU DETAIL: M6: 0026 
DBG(48570781)> CPU DETAIL: Transfer to T 
DBG(48570783)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570784)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48570784)> CPU DETAIL: Read R 0423: 0000000000000000 
DBG(48570785)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48570785)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48570787)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570788)> CPU DETAIL: M4: 0010 
DBG(48570789)> CPU DETAIL: M6: 0026 
DBG(48570790)> CPU DETAIL: M8: 0004 
DBG(48570793)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570794)> CPU DETAIL: M6: 0027 
DBG(48570795)> CPU DETAIL: Transfer to T 
DBG(48570797)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570798)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48570798)> CPU DETAIL: Read R 0424: 0000000000000000 
DBG(48570799)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48570799)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48570801)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570802)> CPU DETAIL: M4: 0010 
DBG(48570803)> CPU DETAIL: M6: 0027 
DBG(48570804)> CPU DETAIL: M8: 0005 
DBG(48570807)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570808)> CPU DETAIL: M6: 0028 
DBG(48570809)> CPU DETAIL: Transfer to T 
DBG(48570811)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570812)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48570812)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48570813)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48570813)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48570815)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570816)> CPU DETAIL: M4: 0010 
DBG(48570817)> CPU DETAIL: M6: 0028 
DBG(48570818)> CPU DETAIL: M8: 0006 
DBG(48570821)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570822)> CPU DETAIL: M6: 0029 
DBG(48570823)> CPU DETAIL: Transfer to T 
DBG(48570825)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570826)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48570826)> CPU DETAIL: Read R 0426: 0000000000000100 
DBG(48570827)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48570827)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48570829)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570830)> CPU DETAIL: M4: 0010 
DBG(48570831)> CPU DETAIL: M6: 0029 
DBG(48570832)> CPU DETAIL: M8: 0007 
DBG(48570835)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570836)> CPU DETAIL: M6: 0030 
DBG(48570837)> CPU DETAIL: Transfer to T 
DBG(48570839)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570840)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48570840)> CPU DETAIL: Read R 0427: 0000000242009990 
DBG(48570841)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48570841)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48570843)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570844)> CPU DETAIL: M4: 0010 
DBG(48570845)> CPU DETAIL: M6: 0030 
DBG(48570846)> CPU DETAIL: M8: 0008 
DBG(48570849)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570850)> CPU DETAIL: M6: 0031 
DBG(48570851)> CPU DETAIL: Transfer to T 
DBG(48570853)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570854)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48570854)> CPU DETAIL: Read R 0428: 0000000000033555 
DBG(48570855)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48570855)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48570857)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570858)> CPU DETAIL: M4: 0010 
DBG(48570859)> CPU DETAIL: M6: 0031 
DBG(48570860)> CPU DETAIL: M8: 0009 
DBG(48570863)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570864)> CPU DETAIL: M6: 0032 
DBG(48570865)> CPU DETAIL: Transfer to T 
DBG(48570867)> CPU CMD: Exec 0048: 00 60 6397 8598 0000   (M6 + 0397 input event block) -> (M8 + 0598 event rec): copy event   
DBG(48570868)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48570868)> CPU DETAIL: Read R 0429: 0000000000033666 
DBG(48570869)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48570869)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48570871)> CPU CMD: Exec 0049: 00 50 0000 0000 0001   incr M8   
DBG(48570872)> CPU DETAIL: M4: 0010 
DBG(48570873)> CPU DETAIL: M6: 0032 
DBG(48570874)> CPU DETAIL: M8: 0010 
DBG(48570877)> CPU CMD: Exec 0050: 06 58 0001 0033 0048   loop, incr M6, if M6 <> rec len NNN goto 0048   
DBG(48570878)> CPU DETAIL: M6: 0033 
DBG(48570881)> CPU CMD: Exec 0051: 00 40 1607 1606 1606   (1606 words processed from input tape 01 block) += (1607 event rec len NNN)  
DBG(48570882)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570883)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48570884)> CPU DETAIL: Result: 0000000000000033 
DBG(48570885)> CPU DETAIL: Write 1606: 0000000000000033 
DBG(48570887)> CPU CMD: Exec 0052: 92 60 1607 0000 0000   set instr 0036 ...   
DBG(48570888)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48570889)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48570892)> CPU CMD: Exec 0053: 00 40 0036 0000 0036   ... to incr 0403 addr with num of processed words   
DBG(48570893)> CPU DETAIL: Read R 0036: 0060042616080000 
DBG(48570894)> CPU DETAIL: Result: 0060043616080000 
DBG(48570895)> CPU DETAIL: Write 0036: 0060043616080000 
DBG(48570897)> CPU CMD: Exec 0054: 00 60 0000 0000 0028   nop if no predecessors / goto 0028 if event has predecessors   
DBG(48570898)> CPU DETAIL: Transfer to T 
DBG(48570900)> CPU CMD: Exec 0028: 00 41 1605 1606 0000   (1605 number of words in block) - (1606 number of words already read) -> REG 
DBG(48570901)> CPU DETAIL: Read R 1605: 0000000000000033 
DBG(48570902)> CPU DETAIL: Read S 1606: 0000000000000033 
DBG(48570903)> CPU DETAIL: Result: 0000000000000000 
DBG(48570906)> CPU CMD: Exec 0029: 00 63 0035 0031 0000   if >0 goto 0035, =0 goto 0031 (if all events from event block processed)   
DBG(48570907)> CPU DETAIL: REG1: 0000000000000000
DBG(48570907)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48570909)> CPU CMD: Exec 0031: 00 60 1658 0050 0000   restore instr 0050   
DBG(48570910)> CPU DETAIL: Read R 1658: 0658000100000048 
DBG(48570911)> CPU DETAIL: Write 0050: 0658000100000048 
DBG(48570913)> CPU CMD: Exec 0032: 00 40 0019 1639 0019   (0019) + 1 -> (0019) incr number of block to read from input tape 01   
DBG(48570914)> CPU DETAIL: Read R 0019: 0194039700000005 
DBG(48570915)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48570916)> CPU DETAIL: Result: 0194039700000006 
DBG(48570917)> CPU DETAIL: Write 0019: 0194039700000006 
DBG(48570919)> CPU CMD: Exec 0033: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48570920)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48570921)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48570923)> CPU CMD: Exec 0034: 00 60 1645 0036 0019   restore instr 0036, goto 0019 to read next tape 1 event block   
DBG(48570924)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48570925)> CPU DETAIL: Transfer to T 
DBG(48570925)> CPU DETAIL: Write 0036: 0060040316080000 
DBG(48570927)> CPU CMD: Exec 0019: 01 94 0397 0000 0006   read input tape 01 -> (0397) record 0001      
DBG(48570928)> CPU DETAIL: Tape operation on MT1, Addr 0397->0000, Block Number 0006
DBG(48570928)> MT DATA: Tape unit 1: init read
DBG(48570928)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 1
DBG(48570928)> MT DETAIL: Tape record contents: D*0190000000000000CD
DBG(48570928)> MT EXP: End Of File mark sensed: 0190000000000000 
DBG(48570928)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.11% of medium (18.82 inches)
DBG(48570931)> CPU CMD: Exec 0020: 08 68 0020 0000 1713   if tape check, call 1713 reread      
DBG(48570932)> CPU DETAIL: Condition not present 
DBG(48570934)> CPU CMD: Exec 0021: 00 67 0000 0000 0086   if end of file goto 0086   
DBG(48570935)> CPU DETAIL: Reset condition present 
DBG(48570935)> CPU DETAIL: Transfer to T 
DBG(48570937)> CPU CMD: Exec 0086: 00 70 1611 1640 0080   if (1611 num of words in output block)=zero goto 0080   
DBG(48570938)> CPU DETAIL: Read R 1611: 0000000000000059 
DBG(48570939)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48570940)> CPU DETAIL: Diff: REG1: 0000000000000059
DBG(48570943)> CPU CMD: Exec 0087: 00 60 1646 0079 0070   set instr 0079 as nop, goto 0070   
DBG(48570944)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48570945)> CPU DETAIL: Transfer to T 
DBG(48570945)> CPU DETAIL: Write 0079: 0060000000000000 
DBG(48570947)> CPU CMD: Exec 0070: 96 60 1611 0000 0000   set instr ...   
DBG(48570948)> CPU DETAIL: Read R 1611: 0000000000000059 
DBG(48570949)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000590000 
DBG(48570952)> CPU CMD: Exec 0071: 00 41 0000 1648 0000   ... to write on tape 02 0798 0798+(1611 num of words in output block)-1    
DBG(48570953)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48570954)> CPU DETAIL: Result: 0000000000580000 
DBG(48570957)> CPU CMD: Exec 0072: 00 40 1652 0000 0073   ... and block 1000   
DBG(48570958)> CPU DETAIL: Read R 1652: 0291079807981000 
DBG(48570959)> CPU DETAIL: Result: 0291079808561000 
DBG(48570960)> CPU DETAIL: Write 0073: 0291079808561000 
DBG(48570962)> CPU CMD: Exec 0073: 02 91 0798 0856 1000   write on tape 02 0798 0798+(1611 num of words in output block)-1   
DBG(48570963)> CPU DETAIL: Tape operation on MT2, Addr 0798->0856, Block Number 1000
DBG(48570963)> MT CMD: Tape unit 2: init write
DBG(48570963)> MT EXP: Write from 0798 to 0856 as Block number 1000
DBG(48570963)> MT EXP: Start Of Block: 02 91 0798 0856 1000
DBG(48570963)> MT EXP: CRT 0798 to Tape: 0100000000111111 
DBG(48570963)> MT EXP: CRT 0799 to Tape: 0000000201000003 
DBG(48570963)> MT EXP: CRT 0800 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0801 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0802 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0803 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0804 to Tape: 2222444455660001 
DBG(48570963)> MT EXP: CRT 0805 to Tape: 0000000209999990 
DBG(48570963)> MT EXP: CRT 0806 to Tape: 0104110000000000 
DBG(48570963)> MT EXP: CRT 0807 to Tape: 0001209999999997 
DBG(48570963)> MT EXP: CRT 0808 to Tape: 0130000000121111 
DBG(48570963)> MT EXP: CRT 0809 to Tape: 0000000231000000 
DBG(48570963)> MT EXP: CRT 0810 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0811 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0812 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0813 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0814 to Tape: 3333444455660002 
DBG(48570963)> MT EXP: CRT 0815 to Tape: 0000000231010000 
DBG(48570963)> MT EXP: CRT 0816 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0817 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0818 to Tape: 0000000231020000 
DBG(48570963)> MT EXP: CRT 0819 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0820 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0821 to Tape: 0130000000131111 
DBG(48570963)> MT EXP: CRT 0822 to Tape: 0000000232000000 
DBG(48570963)> MT EXP: CRT 0823 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0824 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0825 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0826 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0827 to Tape: 3333444455660002 
DBG(48570963)> MT EXP: CRT 0828 to Tape: 0000000232010000 
DBG(48570963)> MT EXP: CRT 0829 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0830 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0831 to Tape: 0000000232090000 
DBG(48570963)> MT EXP: CRT 0832 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0833 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0834 to Tape: 0130000000141111 
DBG(48570963)> MT EXP: CRT 0835 to Tape: 0000000233000000 
DBG(48570963)> MT EXP: CRT 0836 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0837 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0838 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0839 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0840 to Tape: 3333444455660002 
DBG(48570963)> MT EXP: CRT 0841 to Tape: 0000000233010000 
DBG(48570963)> MT EXP: CRT 0842 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0843 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0844 to Tape: 0000000233020000 
DBG(48570963)> MT EXP: CRT 0845 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0846 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0847 to Tape: 0100000000151111 
DBG(48570963)> MT EXP: CRT 0848 to Tape: 0000000241000003 
DBG(48570963)> MT EXP: CRT 0849 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0850 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0851 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0852 to Tape: 0000000000000000 
DBG(48570963)> MT EXP: CRT 0853 to Tape: 2222444455660001 
DBG(48570963)> MT EXP: CRT 0854 to Tape: 0000000242009990 
DBG(48570963)> MT EXP: CRT 0855 to Tape: 0104110000000000 
DBG(48570963)> MT EXP: CRT 0856 to Tape: 0001209999999997 
DBG(48570963)> MT EXP: End Of Block: 02 91 0798 0856 1000 (59 words)
DBG(48570963)> MT DETAIL: Write block (1100 chars, used 3.66 inches, needs 23 msec) to tape 2
DBG(48570963)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.66 inches)
DBG(48570966)> CPU CMD: Exec 0074: 08 60 0074 0000 1730   call 1730 check write   
DBG(48570967)> CPU DETAIL: Read R 0074: 0860007400001730 
DBG(48570968)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600074 
DBG(48570969)> CPU DETAIL: Transfer to T 
DBG(48570971)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48570972)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48570973)> CPU DETAIL: Result: 0060000000000075 
DBG(48570974)> CPU DETAIL: Write 1742: 0060000000000075 
DBG(48570976)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48570977)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000075000000000 
DBG(48570980)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48570981)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48570982)> CPU DETAIL: Result: 0600073174700000 
DBG(48570983)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060007317470000 
DBG(48570984)> CPU DETAIL: Write 1734: 0060007317470000 
DBG(48570986)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48570987)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48570988)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48570990)> CPU CMD: Exec 1734: 00 60 0073 1747 0000      
DBG(48570991)> CPU DETAIL: Read R 0073: 0291079808561000 
DBG(48570992)> CPU DETAIL: Write 1747: 0291079808561000 
DBG(48570994)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48570995)> CPU DETAIL: Condition not present 
DBG(48570997)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48570998)> CPU DETAIL: Transfer to T 
DBG(48571000)> CPU CMD: Exec 1742: 00 60 0000 0000 0075   EXIT_CheckWrite   
DBG(48571001)> CPU DETAIL: Transfer to T 
DBG(48571003)> CPU CMD: Exec 0075: 00 60 0000 0000 0000   nop   
DBG(48571006)> CPU CMD: Exec 0076: 00 60 1651 0065 0000   restore instr 0065   
DBG(48571007)> CPU DETAIL: Read R 1651: 0060459807980000 
DBG(48571008)> CPU DETAIL: Write 0065: 0060459807980000 
DBG(48571010)> CPU CMD: Exec 0077: 00 40 1652 1639 1652   incr block number on tape write   
DBG(48571011)> CPU DETAIL: Read R 1652: 0291079807981000 
DBG(48571012)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571013)> CPU DETAIL: Result: 0291079807981001 
DBG(48571014)> CPU DETAIL: Write 1652: 0291079807981001 
DBG(48571016)> CPU CMD: Exec 0078: 00 60 1640 1611 0000   clear (1611 num of words in output block)   
DBG(48571017)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48571018)> CPU DETAIL: Write 1611: 0000000000000000 
DBG(48571020)> CPU CMD: Exec 0079: 00 60 0000 0000 0000   nop   
DBG(48571023)> CPU CMD: Exec 0080: 01 98 0000 0000 0000   rewind input tape 01   
DBG(48571024)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(48571024)> MT CMD: Tape unit 1: init rewind (current medium used 18.82 inches)
DBG(48571024)> MT CMD: Tape unit 1: rewind time (0 sec)
DBG(48571024)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48571026)> CPU CMD: Exec 0081: 02 91 0000 0000 0000   write end of file on tape 02 (starting sequence events)   
DBG(48571027)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48571027)> MT CMD: Tape unit 2: init write
DBG(48571027)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48571027)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48571027)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (5.20 inches)
DBG(48571030)> CPU CMD: Exec 0082: 02 98 0000 0000 0000   rewind input tape 02   
DBG(48571031)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48571031)> MT CMD: Tape unit 2: init rewind (current medium used 5.20 inches)
DBG(48571031)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48571031)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48571033)> CPU CMD: Exec 0083: 00 57 0000 0000 0000   clear M4 M6 M8   
DBG(48571034)> CPU DETAIL: Clear M4
DBG(48571034)> CPU DETAIL: M4: 0000 
DBG(48571035)> CPU DETAIL: Clear M6
DBG(48571035)> CPU DETAIL: M6: 0000 
DBG(48571036)> CPU DETAIL: Clear M8
DBG(48571036)> CPU DETAIL: M8: 0000 
DBG(48571039)> CPU CMD: Exec 0084: 00 40 1681 1652 1652   set tape write instr to use tape 04   
DBG(48571040)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48571041)> CPU DETAIL: Read S 1652: 0291079807981001 
DBG(48571042)> CPU DETAIL: Result: 0491079807981001 
DBG(48571043)> CPU DETAIL: Write 1652: 0491079807981001 
DBG(48571045)> CPU CMD: Exec 0085: 00 60 1640 1606 0095   clear (1606 number of words already processed from block read from input tap 
DBG(48571046)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48571047)> CPU DETAIL: Transfer to T 
DBG(48571047)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48571049)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48571050)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48571050)> MT DATA: Tape unit 2: init read
DBG(48571050)> MT DETAIL: Read tape record (1100 chars, used 3.66 inches, needs 23 msec) from tape 2
DBG(48571050)> MT DETAIL: Tape record contents: D*0291079808561000C*0100000000111111C*0000000201000003C*00000000000000...
DBG(48571050)> MT EXP: Start Of Block Word: 0291079808561000
DBG(48571050)> MT EXP: Read Tape Block number 1000
DBG(48571050)> MT EXP: Read forward addr 0397 to 0000
DBG(48571050)> MT EXP: Tape to CRT 0397: 0100000000111111 
DBG(48571050)> MT EXP: Tape to CRT 0398: 0000000201000003 
DBG(48571050)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0403: 2222444455660001 
DBG(48571050)> MT EXP: Tape to CRT 0404: 0000000209999990 
DBG(48571050)> MT EXP: Tape to CRT 0405: 0104110000000000 
DBG(48571050)> MT EXP: Tape to CRT 0406: 0001209999999997 
DBG(48571050)> MT EXP: Tape to CRT 0407: 0130000000121111 
DBG(48571050)> MT EXP: Tape to CRT 0408: 0000000231000000 
DBG(48571050)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0410: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0411: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0413: 3333444455660002 
DBG(48571050)> MT EXP: Tape to CRT 0414: 0000000231010000 
DBG(48571050)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0416: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0417: 0000000231020000 
DBG(48571050)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0420: 0130000000131111 
DBG(48571050)> MT EXP: Tape to CRT 0421: 0000000232000000 
DBG(48571050)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0423: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0424: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0426: 3333444455660002 
DBG(48571050)> MT EXP: Tape to CRT 0427: 0000000232010000 
DBG(48571050)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0429: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0430: 0000000232090000 
DBG(48571050)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0433: 0130000000141111 
DBG(48571050)> MT EXP: Tape to CRT 0434: 0000000233000000 
DBG(48571050)> MT EXP: Tape to CRT 0435: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0436: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0437: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0438: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0439: 3333444455660002 
DBG(48571050)> MT EXP: Tape to CRT 0440: 0000000233010000 
DBG(48571050)> MT EXP: Tape to CRT 0441: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0442: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0443: 0000000233020000 
DBG(48571050)> MT EXP: Tape to CRT 0444: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0445: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0446: 0100000000151111 
DBG(48571050)> MT EXP: Tape to CRT 0447: 0000000241000003 
DBG(48571050)> MT EXP: Tape to CRT 0448: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0449: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0450: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0451: 0000000000000000 
DBG(48571050)> MT EXP: Tape to CRT 0452: 2222444455660001 
DBG(48571050)> MT EXP: Tape to CRT 0453: 0000000242009990 
DBG(48571050)> MT EXP: Tape to CRT 0454: 0104110000000000 
DBG(48571050)> MT EXP: Tape to CRT 0455: 0001209999999997 
DBG(48571050)> MT EXP: End Of Block Word: 0291079808561000, data words in block: 59
DBG(48571050)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.66 inches)
DBG(48571053)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48571054)> CPU DETAIL: Condition not present 
DBG(48571056)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48571057)> CPU DETAIL: Condition not present 
DBG(48571059)> CPU CMD: Exec 0098: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48571060)> CPU DETAIL: Write 1603: 0291079808561000 
DBG(48571062)> CPU CMD: Exec 0099: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        02 90 aaaa bbbb nnnn ma 
DBG(48571063)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48571064)> CPU DETAIL: Result: 0000000008560000 
DBG(48571065)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000856 
DBG(48571066)> CPU DETAIL: Write 1604: 0000000000000856 
DBG(48571068)> CPU CMD: Exec 0100: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(48571069)> CPU DETAIL: Read R 1603: 0291079808561000 
DBG(48571070)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48571071)> CPU DETAIL: Result: 0000079800000000 
DBG(48571072)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000798 
DBG(48571075)> CPU CMD: Exec 0101: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48571076)> CPU DETAIL: Read R 1604: 0000000000000856 
DBG(48571077)> CPU DETAIL: Result: 0000000000000058 
DBG(48571078)> CPU DETAIL: Write 1605: 0000000000000058 
DBG(48571080)> CPU CMD: Exec 0102: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48571081)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48571082)> CPU DETAIL: Result: 0000000000000059 
DBG(48571083)> CPU DETAIL: Write 1605: 0000000000000059 
DBG(48571085)> CPU CMD: Exec 0103: 00 51 0000 0000 0000   Clear M4   
DBG(48571086)> CPU DETAIL: Clear M4
DBG(48571086)> CPU DETAIL: M4: 0000 
DBG(48571087)> CPU DETAIL: M6: 0000 
DBG(48571088)> CPU DETAIL: M8: 0000 
DBG(48571091)> CPU CMD: Exec 0104: 00 60 0000 0000 0000   nop / clear 1630, goto 0118   
DBG(48571094)> CPU CMD: Exec 0105: 01 94 0999 0000 0001   read input tape 01 -> (0999 input event block tape 01)    
DBG(48571095)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0001
DBG(48571095)> MT DATA: Tape unit 1: init read
DBG(48571095)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 1
DBG(48571095)> MT DETAIL: Tape record contents: D*0190030303030000C*3906000000000000C*0190030303030000CD
DBG(48571095)> MT EXP: Start Of Block Word: 0190030303030000
DBG(48571095)> MT EXP: Block number expected is 0001, but current block number is 0000. Skip block 
DBG(48571095)> MT EXP: Continue scanning tape
DBG(48571095)> MT DATA: Tape unit 1: init read
DBG(48571095)> MT DETAIL: Read tape record (398 chars, used 2.28 inches, needs 13 msec) from tape 1
DBG(48571095)> MT DETAIL: Tape record contents: D*0190030103200001C*0100000000111111C*0000000201000003C*00000000000000...
DBG(48571095)> MT EXP: Start Of Block Word: 0190030103200001
DBG(48571095)> MT EXP: Read Tape Block number 0001
DBG(48571095)> MT EXP: Read forward addr 0999 to 0000
DBG(48571095)> MT EXP: Tape to CRT 0999: 0100000000111111 
DBG(48571095)> MT EXP: Tape to CRT 1000: 0000000201000003 
DBG(48571095)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1005: 2222444455660001 
DBG(48571095)> MT EXP: Tape to CRT 1006: 0000000209999990 
DBG(48571095)> MT EXP: Tape to CRT 1007: 0104110000000000 
DBG(48571095)> MT EXP: Tape to CRT 1008: 0001209999999997 
DBG(48571095)> MT EXP: Tape to CRT 1009: 0100000000111112 
DBG(48571095)> MT EXP: Tape to CRT 1010: 0000000209999990 
DBG(48571095)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1012: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48571095)> MT EXP: Tape to CRT 1015: 0000000000000100 
DBG(48571095)> MT EXP: Tape to CRT 1016: 0000000201000000 
DBG(48571095)> MT EXP: Tape to CRT 1017: 0000000000033555 
DBG(48571095)> MT EXP: Tape to CRT 1018: 0000000000033666 
DBG(48571095)> MT EXP: End Of Block Word: 0190030103200001, data words in block: 20
DBG(48571095)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.02% of medium (3.89 inches)
DBG(48571099)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48571100)> CPU DETAIL: Condition not present 
DBG(48571102)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48571103)> CPU DETAIL: Condition not present 
DBG(48571105)> CPU CMD: Exec 0108: 00 60 0000 1613 0000   REG1 -> (1613) = Start of block      
DBG(48571106)> CPU DETAIL: Write 1613: 0190030103200001 
DBG(48571108)> CPU CMD: Exec 0109: 00 40 0105 1639 0105   incr block num on tape 01 read   
DBG(48571109)> CPU DETAIL: Read R 0105: 0194099900000001 
DBG(48571110)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571111)> CPU DETAIL: Result: 0194099900000002 
DBG(48571112)> CPU DETAIL: Write 0105: 0194099900000002 
DBG(48571114)> CPU CMD: Exec 0110: 00 60 1653 1621 0000   01 0..0 -> (1621 current input tape)   
DBG(48571115)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48571116)> CPU DETAIL: Write 1621: 0100000000000000 
DBG(48571118)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48571119)> CPU DETAIL: Read R 1613: 0190030103200001 
DBG(48571120)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48571121)> CPU DETAIL: Result: 0000000003200000 
DBG(48571122)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000320 
DBG(48571123)> CPU DETAIL: Write 1604: 0000000000000320 
DBG(48571125)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48571126)> CPU DETAIL: Read R 1613: 0190030103200001 
DBG(48571127)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48571128)> CPU DETAIL: Result: 0000030100000000 
DBG(48571129)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48571132)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48571133)> CPU DETAIL: Read R 1604: 0000000000000320 
DBG(48571134)> CPU DETAIL: Result: 0000000000000019 
DBG(48571135)> CPU DETAIL: Write 1614: 0000000000000019 
DBG(48571137)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48571138)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48571139)> CPU DETAIL: Result: 0000000000000020 
DBG(48571140)> CPU DETAIL: Write 1614: 0000000000000020 
DBG(48571142)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48571143)> CPU DETAIL: M4: 0000 
DBG(48571144)> CPU DETAIL: Clear M6
DBG(48571144)> CPU DETAIL: M6: 0000 
DBG(48571145)> CPU DETAIL: M8: 0000 
DBG(48571148)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48571149)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48571150)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48571152)> CPU CMD: Exec 0117: 00 60 0000 0000 0000   nop   
DBG(48571155)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48571156)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48571157)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48571158)> CPU DETAIL: Result: 0000000000000059 
DBG(48571161)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48571162)> CPU DETAIL: REG1: 0000000000000059
DBG(48571162)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48571164)> CPU CMD: Exec 0124: 00 60 0403 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48571165)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48571166)> CPU DETAIL: Write 1608: 2222444455660001 
DBG(48571168)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48571169)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48571169)> CPU DETAIL: Read R 0397: 0100000000111111 
DBG(48571170)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48571171)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48571173)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48571174)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48571175)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48571176)> CPU DETAIL: Result: 0000000000000000 
DBG(48571177)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48571178)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48571180)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48571181)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48571182)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48571183)> CPU DETAIL: Result: 0000000000000001 
DBG(48571184)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48571186)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48571187)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48571188)> CPU DETAIL: Read S 1609: 0000000000000000 
DBG(48571189)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48571192)> CPU CMD: Exec 0129: 00 72 1610 1640 0131   if num successors w7 <> zero goto 0131   
DBG(48571193)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48571194)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48571195)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48571196)> CPU DETAIL: Transfer to T 
DBG(48571198)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48571199)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48571200)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48571201)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48571202)> CPU DETAIL: Transfer to T 
DBG(48571204)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48571205)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48571206)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571207)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48571207)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571208)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571209)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571210)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48571212)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48571213)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48571214)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571215)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48571215)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571216)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571217)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48571218)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48571220)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48571221)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48571222)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571223)> CPU DETAIL: Result: 0000000000000000 
DBG(48571224)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48571226)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48571227)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48571228)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571229)> CPU DETAIL: Result: 0000000000000003 
DBG(48571230)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48571232)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48571233)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48571234)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48571237)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48571238)> CPU DETAIL: Read R 0124: 0060040316080000 
DBG(48571239)> CPU DETAIL: Result: 0060041316080000 
DBG(48571240)> CPU DETAIL: Write 0124: 0060041316080000 
DBG(48571242)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48571243)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48571244)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48571245)> CPU DETAIL: Result: 0000000000000010 
DBG(48571246)> CPU DETAIL: Write 1606: 0000000000000010 
DBG(48571248)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48571251)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48571252)> CPU DETAIL: Read R 1614: 0000000000000020 
DBG(48571253)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48571254)> CPU DETAIL: Result: 0000000000000020 
DBG(48571257)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48571258)> CPU DETAIL: REG1: 0000000000000020
DBG(48571258)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48571260)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48571261)> CPU DETAIL: Read R 1005: 2222444455660001 
DBG(48571262)> CPU DETAIL: Write 1616: 2222444455660001 
DBG(48571264)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48571265)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48571265)> CPU DETAIL: Read R 0999: 0100000000111111 
DBG(48571266)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48571267)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48571269)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48571270)> CPU DETAIL: Read R 1616: 2222444455660001 
DBG(48571271)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48571272)> CPU DETAIL: Result: 0000000000000000 
DBG(48571273)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48571274)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48571276)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48571277)> CPU DETAIL: Read R 1616: 2222444455660001 
DBG(48571278)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48571279)> CPU DETAIL: Result: 0000000000000001 
DBG(48571280)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48571282)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48571283)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48571284)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48571285)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48571288)> CPU CMD: Exec 0154: 00 60 0155 0169 0156   set to skip this event from tape 1 because has no predecessors (so the event 
DBG(48571289)> CPU DETAIL: Read R 0155: 0060164601690141 
DBG(48571290)> CPU DETAIL: Transfer to T 
DBG(48571290)> CPU DETAIL: Write 0169: 0060164601690141 
DBG(48571292)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48571293)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48571294)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571295)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48571295)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571296)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571297)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571298)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48571300)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48571301)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48571302)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571303)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48571303)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571304)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571305)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48571306)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48571308)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48571309)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571310)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48571313)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48571314)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48571315)> CPU DETAIL: Result: 0060101516160000 
DBG(48571316)> CPU DETAIL: Write 0149: 0060101516160000 
DBG(48571318)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48571319)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48571320)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571321)> CPU DETAIL: Result: 0000000000000000 
DBG(48571322)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48571324)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48571325)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48571326)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571327)> CPU DETAIL: Result: 0000000000000003 
DBG(48571328)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48571330)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48571331)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571332)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48571333)> CPU DETAIL: Result: 0000000000000010 
DBG(48571334)> CPU DETAIL: Write 1615: 0000000000000010 
DBG(48571336)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48571337)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571338)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48571341)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48571342)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48571343)> CPU DETAIL: Result: 0658000100100165 
DBG(48571344)> CPU DETAIL: Write 0167: 0658000100100165 
DBG(48571346)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571347)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48571347)> CPU DETAIL: Read R 0999: 0100000000111111 
DBG(48571348)> CPU DETAIL: Write 0598: 0100000000111111 
DBG(48571350)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571351)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48571352)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571353)> CPU DETAIL: Result: 0060699905990000 
DBG(48571354)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48571356)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571357)> CPU DETAIL: M6: 0001 
DBG(48571358)> CPU DETAIL: Transfer to T 
DBG(48571360)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571361)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48571361)> CPU DETAIL: Read R 1000: 0000000201000003 
DBG(48571362)> CPU DETAIL: Write 0599: 0000000201000003 
DBG(48571364)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571365)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48571366)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571367)> CPU DETAIL: Result: 0060699906000000 
DBG(48571368)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48571370)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571371)> CPU DETAIL: M6: 0002 
DBG(48571372)> CPU DETAIL: Transfer to T 
DBG(48571374)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571375)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48571375)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48571376)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48571378)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571379)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48571380)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571381)> CPU DETAIL: Result: 0060699906010000 
DBG(48571382)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48571384)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571385)> CPU DETAIL: M6: 0003 
DBG(48571386)> CPU DETAIL: Transfer to T 
DBG(48571388)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571389)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48571389)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48571390)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48571392)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571393)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48571394)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571395)> CPU DETAIL: Result: 0060699906020000 
DBG(48571396)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48571398)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571399)> CPU DETAIL: M6: 0004 
DBG(48571400)> CPU DETAIL: Transfer to T 
DBG(48571402)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571403)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48571403)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48571404)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48571406)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571407)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48571408)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571409)> CPU DETAIL: Result: 0060699906030000 
DBG(48571410)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48571412)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571413)> CPU DETAIL: M6: 0005 
DBG(48571414)> CPU DETAIL: Transfer to T 
DBG(48571416)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571417)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48571417)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48571418)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48571420)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571421)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48571422)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571423)> CPU DETAIL: Result: 0060699906040000 
DBG(48571424)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48571426)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571427)> CPU DETAIL: M6: 0006 
DBG(48571428)> CPU DETAIL: Transfer to T 
DBG(48571430)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571431)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48571431)> CPU DETAIL: Read R 1005: 2222444455660001 
DBG(48571432)> CPU DETAIL: Write 0604: 2222444455660001 
DBG(48571434)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571435)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48571436)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571437)> CPU DETAIL: Result: 0060699906050000 
DBG(48571438)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48571440)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571441)> CPU DETAIL: M6: 0007 
DBG(48571442)> CPU DETAIL: Transfer to T 
DBG(48571444)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571445)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48571445)> CPU DETAIL: Read R 1006: 0000000209999990 
DBG(48571446)> CPU DETAIL: Write 0605: 0000000209999990 
DBG(48571448)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571449)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48571450)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571451)> CPU DETAIL: Result: 0060699906060000 
DBG(48571452)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48571454)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571455)> CPU DETAIL: M6: 0008 
DBG(48571456)> CPU DETAIL: Transfer to T 
DBG(48571458)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571459)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48571459)> CPU DETAIL: Read R 1007: 0104110000000000 
DBG(48571460)> CPU DETAIL: Write 0606: 0104110000000000 
DBG(48571462)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571463)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48571464)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571465)> CPU DETAIL: Result: 0060699906070000 
DBG(48571466)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48571468)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571469)> CPU DETAIL: M6: 0009 
DBG(48571470)> CPU DETAIL: Transfer to T 
DBG(48571472)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571473)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48571473)> CPU DETAIL: Read R 1008: 0001209999999997 
DBG(48571474)> CPU DETAIL: Write 0607: 0001209999999997 
DBG(48571476)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571477)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48571478)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571479)> CPU DETAIL: Result: 0060699906080000 
DBG(48571480)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48571482)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571483)> CPU DETAIL: M6: 0010 
DBG(48571486)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48571487)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48571488)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48571490)> CPU CMD: Exec 0169: 00 60 1646 0169 0141   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48571491)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48571492)> CPU DETAIL: Transfer to T 
DBG(48571492)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48571494)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48571495)> CPU DETAIL: Read R 1614: 0000000000000020 
DBG(48571496)> CPU DETAIL: Read S 1615: 0000000000000010 
DBG(48571497)> CPU DETAIL: Result: 0000000000000010 
DBG(48571500)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48571501)> CPU DETAIL: REG1: 0000000000000010
DBG(48571501)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48571503)> CPU CMD: Exec 0149: 00 60 1015 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48571504)> CPU DETAIL: Read R 1015: 0000000000000100 
DBG(48571505)> CPU DETAIL: Write 1616: 0000000000000100 
DBG(48571507)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48571508)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48571508)> CPU DETAIL: Read R 1009: 0100000000111112 
DBG(48571509)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48571510)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48571512)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48571513)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48571514)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48571515)> CPU DETAIL: Result: 0000000000000100 
DBG(48571516)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48571517)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48571519)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48571520)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48571521)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48571522)> CPU DETAIL: Result: 0000000000000000 
DBG(48571523)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48571525)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48571526)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48571527)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48571528)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48571529)> CPU DETAIL: Transfer to T 
DBG(48571531)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48571532)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48571533)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571534)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48571534)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571535)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571536)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48571537)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48571539)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48571540)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48571541)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48571542)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48571542)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48571543)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571544)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48571545)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48571547)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48571548)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571549)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48571552)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48571553)> CPU DETAIL: Read R 0149: 0060101516160000 
DBG(48571554)> CPU DETAIL: Result: 0060102516160000 
DBG(48571555)> CPU DETAIL: Write 0149: 0060102516160000 
DBG(48571557)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48571558)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48571559)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571560)> CPU DETAIL: Result: 0000000000000003 
DBG(48571561)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48571563)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48571564)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48571565)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48571566)> CPU DETAIL: Result: 0000000000000000 
DBG(48571567)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48571569)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48571570)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571571)> CPU DETAIL: Read S 1615: 0000000000000010 
DBG(48571572)> CPU DETAIL: Result: 0000000000000020 
DBG(48571573)> CPU DETAIL: Write 1615: 0000000000000020 
DBG(48571575)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48571576)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571577)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48571580)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48571581)> CPU DETAIL: Read R 0167: 0658000100100165 
DBG(48571582)> CPU DETAIL: Result: 0658000100200165 
DBG(48571583)> CPU DETAIL: Write 0167: 0658000100200165 
DBG(48571585)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571586)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48571586)> CPU DETAIL: Read R 1009: 0100000000111112 
DBG(48571587)> CPU DETAIL: Write 0598: 0100000000111112 
DBG(48571589)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571590)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48571591)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571592)> CPU DETAIL: Result: 0060699905990000 
DBG(48571593)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48571595)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571596)> CPU DETAIL: M6: 0011 
DBG(48571597)> CPU DETAIL: Transfer to T 
DBG(48571599)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571600)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48571600)> CPU DETAIL: Read R 1010: 0000000209999990 
DBG(48571601)> CPU DETAIL: Write 0599: 0000000209999990 
DBG(48571603)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571604)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48571605)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571606)> CPU DETAIL: Result: 0060699906000000 
DBG(48571607)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48571609)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571610)> CPU DETAIL: M6: 0012 
DBG(48571611)> CPU DETAIL: Transfer to T 
DBG(48571613)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571614)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48571614)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48571615)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48571617)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571618)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48571619)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571620)> CPU DETAIL: Result: 0060699906010000 
DBG(48571621)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48571623)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571624)> CPU DETAIL: M6: 0013 
DBG(48571625)> CPU DETAIL: Transfer to T 
DBG(48571627)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571628)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48571628)> CPU DETAIL: Read R 1012: 0000000000000000 
DBG(48571629)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48571631)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571632)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48571633)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571634)> CPU DETAIL: Result: 0060699906020000 
DBG(48571635)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48571637)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571638)> CPU DETAIL: M6: 0014 
DBG(48571639)> CPU DETAIL: Transfer to T 
DBG(48571641)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571642)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48571642)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(48571643)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48571645)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571646)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48571647)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571648)> CPU DETAIL: Result: 0060699906030000 
DBG(48571649)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48571651)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571652)> CPU DETAIL: M6: 0015 
DBG(48571653)> CPU DETAIL: Transfer to T 
DBG(48571655)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571656)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48571656)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48571657)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48571659)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571660)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48571661)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571662)> CPU DETAIL: Result: 0060699906040000 
DBG(48571663)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48571665)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571666)> CPU DETAIL: M6: 0016 
DBG(48571667)> CPU DETAIL: Transfer to T 
DBG(48571669)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571670)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48571670)> CPU DETAIL: Read R 1015: 0000000000000100 
DBG(48571671)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48571673)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571674)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48571675)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571676)> CPU DETAIL: Result: 0060699906050000 
DBG(48571677)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48571679)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571680)> CPU DETAIL: M6: 0017 
DBG(48571681)> CPU DETAIL: Transfer to T 
DBG(48571683)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571684)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48571684)> CPU DETAIL: Read R 1016: 0000000201000000 
DBG(48571685)> CPU DETAIL: Write 0605: 0000000201000000 
DBG(48571687)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571688)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48571689)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571690)> CPU DETAIL: Result: 0060699906060000 
DBG(48571691)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48571693)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571694)> CPU DETAIL: M6: 0018 
DBG(48571695)> CPU DETAIL: Transfer to T 
DBG(48571697)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571698)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48571698)> CPU DETAIL: Read R 1017: 0000000000033555 
DBG(48571699)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48571701)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571702)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48571703)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571704)> CPU DETAIL: Result: 0060699906070000 
DBG(48571705)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48571707)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571708)> CPU DETAIL: M6: 0019 
DBG(48571709)> CPU DETAIL: Transfer to T 
DBG(48571711)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48571712)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48571712)> CPU DETAIL: Read R 1018: 0000000000033666 
DBG(48571713)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48571715)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48571716)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48571717)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571718)> CPU DETAIL: Result: 0060699906080000 
DBG(48571719)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48571721)> CPU CMD: Exec 0167: 06 58 0001 0020 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48571722)> CPU DETAIL: M6: 0020 
DBG(48571725)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48571726)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48571727)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48571729)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48571732)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48571733)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48571734)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48571737)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48571738)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48571739)> CPU DETAIL: Result: 0000000700000000 
DBG(48571742)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48571743)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48571744)> CPU DETAIL: Result: 0042440416550000 
DBG(48571745)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48571747)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48571748)> CPU DETAIL: Read R 0599: 0000000209999990 
DBG(48571749)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48571750)> CPU DETAIL: Result: 0000000209999990 
DBG(48571751)> CPU DETAIL: Write 1620: 0000000209999990 
DBG(48571753)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48571754)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48571754)> CPU DETAIL: Read R 0404: 0000000209999990 
DBG(48571755)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48571756)> CPU DETAIL: Result: 0000000209999990 
DBG(48571759)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48571760)> CPU DETAIL: Read S 1620: 0000000209999990 
DBG(48571761)> CPU DETAIL: Result: 0000000000000000 
DBG(48571764)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48571765)> CPU DETAIL: REG1: 0000000000000000
DBG(48571765)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48571767)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48571768)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48571769)> CPU DETAIL: Transfer to T 
DBG(48571769)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48571771)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48571772)> CPU DETAIL: Read R 0605: 0000000201000000 
DBG(48571773)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48571774)> CPU DETAIL: Result: 0000000201000000 
DBG(48571775)> CPU DETAIL: Write 1620: 0000000201000000 
DBG(48571777)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48571778)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48571778)> CPU DETAIL: Read R 0398: 0000000201000003 
DBG(48571779)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48571780)> CPU DETAIL: Result: 0000000201000000 
DBG(48571783)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48571784)> CPU DETAIL: Read R 1620: 0000000201000000 
DBG(48571785)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48571786)> CPU DETAIL: Transfer to T 
DBG(48571788)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48571789)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48571790)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48571792)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48571793)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48571794)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48571796)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48571797)> CPU DETAIL: Read R 0599: 0000000209999990 
DBG(48571798)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48571799)> CPU DETAIL: Result: 0100000209999990 
DBG(48571800)> CPU DETAIL: Write 0599: 0100000209999990 
DBG(48571802)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48571803)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48571804)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48571806)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48571807)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48571808)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48571809)> CPU DETAIL: Result: 0000000000000100 
DBG(48571810)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48571813)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48571814)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48571815)> CPU DETAIL: Result: 0000000000000000 
DBG(48571818)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48571819)> CPU DETAIL: REG1: 0000000000000000
DBG(48571819)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48571821)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48571822)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48571823)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48571825)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48571826)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48571827)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48571829)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48571830)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48571831)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48571832)> CPU DETAIL: Result: 0000000000000100 
DBG(48571833)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48571836)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48571837)> CPU DETAIL: Read R 0599: 0100000209999990 
DBG(48571838)> CPU DETAIL: Result: 0000000209999990 
DBG(48571839)> CPU DETAIL: Write 0599: 0000000209999990 
DBG(48571841)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48571842)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571843)> CPU DETAIL: Read S 1626: 0000000000000000 
DBG(48571844)> CPU DETAIL: Result: 0000000000000010 
DBG(48571847)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48571848)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48571849)> CPU DETAIL: Result: 0000000000000190 
DBG(48571852)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48571853)> CPU DETAIL: REG1: 0000000000000190
DBG(48571853)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48571855)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48571856)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48571857)> CPU DETAIL: Transfer to T 
DBG(48571857)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48571859)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48571860)> CPU DETAIL: M4: 0000 
DBG(48571861)> CPU DETAIL: M6: 0020 
DBG(48571862)> CPU DETAIL: Clear M8
DBG(48571862)> CPU DETAIL: M8: 0000 
DBG(48571865)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48571866)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48571867)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48571870)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48571871)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48571872)> CPU DETAIL: Result: 0858000100100296 
DBG(48571873)> CPU DETAIL: Write 0299: 0858000100100296 
DBG(48571875)> CPU CMD: Exec 0296: 00 60 8598 0798 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571876)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48571876)> CPU DETAIL: Read R 0598: 0100000000111112 
DBG(48571877)> CPU DETAIL: Write 0798: 0100000000111112 
DBG(48571879)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571880)> CPU DETAIL: Read R 0296: 0060859807980000 
DBG(48571881)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571882)> CPU DETAIL: Result: 0060859807990000 
DBG(48571883)> CPU DETAIL: Write 0296: 0060859807990000 
DBG(48571885)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571886)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48571887)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571888)> CPU DETAIL: Result: 0000000000000001 
DBG(48571889)> CPU DETAIL: Write 1626: 0000000000000001 
DBG(48571891)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571892)> CPU DETAIL: M8: 0001 
DBG(48571893)> CPU DETAIL: Transfer to T 
DBG(48571895)> CPU CMD: Exec 0296: 00 60 8598 0799 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571896)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48571896)> CPU DETAIL: Read R 0599: 0000000209999990 
DBG(48571897)> CPU DETAIL: Write 0799: 0000000209999990 
DBG(48571899)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571900)> CPU DETAIL: Read R 0296: 0060859807990000 
DBG(48571901)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571902)> CPU DETAIL: Result: 0060859808000000 
DBG(48571903)> CPU DETAIL: Write 0296: 0060859808000000 
DBG(48571905)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571906)> CPU DETAIL: Read R 1626: 0000000000000001 
DBG(48571907)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571908)> CPU DETAIL: Result: 0000000000000002 
DBG(48571909)> CPU DETAIL: Write 1626: 0000000000000002 
DBG(48571911)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571912)> CPU DETAIL: M8: 0002 
DBG(48571913)> CPU DETAIL: Transfer to T 
DBG(48571915)> CPU CMD: Exec 0296: 00 60 8598 0800 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571916)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48571916)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48571917)> CPU DETAIL: Write 0800: 0000000000000000 
DBG(48571919)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571920)> CPU DETAIL: Read R 0296: 0060859808000000 
DBG(48571921)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571922)> CPU DETAIL: Result: 0060859808010000 
DBG(48571923)> CPU DETAIL: Write 0296: 0060859808010000 
DBG(48571925)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571926)> CPU DETAIL: Read R 1626: 0000000000000002 
DBG(48571927)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571928)> CPU DETAIL: Result: 0000000000000003 
DBG(48571929)> CPU DETAIL: Write 1626: 0000000000000003 
DBG(48571931)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571932)> CPU DETAIL: M8: 0003 
DBG(48571933)> CPU DETAIL: Transfer to T 
DBG(48571935)> CPU CMD: Exec 0296: 00 60 8598 0801 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571936)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48571936)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48571937)> CPU DETAIL: Write 0801: 0000000000000000 
DBG(48571939)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571940)> CPU DETAIL: Read R 0296: 0060859808010000 
DBG(48571941)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571942)> CPU DETAIL: Result: 0060859808020000 
DBG(48571943)> CPU DETAIL: Write 0296: 0060859808020000 
DBG(48571945)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571946)> CPU DETAIL: Read R 1626: 0000000000000003 
DBG(48571947)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571948)> CPU DETAIL: Result: 0000000000000004 
DBG(48571949)> CPU DETAIL: Write 1626: 0000000000000004 
DBG(48571951)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571952)> CPU DETAIL: M8: 0004 
DBG(48571953)> CPU DETAIL: Transfer to T 
DBG(48571955)> CPU CMD: Exec 0296: 00 60 8598 0802 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571956)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48571956)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48571957)> CPU DETAIL: Write 0802: 0000000000000000 
DBG(48571959)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571960)> CPU DETAIL: Read R 0296: 0060859808020000 
DBG(48571961)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571962)> CPU DETAIL: Result: 0060859808030000 
DBG(48571963)> CPU DETAIL: Write 0296: 0060859808030000 
DBG(48571965)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571966)> CPU DETAIL: Read R 1626: 0000000000000004 
DBG(48571967)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571968)> CPU DETAIL: Result: 0000000000000005 
DBG(48571969)> CPU DETAIL: Write 1626: 0000000000000005 
DBG(48571971)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571972)> CPU DETAIL: M8: 0005 
DBG(48571973)> CPU DETAIL: Transfer to T 
DBG(48571975)> CPU CMD: Exec 0296: 00 60 8598 0803 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571976)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48571976)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48571977)> CPU DETAIL: Write 0803: 0000000000000000 
DBG(48571979)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48571980)> CPU DETAIL: Read R 0296: 0060859808030000 
DBG(48571981)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48571982)> CPU DETAIL: Result: 0060859808040000 
DBG(48571983)> CPU DETAIL: Write 0296: 0060859808040000 
DBG(48571985)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48571986)> CPU DETAIL: Read R 1626: 0000000000000005 
DBG(48571987)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48571988)> CPU DETAIL: Result: 0000000000000006 
DBG(48571989)> CPU DETAIL: Write 1626: 0000000000000006 
DBG(48571991)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48571992)> CPU DETAIL: M8: 0006 
DBG(48571993)> CPU DETAIL: Transfer to T 
DBG(48571995)> CPU CMD: Exec 0296: 00 60 8598 0804 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48571996)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48571996)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48571997)> CPU DETAIL: Write 0804: 0000000000000100 
DBG(48571999)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48572000)> CPU DETAIL: Read R 0296: 0060859808040000 
DBG(48572001)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572002)> CPU DETAIL: Result: 0060859808050000 
DBG(48572003)> CPU DETAIL: Write 0296: 0060859808050000 
DBG(48572005)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48572006)> CPU DETAIL: Read R 1626: 0000000000000006 
DBG(48572007)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572008)> CPU DETAIL: Result: 0000000000000007 
DBG(48572009)> CPU DETAIL: Write 1626: 0000000000000007 
DBG(48572011)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48572012)> CPU DETAIL: M8: 0007 
DBG(48572013)> CPU DETAIL: Transfer to T 
DBG(48572015)> CPU CMD: Exec 0296: 00 60 8598 0805 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48572016)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48572016)> CPU DETAIL: Read R 0605: 0000000201000000 
DBG(48572017)> CPU DETAIL: Write 0805: 0000000201000000 
DBG(48572019)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48572020)> CPU DETAIL: Read R 0296: 0060859808050000 
DBG(48572021)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572022)> CPU DETAIL: Result: 0060859808060000 
DBG(48572023)> CPU DETAIL: Write 0296: 0060859808060000 
DBG(48572025)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48572026)> CPU DETAIL: Read R 1626: 0000000000000007 
DBG(48572027)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572028)> CPU DETAIL: Result: 0000000000000008 
DBG(48572029)> CPU DETAIL: Write 1626: 0000000000000008 
DBG(48572031)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48572032)> CPU DETAIL: M8: 0008 
DBG(48572033)> CPU DETAIL: Transfer to T 
DBG(48572035)> CPU CMD: Exec 0296: 00 60 8598 0806 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48572036)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48572036)> CPU DETAIL: Read R 0606: 0000000000033555 
DBG(48572037)> CPU DETAIL: Write 0806: 0000000000033555 
DBG(48572039)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48572040)> CPU DETAIL: Read R 0296: 0060859808060000 
DBG(48572041)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572042)> CPU DETAIL: Result: 0060859808070000 
DBG(48572043)> CPU DETAIL: Write 0296: 0060859808070000 
DBG(48572045)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48572046)> CPU DETAIL: Read R 1626: 0000000000000008 
DBG(48572047)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572048)> CPU DETAIL: Result: 0000000000000009 
DBG(48572049)> CPU DETAIL: Write 1626: 0000000000000009 
DBG(48572051)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48572052)> CPU DETAIL: M8: 0009 
DBG(48572053)> CPU DETAIL: Transfer to T 
DBG(48572055)> CPU CMD: Exec 0296: 00 60 8598 0807 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48572056)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48572056)> CPU DETAIL: Read R 0607: 0000000000033666 
DBG(48572057)> CPU DETAIL: Write 0807: 0000000000033666 
DBG(48572059)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48572060)> CPU DETAIL: Read R 0296: 0060859808070000 
DBG(48572061)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572062)> CPU DETAIL: Result: 0060859808080000 
DBG(48572063)> CPU DETAIL: Write 0296: 0060859808080000 
DBG(48572065)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48572066)> CPU DETAIL: Read R 1626: 0000000000000009 
DBG(48572067)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572068)> CPU DETAIL: Result: 0000000000000010 
DBG(48572069)> CPU DETAIL: Write 1626: 0000000000000010 
DBG(48572071)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48572072)> CPU DETAIL: M8: 0010 
DBG(48572075)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48572078)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48572079)> CPU DETAIL: Transfer to T 
DBG(48572081)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48572082)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48572083)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48572086)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48572087)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572087)> CPU DETAIL: Read R 0398: 0000000201000003 
DBG(48572088)> CPU DETAIL: Result: 0001000201000003 
DBG(48572089)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572089)> CPU DETAIL: Write 0398: 0001000201000003 
DBG(48572091)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48572092)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572092)> CPU DETAIL: Read R 0398: 0001000201000003 
DBG(48572093)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48572094)> CPU DETAIL: Result: 0001000000000000 
DBG(48572095)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48572096)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48572098)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48572099)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572099)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48572100)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48572101)> CPU DETAIL: Result: 0000000000000001 
DBG(48572104)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48572105)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48572106)> CPU DETAIL: Result: 0000000000000000 
DBG(48572109)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48572110)> CPU DETAIL: REG1: 0000000000000000
DBG(48572110)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48572112)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48572113)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48572114)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48572115)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48572117)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48572118)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572118)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48572119)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48572120)> CPU DETAIL: Result: 0000000000000001 
DBG(48572121)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48572124)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48572125)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572125)> CPU DETAIL: Read R 0398: 0001000201000003 
DBG(48572126)> CPU DETAIL: Result: 0000000201000003 
DBG(48572127)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572127)> CPU DETAIL: Write 0398: 0000000201000003 
DBG(48572129)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48572130)> CPU DETAIL: Read R 1625: 0000000000000000 
DBG(48572131)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48572132)> CPU DETAIL: Result: 0000000000000010 
DBG(48572135)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48572136)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48572137)> CPU DETAIL: Result: 0000000000000190 
DBG(48572140)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48572141)> CPU DETAIL: REG1: 0000000000000190
DBG(48572141)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48572143)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48572144)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48572145)> CPU DETAIL: Transfer to T 
DBG(48572145)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48572147)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48572148)> CPU DETAIL: M4: 0000 
DBG(48572149)> CPU DETAIL: M6: 0020 
DBG(48572150)> CPU DETAIL: Clear M8
DBG(48572150)> CPU DETAIL: M8: 0000 
DBG(48572153)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48572154)> CPU DETAIL: Read R 1612: 0000000000000000 
DBG(48572155)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572156)> CPU DETAIL: Result: 0000000000000001 
DBG(48572157)> CPU DETAIL: Write 1612: 0000000000000001 
DBG(48572159)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48572160)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48572161)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48572164)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48572165)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48572166)> CPU DETAIL: Result: 0858000100100266 
DBG(48572167)> CPU DETAIL: Write 0270: 0858000100100266 
DBG(48572169)> CPU CMD: Exec 0266: 00 60 4397 1401 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572170)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48572170)> CPU DETAIL: Read R 0397: 0100000000111111 
DBG(48572171)> CPU DETAIL: Write 1401: 0100000000111111 
DBG(48572173)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572174)> CPU DETAIL: Read R 0266: 0060439714010000 
DBG(48572175)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572176)> CPU DETAIL: Result: 0060439714020000 
DBG(48572177)> CPU DETAIL: Write 0266: 0060439714020000 
DBG(48572179)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572180)> CPU DETAIL: Read R 1625: 0000000000000000 
DBG(48572181)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572182)> CPU DETAIL: Result: 0000000000000001 
DBG(48572183)> CPU DETAIL: Write 1625: 0000000000000001 
DBG(48572185)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572186)> CPU DETAIL: M4: 0001 
DBG(48572187)> CPU DETAIL: M6: 0020 
DBG(48572188)> CPU DETAIL: M8: 0000 
DBG(48572191)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572192)> CPU DETAIL: M8: 0001 
DBG(48572193)> CPU DETAIL: Transfer to T 
DBG(48572195)> CPU CMD: Exec 0266: 00 60 4397 1402 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572196)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48572196)> CPU DETAIL: Read R 0398: 0000000201000003 
DBG(48572197)> CPU DETAIL: Write 1402: 0000000201000003 
DBG(48572199)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572200)> CPU DETAIL: Read R 0266: 0060439714020000 
DBG(48572201)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572202)> CPU DETAIL: Result: 0060439714030000 
DBG(48572203)> CPU DETAIL: Write 0266: 0060439714030000 
DBG(48572205)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572206)> CPU DETAIL: Read R 1625: 0000000000000001 
DBG(48572207)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572208)> CPU DETAIL: Result: 0000000000000002 
DBG(48572209)> CPU DETAIL: Write 1625: 0000000000000002 
DBG(48572211)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572212)> CPU DETAIL: M4: 0002 
DBG(48572213)> CPU DETAIL: M6: 0020 
DBG(48572214)> CPU DETAIL: M8: 0001 
DBG(48572217)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572218)> CPU DETAIL: M8: 0002 
DBG(48572219)> CPU DETAIL: Transfer to T 
DBG(48572221)> CPU CMD: Exec 0266: 00 60 4397 1403 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572222)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48572222)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48572223)> CPU DETAIL: Write 1403: 0000000000000000 
DBG(48572225)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572226)> CPU DETAIL: Read R 0266: 0060439714030000 
DBG(48572227)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572228)> CPU DETAIL: Result: 0060439714040000 
DBG(48572229)> CPU DETAIL: Write 0266: 0060439714040000 
DBG(48572231)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572232)> CPU DETAIL: Read R 1625: 0000000000000002 
DBG(48572233)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572234)> CPU DETAIL: Result: 0000000000000003 
DBG(48572235)> CPU DETAIL: Write 1625: 0000000000000003 
DBG(48572237)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572238)> CPU DETAIL: M4: 0003 
DBG(48572239)> CPU DETAIL: M6: 0020 
DBG(48572240)> CPU DETAIL: M8: 0002 
DBG(48572243)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572244)> CPU DETAIL: M8: 0003 
DBG(48572245)> CPU DETAIL: Transfer to T 
DBG(48572247)> CPU CMD: Exec 0266: 00 60 4397 1404 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572248)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48572248)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48572249)> CPU DETAIL: Write 1404: 0000000000000000 
DBG(48572251)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572252)> CPU DETAIL: Read R 0266: 0060439714040000 
DBG(48572253)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572254)> CPU DETAIL: Result: 0060439714050000 
DBG(48572255)> CPU DETAIL: Write 0266: 0060439714050000 
DBG(48572257)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572258)> CPU DETAIL: Read R 1625: 0000000000000003 
DBG(48572259)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572260)> CPU DETAIL: Result: 0000000000000004 
DBG(48572261)> CPU DETAIL: Write 1625: 0000000000000004 
DBG(48572263)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572264)> CPU DETAIL: M4: 0004 
DBG(48572265)> CPU DETAIL: M6: 0020 
DBG(48572266)> CPU DETAIL: M8: 0003 
DBG(48572269)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572270)> CPU DETAIL: M8: 0004 
DBG(48572271)> CPU DETAIL: Transfer to T 
DBG(48572273)> CPU CMD: Exec 0266: 00 60 4397 1405 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572274)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48572274)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48572275)> CPU DETAIL: Write 1405: 0000000000000000 
DBG(48572277)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572278)> CPU DETAIL: Read R 0266: 0060439714050000 
DBG(48572279)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572280)> CPU DETAIL: Result: 0060439714060000 
DBG(48572281)> CPU DETAIL: Write 0266: 0060439714060000 
DBG(48572283)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572284)> CPU DETAIL: Read R 1625: 0000000000000004 
DBG(48572285)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572286)> CPU DETAIL: Result: 0000000000000005 
DBG(48572287)> CPU DETAIL: Write 1625: 0000000000000005 
DBG(48572289)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572290)> CPU DETAIL: M4: 0005 
DBG(48572291)> CPU DETAIL: M6: 0020 
DBG(48572292)> CPU DETAIL: M8: 0004 
DBG(48572295)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572296)> CPU DETAIL: M8: 0005 
DBG(48572297)> CPU DETAIL: Transfer to T 
DBG(48572299)> CPU CMD: Exec 0266: 00 60 4397 1406 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572300)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48572300)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48572301)> CPU DETAIL: Write 1406: 0000000000000000 
DBG(48572303)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572304)> CPU DETAIL: Read R 0266: 0060439714060000 
DBG(48572305)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572306)> CPU DETAIL: Result: 0060439714070000 
DBG(48572307)> CPU DETAIL: Write 0266: 0060439714070000 
DBG(48572309)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572310)> CPU DETAIL: Read R 1625: 0000000000000005 
DBG(48572311)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572312)> CPU DETAIL: Result: 0000000000000006 
DBG(48572313)> CPU DETAIL: Write 1625: 0000000000000006 
DBG(48572315)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572316)> CPU DETAIL: M4: 0006 
DBG(48572317)> CPU DETAIL: M6: 0020 
DBG(48572318)> CPU DETAIL: M8: 0005 
DBG(48572321)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572322)> CPU DETAIL: M8: 0006 
DBG(48572323)> CPU DETAIL: Transfer to T 
DBG(48572325)> CPU CMD: Exec 0266: 00 60 4397 1407 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572326)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48572326)> CPU DETAIL: Read R 0403: 2222444455660001 
DBG(48572327)> CPU DETAIL: Write 1407: 2222444455660001 
DBG(48572329)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572330)> CPU DETAIL: Read R 0266: 0060439714070000 
DBG(48572331)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572332)> CPU DETAIL: Result: 0060439714080000 
DBG(48572333)> CPU DETAIL: Write 0266: 0060439714080000 
DBG(48572335)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572336)> CPU DETAIL: Read R 1625: 0000000000000006 
DBG(48572337)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572338)> CPU DETAIL: Result: 0000000000000007 
DBG(48572339)> CPU DETAIL: Write 1625: 0000000000000007 
DBG(48572341)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572342)> CPU DETAIL: M4: 0007 
DBG(48572343)> CPU DETAIL: M6: 0020 
DBG(48572344)> CPU DETAIL: M8: 0006 
DBG(48572347)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572348)> CPU DETAIL: M8: 0007 
DBG(48572349)> CPU DETAIL: Transfer to T 
DBG(48572351)> CPU CMD: Exec 0266: 00 60 4397 1408 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572352)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48572352)> CPU DETAIL: Read R 0404: 0000000209999990 
DBG(48572353)> CPU DETAIL: Write 1408: 0000000209999990 
DBG(48572355)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572356)> CPU DETAIL: Read R 0266: 0060439714080000 
DBG(48572357)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572358)> CPU DETAIL: Result: 0060439714090000 
DBG(48572359)> CPU DETAIL: Write 0266: 0060439714090000 
DBG(48572361)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572362)> CPU DETAIL: Read R 1625: 0000000000000007 
DBG(48572363)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572364)> CPU DETAIL: Result: 0000000000000008 
DBG(48572365)> CPU DETAIL: Write 1625: 0000000000000008 
DBG(48572367)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572368)> CPU DETAIL: M4: 0008 
DBG(48572369)> CPU DETAIL: M6: 0020 
DBG(48572370)> CPU DETAIL: M8: 0007 
DBG(48572373)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572374)> CPU DETAIL: M8: 0008 
DBG(48572375)> CPU DETAIL: Transfer to T 
DBG(48572377)> CPU CMD: Exec 0266: 00 60 4397 1409 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572378)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48572378)> CPU DETAIL: Read R 0405: 0104110000000000 
DBG(48572379)> CPU DETAIL: Write 1409: 0104110000000000 
DBG(48572381)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572382)> CPU DETAIL: Read R 0266: 0060439714090000 
DBG(48572383)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572384)> CPU DETAIL: Result: 0060439714100000 
DBG(48572385)> CPU DETAIL: Write 0266: 0060439714100000 
DBG(48572387)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572388)> CPU DETAIL: Read R 1625: 0000000000000008 
DBG(48572389)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572390)> CPU DETAIL: Result: 0000000000000009 
DBG(48572391)> CPU DETAIL: Write 1625: 0000000000000009 
DBG(48572393)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572394)> CPU DETAIL: M4: 0009 
DBG(48572395)> CPU DETAIL: M6: 0020 
DBG(48572396)> CPU DETAIL: M8: 0008 
DBG(48572399)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572400)> CPU DETAIL: M8: 0009 
DBG(48572401)> CPU DETAIL: Transfer to T 
DBG(48572403)> CPU CMD: Exec 0266: 00 60 4397 1410 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48572404)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48572404)> CPU DETAIL: Read R 0406: 0001209999999997 
DBG(48572405)> CPU DETAIL: Write 1410: 0001209999999997 
DBG(48572407)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48572408)> CPU DETAIL: Read R 0266: 0060439714100000 
DBG(48572409)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572410)> CPU DETAIL: Result: 0060439714110000 
DBG(48572411)> CPU DETAIL: Write 0266: 0060439714110000 
DBG(48572413)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48572414)> CPU DETAIL: Read R 1625: 0000000000000009 
DBG(48572415)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572416)> CPU DETAIL: Result: 0000000000000010 
DBG(48572417)> CPU DETAIL: Write 1625: 0000000000000010 
DBG(48572419)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48572420)> CPU DETAIL: M4: 0010 
DBG(48572421)> CPU DETAIL: M6: 0020 
DBG(48572422)> CPU DETAIL: M8: 0009 
DBG(48572425)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48572426)> CPU DETAIL: M8: 0010 
DBG(48572429)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48572432)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48572433)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48572434)> CPU DETAIL: Transfer to T 
DBG(48572434)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48572436)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48572437)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48572438)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48572439)> CPU DETAIL: Result: 0000000000000049 
DBG(48572442)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48572443)> CPU DETAIL: REG1: 0000000000000049
DBG(48572443)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48572445)> CPU CMD: Exec 0124: 00 60 0413 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48572446)> CPU DETAIL: Read R 0413: 3333444455660002 
DBG(48572447)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48572449)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48572450)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48572450)> CPU DETAIL: Read R 0407: 0130000000121111 
DBG(48572451)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48572452)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48572454)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48572455)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48572456)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48572457)> CPU DETAIL: Result: 0000000000000000 
DBG(48572458)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48572459)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48572461)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48572462)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48572463)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48572464)> CPU DETAIL: Result: 0000000000000002 
DBG(48572465)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48572467)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48572468)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48572469)> CPU DETAIL: Read S 1609: 0000000000000000 
DBG(48572470)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48572473)> CPU CMD: Exec 0129: 00 72 1610 1640 0131   if num successors w7 <> zero goto 0131   
DBG(48572474)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48572475)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48572476)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48572477)> CPU DETAIL: Transfer to T 
DBG(48572479)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48572480)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48572481)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48572482)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48572483)> CPU DETAIL: Transfer to T 
DBG(48572485)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48572486)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48572487)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572488)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48572488)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572489)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572490)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572491)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48572493)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48572494)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48572495)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572496)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48572496)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572497)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572498)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48572499)> CPU DETAIL: Write 1610: 9600000000000006 
DBG(48572501)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48572502)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48572503)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572504)> CPU DETAIL: Result: 0000000000000000 
DBG(48572505)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48572507)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48572508)> CPU DETAIL: Read R 1610: 9600000000000006 
DBG(48572509)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572510)> CPU DETAIL: Result: 0000000000000006 
DBG(48572511)> CPU DETAIL: Write 1610: 0000000000000006 
DBG(48572513)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48572514)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48572515)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48572518)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48572519)> CPU DETAIL: Read R 0124: 0060041316080000 
DBG(48572520)> CPU DETAIL: Result: 0060042616080000 
DBG(48572521)> CPU DETAIL: Write 0124: 0060042616080000 
DBG(48572523)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48572524)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48572525)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48572526)> CPU DETAIL: Result: 0000000000000023 
DBG(48572527)> CPU DETAIL: Write 1606: 0000000000000023 
DBG(48572529)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48572532)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48572533)> CPU DETAIL: Read R 1614: 0000000000000020 
DBG(48572534)> CPU DETAIL: Read S 1615: 0000000000000020 
DBG(48572535)> CPU DETAIL: Result: 0000000000000000 
DBG(48572538)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48572539)> CPU DETAIL: REG1: 0000000000000000
DBG(48572539)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48572541)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48572542)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48572543)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48572545)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48572546)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48572547)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48572549)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48572550)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48572551)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48572553)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48572554)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48572555)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48572557)> CPU CMD: Exec 0148: 00 60 0000 0000 0105   goto read event block from input tape 01   
DBG(48572558)> CPU DETAIL: Transfer to T 
DBG(48572560)> CPU CMD: Exec 0105: 01 94 0999 0000 0002   read input tape 01 -> (0999 input event block tape 01)    
DBG(48572561)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0002
DBG(48572561)> MT DATA: Tape unit 1: init read
DBG(48572561)> MT DETAIL: Read tape record (974 chars, used 3.41 inches, needs 21 msec) from tape 1
DBG(48572561)> MT DETAIL: Tape record contents: D*0190030103520002C*0130000000121111C*0000000231000000C*00000000000000...
DBG(48572561)> MT EXP: Start Of Block Word: 0190030103520002
DBG(48572561)> MT EXP: Read Tape Block number 0002
DBG(48572561)> MT EXP: Read forward addr 0999 to 0000
DBG(48572561)> MT EXP: Tape to CRT 0999: 0130000000121111 
DBG(48572561)> MT EXP: Tape to CRT 1000: 0000000231000000 
DBG(48572561)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1005: 3333444455660002 
DBG(48572561)> MT EXP: Tape to CRT 1006: 0000000231010000 
DBG(48572561)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1009: 0000000231020000 
DBG(48572561)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1012: 0130000000121112 
DBG(48572561)> MT EXP: Tape to CRT 1013: 0000000231010000 
DBG(48572561)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1018: 3334444455660101 
DBG(48572561)> MT EXP: Tape to CRT 1019: 0000000231000000 
DBG(48572561)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1022: 0000000231030000 
DBG(48572561)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1025: 0130000000121113 
DBG(48572561)> MT EXP: Tape to CRT 1026: 0000000231020003 
DBG(48572561)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1030: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1031: 3335444455660101 
DBG(48572561)> MT EXP: Tape to CRT 1032: 0000000231000000 
DBG(48572561)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1035: 0000000231030000 
DBG(48572561)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1037: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1038: 0130000000121114 
DBG(48572561)> MT EXP: Tape to CRT 1039: 0000000231030000 
DBG(48572561)> MT EXP: Tape to CRT 1040: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1041: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1042: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1043: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1044: 3336000000000200 
DBG(48572561)> MT EXP: Tape to CRT 1045: 0000000231010000 
DBG(48572561)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1047: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1048: 0000000231020000 
DBG(48572561)> MT EXP: Tape to CRT 1049: 0000000000000000 
DBG(48572561)> MT EXP: Tape to CRT 1050: 0000000000000000 
DBG(48572561)> MT EXP: End Of Block Word: 0190030103520002, data words in block: 52
DBG(48572561)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (7.30 inches)
DBG(48572564)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48572565)> CPU DETAIL: Condition not present 
DBG(48572567)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48572568)> CPU DETAIL: Condition not present 
DBG(48572570)> CPU CMD: Exec 0108: 00 60 0000 1613 0000   REG1 -> (1613) = Start of block      
DBG(48572571)> CPU DETAIL: Write 1613: 0190030103520002 
DBG(48572573)> CPU CMD: Exec 0109: 00 40 0105 1639 0105   incr block num on tape 01 read   
DBG(48572574)> CPU DETAIL: Read R 0105: 0194099900000002 
DBG(48572575)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48572576)> CPU DETAIL: Result: 0194099900000003 
DBG(48572577)> CPU DETAIL: Write 0105: 0194099900000003 
DBG(48572579)> CPU CMD: Exec 0110: 00 60 1653 1621 0000   01 0..0 -> (1621 current input tape)   
DBG(48572580)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48572581)> CPU DETAIL: Write 1621: 0100000000000000 
DBG(48572583)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48572584)> CPU DETAIL: Read R 1613: 0190030103520002 
DBG(48572585)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48572586)> CPU DETAIL: Result: 0000000003520000 
DBG(48572587)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000352 
DBG(48572588)> CPU DETAIL: Write 1604: 0000000000000352 
DBG(48572590)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48572591)> CPU DETAIL: Read R 1613: 0190030103520002 
DBG(48572592)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48572593)> CPU DETAIL: Result: 0000030100000000 
DBG(48572594)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48572597)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48572598)> CPU DETAIL: Read R 1604: 0000000000000352 
DBG(48572599)> CPU DETAIL: Result: 0000000000000051 
DBG(48572600)> CPU DETAIL: Write 1614: 0000000000000051 
DBG(48572602)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48572603)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48572604)> CPU DETAIL: Result: 0000000000000052 
DBG(48572605)> CPU DETAIL: Write 1614: 0000000000000052 
DBG(48572607)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48572608)> CPU DETAIL: M4: 0010 
DBG(48572609)> CPU DETAIL: Clear M6
DBG(48572609)> CPU DETAIL: M6: 0000 
DBG(48572610)> CPU DETAIL: M8: 0010 
DBG(48572613)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48572614)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48572615)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48572617)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48572618)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48572619)> CPU DETAIL: Transfer to T 
DBG(48572619)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48572621)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48572622)> CPU DETAIL: Read R 1614: 0000000000000052 
DBG(48572623)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48572624)> CPU DETAIL: Result: 0000000000000052 
DBG(48572627)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48572628)> CPU DETAIL: REG1: 0000000000000052
DBG(48572628)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48572630)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48572631)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48572632)> CPU DETAIL: Write 1616: 3333444455660002 
DBG(48572634)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48572635)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48572635)> CPU DETAIL: Read R 0999: 0130000000121111 
DBG(48572636)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48572637)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48572639)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48572640)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48572641)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48572642)> CPU DETAIL: Result: 0000000000000000 
DBG(48572643)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48572644)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48572646)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48572647)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48572648)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48572649)> CPU DETAIL: Result: 0000000000000002 
DBG(48572650)> CPU DETAIL: Write 1618: 0000000000000002 
DBG(48572652)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48572653)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48572654)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48572655)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48572658)> CPU CMD: Exec 0154: 00 60 0155 0169 0156   set to skip this event from tape 1 because has no predecessors (so the event 
DBG(48572659)> CPU DETAIL: Read R 0155: 0060164601690141 
DBG(48572660)> CPU DETAIL: Transfer to T 
DBG(48572660)> CPU DETAIL: Write 0169: 0060164601690141 
DBG(48572662)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48572663)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48572664)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572665)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48572665)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572666)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572667)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572668)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48572670)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48572671)> CPU DETAIL: Read R 1618: 0000000000000002 
DBG(48572672)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572673)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48572673)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572674)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572675)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48572676)> CPU DETAIL: Write 1618: 9600000000000006 
DBG(48572678)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48572679)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572680)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48572683)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48572684)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48572685)> CPU DETAIL: Result: 0060101816160000 
DBG(48572686)> CPU DETAIL: Write 0149: 0060101816160000 
DBG(48572688)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48572689)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48572690)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572691)> CPU DETAIL: Result: 0000000000000000 
DBG(48572692)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48572694)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48572695)> CPU DETAIL: Read R 1618: 9600000000000006 
DBG(48572696)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572697)> CPU DETAIL: Result: 0000000000000006 
DBG(48572698)> CPU DETAIL: Write 1618: 0000000000000006 
DBG(48572700)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48572701)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572702)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48572703)> CPU DETAIL: Result: 0000000000000013 
DBG(48572704)> CPU DETAIL: Write 1615: 0000000000000013 
DBG(48572706)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48572707)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572708)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48572711)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48572712)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48572713)> CPU DETAIL: Result: 0658000100130165 
DBG(48572714)> CPU DETAIL: Write 0167: 0658000100130165 
DBG(48572716)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572717)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48572717)> CPU DETAIL: Read R 0999: 0130000000121111 
DBG(48572718)> CPU DETAIL: Write 0598: 0130000000121111 
DBG(48572720)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572721)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48572722)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572723)> CPU DETAIL: Result: 0060699905990000 
DBG(48572724)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48572726)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572727)> CPU DETAIL: M6: 0001 
DBG(48572728)> CPU DETAIL: Transfer to T 
DBG(48572730)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572731)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48572731)> CPU DETAIL: Read R 1000: 0000000231000000 
DBG(48572732)> CPU DETAIL: Write 0599: 0000000231000000 
DBG(48572734)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572735)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48572736)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572737)> CPU DETAIL: Result: 0060699906000000 
DBG(48572738)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48572740)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572741)> CPU DETAIL: M6: 0002 
DBG(48572742)> CPU DETAIL: Transfer to T 
DBG(48572744)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572745)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48572745)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48572746)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48572748)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572749)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48572750)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572751)> CPU DETAIL: Result: 0060699906010000 
DBG(48572752)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48572754)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572755)> CPU DETAIL: M6: 0003 
DBG(48572756)> CPU DETAIL: Transfer to T 
DBG(48572758)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572759)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48572759)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48572760)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48572762)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572763)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48572764)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572765)> CPU DETAIL: Result: 0060699906020000 
DBG(48572766)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48572768)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572769)> CPU DETAIL: M6: 0004 
DBG(48572770)> CPU DETAIL: Transfer to T 
DBG(48572772)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572773)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48572773)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48572774)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48572776)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572777)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48572778)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572779)> CPU DETAIL: Result: 0060699906030000 
DBG(48572780)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48572782)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572783)> CPU DETAIL: M6: 0005 
DBG(48572784)> CPU DETAIL: Transfer to T 
DBG(48572786)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572787)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48572787)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48572788)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48572790)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572791)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48572792)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572793)> CPU DETAIL: Result: 0060699906040000 
DBG(48572794)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48572796)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572797)> CPU DETAIL: M6: 0006 
DBG(48572798)> CPU DETAIL: Transfer to T 
DBG(48572800)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572801)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48572801)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48572802)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48572804)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572805)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48572806)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572807)> CPU DETAIL: Result: 0060699906050000 
DBG(48572808)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48572810)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572811)> CPU DETAIL: M6: 0007 
DBG(48572812)> CPU DETAIL: Transfer to T 
DBG(48572814)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572815)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48572815)> CPU DETAIL: Read R 1006: 0000000231010000 
DBG(48572816)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48572818)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572819)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48572820)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572821)> CPU DETAIL: Result: 0060699906060000 
DBG(48572822)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48572824)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572825)> CPU DETAIL: M6: 0008 
DBG(48572826)> CPU DETAIL: Transfer to T 
DBG(48572828)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572829)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48572829)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48572830)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48572832)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572833)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48572834)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572835)> CPU DETAIL: Result: 0060699906070000 
DBG(48572836)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48572838)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572839)> CPU DETAIL: M6: 0009 
DBG(48572840)> CPU DETAIL: Transfer to T 
DBG(48572842)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572843)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48572843)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48572844)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48572846)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572847)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48572848)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572849)> CPU DETAIL: Result: 0060699906080000 
DBG(48572850)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48572852)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572853)> CPU DETAIL: M6: 0010 
DBG(48572854)> CPU DETAIL: Transfer to T 
DBG(48572856)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572857)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48572857)> CPU DETAIL: Read R 1009: 0000000231020000 
DBG(48572858)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48572860)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572861)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48572862)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572863)> CPU DETAIL: Result: 0060699906090000 
DBG(48572864)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48572866)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572867)> CPU DETAIL: M6: 0011 
DBG(48572868)> CPU DETAIL: Transfer to T 
DBG(48572870)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572871)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48572871)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48572872)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48572874)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572875)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48572876)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572877)> CPU DETAIL: Result: 0060699906100000 
DBG(48572878)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48572880)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572881)> CPU DETAIL: M6: 0012 
DBG(48572882)> CPU DETAIL: Transfer to T 
DBG(48572884)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572885)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48572885)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48572886)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48572888)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48572889)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48572890)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48572891)> CPU DETAIL: Result: 0060699906110000 
DBG(48572892)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48572894)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48572895)> CPU DETAIL: M6: 0013 
DBG(48572898)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48572899)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48572900)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48572902)> CPU CMD: Exec 0169: 00 60 1646 0169 0141   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48572903)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48572904)> CPU DETAIL: Transfer to T 
DBG(48572904)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48572906)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48572907)> CPU DETAIL: Read R 1614: 0000000000000052 
DBG(48572908)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48572909)> CPU DETAIL: Result: 0000000000000039 
DBG(48572912)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48572913)> CPU DETAIL: REG1: 0000000000000039
DBG(48572913)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48572915)> CPU CMD: Exec 0149: 00 60 1018 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48572916)> CPU DETAIL: Read R 1018: 3334444455660101 
DBG(48572917)> CPU DETAIL: Write 1616: 3334444455660101 
DBG(48572919)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48572920)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48572920)> CPU DETAIL: Read R 1012: 0130000000121112 
DBG(48572921)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48572922)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48572924)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48572925)> CPU DETAIL: Read R 1616: 3334444455660101 
DBG(48572926)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48572927)> CPU DETAIL: Result: 0000000000000100 
DBG(48572928)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48572929)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48572931)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48572932)> CPU DETAIL: Read R 1616: 3334444455660101 
DBG(48572933)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48572934)> CPU DETAIL: Result: 0000000000000001 
DBG(48572935)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48572937)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48572938)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48572939)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48572940)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48572941)> CPU DETAIL: Transfer to T 
DBG(48572943)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48572944)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48572945)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572946)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48572946)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572947)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572948)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48572949)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48572951)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48572952)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48572953)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48572954)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48572954)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48572955)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48572956)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48572957)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48572959)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48572960)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572961)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48572964)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48572965)> CPU DETAIL: Read R 0149: 0060101816160000 
DBG(48572966)> CPU DETAIL: Result: 0060103116160000 
DBG(48572967)> CPU DETAIL: Write 0149: 0060103116160000 
DBG(48572969)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48572970)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48572971)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572972)> CPU DETAIL: Result: 0000000000000003 
DBG(48572973)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48572975)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48572976)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48572977)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48572978)> CPU DETAIL: Result: 0000000000000003 
DBG(48572979)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48572981)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48572982)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572983)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48572984)> CPU DETAIL: Result: 0000000000000026 
DBG(48572985)> CPU DETAIL: Write 1615: 0000000000000026 
DBG(48572987)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48572988)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48572989)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48572992)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48572993)> CPU DETAIL: Read R 0167: 0658000100130165 
DBG(48572994)> CPU DETAIL: Result: 0658000100260165 
DBG(48572995)> CPU DETAIL: Write 0167: 0658000100260165 
DBG(48572997)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48572998)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48572998)> CPU DETAIL: Read R 1012: 0130000000121112 
DBG(48572999)> CPU DETAIL: Write 0598: 0130000000121112 
DBG(48573001)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573002)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48573003)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573004)> CPU DETAIL: Result: 0060699905990000 
DBG(48573005)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48573007)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573008)> CPU DETAIL: M6: 0014 
DBG(48573009)> CPU DETAIL: Transfer to T 
DBG(48573011)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573012)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48573012)> CPU DETAIL: Read R 1013: 0000000231010000 
DBG(48573013)> CPU DETAIL: Write 0599: 0000000231010000 
DBG(48573015)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573016)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48573017)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573018)> CPU DETAIL: Result: 0060699906000000 
DBG(48573019)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48573021)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573022)> CPU DETAIL: M6: 0015 
DBG(48573023)> CPU DETAIL: Transfer to T 
DBG(48573025)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573026)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48573026)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48573027)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48573029)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573030)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48573031)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573032)> CPU DETAIL: Result: 0060699906010000 
DBG(48573033)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48573035)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573036)> CPU DETAIL: M6: 0016 
DBG(48573037)> CPU DETAIL: Transfer to T 
DBG(48573039)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573040)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48573040)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(48573041)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48573043)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573044)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48573045)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573046)> CPU DETAIL: Result: 0060699906020000 
DBG(48573047)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48573049)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573050)> CPU DETAIL: M6: 0017 
DBG(48573051)> CPU DETAIL: Transfer to T 
DBG(48573053)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573054)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48573054)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(48573055)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48573057)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573058)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48573059)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573060)> CPU DETAIL: Result: 0060699906030000 
DBG(48573061)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48573063)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573064)> CPU DETAIL: M6: 0018 
DBG(48573065)> CPU DETAIL: Transfer to T 
DBG(48573067)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573068)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48573068)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48573069)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48573071)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573072)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48573073)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573074)> CPU DETAIL: Result: 0060699906040000 
DBG(48573075)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48573077)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573078)> CPU DETAIL: M6: 0019 
DBG(48573079)> CPU DETAIL: Transfer to T 
DBG(48573081)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573082)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48573082)> CPU DETAIL: Read R 1018: 3334444455660101 
DBG(48573083)> CPU DETAIL: Write 0604: 3334444455660101 
DBG(48573085)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573086)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48573087)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573088)> CPU DETAIL: Result: 0060699906050000 
DBG(48573089)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48573091)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573092)> CPU DETAIL: M6: 0020 
DBG(48573093)> CPU DETAIL: Transfer to T 
DBG(48573095)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573096)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48573096)> CPU DETAIL: Read R 1019: 0000000231000000 
DBG(48573097)> CPU DETAIL: Write 0605: 0000000231000000 
DBG(48573099)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573100)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48573101)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573102)> CPU DETAIL: Result: 0060699906060000 
DBG(48573103)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48573105)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573106)> CPU DETAIL: M6: 0021 
DBG(48573107)> CPU DETAIL: Transfer to T 
DBG(48573109)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573110)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48573110)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48573111)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48573113)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573114)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48573115)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573116)> CPU DETAIL: Result: 0060699906070000 
DBG(48573117)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48573119)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573120)> CPU DETAIL: M6: 0022 
DBG(48573121)> CPU DETAIL: Transfer to T 
DBG(48573123)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573124)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48573124)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(48573125)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48573127)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573128)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48573129)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573130)> CPU DETAIL: Result: 0060699906080000 
DBG(48573131)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48573133)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573134)> CPU DETAIL: M6: 0023 
DBG(48573135)> CPU DETAIL: Transfer to T 
DBG(48573137)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573138)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48573138)> CPU DETAIL: Read R 1022: 0000000231030000 
DBG(48573139)> CPU DETAIL: Write 0608: 0000000231030000 
DBG(48573141)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573142)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48573143)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573144)> CPU DETAIL: Result: 0060699906090000 
DBG(48573145)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48573147)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573148)> CPU DETAIL: M6: 0024 
DBG(48573149)> CPU DETAIL: Transfer to T 
DBG(48573151)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573152)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48573152)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48573153)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48573155)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573156)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48573157)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573158)> CPU DETAIL: Result: 0060699906100000 
DBG(48573159)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48573161)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573162)> CPU DETAIL: M6: 0025 
DBG(48573163)> CPU DETAIL: Transfer to T 
DBG(48573165)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573166)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48573166)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48573167)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48573169)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573170)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48573171)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573172)> CPU DETAIL: Result: 0060699906110000 
DBG(48573173)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48573175)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573176)> CPU DETAIL: M6: 0026 
DBG(48573179)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48573180)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48573181)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48573183)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48573186)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48573187)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48573188)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48573191)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48573192)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48573193)> CPU DETAIL: Result: 0000000700000000 
DBG(48573196)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48573197)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48573198)> CPU DETAIL: Result: 0042440416550000 
DBG(48573199)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48573201)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48573202)> CPU DETAIL: Read R 0599: 0000000231010000 
DBG(48573203)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573204)> CPU DETAIL: Result: 0000000231010000 
DBG(48573205)> CPU DETAIL: Write 1620: 0000000231010000 
DBG(48573207)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48573208)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573208)> CPU DETAIL: Read R 0414: 0000000231010000 
DBG(48573209)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573210)> CPU DETAIL: Result: 0000000231010000 
DBG(48573213)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48573214)> CPU DETAIL: Read S 1620: 0000000231010000 
DBG(48573215)> CPU DETAIL: Result: 0000000000000000 
DBG(48573218)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48573219)> CPU DETAIL: REG1: 0000000000000000
DBG(48573219)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48573221)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48573222)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48573223)> CPU DETAIL: Transfer to T 
DBG(48573223)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48573225)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48573226)> CPU DETAIL: Read R 0605: 0000000231000000 
DBG(48573227)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573228)> CPU DETAIL: Result: 0000000231000000 
DBG(48573229)> CPU DETAIL: Write 1620: 0000000231000000 
DBG(48573231)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48573232)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573232)> CPU DETAIL: Read R 0408: 0000000231000000 
DBG(48573233)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573234)> CPU DETAIL: Result: 0000000231000000 
DBG(48573237)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48573238)> CPU DETAIL: Read R 1620: 0000000231000000 
DBG(48573239)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48573240)> CPU DETAIL: Transfer to T 
DBG(48573242)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48573243)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48573244)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48573246)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48573247)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48573248)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48573250)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48573251)> CPU DETAIL: Read R 0599: 0000000231010000 
DBG(48573252)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48573253)> CPU DETAIL: Result: 0100000231010000 
DBG(48573254)> CPU DETAIL: Write 0599: 0100000231010000 
DBG(48573256)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48573257)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48573258)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48573260)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48573261)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48573262)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48573263)> CPU DETAIL: Result: 0000000000000100 
DBG(48573264)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48573267)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48573268)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48573269)> CPU DETAIL: Result: 0000000000000000 
DBG(48573272)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48573273)> CPU DETAIL: REG1: 0000000000000000
DBG(48573273)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48573275)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48573276)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48573277)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48573279)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48573280)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48573281)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48573283)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48573284)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48573285)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48573286)> CPU DETAIL: Result: 0000000000000100 
DBG(48573287)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48573290)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48573291)> CPU DETAIL: Read R 0599: 0100000231010000 
DBG(48573292)> CPU DETAIL: Result: 0000000231010000 
DBG(48573293)> CPU DETAIL: Write 0599: 0000000231010000 
DBG(48573295)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48573296)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48573297)> CPU DETAIL: Read S 1626: 0000000000000010 
DBG(48573298)> CPU DETAIL: Result: 0000000000000023 
DBG(48573301)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48573302)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48573303)> CPU DETAIL: Result: 0000000000000177 
DBG(48573306)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48573307)> CPU DETAIL: REG1: 0000000000000177
DBG(48573307)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48573309)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48573310)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48573311)> CPU DETAIL: Transfer to T 
DBG(48573311)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48573313)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48573314)> CPU DETAIL: M4: 0010 
DBG(48573315)> CPU DETAIL: M6: 0026 
DBG(48573316)> CPU DETAIL: Clear M8
DBG(48573316)> CPU DETAIL: M8: 0000 
DBG(48573319)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48573320)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48573321)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48573324)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48573325)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48573326)> CPU DETAIL: Result: 0858000100130296 
DBG(48573327)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48573329)> CPU CMD: Exec 0296: 00 60 8598 0808 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573330)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48573330)> CPU DETAIL: Read R 0598: 0130000000121112 
DBG(48573331)> CPU DETAIL: Write 0808: 0130000000121112 
DBG(48573333)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573334)> CPU DETAIL: Read R 0296: 0060859808080000 
DBG(48573335)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573336)> CPU DETAIL: Result: 0060859808090000 
DBG(48573337)> CPU DETAIL: Write 0296: 0060859808090000 
DBG(48573339)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573340)> CPU DETAIL: Read R 1626: 0000000000000010 
DBG(48573341)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573342)> CPU DETAIL: Result: 0000000000000011 
DBG(48573343)> CPU DETAIL: Write 1626: 0000000000000011 
DBG(48573345)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573346)> CPU DETAIL: M8: 0001 
DBG(48573347)> CPU DETAIL: Transfer to T 
DBG(48573349)> CPU CMD: Exec 0296: 00 60 8598 0809 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573350)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48573350)> CPU DETAIL: Read R 0599: 0000000231010000 
DBG(48573351)> CPU DETAIL: Write 0809: 0000000231010000 
DBG(48573353)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573354)> CPU DETAIL: Read R 0296: 0060859808090000 
DBG(48573355)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573356)> CPU DETAIL: Result: 0060859808100000 
DBG(48573357)> CPU DETAIL: Write 0296: 0060859808100000 
DBG(48573359)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573360)> CPU DETAIL: Read R 1626: 0000000000000011 
DBG(48573361)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573362)> CPU DETAIL: Result: 0000000000000012 
DBG(48573363)> CPU DETAIL: Write 1626: 0000000000000012 
DBG(48573365)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573366)> CPU DETAIL: M8: 0002 
DBG(48573367)> CPU DETAIL: Transfer to T 
DBG(48573369)> CPU CMD: Exec 0296: 00 60 8598 0810 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573370)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48573370)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48573371)> CPU DETAIL: Write 0810: 0000000000000000 
DBG(48573373)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573374)> CPU DETAIL: Read R 0296: 0060859808100000 
DBG(48573375)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573376)> CPU DETAIL: Result: 0060859808110000 
DBG(48573377)> CPU DETAIL: Write 0296: 0060859808110000 
DBG(48573379)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573380)> CPU DETAIL: Read R 1626: 0000000000000012 
DBG(48573381)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573382)> CPU DETAIL: Result: 0000000000000013 
DBG(48573383)> CPU DETAIL: Write 1626: 0000000000000013 
DBG(48573385)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573386)> CPU DETAIL: M8: 0003 
DBG(48573387)> CPU DETAIL: Transfer to T 
DBG(48573389)> CPU CMD: Exec 0296: 00 60 8598 0811 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573390)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48573390)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48573391)> CPU DETAIL: Write 0811: 0000000000000000 
DBG(48573393)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573394)> CPU DETAIL: Read R 0296: 0060859808110000 
DBG(48573395)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573396)> CPU DETAIL: Result: 0060859808120000 
DBG(48573397)> CPU DETAIL: Write 0296: 0060859808120000 
DBG(48573399)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573400)> CPU DETAIL: Read R 1626: 0000000000000013 
DBG(48573401)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573402)> CPU DETAIL: Result: 0000000000000014 
DBG(48573403)> CPU DETAIL: Write 1626: 0000000000000014 
DBG(48573405)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573406)> CPU DETAIL: M8: 0004 
DBG(48573407)> CPU DETAIL: Transfer to T 
DBG(48573409)> CPU CMD: Exec 0296: 00 60 8598 0812 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573410)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48573410)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48573411)> CPU DETAIL: Write 0812: 0000000000000000 
DBG(48573413)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573414)> CPU DETAIL: Read R 0296: 0060859808120000 
DBG(48573415)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573416)> CPU DETAIL: Result: 0060859808130000 
DBG(48573417)> CPU DETAIL: Write 0296: 0060859808130000 
DBG(48573419)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573420)> CPU DETAIL: Read R 1626: 0000000000000014 
DBG(48573421)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573422)> CPU DETAIL: Result: 0000000000000015 
DBG(48573423)> CPU DETAIL: Write 1626: 0000000000000015 
DBG(48573425)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573426)> CPU DETAIL: M8: 0005 
DBG(48573427)> CPU DETAIL: Transfer to T 
DBG(48573429)> CPU CMD: Exec 0296: 00 60 8598 0813 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573430)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48573430)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48573431)> CPU DETAIL: Write 0813: 0000000000000000 
DBG(48573433)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573434)> CPU DETAIL: Read R 0296: 0060859808130000 
DBG(48573435)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573436)> CPU DETAIL: Result: 0060859808140000 
DBG(48573437)> CPU DETAIL: Write 0296: 0060859808140000 
DBG(48573439)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573440)> CPU DETAIL: Read R 1626: 0000000000000015 
DBG(48573441)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573442)> CPU DETAIL: Result: 0000000000000016 
DBG(48573443)> CPU DETAIL: Write 1626: 0000000000000016 
DBG(48573445)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573446)> CPU DETAIL: M8: 0006 
DBG(48573447)> CPU DETAIL: Transfer to T 
DBG(48573449)> CPU CMD: Exec 0296: 00 60 8598 0814 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573450)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48573450)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48573451)> CPU DETAIL: Write 0814: 3334444455660101 
DBG(48573453)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573454)> CPU DETAIL: Read R 0296: 0060859808140000 
DBG(48573455)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573456)> CPU DETAIL: Result: 0060859808150000 
DBG(48573457)> CPU DETAIL: Write 0296: 0060859808150000 
DBG(48573459)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573460)> CPU DETAIL: Read R 1626: 0000000000000016 
DBG(48573461)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573462)> CPU DETAIL: Result: 0000000000000017 
DBG(48573463)> CPU DETAIL: Write 1626: 0000000000000017 
DBG(48573465)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573466)> CPU DETAIL: M8: 0007 
DBG(48573467)> CPU DETAIL: Transfer to T 
DBG(48573469)> CPU CMD: Exec 0296: 00 60 8598 0815 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573470)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48573470)> CPU DETAIL: Read R 0605: 0000000231000000 
DBG(48573471)> CPU DETAIL: Write 0815: 0000000231000000 
DBG(48573473)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573474)> CPU DETAIL: Read R 0296: 0060859808150000 
DBG(48573475)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573476)> CPU DETAIL: Result: 0060859808160000 
DBG(48573477)> CPU DETAIL: Write 0296: 0060859808160000 
DBG(48573479)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573480)> CPU DETAIL: Read R 1626: 0000000000000017 
DBG(48573481)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573482)> CPU DETAIL: Result: 0000000000000018 
DBG(48573483)> CPU DETAIL: Write 1626: 0000000000000018 
DBG(48573485)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573486)> CPU DETAIL: M8: 0008 
DBG(48573487)> CPU DETAIL: Transfer to T 
DBG(48573489)> CPU CMD: Exec 0296: 00 60 8598 0816 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573490)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48573490)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48573491)> CPU DETAIL: Write 0816: 0000000000000000 
DBG(48573493)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573494)> CPU DETAIL: Read R 0296: 0060859808160000 
DBG(48573495)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573496)> CPU DETAIL: Result: 0060859808170000 
DBG(48573497)> CPU DETAIL: Write 0296: 0060859808170000 
DBG(48573499)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573500)> CPU DETAIL: Read R 1626: 0000000000000018 
DBG(48573501)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573502)> CPU DETAIL: Result: 0000000000000019 
DBG(48573503)> CPU DETAIL: Write 1626: 0000000000000019 
DBG(48573505)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573506)> CPU DETAIL: M8: 0009 
DBG(48573507)> CPU DETAIL: Transfer to T 
DBG(48573509)> CPU CMD: Exec 0296: 00 60 8598 0817 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573510)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48573510)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48573511)> CPU DETAIL: Write 0817: 0000000000000000 
DBG(48573513)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573514)> CPU DETAIL: Read R 0296: 0060859808170000 
DBG(48573515)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573516)> CPU DETAIL: Result: 0060859808180000 
DBG(48573517)> CPU DETAIL: Write 0296: 0060859808180000 
DBG(48573519)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573520)> CPU DETAIL: Read R 1626: 0000000000000019 
DBG(48573521)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573522)> CPU DETAIL: Result: 0000000000000020 
DBG(48573523)> CPU DETAIL: Write 1626: 0000000000000020 
DBG(48573525)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573526)> CPU DETAIL: M8: 0010 
DBG(48573527)> CPU DETAIL: Transfer to T 
DBG(48573529)> CPU CMD: Exec 0296: 00 60 8598 0818 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573530)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48573530)> CPU DETAIL: Read R 0608: 0000000231030000 
DBG(48573531)> CPU DETAIL: Write 0818: 0000000231030000 
DBG(48573533)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573534)> CPU DETAIL: Read R 0296: 0060859808180000 
DBG(48573535)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573536)> CPU DETAIL: Result: 0060859808190000 
DBG(48573537)> CPU DETAIL: Write 0296: 0060859808190000 
DBG(48573539)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573540)> CPU DETAIL: Read R 1626: 0000000000000020 
DBG(48573541)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573542)> CPU DETAIL: Result: 0000000000000021 
DBG(48573543)> CPU DETAIL: Write 1626: 0000000000000021 
DBG(48573545)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573546)> CPU DETAIL: M8: 0011 
DBG(48573547)> CPU DETAIL: Transfer to T 
DBG(48573549)> CPU CMD: Exec 0296: 00 60 8598 0819 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573550)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48573550)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48573551)> CPU DETAIL: Write 0819: 0000000000000000 
DBG(48573553)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573554)> CPU DETAIL: Read R 0296: 0060859808190000 
DBG(48573555)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573556)> CPU DETAIL: Result: 0060859808200000 
DBG(48573557)> CPU DETAIL: Write 0296: 0060859808200000 
DBG(48573559)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573560)> CPU DETAIL: Read R 1626: 0000000000000021 
DBG(48573561)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573562)> CPU DETAIL: Result: 0000000000000022 
DBG(48573563)> CPU DETAIL: Write 1626: 0000000000000022 
DBG(48573565)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573566)> CPU DETAIL: M8: 0012 
DBG(48573567)> CPU DETAIL: Transfer to T 
DBG(48573569)> CPU CMD: Exec 0296: 00 60 8598 0820 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48573570)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48573570)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48573571)> CPU DETAIL: Write 0820: 0000000000000000 
DBG(48573573)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48573574)> CPU DETAIL: Read R 0296: 0060859808200000 
DBG(48573575)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573576)> CPU DETAIL: Result: 0060859808210000 
DBG(48573577)> CPU DETAIL: Write 0296: 0060859808210000 
DBG(48573579)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48573580)> CPU DETAIL: Read R 1626: 0000000000000022 
DBG(48573581)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48573582)> CPU DETAIL: Result: 0000000000000023 
DBG(48573583)> CPU DETAIL: Write 1626: 0000000000000023 
DBG(48573585)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48573586)> CPU DETAIL: M8: 0013 
DBG(48573589)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48573592)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48573593)> CPU DETAIL: Transfer to T 
DBG(48573595)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48573596)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48573597)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48573600)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48573601)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573601)> CPU DETAIL: Read R 0408: 0000000231000000 
DBG(48573602)> CPU DETAIL: Result: 0001000231000000 
DBG(48573603)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573603)> CPU DETAIL: Write 0408: 0001000231000000 
DBG(48573605)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48573606)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573606)> CPU DETAIL: Read R 0408: 0001000231000000 
DBG(48573607)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48573608)> CPU DETAIL: Result: 0001000000000000 
DBG(48573609)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48573610)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48573612)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48573613)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573613)> CPU DETAIL: Read R 0413: 3333444455660002 
DBG(48573614)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48573615)> CPU DETAIL: Result: 0000000000000002 
DBG(48573618)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48573619)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48573620)> CPU DETAIL: Result: 0000000000000001 
DBG(48573623)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48573624)> CPU DETAIL: REG1: 0000000000000001
DBG(48573624)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48573626)> CPU CMD: Exec 0249: 00 40 1672 1644 1672   (1672) = +3 to point to next successor   
DBG(48573627)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48573628)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48573629)> CPU DETAIL: Result: 0000001000000000 
DBG(48573630)> CPU DETAIL: Write 1672: 0000001000000000 
DBG(48573632)> CPU CMD: Exec 0250: 00 60 0000 0000 0141   goto 0141 read event from tape 1 input block   
DBG(48573633)> CPU DETAIL: Transfer to T 
DBG(48573635)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48573636)> CPU DETAIL: Read R 1614: 0000000000000052 
DBG(48573637)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48573638)> CPU DETAIL: Result: 0000000000000026 
DBG(48573641)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48573642)> CPU DETAIL: REG1: 0000000000000026
DBG(48573642)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48573644)> CPU CMD: Exec 0149: 00 60 1031 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48573645)> CPU DETAIL: Read R 1031: 3335444455660101 
DBG(48573646)> CPU DETAIL: Write 1616: 3335444455660101 
DBG(48573648)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48573649)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48573649)> CPU DETAIL: Read R 1025: 0130000000121113 
DBG(48573650)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48573651)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48573653)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48573654)> CPU DETAIL: Read R 1616: 3335444455660101 
DBG(48573655)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48573656)> CPU DETAIL: Result: 0000000000000100 
DBG(48573657)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48573658)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48573660)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48573661)> CPU DETAIL: Read R 1616: 3335444455660101 
DBG(48573662)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48573663)> CPU DETAIL: Result: 0000000000000001 
DBG(48573664)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48573666)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48573667)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48573668)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48573669)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48573670)> CPU DETAIL: Transfer to T 
DBG(48573672)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48573673)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48573674)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48573675)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48573675)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48573676)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48573677)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48573678)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48573680)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48573681)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48573682)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48573683)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48573683)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48573684)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48573685)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48573686)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48573688)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48573689)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48573690)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48573693)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48573694)> CPU DETAIL: Read R 0149: 0060103116160000 
DBG(48573695)> CPU DETAIL: Result: 0060104416160000 
DBG(48573696)> CPU DETAIL: Write 0149: 0060104416160000 
DBG(48573698)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48573699)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48573700)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48573701)> CPU DETAIL: Result: 0000000000000003 
DBG(48573702)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48573704)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48573705)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48573706)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48573707)> CPU DETAIL: Result: 0000000000000003 
DBG(48573708)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48573710)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48573711)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48573712)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48573713)> CPU DETAIL: Result: 0000000000000039 
DBG(48573714)> CPU DETAIL: Write 1615: 0000000000000039 
DBG(48573716)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48573717)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48573718)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48573721)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48573722)> CPU DETAIL: Read R 0167: 0658000100260165 
DBG(48573723)> CPU DETAIL: Result: 0658000100390165 
DBG(48573724)> CPU DETAIL: Write 0167: 0658000100390165 
DBG(48573726)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573727)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48573727)> CPU DETAIL: Read R 1025: 0130000000121113 
DBG(48573728)> CPU DETAIL: Write 0598: 0130000000121113 
DBG(48573730)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573731)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48573732)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573733)> CPU DETAIL: Result: 0060699905990000 
DBG(48573734)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48573736)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573737)> CPU DETAIL: M6: 0027 
DBG(48573738)> CPU DETAIL: Transfer to T 
DBG(48573740)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573741)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48573741)> CPU DETAIL: Read R 1026: 0000000231020003 
DBG(48573742)> CPU DETAIL: Write 0599: 0000000231020003 
DBG(48573744)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573745)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48573746)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573747)> CPU DETAIL: Result: 0060699906000000 
DBG(48573748)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48573750)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573751)> CPU DETAIL: M6: 0028 
DBG(48573752)> CPU DETAIL: Transfer to T 
DBG(48573754)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573755)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48573755)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48573756)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48573758)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573759)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48573760)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573761)> CPU DETAIL: Result: 0060699906010000 
DBG(48573762)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48573764)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573765)> CPU DETAIL: M6: 0029 
DBG(48573766)> CPU DETAIL: Transfer to T 
DBG(48573768)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573769)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48573769)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(48573770)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48573772)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573773)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48573774)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573775)> CPU DETAIL: Result: 0060699906020000 
DBG(48573776)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48573778)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573779)> CPU DETAIL: M6: 0030 
DBG(48573780)> CPU DETAIL: Transfer to T 
DBG(48573782)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573783)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48573783)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(48573784)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48573786)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573787)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48573788)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573789)> CPU DETAIL: Result: 0060699906030000 
DBG(48573790)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48573792)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573793)> CPU DETAIL: M6: 0031 
DBG(48573794)> CPU DETAIL: Transfer to T 
DBG(48573796)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573797)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48573797)> CPU DETAIL: Read R 1030: 0000000000000000 
DBG(48573798)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48573800)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573801)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48573802)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573803)> CPU DETAIL: Result: 0060699906040000 
DBG(48573804)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48573806)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573807)> CPU DETAIL: M6: 0032 
DBG(48573808)> CPU DETAIL: Transfer to T 
DBG(48573810)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573811)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48573811)> CPU DETAIL: Read R 1031: 3335444455660101 
DBG(48573812)> CPU DETAIL: Write 0604: 3335444455660101 
DBG(48573814)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573815)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48573816)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573817)> CPU DETAIL: Result: 0060699906050000 
DBG(48573818)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48573820)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573821)> CPU DETAIL: M6: 0033 
DBG(48573822)> CPU DETAIL: Transfer to T 
DBG(48573824)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573825)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48573825)> CPU DETAIL: Read R 1032: 0000000231000000 
DBG(48573826)> CPU DETAIL: Write 0605: 0000000231000000 
DBG(48573828)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573829)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48573830)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573831)> CPU DETAIL: Result: 0060699906060000 
DBG(48573832)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48573834)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573835)> CPU DETAIL: M6: 0034 
DBG(48573836)> CPU DETAIL: Transfer to T 
DBG(48573838)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573839)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48573839)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(48573840)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48573842)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573843)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48573844)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573845)> CPU DETAIL: Result: 0060699906070000 
DBG(48573846)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48573848)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573849)> CPU DETAIL: M6: 0035 
DBG(48573850)> CPU DETAIL: Transfer to T 
DBG(48573852)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573853)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48573853)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(48573854)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48573856)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573857)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48573858)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573859)> CPU DETAIL: Result: 0060699906080000 
DBG(48573860)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48573862)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573863)> CPU DETAIL: M6: 0036 
DBG(48573864)> CPU DETAIL: Transfer to T 
DBG(48573866)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573867)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48573867)> CPU DETAIL: Read R 1035: 0000000231030000 
DBG(48573868)> CPU DETAIL: Write 0608: 0000000231030000 
DBG(48573870)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573871)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48573872)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573873)> CPU DETAIL: Result: 0060699906090000 
DBG(48573874)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48573876)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573877)> CPU DETAIL: M6: 0037 
DBG(48573878)> CPU DETAIL: Transfer to T 
DBG(48573880)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573881)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48573881)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(48573882)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48573884)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573885)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48573886)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573887)> CPU DETAIL: Result: 0060699906100000 
DBG(48573888)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48573890)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573891)> CPU DETAIL: M6: 0038 
DBG(48573892)> CPU DETAIL: Transfer to T 
DBG(48573894)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48573895)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48573895)> CPU DETAIL: Read R 1037: 0000000000000000 
DBG(48573896)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48573898)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48573899)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48573900)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48573901)> CPU DETAIL: Result: 0060699906110000 
DBG(48573902)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48573904)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48573905)> CPU DETAIL: M6: 0039 
DBG(48573908)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48573909)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48573910)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48573912)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48573915)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48573916)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48573917)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48573920)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48573921)> CPU DETAIL: Read R 1672: 0000001000000000 
DBG(48573922)> CPU DETAIL: Result: 0000001000000000 
DBG(48573925)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48573926)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48573927)> CPU DETAIL: Result: 0042440716550000 
DBG(48573928)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48573930)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48573931)> CPU DETAIL: Read R 0599: 0000000231020003 
DBG(48573932)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573933)> CPU DETAIL: Result: 0000000231020000 
DBG(48573934)> CPU DETAIL: Write 1620: 0000000231020000 
DBG(48573936)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48573937)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573937)> CPU DETAIL: Read R 0417: 0000000231020000 
DBG(48573938)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573939)> CPU DETAIL: Result: 0000000231020000 
DBG(48573942)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48573943)> CPU DETAIL: Read S 1620: 0000000231020000 
DBG(48573944)> CPU DETAIL: Result: 0000000000000000 
DBG(48573947)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48573948)> CPU DETAIL: REG1: 0000000000000000
DBG(48573948)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48573950)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48573951)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48573952)> CPU DETAIL: Transfer to T 
DBG(48573952)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48573954)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48573955)> CPU DETAIL: Read R 0605: 0000000231000000 
DBG(48573956)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573957)> CPU DETAIL: Result: 0000000231000000 
DBG(48573958)> CPU DETAIL: Write 1620: 0000000231000000 
DBG(48573960)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48573961)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48573961)> CPU DETAIL: Read R 0408: 0001000231000000 
DBG(48573962)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48573963)> CPU DETAIL: Result: 0000000231000000 
DBG(48573966)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48573967)> CPU DETAIL: Read R 1620: 0000000231000000 
DBG(48573968)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48573969)> CPU DETAIL: Transfer to T 
DBG(48573971)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48573972)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48573973)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48573975)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48573976)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48573977)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48573979)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48573980)> CPU DETAIL: Read R 0599: 0000000231020003 
DBG(48573981)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48573982)> CPU DETAIL: Result: 0100000231020003 
DBG(48573983)> CPU DETAIL: Write 0599: 0100000231020003 
DBG(48573985)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48573986)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48573987)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48573989)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48573990)> CPU DETAIL: Read R 0604: 3335444455660101 
DBG(48573991)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48573992)> CPU DETAIL: Result: 0000000000000100 
DBG(48573993)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48573996)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48573997)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48573998)> CPU DETAIL: Result: 0000000000000000 
DBG(48574001)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48574002)> CPU DETAIL: REG1: 0000000000000000
DBG(48574002)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48574004)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48574005)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48574006)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48574008)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48574009)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48574010)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48574012)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48574013)> CPU DETAIL: Read R 0604: 3335444455660101 
DBG(48574014)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48574015)> CPU DETAIL: Result: 0000000000000100 
DBG(48574016)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48574019)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48574020)> CPU DETAIL: Read R 0599: 0100000231020003 
DBG(48574021)> CPU DETAIL: Result: 0000000231020003 
DBG(48574022)> CPU DETAIL: Write 0599: 0000000231020003 
DBG(48574024)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48574025)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48574026)> CPU DETAIL: Read S 1626: 0000000000000023 
DBG(48574027)> CPU DETAIL: Result: 0000000000000036 
DBG(48574030)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48574031)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48574032)> CPU DETAIL: Result: 0000000000000164 
DBG(48574035)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48574036)> CPU DETAIL: REG1: 0000000000000164
DBG(48574036)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48574038)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48574039)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48574040)> CPU DETAIL: Transfer to T 
DBG(48574040)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48574042)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48574043)> CPU DETAIL: M4: 0010 
DBG(48574044)> CPU DETAIL: M6: 0039 
DBG(48574045)> CPU DETAIL: Clear M8
DBG(48574045)> CPU DETAIL: M8: 0000 
DBG(48574048)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48574049)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48574050)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48574053)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48574054)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48574055)> CPU DETAIL: Result: 0858000100130296 
DBG(48574056)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48574058)> CPU CMD: Exec 0296: 00 60 8598 0821 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574059)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48574059)> CPU DETAIL: Read R 0598: 0130000000121113 
DBG(48574060)> CPU DETAIL: Write 0821: 0130000000121113 
DBG(48574062)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574063)> CPU DETAIL: Read R 0296: 0060859808210000 
DBG(48574064)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574065)> CPU DETAIL: Result: 0060859808220000 
DBG(48574066)> CPU DETAIL: Write 0296: 0060859808220000 
DBG(48574068)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574069)> CPU DETAIL: Read R 1626: 0000000000000023 
DBG(48574070)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574071)> CPU DETAIL: Result: 0000000000000024 
DBG(48574072)> CPU DETAIL: Write 1626: 0000000000000024 
DBG(48574074)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574075)> CPU DETAIL: M8: 0001 
DBG(48574076)> CPU DETAIL: Transfer to T 
DBG(48574078)> CPU CMD: Exec 0296: 00 60 8598 0822 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574079)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48574079)> CPU DETAIL: Read R 0599: 0000000231020003 
DBG(48574080)> CPU DETAIL: Write 0822: 0000000231020003 
DBG(48574082)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574083)> CPU DETAIL: Read R 0296: 0060859808220000 
DBG(48574084)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574085)> CPU DETAIL: Result: 0060859808230000 
DBG(48574086)> CPU DETAIL: Write 0296: 0060859808230000 
DBG(48574088)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574089)> CPU DETAIL: Read R 1626: 0000000000000024 
DBG(48574090)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574091)> CPU DETAIL: Result: 0000000000000025 
DBG(48574092)> CPU DETAIL: Write 1626: 0000000000000025 
DBG(48574094)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574095)> CPU DETAIL: M8: 0002 
DBG(48574096)> CPU DETAIL: Transfer to T 
DBG(48574098)> CPU CMD: Exec 0296: 00 60 8598 0823 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574099)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48574099)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48574100)> CPU DETAIL: Write 0823: 0000000000000000 
DBG(48574102)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574103)> CPU DETAIL: Read R 0296: 0060859808230000 
DBG(48574104)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574105)> CPU DETAIL: Result: 0060859808240000 
DBG(48574106)> CPU DETAIL: Write 0296: 0060859808240000 
DBG(48574108)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574109)> CPU DETAIL: Read R 1626: 0000000000000025 
DBG(48574110)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574111)> CPU DETAIL: Result: 0000000000000026 
DBG(48574112)> CPU DETAIL: Write 1626: 0000000000000026 
DBG(48574114)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574115)> CPU DETAIL: M8: 0003 
DBG(48574116)> CPU DETAIL: Transfer to T 
DBG(48574118)> CPU CMD: Exec 0296: 00 60 8598 0824 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574119)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48574119)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48574120)> CPU DETAIL: Write 0824: 0000000000000000 
DBG(48574122)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574123)> CPU DETAIL: Read R 0296: 0060859808240000 
DBG(48574124)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574125)> CPU DETAIL: Result: 0060859808250000 
DBG(48574126)> CPU DETAIL: Write 0296: 0060859808250000 
DBG(48574128)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574129)> CPU DETAIL: Read R 1626: 0000000000000026 
DBG(48574130)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574131)> CPU DETAIL: Result: 0000000000000027 
DBG(48574132)> CPU DETAIL: Write 1626: 0000000000000027 
DBG(48574134)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574135)> CPU DETAIL: M8: 0004 
DBG(48574136)> CPU DETAIL: Transfer to T 
DBG(48574138)> CPU CMD: Exec 0296: 00 60 8598 0825 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574139)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48574139)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48574140)> CPU DETAIL: Write 0825: 0000000000000000 
DBG(48574142)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574143)> CPU DETAIL: Read R 0296: 0060859808250000 
DBG(48574144)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574145)> CPU DETAIL: Result: 0060859808260000 
DBG(48574146)> CPU DETAIL: Write 0296: 0060859808260000 
DBG(48574148)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574149)> CPU DETAIL: Read R 1626: 0000000000000027 
DBG(48574150)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574151)> CPU DETAIL: Result: 0000000000000028 
DBG(48574152)> CPU DETAIL: Write 1626: 0000000000000028 
DBG(48574154)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574155)> CPU DETAIL: M8: 0005 
DBG(48574156)> CPU DETAIL: Transfer to T 
DBG(48574158)> CPU CMD: Exec 0296: 00 60 8598 0826 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574159)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48574159)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48574160)> CPU DETAIL: Write 0826: 0000000000000000 
DBG(48574162)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574163)> CPU DETAIL: Read R 0296: 0060859808260000 
DBG(48574164)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574165)> CPU DETAIL: Result: 0060859808270000 
DBG(48574166)> CPU DETAIL: Write 0296: 0060859808270000 
DBG(48574168)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574169)> CPU DETAIL: Read R 1626: 0000000000000028 
DBG(48574170)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574171)> CPU DETAIL: Result: 0000000000000029 
DBG(48574172)> CPU DETAIL: Write 1626: 0000000000000029 
DBG(48574174)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574175)> CPU DETAIL: M8: 0006 
DBG(48574176)> CPU DETAIL: Transfer to T 
DBG(48574178)> CPU CMD: Exec 0296: 00 60 8598 0827 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574179)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48574179)> CPU DETAIL: Read R 0604: 3335444455660101 
DBG(48574180)> CPU DETAIL: Write 0827: 3335444455660101 
DBG(48574182)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574183)> CPU DETAIL: Read R 0296: 0060859808270000 
DBG(48574184)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574185)> CPU DETAIL: Result: 0060859808280000 
DBG(48574186)> CPU DETAIL: Write 0296: 0060859808280000 
DBG(48574188)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574189)> CPU DETAIL: Read R 1626: 0000000000000029 
DBG(48574190)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574191)> CPU DETAIL: Result: 0000000000000030 
DBG(48574192)> CPU DETAIL: Write 1626: 0000000000000030 
DBG(48574194)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574195)> CPU DETAIL: M8: 0007 
DBG(48574196)> CPU DETAIL: Transfer to T 
DBG(48574198)> CPU CMD: Exec 0296: 00 60 8598 0828 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574199)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48574199)> CPU DETAIL: Read R 0605: 0000000231000000 
DBG(48574200)> CPU DETAIL: Write 0828: 0000000231000000 
DBG(48574202)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574203)> CPU DETAIL: Read R 0296: 0060859808280000 
DBG(48574204)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574205)> CPU DETAIL: Result: 0060859808290000 
DBG(48574206)> CPU DETAIL: Write 0296: 0060859808290000 
DBG(48574208)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574209)> CPU DETAIL: Read R 1626: 0000000000000030 
DBG(48574210)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574211)> CPU DETAIL: Result: 0000000000000031 
DBG(48574212)> CPU DETAIL: Write 1626: 0000000000000031 
DBG(48574214)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574215)> CPU DETAIL: M8: 0008 
DBG(48574216)> CPU DETAIL: Transfer to T 
DBG(48574218)> CPU CMD: Exec 0296: 00 60 8598 0829 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574219)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48574219)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48574220)> CPU DETAIL: Write 0829: 0000000000000000 
DBG(48574222)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574223)> CPU DETAIL: Read R 0296: 0060859808290000 
DBG(48574224)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574225)> CPU DETAIL: Result: 0060859808300000 
DBG(48574226)> CPU DETAIL: Write 0296: 0060859808300000 
DBG(48574228)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574229)> CPU DETAIL: Read R 1626: 0000000000000031 
DBG(48574230)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574231)> CPU DETAIL: Result: 0000000000000032 
DBG(48574232)> CPU DETAIL: Write 1626: 0000000000000032 
DBG(48574234)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574235)> CPU DETAIL: M8: 0009 
DBG(48574236)> CPU DETAIL: Transfer to T 
DBG(48574238)> CPU CMD: Exec 0296: 00 60 8598 0830 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574239)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48574239)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48574240)> CPU DETAIL: Write 0830: 0000000000000000 
DBG(48574242)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574243)> CPU DETAIL: Read R 0296: 0060859808300000 
DBG(48574244)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574245)> CPU DETAIL: Result: 0060859808310000 
DBG(48574246)> CPU DETAIL: Write 0296: 0060859808310000 
DBG(48574248)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574249)> CPU DETAIL: Read R 1626: 0000000000000032 
DBG(48574250)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574251)> CPU DETAIL: Result: 0000000000000033 
DBG(48574252)> CPU DETAIL: Write 1626: 0000000000000033 
DBG(48574254)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574255)> CPU DETAIL: M8: 0010 
DBG(48574256)> CPU DETAIL: Transfer to T 
DBG(48574258)> CPU CMD: Exec 0296: 00 60 8598 0831 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574259)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48574259)> CPU DETAIL: Read R 0608: 0000000231030000 
DBG(48574260)> CPU DETAIL: Write 0831: 0000000231030000 
DBG(48574262)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574263)> CPU DETAIL: Read R 0296: 0060859808310000 
DBG(48574264)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574265)> CPU DETAIL: Result: 0060859808320000 
DBG(48574266)> CPU DETAIL: Write 0296: 0060859808320000 
DBG(48574268)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574269)> CPU DETAIL: Read R 1626: 0000000000000033 
DBG(48574270)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574271)> CPU DETAIL: Result: 0000000000000034 
DBG(48574272)> CPU DETAIL: Write 1626: 0000000000000034 
DBG(48574274)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574275)> CPU DETAIL: M8: 0011 
DBG(48574276)> CPU DETAIL: Transfer to T 
DBG(48574278)> CPU CMD: Exec 0296: 00 60 8598 0832 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574279)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48574279)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48574280)> CPU DETAIL: Write 0832: 0000000000000000 
DBG(48574282)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574283)> CPU DETAIL: Read R 0296: 0060859808320000 
DBG(48574284)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574285)> CPU DETAIL: Result: 0060859808330000 
DBG(48574286)> CPU DETAIL: Write 0296: 0060859808330000 
DBG(48574288)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574289)> CPU DETAIL: Read R 1626: 0000000000000034 
DBG(48574290)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574291)> CPU DETAIL: Result: 0000000000000035 
DBG(48574292)> CPU DETAIL: Write 1626: 0000000000000035 
DBG(48574294)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574295)> CPU DETAIL: M8: 0012 
DBG(48574296)> CPU DETAIL: Transfer to T 
DBG(48574298)> CPU CMD: Exec 0296: 00 60 8598 0833 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48574299)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48574299)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48574300)> CPU DETAIL: Write 0833: 0000000000000000 
DBG(48574302)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48574303)> CPU DETAIL: Read R 0296: 0060859808330000 
DBG(48574304)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574305)> CPU DETAIL: Result: 0060859808340000 
DBG(48574306)> CPU DETAIL: Write 0296: 0060859808340000 
DBG(48574308)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48574309)> CPU DETAIL: Read R 1626: 0000000000000035 
DBG(48574310)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574311)> CPU DETAIL: Result: 0000000000000036 
DBG(48574312)> CPU DETAIL: Write 1626: 0000000000000036 
DBG(48574314)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48574315)> CPU DETAIL: M8: 0013 
DBG(48574318)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48574321)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48574322)> CPU DETAIL: Transfer to T 
DBG(48574324)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48574325)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48574326)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48574329)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48574330)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574330)> CPU DETAIL: Read R 0408: 0001000231000000 
DBG(48574331)> CPU DETAIL: Result: 0002000231000000 
DBG(48574332)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574332)> CPU DETAIL: Write 0408: 0002000231000000 
DBG(48574334)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48574335)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574335)> CPU DETAIL: Read R 0408: 0002000231000000 
DBG(48574336)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48574337)> CPU DETAIL: Result: 0002000000000000 
DBG(48574338)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000002 
DBG(48574339)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48574341)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48574342)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574342)> CPU DETAIL: Read R 0413: 3333444455660002 
DBG(48574343)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48574344)> CPU DETAIL: Result: 0000000000000002 
DBG(48574347)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48574348)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48574349)> CPU DETAIL: Result: 0000000000000000 
DBG(48574352)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48574353)> CPU DETAIL: REG1: 0000000000000000
DBG(48574353)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48574355)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48574356)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48574357)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48574358)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48574360)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48574361)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574361)> CPU DETAIL: Read R 0413: 3333444455660002 
DBG(48574362)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48574363)> CPU DETAIL: Result: 0000000000000002 
DBG(48574364)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(48574367)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48574368)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574368)> CPU DETAIL: Read R 0408: 0002000231000000 
DBG(48574369)> CPU DETAIL: Result: 0000000231000000 
DBG(48574370)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574370)> CPU DETAIL: Write 0408: 0000000231000000 
DBG(48574372)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48574373)> CPU DETAIL: Read R 1625: 0000000000000010 
DBG(48574374)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48574375)> CPU DETAIL: Result: 0000000000000023 
DBG(48574378)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48574379)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48574380)> CPU DETAIL: Result: 0000000000000177 
DBG(48574383)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48574384)> CPU DETAIL: REG1: 0000000000000177
DBG(48574384)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48574386)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48574387)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48574388)> CPU DETAIL: Transfer to T 
DBG(48574388)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48574390)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48574391)> CPU DETAIL: M4: 0010 
DBG(48574392)> CPU DETAIL: M6: 0039 
DBG(48574393)> CPU DETAIL: Clear M8
DBG(48574393)> CPU DETAIL: M8: 0000 
DBG(48574396)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48574397)> CPU DETAIL: Read R 1612: 0000000000000001 
DBG(48574398)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574399)> CPU DETAIL: Result: 0000000000000002 
DBG(48574400)> CPU DETAIL: Write 1612: 0000000000000002 
DBG(48574402)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48574403)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48574404)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48574407)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48574408)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48574409)> CPU DETAIL: Result: 0858000100130266 
DBG(48574410)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48574412)> CPU CMD: Exec 0266: 00 60 4397 1411 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574413)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48574413)> CPU DETAIL: Read R 0407: 0130000000121111 
DBG(48574414)> CPU DETAIL: Write 1411: 0130000000121111 
DBG(48574416)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574417)> CPU DETAIL: Read R 0266: 0060439714110000 
DBG(48574418)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574419)> CPU DETAIL: Result: 0060439714120000 
DBG(48574420)> CPU DETAIL: Write 0266: 0060439714120000 
DBG(48574422)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574423)> CPU DETAIL: Read R 1625: 0000000000000010 
DBG(48574424)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574425)> CPU DETAIL: Result: 0000000000000011 
DBG(48574426)> CPU DETAIL: Write 1625: 0000000000000011 
DBG(48574428)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574429)> CPU DETAIL: M4: 0011 
DBG(48574430)> CPU DETAIL: M6: 0039 
DBG(48574431)> CPU DETAIL: M8: 0000 
DBG(48574434)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574435)> CPU DETAIL: M8: 0001 
DBG(48574436)> CPU DETAIL: Transfer to T 
DBG(48574438)> CPU CMD: Exec 0266: 00 60 4397 1412 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574439)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48574439)> CPU DETAIL: Read R 0408: 0000000231000000 
DBG(48574440)> CPU DETAIL: Write 1412: 0000000231000000 
DBG(48574442)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574443)> CPU DETAIL: Read R 0266: 0060439714120000 
DBG(48574444)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574445)> CPU DETAIL: Result: 0060439714130000 
DBG(48574446)> CPU DETAIL: Write 0266: 0060439714130000 
DBG(48574448)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574449)> CPU DETAIL: Read R 1625: 0000000000000011 
DBG(48574450)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574451)> CPU DETAIL: Result: 0000000000000012 
DBG(48574452)> CPU DETAIL: Write 1625: 0000000000000012 
DBG(48574454)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574455)> CPU DETAIL: M4: 0012 
DBG(48574456)> CPU DETAIL: M6: 0039 
DBG(48574457)> CPU DETAIL: M8: 0001 
DBG(48574460)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574461)> CPU DETAIL: M8: 0002 
DBG(48574462)> CPU DETAIL: Transfer to T 
DBG(48574464)> CPU CMD: Exec 0266: 00 60 4397 1413 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574465)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48574465)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48574466)> CPU DETAIL: Write 1413: 0000000000000000 
DBG(48574468)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574469)> CPU DETAIL: Read R 0266: 0060439714130000 
DBG(48574470)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574471)> CPU DETAIL: Result: 0060439714140000 
DBG(48574472)> CPU DETAIL: Write 0266: 0060439714140000 
DBG(48574474)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574475)> CPU DETAIL: Read R 1625: 0000000000000012 
DBG(48574476)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574477)> CPU DETAIL: Result: 0000000000000013 
DBG(48574478)> CPU DETAIL: Write 1625: 0000000000000013 
DBG(48574480)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574481)> CPU DETAIL: M4: 0013 
DBG(48574482)> CPU DETAIL: M6: 0039 
DBG(48574483)> CPU DETAIL: M8: 0002 
DBG(48574486)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574487)> CPU DETAIL: M8: 0003 
DBG(48574488)> CPU DETAIL: Transfer to T 
DBG(48574490)> CPU CMD: Exec 0266: 00 60 4397 1414 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574491)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(48574491)> CPU DETAIL: Read R 0410: 0000000000000000 
DBG(48574492)> CPU DETAIL: Write 1414: 0000000000000000 
DBG(48574494)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574495)> CPU DETAIL: Read R 0266: 0060439714140000 
DBG(48574496)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574497)> CPU DETAIL: Result: 0060439714150000 
DBG(48574498)> CPU DETAIL: Write 0266: 0060439714150000 
DBG(48574500)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574501)> CPU DETAIL: Read R 1625: 0000000000000013 
DBG(48574502)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574503)> CPU DETAIL: Result: 0000000000000014 
DBG(48574504)> CPU DETAIL: Write 1625: 0000000000000014 
DBG(48574506)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574507)> CPU DETAIL: M4: 0014 
DBG(48574508)> CPU DETAIL: M6: 0039 
DBG(48574509)> CPU DETAIL: M8: 0003 
DBG(48574512)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574513)> CPU DETAIL: M8: 0004 
DBG(48574514)> CPU DETAIL: Transfer to T 
DBG(48574516)> CPU CMD: Exec 0266: 00 60 4397 1415 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574517)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(48574517)> CPU DETAIL: Read R 0411: 0000000000000000 
DBG(48574518)> CPU DETAIL: Write 1415: 0000000000000000 
DBG(48574520)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574521)> CPU DETAIL: Read R 0266: 0060439714150000 
DBG(48574522)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574523)> CPU DETAIL: Result: 0060439714160000 
DBG(48574524)> CPU DETAIL: Write 0266: 0060439714160000 
DBG(48574526)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574527)> CPU DETAIL: Read R 1625: 0000000000000014 
DBG(48574528)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574529)> CPU DETAIL: Result: 0000000000000015 
DBG(48574530)> CPU DETAIL: Write 1625: 0000000000000015 
DBG(48574532)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574533)> CPU DETAIL: M4: 0015 
DBG(48574534)> CPU DETAIL: M6: 0039 
DBG(48574535)> CPU DETAIL: M8: 0004 
DBG(48574538)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574539)> CPU DETAIL: M8: 0005 
DBG(48574540)> CPU DETAIL: Transfer to T 
DBG(48574542)> CPU CMD: Exec 0266: 00 60 4397 1416 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574543)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(48574543)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48574544)> CPU DETAIL: Write 1416: 0000000000000000 
DBG(48574546)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574547)> CPU DETAIL: Read R 0266: 0060439714160000 
DBG(48574548)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574549)> CPU DETAIL: Result: 0060439714170000 
DBG(48574550)> CPU DETAIL: Write 0266: 0060439714170000 
DBG(48574552)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574553)> CPU DETAIL: Read R 1625: 0000000000000015 
DBG(48574554)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574555)> CPU DETAIL: Result: 0000000000000016 
DBG(48574556)> CPU DETAIL: Write 1625: 0000000000000016 
DBG(48574558)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574559)> CPU DETAIL: M4: 0016 
DBG(48574560)> CPU DETAIL: M6: 0039 
DBG(48574561)> CPU DETAIL: M8: 0005 
DBG(48574564)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574565)> CPU DETAIL: M8: 0006 
DBG(48574566)> CPU DETAIL: Transfer to T 
DBG(48574568)> CPU CMD: Exec 0266: 00 60 4397 1417 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574569)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(48574569)> CPU DETAIL: Read R 0413: 3333444455660002 
DBG(48574570)> CPU DETAIL: Write 1417: 3333444455660002 
DBG(48574572)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574573)> CPU DETAIL: Read R 0266: 0060439714170000 
DBG(48574574)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574575)> CPU DETAIL: Result: 0060439714180000 
DBG(48574576)> CPU DETAIL: Write 0266: 0060439714180000 
DBG(48574578)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574579)> CPU DETAIL: Read R 1625: 0000000000000016 
DBG(48574580)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574581)> CPU DETAIL: Result: 0000000000000017 
DBG(48574582)> CPU DETAIL: Write 1625: 0000000000000017 
DBG(48574584)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574585)> CPU DETAIL: M4: 0017 
DBG(48574586)> CPU DETAIL: M6: 0039 
DBG(48574587)> CPU DETAIL: M8: 0006 
DBG(48574590)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574591)> CPU DETAIL: M8: 0007 
DBG(48574592)> CPU DETAIL: Transfer to T 
DBG(48574594)> CPU CMD: Exec 0266: 00 60 4397 1418 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574595)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(48574595)> CPU DETAIL: Read R 0414: 0000000231010000 
DBG(48574596)> CPU DETAIL: Write 1418: 0000000231010000 
DBG(48574598)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574599)> CPU DETAIL: Read R 0266: 0060439714180000 
DBG(48574600)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574601)> CPU DETAIL: Result: 0060439714190000 
DBG(48574602)> CPU DETAIL: Write 0266: 0060439714190000 
DBG(48574604)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574605)> CPU DETAIL: Read R 1625: 0000000000000017 
DBG(48574606)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574607)> CPU DETAIL: Result: 0000000000000018 
DBG(48574608)> CPU DETAIL: Write 1625: 0000000000000018 
DBG(48574610)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574611)> CPU DETAIL: M4: 0018 
DBG(48574612)> CPU DETAIL: M6: 0039 
DBG(48574613)> CPU DETAIL: M8: 0007 
DBG(48574616)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574617)> CPU DETAIL: M8: 0008 
DBG(48574618)> CPU DETAIL: Transfer to T 
DBG(48574620)> CPU CMD: Exec 0266: 00 60 4397 1419 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574621)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(48574621)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48574622)> CPU DETAIL: Write 1419: 0000000000000000 
DBG(48574624)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574625)> CPU DETAIL: Read R 0266: 0060439714190000 
DBG(48574626)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574627)> CPU DETAIL: Result: 0060439714200000 
DBG(48574628)> CPU DETAIL: Write 0266: 0060439714200000 
DBG(48574630)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574631)> CPU DETAIL: Read R 1625: 0000000000000018 
DBG(48574632)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574633)> CPU DETAIL: Result: 0000000000000019 
DBG(48574634)> CPU DETAIL: Write 1625: 0000000000000019 
DBG(48574636)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574637)> CPU DETAIL: M4: 0019 
DBG(48574638)> CPU DETAIL: M6: 0039 
DBG(48574639)> CPU DETAIL: M8: 0008 
DBG(48574642)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574643)> CPU DETAIL: M8: 0009 
DBG(48574644)> CPU DETAIL: Transfer to T 
DBG(48574646)> CPU CMD: Exec 0266: 00 60 4397 1420 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574647)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(48574647)> CPU DETAIL: Read R 0416: 0000000000000000 
DBG(48574648)> CPU DETAIL: Write 1420: 0000000000000000 
DBG(48574650)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574651)> CPU DETAIL: Read R 0266: 0060439714200000 
DBG(48574652)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574653)> CPU DETAIL: Result: 0060439714210000 
DBG(48574654)> CPU DETAIL: Write 0266: 0060439714210000 
DBG(48574656)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574657)> CPU DETAIL: Read R 1625: 0000000000000019 
DBG(48574658)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574659)> CPU DETAIL: Result: 0000000000000020 
DBG(48574660)> CPU DETAIL: Write 1625: 0000000000000020 
DBG(48574662)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574663)> CPU DETAIL: M4: 0020 
DBG(48574664)> CPU DETAIL: M6: 0039 
DBG(48574665)> CPU DETAIL: M8: 0009 
DBG(48574668)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574669)> CPU DETAIL: M8: 0010 
DBG(48574670)> CPU DETAIL: Transfer to T 
DBG(48574672)> CPU CMD: Exec 0266: 00 60 4397 1421 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574673)> CPU DETAIL: M4 Address Modifier: 0020 
DBG(48574673)> CPU DETAIL: Read R 0417: 0000000231020000 
DBG(48574674)> CPU DETAIL: Write 1421: 0000000231020000 
DBG(48574676)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574677)> CPU DETAIL: Read R 0266: 0060439714210000 
DBG(48574678)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574679)> CPU DETAIL: Result: 0060439714220000 
DBG(48574680)> CPU DETAIL: Write 0266: 0060439714220000 
DBG(48574682)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574683)> CPU DETAIL: Read R 1625: 0000000000000020 
DBG(48574684)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574685)> CPU DETAIL: Result: 0000000000000021 
DBG(48574686)> CPU DETAIL: Write 1625: 0000000000000021 
DBG(48574688)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574689)> CPU DETAIL: M4: 0021 
DBG(48574690)> CPU DETAIL: M6: 0039 
DBG(48574691)> CPU DETAIL: M8: 0010 
DBG(48574694)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574695)> CPU DETAIL: M8: 0011 
DBG(48574696)> CPU DETAIL: Transfer to T 
DBG(48574698)> CPU CMD: Exec 0266: 00 60 4397 1422 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574699)> CPU DETAIL: M4 Address Modifier: 0021 
DBG(48574699)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48574700)> CPU DETAIL: Write 1422: 0000000000000000 
DBG(48574702)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574703)> CPU DETAIL: Read R 0266: 0060439714220000 
DBG(48574704)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574705)> CPU DETAIL: Result: 0060439714230000 
DBG(48574706)> CPU DETAIL: Write 0266: 0060439714230000 
DBG(48574708)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574709)> CPU DETAIL: Read R 1625: 0000000000000021 
DBG(48574710)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574711)> CPU DETAIL: Result: 0000000000000022 
DBG(48574712)> CPU DETAIL: Write 1625: 0000000000000022 
DBG(48574714)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574715)> CPU DETAIL: M4: 0022 
DBG(48574716)> CPU DETAIL: M6: 0039 
DBG(48574717)> CPU DETAIL: M8: 0011 
DBG(48574720)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574721)> CPU DETAIL: M8: 0012 
DBG(48574722)> CPU DETAIL: Transfer to T 
DBG(48574724)> CPU CMD: Exec 0266: 00 60 4397 1423 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48574725)> CPU DETAIL: M4 Address Modifier: 0022 
DBG(48574725)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48574726)> CPU DETAIL: Write 1423: 0000000000000000 
DBG(48574728)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48574729)> CPU DETAIL: Read R 0266: 0060439714230000 
DBG(48574730)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574731)> CPU DETAIL: Result: 0060439714240000 
DBG(48574732)> CPU DETAIL: Write 0266: 0060439714240000 
DBG(48574734)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48574735)> CPU DETAIL: Read R 1625: 0000000000000022 
DBG(48574736)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48574737)> CPU DETAIL: Result: 0000000000000023 
DBG(48574738)> CPU DETAIL: Write 1625: 0000000000000023 
DBG(48574740)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48574741)> CPU DETAIL: M4: 0023 
DBG(48574742)> CPU DETAIL: M6: 0039 
DBG(48574743)> CPU DETAIL: M8: 0012 
DBG(48574746)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48574747)> CPU DETAIL: M8: 0013 
DBG(48574750)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48574753)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48574754)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48574755)> CPU DETAIL: Transfer to T 
DBG(48574755)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48574757)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48574758)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48574759)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48574760)> CPU DETAIL: Result: 0000000000000036 
DBG(48574763)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48574764)> CPU DETAIL: REG1: 0000000000000036
DBG(48574764)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48574766)> CPU CMD: Exec 0124: 00 60 0426 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48574767)> CPU DETAIL: Read R 0426: 3333444455660002 
DBG(48574768)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48574770)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48574771)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48574771)> CPU DETAIL: Read R 0420: 0130000000131111 
DBG(48574772)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48574773)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48574775)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48574776)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48574777)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48574778)> CPU DETAIL: Result: 0000000000000000 
DBG(48574779)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48574780)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48574782)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48574783)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48574784)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48574785)> CPU DETAIL: Result: 0000000000000002 
DBG(48574786)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48574788)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48574789)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48574790)> CPU DETAIL: Read S 1609: 0000000000000000 
DBG(48574791)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48574794)> CPU CMD: Exec 0129: 00 72 1610 1640 0131   if num successors w7 <> zero goto 0131   
DBG(48574795)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48574796)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48574797)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48574798)> CPU DETAIL: Transfer to T 
DBG(48574800)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48574801)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48574802)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48574803)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48574804)> CPU DETAIL: Transfer to T 
DBG(48574806)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48574807)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48574808)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48574809)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48574809)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48574810)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574811)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574812)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48574814)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48574815)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48574816)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48574817)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48574817)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48574818)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574819)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48574820)> CPU DETAIL: Write 1610: 9600000000000006 
DBG(48574822)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48574823)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48574824)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48574825)> CPU DETAIL: Result: 0000000000000000 
DBG(48574826)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48574828)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48574829)> CPU DETAIL: Read R 1610: 9600000000000006 
DBG(48574830)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48574831)> CPU DETAIL: Result: 0000000000000006 
DBG(48574832)> CPU DETAIL: Write 1610: 0000000000000006 
DBG(48574834)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48574835)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48574836)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48574839)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48574840)> CPU DETAIL: Read R 0124: 0060042616080000 
DBG(48574841)> CPU DETAIL: Result: 0060043916080000 
DBG(48574842)> CPU DETAIL: Write 0124: 0060043916080000 
DBG(48574844)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48574845)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48574846)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48574847)> CPU DETAIL: Result: 0000000000000036 
DBG(48574848)> CPU DETAIL: Write 1606: 0000000000000036 
DBG(48574850)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48574853)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48574854)> CPU DETAIL: Read R 1614: 0000000000000052 
DBG(48574855)> CPU DETAIL: Read S 1615: 0000000000000039 
DBG(48574856)> CPU DETAIL: Result: 0000000000000013 
DBG(48574859)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48574860)> CPU DETAIL: REG1: 0000000000000013
DBG(48574860)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48574862)> CPU CMD: Exec 0149: 00 60 1044 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48574863)> CPU DETAIL: Read R 1044: 3336000000000200 
DBG(48574864)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48574866)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48574867)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48574867)> CPU DETAIL: Read R 1038: 0130000000121114 
DBG(48574868)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48574869)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48574871)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48574872)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48574873)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48574874)> CPU DETAIL: Result: 0000000000000200 
DBG(48574875)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48574876)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48574878)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48574879)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48574880)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48574881)> CPU DETAIL: Result: 0000000000000000 
DBG(48574882)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48574884)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48574885)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48574886)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48574887)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48574888)> CPU DETAIL: Transfer to T 
DBG(48574890)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48574891)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48574892)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48574893)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48574893)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48574894)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574895)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48574896)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48574898)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48574899)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48574900)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48574901)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48574901)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48574902)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574903)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48574904)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48574906)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48574907)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48574908)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48574911)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48574912)> CPU DETAIL: Read R 0149: 0060104416160000 
DBG(48574913)> CPU DETAIL: Result: 0060105716160000 
DBG(48574914)> CPU DETAIL: Write 0149: 0060105716160000 
DBG(48574916)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48574917)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48574918)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48574919)> CPU DETAIL: Result: 0000000000000006 
DBG(48574920)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48574922)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48574923)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48574924)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48574925)> CPU DETAIL: Result: 0000000000000000 
DBG(48574926)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48574928)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48574929)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48574930)> CPU DETAIL: Read S 1615: 0000000000000039 
DBG(48574931)> CPU DETAIL: Result: 0000000000000052 
DBG(48574932)> CPU DETAIL: Write 1615: 0000000000000052 
DBG(48574934)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48574935)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48574936)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48574939)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48574940)> CPU DETAIL: Read R 0167: 0658000100390165 
DBG(48574941)> CPU DETAIL: Result: 0658000100520165 
DBG(48574942)> CPU DETAIL: Write 0167: 0658000100520165 
DBG(48574944)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48574945)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48574945)> CPU DETAIL: Read R 1038: 0130000000121114 
DBG(48574946)> CPU DETAIL: Write 0598: 0130000000121114 
DBG(48574948)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48574949)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48574950)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574951)> CPU DETAIL: Result: 0060699905990000 
DBG(48574952)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48574954)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48574955)> CPU DETAIL: M6: 0040 
DBG(48574956)> CPU DETAIL: Transfer to T 
DBG(48574958)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48574959)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48574959)> CPU DETAIL: Read R 1039: 0000000231030000 
DBG(48574960)> CPU DETAIL: Write 0599: 0000000231030000 
DBG(48574962)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48574963)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48574964)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574965)> CPU DETAIL: Result: 0060699906000000 
DBG(48574966)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48574968)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48574969)> CPU DETAIL: M6: 0041 
DBG(48574970)> CPU DETAIL: Transfer to T 
DBG(48574972)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48574973)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48574973)> CPU DETAIL: Read R 1040: 0000000000000000 
DBG(48574974)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48574976)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48574977)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48574978)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574979)> CPU DETAIL: Result: 0060699906010000 
DBG(48574980)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48574982)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48574983)> CPU DETAIL: M6: 0042 
DBG(48574984)> CPU DETAIL: Transfer to T 
DBG(48574986)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48574987)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48574987)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(48574988)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48574990)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48574991)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48574992)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48574993)> CPU DETAIL: Result: 0060699906020000 
DBG(48574994)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48574996)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48574997)> CPU DETAIL: M6: 0043 
DBG(48574998)> CPU DETAIL: Transfer to T 
DBG(48575000)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575001)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48575001)> CPU DETAIL: Read R 1042: 0000000000000000 
DBG(48575002)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48575004)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575005)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48575006)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575007)> CPU DETAIL: Result: 0060699906030000 
DBG(48575008)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48575010)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575011)> CPU DETAIL: M6: 0044 
DBG(48575012)> CPU DETAIL: Transfer to T 
DBG(48575014)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575015)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48575015)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(48575016)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48575018)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575019)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48575020)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575021)> CPU DETAIL: Result: 0060699906040000 
DBG(48575022)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48575024)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575025)> CPU DETAIL: M6: 0045 
DBG(48575026)> CPU DETAIL: Transfer to T 
DBG(48575028)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575029)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48575029)> CPU DETAIL: Read R 1044: 3336000000000200 
DBG(48575030)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48575032)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575033)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48575034)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575035)> CPU DETAIL: Result: 0060699906050000 
DBG(48575036)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48575038)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575039)> CPU DETAIL: M6: 0046 
DBG(48575040)> CPU DETAIL: Transfer to T 
DBG(48575042)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575043)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48575043)> CPU DETAIL: Read R 1045: 0000000231010000 
DBG(48575044)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48575046)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575047)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48575048)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575049)> CPU DETAIL: Result: 0060699906060000 
DBG(48575050)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48575052)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575053)> CPU DETAIL: M6: 0047 
DBG(48575054)> CPU DETAIL: Transfer to T 
DBG(48575056)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575057)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48575057)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(48575058)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48575060)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575061)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48575062)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575063)> CPU DETAIL: Result: 0060699906070000 
DBG(48575064)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48575066)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575067)> CPU DETAIL: M6: 0048 
DBG(48575068)> CPU DETAIL: Transfer to T 
DBG(48575070)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575071)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48575071)> CPU DETAIL: Read R 1047: 0000000000000000 
DBG(48575072)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48575074)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575075)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48575076)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575077)> CPU DETAIL: Result: 0060699906080000 
DBG(48575078)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48575080)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575081)> CPU DETAIL: M6: 0049 
DBG(48575082)> CPU DETAIL: Transfer to T 
DBG(48575084)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575085)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48575085)> CPU DETAIL: Read R 1048: 0000000231020000 
DBG(48575086)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48575088)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575089)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48575090)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575091)> CPU DETAIL: Result: 0060699906090000 
DBG(48575092)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48575094)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575095)> CPU DETAIL: M6: 0050 
DBG(48575096)> CPU DETAIL: Transfer to T 
DBG(48575098)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575099)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48575099)> CPU DETAIL: Read R 1049: 0000000000000000 
DBG(48575100)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48575102)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575103)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48575104)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575105)> CPU DETAIL: Result: 0060699906100000 
DBG(48575106)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48575108)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575109)> CPU DETAIL: M6: 0051 
DBG(48575110)> CPU DETAIL: Transfer to T 
DBG(48575112)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575113)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48575113)> CPU DETAIL: Read R 1050: 0000000000000000 
DBG(48575114)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48575116)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575117)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48575118)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575119)> CPU DETAIL: Result: 0060699906110000 
DBG(48575120)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48575122)> CPU CMD: Exec 0167: 06 58 0001 0052 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575123)> CPU DETAIL: M6: 0052 
DBG(48575126)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48575127)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48575128)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48575130)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48575133)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48575134)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48575135)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48575138)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48575139)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48575140)> CPU DETAIL: Result: 0000000700000000 
DBG(48575143)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48575144)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48575145)> CPU DETAIL: Result: 0042440416550000 
DBG(48575146)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48575148)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48575149)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48575150)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48575151)> CPU DETAIL: Result: 0000000231030000 
DBG(48575152)> CPU DETAIL: Write 1620: 0000000231030000 
DBG(48575154)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48575155)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48575155)> CPU DETAIL: Read R 0427: 0000000232010000 
DBG(48575156)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48575157)> CPU DETAIL: Result: 0000000232010000 
DBG(48575160)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48575161)> CPU DETAIL: Read S 1620: 0000000231030000 
DBG(48575162)> CPU DETAIL: Result: 0000000000980000 
DBG(48575165)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48575166)> CPU DETAIL: REG1: 0000000000980000
DBG(48575166)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48575168)> CPU CMD: Exec 0177: 00 60 0197 0196 0179   ???, goto 0179   
DBG(48575169)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48575170)> CPU DETAIL: Transfer to T 
DBG(48575170)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48575172)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48575173)> CPU DETAIL: Read R 1611: 0000000000000000 
DBG(48575174)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48575175)> CPU DETAIL: Result: 0000000000000013 
DBG(48575178)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48575179)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48575180)> CPU DETAIL: Result: 0000000000000187 
DBG(48575183)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48575184)> CPU DETAIL: REG1: 0000000000000187
DBG(48575184)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48575186)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48575187)> CPU DETAIL: M4: 0023 
DBG(48575188)> CPU DETAIL: M6: 0052 
DBG(48575189)> CPU DETAIL: Clear M8
DBG(48575189)> CPU DETAIL: M8: 0000 
DBG(48575192)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48575193)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575194)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48575197)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48575198)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48575199)> CPU DETAIL: Result: 0858000100130191 
DBG(48575200)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48575202)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48575203)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48575204)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48575205)> CPU DETAIL: Result: 0000000231030000 
DBG(48575208)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48575209)> CPU DETAIL: Read R 1636: 0000000000000000 
DBG(48575210)> CPU DETAIL: Diff: REG1: 9999999768970000
DBG(48575211)> CPU DETAIL: Transfer to T 
DBG(48575213)> CPU CMD: Exec 0191: 00 60 8598 1200 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575214)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48575214)> CPU DETAIL: Read R 0598: 0130000000121114 
DBG(48575215)> CPU DETAIL: Write 1200: 0130000000121114 
DBG(48575217)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575218)> CPU DETAIL: Read R 0191: 0060859812000000 
DBG(48575219)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575220)> CPU DETAIL: Result: 0060859812010000 
DBG(48575221)> CPU DETAIL: Write 0191: 0060859812010000 
DBG(48575223)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575224)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575225)> CPU DETAIL: Read S 1611: 0000000000000000 
DBG(48575226)> CPU DETAIL: Result: 0000000000000001 
DBG(48575227)> CPU DETAIL: Write 1611: 0000000000000001 
DBG(48575229)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575230)> CPU DETAIL: M8: 0001 
DBG(48575231)> CPU DETAIL: Transfer to T 
DBG(48575233)> CPU CMD: Exec 0191: 00 60 8598 1201 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575234)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48575234)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48575235)> CPU DETAIL: Write 1201: 0000000231030000 
DBG(48575237)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575238)> CPU DETAIL: Read R 0191: 0060859812010000 
DBG(48575239)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575240)> CPU DETAIL: Result: 0060859812020000 
DBG(48575241)> CPU DETAIL: Write 0191: 0060859812020000 
DBG(48575243)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575244)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575245)> CPU DETAIL: Read S 1611: 0000000000000001 
DBG(48575246)> CPU DETAIL: Result: 0000000000000002 
DBG(48575247)> CPU DETAIL: Write 1611: 0000000000000002 
DBG(48575249)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575250)> CPU DETAIL: M8: 0002 
DBG(48575251)> CPU DETAIL: Transfer to T 
DBG(48575253)> CPU CMD: Exec 0191: 00 60 8598 1202 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575254)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48575254)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48575255)> CPU DETAIL: Write 1202: 0000000000000000 
DBG(48575257)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575258)> CPU DETAIL: Read R 0191: 0060859812020000 
DBG(48575259)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575260)> CPU DETAIL: Result: 0060859812030000 
DBG(48575261)> CPU DETAIL: Write 0191: 0060859812030000 
DBG(48575263)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575264)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575265)> CPU DETAIL: Read S 1611: 0000000000000002 
DBG(48575266)> CPU DETAIL: Result: 0000000000000003 
DBG(48575267)> CPU DETAIL: Write 1611: 0000000000000003 
DBG(48575269)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575270)> CPU DETAIL: M8: 0003 
DBG(48575271)> CPU DETAIL: Transfer to T 
DBG(48575273)> CPU CMD: Exec 0191: 00 60 8598 1203 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575274)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48575274)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48575275)> CPU DETAIL: Write 1203: 0000000000000000 
DBG(48575277)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575278)> CPU DETAIL: Read R 0191: 0060859812030000 
DBG(48575279)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575280)> CPU DETAIL: Result: 0060859812040000 
DBG(48575281)> CPU DETAIL: Write 0191: 0060859812040000 
DBG(48575283)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575284)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575285)> CPU DETAIL: Read S 1611: 0000000000000003 
DBG(48575286)> CPU DETAIL: Result: 0000000000000004 
DBG(48575287)> CPU DETAIL: Write 1611: 0000000000000004 
DBG(48575289)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575290)> CPU DETAIL: M8: 0004 
DBG(48575291)> CPU DETAIL: Transfer to T 
DBG(48575293)> CPU CMD: Exec 0191: 00 60 8598 1204 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575294)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48575294)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48575295)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(48575297)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575298)> CPU DETAIL: Read R 0191: 0060859812040000 
DBG(48575299)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575300)> CPU DETAIL: Result: 0060859812050000 
DBG(48575301)> CPU DETAIL: Write 0191: 0060859812050000 
DBG(48575303)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575304)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575305)> CPU DETAIL: Read S 1611: 0000000000000004 
DBG(48575306)> CPU DETAIL: Result: 0000000000000005 
DBG(48575307)> CPU DETAIL: Write 1611: 0000000000000005 
DBG(48575309)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575310)> CPU DETAIL: M8: 0005 
DBG(48575311)> CPU DETAIL: Transfer to T 
DBG(48575313)> CPU CMD: Exec 0191: 00 60 8598 1205 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575314)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48575314)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48575315)> CPU DETAIL: Write 1205: 0000000000000000 
DBG(48575317)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575318)> CPU DETAIL: Read R 0191: 0060859812050000 
DBG(48575319)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575320)> CPU DETAIL: Result: 0060859812060000 
DBG(48575321)> CPU DETAIL: Write 0191: 0060859812060000 
DBG(48575323)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575324)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575325)> CPU DETAIL: Read S 1611: 0000000000000005 
DBG(48575326)> CPU DETAIL: Result: 0000000000000006 
DBG(48575327)> CPU DETAIL: Write 1611: 0000000000000006 
DBG(48575329)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575330)> CPU DETAIL: M8: 0006 
DBG(48575331)> CPU DETAIL: Transfer to T 
DBG(48575333)> CPU CMD: Exec 0191: 00 60 8598 1206 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575334)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48575334)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48575335)> CPU DETAIL: Write 1206: 3336000000000200 
DBG(48575337)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575338)> CPU DETAIL: Read R 0191: 0060859812060000 
DBG(48575339)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575340)> CPU DETAIL: Result: 0060859812070000 
DBG(48575341)> CPU DETAIL: Write 0191: 0060859812070000 
DBG(48575343)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575344)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575345)> CPU DETAIL: Read S 1611: 0000000000000006 
DBG(48575346)> CPU DETAIL: Result: 0000000000000007 
DBG(48575347)> CPU DETAIL: Write 1611: 0000000000000007 
DBG(48575349)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575350)> CPU DETAIL: M8: 0007 
DBG(48575351)> CPU DETAIL: Transfer to T 
DBG(48575353)> CPU CMD: Exec 0191: 00 60 8598 1207 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575354)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48575354)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48575355)> CPU DETAIL: Write 1207: 0000000231010000 
DBG(48575357)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575358)> CPU DETAIL: Read R 0191: 0060859812070000 
DBG(48575359)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575360)> CPU DETAIL: Result: 0060859812080000 
DBG(48575361)> CPU DETAIL: Write 0191: 0060859812080000 
DBG(48575363)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575364)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575365)> CPU DETAIL: Read S 1611: 0000000000000007 
DBG(48575366)> CPU DETAIL: Result: 0000000000000008 
DBG(48575367)> CPU DETAIL: Write 1611: 0000000000000008 
DBG(48575369)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575370)> CPU DETAIL: M8: 0008 
DBG(48575371)> CPU DETAIL: Transfer to T 
DBG(48575373)> CPU CMD: Exec 0191: 00 60 8598 1208 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575374)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48575374)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48575375)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(48575377)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575378)> CPU DETAIL: Read R 0191: 0060859812080000 
DBG(48575379)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575380)> CPU DETAIL: Result: 0060859812090000 
DBG(48575381)> CPU DETAIL: Write 0191: 0060859812090000 
DBG(48575383)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575384)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575385)> CPU DETAIL: Read S 1611: 0000000000000008 
DBG(48575386)> CPU DETAIL: Result: 0000000000000009 
DBG(48575387)> CPU DETAIL: Write 1611: 0000000000000009 
DBG(48575389)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575390)> CPU DETAIL: M8: 0009 
DBG(48575391)> CPU DETAIL: Transfer to T 
DBG(48575393)> CPU CMD: Exec 0191: 00 60 8598 1209 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575394)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48575394)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48575395)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(48575397)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575398)> CPU DETAIL: Read R 0191: 0060859812090000 
DBG(48575399)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575400)> CPU DETAIL: Result: 0060859812100000 
DBG(48575401)> CPU DETAIL: Write 0191: 0060859812100000 
DBG(48575403)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575404)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575405)> CPU DETAIL: Read S 1611: 0000000000000009 
DBG(48575406)> CPU DETAIL: Result: 0000000000000010 
DBG(48575407)> CPU DETAIL: Write 1611: 0000000000000010 
DBG(48575409)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575410)> CPU DETAIL: M8: 0010 
DBG(48575411)> CPU DETAIL: Transfer to T 
DBG(48575413)> CPU CMD: Exec 0191: 00 60 8598 1210 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575414)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48575414)> CPU DETAIL: Read R 0608: 0000000231020000 
DBG(48575415)> CPU DETAIL: Write 1210: 0000000231020000 
DBG(48575417)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575418)> CPU DETAIL: Read R 0191: 0060859812100000 
DBG(48575419)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575420)> CPU DETAIL: Result: 0060859812110000 
DBG(48575421)> CPU DETAIL: Write 0191: 0060859812110000 
DBG(48575423)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575424)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575425)> CPU DETAIL: Read S 1611: 0000000000000010 
DBG(48575426)> CPU DETAIL: Result: 0000000000000011 
DBG(48575427)> CPU DETAIL: Write 1611: 0000000000000011 
DBG(48575429)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575430)> CPU DETAIL: M8: 0011 
DBG(48575431)> CPU DETAIL: Transfer to T 
DBG(48575433)> CPU CMD: Exec 0191: 00 60 8598 1211 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575434)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48575434)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48575435)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(48575437)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575438)> CPU DETAIL: Read R 0191: 0060859812110000 
DBG(48575439)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575440)> CPU DETAIL: Result: 0060859812120000 
DBG(48575441)> CPU DETAIL: Write 0191: 0060859812120000 
DBG(48575443)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575444)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575445)> CPU DETAIL: Read S 1611: 0000000000000011 
DBG(48575446)> CPU DETAIL: Result: 0000000000000012 
DBG(48575447)> CPU DETAIL: Write 1611: 0000000000000012 
DBG(48575449)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575450)> CPU DETAIL: M8: 0012 
DBG(48575451)> CPU DETAIL: Transfer to T 
DBG(48575453)> CPU CMD: Exec 0191: 00 60 8598 1212 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48575454)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48575454)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48575455)> CPU DETAIL: Write 1212: 0000000000000000 
DBG(48575457)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48575458)> CPU DETAIL: Read R 0191: 0060859812120000 
DBG(48575459)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575460)> CPU DETAIL: Result: 0060859812130000 
DBG(48575461)> CPU DETAIL: Write 0191: 0060859812130000 
DBG(48575463)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48575464)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575465)> CPU DETAIL: Read S 1611: 0000000000000012 
DBG(48575466)> CPU DETAIL: Result: 0000000000000013 
DBG(48575467)> CPU DETAIL: Write 1611: 0000000000000013 
DBG(48575469)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48575470)> CPU DETAIL: M8: 0013 
DBG(48575473)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48575474)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48575475)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48575476)> CPU DETAIL: Result: 0000000231030000 
DBG(48575477)> CPU DETAIL: Write 1636: 0000000231030000 
DBG(48575479)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48575480)> CPU DETAIL: Transfer to T 
DBG(48575482)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48575483)> CPU DETAIL: Read R 1614: 0000000000000052 
DBG(48575484)> CPU DETAIL: Read S 1615: 0000000000000052 
DBG(48575485)> CPU DETAIL: Result: 0000000000000000 
DBG(48575488)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48575489)> CPU DETAIL: REG1: 0000000000000000
DBG(48575489)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48575491)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48575492)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48575493)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48575495)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48575496)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48575497)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48575499)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48575500)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48575501)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48575503)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48575504)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48575505)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48575507)> CPU CMD: Exec 0148: 00 60 0000 0000 0105   goto read event block from input tape 01   
DBG(48575508)> CPU DETAIL: Transfer to T 
DBG(48575510)> CPU CMD: Exec 0105: 01 94 0999 0000 0003   read input tape 01 -> (0999 input event block tape 01)    
DBG(48575511)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0003
DBG(48575511)> MT DATA: Tape unit 1: init read
DBG(48575511)> MT DETAIL: Read tape record (740 chars, used 2.95 inches, needs 18 msec) from tape 1
DBG(48575511)> MT DETAIL: Tape record contents: D*0190030103390003C*0130000000131111C*0000000232000000C*00000000000000...
DBG(48575511)> MT EXP: Start Of Block Word: 0190030103390003
DBG(48575511)> MT EXP: Read Tape Block number 0003
DBG(48575511)> MT EXP: Read forward addr 0999 to 0000
DBG(48575511)> MT EXP: Tape to CRT 0999: 0130000000131111 
DBG(48575511)> MT EXP: Tape to CRT 1000: 0000000232000000 
DBG(48575511)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1005: 3333444455660002 
DBG(48575511)> MT EXP: Tape to CRT 1006: 0000000232010000 
DBG(48575511)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1009: 0000000232090000 
DBG(48575511)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1012: 0130000000131112 
DBG(48575511)> MT EXP: Tape to CRT 1013: 0000000232010000 
DBG(48575511)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1018: 3334444455660101 
DBG(48575511)> MT EXP: Tape to CRT 1019: 0000000232000000 
DBG(48575511)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1022: 0000000232090000 
DBG(48575511)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1025: 0130000000131113 
DBG(48575511)> MT EXP: Tape to CRT 1026: 0000000232090000 
DBG(48575511)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1030: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1031: 3336000000000200 
DBG(48575511)> MT EXP: Tape to CRT 1032: 0000000232000000 
DBG(48575511)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1035: 0000000232010000 
DBG(48575511)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(48575511)> MT EXP: Tape to CRT 1037: 0000000000000000 
DBG(48575511)> MT EXP: End Of Block Word: 0190030103390003, data words in block: 39
DBG(48575511)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.06% of medium (10.25 inches)
DBG(48575514)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48575515)> CPU DETAIL: Condition not present 
DBG(48575517)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48575518)> CPU DETAIL: Condition not present 
DBG(48575520)> CPU CMD: Exec 0108: 00 60 0000 1613 0000   REG1 -> (1613) = Start of block      
DBG(48575521)> CPU DETAIL: Write 1613: 0190030103390003 
DBG(48575523)> CPU CMD: Exec 0109: 00 40 0105 1639 0105   incr block num on tape 01 read   
DBG(48575524)> CPU DETAIL: Read R 0105: 0194099900000003 
DBG(48575525)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48575526)> CPU DETAIL: Result: 0194099900000004 
DBG(48575527)> CPU DETAIL: Write 0105: 0194099900000004 
DBG(48575529)> CPU CMD: Exec 0110: 00 60 1653 1621 0000   01 0..0 -> (1621 current input tape)   
DBG(48575530)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48575531)> CPU DETAIL: Write 1621: 0100000000000000 
DBG(48575533)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48575534)> CPU DETAIL: Read R 1613: 0190030103390003 
DBG(48575535)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48575536)> CPU DETAIL: Result: 0000000003390000 
DBG(48575537)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000339 
DBG(48575538)> CPU DETAIL: Write 1604: 0000000000000339 
DBG(48575540)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48575541)> CPU DETAIL: Read R 1613: 0190030103390003 
DBG(48575542)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48575543)> CPU DETAIL: Result: 0000030100000000 
DBG(48575544)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48575547)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48575548)> CPU DETAIL: Read R 1604: 0000000000000339 
DBG(48575549)> CPU DETAIL: Result: 0000000000000038 
DBG(48575550)> CPU DETAIL: Write 1614: 0000000000000038 
DBG(48575552)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48575553)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48575554)> CPU DETAIL: Result: 0000000000000039 
DBG(48575555)> CPU DETAIL: Write 1614: 0000000000000039 
DBG(48575557)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48575558)> CPU DETAIL: M4: 0023 
DBG(48575559)> CPU DETAIL: Clear M6
DBG(48575559)> CPU DETAIL: M6: 0000 
DBG(48575560)> CPU DETAIL: M8: 0013 
DBG(48575563)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48575564)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48575565)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48575567)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48575568)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48575569)> CPU DETAIL: Transfer to T 
DBG(48575569)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48575571)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48575572)> CPU DETAIL: Read R 1614: 0000000000000039 
DBG(48575573)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48575574)> CPU DETAIL: Result: 0000000000000039 
DBG(48575577)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48575578)> CPU DETAIL: REG1: 0000000000000039
DBG(48575578)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48575580)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48575581)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48575582)> CPU DETAIL: Write 1616: 3333444455660002 
DBG(48575584)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48575585)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48575585)> CPU DETAIL: Read R 0999: 0130000000131111 
DBG(48575586)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48575587)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48575589)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48575590)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48575591)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48575592)> CPU DETAIL: Result: 0000000000000000 
DBG(48575593)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48575594)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48575596)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48575597)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48575598)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48575599)> CPU DETAIL: Result: 0000000000000002 
DBG(48575600)> CPU DETAIL: Write 1618: 0000000000000002 
DBG(48575602)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48575603)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48575604)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48575605)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48575608)> CPU CMD: Exec 0154: 00 60 0155 0169 0156   set to skip this event from tape 1 because has no predecessors (so the event 
DBG(48575609)> CPU DETAIL: Read R 0155: 0060164601690141 
DBG(48575610)> CPU DETAIL: Transfer to T 
DBG(48575610)> CPU DETAIL: Write 0169: 0060164601690141 
DBG(48575612)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48575613)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48575614)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48575615)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48575615)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48575616)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48575617)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48575618)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48575620)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48575621)> CPU DETAIL: Read R 1618: 0000000000000002 
DBG(48575622)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48575623)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48575623)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48575624)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48575625)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48575626)> CPU DETAIL: Write 1618: 9600000000000006 
DBG(48575628)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48575629)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575630)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48575633)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48575634)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48575635)> CPU DETAIL: Result: 0060101816160000 
DBG(48575636)> CPU DETAIL: Write 0149: 0060101816160000 
DBG(48575638)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48575639)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48575640)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48575641)> CPU DETAIL: Result: 0000000000000000 
DBG(48575642)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48575644)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48575645)> CPU DETAIL: Read R 1618: 9600000000000006 
DBG(48575646)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48575647)> CPU DETAIL: Result: 0000000000000006 
DBG(48575648)> CPU DETAIL: Write 1618: 0000000000000006 
DBG(48575650)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48575651)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575652)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48575653)> CPU DETAIL: Result: 0000000000000013 
DBG(48575654)> CPU DETAIL: Write 1615: 0000000000000013 
DBG(48575656)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48575657)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575658)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48575661)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48575662)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48575663)> CPU DETAIL: Result: 0658000100130165 
DBG(48575664)> CPU DETAIL: Write 0167: 0658000100130165 
DBG(48575666)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575667)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48575667)> CPU DETAIL: Read R 0999: 0130000000131111 
DBG(48575668)> CPU DETAIL: Write 0598: 0130000000131111 
DBG(48575670)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575671)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48575672)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575673)> CPU DETAIL: Result: 0060699905990000 
DBG(48575674)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48575676)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575677)> CPU DETAIL: M6: 0001 
DBG(48575678)> CPU DETAIL: Transfer to T 
DBG(48575680)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575681)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48575681)> CPU DETAIL: Read R 1000: 0000000232000000 
DBG(48575682)> CPU DETAIL: Write 0599: 0000000232000000 
DBG(48575684)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575685)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48575686)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575687)> CPU DETAIL: Result: 0060699906000000 
DBG(48575688)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48575690)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575691)> CPU DETAIL: M6: 0002 
DBG(48575692)> CPU DETAIL: Transfer to T 
DBG(48575694)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575695)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48575695)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48575696)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48575698)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575699)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48575700)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575701)> CPU DETAIL: Result: 0060699906010000 
DBG(48575702)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48575704)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575705)> CPU DETAIL: M6: 0003 
DBG(48575706)> CPU DETAIL: Transfer to T 
DBG(48575708)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575709)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48575709)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48575710)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48575712)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575713)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48575714)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575715)> CPU DETAIL: Result: 0060699906020000 
DBG(48575716)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48575718)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575719)> CPU DETAIL: M6: 0004 
DBG(48575720)> CPU DETAIL: Transfer to T 
DBG(48575722)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575723)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48575723)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48575724)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48575726)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575727)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48575728)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575729)> CPU DETAIL: Result: 0060699906030000 
DBG(48575730)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48575732)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575733)> CPU DETAIL: M6: 0005 
DBG(48575734)> CPU DETAIL: Transfer to T 
DBG(48575736)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575737)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48575737)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48575738)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48575740)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575741)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48575742)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575743)> CPU DETAIL: Result: 0060699906040000 
DBG(48575744)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48575746)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575747)> CPU DETAIL: M6: 0006 
DBG(48575748)> CPU DETAIL: Transfer to T 
DBG(48575750)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575751)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48575751)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48575752)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48575754)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575755)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48575756)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575757)> CPU DETAIL: Result: 0060699906050000 
DBG(48575758)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48575760)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575761)> CPU DETAIL: M6: 0007 
DBG(48575762)> CPU DETAIL: Transfer to T 
DBG(48575764)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575765)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48575765)> CPU DETAIL: Read R 1006: 0000000232010000 
DBG(48575766)> CPU DETAIL: Write 0605: 0000000232010000 
DBG(48575768)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575769)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48575770)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575771)> CPU DETAIL: Result: 0060699906060000 
DBG(48575772)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48575774)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575775)> CPU DETAIL: M6: 0008 
DBG(48575776)> CPU DETAIL: Transfer to T 
DBG(48575778)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575779)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48575779)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48575780)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48575782)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575783)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48575784)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575785)> CPU DETAIL: Result: 0060699906070000 
DBG(48575786)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48575788)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575789)> CPU DETAIL: M6: 0009 
DBG(48575790)> CPU DETAIL: Transfer to T 
DBG(48575792)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575793)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48575793)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48575794)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48575796)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575797)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48575798)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575799)> CPU DETAIL: Result: 0060699906080000 
DBG(48575800)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48575802)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575803)> CPU DETAIL: M6: 0010 
DBG(48575804)> CPU DETAIL: Transfer to T 
DBG(48575806)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575807)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48575807)> CPU DETAIL: Read R 1009: 0000000232090000 
DBG(48575808)> CPU DETAIL: Write 0608: 0000000232090000 
DBG(48575810)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575811)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48575812)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575813)> CPU DETAIL: Result: 0060699906090000 
DBG(48575814)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48575816)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575817)> CPU DETAIL: M6: 0011 
DBG(48575818)> CPU DETAIL: Transfer to T 
DBG(48575820)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575821)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48575821)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48575822)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48575824)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575825)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48575826)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575827)> CPU DETAIL: Result: 0060699906100000 
DBG(48575828)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48575830)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575831)> CPU DETAIL: M6: 0012 
DBG(48575832)> CPU DETAIL: Transfer to T 
DBG(48575834)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575835)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48575835)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48575836)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48575838)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575839)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48575840)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575841)> CPU DETAIL: Result: 0060699906110000 
DBG(48575842)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48575844)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575845)> CPU DETAIL: M6: 0013 
DBG(48575848)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48575849)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48575850)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48575852)> CPU CMD: Exec 0169: 00 60 1646 0169 0141   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48575853)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48575854)> CPU DETAIL: Transfer to T 
DBG(48575854)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48575856)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48575857)> CPU DETAIL: Read R 1614: 0000000000000039 
DBG(48575858)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48575859)> CPU DETAIL: Result: 0000000000000026 
DBG(48575862)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48575863)> CPU DETAIL: REG1: 0000000000000026
DBG(48575863)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48575865)> CPU CMD: Exec 0149: 00 60 1018 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48575866)> CPU DETAIL: Read R 1018: 3334444455660101 
DBG(48575867)> CPU DETAIL: Write 1616: 3334444455660101 
DBG(48575869)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48575870)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48575870)> CPU DETAIL: Read R 1012: 0130000000131112 
DBG(48575871)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48575872)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48575874)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48575875)> CPU DETAIL: Read R 1616: 3334444455660101 
DBG(48575876)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48575877)> CPU DETAIL: Result: 0000000000000100 
DBG(48575878)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48575879)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48575881)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48575882)> CPU DETAIL: Read R 1616: 3334444455660101 
DBG(48575883)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48575884)> CPU DETAIL: Result: 0000000000000001 
DBG(48575885)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48575887)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48575888)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48575889)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48575890)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48575891)> CPU DETAIL: Transfer to T 
DBG(48575893)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48575894)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48575895)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48575896)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48575896)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48575897)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48575898)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48575899)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48575901)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48575902)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48575903)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48575904)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48575904)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48575905)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48575906)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48575907)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48575909)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48575910)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575911)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48575914)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48575915)> CPU DETAIL: Read R 0149: 0060101816160000 
DBG(48575916)> CPU DETAIL: Result: 0060103116160000 
DBG(48575917)> CPU DETAIL: Write 0149: 0060103116160000 
DBG(48575919)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48575920)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48575921)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48575922)> CPU DETAIL: Result: 0000000000000003 
DBG(48575923)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48575925)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48575926)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48575927)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48575928)> CPU DETAIL: Result: 0000000000000003 
DBG(48575929)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48575931)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48575932)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575933)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48575934)> CPU DETAIL: Result: 0000000000000026 
DBG(48575935)> CPU DETAIL: Write 1615: 0000000000000026 
DBG(48575937)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48575938)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48575939)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48575942)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48575943)> CPU DETAIL: Read R 0167: 0658000100130165 
DBG(48575944)> CPU DETAIL: Result: 0658000100260165 
DBG(48575945)> CPU DETAIL: Write 0167: 0658000100260165 
DBG(48575947)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575948)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48575948)> CPU DETAIL: Read R 1012: 0130000000131112 
DBG(48575949)> CPU DETAIL: Write 0598: 0130000000131112 
DBG(48575951)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575952)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48575953)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575954)> CPU DETAIL: Result: 0060699905990000 
DBG(48575955)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48575957)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575958)> CPU DETAIL: M6: 0014 
DBG(48575959)> CPU DETAIL: Transfer to T 
DBG(48575961)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575962)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48575962)> CPU DETAIL: Read R 1013: 0000000232010000 
DBG(48575963)> CPU DETAIL: Write 0599: 0000000232010000 
DBG(48575965)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575966)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48575967)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575968)> CPU DETAIL: Result: 0060699906000000 
DBG(48575969)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48575971)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575972)> CPU DETAIL: M6: 0015 
DBG(48575973)> CPU DETAIL: Transfer to T 
DBG(48575975)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575976)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48575976)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48575977)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48575979)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575980)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48575981)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575982)> CPU DETAIL: Result: 0060699906010000 
DBG(48575983)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48575985)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48575986)> CPU DETAIL: M6: 0016 
DBG(48575987)> CPU DETAIL: Transfer to T 
DBG(48575989)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48575990)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48575990)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(48575991)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48575993)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48575994)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48575995)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48575996)> CPU DETAIL: Result: 0060699906020000 
DBG(48575997)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48575999)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576000)> CPU DETAIL: M6: 0017 
DBG(48576001)> CPU DETAIL: Transfer to T 
DBG(48576003)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576004)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48576004)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(48576005)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48576007)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576008)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48576009)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576010)> CPU DETAIL: Result: 0060699906030000 
DBG(48576011)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48576013)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576014)> CPU DETAIL: M6: 0018 
DBG(48576015)> CPU DETAIL: Transfer to T 
DBG(48576017)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576018)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48576018)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48576019)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48576021)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576022)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48576023)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576024)> CPU DETAIL: Result: 0060699906040000 
DBG(48576025)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48576027)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576028)> CPU DETAIL: M6: 0019 
DBG(48576029)> CPU DETAIL: Transfer to T 
DBG(48576031)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576032)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48576032)> CPU DETAIL: Read R 1018: 3334444455660101 
DBG(48576033)> CPU DETAIL: Write 0604: 3334444455660101 
DBG(48576035)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576036)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48576037)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576038)> CPU DETAIL: Result: 0060699906050000 
DBG(48576039)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48576041)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576042)> CPU DETAIL: M6: 0020 
DBG(48576043)> CPU DETAIL: Transfer to T 
DBG(48576045)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576046)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48576046)> CPU DETAIL: Read R 1019: 0000000232000000 
DBG(48576047)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48576049)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576050)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48576051)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576052)> CPU DETAIL: Result: 0060699906060000 
DBG(48576053)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48576055)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576056)> CPU DETAIL: M6: 0021 
DBG(48576057)> CPU DETAIL: Transfer to T 
DBG(48576059)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576060)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48576060)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48576061)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48576063)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576064)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48576065)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576066)> CPU DETAIL: Result: 0060699906070000 
DBG(48576067)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48576069)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576070)> CPU DETAIL: M6: 0022 
DBG(48576071)> CPU DETAIL: Transfer to T 
DBG(48576073)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576074)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48576074)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(48576075)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48576077)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576078)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48576079)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576080)> CPU DETAIL: Result: 0060699906080000 
DBG(48576081)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48576083)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576084)> CPU DETAIL: M6: 0023 
DBG(48576085)> CPU DETAIL: Transfer to T 
DBG(48576087)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576088)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48576088)> CPU DETAIL: Read R 1022: 0000000232090000 
DBG(48576089)> CPU DETAIL: Write 0608: 0000000232090000 
DBG(48576091)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576092)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48576093)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576094)> CPU DETAIL: Result: 0060699906090000 
DBG(48576095)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48576097)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576098)> CPU DETAIL: M6: 0024 
DBG(48576099)> CPU DETAIL: Transfer to T 
DBG(48576101)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576102)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48576102)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48576103)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48576105)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576106)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48576107)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576108)> CPU DETAIL: Result: 0060699906100000 
DBG(48576109)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48576111)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576112)> CPU DETAIL: M6: 0025 
DBG(48576113)> CPU DETAIL: Transfer to T 
DBG(48576115)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576116)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48576116)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48576117)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48576119)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576120)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48576121)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576122)> CPU DETAIL: Result: 0060699906110000 
DBG(48576123)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48576125)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576126)> CPU DETAIL: M6: 0026 
DBG(48576129)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48576130)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48576131)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48576133)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48576136)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48576137)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48576138)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48576141)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48576142)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48576143)> CPU DETAIL: Result: 0000000700000000 
DBG(48576146)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48576147)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48576148)> CPU DETAIL: Result: 0042440416550000 
DBG(48576149)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48576151)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48576152)> CPU DETAIL: Read R 0599: 0000000232010000 
DBG(48576153)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576154)> CPU DETAIL: Result: 0000000232010000 
DBG(48576155)> CPU DETAIL: Write 1620: 0000000232010000 
DBG(48576157)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48576158)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576158)> CPU DETAIL: Read R 0427: 0000000232010000 
DBG(48576159)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576160)> CPU DETAIL: Result: 0000000232010000 
DBG(48576163)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48576164)> CPU DETAIL: Read S 1620: 0000000232010000 
DBG(48576165)> CPU DETAIL: Result: 0000000000000000 
DBG(48576168)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48576169)> CPU DETAIL: REG1: 0000000000000000
DBG(48576169)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48576171)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48576172)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48576173)> CPU DETAIL: Transfer to T 
DBG(48576173)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48576175)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48576176)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48576177)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576178)> CPU DETAIL: Result: 0000000232000000 
DBG(48576179)> CPU DETAIL: Write 1620: 0000000232000000 
DBG(48576181)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48576182)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576182)> CPU DETAIL: Read R 0421: 0000000232000000 
DBG(48576183)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576184)> CPU DETAIL: Result: 0000000232000000 
DBG(48576187)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48576188)> CPU DETAIL: Read R 1620: 0000000232000000 
DBG(48576189)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48576190)> CPU DETAIL: Transfer to T 
DBG(48576192)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48576193)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48576194)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48576196)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48576197)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48576198)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48576200)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48576201)> CPU DETAIL: Read R 0599: 0000000232010000 
DBG(48576202)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48576203)> CPU DETAIL: Result: 0100000232010000 
DBG(48576204)> CPU DETAIL: Write 0599: 0100000232010000 
DBG(48576206)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48576207)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48576208)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48576210)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48576211)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48576212)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48576213)> CPU DETAIL: Result: 0000000000000100 
DBG(48576214)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48576217)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48576218)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48576219)> CPU DETAIL: Result: 0000000000000000 
DBG(48576222)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48576223)> CPU DETAIL: REG1: 0000000000000000
DBG(48576223)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48576225)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48576226)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48576227)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48576229)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48576230)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48576231)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48576233)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48576234)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48576235)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48576236)> CPU DETAIL: Result: 0000000000000100 
DBG(48576237)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48576240)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48576241)> CPU DETAIL: Read R 0599: 0100000232010000 
DBG(48576242)> CPU DETAIL: Result: 0000000232010000 
DBG(48576243)> CPU DETAIL: Write 0599: 0000000232010000 
DBG(48576245)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48576246)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48576247)> CPU DETAIL: Read S 1626: 0000000000000036 
DBG(48576248)> CPU DETAIL: Result: 0000000000000049 
DBG(48576251)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48576252)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48576253)> CPU DETAIL: Result: 0000000000000151 
DBG(48576256)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48576257)> CPU DETAIL: REG1: 0000000000000151
DBG(48576257)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48576259)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48576260)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48576261)> CPU DETAIL: Transfer to T 
DBG(48576261)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48576263)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48576264)> CPU DETAIL: M4: 0023 
DBG(48576265)> CPU DETAIL: M6: 0026 
DBG(48576266)> CPU DETAIL: Clear M8
DBG(48576266)> CPU DETAIL: M8: 0000 
DBG(48576269)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48576270)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48576271)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48576274)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48576275)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48576276)> CPU DETAIL: Result: 0858000100130296 
DBG(48576277)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48576279)> CPU CMD: Exec 0296: 00 60 8598 0834 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576280)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48576280)> CPU DETAIL: Read R 0598: 0130000000131112 
DBG(48576281)> CPU DETAIL: Write 0834: 0130000000131112 
DBG(48576283)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576284)> CPU DETAIL: Read R 0296: 0060859808340000 
DBG(48576285)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576286)> CPU DETAIL: Result: 0060859808350000 
DBG(48576287)> CPU DETAIL: Write 0296: 0060859808350000 
DBG(48576289)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576290)> CPU DETAIL: Read R 1626: 0000000000000036 
DBG(48576291)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576292)> CPU DETAIL: Result: 0000000000000037 
DBG(48576293)> CPU DETAIL: Write 1626: 0000000000000037 
DBG(48576295)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576296)> CPU DETAIL: M8: 0001 
DBG(48576297)> CPU DETAIL: Transfer to T 
DBG(48576299)> CPU CMD: Exec 0296: 00 60 8598 0835 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576300)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48576300)> CPU DETAIL: Read R 0599: 0000000232010000 
DBG(48576301)> CPU DETAIL: Write 0835: 0000000232010000 
DBG(48576303)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576304)> CPU DETAIL: Read R 0296: 0060859808350000 
DBG(48576305)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576306)> CPU DETAIL: Result: 0060859808360000 
DBG(48576307)> CPU DETAIL: Write 0296: 0060859808360000 
DBG(48576309)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576310)> CPU DETAIL: Read R 1626: 0000000000000037 
DBG(48576311)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576312)> CPU DETAIL: Result: 0000000000000038 
DBG(48576313)> CPU DETAIL: Write 1626: 0000000000000038 
DBG(48576315)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576316)> CPU DETAIL: M8: 0002 
DBG(48576317)> CPU DETAIL: Transfer to T 
DBG(48576319)> CPU CMD: Exec 0296: 00 60 8598 0836 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576320)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48576320)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48576321)> CPU DETAIL: Write 0836: 0000000000000000 
DBG(48576323)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576324)> CPU DETAIL: Read R 0296: 0060859808360000 
DBG(48576325)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576326)> CPU DETAIL: Result: 0060859808370000 
DBG(48576327)> CPU DETAIL: Write 0296: 0060859808370000 
DBG(48576329)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576330)> CPU DETAIL: Read R 1626: 0000000000000038 
DBG(48576331)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576332)> CPU DETAIL: Result: 0000000000000039 
DBG(48576333)> CPU DETAIL: Write 1626: 0000000000000039 
DBG(48576335)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576336)> CPU DETAIL: M8: 0003 
DBG(48576337)> CPU DETAIL: Transfer to T 
DBG(48576339)> CPU CMD: Exec 0296: 00 60 8598 0837 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576340)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48576340)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48576341)> CPU DETAIL: Write 0837: 0000000000000000 
DBG(48576343)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576344)> CPU DETAIL: Read R 0296: 0060859808370000 
DBG(48576345)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576346)> CPU DETAIL: Result: 0060859808380000 
DBG(48576347)> CPU DETAIL: Write 0296: 0060859808380000 
DBG(48576349)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576350)> CPU DETAIL: Read R 1626: 0000000000000039 
DBG(48576351)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576352)> CPU DETAIL: Result: 0000000000000040 
DBG(48576353)> CPU DETAIL: Write 1626: 0000000000000040 
DBG(48576355)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576356)> CPU DETAIL: M8: 0004 
DBG(48576357)> CPU DETAIL: Transfer to T 
DBG(48576359)> CPU CMD: Exec 0296: 00 60 8598 0838 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576360)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48576360)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48576361)> CPU DETAIL: Write 0838: 0000000000000000 
DBG(48576363)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576364)> CPU DETAIL: Read R 0296: 0060859808380000 
DBG(48576365)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576366)> CPU DETAIL: Result: 0060859808390000 
DBG(48576367)> CPU DETAIL: Write 0296: 0060859808390000 
DBG(48576369)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576370)> CPU DETAIL: Read R 1626: 0000000000000040 
DBG(48576371)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576372)> CPU DETAIL: Result: 0000000000000041 
DBG(48576373)> CPU DETAIL: Write 1626: 0000000000000041 
DBG(48576375)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576376)> CPU DETAIL: M8: 0005 
DBG(48576377)> CPU DETAIL: Transfer to T 
DBG(48576379)> CPU CMD: Exec 0296: 00 60 8598 0839 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576380)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48576380)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48576381)> CPU DETAIL: Write 0839: 0000000000000000 
DBG(48576383)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576384)> CPU DETAIL: Read R 0296: 0060859808390000 
DBG(48576385)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576386)> CPU DETAIL: Result: 0060859808400000 
DBG(48576387)> CPU DETAIL: Write 0296: 0060859808400000 
DBG(48576389)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576390)> CPU DETAIL: Read R 1626: 0000000000000041 
DBG(48576391)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576392)> CPU DETAIL: Result: 0000000000000042 
DBG(48576393)> CPU DETAIL: Write 1626: 0000000000000042 
DBG(48576395)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576396)> CPU DETAIL: M8: 0006 
DBG(48576397)> CPU DETAIL: Transfer to T 
DBG(48576399)> CPU CMD: Exec 0296: 00 60 8598 0840 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576400)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48576400)> CPU DETAIL: Read R 0604: 3334444455660101 
DBG(48576401)> CPU DETAIL: Write 0840: 3334444455660101 
DBG(48576403)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576404)> CPU DETAIL: Read R 0296: 0060859808400000 
DBG(48576405)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576406)> CPU DETAIL: Result: 0060859808410000 
DBG(48576407)> CPU DETAIL: Write 0296: 0060859808410000 
DBG(48576409)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576410)> CPU DETAIL: Read R 1626: 0000000000000042 
DBG(48576411)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576412)> CPU DETAIL: Result: 0000000000000043 
DBG(48576413)> CPU DETAIL: Write 1626: 0000000000000043 
DBG(48576415)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576416)> CPU DETAIL: M8: 0007 
DBG(48576417)> CPU DETAIL: Transfer to T 
DBG(48576419)> CPU CMD: Exec 0296: 00 60 8598 0841 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576420)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48576420)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48576421)> CPU DETAIL: Write 0841: 0000000232000000 
DBG(48576423)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576424)> CPU DETAIL: Read R 0296: 0060859808410000 
DBG(48576425)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576426)> CPU DETAIL: Result: 0060859808420000 
DBG(48576427)> CPU DETAIL: Write 0296: 0060859808420000 
DBG(48576429)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576430)> CPU DETAIL: Read R 1626: 0000000000000043 
DBG(48576431)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576432)> CPU DETAIL: Result: 0000000000000044 
DBG(48576433)> CPU DETAIL: Write 1626: 0000000000000044 
DBG(48576435)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576436)> CPU DETAIL: M8: 0008 
DBG(48576437)> CPU DETAIL: Transfer to T 
DBG(48576439)> CPU CMD: Exec 0296: 00 60 8598 0842 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576440)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48576440)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48576441)> CPU DETAIL: Write 0842: 0000000000000000 
DBG(48576443)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576444)> CPU DETAIL: Read R 0296: 0060859808420000 
DBG(48576445)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576446)> CPU DETAIL: Result: 0060859808430000 
DBG(48576447)> CPU DETAIL: Write 0296: 0060859808430000 
DBG(48576449)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576450)> CPU DETAIL: Read R 1626: 0000000000000044 
DBG(48576451)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576452)> CPU DETAIL: Result: 0000000000000045 
DBG(48576453)> CPU DETAIL: Write 1626: 0000000000000045 
DBG(48576455)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576456)> CPU DETAIL: M8: 0009 
DBG(48576457)> CPU DETAIL: Transfer to T 
DBG(48576459)> CPU CMD: Exec 0296: 00 60 8598 0843 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576460)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48576460)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48576461)> CPU DETAIL: Write 0843: 0000000000000000 
DBG(48576463)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576464)> CPU DETAIL: Read R 0296: 0060859808430000 
DBG(48576465)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576466)> CPU DETAIL: Result: 0060859808440000 
DBG(48576467)> CPU DETAIL: Write 0296: 0060859808440000 
DBG(48576469)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576470)> CPU DETAIL: Read R 1626: 0000000000000045 
DBG(48576471)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576472)> CPU DETAIL: Result: 0000000000000046 
DBG(48576473)> CPU DETAIL: Write 1626: 0000000000000046 
DBG(48576475)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576476)> CPU DETAIL: M8: 0010 
DBG(48576477)> CPU DETAIL: Transfer to T 
DBG(48576479)> CPU CMD: Exec 0296: 00 60 8598 0844 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576480)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48576480)> CPU DETAIL: Read R 0608: 0000000232090000 
DBG(48576481)> CPU DETAIL: Write 0844: 0000000232090000 
DBG(48576483)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576484)> CPU DETAIL: Read R 0296: 0060859808440000 
DBG(48576485)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576486)> CPU DETAIL: Result: 0060859808450000 
DBG(48576487)> CPU DETAIL: Write 0296: 0060859808450000 
DBG(48576489)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576490)> CPU DETAIL: Read R 1626: 0000000000000046 
DBG(48576491)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576492)> CPU DETAIL: Result: 0000000000000047 
DBG(48576493)> CPU DETAIL: Write 1626: 0000000000000047 
DBG(48576495)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576496)> CPU DETAIL: M8: 0011 
DBG(48576497)> CPU DETAIL: Transfer to T 
DBG(48576499)> CPU CMD: Exec 0296: 00 60 8598 0845 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576500)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48576500)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48576501)> CPU DETAIL: Write 0845: 0000000000000000 
DBG(48576503)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576504)> CPU DETAIL: Read R 0296: 0060859808450000 
DBG(48576505)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576506)> CPU DETAIL: Result: 0060859808460000 
DBG(48576507)> CPU DETAIL: Write 0296: 0060859808460000 
DBG(48576509)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576510)> CPU DETAIL: Read R 1626: 0000000000000047 
DBG(48576511)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576512)> CPU DETAIL: Result: 0000000000000048 
DBG(48576513)> CPU DETAIL: Write 1626: 0000000000000048 
DBG(48576515)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576516)> CPU DETAIL: M8: 0012 
DBG(48576517)> CPU DETAIL: Transfer to T 
DBG(48576519)> CPU CMD: Exec 0296: 00 60 8598 0846 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48576520)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48576520)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48576521)> CPU DETAIL: Write 0846: 0000000000000000 
DBG(48576523)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48576524)> CPU DETAIL: Read R 0296: 0060859808460000 
DBG(48576525)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576526)> CPU DETAIL: Result: 0060859808470000 
DBG(48576527)> CPU DETAIL: Write 0296: 0060859808470000 
DBG(48576529)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48576530)> CPU DETAIL: Read R 1626: 0000000000000048 
DBG(48576531)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48576532)> CPU DETAIL: Result: 0000000000000049 
DBG(48576533)> CPU DETAIL: Write 1626: 0000000000000049 
DBG(48576535)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48576536)> CPU DETAIL: M8: 0013 
DBG(48576539)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48576542)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48576543)> CPU DETAIL: Transfer to T 
DBG(48576545)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48576546)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48576547)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48576550)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48576551)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576551)> CPU DETAIL: Read R 0421: 0000000232000000 
DBG(48576552)> CPU DETAIL: Result: 0001000232000000 
DBG(48576553)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576553)> CPU DETAIL: Write 0421: 0001000232000000 
DBG(48576555)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48576556)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576556)> CPU DETAIL: Read R 0421: 0001000232000000 
DBG(48576557)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48576558)> CPU DETAIL: Result: 0001000000000000 
DBG(48576559)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48576560)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48576562)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48576563)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576563)> CPU DETAIL: Read R 0426: 3333444455660002 
DBG(48576564)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48576565)> CPU DETAIL: Result: 0000000000000002 
DBG(48576568)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48576569)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48576570)> CPU DETAIL: Result: 0000000000000001 
DBG(48576573)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48576574)> CPU DETAIL: REG1: 0000000000000001
DBG(48576574)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48576576)> CPU CMD: Exec 0249: 00 40 1672 1644 1672   (1672) = +3 to point to next successor   
DBG(48576577)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48576578)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48576579)> CPU DETAIL: Result: 0000001000000000 
DBG(48576580)> CPU DETAIL: Write 1672: 0000001000000000 
DBG(48576582)> CPU CMD: Exec 0250: 00 60 0000 0000 0141   goto 0141 read event from tape 1 input block   
DBG(48576583)> CPU DETAIL: Transfer to T 
DBG(48576585)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48576586)> CPU DETAIL: Read R 1614: 0000000000000039 
DBG(48576587)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48576588)> CPU DETAIL: Result: 0000000000000013 
DBG(48576591)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48576592)> CPU DETAIL: REG1: 0000000000000013
DBG(48576592)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48576594)> CPU CMD: Exec 0149: 00 60 1031 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48576595)> CPU DETAIL: Read R 1031: 3336000000000200 
DBG(48576596)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48576598)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48576599)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48576599)> CPU DETAIL: Read R 1025: 0130000000131113 
DBG(48576600)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48576601)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48576603)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48576604)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48576605)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48576606)> CPU DETAIL: Result: 0000000000000200 
DBG(48576607)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48576608)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48576610)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48576611)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48576612)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48576613)> CPU DETAIL: Result: 0000000000000000 
DBG(48576614)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48576616)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48576617)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48576618)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48576619)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48576620)> CPU DETAIL: Transfer to T 
DBG(48576622)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48576623)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48576624)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48576625)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48576625)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48576626)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48576627)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48576628)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48576630)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48576631)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48576632)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48576633)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48576633)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48576634)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48576635)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48576636)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48576638)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48576639)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48576640)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48576643)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48576644)> CPU DETAIL: Read R 0149: 0060103116160000 
DBG(48576645)> CPU DETAIL: Result: 0060104416160000 
DBG(48576646)> CPU DETAIL: Write 0149: 0060104416160000 
DBG(48576648)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48576649)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48576650)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48576651)> CPU DETAIL: Result: 0000000000000006 
DBG(48576652)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48576654)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48576655)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48576656)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48576657)> CPU DETAIL: Result: 0000000000000000 
DBG(48576658)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48576660)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48576661)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48576662)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48576663)> CPU DETAIL: Result: 0000000000000039 
DBG(48576664)> CPU DETAIL: Write 1615: 0000000000000039 
DBG(48576666)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48576667)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48576668)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48576671)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48576672)> CPU DETAIL: Read R 0167: 0658000100260165 
DBG(48576673)> CPU DETAIL: Result: 0658000100390165 
DBG(48576674)> CPU DETAIL: Write 0167: 0658000100390165 
DBG(48576676)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576677)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48576677)> CPU DETAIL: Read R 1025: 0130000000131113 
DBG(48576678)> CPU DETAIL: Write 0598: 0130000000131113 
DBG(48576680)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576681)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48576682)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576683)> CPU DETAIL: Result: 0060699905990000 
DBG(48576684)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48576686)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576687)> CPU DETAIL: M6: 0027 
DBG(48576688)> CPU DETAIL: Transfer to T 
DBG(48576690)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576691)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48576691)> CPU DETAIL: Read R 1026: 0000000232090000 
DBG(48576692)> CPU DETAIL: Write 0599: 0000000232090000 
DBG(48576694)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576695)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48576696)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576697)> CPU DETAIL: Result: 0060699906000000 
DBG(48576698)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48576700)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576701)> CPU DETAIL: M6: 0028 
DBG(48576702)> CPU DETAIL: Transfer to T 
DBG(48576704)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576705)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48576705)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48576706)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48576708)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576709)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48576710)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576711)> CPU DETAIL: Result: 0060699906010000 
DBG(48576712)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48576714)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576715)> CPU DETAIL: M6: 0029 
DBG(48576716)> CPU DETAIL: Transfer to T 
DBG(48576718)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576719)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48576719)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(48576720)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48576722)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576723)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48576724)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576725)> CPU DETAIL: Result: 0060699906020000 
DBG(48576726)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48576728)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576729)> CPU DETAIL: M6: 0030 
DBG(48576730)> CPU DETAIL: Transfer to T 
DBG(48576732)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576733)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48576733)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(48576734)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48576736)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576737)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48576738)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576739)> CPU DETAIL: Result: 0060699906030000 
DBG(48576740)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48576742)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576743)> CPU DETAIL: M6: 0031 
DBG(48576744)> CPU DETAIL: Transfer to T 
DBG(48576746)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576747)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48576747)> CPU DETAIL: Read R 1030: 0000000000000000 
DBG(48576748)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48576750)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576751)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48576752)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576753)> CPU DETAIL: Result: 0060699906040000 
DBG(48576754)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48576756)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576757)> CPU DETAIL: M6: 0032 
DBG(48576758)> CPU DETAIL: Transfer to T 
DBG(48576760)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576761)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48576761)> CPU DETAIL: Read R 1031: 3336000000000200 
DBG(48576762)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48576764)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576765)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48576766)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576767)> CPU DETAIL: Result: 0060699906050000 
DBG(48576768)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48576770)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576771)> CPU DETAIL: M6: 0033 
DBG(48576772)> CPU DETAIL: Transfer to T 
DBG(48576774)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576775)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48576775)> CPU DETAIL: Read R 1032: 0000000232000000 
DBG(48576776)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48576778)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576779)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48576780)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576781)> CPU DETAIL: Result: 0060699906060000 
DBG(48576782)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48576784)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576785)> CPU DETAIL: M6: 0034 
DBG(48576786)> CPU DETAIL: Transfer to T 
DBG(48576788)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576789)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48576789)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(48576790)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48576792)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576793)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48576794)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576795)> CPU DETAIL: Result: 0060699906070000 
DBG(48576796)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48576798)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576799)> CPU DETAIL: M6: 0035 
DBG(48576800)> CPU DETAIL: Transfer to T 
DBG(48576802)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576803)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48576803)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(48576804)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48576806)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576807)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48576808)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576809)> CPU DETAIL: Result: 0060699906080000 
DBG(48576810)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48576812)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576813)> CPU DETAIL: M6: 0036 
DBG(48576814)> CPU DETAIL: Transfer to T 
DBG(48576816)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576817)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48576817)> CPU DETAIL: Read R 1035: 0000000232010000 
DBG(48576818)> CPU DETAIL: Write 0608: 0000000232010000 
DBG(48576820)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576821)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48576822)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576823)> CPU DETAIL: Result: 0060699906090000 
DBG(48576824)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48576826)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576827)> CPU DETAIL: M6: 0037 
DBG(48576828)> CPU DETAIL: Transfer to T 
DBG(48576830)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576831)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48576831)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(48576832)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48576834)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576835)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48576836)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576837)> CPU DETAIL: Result: 0060699906100000 
DBG(48576838)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48576840)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576841)> CPU DETAIL: M6: 0038 
DBG(48576842)> CPU DETAIL: Transfer to T 
DBG(48576844)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48576845)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48576845)> CPU DETAIL: Read R 1037: 0000000000000000 
DBG(48576846)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48576848)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48576849)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48576850)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48576851)> CPU DETAIL: Result: 0060699906110000 
DBG(48576852)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48576854)> CPU CMD: Exec 0167: 06 58 0001 0039 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48576855)> CPU DETAIL: M6: 0039 
DBG(48576858)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48576859)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48576860)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48576862)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48576865)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48576866)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48576867)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48576870)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48576871)> CPU DETAIL: Read R 1672: 0000001000000000 
DBG(48576872)> CPU DETAIL: Result: 0000001000000000 
DBG(48576875)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48576876)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48576877)> CPU DETAIL: Result: 0042440716550000 
DBG(48576878)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48576880)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48576881)> CPU DETAIL: Read R 0599: 0000000232090000 
DBG(48576882)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576883)> CPU DETAIL: Result: 0000000232090000 
DBG(48576884)> CPU DETAIL: Write 1620: 0000000232090000 
DBG(48576886)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48576887)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576887)> CPU DETAIL: Read R 0430: 0000000232090000 
DBG(48576888)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576889)> CPU DETAIL: Result: 0000000232090000 
DBG(48576892)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48576893)> CPU DETAIL: Read S 1620: 0000000232090000 
DBG(48576894)> CPU DETAIL: Result: 0000000000000000 
DBG(48576897)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48576898)> CPU DETAIL: REG1: 0000000000000000
DBG(48576898)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48576900)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48576901)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48576902)> CPU DETAIL: Transfer to T 
DBG(48576902)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48576904)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48576905)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48576906)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576907)> CPU DETAIL: Result: 0000000232000000 
DBG(48576908)> CPU DETAIL: Write 1620: 0000000232000000 
DBG(48576910)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48576911)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576911)> CPU DETAIL: Read R 0421: 0001000232000000 
DBG(48576912)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48576913)> CPU DETAIL: Result: 0000000232000000 
DBG(48576916)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48576917)> CPU DETAIL: Read R 1620: 0000000232000000 
DBG(48576918)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48576919)> CPU DETAIL: Transfer to T 
DBG(48576921)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48576922)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48576923)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48576925)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48576926)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48576927)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48576929)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48576930)> CPU DETAIL: Read R 0599: 0000000232090000 
DBG(48576931)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48576932)> CPU DETAIL: Result: 0100000232090000 
DBG(48576933)> CPU DETAIL: Write 0599: 0100000232090000 
DBG(48576935)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48576936)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48576937)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48576939)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48576940)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48576941)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48576942)> CPU DETAIL: Result: 0000000000000200 
DBG(48576943)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48576946)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48576947)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48576948)> CPU DETAIL: Result: 0000000000000001 
DBG(48576951)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48576952)> CPU DETAIL: REG1: 0000000000000001
DBG(48576952)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48576954)> CPU CMD: Exec 0241: 00 60 0177 0250 0000   ???: not all predecessors of tape 1 event found yet   
DBG(48576955)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48576956)> CPU DETAIL: Write 0250: 0060019701960179 
DBG(48576958)> CPU CMD: Exec 0242: 00 60 1667 0272 0000   ???   
DBG(48576959)> CPU DETAIL: Read R 1667: 0060169901960179 
DBG(48576960)> CPU DETAIL: Write 0272: 0060169901960179 
DBG(48576962)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48576963)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48576964)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48576967)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48576968)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576968)> CPU DETAIL: Read R 0421: 0001000232000000 
DBG(48576969)> CPU DETAIL: Result: 0002000232000000 
DBG(48576970)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576970)> CPU DETAIL: Write 0421: 0002000232000000 
DBG(48576972)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48576973)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576973)> CPU DETAIL: Read R 0421: 0002000232000000 
DBG(48576974)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48576975)> CPU DETAIL: Result: 0002000000000000 
DBG(48576976)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000002 
DBG(48576977)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48576979)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48576980)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576980)> CPU DETAIL: Read R 0426: 3333444455660002 
DBG(48576981)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48576982)> CPU DETAIL: Result: 0000000000000002 
DBG(48576985)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48576986)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48576987)> CPU DETAIL: Result: 0000000000000000 
DBG(48576990)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48576991)> CPU DETAIL: REG1: 0000000000000000
DBG(48576991)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48576993)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48576994)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48576995)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48576996)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48576998)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48576999)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48576999)> CPU DETAIL: Read R 0426: 3333444455660002 
DBG(48577000)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48577001)> CPU DETAIL: Result: 0000000000000002 
DBG(48577002)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(48577005)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48577006)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48577006)> CPU DETAIL: Read R 0421: 0002000232000000 
DBG(48577007)> CPU DETAIL: Result: 0000000232000000 
DBG(48577008)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48577008)> CPU DETAIL: Write 0421: 0000000232000000 
DBG(48577010)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48577011)> CPU DETAIL: Read R 1625: 0000000000000023 
DBG(48577012)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48577013)> CPU DETAIL: Result: 0000000000000036 
DBG(48577016)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48577017)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48577018)> CPU DETAIL: Result: 0000000000000164 
DBG(48577021)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48577022)> CPU DETAIL: REG1: 0000000000000164
DBG(48577022)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48577024)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48577025)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48577026)> CPU DETAIL: Transfer to T 
DBG(48577026)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48577028)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48577029)> CPU DETAIL: M4: 0023 
DBG(48577030)> CPU DETAIL: M6: 0039 
DBG(48577031)> CPU DETAIL: Clear M8
DBG(48577031)> CPU DETAIL: M8: 0000 
DBG(48577034)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48577035)> CPU DETAIL: Read R 1612: 0000000000000002 
DBG(48577036)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577037)> CPU DETAIL: Result: 0000000000000003 
DBG(48577038)> CPU DETAIL: Write 1612: 0000000000000003 
DBG(48577040)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48577041)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48577042)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48577045)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48577046)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48577047)> CPU DETAIL: Result: 0858000100130266 
DBG(48577048)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48577050)> CPU CMD: Exec 0266: 00 60 4397 1424 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577051)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48577051)> CPU DETAIL: Read R 0420: 0130000000131111 
DBG(48577052)> CPU DETAIL: Write 1424: 0130000000131111 
DBG(48577054)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577055)> CPU DETAIL: Read R 0266: 0060439714240000 
DBG(48577056)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577057)> CPU DETAIL: Result: 0060439714250000 
DBG(48577058)> CPU DETAIL: Write 0266: 0060439714250000 
DBG(48577060)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577061)> CPU DETAIL: Read R 1625: 0000000000000023 
DBG(48577062)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577063)> CPU DETAIL: Result: 0000000000000024 
DBG(48577064)> CPU DETAIL: Write 1625: 0000000000000024 
DBG(48577066)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577067)> CPU DETAIL: M4: 0024 
DBG(48577068)> CPU DETAIL: M6: 0039 
DBG(48577069)> CPU DETAIL: M8: 0000 
DBG(48577072)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577073)> CPU DETAIL: M8: 0001 
DBG(48577074)> CPU DETAIL: Transfer to T 
DBG(48577076)> CPU CMD: Exec 0266: 00 60 4397 1425 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577077)> CPU DETAIL: M4 Address Modifier: 0024 
DBG(48577077)> CPU DETAIL: Read R 0421: 0000000232000000 
DBG(48577078)> CPU DETAIL: Write 1425: 0000000232000000 
DBG(48577080)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577081)> CPU DETAIL: Read R 0266: 0060439714250000 
DBG(48577082)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577083)> CPU DETAIL: Result: 0060439714260000 
DBG(48577084)> CPU DETAIL: Write 0266: 0060439714260000 
DBG(48577086)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577087)> CPU DETAIL: Read R 1625: 0000000000000024 
DBG(48577088)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577089)> CPU DETAIL: Result: 0000000000000025 
DBG(48577090)> CPU DETAIL: Write 1625: 0000000000000025 
DBG(48577092)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577093)> CPU DETAIL: M4: 0025 
DBG(48577094)> CPU DETAIL: M6: 0039 
DBG(48577095)> CPU DETAIL: M8: 0001 
DBG(48577098)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577099)> CPU DETAIL: M8: 0002 
DBG(48577100)> CPU DETAIL: Transfer to T 
DBG(48577102)> CPU CMD: Exec 0266: 00 60 4397 1426 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577103)> CPU DETAIL: M4 Address Modifier: 0025 
DBG(48577103)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48577104)> CPU DETAIL: Write 1426: 0000000000000000 
DBG(48577106)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577107)> CPU DETAIL: Read R 0266: 0060439714260000 
DBG(48577108)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577109)> CPU DETAIL: Result: 0060439714270000 
DBG(48577110)> CPU DETAIL: Write 0266: 0060439714270000 
DBG(48577112)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577113)> CPU DETAIL: Read R 1625: 0000000000000025 
DBG(48577114)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577115)> CPU DETAIL: Result: 0000000000000026 
DBG(48577116)> CPU DETAIL: Write 1625: 0000000000000026 
DBG(48577118)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577119)> CPU DETAIL: M4: 0026 
DBG(48577120)> CPU DETAIL: M6: 0039 
DBG(48577121)> CPU DETAIL: M8: 0002 
DBG(48577124)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577125)> CPU DETAIL: M8: 0003 
DBG(48577126)> CPU DETAIL: Transfer to T 
DBG(48577128)> CPU CMD: Exec 0266: 00 60 4397 1427 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577129)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48577129)> CPU DETAIL: Read R 0423: 0000000000000000 
DBG(48577130)> CPU DETAIL: Write 1427: 0000000000000000 
DBG(48577132)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577133)> CPU DETAIL: Read R 0266: 0060439714270000 
DBG(48577134)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577135)> CPU DETAIL: Result: 0060439714280000 
DBG(48577136)> CPU DETAIL: Write 0266: 0060439714280000 
DBG(48577138)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577139)> CPU DETAIL: Read R 1625: 0000000000000026 
DBG(48577140)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577141)> CPU DETAIL: Result: 0000000000000027 
DBG(48577142)> CPU DETAIL: Write 1625: 0000000000000027 
DBG(48577144)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577145)> CPU DETAIL: M4: 0027 
DBG(48577146)> CPU DETAIL: M6: 0039 
DBG(48577147)> CPU DETAIL: M8: 0003 
DBG(48577150)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577151)> CPU DETAIL: M8: 0004 
DBG(48577152)> CPU DETAIL: Transfer to T 
DBG(48577154)> CPU CMD: Exec 0266: 00 60 4397 1428 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577155)> CPU DETAIL: M4 Address Modifier: 0027 
DBG(48577155)> CPU DETAIL: Read R 0424: 0000000000000000 
DBG(48577156)> CPU DETAIL: Write 1428: 0000000000000000 
DBG(48577158)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577159)> CPU DETAIL: Read R 0266: 0060439714280000 
DBG(48577160)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577161)> CPU DETAIL: Result: 0060439714290000 
DBG(48577162)> CPU DETAIL: Write 0266: 0060439714290000 
DBG(48577164)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577165)> CPU DETAIL: Read R 1625: 0000000000000027 
DBG(48577166)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577167)> CPU DETAIL: Result: 0000000000000028 
DBG(48577168)> CPU DETAIL: Write 1625: 0000000000000028 
DBG(48577170)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577171)> CPU DETAIL: M4: 0028 
DBG(48577172)> CPU DETAIL: M6: 0039 
DBG(48577173)> CPU DETAIL: M8: 0004 
DBG(48577176)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577177)> CPU DETAIL: M8: 0005 
DBG(48577178)> CPU DETAIL: Transfer to T 
DBG(48577180)> CPU CMD: Exec 0266: 00 60 4397 1429 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577181)> CPU DETAIL: M4 Address Modifier: 0028 
DBG(48577181)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48577182)> CPU DETAIL: Write 1429: 0000000000000000 
DBG(48577184)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577185)> CPU DETAIL: Read R 0266: 0060439714290000 
DBG(48577186)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577187)> CPU DETAIL: Result: 0060439714300000 
DBG(48577188)> CPU DETAIL: Write 0266: 0060439714300000 
DBG(48577190)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577191)> CPU DETAIL: Read R 1625: 0000000000000028 
DBG(48577192)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577193)> CPU DETAIL: Result: 0000000000000029 
DBG(48577194)> CPU DETAIL: Write 1625: 0000000000000029 
DBG(48577196)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577197)> CPU DETAIL: M4: 0029 
DBG(48577198)> CPU DETAIL: M6: 0039 
DBG(48577199)> CPU DETAIL: M8: 0005 
DBG(48577202)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577203)> CPU DETAIL: M8: 0006 
DBG(48577204)> CPU DETAIL: Transfer to T 
DBG(48577206)> CPU CMD: Exec 0266: 00 60 4397 1430 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577207)> CPU DETAIL: M4 Address Modifier: 0029 
DBG(48577207)> CPU DETAIL: Read R 0426: 3333444455660002 
DBG(48577208)> CPU DETAIL: Write 1430: 3333444455660002 
DBG(48577210)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577211)> CPU DETAIL: Read R 0266: 0060439714300000 
DBG(48577212)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577213)> CPU DETAIL: Result: 0060439714310000 
DBG(48577214)> CPU DETAIL: Write 0266: 0060439714310000 
DBG(48577216)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577217)> CPU DETAIL: Read R 1625: 0000000000000029 
DBG(48577218)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577219)> CPU DETAIL: Result: 0000000000000030 
DBG(48577220)> CPU DETAIL: Write 1625: 0000000000000030 
DBG(48577222)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577223)> CPU DETAIL: M4: 0030 
DBG(48577224)> CPU DETAIL: M6: 0039 
DBG(48577225)> CPU DETAIL: M8: 0006 
DBG(48577228)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577229)> CPU DETAIL: M8: 0007 
DBG(48577230)> CPU DETAIL: Transfer to T 
DBG(48577232)> CPU CMD: Exec 0266: 00 60 4397 1431 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577233)> CPU DETAIL: M4 Address Modifier: 0030 
DBG(48577233)> CPU DETAIL: Read R 0427: 0000000232010000 
DBG(48577234)> CPU DETAIL: Write 1431: 0000000232010000 
DBG(48577236)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577237)> CPU DETAIL: Read R 0266: 0060439714310000 
DBG(48577238)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577239)> CPU DETAIL: Result: 0060439714320000 
DBG(48577240)> CPU DETAIL: Write 0266: 0060439714320000 
DBG(48577242)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577243)> CPU DETAIL: Read R 1625: 0000000000000030 
DBG(48577244)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577245)> CPU DETAIL: Result: 0000000000000031 
DBG(48577246)> CPU DETAIL: Write 1625: 0000000000000031 
DBG(48577248)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577249)> CPU DETAIL: M4: 0031 
DBG(48577250)> CPU DETAIL: M6: 0039 
DBG(48577251)> CPU DETAIL: M8: 0007 
DBG(48577254)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577255)> CPU DETAIL: M8: 0008 
DBG(48577256)> CPU DETAIL: Transfer to T 
DBG(48577258)> CPU CMD: Exec 0266: 00 60 4397 1432 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577259)> CPU DETAIL: M4 Address Modifier: 0031 
DBG(48577259)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48577260)> CPU DETAIL: Write 1432: 0000000000000000 
DBG(48577262)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577263)> CPU DETAIL: Read R 0266: 0060439714320000 
DBG(48577264)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577265)> CPU DETAIL: Result: 0060439714330000 
DBG(48577266)> CPU DETAIL: Write 0266: 0060439714330000 
DBG(48577268)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577269)> CPU DETAIL: Read R 1625: 0000000000000031 
DBG(48577270)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577271)> CPU DETAIL: Result: 0000000000000032 
DBG(48577272)> CPU DETAIL: Write 1625: 0000000000000032 
DBG(48577274)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577275)> CPU DETAIL: M4: 0032 
DBG(48577276)> CPU DETAIL: M6: 0039 
DBG(48577277)> CPU DETAIL: M8: 0008 
DBG(48577280)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577281)> CPU DETAIL: M8: 0009 
DBG(48577282)> CPU DETAIL: Transfer to T 
DBG(48577284)> CPU CMD: Exec 0266: 00 60 4397 1433 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577285)> CPU DETAIL: M4 Address Modifier: 0032 
DBG(48577285)> CPU DETAIL: Read R 0429: 0000000000000000 
DBG(48577286)> CPU DETAIL: Write 1433: 0000000000000000 
DBG(48577288)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577289)> CPU DETAIL: Read R 0266: 0060439714330000 
DBG(48577290)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577291)> CPU DETAIL: Result: 0060439714340000 
DBG(48577292)> CPU DETAIL: Write 0266: 0060439714340000 
DBG(48577294)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577295)> CPU DETAIL: Read R 1625: 0000000000000032 
DBG(48577296)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577297)> CPU DETAIL: Result: 0000000000000033 
DBG(48577298)> CPU DETAIL: Write 1625: 0000000000000033 
DBG(48577300)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577301)> CPU DETAIL: M4: 0033 
DBG(48577302)> CPU DETAIL: M6: 0039 
DBG(48577303)> CPU DETAIL: M8: 0009 
DBG(48577306)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577307)> CPU DETAIL: M8: 0010 
DBG(48577308)> CPU DETAIL: Transfer to T 
DBG(48577310)> CPU CMD: Exec 0266: 00 60 4397 1434 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577311)> CPU DETAIL: M4 Address Modifier: 0033 
DBG(48577311)> CPU DETAIL: Read R 0430: 0000000232090000 
DBG(48577312)> CPU DETAIL: Write 1434: 0000000232090000 
DBG(48577314)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577315)> CPU DETAIL: Read R 0266: 0060439714340000 
DBG(48577316)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577317)> CPU DETAIL: Result: 0060439714350000 
DBG(48577318)> CPU DETAIL: Write 0266: 0060439714350000 
DBG(48577320)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577321)> CPU DETAIL: Read R 1625: 0000000000000033 
DBG(48577322)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577323)> CPU DETAIL: Result: 0000000000000034 
DBG(48577324)> CPU DETAIL: Write 1625: 0000000000000034 
DBG(48577326)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577327)> CPU DETAIL: M4: 0034 
DBG(48577328)> CPU DETAIL: M6: 0039 
DBG(48577329)> CPU DETAIL: M8: 0010 
DBG(48577332)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577333)> CPU DETAIL: M8: 0011 
DBG(48577334)> CPU DETAIL: Transfer to T 
DBG(48577336)> CPU CMD: Exec 0266: 00 60 4397 1435 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577337)> CPU DETAIL: M4 Address Modifier: 0034 
DBG(48577337)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48577338)> CPU DETAIL: Write 1435: 0000000000000000 
DBG(48577340)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577341)> CPU DETAIL: Read R 0266: 0060439714350000 
DBG(48577342)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577343)> CPU DETAIL: Result: 0060439714360000 
DBG(48577344)> CPU DETAIL: Write 0266: 0060439714360000 
DBG(48577346)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577347)> CPU DETAIL: Read R 1625: 0000000000000034 
DBG(48577348)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577349)> CPU DETAIL: Result: 0000000000000035 
DBG(48577350)> CPU DETAIL: Write 1625: 0000000000000035 
DBG(48577352)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577353)> CPU DETAIL: M4: 0035 
DBG(48577354)> CPU DETAIL: M6: 0039 
DBG(48577355)> CPU DETAIL: M8: 0011 
DBG(48577358)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577359)> CPU DETAIL: M8: 0012 
DBG(48577360)> CPU DETAIL: Transfer to T 
DBG(48577362)> CPU CMD: Exec 0266: 00 60 4397 1436 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48577363)> CPU DETAIL: M4 Address Modifier: 0035 
DBG(48577363)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48577364)> CPU DETAIL: Write 1436: 0000000000000000 
DBG(48577366)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48577367)> CPU DETAIL: Read R 0266: 0060439714360000 
DBG(48577368)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577369)> CPU DETAIL: Result: 0060439714370000 
DBG(48577370)> CPU DETAIL: Write 0266: 0060439714370000 
DBG(48577372)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48577373)> CPU DETAIL: Read R 1625: 0000000000000035 
DBG(48577374)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577375)> CPU DETAIL: Result: 0000000000000036 
DBG(48577376)> CPU DETAIL: Write 1625: 0000000000000036 
DBG(48577378)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48577379)> CPU DETAIL: M4: 0036 
DBG(48577380)> CPU DETAIL: M6: 0039 
DBG(48577381)> CPU DETAIL: M8: 0012 
DBG(48577384)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48577385)> CPU DETAIL: M8: 0013 
DBG(48577388)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48577391)> CPU CMD: Exec 0272: 00 60 1699 0196 0179   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48577392)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48577393)> CPU DETAIL: Transfer to T 
DBG(48577393)> CPU DETAIL: Write 0196: 0060164601400118 
DBG(48577395)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48577396)> CPU DETAIL: Read R 1611: 0000000000000013 
DBG(48577397)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48577398)> CPU DETAIL: Result: 0000000000000026 
DBG(48577401)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48577402)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48577403)> CPU DETAIL: Result: 0000000000000174 
DBG(48577406)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48577407)> CPU DETAIL: REG1: 0000000000000174
DBG(48577407)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48577409)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48577410)> CPU DETAIL: M4: 0036 
DBG(48577411)> CPU DETAIL: M6: 0039 
DBG(48577412)> CPU DETAIL: Clear M8
DBG(48577412)> CPU DETAIL: M8: 0000 
DBG(48577415)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48577416)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48577417)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48577420)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48577421)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48577422)> CPU DETAIL: Result: 0858000100130191 
DBG(48577423)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48577425)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48577426)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48577427)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48577428)> CPU DETAIL: Result: 0000000232090000 
DBG(48577431)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48577432)> CPU DETAIL: Read R 1636: 0000000231030000 
DBG(48577433)> CPU DETAIL: Diff: REG1: 9999999998940000
DBG(48577434)> CPU DETAIL: Transfer to T 
DBG(48577436)> CPU CMD: Exec 0191: 00 60 8598 1213 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577437)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48577437)> CPU DETAIL: Read R 0598: 0130000000131113 
DBG(48577438)> CPU DETAIL: Write 1213: 0130000000131113 
DBG(48577440)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577441)> CPU DETAIL: Read R 0191: 0060859812130000 
DBG(48577442)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577443)> CPU DETAIL: Result: 0060859812140000 
DBG(48577444)> CPU DETAIL: Write 0191: 0060859812140000 
DBG(48577446)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577447)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577448)> CPU DETAIL: Read S 1611: 0000000000000013 
DBG(48577449)> CPU DETAIL: Result: 0000000000000014 
DBG(48577450)> CPU DETAIL: Write 1611: 0000000000000014 
DBG(48577452)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577453)> CPU DETAIL: M8: 0001 
DBG(48577454)> CPU DETAIL: Transfer to T 
DBG(48577456)> CPU CMD: Exec 0191: 00 60 8598 1214 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577457)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48577457)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48577458)> CPU DETAIL: Write 1214: 0100000232090000 
DBG(48577460)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577461)> CPU DETAIL: Read R 0191: 0060859812140000 
DBG(48577462)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577463)> CPU DETAIL: Result: 0060859812150000 
DBG(48577464)> CPU DETAIL: Write 0191: 0060859812150000 
DBG(48577466)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577467)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577468)> CPU DETAIL: Read S 1611: 0000000000000014 
DBG(48577469)> CPU DETAIL: Result: 0000000000000015 
DBG(48577470)> CPU DETAIL: Write 1611: 0000000000000015 
DBG(48577472)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577473)> CPU DETAIL: M8: 0002 
DBG(48577474)> CPU DETAIL: Transfer to T 
DBG(48577476)> CPU CMD: Exec 0191: 00 60 8598 1215 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577477)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48577477)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48577478)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(48577480)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577481)> CPU DETAIL: Read R 0191: 0060859812150000 
DBG(48577482)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577483)> CPU DETAIL: Result: 0060859812160000 
DBG(48577484)> CPU DETAIL: Write 0191: 0060859812160000 
DBG(48577486)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577487)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577488)> CPU DETAIL: Read S 1611: 0000000000000015 
DBG(48577489)> CPU DETAIL: Result: 0000000000000016 
DBG(48577490)> CPU DETAIL: Write 1611: 0000000000000016 
DBG(48577492)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577493)> CPU DETAIL: M8: 0003 
DBG(48577494)> CPU DETAIL: Transfer to T 
DBG(48577496)> CPU CMD: Exec 0191: 00 60 8598 1216 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577497)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48577497)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48577498)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(48577500)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577501)> CPU DETAIL: Read R 0191: 0060859812160000 
DBG(48577502)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577503)> CPU DETAIL: Result: 0060859812170000 
DBG(48577504)> CPU DETAIL: Write 0191: 0060859812170000 
DBG(48577506)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577507)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577508)> CPU DETAIL: Read S 1611: 0000000000000016 
DBG(48577509)> CPU DETAIL: Result: 0000000000000017 
DBG(48577510)> CPU DETAIL: Write 1611: 0000000000000017 
DBG(48577512)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577513)> CPU DETAIL: M8: 0004 
DBG(48577514)> CPU DETAIL: Transfer to T 
DBG(48577516)> CPU CMD: Exec 0191: 00 60 8598 1217 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577517)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48577517)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48577518)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(48577520)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577521)> CPU DETAIL: Read R 0191: 0060859812170000 
DBG(48577522)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577523)> CPU DETAIL: Result: 0060859812180000 
DBG(48577524)> CPU DETAIL: Write 0191: 0060859812180000 
DBG(48577526)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577527)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577528)> CPU DETAIL: Read S 1611: 0000000000000017 
DBG(48577529)> CPU DETAIL: Result: 0000000000000018 
DBG(48577530)> CPU DETAIL: Write 1611: 0000000000000018 
DBG(48577532)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577533)> CPU DETAIL: M8: 0005 
DBG(48577534)> CPU DETAIL: Transfer to T 
DBG(48577536)> CPU CMD: Exec 0191: 00 60 8598 1218 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577537)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48577537)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48577538)> CPU DETAIL: Write 1218: 0000000000000000 
DBG(48577540)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577541)> CPU DETAIL: Read R 0191: 0060859812180000 
DBG(48577542)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577543)> CPU DETAIL: Result: 0060859812190000 
DBG(48577544)> CPU DETAIL: Write 0191: 0060859812190000 
DBG(48577546)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577547)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577548)> CPU DETAIL: Read S 1611: 0000000000000018 
DBG(48577549)> CPU DETAIL: Result: 0000000000000019 
DBG(48577550)> CPU DETAIL: Write 1611: 0000000000000019 
DBG(48577552)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577553)> CPU DETAIL: M8: 0006 
DBG(48577554)> CPU DETAIL: Transfer to T 
DBG(48577556)> CPU CMD: Exec 0191: 00 60 8598 1219 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577557)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48577557)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48577558)> CPU DETAIL: Write 1219: 3336000000000200 
DBG(48577560)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577561)> CPU DETAIL: Read R 0191: 0060859812190000 
DBG(48577562)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577563)> CPU DETAIL: Result: 0060859812200000 
DBG(48577564)> CPU DETAIL: Write 0191: 0060859812200000 
DBG(48577566)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577567)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577568)> CPU DETAIL: Read S 1611: 0000000000000019 
DBG(48577569)> CPU DETAIL: Result: 0000000000000020 
DBG(48577570)> CPU DETAIL: Write 1611: 0000000000000020 
DBG(48577572)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577573)> CPU DETAIL: M8: 0007 
DBG(48577574)> CPU DETAIL: Transfer to T 
DBG(48577576)> CPU CMD: Exec 0191: 00 60 8598 1220 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577577)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48577577)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48577578)> CPU DETAIL: Write 1220: 0000000232000000 
DBG(48577580)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577581)> CPU DETAIL: Read R 0191: 0060859812200000 
DBG(48577582)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577583)> CPU DETAIL: Result: 0060859812210000 
DBG(48577584)> CPU DETAIL: Write 0191: 0060859812210000 
DBG(48577586)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577587)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577588)> CPU DETAIL: Read S 1611: 0000000000000020 
DBG(48577589)> CPU DETAIL: Result: 0000000000000021 
DBG(48577590)> CPU DETAIL: Write 1611: 0000000000000021 
DBG(48577592)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577593)> CPU DETAIL: M8: 0008 
DBG(48577594)> CPU DETAIL: Transfer to T 
DBG(48577596)> CPU CMD: Exec 0191: 00 60 8598 1221 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577597)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48577597)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48577598)> CPU DETAIL: Write 1221: 0000000000000000 
DBG(48577600)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577601)> CPU DETAIL: Read R 0191: 0060859812210000 
DBG(48577602)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577603)> CPU DETAIL: Result: 0060859812220000 
DBG(48577604)> CPU DETAIL: Write 0191: 0060859812220000 
DBG(48577606)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577607)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577608)> CPU DETAIL: Read S 1611: 0000000000000021 
DBG(48577609)> CPU DETAIL: Result: 0000000000000022 
DBG(48577610)> CPU DETAIL: Write 1611: 0000000000000022 
DBG(48577612)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577613)> CPU DETAIL: M8: 0009 
DBG(48577614)> CPU DETAIL: Transfer to T 
DBG(48577616)> CPU CMD: Exec 0191: 00 60 8598 1222 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577617)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48577617)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48577618)> CPU DETAIL: Write 1222: 0000000000000000 
DBG(48577620)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577621)> CPU DETAIL: Read R 0191: 0060859812220000 
DBG(48577622)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577623)> CPU DETAIL: Result: 0060859812230000 
DBG(48577624)> CPU DETAIL: Write 0191: 0060859812230000 
DBG(48577626)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577627)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577628)> CPU DETAIL: Read S 1611: 0000000000000022 
DBG(48577629)> CPU DETAIL: Result: 0000000000000023 
DBG(48577630)> CPU DETAIL: Write 1611: 0000000000000023 
DBG(48577632)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577633)> CPU DETAIL: M8: 0010 
DBG(48577634)> CPU DETAIL: Transfer to T 
DBG(48577636)> CPU CMD: Exec 0191: 00 60 8598 1223 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577637)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48577637)> CPU DETAIL: Read R 0608: 0000000232010000 
DBG(48577638)> CPU DETAIL: Write 1223: 0000000232010000 
DBG(48577640)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577641)> CPU DETAIL: Read R 0191: 0060859812230000 
DBG(48577642)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577643)> CPU DETAIL: Result: 0060859812240000 
DBG(48577644)> CPU DETAIL: Write 0191: 0060859812240000 
DBG(48577646)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577647)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577648)> CPU DETAIL: Read S 1611: 0000000000000023 
DBG(48577649)> CPU DETAIL: Result: 0000000000000024 
DBG(48577650)> CPU DETAIL: Write 1611: 0000000000000024 
DBG(48577652)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577653)> CPU DETAIL: M8: 0011 
DBG(48577654)> CPU DETAIL: Transfer to T 
DBG(48577656)> CPU CMD: Exec 0191: 00 60 8598 1224 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577657)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48577657)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48577658)> CPU DETAIL: Write 1224: 0000000000000000 
DBG(48577660)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577661)> CPU DETAIL: Read R 0191: 0060859812240000 
DBG(48577662)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577663)> CPU DETAIL: Result: 0060859812250000 
DBG(48577664)> CPU DETAIL: Write 0191: 0060859812250000 
DBG(48577666)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577667)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577668)> CPU DETAIL: Read S 1611: 0000000000000024 
DBG(48577669)> CPU DETAIL: Result: 0000000000000025 
DBG(48577670)> CPU DETAIL: Write 1611: 0000000000000025 
DBG(48577672)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577673)> CPU DETAIL: M8: 0012 
DBG(48577674)> CPU DETAIL: Transfer to T 
DBG(48577676)> CPU CMD: Exec 0191: 00 60 8598 1225 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48577677)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48577677)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48577678)> CPU DETAIL: Write 1225: 0000000000000000 
DBG(48577680)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48577681)> CPU DETAIL: Read R 0191: 0060859812250000 
DBG(48577682)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577683)> CPU DETAIL: Result: 0060859812260000 
DBG(48577684)> CPU DETAIL: Write 0191: 0060859812260000 
DBG(48577686)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48577687)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577688)> CPU DETAIL: Read S 1611: 0000000000000025 
DBG(48577689)> CPU DETAIL: Result: 0000000000000026 
DBG(48577690)> CPU DETAIL: Write 1611: 0000000000000026 
DBG(48577692)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48577693)> CPU DETAIL: M8: 0013 
DBG(48577696)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48577697)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48577698)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48577699)> CPU DETAIL: Result: 0000000232090000 
DBG(48577700)> CPU DETAIL: Write 1636: 0000000232090000 
DBG(48577702)> CPU CMD: Exec 0196: 00 60 1646 0140 0118   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48577703)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48577704)> CPU DETAIL: Transfer to T 
DBG(48577704)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48577706)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48577707)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48577708)> CPU DETAIL: Read S 1606: 0000000000000036 
DBG(48577709)> CPU DETAIL: Result: 0000000000000023 
DBG(48577712)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48577713)> CPU DETAIL: REG1: 0000000000000023
DBG(48577713)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48577715)> CPU CMD: Exec 0124: 00 60 0439 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48577716)> CPU DETAIL: Read R 0439: 3333444455660002 
DBG(48577717)> CPU DETAIL: Write 1608: 3333444455660002 
DBG(48577719)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48577720)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48577720)> CPU DETAIL: Read R 0433: 0130000000141111 
DBG(48577721)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48577722)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48577724)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48577725)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48577726)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48577727)> CPU DETAIL: Result: 0000000000000000 
DBG(48577728)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48577729)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48577731)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48577732)> CPU DETAIL: Read R 1608: 3333444455660002 
DBG(48577733)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48577734)> CPU DETAIL: Result: 0000000000000002 
DBG(48577735)> CPU DETAIL: Write 1610: 0000000000000002 
DBG(48577737)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48577738)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48577739)> CPU DETAIL: Read S 1609: 0000000000000000 
DBG(48577740)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48577743)> CPU CMD: Exec 0129: 00 72 1610 1640 0131   if num successors w7 <> zero goto 0131   
DBG(48577744)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48577745)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48577746)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48577747)> CPU DETAIL: Transfer to T 
DBG(48577749)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48577750)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48577751)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48577752)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48577753)> CPU DETAIL: Transfer to T 
DBG(48577755)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48577756)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48577757)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48577758)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48577758)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48577759)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577760)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577761)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48577763)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48577764)> CPU DETAIL: Read R 1610: 0000000000000002 
DBG(48577765)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48577766)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48577766)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48577767)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577768)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48577769)> CPU DETAIL: Write 1610: 9600000000000006 
DBG(48577771)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48577772)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48577773)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48577774)> CPU DETAIL: Result: 0000000000000000 
DBG(48577775)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48577777)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48577778)> CPU DETAIL: Read R 1610: 9600000000000006 
DBG(48577779)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48577780)> CPU DETAIL: Result: 0000000000000006 
DBG(48577781)> CPU DETAIL: Write 1610: 0000000000000006 
DBG(48577783)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48577784)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48577785)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48577788)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48577789)> CPU DETAIL: Read R 0124: 0060043916080000 
DBG(48577790)> CPU DETAIL: Result: 0060045216080000 
DBG(48577791)> CPU DETAIL: Write 0124: 0060045216080000 
DBG(48577793)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48577794)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48577795)> CPU DETAIL: Read S 1606: 0000000000000036 
DBG(48577796)> CPU DETAIL: Result: 0000000000000049 
DBG(48577797)> CPU DETAIL: Write 1606: 0000000000000049 
DBG(48577799)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48577802)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48577803)> CPU DETAIL: Read R 1614: 0000000000000039 
DBG(48577804)> CPU DETAIL: Read S 1615: 0000000000000039 
DBG(48577805)> CPU DETAIL: Result: 0000000000000000 
DBG(48577808)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48577809)> CPU DETAIL: REG1: 0000000000000000
DBG(48577809)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48577811)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48577812)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48577813)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48577815)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48577816)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48577817)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48577819)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48577820)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48577821)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48577823)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48577824)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48577825)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48577827)> CPU CMD: Exec 0148: 00 60 0000 0000 0105   goto read event block from input tape 01   
DBG(48577828)> CPU DETAIL: Transfer to T 
DBG(48577830)> CPU CMD: Exec 0105: 01 94 0999 0000 0004   read input tape 01 -> (0999 input event block tape 01)    
DBG(48577831)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0004
DBG(48577831)> MT DATA: Tape unit 1: init read
DBG(48577831)> MT DETAIL: Read tape record (1424 chars, used 4.29 inches, needs 27 msec) from tape 1
DBG(48577831)> MT DETAIL: Tape record contents: D*0190030103770004C*0130000000141111C*0000000233000000C*00000000000000...
DBG(48577831)> MT EXP: Start Of Block Word: 0190030103770004
DBG(48577831)> MT EXP: Read Tape Block number 0004
DBG(48577831)> MT EXP: Read forward addr 0999 to 0000
DBG(48577831)> MT EXP: Tape to CRT 0999: 0130000000141111 
DBG(48577831)> MT EXP: Tape to CRT 1000: 0000000233000000 
DBG(48577831)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1005: 3333444455660002 
DBG(48577831)> MT EXP: Tape to CRT 1006: 0000000233010000 
DBG(48577831)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1009: 0000000233020000 
DBG(48577831)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1012: 0190000000141112 
DBG(48577831)> MT EXP: Tape to CRT 1013: 0000000233010000 
DBG(48577831)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1018: 3334444455660103 
DBG(48577831)> MT EXP: Tape to CRT 1019: 0000000233000000 
DBG(48577831)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1022: 0000000233020000 
DBG(48577831)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1025: 0000000233030000 
DBG(48577831)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1028: 0000000233090000 
DBG(48577831)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1030: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1031: 0160000000141013 
DBG(48577831)> MT EXP: Tape to CRT 1032: 0000000233020003 
DBG(48577831)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1035: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1037: 3335444455660201 
DBG(48577831)> MT EXP: Tape to CRT 1038: 0000000233000000 
DBG(48577831)> MT EXP: Tape to CRT 1039: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1040: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1041: 0000000233010000 
DBG(48577831)> MT EXP: Tape to CRT 1042: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1043: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1044: 0000000233030000 
DBG(48577831)> MT EXP: Tape to CRT 1045: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1047: 0160000000141014 
DBG(48577831)> MT EXP: Tape to CRT 1048: 0000000233030000 
DBG(48577831)> MT EXP: Tape to CRT 1049: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1050: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1051: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1052: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1053: 3336000000000201 
DBG(48577831)> MT EXP: Tape to CRT 1054: 0000000233010000 
DBG(48577831)> MT EXP: Tape to CRT 1055: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1056: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1057: 0000000233020000 
DBG(48577831)> MT EXP: Tape to CRT 1058: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1059: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1060: 0000000233090000 
DBG(48577831)> MT EXP: Tape to CRT 1061: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1062: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1063: 0130000000141015 
DBG(48577831)> MT EXP: Tape to CRT 1064: 0000000233090000 
DBG(48577831)> MT EXP: Tape to CRT 1065: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1066: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1067: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1068: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1069: 3336000000000200 
DBG(48577831)> MT EXP: Tape to CRT 1070: 0000000233010000 
DBG(48577831)> MT EXP: Tape to CRT 1071: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1072: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1073: 0000000233030000 
DBG(48577831)> MT EXP: Tape to CRT 1074: 0000000000000000 
DBG(48577831)> MT EXP: Tape to CRT 1075: 0000000000000000 
DBG(48577831)> MT EXP: End Of Block Word: 0190030103770004, data words in block: 77
DBG(48577831)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.09% of medium (14.54 inches)
DBG(48577834)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48577835)> CPU DETAIL: Condition not present 
DBG(48577837)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48577838)> CPU DETAIL: Condition not present 
DBG(48577840)> CPU CMD: Exec 0108: 00 60 0000 1613 0000   REG1 -> (1613) = Start of block      
DBG(48577841)> CPU DETAIL: Write 1613: 0190030103770004 
DBG(48577843)> CPU CMD: Exec 0109: 00 40 0105 1639 0105   incr block num on tape 01 read   
DBG(48577844)> CPU DETAIL: Read R 0105: 0194099900000004 
DBG(48577845)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48577846)> CPU DETAIL: Result: 0194099900000005 
DBG(48577847)> CPU DETAIL: Write 0105: 0194099900000005 
DBG(48577849)> CPU CMD: Exec 0110: 00 60 1653 1621 0000   01 0..0 -> (1621 current input tape)   
DBG(48577850)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48577851)> CPU DETAIL: Write 1621: 0100000000000000 
DBG(48577853)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48577854)> CPU DETAIL: Read R 1613: 0190030103770004 
DBG(48577855)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48577856)> CPU DETAIL: Result: 0000000003770000 
DBG(48577857)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000377 
DBG(48577858)> CPU DETAIL: Write 1604: 0000000000000377 
DBG(48577860)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48577861)> CPU DETAIL: Read R 1613: 0190030103770004 
DBG(48577862)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48577863)> CPU DETAIL: Result: 0000030100000000 
DBG(48577864)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48577867)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48577868)> CPU DETAIL: Read R 1604: 0000000000000377 
DBG(48577869)> CPU DETAIL: Result: 0000000000000076 
DBG(48577870)> CPU DETAIL: Write 1614: 0000000000000076 
DBG(48577872)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48577873)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48577874)> CPU DETAIL: Result: 0000000000000077 
DBG(48577875)> CPU DETAIL: Write 1614: 0000000000000077 
DBG(48577877)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48577878)> CPU DETAIL: M4: 0036 
DBG(48577879)> CPU DETAIL: Clear M6
DBG(48577879)> CPU DETAIL: M6: 0000 
DBG(48577880)> CPU DETAIL: M8: 0013 
DBG(48577883)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48577884)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48577885)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48577887)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48577888)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48577889)> CPU DETAIL: Transfer to T 
DBG(48577889)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48577891)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48577892)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48577893)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48577894)> CPU DETAIL: Result: 0000000000000077 
DBG(48577897)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48577898)> CPU DETAIL: REG1: 0000000000000077
DBG(48577898)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48577900)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48577901)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48577902)> CPU DETAIL: Write 1616: 3333444455660002 
DBG(48577904)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48577905)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48577905)> CPU DETAIL: Read R 0999: 0130000000141111 
DBG(48577906)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48577907)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48577909)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48577910)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48577911)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48577912)> CPU DETAIL: Result: 0000000000000000 
DBG(48577913)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48577914)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48577916)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48577917)> CPU DETAIL: Read R 1616: 3333444455660002 
DBG(48577918)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48577919)> CPU DETAIL: Result: 0000000000000002 
DBG(48577920)> CPU DETAIL: Write 1618: 0000000000000002 
DBG(48577922)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48577923)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48577924)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48577925)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48577928)> CPU CMD: Exec 0154: 00 60 0155 0169 0156   set to skip this event from tape 1 because has no predecessors (so the event 
DBG(48577929)> CPU DETAIL: Read R 0155: 0060164601690141 
DBG(48577930)> CPU DETAIL: Transfer to T 
DBG(48577930)> CPU DETAIL: Write 0169: 0060164601690141 
DBG(48577932)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48577933)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48577934)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48577935)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48577935)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48577936)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577937)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577938)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48577940)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48577941)> CPU DETAIL: Read R 1618: 0000000000000002 
DBG(48577942)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48577943)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48577943)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48577944)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48577945)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48577946)> CPU DETAIL: Write 1618: 9600000000000006 
DBG(48577948)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48577949)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48577950)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48577953)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48577954)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48577955)> CPU DETAIL: Result: 0060101816160000 
DBG(48577956)> CPU DETAIL: Write 0149: 0060101816160000 
DBG(48577958)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48577959)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48577960)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48577961)> CPU DETAIL: Result: 0000000000000000 
DBG(48577962)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48577964)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48577965)> CPU DETAIL: Read R 1618: 9600000000000006 
DBG(48577966)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48577967)> CPU DETAIL: Result: 0000000000000006 
DBG(48577968)> CPU DETAIL: Write 1618: 0000000000000006 
DBG(48577970)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48577971)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48577972)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48577973)> CPU DETAIL: Result: 0000000000000013 
DBG(48577974)> CPU DETAIL: Write 1615: 0000000000000013 
DBG(48577976)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48577977)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48577978)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48577981)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48577982)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48577983)> CPU DETAIL: Result: 0658000100130165 
DBG(48577984)> CPU DETAIL: Write 0167: 0658000100130165 
DBG(48577986)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48577987)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48577987)> CPU DETAIL: Read R 0999: 0130000000141111 
DBG(48577988)> CPU DETAIL: Write 0598: 0130000000141111 
DBG(48577990)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48577991)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48577992)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48577993)> CPU DETAIL: Result: 0060699905990000 
DBG(48577994)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48577996)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48577997)> CPU DETAIL: M6: 0001 
DBG(48577998)> CPU DETAIL: Transfer to T 
DBG(48578000)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578001)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48578001)> CPU DETAIL: Read R 1000: 0000000233000000 
DBG(48578002)> CPU DETAIL: Write 0599: 0000000233000000 
DBG(48578004)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578005)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48578006)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578007)> CPU DETAIL: Result: 0060699906000000 
DBG(48578008)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48578010)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578011)> CPU DETAIL: M6: 0002 
DBG(48578012)> CPU DETAIL: Transfer to T 
DBG(48578014)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578015)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48578015)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48578016)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48578018)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578019)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48578020)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578021)> CPU DETAIL: Result: 0060699906010000 
DBG(48578022)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48578024)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578025)> CPU DETAIL: M6: 0003 
DBG(48578026)> CPU DETAIL: Transfer to T 
DBG(48578028)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578029)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48578029)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48578030)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48578032)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578033)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48578034)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578035)> CPU DETAIL: Result: 0060699906020000 
DBG(48578036)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48578038)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578039)> CPU DETAIL: M6: 0004 
DBG(48578040)> CPU DETAIL: Transfer to T 
DBG(48578042)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578043)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48578043)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48578044)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48578046)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578047)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48578048)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578049)> CPU DETAIL: Result: 0060699906030000 
DBG(48578050)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48578052)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578053)> CPU DETAIL: M6: 0005 
DBG(48578054)> CPU DETAIL: Transfer to T 
DBG(48578056)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578057)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48578057)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48578058)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48578060)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578061)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48578062)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578063)> CPU DETAIL: Result: 0060699906040000 
DBG(48578064)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48578066)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578067)> CPU DETAIL: M6: 0006 
DBG(48578068)> CPU DETAIL: Transfer to T 
DBG(48578070)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578071)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48578071)> CPU DETAIL: Read R 1005: 3333444455660002 
DBG(48578072)> CPU DETAIL: Write 0604: 3333444455660002 
DBG(48578074)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578075)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48578076)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578077)> CPU DETAIL: Result: 0060699906050000 
DBG(48578078)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48578080)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578081)> CPU DETAIL: M6: 0007 
DBG(48578082)> CPU DETAIL: Transfer to T 
DBG(48578084)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578085)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48578085)> CPU DETAIL: Read R 1006: 0000000233010000 
DBG(48578086)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48578088)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578089)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48578090)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578091)> CPU DETAIL: Result: 0060699906060000 
DBG(48578092)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48578094)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578095)> CPU DETAIL: M6: 0008 
DBG(48578096)> CPU DETAIL: Transfer to T 
DBG(48578098)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578099)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48578099)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48578100)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48578102)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578103)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48578104)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578105)> CPU DETAIL: Result: 0060699906070000 
DBG(48578106)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48578108)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578109)> CPU DETAIL: M6: 0009 
DBG(48578110)> CPU DETAIL: Transfer to T 
DBG(48578112)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578113)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48578113)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48578114)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48578116)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578117)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48578118)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578119)> CPU DETAIL: Result: 0060699906080000 
DBG(48578120)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48578122)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578123)> CPU DETAIL: M6: 0010 
DBG(48578124)> CPU DETAIL: Transfer to T 
DBG(48578126)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578127)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48578127)> CPU DETAIL: Read R 1009: 0000000233020000 
DBG(48578128)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48578130)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578131)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48578132)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578133)> CPU DETAIL: Result: 0060699906090000 
DBG(48578134)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48578136)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578137)> CPU DETAIL: M6: 0011 
DBG(48578138)> CPU DETAIL: Transfer to T 
DBG(48578140)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578141)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48578141)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48578142)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48578144)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578145)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48578146)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578147)> CPU DETAIL: Result: 0060699906100000 
DBG(48578148)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48578150)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578151)> CPU DETAIL: M6: 0012 
DBG(48578152)> CPU DETAIL: Transfer to T 
DBG(48578154)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578155)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48578155)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48578156)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48578158)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578159)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48578160)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578161)> CPU DETAIL: Result: 0060699906110000 
DBG(48578162)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48578164)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578165)> CPU DETAIL: M6: 0013 
DBG(48578168)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48578169)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48578170)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48578172)> CPU CMD: Exec 0169: 00 60 1646 0169 0141   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48578173)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48578174)> CPU DETAIL: Transfer to T 
DBG(48578174)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48578176)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48578177)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48578178)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48578179)> CPU DETAIL: Result: 0000000000000064 
DBG(48578182)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48578183)> CPU DETAIL: REG1: 0000000000000064
DBG(48578183)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48578185)> CPU CMD: Exec 0149: 00 60 1018 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48578186)> CPU DETAIL: Read R 1018: 3334444455660103 
DBG(48578187)> CPU DETAIL: Write 1616: 3334444455660103 
DBG(48578189)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48578190)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48578190)> CPU DETAIL: Read R 1012: 0190000000141112 
DBG(48578191)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000019 
DBG(48578192)> CPU DETAIL: Write 1619: 0000000000000019 
DBG(48578194)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48578195)> CPU DETAIL: Read R 1616: 3334444455660103 
DBG(48578196)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48578197)> CPU DETAIL: Result: 0000000000000100 
DBG(48578198)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48578199)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48578201)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48578202)> CPU DETAIL: Read R 1616: 3334444455660103 
DBG(48578203)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48578204)> CPU DETAIL: Result: 0000000000000003 
DBG(48578205)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48578207)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48578208)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48578209)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48578210)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48578211)> CPU DETAIL: Transfer to T 
DBG(48578213)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48578214)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48578215)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48578216)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48578216)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48578217)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48578218)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48578219)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48578221)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48578222)> CPU DETAIL: Read R 1618: 0000000000000003 
DBG(48578223)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48578224)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(48578224)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48578225)> CPU DETAIL: Result: 84 0 9 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48578226)> CPU DETAIL: Shift : 96 0 0 0000 0000 0009 00000000 00000000 (0.000000)
DBG(48578227)> CPU DETAIL: Write 1618: 9600000000000009 
DBG(48578229)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48578230)> CPU DETAIL: Read R 1619: 0000000000000019 
DBG(48578231)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001900000000 
DBG(48578234)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48578235)> CPU DETAIL: Read R 0149: 0060101816160000 
DBG(48578236)> CPU DETAIL: Result: 0060103716160000 
DBG(48578237)> CPU DETAIL: Write 0149: 0060103716160000 
DBG(48578239)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48578240)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48578241)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48578242)> CPU DETAIL: Result: 0000000000000003 
DBG(48578243)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48578245)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48578246)> CPU DETAIL: Read R 1618: 9600000000000009 
DBG(48578247)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48578248)> CPU DETAIL: Result: 0000000000000009 
DBG(48578249)> CPU DETAIL: Write 1618: 0000000000000009 
DBG(48578251)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48578252)> CPU DETAIL: Read R 1619: 0000000000000019 
DBG(48578253)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48578254)> CPU DETAIL: Result: 0000000000000032 
DBG(48578255)> CPU DETAIL: Write 1615: 0000000000000032 
DBG(48578257)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48578258)> CPU DETAIL: Read R 1619: 0000000000000019 
DBG(48578259)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000190000 
DBG(48578262)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48578263)> CPU DETAIL: Read R 0167: 0658000100130165 
DBG(48578264)> CPU DETAIL: Result: 0658000100320165 
DBG(48578265)> CPU DETAIL: Write 0167: 0658000100320165 
DBG(48578267)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578268)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48578268)> CPU DETAIL: Read R 1012: 0190000000141112 
DBG(48578269)> CPU DETAIL: Write 0598: 0190000000141112 
DBG(48578271)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578272)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48578273)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578274)> CPU DETAIL: Result: 0060699905990000 
DBG(48578275)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48578277)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578278)> CPU DETAIL: M6: 0014 
DBG(48578279)> CPU DETAIL: Transfer to T 
DBG(48578281)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578282)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48578282)> CPU DETAIL: Read R 1013: 0000000233010000 
DBG(48578283)> CPU DETAIL: Write 0599: 0000000233010000 
DBG(48578285)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578286)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48578287)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578288)> CPU DETAIL: Result: 0060699906000000 
DBG(48578289)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48578291)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578292)> CPU DETAIL: M6: 0015 
DBG(48578293)> CPU DETAIL: Transfer to T 
DBG(48578295)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578296)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48578296)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48578297)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48578299)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578300)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48578301)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578302)> CPU DETAIL: Result: 0060699906010000 
DBG(48578303)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48578305)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578306)> CPU DETAIL: M6: 0016 
DBG(48578307)> CPU DETAIL: Transfer to T 
DBG(48578309)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578310)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48578310)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(48578311)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48578313)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578314)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48578315)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578316)> CPU DETAIL: Result: 0060699906020000 
DBG(48578317)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48578319)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578320)> CPU DETAIL: M6: 0017 
DBG(48578321)> CPU DETAIL: Transfer to T 
DBG(48578323)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578324)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48578324)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(48578325)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48578327)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578328)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48578329)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578330)> CPU DETAIL: Result: 0060699906030000 
DBG(48578331)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48578333)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578334)> CPU DETAIL: M6: 0018 
DBG(48578335)> CPU DETAIL: Transfer to T 
DBG(48578337)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578338)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48578338)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48578339)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48578341)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578342)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48578343)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578344)> CPU DETAIL: Result: 0060699906040000 
DBG(48578345)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48578347)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578348)> CPU DETAIL: M6: 0019 
DBG(48578349)> CPU DETAIL: Transfer to T 
DBG(48578351)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578352)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48578352)> CPU DETAIL: Read R 1018: 3334444455660103 
DBG(48578353)> CPU DETAIL: Write 0604: 3334444455660103 
DBG(48578355)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578356)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48578357)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578358)> CPU DETAIL: Result: 0060699906050000 
DBG(48578359)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48578361)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578362)> CPU DETAIL: M6: 0020 
DBG(48578363)> CPU DETAIL: Transfer to T 
DBG(48578365)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578366)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48578366)> CPU DETAIL: Read R 1019: 0000000233000000 
DBG(48578367)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48578369)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578370)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48578371)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578372)> CPU DETAIL: Result: 0060699906060000 
DBG(48578373)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48578375)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578376)> CPU DETAIL: M6: 0021 
DBG(48578377)> CPU DETAIL: Transfer to T 
DBG(48578379)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578380)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48578380)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48578381)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48578383)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578384)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48578385)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578386)> CPU DETAIL: Result: 0060699906070000 
DBG(48578387)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48578389)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578390)> CPU DETAIL: M6: 0022 
DBG(48578391)> CPU DETAIL: Transfer to T 
DBG(48578393)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578394)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48578394)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(48578395)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48578397)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578398)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48578399)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578400)> CPU DETAIL: Result: 0060699906080000 
DBG(48578401)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48578403)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578404)> CPU DETAIL: M6: 0023 
DBG(48578405)> CPU DETAIL: Transfer to T 
DBG(48578407)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578408)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48578408)> CPU DETAIL: Read R 1022: 0000000233020000 
DBG(48578409)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48578411)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578412)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48578413)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578414)> CPU DETAIL: Result: 0060699906090000 
DBG(48578415)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48578417)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578418)> CPU DETAIL: M6: 0024 
DBG(48578419)> CPU DETAIL: Transfer to T 
DBG(48578421)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578422)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48578422)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48578423)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48578425)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578426)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48578427)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578428)> CPU DETAIL: Result: 0060699906100000 
DBG(48578429)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48578431)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578432)> CPU DETAIL: M6: 0025 
DBG(48578433)> CPU DETAIL: Transfer to T 
DBG(48578435)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578436)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48578436)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48578437)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48578439)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578440)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48578441)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578442)> CPU DETAIL: Result: 0060699906110000 
DBG(48578443)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48578445)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578446)> CPU DETAIL: M6: 0026 
DBG(48578447)> CPU DETAIL: Transfer to T 
DBG(48578449)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578450)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48578450)> CPU DETAIL: Read R 1025: 0000000233030000 
DBG(48578451)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48578453)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578454)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48578455)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578456)> CPU DETAIL: Result: 0060699906120000 
DBG(48578457)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48578459)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578460)> CPU DETAIL: M6: 0027 
DBG(48578461)> CPU DETAIL: Transfer to T 
DBG(48578463)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578464)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48578464)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(48578465)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48578467)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578468)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48578469)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578470)> CPU DETAIL: Result: 0060699906130000 
DBG(48578471)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48578473)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578474)> CPU DETAIL: M6: 0028 
DBG(48578475)> CPU DETAIL: Transfer to T 
DBG(48578477)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578478)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48578478)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48578479)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48578481)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578482)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48578483)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578484)> CPU DETAIL: Result: 0060699906140000 
DBG(48578485)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48578487)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578488)> CPU DETAIL: M6: 0029 
DBG(48578489)> CPU DETAIL: Transfer to T 
DBG(48578491)> CPU CMD: Exec 0165: 00 60 6999 0614 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578492)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48578492)> CPU DETAIL: Read R 1028: 0000000233090000 
DBG(48578493)> CPU DETAIL: Write 0614: 0000000233090000 
DBG(48578495)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578496)> CPU DETAIL: Read R 0165: 0060699906140000 
DBG(48578497)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578498)> CPU DETAIL: Result: 0060699906150000 
DBG(48578499)> CPU DETAIL: Write 0165: 0060699906150000 
DBG(48578501)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578502)> CPU DETAIL: M6: 0030 
DBG(48578503)> CPU DETAIL: Transfer to T 
DBG(48578505)> CPU CMD: Exec 0165: 00 60 6999 0615 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578506)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48578506)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(48578507)> CPU DETAIL: Write 0615: 0000000000000000 
DBG(48578509)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578510)> CPU DETAIL: Read R 0165: 0060699906150000 
DBG(48578511)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578512)> CPU DETAIL: Result: 0060699906160000 
DBG(48578513)> CPU DETAIL: Write 0165: 0060699906160000 
DBG(48578515)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578516)> CPU DETAIL: M6: 0031 
DBG(48578517)> CPU DETAIL: Transfer to T 
DBG(48578519)> CPU CMD: Exec 0165: 00 60 6999 0616 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48578520)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48578520)> CPU DETAIL: Read R 1030: 0000000000000000 
DBG(48578521)> CPU DETAIL: Write 0616: 0000000000000000 
DBG(48578523)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48578524)> CPU DETAIL: Read R 0165: 0060699906160000 
DBG(48578525)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578526)> CPU DETAIL: Result: 0060699906170000 
DBG(48578527)> CPU DETAIL: Write 0165: 0060699906170000 
DBG(48578529)> CPU CMD: Exec 0167: 06 58 0001 0032 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48578530)> CPU DETAIL: M6: 0032 
DBG(48578533)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48578534)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48578535)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48578537)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48578540)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48578541)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48578542)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48578545)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48578546)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48578547)> CPU DETAIL: Result: 0000000700000000 
DBG(48578550)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48578551)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48578552)> CPU DETAIL: Result: 0042440416550000 
DBG(48578553)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48578555)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48578556)> CPU DETAIL: Read R 0599: 0000000233010000 
DBG(48578557)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48578558)> CPU DETAIL: Result: 0000000233010000 
DBG(48578559)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48578561)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48578562)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48578562)> CPU DETAIL: Read R 0440: 0000000233010000 
DBG(48578563)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48578564)> CPU DETAIL: Result: 0000000233010000 
DBG(48578567)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48578568)> CPU DETAIL: Read S 1620: 0000000233010000 
DBG(48578569)> CPU DETAIL: Result: 0000000000000000 
DBG(48578572)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48578573)> CPU DETAIL: REG1: 0000000000000000
DBG(48578573)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48578575)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48578576)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48578577)> CPU DETAIL: Transfer to T 
DBG(48578577)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48578579)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48578580)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48578581)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48578582)> CPU DETAIL: Result: 0000000233000000 
DBG(48578583)> CPU DETAIL: Write 1620: 0000000233000000 
DBG(48578585)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48578586)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48578586)> CPU DETAIL: Read R 0434: 0000000233000000 
DBG(48578587)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48578588)> CPU DETAIL: Result: 0000000233000000 
DBG(48578591)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48578592)> CPU DETAIL: Read R 1620: 0000000233000000 
DBG(48578593)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48578594)> CPU DETAIL: Transfer to T 
DBG(48578596)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48578597)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48578598)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48578600)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48578601)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48578602)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48578604)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48578605)> CPU DETAIL: Read R 0599: 0000000233010000 
DBG(48578606)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48578607)> CPU DETAIL: Result: 0100000233010000 
DBG(48578608)> CPU DETAIL: Write 0599: 0100000233010000 
DBG(48578610)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48578611)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48578612)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48578614)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48578615)> CPU DETAIL: Read R 0604: 3334444455660103 
DBG(48578616)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48578617)> CPU DETAIL: Result: 0000000000000100 
DBG(48578618)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48578621)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48578622)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48578623)> CPU DETAIL: Result: 0000000000000000 
DBG(48578626)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48578627)> CPU DETAIL: REG1: 0000000000000000
DBG(48578627)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48578629)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48578630)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48578631)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48578633)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48578634)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48578635)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48578637)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48578638)> CPU DETAIL: Read R 0604: 3334444455660103 
DBG(48578639)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48578640)> CPU DETAIL: Result: 0000000000000100 
DBG(48578641)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48578644)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48578645)> CPU DETAIL: Read R 0599: 0100000233010000 
DBG(48578646)> CPU DETAIL: Result: 0000000233010000 
DBG(48578647)> CPU DETAIL: Write 0599: 0000000233010000 
DBG(48578649)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48578650)> CPU DETAIL: Read R 1619: 0000000000000019 
DBG(48578651)> CPU DETAIL: Read S 1626: 0000000000000049 
DBG(48578652)> CPU DETAIL: Result: 0000000000000068 
DBG(48578655)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48578656)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48578657)> CPU DETAIL: Result: 0000000000000132 
DBG(48578660)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48578661)> CPU DETAIL: REG1: 0000000000000132
DBG(48578661)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48578663)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48578664)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48578665)> CPU DETAIL: Transfer to T 
DBG(48578665)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48578667)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48578668)> CPU DETAIL: M4: 0036 
DBG(48578669)> CPU DETAIL: M6: 0032 
DBG(48578670)> CPU DETAIL: Clear M8
DBG(48578670)> CPU DETAIL: M8: 0000 
DBG(48578673)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48578674)> CPU DETAIL: Read R 1619: 0000000000000019 
DBG(48578675)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000190000 
DBG(48578678)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48578679)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48578680)> CPU DETAIL: Result: 0858000100190296 
DBG(48578681)> CPU DETAIL: Write 0299: 0858000100190296 
DBG(48578683)> CPU CMD: Exec 0296: 00 60 8598 0847 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578684)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48578684)> CPU DETAIL: Read R 0598: 0190000000141112 
DBG(48578685)> CPU DETAIL: Write 0847: 0190000000141112 
DBG(48578687)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578688)> CPU DETAIL: Read R 0296: 0060859808470000 
DBG(48578689)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578690)> CPU DETAIL: Result: 0060859808480000 
DBG(48578691)> CPU DETAIL: Write 0296: 0060859808480000 
DBG(48578693)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578694)> CPU DETAIL: Read R 1626: 0000000000000049 
DBG(48578695)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578696)> CPU DETAIL: Result: 0000000000000050 
DBG(48578697)> CPU DETAIL: Write 1626: 0000000000000050 
DBG(48578699)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578700)> CPU DETAIL: M8: 0001 
DBG(48578701)> CPU DETAIL: Transfer to T 
DBG(48578703)> CPU CMD: Exec 0296: 00 60 8598 0848 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578704)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48578704)> CPU DETAIL: Read R 0599: 0000000233010000 
DBG(48578705)> CPU DETAIL: Write 0848: 0000000233010000 
DBG(48578707)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578708)> CPU DETAIL: Read R 0296: 0060859808480000 
DBG(48578709)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578710)> CPU DETAIL: Result: 0060859808490000 
DBG(48578711)> CPU DETAIL: Write 0296: 0060859808490000 
DBG(48578713)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578714)> CPU DETAIL: Read R 1626: 0000000000000050 
DBG(48578715)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578716)> CPU DETAIL: Result: 0000000000000051 
DBG(48578717)> CPU DETAIL: Write 1626: 0000000000000051 
DBG(48578719)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578720)> CPU DETAIL: M8: 0002 
DBG(48578721)> CPU DETAIL: Transfer to T 
DBG(48578723)> CPU CMD: Exec 0296: 00 60 8598 0849 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578724)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48578724)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48578725)> CPU DETAIL: Write 0849: 0000000000000000 
DBG(48578727)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578728)> CPU DETAIL: Read R 0296: 0060859808490000 
DBG(48578729)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578730)> CPU DETAIL: Result: 0060859808500000 
DBG(48578731)> CPU DETAIL: Write 0296: 0060859808500000 
DBG(48578733)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578734)> CPU DETAIL: Read R 1626: 0000000000000051 
DBG(48578735)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578736)> CPU DETAIL: Result: 0000000000000052 
DBG(48578737)> CPU DETAIL: Write 1626: 0000000000000052 
DBG(48578739)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578740)> CPU DETAIL: M8: 0003 
DBG(48578741)> CPU DETAIL: Transfer to T 
DBG(48578743)> CPU CMD: Exec 0296: 00 60 8598 0850 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578744)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48578744)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48578745)> CPU DETAIL: Write 0850: 0000000000000000 
DBG(48578747)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578748)> CPU DETAIL: Read R 0296: 0060859808500000 
DBG(48578749)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578750)> CPU DETAIL: Result: 0060859808510000 
DBG(48578751)> CPU DETAIL: Write 0296: 0060859808510000 
DBG(48578753)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578754)> CPU DETAIL: Read R 1626: 0000000000000052 
DBG(48578755)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578756)> CPU DETAIL: Result: 0000000000000053 
DBG(48578757)> CPU DETAIL: Write 1626: 0000000000000053 
DBG(48578759)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578760)> CPU DETAIL: M8: 0004 
DBG(48578761)> CPU DETAIL: Transfer to T 
DBG(48578763)> CPU CMD: Exec 0296: 00 60 8598 0851 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578764)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48578764)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48578765)> CPU DETAIL: Write 0851: 0000000000000000 
DBG(48578767)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578768)> CPU DETAIL: Read R 0296: 0060859808510000 
DBG(48578769)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578770)> CPU DETAIL: Result: 0060859808520000 
DBG(48578771)> CPU DETAIL: Write 0296: 0060859808520000 
DBG(48578773)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578774)> CPU DETAIL: Read R 1626: 0000000000000053 
DBG(48578775)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578776)> CPU DETAIL: Result: 0000000000000054 
DBG(48578777)> CPU DETAIL: Write 1626: 0000000000000054 
DBG(48578779)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578780)> CPU DETAIL: M8: 0005 
DBG(48578781)> CPU DETAIL: Transfer to T 
DBG(48578783)> CPU CMD: Exec 0296: 00 60 8598 0852 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578784)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48578784)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48578785)> CPU DETAIL: Write 0852: 0000000000000000 
DBG(48578787)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578788)> CPU DETAIL: Read R 0296: 0060859808520000 
DBG(48578789)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578790)> CPU DETAIL: Result: 0060859808530000 
DBG(48578791)> CPU DETAIL: Write 0296: 0060859808530000 
DBG(48578793)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578794)> CPU DETAIL: Read R 1626: 0000000000000054 
DBG(48578795)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578796)> CPU DETAIL: Result: 0000000000000055 
DBG(48578797)> CPU DETAIL: Write 1626: 0000000000000055 
DBG(48578799)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578800)> CPU DETAIL: M8: 0006 
DBG(48578801)> CPU DETAIL: Transfer to T 
DBG(48578803)> CPU CMD: Exec 0296: 00 60 8598 0853 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578804)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48578804)> CPU DETAIL: Read R 0604: 3334444455660103 
DBG(48578805)> CPU DETAIL: Write 0853: 3334444455660103 
DBG(48578807)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578808)> CPU DETAIL: Read R 0296: 0060859808530000 
DBG(48578809)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578810)> CPU DETAIL: Result: 0060859808540000 
DBG(48578811)> CPU DETAIL: Write 0296: 0060859808540000 
DBG(48578813)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578814)> CPU DETAIL: Read R 1626: 0000000000000055 
DBG(48578815)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578816)> CPU DETAIL: Result: 0000000000000056 
DBG(48578817)> CPU DETAIL: Write 1626: 0000000000000056 
DBG(48578819)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578820)> CPU DETAIL: M8: 0007 
DBG(48578821)> CPU DETAIL: Transfer to T 
DBG(48578823)> CPU CMD: Exec 0296: 00 60 8598 0854 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578824)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48578824)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48578825)> CPU DETAIL: Write 0854: 0000000233000000 
DBG(48578827)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578828)> CPU DETAIL: Read R 0296: 0060859808540000 
DBG(48578829)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578830)> CPU DETAIL: Result: 0060859808550000 
DBG(48578831)> CPU DETAIL: Write 0296: 0060859808550000 
DBG(48578833)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578834)> CPU DETAIL: Read R 1626: 0000000000000056 
DBG(48578835)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578836)> CPU DETAIL: Result: 0000000000000057 
DBG(48578837)> CPU DETAIL: Write 1626: 0000000000000057 
DBG(48578839)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578840)> CPU DETAIL: M8: 0008 
DBG(48578841)> CPU DETAIL: Transfer to T 
DBG(48578843)> CPU CMD: Exec 0296: 00 60 8598 0855 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578844)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48578844)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48578845)> CPU DETAIL: Write 0855: 0000000000000000 
DBG(48578847)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578848)> CPU DETAIL: Read R 0296: 0060859808550000 
DBG(48578849)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578850)> CPU DETAIL: Result: 0060859808560000 
DBG(48578851)> CPU DETAIL: Write 0296: 0060859808560000 
DBG(48578853)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578854)> CPU DETAIL: Read R 1626: 0000000000000057 
DBG(48578855)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578856)> CPU DETAIL: Result: 0000000000000058 
DBG(48578857)> CPU DETAIL: Write 1626: 0000000000000058 
DBG(48578859)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578860)> CPU DETAIL: M8: 0009 
DBG(48578861)> CPU DETAIL: Transfer to T 
DBG(48578863)> CPU CMD: Exec 0296: 00 60 8598 0856 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578864)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48578864)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48578865)> CPU DETAIL: Write 0856: 0000000000000000 
DBG(48578867)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578868)> CPU DETAIL: Read R 0296: 0060859808560000 
DBG(48578869)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578870)> CPU DETAIL: Result: 0060859808570000 
DBG(48578871)> CPU DETAIL: Write 0296: 0060859808570000 
DBG(48578873)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578874)> CPU DETAIL: Read R 1626: 0000000000000058 
DBG(48578875)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578876)> CPU DETAIL: Result: 0000000000000059 
DBG(48578877)> CPU DETAIL: Write 1626: 0000000000000059 
DBG(48578879)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578880)> CPU DETAIL: M8: 0010 
DBG(48578881)> CPU DETAIL: Transfer to T 
DBG(48578883)> CPU CMD: Exec 0296: 00 60 8598 0857 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578884)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48578884)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48578885)> CPU DETAIL: Write 0857: 0000000233020000 
DBG(48578887)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578888)> CPU DETAIL: Read R 0296: 0060859808570000 
DBG(48578889)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578890)> CPU DETAIL: Result: 0060859808580000 
DBG(48578891)> CPU DETAIL: Write 0296: 0060859808580000 
DBG(48578893)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578894)> CPU DETAIL: Read R 1626: 0000000000000059 
DBG(48578895)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578896)> CPU DETAIL: Result: 0000000000000060 
DBG(48578897)> CPU DETAIL: Write 1626: 0000000000000060 
DBG(48578899)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578900)> CPU DETAIL: M8: 0011 
DBG(48578901)> CPU DETAIL: Transfer to T 
DBG(48578903)> CPU CMD: Exec 0296: 00 60 8598 0858 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578904)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48578904)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48578905)> CPU DETAIL: Write 0858: 0000000000000000 
DBG(48578907)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578908)> CPU DETAIL: Read R 0296: 0060859808580000 
DBG(48578909)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578910)> CPU DETAIL: Result: 0060859808590000 
DBG(48578911)> CPU DETAIL: Write 0296: 0060859808590000 
DBG(48578913)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578914)> CPU DETAIL: Read R 1626: 0000000000000060 
DBG(48578915)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578916)> CPU DETAIL: Result: 0000000000000061 
DBG(48578917)> CPU DETAIL: Write 1626: 0000000000000061 
DBG(48578919)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578920)> CPU DETAIL: M8: 0012 
DBG(48578921)> CPU DETAIL: Transfer to T 
DBG(48578923)> CPU CMD: Exec 0296: 00 60 8598 0859 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578924)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48578924)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48578925)> CPU DETAIL: Write 0859: 0000000000000000 
DBG(48578927)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578928)> CPU DETAIL: Read R 0296: 0060859808590000 
DBG(48578929)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578930)> CPU DETAIL: Result: 0060859808600000 
DBG(48578931)> CPU DETAIL: Write 0296: 0060859808600000 
DBG(48578933)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578934)> CPU DETAIL: Read R 1626: 0000000000000061 
DBG(48578935)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578936)> CPU DETAIL: Result: 0000000000000062 
DBG(48578937)> CPU DETAIL: Write 1626: 0000000000000062 
DBG(48578939)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578940)> CPU DETAIL: M8: 0013 
DBG(48578941)> CPU DETAIL: Transfer to T 
DBG(48578943)> CPU CMD: Exec 0296: 00 60 8598 0860 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578944)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48578944)> CPU DETAIL: Read R 0611: 0000000233030000 
DBG(48578945)> CPU DETAIL: Write 0860: 0000000233030000 
DBG(48578947)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578948)> CPU DETAIL: Read R 0296: 0060859808600000 
DBG(48578949)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578950)> CPU DETAIL: Result: 0060859808610000 
DBG(48578951)> CPU DETAIL: Write 0296: 0060859808610000 
DBG(48578953)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578954)> CPU DETAIL: Read R 1626: 0000000000000062 
DBG(48578955)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578956)> CPU DETAIL: Result: 0000000000000063 
DBG(48578957)> CPU DETAIL: Write 1626: 0000000000000063 
DBG(48578959)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578960)> CPU DETAIL: M8: 0014 
DBG(48578961)> CPU DETAIL: Transfer to T 
DBG(48578963)> CPU CMD: Exec 0296: 00 60 8598 0861 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578964)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48578964)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48578965)> CPU DETAIL: Write 0861: 0000000000000000 
DBG(48578967)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578968)> CPU DETAIL: Read R 0296: 0060859808610000 
DBG(48578969)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578970)> CPU DETAIL: Result: 0060859808620000 
DBG(48578971)> CPU DETAIL: Write 0296: 0060859808620000 
DBG(48578973)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578974)> CPU DETAIL: Read R 1626: 0000000000000063 
DBG(48578975)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578976)> CPU DETAIL: Result: 0000000000000064 
DBG(48578977)> CPU DETAIL: Write 1626: 0000000000000064 
DBG(48578979)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48578980)> CPU DETAIL: M8: 0015 
DBG(48578981)> CPU DETAIL: Transfer to T 
DBG(48578983)> CPU CMD: Exec 0296: 00 60 8598 0862 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48578984)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48578984)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48578985)> CPU DETAIL: Write 0862: 0000000000000000 
DBG(48578987)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48578988)> CPU DETAIL: Read R 0296: 0060859808620000 
DBG(48578989)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48578990)> CPU DETAIL: Result: 0060859808630000 
DBG(48578991)> CPU DETAIL: Write 0296: 0060859808630000 
DBG(48578993)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48578994)> CPU DETAIL: Read R 1626: 0000000000000064 
DBG(48578995)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48578996)> CPU DETAIL: Result: 0000000000000065 
DBG(48578997)> CPU DETAIL: Write 1626: 0000000000000065 
DBG(48578999)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48579000)> CPU DETAIL: M8: 0016 
DBG(48579001)> CPU DETAIL: Transfer to T 
DBG(48579003)> CPU CMD: Exec 0296: 00 60 8598 0863 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48579004)> CPU DETAIL: M8 Address Modifier: 0016 
DBG(48579004)> CPU DETAIL: Read R 0614: 0000000233090000 
DBG(48579005)> CPU DETAIL: Write 0863: 0000000233090000 
DBG(48579007)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48579008)> CPU DETAIL: Read R 0296: 0060859808630000 
DBG(48579009)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579010)> CPU DETAIL: Result: 0060859808640000 
DBG(48579011)> CPU DETAIL: Write 0296: 0060859808640000 
DBG(48579013)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48579014)> CPU DETAIL: Read R 1626: 0000000000000065 
DBG(48579015)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579016)> CPU DETAIL: Result: 0000000000000066 
DBG(48579017)> CPU DETAIL: Write 1626: 0000000000000066 
DBG(48579019)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48579020)> CPU DETAIL: M8: 0017 
DBG(48579021)> CPU DETAIL: Transfer to T 
DBG(48579023)> CPU CMD: Exec 0296: 00 60 8598 0864 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48579024)> CPU DETAIL: M8 Address Modifier: 0017 
DBG(48579024)> CPU DETAIL: Read R 0615: 0000000000000000 
DBG(48579025)> CPU DETAIL: Write 0864: 0000000000000000 
DBG(48579027)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48579028)> CPU DETAIL: Read R 0296: 0060859808640000 
DBG(48579029)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579030)> CPU DETAIL: Result: 0060859808650000 
DBG(48579031)> CPU DETAIL: Write 0296: 0060859808650000 
DBG(48579033)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48579034)> CPU DETAIL: Read R 1626: 0000000000000066 
DBG(48579035)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579036)> CPU DETAIL: Result: 0000000000000067 
DBG(48579037)> CPU DETAIL: Write 1626: 0000000000000067 
DBG(48579039)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48579040)> CPU DETAIL: M8: 0018 
DBG(48579041)> CPU DETAIL: Transfer to T 
DBG(48579043)> CPU CMD: Exec 0296: 00 60 8598 0865 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48579044)> CPU DETAIL: M8 Address Modifier: 0018 
DBG(48579044)> CPU DETAIL: Read R 0616: 0000000000000000 
DBG(48579045)> CPU DETAIL: Write 0865: 0000000000000000 
DBG(48579047)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48579048)> CPU DETAIL: Read R 0296: 0060859808650000 
DBG(48579049)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579050)> CPU DETAIL: Result: 0060859808660000 
DBG(48579051)> CPU DETAIL: Write 0296: 0060859808660000 
DBG(48579053)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48579054)> CPU DETAIL: Read R 1626: 0000000000000067 
DBG(48579055)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579056)> CPU DETAIL: Result: 0000000000000068 
DBG(48579057)> CPU DETAIL: Write 1626: 0000000000000068 
DBG(48579059)> CPU CMD: Exec 0299: 08 58 0001 0019 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48579060)> CPU DETAIL: M8: 0019 
DBG(48579063)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48579066)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48579067)> CPU DETAIL: Transfer to T 
DBG(48579069)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48579070)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48579071)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48579074)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48579075)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579075)> CPU DETAIL: Read R 0434: 0000000233000000 
DBG(48579076)> CPU DETAIL: Result: 0001000233000000 
DBG(48579077)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579077)> CPU DETAIL: Write 0434: 0001000233000000 
DBG(48579079)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48579080)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579080)> CPU DETAIL: Read R 0434: 0001000233000000 
DBG(48579081)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48579082)> CPU DETAIL: Result: 0001000000000000 
DBG(48579083)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48579084)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48579086)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48579087)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579087)> CPU DETAIL: Read R 0439: 3333444455660002 
DBG(48579088)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48579089)> CPU DETAIL: Result: 0000000000000002 
DBG(48579092)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48579093)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48579094)> CPU DETAIL: Result: 0000000000000001 
DBG(48579097)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48579098)> CPU DETAIL: REG1: 0000000000000001
DBG(48579098)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48579100)> CPU CMD: Exec 0249: 00 40 1672 1644 1672   (1672) = +3 to point to next successor   
DBG(48579101)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48579102)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48579103)> CPU DETAIL: Result: 0000001000000000 
DBG(48579104)> CPU DETAIL: Write 1672: 0000001000000000 
DBG(48579106)> CPU CMD: Exec 0250: 00 60 0000 0000 0141   goto 0141 read event from tape 1 input block   
DBG(48579107)> CPU DETAIL: Transfer to T 
DBG(48579109)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48579110)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48579111)> CPU DETAIL: Read S 1615: 0000000000000032 
DBG(48579112)> CPU DETAIL: Result: 0000000000000045 
DBG(48579115)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48579116)> CPU DETAIL: REG1: 0000000000000045
DBG(48579116)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48579118)> CPU CMD: Exec 0149: 00 60 1037 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48579119)> CPU DETAIL: Read R 1037: 3335444455660201 
DBG(48579120)> CPU DETAIL: Write 1616: 3335444455660201 
DBG(48579122)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48579123)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48579123)> CPU DETAIL: Read R 1031: 0160000000141013 
DBG(48579124)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48579125)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48579127)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48579128)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48579129)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48579130)> CPU DETAIL: Result: 0000000000000200 
DBG(48579131)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48579132)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48579134)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48579135)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48579136)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48579137)> CPU DETAIL: Result: 0000000000000001 
DBG(48579138)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48579140)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48579141)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48579142)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48579143)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48579144)> CPU DETAIL: Transfer to T 
DBG(48579146)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48579147)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48579148)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48579149)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48579149)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48579150)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48579151)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48579152)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48579154)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48579155)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48579156)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48579157)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48579157)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48579158)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48579159)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48579160)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48579162)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48579163)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48579164)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48579167)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48579168)> CPU DETAIL: Read R 0149: 0060103716160000 
DBG(48579169)> CPU DETAIL: Result: 0060105316160000 
DBG(48579170)> CPU DETAIL: Write 0149: 0060105316160000 
DBG(48579172)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48579173)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48579174)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48579175)> CPU DETAIL: Result: 0000000000000006 
DBG(48579176)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48579178)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48579179)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48579180)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48579181)> CPU DETAIL: Result: 0000000000000003 
DBG(48579182)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48579184)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48579185)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48579186)> CPU DETAIL: Read S 1615: 0000000000000032 
DBG(48579187)> CPU DETAIL: Result: 0000000000000048 
DBG(48579188)> CPU DETAIL: Write 1615: 0000000000000048 
DBG(48579190)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48579191)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48579192)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48579195)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48579196)> CPU DETAIL: Read R 0167: 0658000100320165 
DBG(48579197)> CPU DETAIL: Result: 0658000100480165 
DBG(48579198)> CPU DETAIL: Write 0167: 0658000100480165 
DBG(48579200)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579201)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48579201)> CPU DETAIL: Read R 1031: 0160000000141013 
DBG(48579202)> CPU DETAIL: Write 0598: 0160000000141013 
DBG(48579204)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579205)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48579206)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579207)> CPU DETAIL: Result: 0060699905990000 
DBG(48579208)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48579210)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579211)> CPU DETAIL: M6: 0033 
DBG(48579212)> CPU DETAIL: Transfer to T 
DBG(48579214)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579215)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48579215)> CPU DETAIL: Read R 1032: 0000000233020003 
DBG(48579216)> CPU DETAIL: Write 0599: 0000000233020003 
DBG(48579218)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579219)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48579220)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579221)> CPU DETAIL: Result: 0060699906000000 
DBG(48579222)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48579224)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579225)> CPU DETAIL: M6: 0034 
DBG(48579226)> CPU DETAIL: Transfer to T 
DBG(48579228)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579229)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48579229)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(48579230)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48579232)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579233)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48579234)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579235)> CPU DETAIL: Result: 0060699906010000 
DBG(48579236)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48579238)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579239)> CPU DETAIL: M6: 0035 
DBG(48579240)> CPU DETAIL: Transfer to T 
DBG(48579242)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579243)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48579243)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(48579244)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48579246)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579247)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48579248)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579249)> CPU DETAIL: Result: 0060699906020000 
DBG(48579250)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48579252)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579253)> CPU DETAIL: M6: 0036 
DBG(48579254)> CPU DETAIL: Transfer to T 
DBG(48579256)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579257)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48579257)> CPU DETAIL: Read R 1035: 0000000000000000 
DBG(48579258)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48579260)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579261)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48579262)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579263)> CPU DETAIL: Result: 0060699906030000 
DBG(48579264)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48579266)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579267)> CPU DETAIL: M6: 0037 
DBG(48579268)> CPU DETAIL: Transfer to T 
DBG(48579270)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579271)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48579271)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(48579272)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48579274)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579275)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48579276)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579277)> CPU DETAIL: Result: 0060699906040000 
DBG(48579278)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48579280)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579281)> CPU DETAIL: M6: 0038 
DBG(48579282)> CPU DETAIL: Transfer to T 
DBG(48579284)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579285)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48579285)> CPU DETAIL: Read R 1037: 3335444455660201 
DBG(48579286)> CPU DETAIL: Write 0604: 3335444455660201 
DBG(48579288)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579289)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48579290)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579291)> CPU DETAIL: Result: 0060699906050000 
DBG(48579292)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48579294)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579295)> CPU DETAIL: M6: 0039 
DBG(48579296)> CPU DETAIL: Transfer to T 
DBG(48579298)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579299)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48579299)> CPU DETAIL: Read R 1038: 0000000233000000 
DBG(48579300)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48579302)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579303)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48579304)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579305)> CPU DETAIL: Result: 0060699906060000 
DBG(48579306)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48579308)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579309)> CPU DETAIL: M6: 0040 
DBG(48579310)> CPU DETAIL: Transfer to T 
DBG(48579312)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579313)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48579313)> CPU DETAIL: Read R 1039: 0000000000000000 
DBG(48579314)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48579316)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579317)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48579318)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579319)> CPU DETAIL: Result: 0060699906070000 
DBG(48579320)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48579322)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579323)> CPU DETAIL: M6: 0041 
DBG(48579324)> CPU DETAIL: Transfer to T 
DBG(48579326)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579327)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48579327)> CPU DETAIL: Read R 1040: 0000000000000000 
DBG(48579328)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48579330)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579331)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48579332)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579333)> CPU DETAIL: Result: 0060699906080000 
DBG(48579334)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48579336)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579337)> CPU DETAIL: M6: 0042 
DBG(48579338)> CPU DETAIL: Transfer to T 
DBG(48579340)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579341)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48579341)> CPU DETAIL: Read R 1041: 0000000233010000 
DBG(48579342)> CPU DETAIL: Write 0608: 0000000233010000 
DBG(48579344)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579345)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48579346)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579347)> CPU DETAIL: Result: 0060699906090000 
DBG(48579348)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48579350)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579351)> CPU DETAIL: M6: 0043 
DBG(48579352)> CPU DETAIL: Transfer to T 
DBG(48579354)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579355)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48579355)> CPU DETAIL: Read R 1042: 0000000000000000 
DBG(48579356)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48579358)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579359)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48579360)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579361)> CPU DETAIL: Result: 0060699906100000 
DBG(48579362)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48579364)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579365)> CPU DETAIL: M6: 0044 
DBG(48579366)> CPU DETAIL: Transfer to T 
DBG(48579368)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579369)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48579369)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(48579370)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48579372)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579373)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48579374)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579375)> CPU DETAIL: Result: 0060699906110000 
DBG(48579376)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48579378)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579379)> CPU DETAIL: M6: 0045 
DBG(48579380)> CPU DETAIL: Transfer to T 
DBG(48579382)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579383)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48579383)> CPU DETAIL: Read R 1044: 0000000233030000 
DBG(48579384)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48579386)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579387)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48579388)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579389)> CPU DETAIL: Result: 0060699906120000 
DBG(48579390)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48579392)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579393)> CPU DETAIL: M6: 0046 
DBG(48579394)> CPU DETAIL: Transfer to T 
DBG(48579396)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579397)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48579397)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(48579398)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48579400)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579401)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48579402)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579403)> CPU DETAIL: Result: 0060699906130000 
DBG(48579404)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48579406)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579407)> CPU DETAIL: M6: 0047 
DBG(48579408)> CPU DETAIL: Transfer to T 
DBG(48579410)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48579411)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48579411)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(48579412)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48579414)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48579415)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48579416)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579417)> CPU DETAIL: Result: 0060699906140000 
DBG(48579418)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48579420)> CPU CMD: Exec 0167: 06 58 0001 0048 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48579421)> CPU DETAIL: M6: 0048 
DBG(48579424)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48579425)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48579426)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48579428)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48579431)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48579432)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48579433)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48579436)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48579437)> CPU DETAIL: Read R 1672: 0000001000000000 
DBG(48579438)> CPU DETAIL: Result: 0000001000000000 
DBG(48579441)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48579442)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48579443)> CPU DETAIL: Result: 0042440716550000 
DBG(48579444)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48579446)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48579447)> CPU DETAIL: Read R 0599: 0000000233020003 
DBG(48579448)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48579449)> CPU DETAIL: Result: 0000000233020000 
DBG(48579450)> CPU DETAIL: Write 1620: 0000000233020000 
DBG(48579452)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48579453)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579453)> CPU DETAIL: Read R 0443: 0000000233020000 
DBG(48579454)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48579455)> CPU DETAIL: Result: 0000000233020000 
DBG(48579458)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48579459)> CPU DETAIL: Read S 1620: 0000000233020000 
DBG(48579460)> CPU DETAIL: Result: 0000000000000000 
DBG(48579463)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48579464)> CPU DETAIL: REG1: 0000000000000000
DBG(48579464)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48579466)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48579467)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48579468)> CPU DETAIL: Transfer to T 
DBG(48579468)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48579470)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48579471)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48579472)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48579473)> CPU DETAIL: Result: 0000000233000000 
DBG(48579474)> CPU DETAIL: Write 1620: 0000000233000000 
DBG(48579476)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48579477)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579477)> CPU DETAIL: Read R 0434: 0001000233000000 
DBG(48579478)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48579479)> CPU DETAIL: Result: 0000000233000000 
DBG(48579482)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48579483)> CPU DETAIL: Read R 1620: 0000000233000000 
DBG(48579484)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48579485)> CPU DETAIL: Transfer to T 
DBG(48579487)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48579488)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48579489)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48579491)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48579492)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48579493)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48579495)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48579496)> CPU DETAIL: Read R 0599: 0000000233020003 
DBG(48579497)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48579498)> CPU DETAIL: Result: 0100000233020003 
DBG(48579499)> CPU DETAIL: Write 0599: 0100000233020003 
DBG(48579501)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48579502)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48579503)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48579505)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48579506)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48579507)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48579508)> CPU DETAIL: Result: 0000000000000200 
DBG(48579509)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48579512)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48579513)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48579514)> CPU DETAIL: Result: 0000000000000001 
DBG(48579517)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48579518)> CPU DETAIL: REG1: 0000000000000001
DBG(48579518)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48579520)> CPU CMD: Exec 0241: 00 60 0177 0250 0000   ???: not all predecessors of tape 1 event found yet   
DBG(48579521)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48579522)> CPU DETAIL: Write 0250: 0060019701960179 
DBG(48579524)> CPU CMD: Exec 0242: 00 60 1667 0272 0000   ???   
DBG(48579525)> CPU DETAIL: Read R 1667: 0060169901960179 
DBG(48579526)> CPU DETAIL: Write 0272: 0060169901960179 
DBG(48579528)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48579529)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48579530)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48579533)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48579534)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579534)> CPU DETAIL: Read R 0434: 0001000233000000 
DBG(48579535)> CPU DETAIL: Result: 0002000233000000 
DBG(48579536)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579536)> CPU DETAIL: Write 0434: 0002000233000000 
DBG(48579538)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48579539)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579539)> CPU DETAIL: Read R 0434: 0002000233000000 
DBG(48579540)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48579541)> CPU DETAIL: Result: 0002000000000000 
DBG(48579542)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000002 
DBG(48579543)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48579545)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48579546)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579546)> CPU DETAIL: Read R 0439: 3333444455660002 
DBG(48579547)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48579548)> CPU DETAIL: Result: 0000000000000002 
DBG(48579551)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48579552)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48579553)> CPU DETAIL: Result: 0000000000000000 
DBG(48579556)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48579557)> CPU DETAIL: REG1: 0000000000000000
DBG(48579557)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48579559)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48579560)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48579561)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48579562)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48579564)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48579565)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579565)> CPU DETAIL: Read R 0439: 3333444455660002 
DBG(48579566)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48579567)> CPU DETAIL: Result: 0000000000000002 
DBG(48579568)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(48579571)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48579572)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579572)> CPU DETAIL: Read R 0434: 0002000233000000 
DBG(48579573)> CPU DETAIL: Result: 0000000233000000 
DBG(48579574)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579574)> CPU DETAIL: Write 0434: 0000000233000000 
DBG(48579576)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48579577)> CPU DETAIL: Read R 1625: 0000000000000036 
DBG(48579578)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48579579)> CPU DETAIL: Result: 0000000000000049 
DBG(48579582)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48579583)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48579584)> CPU DETAIL: Result: 0000000000000151 
DBG(48579587)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48579588)> CPU DETAIL: REG1: 0000000000000151
DBG(48579588)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48579590)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48579591)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48579592)> CPU DETAIL: Transfer to T 
DBG(48579592)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48579594)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48579595)> CPU DETAIL: M4: 0036 
DBG(48579596)> CPU DETAIL: M6: 0048 
DBG(48579597)> CPU DETAIL: Clear M8
DBG(48579597)> CPU DETAIL: M8: 0000 
DBG(48579600)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48579601)> CPU DETAIL: Read R 1612: 0000000000000003 
DBG(48579602)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579603)> CPU DETAIL: Result: 0000000000000004 
DBG(48579604)> CPU DETAIL: Write 1612: 0000000000000004 
DBG(48579606)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48579607)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48579608)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48579611)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48579612)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48579613)> CPU DETAIL: Result: 0858000100130266 
DBG(48579614)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48579616)> CPU CMD: Exec 0266: 00 60 4397 1437 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579617)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48579617)> CPU DETAIL: Read R 0433: 0130000000141111 
DBG(48579618)> CPU DETAIL: Write 1437: 0130000000141111 
DBG(48579620)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579621)> CPU DETAIL: Read R 0266: 0060439714370000 
DBG(48579622)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579623)> CPU DETAIL: Result: 0060439714380000 
DBG(48579624)> CPU DETAIL: Write 0266: 0060439714380000 
DBG(48579626)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579627)> CPU DETAIL: Read R 1625: 0000000000000036 
DBG(48579628)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579629)> CPU DETAIL: Result: 0000000000000037 
DBG(48579630)> CPU DETAIL: Write 1625: 0000000000000037 
DBG(48579632)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579633)> CPU DETAIL: M4: 0037 
DBG(48579634)> CPU DETAIL: M6: 0048 
DBG(48579635)> CPU DETAIL: M8: 0000 
DBG(48579638)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579639)> CPU DETAIL: M8: 0001 
DBG(48579640)> CPU DETAIL: Transfer to T 
DBG(48579642)> CPU CMD: Exec 0266: 00 60 4397 1438 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579643)> CPU DETAIL: M4 Address Modifier: 0037 
DBG(48579643)> CPU DETAIL: Read R 0434: 0000000233000000 
DBG(48579644)> CPU DETAIL: Write 1438: 0000000233000000 
DBG(48579646)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579647)> CPU DETAIL: Read R 0266: 0060439714380000 
DBG(48579648)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579649)> CPU DETAIL: Result: 0060439714390000 
DBG(48579650)> CPU DETAIL: Write 0266: 0060439714390000 
DBG(48579652)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579653)> CPU DETAIL: Read R 1625: 0000000000000037 
DBG(48579654)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579655)> CPU DETAIL: Result: 0000000000000038 
DBG(48579656)> CPU DETAIL: Write 1625: 0000000000000038 
DBG(48579658)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579659)> CPU DETAIL: M4: 0038 
DBG(48579660)> CPU DETAIL: M6: 0048 
DBG(48579661)> CPU DETAIL: M8: 0001 
DBG(48579664)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579665)> CPU DETAIL: M8: 0002 
DBG(48579666)> CPU DETAIL: Transfer to T 
DBG(48579668)> CPU CMD: Exec 0266: 00 60 4397 1439 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579669)> CPU DETAIL: M4 Address Modifier: 0038 
DBG(48579669)> CPU DETAIL: Read R 0435: 0000000000000000 
DBG(48579670)> CPU DETAIL: Write 1439: 0000000000000000 
DBG(48579672)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579673)> CPU DETAIL: Read R 0266: 0060439714390000 
DBG(48579674)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579675)> CPU DETAIL: Result: 0060439714400000 
DBG(48579676)> CPU DETAIL: Write 0266: 0060439714400000 
DBG(48579678)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579679)> CPU DETAIL: Read R 1625: 0000000000000038 
DBG(48579680)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579681)> CPU DETAIL: Result: 0000000000000039 
DBG(48579682)> CPU DETAIL: Write 1625: 0000000000000039 
DBG(48579684)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579685)> CPU DETAIL: M4: 0039 
DBG(48579686)> CPU DETAIL: M6: 0048 
DBG(48579687)> CPU DETAIL: M8: 0002 
DBG(48579690)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579691)> CPU DETAIL: M8: 0003 
DBG(48579692)> CPU DETAIL: Transfer to T 
DBG(48579694)> CPU CMD: Exec 0266: 00 60 4397 1440 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579695)> CPU DETAIL: M4 Address Modifier: 0039 
DBG(48579695)> CPU DETAIL: Read R 0436: 0000000000000000 
DBG(48579696)> CPU DETAIL: Write 1440: 0000000000000000 
DBG(48579698)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579699)> CPU DETAIL: Read R 0266: 0060439714400000 
DBG(48579700)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579701)> CPU DETAIL: Result: 0060439714410000 
DBG(48579702)> CPU DETAIL: Write 0266: 0060439714410000 
DBG(48579704)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579705)> CPU DETAIL: Read R 1625: 0000000000000039 
DBG(48579706)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579707)> CPU DETAIL: Result: 0000000000000040 
DBG(48579708)> CPU DETAIL: Write 1625: 0000000000000040 
DBG(48579710)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579711)> CPU DETAIL: M4: 0040 
DBG(48579712)> CPU DETAIL: M6: 0048 
DBG(48579713)> CPU DETAIL: M8: 0003 
DBG(48579716)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579717)> CPU DETAIL: M8: 0004 
DBG(48579718)> CPU DETAIL: Transfer to T 
DBG(48579720)> CPU CMD: Exec 0266: 00 60 4397 1441 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579721)> CPU DETAIL: M4 Address Modifier: 0040 
DBG(48579721)> CPU DETAIL: Read R 0437: 0000000000000000 
DBG(48579722)> CPU DETAIL: Write 1441: 0000000000000000 
DBG(48579724)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579725)> CPU DETAIL: Read R 0266: 0060439714410000 
DBG(48579726)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579727)> CPU DETAIL: Result: 0060439714420000 
DBG(48579728)> CPU DETAIL: Write 0266: 0060439714420000 
DBG(48579730)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579731)> CPU DETAIL: Read R 1625: 0000000000000040 
DBG(48579732)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579733)> CPU DETAIL: Result: 0000000000000041 
DBG(48579734)> CPU DETAIL: Write 1625: 0000000000000041 
DBG(48579736)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579737)> CPU DETAIL: M4: 0041 
DBG(48579738)> CPU DETAIL: M6: 0048 
DBG(48579739)> CPU DETAIL: M8: 0004 
DBG(48579742)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579743)> CPU DETAIL: M8: 0005 
DBG(48579744)> CPU DETAIL: Transfer to T 
DBG(48579746)> CPU CMD: Exec 0266: 00 60 4397 1442 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579747)> CPU DETAIL: M4 Address Modifier: 0041 
DBG(48579747)> CPU DETAIL: Read R 0438: 0000000000000000 
DBG(48579748)> CPU DETAIL: Write 1442: 0000000000000000 
DBG(48579750)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579751)> CPU DETAIL: Read R 0266: 0060439714420000 
DBG(48579752)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579753)> CPU DETAIL: Result: 0060439714430000 
DBG(48579754)> CPU DETAIL: Write 0266: 0060439714430000 
DBG(48579756)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579757)> CPU DETAIL: Read R 1625: 0000000000000041 
DBG(48579758)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579759)> CPU DETAIL: Result: 0000000000000042 
DBG(48579760)> CPU DETAIL: Write 1625: 0000000000000042 
DBG(48579762)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579763)> CPU DETAIL: M4: 0042 
DBG(48579764)> CPU DETAIL: M6: 0048 
DBG(48579765)> CPU DETAIL: M8: 0005 
DBG(48579768)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579769)> CPU DETAIL: M8: 0006 
DBG(48579770)> CPU DETAIL: Transfer to T 
DBG(48579772)> CPU CMD: Exec 0266: 00 60 4397 1443 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579773)> CPU DETAIL: M4 Address Modifier: 0042 
DBG(48579773)> CPU DETAIL: Read R 0439: 3333444455660002 
DBG(48579774)> CPU DETAIL: Write 1443: 3333444455660002 
DBG(48579776)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579777)> CPU DETAIL: Read R 0266: 0060439714430000 
DBG(48579778)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579779)> CPU DETAIL: Result: 0060439714440000 
DBG(48579780)> CPU DETAIL: Write 0266: 0060439714440000 
DBG(48579782)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579783)> CPU DETAIL: Read R 1625: 0000000000000042 
DBG(48579784)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579785)> CPU DETAIL: Result: 0000000000000043 
DBG(48579786)> CPU DETAIL: Write 1625: 0000000000000043 
DBG(48579788)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579789)> CPU DETAIL: M4: 0043 
DBG(48579790)> CPU DETAIL: M6: 0048 
DBG(48579791)> CPU DETAIL: M8: 0006 
DBG(48579794)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579795)> CPU DETAIL: M8: 0007 
DBG(48579796)> CPU DETAIL: Transfer to T 
DBG(48579798)> CPU CMD: Exec 0266: 00 60 4397 1444 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579799)> CPU DETAIL: M4 Address Modifier: 0043 
DBG(48579799)> CPU DETAIL: Read R 0440: 0000000233010000 
DBG(48579800)> CPU DETAIL: Write 1444: 0000000233010000 
DBG(48579802)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579803)> CPU DETAIL: Read R 0266: 0060439714440000 
DBG(48579804)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579805)> CPU DETAIL: Result: 0060439714450000 
DBG(48579806)> CPU DETAIL: Write 0266: 0060439714450000 
DBG(48579808)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579809)> CPU DETAIL: Read R 1625: 0000000000000043 
DBG(48579810)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579811)> CPU DETAIL: Result: 0000000000000044 
DBG(48579812)> CPU DETAIL: Write 1625: 0000000000000044 
DBG(48579814)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579815)> CPU DETAIL: M4: 0044 
DBG(48579816)> CPU DETAIL: M6: 0048 
DBG(48579817)> CPU DETAIL: M8: 0007 
DBG(48579820)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579821)> CPU DETAIL: M8: 0008 
DBG(48579822)> CPU DETAIL: Transfer to T 
DBG(48579824)> CPU CMD: Exec 0266: 00 60 4397 1445 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579825)> CPU DETAIL: M4 Address Modifier: 0044 
DBG(48579825)> CPU DETAIL: Read R 0441: 0000000000000000 
DBG(48579826)> CPU DETAIL: Write 1445: 0000000000000000 
DBG(48579828)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579829)> CPU DETAIL: Read R 0266: 0060439714450000 
DBG(48579830)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579831)> CPU DETAIL: Result: 0060439714460000 
DBG(48579832)> CPU DETAIL: Write 0266: 0060439714460000 
DBG(48579834)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579835)> CPU DETAIL: Read R 1625: 0000000000000044 
DBG(48579836)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579837)> CPU DETAIL: Result: 0000000000000045 
DBG(48579838)> CPU DETAIL: Write 1625: 0000000000000045 
DBG(48579840)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579841)> CPU DETAIL: M4: 0045 
DBG(48579842)> CPU DETAIL: M6: 0048 
DBG(48579843)> CPU DETAIL: M8: 0008 
DBG(48579846)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579847)> CPU DETAIL: M8: 0009 
DBG(48579848)> CPU DETAIL: Transfer to T 
DBG(48579850)> CPU CMD: Exec 0266: 00 60 4397 1446 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579851)> CPU DETAIL: M4 Address Modifier: 0045 
DBG(48579851)> CPU DETAIL: Read R 0442: 0000000000000000 
DBG(48579852)> CPU DETAIL: Write 1446: 0000000000000000 
DBG(48579854)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579855)> CPU DETAIL: Read R 0266: 0060439714460000 
DBG(48579856)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579857)> CPU DETAIL: Result: 0060439714470000 
DBG(48579858)> CPU DETAIL: Write 0266: 0060439714470000 
DBG(48579860)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579861)> CPU DETAIL: Read R 1625: 0000000000000045 
DBG(48579862)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579863)> CPU DETAIL: Result: 0000000000000046 
DBG(48579864)> CPU DETAIL: Write 1625: 0000000000000046 
DBG(48579866)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579867)> CPU DETAIL: M4: 0046 
DBG(48579868)> CPU DETAIL: M6: 0048 
DBG(48579869)> CPU DETAIL: M8: 0009 
DBG(48579872)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579873)> CPU DETAIL: M8: 0010 
DBG(48579874)> CPU DETAIL: Transfer to T 
DBG(48579876)> CPU CMD: Exec 0266: 00 60 4397 1447 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579877)> CPU DETAIL: M4 Address Modifier: 0046 
DBG(48579877)> CPU DETAIL: Read R 0443: 0000000233020000 
DBG(48579878)> CPU DETAIL: Write 1447: 0000000233020000 
DBG(48579880)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579881)> CPU DETAIL: Read R 0266: 0060439714470000 
DBG(48579882)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579883)> CPU DETAIL: Result: 0060439714480000 
DBG(48579884)> CPU DETAIL: Write 0266: 0060439714480000 
DBG(48579886)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579887)> CPU DETAIL: Read R 1625: 0000000000000046 
DBG(48579888)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579889)> CPU DETAIL: Result: 0000000000000047 
DBG(48579890)> CPU DETAIL: Write 1625: 0000000000000047 
DBG(48579892)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579893)> CPU DETAIL: M4: 0047 
DBG(48579894)> CPU DETAIL: M6: 0048 
DBG(48579895)> CPU DETAIL: M8: 0010 
DBG(48579898)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579899)> CPU DETAIL: M8: 0011 
DBG(48579900)> CPU DETAIL: Transfer to T 
DBG(48579902)> CPU CMD: Exec 0266: 00 60 4397 1448 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579903)> CPU DETAIL: M4 Address Modifier: 0047 
DBG(48579903)> CPU DETAIL: Read R 0444: 0000000000000000 
DBG(48579904)> CPU DETAIL: Write 1448: 0000000000000000 
DBG(48579906)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579907)> CPU DETAIL: Read R 0266: 0060439714480000 
DBG(48579908)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579909)> CPU DETAIL: Result: 0060439714490000 
DBG(48579910)> CPU DETAIL: Write 0266: 0060439714490000 
DBG(48579912)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579913)> CPU DETAIL: Read R 1625: 0000000000000047 
DBG(48579914)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579915)> CPU DETAIL: Result: 0000000000000048 
DBG(48579916)> CPU DETAIL: Write 1625: 0000000000000048 
DBG(48579918)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579919)> CPU DETAIL: M4: 0048 
DBG(48579920)> CPU DETAIL: M6: 0048 
DBG(48579921)> CPU DETAIL: M8: 0011 
DBG(48579924)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579925)> CPU DETAIL: M8: 0012 
DBG(48579926)> CPU DETAIL: Transfer to T 
DBG(48579928)> CPU CMD: Exec 0266: 00 60 4397 1449 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48579929)> CPU DETAIL: M4 Address Modifier: 0048 
DBG(48579929)> CPU DETAIL: Read R 0445: 0000000000000000 
DBG(48579930)> CPU DETAIL: Write 1449: 0000000000000000 
DBG(48579932)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48579933)> CPU DETAIL: Read R 0266: 0060439714490000 
DBG(48579934)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48579935)> CPU DETAIL: Result: 0060439714500000 
DBG(48579936)> CPU DETAIL: Write 0266: 0060439714500000 
DBG(48579938)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48579939)> CPU DETAIL: Read R 1625: 0000000000000048 
DBG(48579940)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48579941)> CPU DETAIL: Result: 0000000000000049 
DBG(48579942)> CPU DETAIL: Write 1625: 0000000000000049 
DBG(48579944)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48579945)> CPU DETAIL: M4: 0049 
DBG(48579946)> CPU DETAIL: M6: 0048 
DBG(48579947)> CPU DETAIL: M8: 0012 
DBG(48579950)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48579951)> CPU DETAIL: M8: 0013 
DBG(48579954)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48579957)> CPU CMD: Exec 0272: 00 60 1699 0196 0179   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48579958)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48579959)> CPU DETAIL: Transfer to T 
DBG(48579959)> CPU DETAIL: Write 0196: 0060164601400118 
DBG(48579961)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48579962)> CPU DETAIL: Read R 1611: 0000000000000026 
DBG(48579963)> CPU DETAIL: Read S 1619: 0000000000000016 
DBG(48579964)> CPU DETAIL: Result: 0000000000000042 
DBG(48579967)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48579968)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48579969)> CPU DETAIL: Result: 0000000000000158 
DBG(48579972)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48579973)> CPU DETAIL: REG1: 0000000000000158
DBG(48579973)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48579975)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48579976)> CPU DETAIL: M4: 0049 
DBG(48579977)> CPU DETAIL: M6: 0048 
DBG(48579978)> CPU DETAIL: Clear M8
DBG(48579978)> CPU DETAIL: M8: 0000 
DBG(48579981)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48579982)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48579983)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48579986)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48579987)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48579988)> CPU DETAIL: Result: 0858000100160191 
DBG(48579989)> CPU DETAIL: Write 0194: 0858000100160191 
DBG(48579991)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48579992)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48579993)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48579994)> CPU DETAIL: Result: 0000000233020000 
DBG(48579997)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48579998)> CPU DETAIL: Read R 1636: 0000000232090000 
DBG(48579999)> CPU DETAIL: Diff: REG1: 9999999999070000
DBG(48580000)> CPU DETAIL: Transfer to T 
DBG(48580002)> CPU CMD: Exec 0191: 00 60 8598 1226 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580003)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48580003)> CPU DETAIL: Read R 0598: 0160000000141013 
DBG(48580004)> CPU DETAIL: Write 1226: 0160000000141013 
DBG(48580006)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580007)> CPU DETAIL: Read R 0191: 0060859812260000 
DBG(48580008)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580009)> CPU DETAIL: Result: 0060859812270000 
DBG(48580010)> CPU DETAIL: Write 0191: 0060859812270000 
DBG(48580012)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580013)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580014)> CPU DETAIL: Read S 1611: 0000000000000026 
DBG(48580015)> CPU DETAIL: Result: 0000000000000027 
DBG(48580016)> CPU DETAIL: Write 1611: 0000000000000027 
DBG(48580018)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580019)> CPU DETAIL: M8: 0001 
DBG(48580020)> CPU DETAIL: Transfer to T 
DBG(48580022)> CPU CMD: Exec 0191: 00 60 8598 1227 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580023)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48580023)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48580024)> CPU DETAIL: Write 1227: 0100000233020003 
DBG(48580026)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580027)> CPU DETAIL: Read R 0191: 0060859812270000 
DBG(48580028)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580029)> CPU DETAIL: Result: 0060859812280000 
DBG(48580030)> CPU DETAIL: Write 0191: 0060859812280000 
DBG(48580032)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580033)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580034)> CPU DETAIL: Read S 1611: 0000000000000027 
DBG(48580035)> CPU DETAIL: Result: 0000000000000028 
DBG(48580036)> CPU DETAIL: Write 1611: 0000000000000028 
DBG(48580038)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580039)> CPU DETAIL: M8: 0002 
DBG(48580040)> CPU DETAIL: Transfer to T 
DBG(48580042)> CPU CMD: Exec 0191: 00 60 8598 1228 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580043)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48580043)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48580044)> CPU DETAIL: Write 1228: 0000000000000000 
DBG(48580046)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580047)> CPU DETAIL: Read R 0191: 0060859812280000 
DBG(48580048)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580049)> CPU DETAIL: Result: 0060859812290000 
DBG(48580050)> CPU DETAIL: Write 0191: 0060859812290000 
DBG(48580052)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580053)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580054)> CPU DETAIL: Read S 1611: 0000000000000028 
DBG(48580055)> CPU DETAIL: Result: 0000000000000029 
DBG(48580056)> CPU DETAIL: Write 1611: 0000000000000029 
DBG(48580058)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580059)> CPU DETAIL: M8: 0003 
DBG(48580060)> CPU DETAIL: Transfer to T 
DBG(48580062)> CPU CMD: Exec 0191: 00 60 8598 1229 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580063)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48580063)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48580064)> CPU DETAIL: Write 1229: 0000000000000000 
DBG(48580066)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580067)> CPU DETAIL: Read R 0191: 0060859812290000 
DBG(48580068)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580069)> CPU DETAIL: Result: 0060859812300000 
DBG(48580070)> CPU DETAIL: Write 0191: 0060859812300000 
DBG(48580072)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580073)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580074)> CPU DETAIL: Read S 1611: 0000000000000029 
DBG(48580075)> CPU DETAIL: Result: 0000000000000030 
DBG(48580076)> CPU DETAIL: Write 1611: 0000000000000030 
DBG(48580078)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580079)> CPU DETAIL: M8: 0004 
DBG(48580080)> CPU DETAIL: Transfer to T 
DBG(48580082)> CPU CMD: Exec 0191: 00 60 8598 1230 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580083)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48580083)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48580084)> CPU DETAIL: Write 1230: 0000000000000000 
DBG(48580086)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580087)> CPU DETAIL: Read R 0191: 0060859812300000 
DBG(48580088)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580089)> CPU DETAIL: Result: 0060859812310000 
DBG(48580090)> CPU DETAIL: Write 0191: 0060859812310000 
DBG(48580092)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580093)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580094)> CPU DETAIL: Read S 1611: 0000000000000030 
DBG(48580095)> CPU DETAIL: Result: 0000000000000031 
DBG(48580096)> CPU DETAIL: Write 1611: 0000000000000031 
DBG(48580098)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580099)> CPU DETAIL: M8: 0005 
DBG(48580100)> CPU DETAIL: Transfer to T 
DBG(48580102)> CPU CMD: Exec 0191: 00 60 8598 1231 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580103)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48580103)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48580104)> CPU DETAIL: Write 1231: 0000000000000000 
DBG(48580106)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580107)> CPU DETAIL: Read R 0191: 0060859812310000 
DBG(48580108)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580109)> CPU DETAIL: Result: 0060859812320000 
DBG(48580110)> CPU DETAIL: Write 0191: 0060859812320000 
DBG(48580112)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580113)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580114)> CPU DETAIL: Read S 1611: 0000000000000031 
DBG(48580115)> CPU DETAIL: Result: 0000000000000032 
DBG(48580116)> CPU DETAIL: Write 1611: 0000000000000032 
DBG(48580118)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580119)> CPU DETAIL: M8: 0006 
DBG(48580120)> CPU DETAIL: Transfer to T 
DBG(48580122)> CPU CMD: Exec 0191: 00 60 8598 1232 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580123)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48580123)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48580124)> CPU DETAIL: Write 1232: 3335444455660201 
DBG(48580126)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580127)> CPU DETAIL: Read R 0191: 0060859812320000 
DBG(48580128)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580129)> CPU DETAIL: Result: 0060859812330000 
DBG(48580130)> CPU DETAIL: Write 0191: 0060859812330000 
DBG(48580132)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580133)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580134)> CPU DETAIL: Read S 1611: 0000000000000032 
DBG(48580135)> CPU DETAIL: Result: 0000000000000033 
DBG(48580136)> CPU DETAIL: Write 1611: 0000000000000033 
DBG(48580138)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580139)> CPU DETAIL: M8: 0007 
DBG(48580140)> CPU DETAIL: Transfer to T 
DBG(48580142)> CPU CMD: Exec 0191: 00 60 8598 1233 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580143)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48580143)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48580144)> CPU DETAIL: Write 1233: 0000000233000000 
DBG(48580146)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580147)> CPU DETAIL: Read R 0191: 0060859812330000 
DBG(48580148)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580149)> CPU DETAIL: Result: 0060859812340000 
DBG(48580150)> CPU DETAIL: Write 0191: 0060859812340000 
DBG(48580152)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580153)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580154)> CPU DETAIL: Read S 1611: 0000000000000033 
DBG(48580155)> CPU DETAIL: Result: 0000000000000034 
DBG(48580156)> CPU DETAIL: Write 1611: 0000000000000034 
DBG(48580158)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580159)> CPU DETAIL: M8: 0008 
DBG(48580160)> CPU DETAIL: Transfer to T 
DBG(48580162)> CPU CMD: Exec 0191: 00 60 8598 1234 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580163)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48580163)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48580164)> CPU DETAIL: Write 1234: 0000000000000000 
DBG(48580166)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580167)> CPU DETAIL: Read R 0191: 0060859812340000 
DBG(48580168)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580169)> CPU DETAIL: Result: 0060859812350000 
DBG(48580170)> CPU DETAIL: Write 0191: 0060859812350000 
DBG(48580172)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580173)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580174)> CPU DETAIL: Read S 1611: 0000000000000034 
DBG(48580175)> CPU DETAIL: Result: 0000000000000035 
DBG(48580176)> CPU DETAIL: Write 1611: 0000000000000035 
DBG(48580178)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580179)> CPU DETAIL: M8: 0009 
DBG(48580180)> CPU DETAIL: Transfer to T 
DBG(48580182)> CPU CMD: Exec 0191: 00 60 8598 1235 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580183)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48580183)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48580184)> CPU DETAIL: Write 1235: 0000000000000000 
DBG(48580186)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580187)> CPU DETAIL: Read R 0191: 0060859812350000 
DBG(48580188)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580189)> CPU DETAIL: Result: 0060859812360000 
DBG(48580190)> CPU DETAIL: Write 0191: 0060859812360000 
DBG(48580192)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580193)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580194)> CPU DETAIL: Read S 1611: 0000000000000035 
DBG(48580195)> CPU DETAIL: Result: 0000000000000036 
DBG(48580196)> CPU DETAIL: Write 1611: 0000000000000036 
DBG(48580198)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580199)> CPU DETAIL: M8: 0010 
DBG(48580200)> CPU DETAIL: Transfer to T 
DBG(48580202)> CPU CMD: Exec 0191: 00 60 8598 1236 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580203)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48580203)> CPU DETAIL: Read R 0608: 0000000233010000 
DBG(48580204)> CPU DETAIL: Write 1236: 0000000233010000 
DBG(48580206)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580207)> CPU DETAIL: Read R 0191: 0060859812360000 
DBG(48580208)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580209)> CPU DETAIL: Result: 0060859812370000 
DBG(48580210)> CPU DETAIL: Write 0191: 0060859812370000 
DBG(48580212)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580213)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580214)> CPU DETAIL: Read S 1611: 0000000000000036 
DBG(48580215)> CPU DETAIL: Result: 0000000000000037 
DBG(48580216)> CPU DETAIL: Write 1611: 0000000000000037 
DBG(48580218)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580219)> CPU DETAIL: M8: 0011 
DBG(48580220)> CPU DETAIL: Transfer to T 
DBG(48580222)> CPU CMD: Exec 0191: 00 60 8598 1237 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580223)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48580223)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48580224)> CPU DETAIL: Write 1237: 0000000000000000 
DBG(48580226)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580227)> CPU DETAIL: Read R 0191: 0060859812370000 
DBG(48580228)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580229)> CPU DETAIL: Result: 0060859812380000 
DBG(48580230)> CPU DETAIL: Write 0191: 0060859812380000 
DBG(48580232)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580233)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580234)> CPU DETAIL: Read S 1611: 0000000000000037 
DBG(48580235)> CPU DETAIL: Result: 0000000000000038 
DBG(48580236)> CPU DETAIL: Write 1611: 0000000000000038 
DBG(48580238)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580239)> CPU DETAIL: M8: 0012 
DBG(48580240)> CPU DETAIL: Transfer to T 
DBG(48580242)> CPU CMD: Exec 0191: 00 60 8598 1238 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580243)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48580243)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48580244)> CPU DETAIL: Write 1238: 0000000000000000 
DBG(48580246)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580247)> CPU DETAIL: Read R 0191: 0060859812380000 
DBG(48580248)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580249)> CPU DETAIL: Result: 0060859812390000 
DBG(48580250)> CPU DETAIL: Write 0191: 0060859812390000 
DBG(48580252)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580253)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580254)> CPU DETAIL: Read S 1611: 0000000000000038 
DBG(48580255)> CPU DETAIL: Result: 0000000000000039 
DBG(48580256)> CPU DETAIL: Write 1611: 0000000000000039 
DBG(48580258)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580259)> CPU DETAIL: M8: 0013 
DBG(48580260)> CPU DETAIL: Transfer to T 
DBG(48580262)> CPU CMD: Exec 0191: 00 60 8598 1239 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580263)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48580263)> CPU DETAIL: Read R 0611: 0000000233030000 
DBG(48580264)> CPU DETAIL: Write 1239: 0000000233030000 
DBG(48580266)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580267)> CPU DETAIL: Read R 0191: 0060859812390000 
DBG(48580268)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580269)> CPU DETAIL: Result: 0060859812400000 
DBG(48580270)> CPU DETAIL: Write 0191: 0060859812400000 
DBG(48580272)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580273)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580274)> CPU DETAIL: Read S 1611: 0000000000000039 
DBG(48580275)> CPU DETAIL: Result: 0000000000000040 
DBG(48580276)> CPU DETAIL: Write 1611: 0000000000000040 
DBG(48580278)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580279)> CPU DETAIL: M8: 0014 
DBG(48580280)> CPU DETAIL: Transfer to T 
DBG(48580282)> CPU CMD: Exec 0191: 00 60 8598 1240 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580283)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48580283)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48580284)> CPU DETAIL: Write 1240: 0000000000000000 
DBG(48580286)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580287)> CPU DETAIL: Read R 0191: 0060859812400000 
DBG(48580288)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580289)> CPU DETAIL: Result: 0060859812410000 
DBG(48580290)> CPU DETAIL: Write 0191: 0060859812410000 
DBG(48580292)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580293)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580294)> CPU DETAIL: Read S 1611: 0000000000000040 
DBG(48580295)> CPU DETAIL: Result: 0000000000000041 
DBG(48580296)> CPU DETAIL: Write 1611: 0000000000000041 
DBG(48580298)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580299)> CPU DETAIL: M8: 0015 
DBG(48580300)> CPU DETAIL: Transfer to T 
DBG(48580302)> CPU CMD: Exec 0191: 00 60 8598 1241 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580303)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48580303)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48580304)> CPU DETAIL: Write 1241: 0000000000000000 
DBG(48580306)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580307)> CPU DETAIL: Read R 0191: 0060859812410000 
DBG(48580308)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580309)> CPU DETAIL: Result: 0060859812420000 
DBG(48580310)> CPU DETAIL: Write 0191: 0060859812420000 
DBG(48580312)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580313)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580314)> CPU DETAIL: Read S 1611: 0000000000000041 
DBG(48580315)> CPU DETAIL: Result: 0000000000000042 
DBG(48580316)> CPU DETAIL: Write 1611: 0000000000000042 
DBG(48580318)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580319)> CPU DETAIL: M8: 0016 
DBG(48580322)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48580323)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48580324)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48580325)> CPU DETAIL: Result: 0000000233020000 
DBG(48580326)> CPU DETAIL: Write 1636: 0000000233020000 
DBG(48580328)> CPU CMD: Exec 0196: 00 60 1646 0140 0118   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48580329)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48580330)> CPU DETAIL: Transfer to T 
DBG(48580330)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48580332)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48580333)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48580334)> CPU DETAIL: Read S 1606: 0000000000000049 
DBG(48580335)> CPU DETAIL: Result: 0000000000000010 
DBG(48580338)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48580339)> CPU DETAIL: REG1: 0000000000000010
DBG(48580339)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48580341)> CPU CMD: Exec 0124: 00 60 0452 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48580342)> CPU DETAIL: Read R 0452: 2222444455660001 
DBG(48580343)> CPU DETAIL: Write 1608: 2222444455660001 
DBG(48580345)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48580346)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48580346)> CPU DETAIL: Read R 0446: 0100000000151111 
DBG(48580347)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48580348)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48580350)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48580351)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48580352)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48580353)> CPU DETAIL: Result: 0000000000000000 
DBG(48580354)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48580355)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48580357)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48580358)> CPU DETAIL: Read R 1608: 2222444455660001 
DBG(48580359)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48580360)> CPU DETAIL: Result: 0000000000000001 
DBG(48580361)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48580363)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48580364)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48580365)> CPU DETAIL: Read S 1609: 0000000000000000 
DBG(48580366)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48580369)> CPU CMD: Exec 0129: 00 72 1610 1640 0131   if num successors w7 <> zero goto 0131   
DBG(48580370)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48580371)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48580372)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48580373)> CPU DETAIL: Transfer to T 
DBG(48580375)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48580376)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48580377)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48580378)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48580379)> CPU DETAIL: Transfer to T 
DBG(48580381)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48580382)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48580383)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48580384)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48580384)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48580385)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48580386)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48580387)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48580389)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48580390)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48580391)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48580392)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48580392)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48580393)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48580394)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48580395)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48580397)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48580398)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48580399)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48580400)> CPU DETAIL: Result: 0000000000000000 
DBG(48580401)> CPU DETAIL: Write 1609: 0000000000000000 
DBG(48580403)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48580404)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48580405)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48580406)> CPU DETAIL: Result: 0000000000000003 
DBG(48580407)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48580409)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48580410)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48580411)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48580414)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48580415)> CPU DETAIL: Read R 0124: 0060045216080000 
DBG(48580416)> CPU DETAIL: Result: 0060046216080000 
DBG(48580417)> CPU DETAIL: Write 0124: 0060046216080000 
DBG(48580419)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48580420)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48580421)> CPU DETAIL: Read S 1606: 0000000000000049 
DBG(48580422)> CPU DETAIL: Result: 0000000000000059 
DBG(48580423)> CPU DETAIL: Write 1606: 0000000000000059 
DBG(48580425)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48580428)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48580429)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48580430)> CPU DETAIL: Read S 1615: 0000000000000048 
DBG(48580431)> CPU DETAIL: Result: 0000000000000029 
DBG(48580434)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48580435)> CPU DETAIL: REG1: 0000000000000029
DBG(48580435)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48580437)> CPU CMD: Exec 0149: 00 60 1053 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48580438)> CPU DETAIL: Read R 1053: 3336000000000201 
DBG(48580439)> CPU DETAIL: Write 1616: 3336000000000201 
DBG(48580441)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48580442)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48580442)> CPU DETAIL: Read R 1047: 0160000000141014 
DBG(48580443)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48580444)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48580446)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48580447)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48580448)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48580449)> CPU DETAIL: Result: 0000000000000200 
DBG(48580450)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48580451)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48580453)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48580454)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48580455)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48580456)> CPU DETAIL: Result: 0000000000000001 
DBG(48580457)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48580459)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48580460)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48580461)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48580462)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48580463)> CPU DETAIL: Transfer to T 
DBG(48580465)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48580466)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48580467)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48580468)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48580468)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48580469)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48580470)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48580471)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48580473)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48580474)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48580475)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48580476)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48580476)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48580477)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48580478)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48580479)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48580481)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48580482)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48580483)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48580486)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48580487)> CPU DETAIL: Read R 0149: 0060105316160000 
DBG(48580488)> CPU DETAIL: Result: 0060106916160000 
DBG(48580489)> CPU DETAIL: Write 0149: 0060106916160000 
DBG(48580491)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48580492)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48580493)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48580494)> CPU DETAIL: Result: 0000000000000006 
DBG(48580495)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48580497)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48580498)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48580499)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48580500)> CPU DETAIL: Result: 0000000000000003 
DBG(48580501)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48580503)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48580504)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48580505)> CPU DETAIL: Read S 1615: 0000000000000048 
DBG(48580506)> CPU DETAIL: Result: 0000000000000064 
DBG(48580507)> CPU DETAIL: Write 1615: 0000000000000064 
DBG(48580509)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48580510)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48580511)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48580514)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48580515)> CPU DETAIL: Read R 0167: 0658000100480165 
DBG(48580516)> CPU DETAIL: Result: 0658000100640165 
DBG(48580517)> CPU DETAIL: Write 0167: 0658000100640165 
DBG(48580519)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580520)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48580520)> CPU DETAIL: Read R 1047: 0160000000141014 
DBG(48580521)> CPU DETAIL: Write 0598: 0160000000141014 
DBG(48580523)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580524)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48580525)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580526)> CPU DETAIL: Result: 0060699905990000 
DBG(48580527)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48580529)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580530)> CPU DETAIL: M6: 0049 
DBG(48580531)> CPU DETAIL: Transfer to T 
DBG(48580533)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580534)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48580534)> CPU DETAIL: Read R 1048: 0000000233030000 
DBG(48580535)> CPU DETAIL: Write 0599: 0000000233030000 
DBG(48580537)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580538)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48580539)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580540)> CPU DETAIL: Result: 0060699906000000 
DBG(48580541)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48580543)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580544)> CPU DETAIL: M6: 0050 
DBG(48580545)> CPU DETAIL: Transfer to T 
DBG(48580547)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580548)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48580548)> CPU DETAIL: Read R 1049: 0000000000000000 
DBG(48580549)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48580551)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580552)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48580553)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580554)> CPU DETAIL: Result: 0060699906010000 
DBG(48580555)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48580557)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580558)> CPU DETAIL: M6: 0051 
DBG(48580559)> CPU DETAIL: Transfer to T 
DBG(48580561)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580562)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48580562)> CPU DETAIL: Read R 1050: 0000000000000000 
DBG(48580563)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48580565)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580566)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48580567)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580568)> CPU DETAIL: Result: 0060699906020000 
DBG(48580569)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48580571)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580572)> CPU DETAIL: M6: 0052 
DBG(48580573)> CPU DETAIL: Transfer to T 
DBG(48580575)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580576)> CPU DETAIL: M6 Address Modifier: 0052 
DBG(48580576)> CPU DETAIL: Read R 1051: 0000000000000000 
DBG(48580577)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48580579)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580580)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48580581)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580582)> CPU DETAIL: Result: 0060699906030000 
DBG(48580583)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48580585)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580586)> CPU DETAIL: M6: 0053 
DBG(48580587)> CPU DETAIL: Transfer to T 
DBG(48580589)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580590)> CPU DETAIL: M6 Address Modifier: 0053 
DBG(48580590)> CPU DETAIL: Read R 1052: 0000000000000000 
DBG(48580591)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48580593)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580594)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48580595)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580596)> CPU DETAIL: Result: 0060699906040000 
DBG(48580597)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48580599)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580600)> CPU DETAIL: M6: 0054 
DBG(48580601)> CPU DETAIL: Transfer to T 
DBG(48580603)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580604)> CPU DETAIL: M6 Address Modifier: 0054 
DBG(48580604)> CPU DETAIL: Read R 1053: 3336000000000201 
DBG(48580605)> CPU DETAIL: Write 0604: 3336000000000201 
DBG(48580607)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580608)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48580609)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580610)> CPU DETAIL: Result: 0060699906050000 
DBG(48580611)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48580613)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580614)> CPU DETAIL: M6: 0055 
DBG(48580615)> CPU DETAIL: Transfer to T 
DBG(48580617)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580618)> CPU DETAIL: M6 Address Modifier: 0055 
DBG(48580618)> CPU DETAIL: Read R 1054: 0000000233010000 
DBG(48580619)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48580621)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580622)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48580623)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580624)> CPU DETAIL: Result: 0060699906060000 
DBG(48580625)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48580627)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580628)> CPU DETAIL: M6: 0056 
DBG(48580629)> CPU DETAIL: Transfer to T 
DBG(48580631)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580632)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(48580632)> CPU DETAIL: Read R 1055: 0000000000000000 
DBG(48580633)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48580635)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580636)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48580637)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580638)> CPU DETAIL: Result: 0060699906070000 
DBG(48580639)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48580641)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580642)> CPU DETAIL: M6: 0057 
DBG(48580643)> CPU DETAIL: Transfer to T 
DBG(48580645)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580646)> CPU DETAIL: M6 Address Modifier: 0057 
DBG(48580646)> CPU DETAIL: Read R 1056: 0000000000000000 
DBG(48580647)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48580649)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580650)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48580651)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580652)> CPU DETAIL: Result: 0060699906080000 
DBG(48580653)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48580655)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580656)> CPU DETAIL: M6: 0058 
DBG(48580657)> CPU DETAIL: Transfer to T 
DBG(48580659)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580660)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48580660)> CPU DETAIL: Read R 1057: 0000000233020000 
DBG(48580661)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48580663)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580664)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48580665)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580666)> CPU DETAIL: Result: 0060699906090000 
DBG(48580667)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48580669)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580670)> CPU DETAIL: M6: 0059 
DBG(48580671)> CPU DETAIL: Transfer to T 
DBG(48580673)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580674)> CPU DETAIL: M6 Address Modifier: 0059 
DBG(48580674)> CPU DETAIL: Read R 1058: 0000000000000000 
DBG(48580675)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48580677)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580678)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48580679)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580680)> CPU DETAIL: Result: 0060699906100000 
DBG(48580681)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48580683)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580684)> CPU DETAIL: M6: 0060 
DBG(48580685)> CPU DETAIL: Transfer to T 
DBG(48580687)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580688)> CPU DETAIL: M6 Address Modifier: 0060 
DBG(48580688)> CPU DETAIL: Read R 1059: 0000000000000000 
DBG(48580689)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48580691)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580692)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48580693)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580694)> CPU DETAIL: Result: 0060699906110000 
DBG(48580695)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48580697)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580698)> CPU DETAIL: M6: 0061 
DBG(48580699)> CPU DETAIL: Transfer to T 
DBG(48580701)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580702)> CPU DETAIL: M6 Address Modifier: 0061 
DBG(48580702)> CPU DETAIL: Read R 1060: 0000000233090000 
DBG(48580703)> CPU DETAIL: Write 0611: 0000000233090000 
DBG(48580705)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580706)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48580707)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580708)> CPU DETAIL: Result: 0060699906120000 
DBG(48580709)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48580711)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580712)> CPU DETAIL: M6: 0062 
DBG(48580713)> CPU DETAIL: Transfer to T 
DBG(48580715)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580716)> CPU DETAIL: M6 Address Modifier: 0062 
DBG(48580716)> CPU DETAIL: Read R 1061: 0000000000000000 
DBG(48580717)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48580719)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580720)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48580721)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580722)> CPU DETAIL: Result: 0060699906130000 
DBG(48580723)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48580725)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580726)> CPU DETAIL: M6: 0063 
DBG(48580727)> CPU DETAIL: Transfer to T 
DBG(48580729)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48580730)> CPU DETAIL: M6 Address Modifier: 0063 
DBG(48580730)> CPU DETAIL: Read R 1062: 0000000000000000 
DBG(48580731)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48580733)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48580734)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48580735)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580736)> CPU DETAIL: Result: 0060699906140000 
DBG(48580737)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48580739)> CPU CMD: Exec 0167: 06 58 0001 0064 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48580740)> CPU DETAIL: M6: 0064 
DBG(48580743)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48580744)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48580745)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48580747)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48580750)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48580751)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48580752)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48580755)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48580756)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48580757)> CPU DETAIL: Result: 0000000700000000 
DBG(48580760)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48580761)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48580762)> CPU DETAIL: Result: 0042440416550000 
DBG(48580763)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48580765)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48580766)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48580767)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48580768)> CPU DETAIL: Result: 0000000233030000 
DBG(48580769)> CPU DETAIL: Write 1620: 0000000233030000 
DBG(48580771)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48580772)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48580772)> CPU DETAIL: Read R 0453: 0000000242009990 
DBG(48580773)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48580774)> CPU DETAIL: Result: 0000000242009990 
DBG(48580777)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48580778)> CPU DETAIL: Read S 1620: 0000000233030000 
DBG(48580779)> CPU DETAIL: Result: 0000000008979990 
DBG(48580782)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48580783)> CPU DETAIL: REG1: 0000000008979990
DBG(48580783)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48580785)> CPU CMD: Exec 0177: 00 60 0197 0196 0179   ???, goto 0179   
DBG(48580786)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48580787)> CPU DETAIL: Transfer to T 
DBG(48580787)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48580789)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48580790)> CPU DETAIL: Read R 1611: 0000000000000042 
DBG(48580791)> CPU DETAIL: Read S 1619: 0000000000000016 
DBG(48580792)> CPU DETAIL: Result: 0000000000000058 
DBG(48580795)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48580796)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48580797)> CPU DETAIL: Result: 0000000000000142 
DBG(48580800)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48580801)> CPU DETAIL: REG1: 0000000000000142
DBG(48580801)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48580803)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48580804)> CPU DETAIL: M4: 0049 
DBG(48580805)> CPU DETAIL: M6: 0064 
DBG(48580806)> CPU DETAIL: Clear M8
DBG(48580806)> CPU DETAIL: M8: 0000 
DBG(48580809)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48580810)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48580811)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48580814)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48580815)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48580816)> CPU DETAIL: Result: 0858000100160191 
DBG(48580817)> CPU DETAIL: Write 0194: 0858000100160191 
DBG(48580819)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48580820)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48580821)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48580822)> CPU DETAIL: Result: 0000000233030000 
DBG(48580825)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48580826)> CPU DETAIL: Read R 1636: 0000000233020000 
DBG(48580827)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48580828)> CPU DETAIL: Transfer to T 
DBG(48580830)> CPU CMD: Exec 0191: 00 60 8598 1242 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580831)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48580831)> CPU DETAIL: Read R 0598: 0160000000141014 
DBG(48580832)> CPU DETAIL: Write 1242: 0160000000141014 
DBG(48580834)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580835)> CPU DETAIL: Read R 0191: 0060859812420000 
DBG(48580836)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580837)> CPU DETAIL: Result: 0060859812430000 
DBG(48580838)> CPU DETAIL: Write 0191: 0060859812430000 
DBG(48580840)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580841)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580842)> CPU DETAIL: Read S 1611: 0000000000000042 
DBG(48580843)> CPU DETAIL: Result: 0000000000000043 
DBG(48580844)> CPU DETAIL: Write 1611: 0000000000000043 
DBG(48580846)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580847)> CPU DETAIL: M8: 0001 
DBG(48580848)> CPU DETAIL: Transfer to T 
DBG(48580850)> CPU CMD: Exec 0191: 00 60 8598 1243 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580851)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48580851)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48580852)> CPU DETAIL: Write 1243: 0000000233030000 
DBG(48580854)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580855)> CPU DETAIL: Read R 0191: 0060859812430000 
DBG(48580856)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580857)> CPU DETAIL: Result: 0060859812440000 
DBG(48580858)> CPU DETAIL: Write 0191: 0060859812440000 
DBG(48580860)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580861)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580862)> CPU DETAIL: Read S 1611: 0000000000000043 
DBG(48580863)> CPU DETAIL: Result: 0000000000000044 
DBG(48580864)> CPU DETAIL: Write 1611: 0000000000000044 
DBG(48580866)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580867)> CPU DETAIL: M8: 0002 
DBG(48580868)> CPU DETAIL: Transfer to T 
DBG(48580870)> CPU CMD: Exec 0191: 00 60 8598 1244 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580871)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48580871)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48580872)> CPU DETAIL: Write 1244: 0000000000000000 
DBG(48580874)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580875)> CPU DETAIL: Read R 0191: 0060859812440000 
DBG(48580876)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580877)> CPU DETAIL: Result: 0060859812450000 
DBG(48580878)> CPU DETAIL: Write 0191: 0060859812450000 
DBG(48580880)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580881)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580882)> CPU DETAIL: Read S 1611: 0000000000000044 
DBG(48580883)> CPU DETAIL: Result: 0000000000000045 
DBG(48580884)> CPU DETAIL: Write 1611: 0000000000000045 
DBG(48580886)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580887)> CPU DETAIL: M8: 0003 
DBG(48580888)> CPU DETAIL: Transfer to T 
DBG(48580890)> CPU CMD: Exec 0191: 00 60 8598 1245 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580891)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48580891)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48580892)> CPU DETAIL: Write 1245: 0000000000000000 
DBG(48580894)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580895)> CPU DETAIL: Read R 0191: 0060859812450000 
DBG(48580896)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580897)> CPU DETAIL: Result: 0060859812460000 
DBG(48580898)> CPU DETAIL: Write 0191: 0060859812460000 
DBG(48580900)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580901)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580902)> CPU DETAIL: Read S 1611: 0000000000000045 
DBG(48580903)> CPU DETAIL: Result: 0000000000000046 
DBG(48580904)> CPU DETAIL: Write 1611: 0000000000000046 
DBG(48580906)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580907)> CPU DETAIL: M8: 0004 
DBG(48580908)> CPU DETAIL: Transfer to T 
DBG(48580910)> CPU CMD: Exec 0191: 00 60 8598 1246 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580911)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48580911)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48580912)> CPU DETAIL: Write 1246: 0000000000000000 
DBG(48580914)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580915)> CPU DETAIL: Read R 0191: 0060859812460000 
DBG(48580916)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580917)> CPU DETAIL: Result: 0060859812470000 
DBG(48580918)> CPU DETAIL: Write 0191: 0060859812470000 
DBG(48580920)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580921)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580922)> CPU DETAIL: Read S 1611: 0000000000000046 
DBG(48580923)> CPU DETAIL: Result: 0000000000000047 
DBG(48580924)> CPU DETAIL: Write 1611: 0000000000000047 
DBG(48580926)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580927)> CPU DETAIL: M8: 0005 
DBG(48580928)> CPU DETAIL: Transfer to T 
DBG(48580930)> CPU CMD: Exec 0191: 00 60 8598 1247 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580931)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48580931)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48580932)> CPU DETAIL: Write 1247: 0000000000000000 
DBG(48580934)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580935)> CPU DETAIL: Read R 0191: 0060859812470000 
DBG(48580936)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580937)> CPU DETAIL: Result: 0060859812480000 
DBG(48580938)> CPU DETAIL: Write 0191: 0060859812480000 
DBG(48580940)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580941)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580942)> CPU DETAIL: Read S 1611: 0000000000000047 
DBG(48580943)> CPU DETAIL: Result: 0000000000000048 
DBG(48580944)> CPU DETAIL: Write 1611: 0000000000000048 
DBG(48580946)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580947)> CPU DETAIL: M8: 0006 
DBG(48580948)> CPU DETAIL: Transfer to T 
DBG(48580950)> CPU CMD: Exec 0191: 00 60 8598 1248 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580951)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48580951)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48580952)> CPU DETAIL: Write 1248: 3336000000000201 
DBG(48580954)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580955)> CPU DETAIL: Read R 0191: 0060859812480000 
DBG(48580956)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580957)> CPU DETAIL: Result: 0060859812490000 
DBG(48580958)> CPU DETAIL: Write 0191: 0060859812490000 
DBG(48580960)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580961)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580962)> CPU DETAIL: Read S 1611: 0000000000000048 
DBG(48580963)> CPU DETAIL: Result: 0000000000000049 
DBG(48580964)> CPU DETAIL: Write 1611: 0000000000000049 
DBG(48580966)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580967)> CPU DETAIL: M8: 0007 
DBG(48580968)> CPU DETAIL: Transfer to T 
DBG(48580970)> CPU CMD: Exec 0191: 00 60 8598 1249 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580971)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48580971)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48580972)> CPU DETAIL: Write 1249: 0000000233010000 
DBG(48580974)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580975)> CPU DETAIL: Read R 0191: 0060859812490000 
DBG(48580976)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580977)> CPU DETAIL: Result: 0060859812500000 
DBG(48580978)> CPU DETAIL: Write 0191: 0060859812500000 
DBG(48580980)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48580981)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48580982)> CPU DETAIL: Read S 1611: 0000000000000049 
DBG(48580983)> CPU DETAIL: Result: 0000000000000050 
DBG(48580984)> CPU DETAIL: Write 1611: 0000000000000050 
DBG(48580986)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48580987)> CPU DETAIL: M8: 0008 
DBG(48580988)> CPU DETAIL: Transfer to T 
DBG(48580990)> CPU CMD: Exec 0191: 00 60 8598 1250 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48580991)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48580991)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48580992)> CPU DETAIL: Write 1250: 0000000000000000 
DBG(48580994)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48580995)> CPU DETAIL: Read R 0191: 0060859812500000 
DBG(48580996)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48580997)> CPU DETAIL: Result: 0060859812510000 
DBG(48580998)> CPU DETAIL: Write 0191: 0060859812510000 
DBG(48581000)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581001)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581002)> CPU DETAIL: Read S 1611: 0000000000000050 
DBG(48581003)> CPU DETAIL: Result: 0000000000000051 
DBG(48581004)> CPU DETAIL: Write 1611: 0000000000000051 
DBG(48581006)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581007)> CPU DETAIL: M8: 0009 
DBG(48581008)> CPU DETAIL: Transfer to T 
DBG(48581010)> CPU CMD: Exec 0191: 00 60 8598 1251 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581011)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48581011)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48581012)> CPU DETAIL: Write 1251: 0000000000000000 
DBG(48581014)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581015)> CPU DETAIL: Read R 0191: 0060859812510000 
DBG(48581016)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581017)> CPU DETAIL: Result: 0060859812520000 
DBG(48581018)> CPU DETAIL: Write 0191: 0060859812520000 
DBG(48581020)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581021)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581022)> CPU DETAIL: Read S 1611: 0000000000000051 
DBG(48581023)> CPU DETAIL: Result: 0000000000000052 
DBG(48581024)> CPU DETAIL: Write 1611: 0000000000000052 
DBG(48581026)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581027)> CPU DETAIL: M8: 0010 
DBG(48581028)> CPU DETAIL: Transfer to T 
DBG(48581030)> CPU CMD: Exec 0191: 00 60 8598 1252 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581031)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48581031)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48581032)> CPU DETAIL: Write 1252: 0000000233020000 
DBG(48581034)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581035)> CPU DETAIL: Read R 0191: 0060859812520000 
DBG(48581036)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581037)> CPU DETAIL: Result: 0060859812530000 
DBG(48581038)> CPU DETAIL: Write 0191: 0060859812530000 
DBG(48581040)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581041)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581042)> CPU DETAIL: Read S 1611: 0000000000000052 
DBG(48581043)> CPU DETAIL: Result: 0000000000000053 
DBG(48581044)> CPU DETAIL: Write 1611: 0000000000000053 
DBG(48581046)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581047)> CPU DETAIL: M8: 0011 
DBG(48581048)> CPU DETAIL: Transfer to T 
DBG(48581050)> CPU CMD: Exec 0191: 00 60 8598 1253 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581051)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48581051)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48581052)> CPU DETAIL: Write 1253: 0000000000000000 
DBG(48581054)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581055)> CPU DETAIL: Read R 0191: 0060859812530000 
DBG(48581056)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581057)> CPU DETAIL: Result: 0060859812540000 
DBG(48581058)> CPU DETAIL: Write 0191: 0060859812540000 
DBG(48581060)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581061)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581062)> CPU DETAIL: Read S 1611: 0000000000000053 
DBG(48581063)> CPU DETAIL: Result: 0000000000000054 
DBG(48581064)> CPU DETAIL: Write 1611: 0000000000000054 
DBG(48581066)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581067)> CPU DETAIL: M8: 0012 
DBG(48581068)> CPU DETAIL: Transfer to T 
DBG(48581070)> CPU CMD: Exec 0191: 00 60 8598 1254 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581071)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48581071)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48581072)> CPU DETAIL: Write 1254: 0000000000000000 
DBG(48581074)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581075)> CPU DETAIL: Read R 0191: 0060859812540000 
DBG(48581076)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581077)> CPU DETAIL: Result: 0060859812550000 
DBG(48581078)> CPU DETAIL: Write 0191: 0060859812550000 
DBG(48581080)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581081)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581082)> CPU DETAIL: Read S 1611: 0000000000000054 
DBG(48581083)> CPU DETAIL: Result: 0000000000000055 
DBG(48581084)> CPU DETAIL: Write 1611: 0000000000000055 
DBG(48581086)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581087)> CPU DETAIL: M8: 0013 
DBG(48581088)> CPU DETAIL: Transfer to T 
DBG(48581090)> CPU CMD: Exec 0191: 00 60 8598 1255 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581091)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48581091)> CPU DETAIL: Read R 0611: 0000000233090000 
DBG(48581092)> CPU DETAIL: Write 1255: 0000000233090000 
DBG(48581094)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581095)> CPU DETAIL: Read R 0191: 0060859812550000 
DBG(48581096)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581097)> CPU DETAIL: Result: 0060859812560000 
DBG(48581098)> CPU DETAIL: Write 0191: 0060859812560000 
DBG(48581100)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581101)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581102)> CPU DETAIL: Read S 1611: 0000000000000055 
DBG(48581103)> CPU DETAIL: Result: 0000000000000056 
DBG(48581104)> CPU DETAIL: Write 1611: 0000000000000056 
DBG(48581106)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581107)> CPU DETAIL: M8: 0014 
DBG(48581108)> CPU DETAIL: Transfer to T 
DBG(48581110)> CPU CMD: Exec 0191: 00 60 8598 1256 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581111)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48581111)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48581112)> CPU DETAIL: Write 1256: 0000000000000000 
DBG(48581114)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581115)> CPU DETAIL: Read R 0191: 0060859812560000 
DBG(48581116)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581117)> CPU DETAIL: Result: 0060859812570000 
DBG(48581118)> CPU DETAIL: Write 0191: 0060859812570000 
DBG(48581120)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581121)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581122)> CPU DETAIL: Read S 1611: 0000000000000056 
DBG(48581123)> CPU DETAIL: Result: 0000000000000057 
DBG(48581124)> CPU DETAIL: Write 1611: 0000000000000057 
DBG(48581126)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581127)> CPU DETAIL: M8: 0015 
DBG(48581128)> CPU DETAIL: Transfer to T 
DBG(48581130)> CPU CMD: Exec 0191: 00 60 8598 1257 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581131)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48581131)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48581132)> CPU DETAIL: Write 1257: 0000000000000000 
DBG(48581134)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581135)> CPU DETAIL: Read R 0191: 0060859812570000 
DBG(48581136)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581137)> CPU DETAIL: Result: 0060859812580000 
DBG(48581138)> CPU DETAIL: Write 0191: 0060859812580000 
DBG(48581140)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581141)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581142)> CPU DETAIL: Read S 1611: 0000000000000057 
DBG(48581143)> CPU DETAIL: Result: 0000000000000058 
DBG(48581144)> CPU DETAIL: Write 1611: 0000000000000058 
DBG(48581146)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581147)> CPU DETAIL: M8: 0016 
DBG(48581150)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48581151)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48581152)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48581153)> CPU DETAIL: Result: 0000000233030000 
DBG(48581154)> CPU DETAIL: Write 1636: 0000000233030000 
DBG(48581156)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48581157)> CPU DETAIL: Transfer to T 
DBG(48581159)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48581160)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48581161)> CPU DETAIL: Read S 1615: 0000000000000064 
DBG(48581162)> CPU DETAIL: Result: 0000000000000013 
DBG(48581165)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48581166)> CPU DETAIL: REG1: 0000000000000013
DBG(48581166)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48581168)> CPU CMD: Exec 0149: 00 60 1069 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48581169)> CPU DETAIL: Read R 1069: 3336000000000200 
DBG(48581170)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48581172)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48581173)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48581173)> CPU DETAIL: Read R 1063: 0130000000141015 
DBG(48581174)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48581175)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48581177)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48581178)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48581179)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48581180)> CPU DETAIL: Result: 0000000000000200 
DBG(48581181)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48581182)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48581184)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48581185)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48581186)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48581187)> CPU DETAIL: Result: 0000000000000000 
DBG(48581188)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48581190)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48581191)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48581192)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48581193)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48581194)> CPU DETAIL: Transfer to T 
DBG(48581196)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48581197)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48581198)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48581199)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48581199)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48581200)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581201)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48581202)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48581204)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48581205)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48581206)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48581207)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48581207)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48581208)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581209)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581210)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48581212)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48581213)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48581214)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48581217)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48581218)> CPU DETAIL: Read R 0149: 0060106916160000 
DBG(48581219)> CPU DETAIL: Result: 0060108216160000 
DBG(48581220)> CPU DETAIL: Write 0149: 0060108216160000 
DBG(48581222)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48581223)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48581224)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48581225)> CPU DETAIL: Result: 0000000000000006 
DBG(48581226)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48581228)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48581229)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48581230)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48581231)> CPU DETAIL: Result: 0000000000000000 
DBG(48581232)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48581234)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48581235)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48581236)> CPU DETAIL: Read S 1615: 0000000000000064 
DBG(48581237)> CPU DETAIL: Result: 0000000000000077 
DBG(48581238)> CPU DETAIL: Write 1615: 0000000000000077 
DBG(48581240)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48581241)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48581242)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48581245)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48581246)> CPU DETAIL: Read R 0167: 0658000100640165 
DBG(48581247)> CPU DETAIL: Result: 0658000100770165 
DBG(48581248)> CPU DETAIL: Write 0167: 0658000100770165 
DBG(48581250)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581251)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48581251)> CPU DETAIL: Read R 1063: 0130000000141015 
DBG(48581252)> CPU DETAIL: Write 0598: 0130000000141015 
DBG(48581254)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581255)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48581256)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581257)> CPU DETAIL: Result: 0060699905990000 
DBG(48581258)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48581260)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581261)> CPU DETAIL: M6: 0065 
DBG(48581262)> CPU DETAIL: Transfer to T 
DBG(48581264)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581265)> CPU DETAIL: M6 Address Modifier: 0065 
DBG(48581265)> CPU DETAIL: Read R 1064: 0000000233090000 
DBG(48581266)> CPU DETAIL: Write 0599: 0000000233090000 
DBG(48581268)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581269)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48581270)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581271)> CPU DETAIL: Result: 0060699906000000 
DBG(48581272)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48581274)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581275)> CPU DETAIL: M6: 0066 
DBG(48581276)> CPU DETAIL: Transfer to T 
DBG(48581278)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581279)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(48581279)> CPU DETAIL: Read R 1065: 0000000000000000 
DBG(48581280)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48581282)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581283)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48581284)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581285)> CPU DETAIL: Result: 0060699906010000 
DBG(48581286)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48581288)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581289)> CPU DETAIL: M6: 0067 
DBG(48581290)> CPU DETAIL: Transfer to T 
DBG(48581292)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581293)> CPU DETAIL: M6 Address Modifier: 0067 
DBG(48581293)> CPU DETAIL: Read R 1066: 0000000000000000 
DBG(48581294)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48581296)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581297)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48581298)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581299)> CPU DETAIL: Result: 0060699906020000 
DBG(48581300)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48581302)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581303)> CPU DETAIL: M6: 0068 
DBG(48581304)> CPU DETAIL: Transfer to T 
DBG(48581306)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581307)> CPU DETAIL: M6 Address Modifier: 0068 
DBG(48581307)> CPU DETAIL: Read R 1067: 0000000000000000 
DBG(48581308)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48581310)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581311)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48581312)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581313)> CPU DETAIL: Result: 0060699906030000 
DBG(48581314)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48581316)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581317)> CPU DETAIL: M6: 0069 
DBG(48581318)> CPU DETAIL: Transfer to T 
DBG(48581320)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581321)> CPU DETAIL: M6 Address Modifier: 0069 
DBG(48581321)> CPU DETAIL: Read R 1068: 0000000000000000 
DBG(48581322)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48581324)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581325)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48581326)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581327)> CPU DETAIL: Result: 0060699906040000 
DBG(48581328)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48581330)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581331)> CPU DETAIL: M6: 0070 
DBG(48581332)> CPU DETAIL: Transfer to T 
DBG(48581334)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581335)> CPU DETAIL: M6 Address Modifier: 0070 
DBG(48581335)> CPU DETAIL: Read R 1069: 3336000000000200 
DBG(48581336)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48581338)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581339)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48581340)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581341)> CPU DETAIL: Result: 0060699906050000 
DBG(48581342)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48581344)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581345)> CPU DETAIL: M6: 0071 
DBG(48581346)> CPU DETAIL: Transfer to T 
DBG(48581348)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581349)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48581349)> CPU DETAIL: Read R 1070: 0000000233010000 
DBG(48581350)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48581352)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581353)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48581354)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581355)> CPU DETAIL: Result: 0060699906060000 
DBG(48581356)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48581358)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581359)> CPU DETAIL: M6: 0072 
DBG(48581360)> CPU DETAIL: Transfer to T 
DBG(48581362)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581363)> CPU DETAIL: M6 Address Modifier: 0072 
DBG(48581363)> CPU DETAIL: Read R 1071: 0000000000000000 
DBG(48581364)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48581366)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581367)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48581368)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581369)> CPU DETAIL: Result: 0060699906070000 
DBG(48581370)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48581372)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581373)> CPU DETAIL: M6: 0073 
DBG(48581374)> CPU DETAIL: Transfer to T 
DBG(48581376)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581377)> CPU DETAIL: M6 Address Modifier: 0073 
DBG(48581377)> CPU DETAIL: Read R 1072: 0000000000000000 
DBG(48581378)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48581380)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581381)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48581382)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581383)> CPU DETAIL: Result: 0060699906080000 
DBG(48581384)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48581386)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581387)> CPU DETAIL: M6: 0074 
DBG(48581388)> CPU DETAIL: Transfer to T 
DBG(48581390)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581391)> CPU DETAIL: M6 Address Modifier: 0074 
DBG(48581391)> CPU DETAIL: Read R 1073: 0000000233030000 
DBG(48581392)> CPU DETAIL: Write 0608: 0000000233030000 
DBG(48581394)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581395)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48581396)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581397)> CPU DETAIL: Result: 0060699906090000 
DBG(48581398)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48581400)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581401)> CPU DETAIL: M6: 0075 
DBG(48581402)> CPU DETAIL: Transfer to T 
DBG(48581404)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581405)> CPU DETAIL: M6 Address Modifier: 0075 
DBG(48581405)> CPU DETAIL: Read R 1074: 0000000000000000 
DBG(48581406)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48581408)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581409)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48581410)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581411)> CPU DETAIL: Result: 0060699906100000 
DBG(48581412)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48581414)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581415)> CPU DETAIL: M6: 0076 
DBG(48581416)> CPU DETAIL: Transfer to T 
DBG(48581418)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581419)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(48581419)> CPU DETAIL: Read R 1075: 0000000000000000 
DBG(48581420)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48581422)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581423)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48581424)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581425)> CPU DETAIL: Result: 0060699906110000 
DBG(48581426)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48581428)> CPU CMD: Exec 0167: 06 58 0001 0077 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581429)> CPU DETAIL: M6: 0077 
DBG(48581432)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48581433)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48581434)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48581436)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48581439)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48581440)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48581441)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48581444)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48581445)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48581446)> CPU DETAIL: Result: 0000000700000000 
DBG(48581449)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48581450)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48581451)> CPU DETAIL: Result: 0042440416550000 
DBG(48581452)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48581454)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48581455)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48581456)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48581457)> CPU DETAIL: Result: 0000000233090000 
DBG(48581458)> CPU DETAIL: Write 1620: 0000000233090000 
DBG(48581460)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48581461)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48581461)> CPU DETAIL: Read R 0453: 0000000242009990 
DBG(48581462)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48581463)> CPU DETAIL: Result: 0000000242009990 
DBG(48581466)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48581467)> CPU DETAIL: Read S 1620: 0000000233090000 
DBG(48581468)> CPU DETAIL: Result: 0000000008919990 
DBG(48581471)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48581472)> CPU DETAIL: REG1: 0000000008919990
DBG(48581472)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48581474)> CPU CMD: Exec 0177: 00 60 0197 0196 0179   ???, goto 0179   
DBG(48581475)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48581476)> CPU DETAIL: Transfer to T 
DBG(48581476)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48581478)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48581479)> CPU DETAIL: Read R 1611: 0000000000000058 
DBG(48581480)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48581481)> CPU DETAIL: Result: 0000000000000071 
DBG(48581484)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48581485)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48581486)> CPU DETAIL: Result: 0000000000000129 
DBG(48581489)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48581490)> CPU DETAIL: REG1: 0000000000000129
DBG(48581490)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48581492)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48581493)> CPU DETAIL: M4: 0049 
DBG(48581494)> CPU DETAIL: M6: 0077 
DBG(48581495)> CPU DETAIL: Clear M8
DBG(48581495)> CPU DETAIL: M8: 0000 
DBG(48581498)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48581499)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48581500)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48581503)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48581504)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48581505)> CPU DETAIL: Result: 0858000100130191 
DBG(48581506)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48581508)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48581509)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48581510)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48581511)> CPU DETAIL: Result: 0000000233090000 
DBG(48581514)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48581515)> CPU DETAIL: Read R 1636: 0000000233030000 
DBG(48581516)> CPU DETAIL: Diff: REG1: 9999999999940000
DBG(48581517)> CPU DETAIL: Transfer to T 
DBG(48581519)> CPU CMD: Exec 0191: 00 60 8598 1258 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581520)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48581520)> CPU DETAIL: Read R 0598: 0130000000141015 
DBG(48581521)> CPU DETAIL: Write 1258: 0130000000141015 
DBG(48581523)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581524)> CPU DETAIL: Read R 0191: 0060859812580000 
DBG(48581525)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581526)> CPU DETAIL: Result: 0060859812590000 
DBG(48581527)> CPU DETAIL: Write 0191: 0060859812590000 
DBG(48581529)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581530)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581531)> CPU DETAIL: Read S 1611: 0000000000000058 
DBG(48581532)> CPU DETAIL: Result: 0000000000000059 
DBG(48581533)> CPU DETAIL: Write 1611: 0000000000000059 
DBG(48581535)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581536)> CPU DETAIL: M8: 0001 
DBG(48581537)> CPU DETAIL: Transfer to T 
DBG(48581539)> CPU CMD: Exec 0191: 00 60 8598 1259 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581540)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48581540)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48581541)> CPU DETAIL: Write 1259: 0000000233090000 
DBG(48581543)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581544)> CPU DETAIL: Read R 0191: 0060859812590000 
DBG(48581545)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581546)> CPU DETAIL: Result: 0060859812600000 
DBG(48581547)> CPU DETAIL: Write 0191: 0060859812600000 
DBG(48581549)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581550)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581551)> CPU DETAIL: Read S 1611: 0000000000000059 
DBG(48581552)> CPU DETAIL: Result: 0000000000000060 
DBG(48581553)> CPU DETAIL: Write 1611: 0000000000000060 
DBG(48581555)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581556)> CPU DETAIL: M8: 0002 
DBG(48581557)> CPU DETAIL: Transfer to T 
DBG(48581559)> CPU CMD: Exec 0191: 00 60 8598 1260 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581560)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48581560)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48581561)> CPU DETAIL: Write 1260: 0000000000000000 
DBG(48581563)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581564)> CPU DETAIL: Read R 0191: 0060859812600000 
DBG(48581565)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581566)> CPU DETAIL: Result: 0060859812610000 
DBG(48581567)> CPU DETAIL: Write 0191: 0060859812610000 
DBG(48581569)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581570)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581571)> CPU DETAIL: Read S 1611: 0000000000000060 
DBG(48581572)> CPU DETAIL: Result: 0000000000000061 
DBG(48581573)> CPU DETAIL: Write 1611: 0000000000000061 
DBG(48581575)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581576)> CPU DETAIL: M8: 0003 
DBG(48581577)> CPU DETAIL: Transfer to T 
DBG(48581579)> CPU CMD: Exec 0191: 00 60 8598 1261 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581580)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48581580)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48581581)> CPU DETAIL: Write 1261: 0000000000000000 
DBG(48581583)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581584)> CPU DETAIL: Read R 0191: 0060859812610000 
DBG(48581585)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581586)> CPU DETAIL: Result: 0060859812620000 
DBG(48581587)> CPU DETAIL: Write 0191: 0060859812620000 
DBG(48581589)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581590)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581591)> CPU DETAIL: Read S 1611: 0000000000000061 
DBG(48581592)> CPU DETAIL: Result: 0000000000000062 
DBG(48581593)> CPU DETAIL: Write 1611: 0000000000000062 
DBG(48581595)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581596)> CPU DETAIL: M8: 0004 
DBG(48581597)> CPU DETAIL: Transfer to T 
DBG(48581599)> CPU CMD: Exec 0191: 00 60 8598 1262 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581600)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48581600)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48581601)> CPU DETAIL: Write 1262: 0000000000000000 
DBG(48581603)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581604)> CPU DETAIL: Read R 0191: 0060859812620000 
DBG(48581605)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581606)> CPU DETAIL: Result: 0060859812630000 
DBG(48581607)> CPU DETAIL: Write 0191: 0060859812630000 
DBG(48581609)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581610)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581611)> CPU DETAIL: Read S 1611: 0000000000000062 
DBG(48581612)> CPU DETAIL: Result: 0000000000000063 
DBG(48581613)> CPU DETAIL: Write 1611: 0000000000000063 
DBG(48581615)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581616)> CPU DETAIL: M8: 0005 
DBG(48581617)> CPU DETAIL: Transfer to T 
DBG(48581619)> CPU CMD: Exec 0191: 00 60 8598 1263 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581620)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48581620)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48581621)> CPU DETAIL: Write 1263: 0000000000000000 
DBG(48581623)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581624)> CPU DETAIL: Read R 0191: 0060859812630000 
DBG(48581625)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581626)> CPU DETAIL: Result: 0060859812640000 
DBG(48581627)> CPU DETAIL: Write 0191: 0060859812640000 
DBG(48581629)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581630)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581631)> CPU DETAIL: Read S 1611: 0000000000000063 
DBG(48581632)> CPU DETAIL: Result: 0000000000000064 
DBG(48581633)> CPU DETAIL: Write 1611: 0000000000000064 
DBG(48581635)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581636)> CPU DETAIL: M8: 0006 
DBG(48581637)> CPU DETAIL: Transfer to T 
DBG(48581639)> CPU CMD: Exec 0191: 00 60 8598 1264 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581640)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48581640)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48581641)> CPU DETAIL: Write 1264: 3336000000000200 
DBG(48581643)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581644)> CPU DETAIL: Read R 0191: 0060859812640000 
DBG(48581645)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581646)> CPU DETAIL: Result: 0060859812650000 
DBG(48581647)> CPU DETAIL: Write 0191: 0060859812650000 
DBG(48581649)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581650)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581651)> CPU DETAIL: Read S 1611: 0000000000000064 
DBG(48581652)> CPU DETAIL: Result: 0000000000000065 
DBG(48581653)> CPU DETAIL: Write 1611: 0000000000000065 
DBG(48581655)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581656)> CPU DETAIL: M8: 0007 
DBG(48581657)> CPU DETAIL: Transfer to T 
DBG(48581659)> CPU CMD: Exec 0191: 00 60 8598 1265 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581660)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48581660)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48581661)> CPU DETAIL: Write 1265: 0000000233010000 
DBG(48581663)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581664)> CPU DETAIL: Read R 0191: 0060859812650000 
DBG(48581665)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581666)> CPU DETAIL: Result: 0060859812660000 
DBG(48581667)> CPU DETAIL: Write 0191: 0060859812660000 
DBG(48581669)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581670)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581671)> CPU DETAIL: Read S 1611: 0000000000000065 
DBG(48581672)> CPU DETAIL: Result: 0000000000000066 
DBG(48581673)> CPU DETAIL: Write 1611: 0000000000000066 
DBG(48581675)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581676)> CPU DETAIL: M8: 0008 
DBG(48581677)> CPU DETAIL: Transfer to T 
DBG(48581679)> CPU CMD: Exec 0191: 00 60 8598 1266 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581680)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48581680)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48581681)> CPU DETAIL: Write 1266: 0000000000000000 
DBG(48581683)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581684)> CPU DETAIL: Read R 0191: 0060859812660000 
DBG(48581685)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581686)> CPU DETAIL: Result: 0060859812670000 
DBG(48581687)> CPU DETAIL: Write 0191: 0060859812670000 
DBG(48581689)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581690)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581691)> CPU DETAIL: Read S 1611: 0000000000000066 
DBG(48581692)> CPU DETAIL: Result: 0000000000000067 
DBG(48581693)> CPU DETAIL: Write 1611: 0000000000000067 
DBG(48581695)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581696)> CPU DETAIL: M8: 0009 
DBG(48581697)> CPU DETAIL: Transfer to T 
DBG(48581699)> CPU CMD: Exec 0191: 00 60 8598 1267 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581700)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48581700)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48581701)> CPU DETAIL: Write 1267: 0000000000000000 
DBG(48581703)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581704)> CPU DETAIL: Read R 0191: 0060859812670000 
DBG(48581705)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581706)> CPU DETAIL: Result: 0060859812680000 
DBG(48581707)> CPU DETAIL: Write 0191: 0060859812680000 
DBG(48581709)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581710)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581711)> CPU DETAIL: Read S 1611: 0000000000000067 
DBG(48581712)> CPU DETAIL: Result: 0000000000000068 
DBG(48581713)> CPU DETAIL: Write 1611: 0000000000000068 
DBG(48581715)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581716)> CPU DETAIL: M8: 0010 
DBG(48581717)> CPU DETAIL: Transfer to T 
DBG(48581719)> CPU CMD: Exec 0191: 00 60 8598 1268 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581720)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48581720)> CPU DETAIL: Read R 0608: 0000000233030000 
DBG(48581721)> CPU DETAIL: Write 1268: 0000000233030000 
DBG(48581723)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581724)> CPU DETAIL: Read R 0191: 0060859812680000 
DBG(48581725)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581726)> CPU DETAIL: Result: 0060859812690000 
DBG(48581727)> CPU DETAIL: Write 0191: 0060859812690000 
DBG(48581729)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581730)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581731)> CPU DETAIL: Read S 1611: 0000000000000068 
DBG(48581732)> CPU DETAIL: Result: 0000000000000069 
DBG(48581733)> CPU DETAIL: Write 1611: 0000000000000069 
DBG(48581735)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581736)> CPU DETAIL: M8: 0011 
DBG(48581737)> CPU DETAIL: Transfer to T 
DBG(48581739)> CPU CMD: Exec 0191: 00 60 8598 1269 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581740)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48581740)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48581741)> CPU DETAIL: Write 1269: 0000000000000000 
DBG(48581743)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581744)> CPU DETAIL: Read R 0191: 0060859812690000 
DBG(48581745)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581746)> CPU DETAIL: Result: 0060859812700000 
DBG(48581747)> CPU DETAIL: Write 0191: 0060859812700000 
DBG(48581749)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581750)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581751)> CPU DETAIL: Read S 1611: 0000000000000069 
DBG(48581752)> CPU DETAIL: Result: 0000000000000070 
DBG(48581753)> CPU DETAIL: Write 1611: 0000000000000070 
DBG(48581755)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581756)> CPU DETAIL: M8: 0012 
DBG(48581757)> CPU DETAIL: Transfer to T 
DBG(48581759)> CPU CMD: Exec 0191: 00 60 8598 1270 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48581760)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48581760)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48581761)> CPU DETAIL: Write 1270: 0000000000000000 
DBG(48581763)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48581764)> CPU DETAIL: Read R 0191: 0060859812700000 
DBG(48581765)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581766)> CPU DETAIL: Result: 0060859812710000 
DBG(48581767)> CPU DETAIL: Write 0191: 0060859812710000 
DBG(48581769)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48581770)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581771)> CPU DETAIL: Read S 1611: 0000000000000070 
DBG(48581772)> CPU DETAIL: Result: 0000000000000071 
DBG(48581773)> CPU DETAIL: Write 1611: 0000000000000071 
DBG(48581775)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48581776)> CPU DETAIL: M8: 0013 
DBG(48581779)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48581780)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48581781)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48581782)> CPU DETAIL: Result: 0000000233090000 
DBG(48581783)> CPU DETAIL: Write 1636: 0000000233090000 
DBG(48581785)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48581786)> CPU DETAIL: Transfer to T 
DBG(48581788)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48581789)> CPU DETAIL: Read R 1614: 0000000000000077 
DBG(48581790)> CPU DETAIL: Read S 1615: 0000000000000077 
DBG(48581791)> CPU DETAIL: Result: 0000000000000000 
DBG(48581794)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48581795)> CPU DETAIL: REG1: 0000000000000000
DBG(48581795)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48581797)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48581798)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48581799)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48581801)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48581802)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48581803)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48581805)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48581806)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48581807)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48581809)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48581810)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48581811)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48581813)> CPU CMD: Exec 0148: 00 60 0000 0000 0105   goto read event block from input tape 01   
DBG(48581814)> CPU DETAIL: Transfer to T 
DBG(48581816)> CPU CMD: Exec 0105: 01 94 0999 0000 0005   read input tape 01 -> (0999 input event block tape 01)    
DBG(48581817)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0005
DBG(48581817)> MT DATA: Tape unit 1: init read
DBG(48581817)> MT DETAIL: Read tape record (632 chars, used 2.74 inches, needs 16 msec) from tape 1
DBG(48581817)> MT DETAIL: Tape record contents: D*0190030103330005C*0100000000151111C*0000000241000003C*00000000000000...
DBG(48581817)> MT EXP: Start Of Block Word: 0190030103330005
DBG(48581817)> MT EXP: Read Tape Block number 0005
DBG(48581817)> MT EXP: Read forward addr 0999 to 0000
DBG(48581817)> MT EXP: Tape to CRT 0999: 0100000000151111 
DBG(48581817)> MT EXP: Tape to CRT 1000: 0000000241000003 
DBG(48581817)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1005: 2222444455660001 
DBG(48581817)> MT EXP: Tape to CRT 1006: 0000000242009990 
DBG(48581817)> MT EXP: Tape to CRT 1007: 0104110000000000 
DBG(48581817)> MT EXP: Tape to CRT 1008: 0001209999999997 
DBG(48581817)> MT EXP: Tape to CRT 1009: 0130000000151113 
DBG(48581817)> MT EXP: Tape to CRT 1010: 0000000242009990 
DBG(48581817)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1012: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1015: 0000000000000101 
DBG(48581817)> MT EXP: Tape to CRT 1016: 0000000241000000 
DBG(48581817)> MT EXP: Tape to CRT 1017: 0000000000033555 
DBG(48581817)> MT EXP: Tape to CRT 1018: 0000000000033666 
DBG(48581817)> MT EXP: Tape to CRT 1019: 0000000249999990 
DBG(48581817)> MT EXP: Tape to CRT 1020: 0000000000033555 
DBG(48581817)> MT EXP: Tape to CRT 1021: 0000000000033666 
DBG(48581817)> MT EXP: Tape to CRT 1022: 0100000000151113 
DBG(48581817)> MT EXP: Tape to CRT 1023: 0000000249999990 
DBG(48581817)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1025: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48581817)> MT EXP: Tape to CRT 1028: 0000000000000100 
DBG(48581817)> MT EXP: Tape to CRT 1029: 0000000242009990 
DBG(48581817)> MT EXP: Tape to CRT 1030: 0000000000033555 
DBG(48581817)> MT EXP: Tape to CRT 1031: 0000000000033666 
DBG(48581817)> MT EXP: End Of Block Word: 0190030103330005, data words in block: 33
DBG(48581817)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.10% of medium (17.28 inches)
DBG(48581820)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48581821)> CPU DETAIL: Condition not present 
DBG(48581823)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48581824)> CPU DETAIL: Condition not present 
DBG(48581826)> CPU CMD: Exec 0108: 00 60 0000 1613 0000   REG1 -> (1613) = Start of block      
DBG(48581827)> CPU DETAIL: Write 1613: 0190030103330005 
DBG(48581829)> CPU CMD: Exec 0109: 00 40 0105 1639 0105   incr block num on tape 01 read   
DBG(48581830)> CPU DETAIL: Read R 0105: 0194099900000005 
DBG(48581831)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48581832)> CPU DETAIL: Result: 0194099900000006 
DBG(48581833)> CPU DETAIL: Write 0105: 0194099900000006 
DBG(48581835)> CPU CMD: Exec 0110: 00 60 1653 1621 0000   01 0..0 -> (1621 current input tape)   
DBG(48581836)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48581837)> CPU DETAIL: Write 1621: 0100000000000000 
DBG(48581839)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48581840)> CPU DETAIL: Read R 1613: 0190030103330005 
DBG(48581841)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48581842)> CPU DETAIL: Result: 0000000003330000 
DBG(48581843)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000333 
DBG(48581844)> CPU DETAIL: Write 1604: 0000000000000333 
DBG(48581846)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48581847)> CPU DETAIL: Read R 1613: 0190030103330005 
DBG(48581848)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48581849)> CPU DETAIL: Result: 0000030100000000 
DBG(48581850)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(48581853)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48581854)> CPU DETAIL: Read R 1604: 0000000000000333 
DBG(48581855)> CPU DETAIL: Result: 0000000000000032 
DBG(48581856)> CPU DETAIL: Write 1614: 0000000000000032 
DBG(48581858)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48581859)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48581860)> CPU DETAIL: Result: 0000000000000033 
DBG(48581861)> CPU DETAIL: Write 1614: 0000000000000033 
DBG(48581863)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48581864)> CPU DETAIL: M4: 0049 
DBG(48581865)> CPU DETAIL: Clear M6
DBG(48581865)> CPU DETAIL: M6: 0000 
DBG(48581866)> CPU DETAIL: M8: 0013 
DBG(48581869)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48581870)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48581871)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48581873)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48581874)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48581875)> CPU DETAIL: Transfer to T 
DBG(48581875)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48581877)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48581878)> CPU DETAIL: Read R 1614: 0000000000000033 
DBG(48581879)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48581880)> CPU DETAIL: Result: 0000000000000033 
DBG(48581883)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48581884)> CPU DETAIL: REG1: 0000000000000033
DBG(48581884)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48581886)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48581887)> CPU DETAIL: Read R 1005: 2222444455660001 
DBG(48581888)> CPU DETAIL: Write 1616: 2222444455660001 
DBG(48581890)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48581891)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48581891)> CPU DETAIL: Read R 0999: 0100000000151111 
DBG(48581892)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48581893)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48581895)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48581896)> CPU DETAIL: Read R 1616: 2222444455660001 
DBG(48581897)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48581898)> CPU DETAIL: Result: 0000000000000000 
DBG(48581899)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(48581900)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48581902)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48581903)> CPU DETAIL: Read R 1616: 2222444455660001 
DBG(48581904)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48581905)> CPU DETAIL: Result: 0000000000000001 
DBG(48581906)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48581908)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48581909)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48581910)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48581911)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48581914)> CPU CMD: Exec 0154: 00 60 0155 0169 0156   set to skip this event from tape 1 because has no predecessors (so the event 
DBG(48581915)> CPU DETAIL: Read R 0155: 0060164601690141 
DBG(48581916)> CPU DETAIL: Transfer to T 
DBG(48581916)> CPU DETAIL: Write 0169: 0060164601690141 
DBG(48581918)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48581919)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48581920)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48581921)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48581921)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48581922)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581923)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581924)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48581926)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48581927)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48581928)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48581929)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48581929)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48581930)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48581931)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48581932)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48581934)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48581935)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48581936)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48581939)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48581940)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48581941)> CPU DETAIL: Result: 0060101516160000 
DBG(48581942)> CPU DETAIL: Write 0149: 0060101516160000 
DBG(48581944)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48581945)> CPU DETAIL: Read R 1617: 0000000000000000 
DBG(48581946)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48581947)> CPU DETAIL: Result: 0000000000000000 
DBG(48581948)> CPU DETAIL: Write 1617: 0000000000000000 
DBG(48581950)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48581951)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48581952)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48581953)> CPU DETAIL: Result: 0000000000000003 
DBG(48581954)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48581956)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48581957)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48581958)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48581959)> CPU DETAIL: Result: 0000000000000010 
DBG(48581960)> CPU DETAIL: Write 1615: 0000000000000010 
DBG(48581962)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48581963)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48581964)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48581967)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48581968)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48581969)> CPU DETAIL: Result: 0658000100100165 
DBG(48581970)> CPU DETAIL: Write 0167: 0658000100100165 
DBG(48581972)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581973)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48581973)> CPU DETAIL: Read R 0999: 0100000000151111 
DBG(48581974)> CPU DETAIL: Write 0598: 0100000000151111 
DBG(48581976)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581977)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48581978)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581979)> CPU DETAIL: Result: 0060699905990000 
DBG(48581980)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48581982)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581983)> CPU DETAIL: M6: 0001 
DBG(48581984)> CPU DETAIL: Transfer to T 
DBG(48581986)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48581987)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48581987)> CPU DETAIL: Read R 1000: 0000000241000003 
DBG(48581988)> CPU DETAIL: Write 0599: 0000000241000003 
DBG(48581990)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48581991)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48581992)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48581993)> CPU DETAIL: Result: 0060699906000000 
DBG(48581994)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48581996)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48581997)> CPU DETAIL: M6: 0002 
DBG(48581998)> CPU DETAIL: Transfer to T 
DBG(48582000)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582001)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48582001)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48582002)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48582004)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582005)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48582006)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582007)> CPU DETAIL: Result: 0060699906010000 
DBG(48582008)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48582010)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582011)> CPU DETAIL: M6: 0003 
DBG(48582012)> CPU DETAIL: Transfer to T 
DBG(48582014)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582015)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48582015)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48582016)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48582018)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582019)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48582020)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582021)> CPU DETAIL: Result: 0060699906020000 
DBG(48582022)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48582024)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582025)> CPU DETAIL: M6: 0004 
DBG(48582026)> CPU DETAIL: Transfer to T 
DBG(48582028)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582029)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48582029)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48582030)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48582032)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582033)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48582034)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582035)> CPU DETAIL: Result: 0060699906030000 
DBG(48582036)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48582038)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582039)> CPU DETAIL: M6: 0005 
DBG(48582040)> CPU DETAIL: Transfer to T 
DBG(48582042)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582043)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48582043)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48582044)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48582046)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582047)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48582048)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582049)> CPU DETAIL: Result: 0060699906040000 
DBG(48582050)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48582052)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582053)> CPU DETAIL: M6: 0006 
DBG(48582054)> CPU DETAIL: Transfer to T 
DBG(48582056)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582057)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48582057)> CPU DETAIL: Read R 1005: 2222444455660001 
DBG(48582058)> CPU DETAIL: Write 0604: 2222444455660001 
DBG(48582060)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582061)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48582062)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582063)> CPU DETAIL: Result: 0060699906050000 
DBG(48582064)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48582066)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582067)> CPU DETAIL: M6: 0007 
DBG(48582068)> CPU DETAIL: Transfer to T 
DBG(48582070)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582071)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48582071)> CPU DETAIL: Read R 1006: 0000000242009990 
DBG(48582072)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48582074)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582075)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48582076)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582077)> CPU DETAIL: Result: 0060699906060000 
DBG(48582078)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48582080)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582081)> CPU DETAIL: M6: 0008 
DBG(48582082)> CPU DETAIL: Transfer to T 
DBG(48582084)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582085)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48582085)> CPU DETAIL: Read R 1007: 0104110000000000 
DBG(48582086)> CPU DETAIL: Write 0606: 0104110000000000 
DBG(48582088)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582089)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48582090)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582091)> CPU DETAIL: Result: 0060699906070000 
DBG(48582092)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48582094)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582095)> CPU DETAIL: M6: 0009 
DBG(48582096)> CPU DETAIL: Transfer to T 
DBG(48582098)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582099)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48582099)> CPU DETAIL: Read R 1008: 0001209999999997 
DBG(48582100)> CPU DETAIL: Write 0607: 0001209999999997 
DBG(48582102)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582103)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48582104)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582105)> CPU DETAIL: Result: 0060699906080000 
DBG(48582106)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48582108)> CPU CMD: Exec 0167: 06 58 0001 0010 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582109)> CPU DETAIL: M6: 0010 
DBG(48582112)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48582113)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48582114)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48582116)> CPU CMD: Exec 0169: 00 60 1646 0169 0141   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48582117)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48582118)> CPU DETAIL: Transfer to T 
DBG(48582118)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48582120)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48582121)> CPU DETAIL: Read R 1614: 0000000000000033 
DBG(48582122)> CPU DETAIL: Read S 1615: 0000000000000010 
DBG(48582123)> CPU DETAIL: Result: 0000000000000023 
DBG(48582126)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48582127)> CPU DETAIL: REG1: 0000000000000023
DBG(48582127)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48582129)> CPU CMD: Exec 0149: 00 60 1015 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48582130)> CPU DETAIL: Read R 1015: 0000000000000101 
DBG(48582131)> CPU DETAIL: Write 1616: 0000000000000101 
DBG(48582133)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48582134)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48582134)> CPU DETAIL: Read R 1009: 0130000000151113 
DBG(48582135)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48582136)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48582138)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48582139)> CPU DETAIL: Read R 1616: 0000000000000101 
DBG(48582140)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48582141)> CPU DETAIL: Result: 0000000000000100 
DBG(48582142)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48582143)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48582145)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48582146)> CPU DETAIL: Read R 1616: 0000000000000101 
DBG(48582147)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48582148)> CPU DETAIL: Result: 0000000000000001 
DBG(48582149)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48582151)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48582152)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48582153)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48582154)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48582155)> CPU DETAIL: Transfer to T 
DBG(48582157)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48582158)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48582159)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48582160)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48582160)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48582161)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48582162)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48582163)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48582165)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48582166)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48582167)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48582168)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48582168)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48582169)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48582170)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48582171)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48582173)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48582174)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48582175)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48582178)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48582179)> CPU DETAIL: Read R 0149: 0060101516160000 
DBG(48582180)> CPU DETAIL: Result: 0060102816160000 
DBG(48582181)> CPU DETAIL: Write 0149: 0060102816160000 
DBG(48582183)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48582184)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48582185)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48582186)> CPU DETAIL: Result: 0000000000000003 
DBG(48582187)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48582189)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48582190)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48582191)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48582192)> CPU DETAIL: Result: 0000000000000003 
DBG(48582193)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48582195)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48582196)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48582197)> CPU DETAIL: Read S 1615: 0000000000000010 
DBG(48582198)> CPU DETAIL: Result: 0000000000000023 
DBG(48582199)> CPU DETAIL: Write 1615: 0000000000000023 
DBG(48582201)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48582202)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48582203)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48582206)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48582207)> CPU DETAIL: Read R 0167: 0658000100100165 
DBG(48582208)> CPU DETAIL: Result: 0658000100230165 
DBG(48582209)> CPU DETAIL: Write 0167: 0658000100230165 
DBG(48582211)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582212)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48582212)> CPU DETAIL: Read R 1009: 0130000000151113 
DBG(48582213)> CPU DETAIL: Write 0598: 0130000000151113 
DBG(48582215)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582216)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48582217)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582218)> CPU DETAIL: Result: 0060699905990000 
DBG(48582219)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48582221)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582222)> CPU DETAIL: M6: 0011 
DBG(48582223)> CPU DETAIL: Transfer to T 
DBG(48582225)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582226)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48582226)> CPU DETAIL: Read R 1010: 0000000242009990 
DBG(48582227)> CPU DETAIL: Write 0599: 0000000242009990 
DBG(48582229)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582230)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48582231)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582232)> CPU DETAIL: Result: 0060699906000000 
DBG(48582233)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48582235)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582236)> CPU DETAIL: M6: 0012 
DBG(48582237)> CPU DETAIL: Transfer to T 
DBG(48582239)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582240)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48582240)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48582241)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48582243)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582244)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48582245)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582246)> CPU DETAIL: Result: 0060699906010000 
DBG(48582247)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48582249)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582250)> CPU DETAIL: M6: 0013 
DBG(48582251)> CPU DETAIL: Transfer to T 
DBG(48582253)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582254)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48582254)> CPU DETAIL: Read R 1012: 0000000000000000 
DBG(48582255)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48582257)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582258)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48582259)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582260)> CPU DETAIL: Result: 0060699906020000 
DBG(48582261)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48582263)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582264)> CPU DETAIL: M6: 0014 
DBG(48582265)> CPU DETAIL: Transfer to T 
DBG(48582267)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582268)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48582268)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(48582269)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48582271)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582272)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48582273)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582274)> CPU DETAIL: Result: 0060699906030000 
DBG(48582275)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48582277)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582278)> CPU DETAIL: M6: 0015 
DBG(48582279)> CPU DETAIL: Transfer to T 
DBG(48582281)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582282)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48582282)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48582283)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48582285)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582286)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48582287)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582288)> CPU DETAIL: Result: 0060699906040000 
DBG(48582289)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48582291)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582292)> CPU DETAIL: M6: 0016 
DBG(48582293)> CPU DETAIL: Transfer to T 
DBG(48582295)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582296)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48582296)> CPU DETAIL: Read R 1015: 0000000000000101 
DBG(48582297)> CPU DETAIL: Write 0604: 0000000000000101 
DBG(48582299)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582300)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48582301)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582302)> CPU DETAIL: Result: 0060699906050000 
DBG(48582303)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48582305)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582306)> CPU DETAIL: M6: 0017 
DBG(48582307)> CPU DETAIL: Transfer to T 
DBG(48582309)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582310)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48582310)> CPU DETAIL: Read R 1016: 0000000241000000 
DBG(48582311)> CPU DETAIL: Write 0605: 0000000241000000 
DBG(48582313)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582314)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48582315)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582316)> CPU DETAIL: Result: 0060699906060000 
DBG(48582317)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48582319)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582320)> CPU DETAIL: M6: 0018 
DBG(48582321)> CPU DETAIL: Transfer to T 
DBG(48582323)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582324)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48582324)> CPU DETAIL: Read R 1017: 0000000000033555 
DBG(48582325)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48582327)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582328)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48582329)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582330)> CPU DETAIL: Result: 0060699906070000 
DBG(48582331)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48582333)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582334)> CPU DETAIL: M6: 0019 
DBG(48582335)> CPU DETAIL: Transfer to T 
DBG(48582337)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582338)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48582338)> CPU DETAIL: Read R 1018: 0000000000033666 
DBG(48582339)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48582341)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582342)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48582343)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582344)> CPU DETAIL: Result: 0060699906080000 
DBG(48582345)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48582347)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582348)> CPU DETAIL: M6: 0020 
DBG(48582349)> CPU DETAIL: Transfer to T 
DBG(48582351)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582352)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48582352)> CPU DETAIL: Read R 1019: 0000000249999990 
DBG(48582353)> CPU DETAIL: Write 0608: 0000000249999990 
DBG(48582355)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582356)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48582357)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582358)> CPU DETAIL: Result: 0060699906090000 
DBG(48582359)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48582361)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582362)> CPU DETAIL: M6: 0021 
DBG(48582363)> CPU DETAIL: Transfer to T 
DBG(48582365)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582366)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48582366)> CPU DETAIL: Read R 1020: 0000000000033555 
DBG(48582367)> CPU DETAIL: Write 0609: 0000000000033555 
DBG(48582369)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582370)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48582371)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582372)> CPU DETAIL: Result: 0060699906100000 
DBG(48582373)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48582375)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582376)> CPU DETAIL: M6: 0022 
DBG(48582377)> CPU DETAIL: Transfer to T 
DBG(48582379)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48582380)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48582380)> CPU DETAIL: Read R 1021: 0000000000033666 
DBG(48582381)> CPU DETAIL: Write 0610: 0000000000033666 
DBG(48582383)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48582384)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48582385)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582386)> CPU DETAIL: Result: 0060699906110000 
DBG(48582387)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48582389)> CPU CMD: Exec 0167: 06 58 0001 0023 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48582390)> CPU DETAIL: M6: 0023 
DBG(48582393)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48582394)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48582395)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48582397)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48582400)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48582401)> CPU DETAIL: Read R 1609: 0000000000000000 
DBG(48582402)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(48582405)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48582406)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48582407)> CPU DETAIL: Result: 0000000700000000 
DBG(48582410)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48582411)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48582412)> CPU DETAIL: Result: 0042440416550000 
DBG(48582413)> CPU DETAIL: Write 0174: 0042440416550000 
DBG(48582415)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48582416)> CPU DETAIL: Read R 0599: 0000000242009990 
DBG(48582417)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48582418)> CPU DETAIL: Result: 0000000242009990 
DBG(48582419)> CPU DETAIL: Write 1620: 0000000242009990 
DBG(48582421)> CPU CMD: Exec 0174: 00 42 4404 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48582422)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582422)> CPU DETAIL: Read R 0453: 0000000242009990 
DBG(48582423)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48582424)> CPU DETAIL: Result: 0000000242009990 
DBG(48582427)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48582428)> CPU DETAIL: Read S 1620: 0000000242009990 
DBG(48582429)> CPU DETAIL: Result: 0000000000000000 
DBG(48582432)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48582433)> CPU DETAIL: REG1: 0000000000000000
DBG(48582433)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48582435)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48582436)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48582437)> CPU DETAIL: Transfer to T 
DBG(48582437)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48582439)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48582440)> CPU DETAIL: Read R 0605: 0000000241000000 
DBG(48582441)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48582442)> CPU DETAIL: Result: 0000000241000000 
DBG(48582443)> CPU DETAIL: Write 1620: 0000000241000000 
DBG(48582445)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48582446)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582446)> CPU DETAIL: Read R 0447: 0000000241000003 
DBG(48582447)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48582448)> CPU DETAIL: Result: 0000000241000000 
DBG(48582451)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48582452)> CPU DETAIL: Read R 1620: 0000000241000000 
DBG(48582453)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48582454)> CPU DETAIL: Transfer to T 
DBG(48582456)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48582457)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48582458)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48582460)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48582461)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48582462)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48582464)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48582465)> CPU DETAIL: Read R 0599: 0000000242009990 
DBG(48582466)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48582467)> CPU DETAIL: Result: 0100000242009990 
DBG(48582468)> CPU DETAIL: Write 0599: 0100000242009990 
DBG(48582470)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48582471)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48582472)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48582474)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48582475)> CPU DETAIL: Read R 0604: 0000000000000101 
DBG(48582476)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48582477)> CPU DETAIL: Result: 0000000000000100 
DBG(48582478)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48582481)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48582482)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48582483)> CPU DETAIL: Result: 0000000000000000 
DBG(48582486)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48582487)> CPU DETAIL: REG1: 0000000000000000
DBG(48582487)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48582489)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48582490)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48582491)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48582493)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48582494)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48582495)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48582497)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48582498)> CPU DETAIL: Read R 0604: 0000000000000101 
DBG(48582499)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48582500)> CPU DETAIL: Result: 0000000000000100 
DBG(48582501)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48582504)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48582505)> CPU DETAIL: Read R 0599: 0100000242009990 
DBG(48582506)> CPU DETAIL: Result: 0000000242009990 
DBG(48582507)> CPU DETAIL: Write 0599: 0000000242009990 
DBG(48582509)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48582510)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48582511)> CPU DETAIL: Read S 1626: 0000000000000068 
DBG(48582512)> CPU DETAIL: Result: 0000000000000081 
DBG(48582515)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48582516)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48582517)> CPU DETAIL: Result: 0000000000000119 
DBG(48582520)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48582521)> CPU DETAIL: REG1: 0000000000000119
DBG(48582521)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48582523)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48582524)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48582525)> CPU DETAIL: Transfer to T 
DBG(48582525)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48582527)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48582528)> CPU DETAIL: M4: 0049 
DBG(48582529)> CPU DETAIL: M6: 0023 
DBG(48582530)> CPU DETAIL: Clear M8
DBG(48582530)> CPU DETAIL: M8: 0000 
DBG(48582533)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48582534)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48582535)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48582538)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48582539)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48582540)> CPU DETAIL: Result: 0858000100130296 
DBG(48582541)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48582543)> CPU CMD: Exec 0296: 00 60 8598 0866 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582544)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48582544)> CPU DETAIL: Read R 0598: 0130000000151113 
DBG(48582545)> CPU DETAIL: Write 0866: 0130000000151113 
DBG(48582547)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582548)> CPU DETAIL: Read R 0296: 0060859808660000 
DBG(48582549)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582550)> CPU DETAIL: Result: 0060859808670000 
DBG(48582551)> CPU DETAIL: Write 0296: 0060859808670000 
DBG(48582553)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582554)> CPU DETAIL: Read R 1626: 0000000000000068 
DBG(48582555)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582556)> CPU DETAIL: Result: 0000000000000069 
DBG(48582557)> CPU DETAIL: Write 1626: 0000000000000069 
DBG(48582559)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582560)> CPU DETAIL: M8: 0001 
DBG(48582561)> CPU DETAIL: Transfer to T 
DBG(48582563)> CPU CMD: Exec 0296: 00 60 8598 0867 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582564)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48582564)> CPU DETAIL: Read R 0599: 0000000242009990 
DBG(48582565)> CPU DETAIL: Write 0867: 0000000242009990 
DBG(48582567)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582568)> CPU DETAIL: Read R 0296: 0060859808670000 
DBG(48582569)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582570)> CPU DETAIL: Result: 0060859808680000 
DBG(48582571)> CPU DETAIL: Write 0296: 0060859808680000 
DBG(48582573)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582574)> CPU DETAIL: Read R 1626: 0000000000000069 
DBG(48582575)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582576)> CPU DETAIL: Result: 0000000000000070 
DBG(48582577)> CPU DETAIL: Write 1626: 0000000000000070 
DBG(48582579)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582580)> CPU DETAIL: M8: 0002 
DBG(48582581)> CPU DETAIL: Transfer to T 
DBG(48582583)> CPU CMD: Exec 0296: 00 60 8598 0868 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582584)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48582584)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48582585)> CPU DETAIL: Write 0868: 0000000000000000 
DBG(48582587)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582588)> CPU DETAIL: Read R 0296: 0060859808680000 
DBG(48582589)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582590)> CPU DETAIL: Result: 0060859808690000 
DBG(48582591)> CPU DETAIL: Write 0296: 0060859808690000 
DBG(48582593)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582594)> CPU DETAIL: Read R 1626: 0000000000000070 
DBG(48582595)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582596)> CPU DETAIL: Result: 0000000000000071 
DBG(48582597)> CPU DETAIL: Write 1626: 0000000000000071 
DBG(48582599)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582600)> CPU DETAIL: M8: 0003 
DBG(48582601)> CPU DETAIL: Transfer to T 
DBG(48582603)> CPU CMD: Exec 0296: 00 60 8598 0869 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582604)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48582604)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48582605)> CPU DETAIL: Write 0869: 0000000000000000 
DBG(48582607)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582608)> CPU DETAIL: Read R 0296: 0060859808690000 
DBG(48582609)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582610)> CPU DETAIL: Result: 0060859808700000 
DBG(48582611)> CPU DETAIL: Write 0296: 0060859808700000 
DBG(48582613)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582614)> CPU DETAIL: Read R 1626: 0000000000000071 
DBG(48582615)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582616)> CPU DETAIL: Result: 0000000000000072 
DBG(48582617)> CPU DETAIL: Write 1626: 0000000000000072 
DBG(48582619)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582620)> CPU DETAIL: M8: 0004 
DBG(48582621)> CPU DETAIL: Transfer to T 
DBG(48582623)> CPU CMD: Exec 0296: 00 60 8598 0870 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582624)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48582624)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48582625)> CPU DETAIL: Write 0870: 0000000000000000 
DBG(48582627)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582628)> CPU DETAIL: Read R 0296: 0060859808700000 
DBG(48582629)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582630)> CPU DETAIL: Result: 0060859808710000 
DBG(48582631)> CPU DETAIL: Write 0296: 0060859808710000 
DBG(48582633)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582634)> CPU DETAIL: Read R 1626: 0000000000000072 
DBG(48582635)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582636)> CPU DETAIL: Result: 0000000000000073 
DBG(48582637)> CPU DETAIL: Write 1626: 0000000000000073 
DBG(48582639)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582640)> CPU DETAIL: M8: 0005 
DBG(48582641)> CPU DETAIL: Transfer to T 
DBG(48582643)> CPU CMD: Exec 0296: 00 60 8598 0871 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582644)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48582644)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48582645)> CPU DETAIL: Write 0871: 0000000000000000 
DBG(48582647)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582648)> CPU DETAIL: Read R 0296: 0060859808710000 
DBG(48582649)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582650)> CPU DETAIL: Result: 0060859808720000 
DBG(48582651)> CPU DETAIL: Write 0296: 0060859808720000 
DBG(48582653)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582654)> CPU DETAIL: Read R 1626: 0000000000000073 
DBG(48582655)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582656)> CPU DETAIL: Result: 0000000000000074 
DBG(48582657)> CPU DETAIL: Write 1626: 0000000000000074 
DBG(48582659)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582660)> CPU DETAIL: M8: 0006 
DBG(48582661)> CPU DETAIL: Transfer to T 
DBG(48582663)> CPU CMD: Exec 0296: 00 60 8598 0872 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582664)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48582664)> CPU DETAIL: Read R 0604: 0000000000000101 
DBG(48582665)> CPU DETAIL: Write 0872: 0000000000000101 
DBG(48582667)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582668)> CPU DETAIL: Read R 0296: 0060859808720000 
DBG(48582669)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582670)> CPU DETAIL: Result: 0060859808730000 
DBG(48582671)> CPU DETAIL: Write 0296: 0060859808730000 
DBG(48582673)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582674)> CPU DETAIL: Read R 1626: 0000000000000074 
DBG(48582675)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582676)> CPU DETAIL: Result: 0000000000000075 
DBG(48582677)> CPU DETAIL: Write 1626: 0000000000000075 
DBG(48582679)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582680)> CPU DETAIL: M8: 0007 
DBG(48582681)> CPU DETAIL: Transfer to T 
DBG(48582683)> CPU CMD: Exec 0296: 00 60 8598 0873 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582684)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48582684)> CPU DETAIL: Read R 0605: 0000000241000000 
DBG(48582685)> CPU DETAIL: Write 0873: 0000000241000000 
DBG(48582687)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582688)> CPU DETAIL: Read R 0296: 0060859808730000 
DBG(48582689)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582690)> CPU DETAIL: Result: 0060859808740000 
DBG(48582691)> CPU DETAIL: Write 0296: 0060859808740000 
DBG(48582693)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582694)> CPU DETAIL: Read R 1626: 0000000000000075 
DBG(48582695)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582696)> CPU DETAIL: Result: 0000000000000076 
DBG(48582697)> CPU DETAIL: Write 1626: 0000000000000076 
DBG(48582699)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582700)> CPU DETAIL: M8: 0008 
DBG(48582701)> CPU DETAIL: Transfer to T 
DBG(48582703)> CPU CMD: Exec 0296: 00 60 8598 0874 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582704)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48582704)> CPU DETAIL: Read R 0606: 0000000000033555 
DBG(48582705)> CPU DETAIL: Write 0874: 0000000000033555 
DBG(48582707)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582708)> CPU DETAIL: Read R 0296: 0060859808740000 
DBG(48582709)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582710)> CPU DETAIL: Result: 0060859808750000 
DBG(48582711)> CPU DETAIL: Write 0296: 0060859808750000 
DBG(48582713)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582714)> CPU DETAIL: Read R 1626: 0000000000000076 
DBG(48582715)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582716)> CPU DETAIL: Result: 0000000000000077 
DBG(48582717)> CPU DETAIL: Write 1626: 0000000000000077 
DBG(48582719)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582720)> CPU DETAIL: M8: 0009 
DBG(48582721)> CPU DETAIL: Transfer to T 
DBG(48582723)> CPU CMD: Exec 0296: 00 60 8598 0875 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582724)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48582724)> CPU DETAIL: Read R 0607: 0000000000033666 
DBG(48582725)> CPU DETAIL: Write 0875: 0000000000033666 
DBG(48582727)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582728)> CPU DETAIL: Read R 0296: 0060859808750000 
DBG(48582729)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582730)> CPU DETAIL: Result: 0060859808760000 
DBG(48582731)> CPU DETAIL: Write 0296: 0060859808760000 
DBG(48582733)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582734)> CPU DETAIL: Read R 1626: 0000000000000077 
DBG(48582735)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582736)> CPU DETAIL: Result: 0000000000000078 
DBG(48582737)> CPU DETAIL: Write 1626: 0000000000000078 
DBG(48582739)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582740)> CPU DETAIL: M8: 0010 
DBG(48582741)> CPU DETAIL: Transfer to T 
DBG(48582743)> CPU CMD: Exec 0296: 00 60 8598 0876 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582744)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48582744)> CPU DETAIL: Read R 0608: 0000000249999990 
DBG(48582745)> CPU DETAIL: Write 0876: 0000000249999990 
DBG(48582747)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582748)> CPU DETAIL: Read R 0296: 0060859808760000 
DBG(48582749)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582750)> CPU DETAIL: Result: 0060859808770000 
DBG(48582751)> CPU DETAIL: Write 0296: 0060859808770000 
DBG(48582753)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582754)> CPU DETAIL: Read R 1626: 0000000000000078 
DBG(48582755)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582756)> CPU DETAIL: Result: 0000000000000079 
DBG(48582757)> CPU DETAIL: Write 1626: 0000000000000079 
DBG(48582759)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582760)> CPU DETAIL: M8: 0011 
DBG(48582761)> CPU DETAIL: Transfer to T 
DBG(48582763)> CPU CMD: Exec 0296: 00 60 8598 0877 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582764)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48582764)> CPU DETAIL: Read R 0609: 0000000000033555 
DBG(48582765)> CPU DETAIL: Write 0877: 0000000000033555 
DBG(48582767)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582768)> CPU DETAIL: Read R 0296: 0060859808770000 
DBG(48582769)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582770)> CPU DETAIL: Result: 0060859808780000 
DBG(48582771)> CPU DETAIL: Write 0296: 0060859808780000 
DBG(48582773)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582774)> CPU DETAIL: Read R 1626: 0000000000000079 
DBG(48582775)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582776)> CPU DETAIL: Result: 0000000000000080 
DBG(48582777)> CPU DETAIL: Write 1626: 0000000000000080 
DBG(48582779)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582780)> CPU DETAIL: M8: 0012 
DBG(48582781)> CPU DETAIL: Transfer to T 
DBG(48582783)> CPU CMD: Exec 0296: 00 60 8598 0878 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48582784)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48582784)> CPU DETAIL: Read R 0610: 0000000000033666 
DBG(48582785)> CPU DETAIL: Write 0878: 0000000000033666 
DBG(48582787)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48582788)> CPU DETAIL: Read R 0296: 0060859808780000 
DBG(48582789)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582790)> CPU DETAIL: Result: 0060859808790000 
DBG(48582791)> CPU DETAIL: Write 0296: 0060859808790000 
DBG(48582793)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48582794)> CPU DETAIL: Read R 1626: 0000000000000080 
DBG(48582795)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582796)> CPU DETAIL: Result: 0000000000000081 
DBG(48582797)> CPU DETAIL: Write 1626: 0000000000000081 
DBG(48582799)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48582800)> CPU DETAIL: M8: 0013 
DBG(48582803)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48582806)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48582807)> CPU DETAIL: Transfer to T 
DBG(48582809)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48582810)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48582811)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48582814)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48582815)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582815)> CPU DETAIL: Read R 0447: 0000000241000003 
DBG(48582816)> CPU DETAIL: Result: 0001000241000003 
DBG(48582817)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582817)> CPU DETAIL: Write 0447: 0001000241000003 
DBG(48582819)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48582820)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582820)> CPU DETAIL: Read R 0447: 0001000241000003 
DBG(48582821)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48582822)> CPU DETAIL: Result: 0001000000000000 
DBG(48582823)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48582824)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48582826)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48582827)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582827)> CPU DETAIL: Read R 0452: 2222444455660001 
DBG(48582828)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48582829)> CPU DETAIL: Result: 0000000000000001 
DBG(48582832)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48582833)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48582834)> CPU DETAIL: Result: 0000000000000000 
DBG(48582837)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48582838)> CPU DETAIL: REG1: 0000000000000000
DBG(48582838)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48582840)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48582841)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48582842)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48582843)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48582845)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48582846)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582846)> CPU DETAIL: Read R 0452: 2222444455660001 
DBG(48582847)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48582848)> CPU DETAIL: Result: 0000000000000001 
DBG(48582849)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48582852)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48582853)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582853)> CPU DETAIL: Read R 0447: 0001000241000003 
DBG(48582854)> CPU DETAIL: Result: 0000000241000003 
DBG(48582855)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582855)> CPU DETAIL: Write 0447: 0000000241000003 
DBG(48582857)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48582858)> CPU DETAIL: Read R 1625: 0000000000000049 
DBG(48582859)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48582860)> CPU DETAIL: Result: 0000000000000059 
DBG(48582863)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48582864)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48582865)> CPU DETAIL: Result: 0000000000000141 
DBG(48582868)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48582869)> CPU DETAIL: REG1: 0000000000000141
DBG(48582869)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48582871)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48582872)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48582873)> CPU DETAIL: Transfer to T 
DBG(48582873)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48582875)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48582876)> CPU DETAIL: M4: 0049 
DBG(48582877)> CPU DETAIL: M6: 0023 
DBG(48582878)> CPU DETAIL: Clear M8
DBG(48582878)> CPU DETAIL: M8: 0000 
DBG(48582881)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48582882)> CPU DETAIL: Read R 1612: 0000000000000004 
DBG(48582883)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582884)> CPU DETAIL: Result: 0000000000000005 
DBG(48582885)> CPU DETAIL: Write 1612: 0000000000000005 
DBG(48582887)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48582888)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48582889)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48582892)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48582893)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48582894)> CPU DETAIL: Result: 0858000100100266 
DBG(48582895)> CPU DETAIL: Write 0270: 0858000100100266 
DBG(48582897)> CPU CMD: Exec 0266: 00 60 4397 1450 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48582898)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48582898)> CPU DETAIL: Read R 0446: 0100000000151111 
DBG(48582899)> CPU DETAIL: Write 1450: 0100000000151111 
DBG(48582901)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48582902)> CPU DETAIL: Read R 0266: 0060439714500000 
DBG(48582903)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582904)> CPU DETAIL: Result: 0060439714510000 
DBG(48582905)> CPU DETAIL: Write 0266: 0060439714510000 
DBG(48582907)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48582908)> CPU DETAIL: Read R 1625: 0000000000000049 
DBG(48582909)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582910)> CPU DETAIL: Result: 0000000000000050 
DBG(48582911)> CPU DETAIL: Write 1625: 0000000000000050 
DBG(48582913)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48582914)> CPU DETAIL: M4: 0050 
DBG(48582915)> CPU DETAIL: M6: 0023 
DBG(48582916)> CPU DETAIL: M8: 0000 
DBG(48582919)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48582920)> CPU DETAIL: M8: 0001 
DBG(48582921)> CPU DETAIL: Transfer to T 
DBG(48582923)> CPU CMD: Exec 0266: 00 60 4397 1451 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48582924)> CPU DETAIL: M4 Address Modifier: 0050 
DBG(48582924)> CPU DETAIL: Read R 0447: 0000000241000003 
DBG(48582925)> CPU DETAIL: Write 1451: 0000000241000003 
DBG(48582927)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48582928)> CPU DETAIL: Read R 0266: 0060439714510000 
DBG(48582929)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582930)> CPU DETAIL: Result: 0060439714520000 
DBG(48582931)> CPU DETAIL: Write 0266: 0060439714520000 
DBG(48582933)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48582934)> CPU DETAIL: Read R 1625: 0000000000000050 
DBG(48582935)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582936)> CPU DETAIL: Result: 0000000000000051 
DBG(48582937)> CPU DETAIL: Write 1625: 0000000000000051 
DBG(48582939)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48582940)> CPU DETAIL: M4: 0051 
DBG(48582941)> CPU DETAIL: M6: 0023 
DBG(48582942)> CPU DETAIL: M8: 0001 
DBG(48582945)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48582946)> CPU DETAIL: M8: 0002 
DBG(48582947)> CPU DETAIL: Transfer to T 
DBG(48582949)> CPU CMD: Exec 0266: 00 60 4397 1452 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48582950)> CPU DETAIL: M4 Address Modifier: 0051 
DBG(48582950)> CPU DETAIL: Read R 0448: 0000000000000000 
DBG(48582951)> CPU DETAIL: Write 1452: 0000000000000000 
DBG(48582953)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48582954)> CPU DETAIL: Read R 0266: 0060439714520000 
DBG(48582955)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582956)> CPU DETAIL: Result: 0060439714530000 
DBG(48582957)> CPU DETAIL: Write 0266: 0060439714530000 
DBG(48582959)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48582960)> CPU DETAIL: Read R 1625: 0000000000000051 
DBG(48582961)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582962)> CPU DETAIL: Result: 0000000000000052 
DBG(48582963)> CPU DETAIL: Write 1625: 0000000000000052 
DBG(48582965)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48582966)> CPU DETAIL: M4: 0052 
DBG(48582967)> CPU DETAIL: M6: 0023 
DBG(48582968)> CPU DETAIL: M8: 0002 
DBG(48582971)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48582972)> CPU DETAIL: M8: 0003 
DBG(48582973)> CPU DETAIL: Transfer to T 
DBG(48582975)> CPU CMD: Exec 0266: 00 60 4397 1453 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48582976)> CPU DETAIL: M4 Address Modifier: 0052 
DBG(48582976)> CPU DETAIL: Read R 0449: 0000000000000000 
DBG(48582977)> CPU DETAIL: Write 1453: 0000000000000000 
DBG(48582979)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48582980)> CPU DETAIL: Read R 0266: 0060439714530000 
DBG(48582981)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48582982)> CPU DETAIL: Result: 0060439714540000 
DBG(48582983)> CPU DETAIL: Write 0266: 0060439714540000 
DBG(48582985)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48582986)> CPU DETAIL: Read R 1625: 0000000000000052 
DBG(48582987)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48582988)> CPU DETAIL: Result: 0000000000000053 
DBG(48582989)> CPU DETAIL: Write 1625: 0000000000000053 
DBG(48582991)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48582992)> CPU DETAIL: M4: 0053 
DBG(48582993)> CPU DETAIL: M6: 0023 
DBG(48582994)> CPU DETAIL: M8: 0003 
DBG(48582997)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48582998)> CPU DETAIL: M8: 0004 
DBG(48582999)> CPU DETAIL: Transfer to T 
DBG(48583001)> CPU CMD: Exec 0266: 00 60 4397 1454 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583002)> CPU DETAIL: M4 Address Modifier: 0053 
DBG(48583002)> CPU DETAIL: Read R 0450: 0000000000000000 
DBG(48583003)> CPU DETAIL: Write 1454: 0000000000000000 
DBG(48583005)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583006)> CPU DETAIL: Read R 0266: 0060439714540000 
DBG(48583007)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583008)> CPU DETAIL: Result: 0060439714550000 
DBG(48583009)> CPU DETAIL: Write 0266: 0060439714550000 
DBG(48583011)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583012)> CPU DETAIL: Read R 1625: 0000000000000053 
DBG(48583013)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583014)> CPU DETAIL: Result: 0000000000000054 
DBG(48583015)> CPU DETAIL: Write 1625: 0000000000000054 
DBG(48583017)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583018)> CPU DETAIL: M4: 0054 
DBG(48583019)> CPU DETAIL: M6: 0023 
DBG(48583020)> CPU DETAIL: M8: 0004 
DBG(48583023)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583024)> CPU DETAIL: M8: 0005 
DBG(48583025)> CPU DETAIL: Transfer to T 
DBG(48583027)> CPU CMD: Exec 0266: 00 60 4397 1455 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583028)> CPU DETAIL: M4 Address Modifier: 0054 
DBG(48583028)> CPU DETAIL: Read R 0451: 0000000000000000 
DBG(48583029)> CPU DETAIL: Write 1455: 0000000000000000 
DBG(48583031)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583032)> CPU DETAIL: Read R 0266: 0060439714550000 
DBG(48583033)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583034)> CPU DETAIL: Result: 0060439714560000 
DBG(48583035)> CPU DETAIL: Write 0266: 0060439714560000 
DBG(48583037)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583038)> CPU DETAIL: Read R 1625: 0000000000000054 
DBG(48583039)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583040)> CPU DETAIL: Result: 0000000000000055 
DBG(48583041)> CPU DETAIL: Write 1625: 0000000000000055 
DBG(48583043)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583044)> CPU DETAIL: M4: 0055 
DBG(48583045)> CPU DETAIL: M6: 0023 
DBG(48583046)> CPU DETAIL: M8: 0005 
DBG(48583049)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583050)> CPU DETAIL: M8: 0006 
DBG(48583051)> CPU DETAIL: Transfer to T 
DBG(48583053)> CPU CMD: Exec 0266: 00 60 4397 1456 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583054)> CPU DETAIL: M4 Address Modifier: 0055 
DBG(48583054)> CPU DETAIL: Read R 0452: 2222444455660001 
DBG(48583055)> CPU DETAIL: Write 1456: 2222444455660001 
DBG(48583057)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583058)> CPU DETAIL: Read R 0266: 0060439714560000 
DBG(48583059)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583060)> CPU DETAIL: Result: 0060439714570000 
DBG(48583061)> CPU DETAIL: Write 0266: 0060439714570000 
DBG(48583063)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583064)> CPU DETAIL: Read R 1625: 0000000000000055 
DBG(48583065)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583066)> CPU DETAIL: Result: 0000000000000056 
DBG(48583067)> CPU DETAIL: Write 1625: 0000000000000056 
DBG(48583069)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583070)> CPU DETAIL: M4: 0056 
DBG(48583071)> CPU DETAIL: M6: 0023 
DBG(48583072)> CPU DETAIL: M8: 0006 
DBG(48583075)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583076)> CPU DETAIL: M8: 0007 
DBG(48583077)> CPU DETAIL: Transfer to T 
DBG(48583079)> CPU CMD: Exec 0266: 00 60 4397 1457 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583080)> CPU DETAIL: M4 Address Modifier: 0056 
DBG(48583080)> CPU DETAIL: Read R 0453: 0000000242009990 
DBG(48583081)> CPU DETAIL: Write 1457: 0000000242009990 
DBG(48583083)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583084)> CPU DETAIL: Read R 0266: 0060439714570000 
DBG(48583085)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583086)> CPU DETAIL: Result: 0060439714580000 
DBG(48583087)> CPU DETAIL: Write 0266: 0060439714580000 
DBG(48583089)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583090)> CPU DETAIL: Read R 1625: 0000000000000056 
DBG(48583091)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583092)> CPU DETAIL: Result: 0000000000000057 
DBG(48583093)> CPU DETAIL: Write 1625: 0000000000000057 
DBG(48583095)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583096)> CPU DETAIL: M4: 0057 
DBG(48583097)> CPU DETAIL: M6: 0023 
DBG(48583098)> CPU DETAIL: M8: 0007 
DBG(48583101)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583102)> CPU DETAIL: M8: 0008 
DBG(48583103)> CPU DETAIL: Transfer to T 
DBG(48583105)> CPU CMD: Exec 0266: 00 60 4397 1458 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583106)> CPU DETAIL: M4 Address Modifier: 0057 
DBG(48583106)> CPU DETAIL: Read R 0454: 0104110000000000 
DBG(48583107)> CPU DETAIL: Write 1458: 0104110000000000 
DBG(48583109)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583110)> CPU DETAIL: Read R 0266: 0060439714580000 
DBG(48583111)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583112)> CPU DETAIL: Result: 0060439714590000 
DBG(48583113)> CPU DETAIL: Write 0266: 0060439714590000 
DBG(48583115)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583116)> CPU DETAIL: Read R 1625: 0000000000000057 
DBG(48583117)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583118)> CPU DETAIL: Result: 0000000000000058 
DBG(48583119)> CPU DETAIL: Write 1625: 0000000000000058 
DBG(48583121)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583122)> CPU DETAIL: M4: 0058 
DBG(48583123)> CPU DETAIL: M6: 0023 
DBG(48583124)> CPU DETAIL: M8: 0008 
DBG(48583127)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583128)> CPU DETAIL: M8: 0009 
DBG(48583129)> CPU DETAIL: Transfer to T 
DBG(48583131)> CPU CMD: Exec 0266: 00 60 4397 1459 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583132)> CPU DETAIL: M4 Address Modifier: 0058 
DBG(48583132)> CPU DETAIL: Read R 0455: 0001209999999997 
DBG(48583133)> CPU DETAIL: Write 1459: 0001209999999997 
DBG(48583135)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583136)> CPU DETAIL: Read R 0266: 0060439714590000 
DBG(48583137)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583138)> CPU DETAIL: Result: 0060439714600000 
DBG(48583139)> CPU DETAIL: Write 0266: 0060439714600000 
DBG(48583141)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583142)> CPU DETAIL: Read R 1625: 0000000000000058 
DBG(48583143)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583144)> CPU DETAIL: Result: 0000000000000059 
DBG(48583145)> CPU DETAIL: Write 1625: 0000000000000059 
DBG(48583147)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583148)> CPU DETAIL: M4: 0059 
DBG(48583149)> CPU DETAIL: M6: 0023 
DBG(48583150)> CPU DETAIL: M8: 0009 
DBG(48583153)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583154)> CPU DETAIL: M8: 0010 
DBG(48583157)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48583160)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48583161)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48583162)> CPU DETAIL: Transfer to T 
DBG(48583162)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48583164)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48583165)> CPU DETAIL: Read R 1605: 0000000000000059 
DBG(48583166)> CPU DETAIL: Read S 1606: 0000000000000059 
DBG(48583167)> CPU DETAIL: Result: 0000000000000000 
DBG(48583170)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48583171)> CPU DETAIL: REG1: 0000000000000000
DBG(48583171)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48583173)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48583174)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583175)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48583177)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48583178)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48583179)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48583181)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48583182)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48583183)> CPU DETAIL: Transfer to T 
DBG(48583183)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48583185)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48583186)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48583186)> MT DATA: Tape unit 2: init read
DBG(48583186)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 2
DBG(48583186)> MT DETAIL: Tape record contents: D*0291000000000000CD
DBG(48583186)> MT EXP: End Of File mark sensed: 0291000000000000 
DBG(48583186)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (5.20 inches)
DBG(48583189)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48583190)> CPU DETAIL: Condition not present 
DBG(48583192)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48583193)> CPU DETAIL: Reset condition present 
DBG(48583193)> CPU DETAIL: Transfer to T 
DBG(48583195)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48583196)> CPU DETAIL: Read R 1626: 0000000000000081 
DBG(48583197)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48583198)> CPU DETAIL: Diff: REG1: 0000000000000081
DBG(48583201)> CPU CMD: Exec 0312: 00 60 1686 0310 0302   set 0310 to goto 0313, then goto 0302 to write 0798 event output block to ta 
DBG(48583202)> CPU DETAIL: Read R 1686: 0060000000000313 
DBG(48583203)> CPU DETAIL: Transfer to T 
DBG(48583203)> CPU DETAIL: Write 0310: 0060000000000313 
DBG(48583205)> CPU CMD: Exec 0302: 96 60 1626 0000 0000   set instr ...     
DBG(48583206)> CPU DETAIL: Read R 1626: 0000000000000081 
DBG(48583207)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000810000 
DBG(48583210)> CPU CMD: Exec 0303: 00 41 0000 1648 0000   ... to write on tape 04 0798 0798+(1626 num of words in event output block)- 
DBG(48583211)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583212)> CPU DETAIL: Result: 0000000000800000 
DBG(48583215)> CPU CMD: Exec 0304: 00 40 1652 0000 0305   ... and block 1001   
DBG(48583216)> CPU DETAIL: Read R 1652: 0491079807981001 
DBG(48583217)> CPU DETAIL: Result: 0491079808781001 
DBG(48583218)> CPU DETAIL: Write 0305: 0491079808781001 
DBG(48583220)> CPU CMD: Exec 0305: 04 91 0798 0878 1001   write on tape 04 0798 0798+(1626 num of words in event output block)-1    
DBG(48583221)> CPU DETAIL: Tape operation on MT4, Addr 0798->0878, Block Number 1001
DBG(48583221)> MT CMD: Tape unit 4: init write
DBG(48583221)> MT EXP: Write from 0798 to 0878 as Block number 1001
DBG(48583221)> MT EXP: Start Of Block: 04 91 0798 0878 1001
DBG(48583221)> MT EXP: CRT 0798 to Tape: 0100000000111112 
DBG(48583221)> MT EXP: CRT 0799 to Tape: 0000000209999990 
DBG(48583221)> MT EXP: CRT 0800 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0801 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0802 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0803 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0804 to Tape: 0000000000000100 
DBG(48583221)> MT EXP: CRT 0805 to Tape: 0000000201000000 
DBG(48583221)> MT EXP: CRT 0806 to Tape: 0000000000033555 
DBG(48583221)> MT EXP: CRT 0807 to Tape: 0000000000033666 
DBG(48583221)> MT EXP: CRT 0808 to Tape: 0130000000121112 
DBG(48583221)> MT EXP: CRT 0809 to Tape: 0000000231010000 
DBG(48583221)> MT EXP: CRT 0810 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0811 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0812 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0813 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0814 to Tape: 3334444455660101 
DBG(48583221)> MT EXP: CRT 0815 to Tape: 0000000231000000 
DBG(48583221)> MT EXP: CRT 0816 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0817 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0818 to Tape: 0000000231030000 
DBG(48583221)> MT EXP: CRT 0819 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0820 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0821 to Tape: 0130000000121113 
DBG(48583221)> MT EXP: CRT 0822 to Tape: 0000000231020003 
DBG(48583221)> MT EXP: CRT 0823 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0824 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0825 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0826 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0827 to Tape: 3335444455660101 
DBG(48583221)> MT EXP: CRT 0828 to Tape: 0000000231000000 
DBG(48583221)> MT EXP: CRT 0829 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0830 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0831 to Tape: 0000000231030000 
DBG(48583221)> MT EXP: CRT 0832 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0833 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0834 to Tape: 0130000000131112 
DBG(48583221)> MT EXP: CRT 0835 to Tape: 0000000232010000 
DBG(48583221)> MT EXP: CRT 0836 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0837 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0838 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0839 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0840 to Tape: 3334444455660101 
DBG(48583221)> MT EXP: CRT 0841 to Tape: 0000000232000000 
DBG(48583221)> MT EXP: CRT 0842 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0843 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0844 to Tape: 0000000232090000 
DBG(48583221)> MT EXP: CRT 0845 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0846 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0847 to Tape: 0190000000141112 
DBG(48583221)> MT EXP: CRT 0848 to Tape: 0000000233010000 
DBG(48583221)> MT EXP: CRT 0849 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0850 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0851 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0852 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0853 to Tape: 3334444455660103 
DBG(48583221)> MT EXP: CRT 0854 to Tape: 0000000233000000 
DBG(48583221)> MT EXP: CRT 0855 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0856 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0857 to Tape: 0000000233020000 
DBG(48583221)> MT EXP: CRT 0858 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0859 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0860 to Tape: 0000000233030000 
DBG(48583221)> MT EXP: CRT 0861 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0862 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0863 to Tape: 0000000233090000 
DBG(48583221)> MT EXP: CRT 0864 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0865 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0866 to Tape: 0130000000151113 
DBG(48583221)> MT EXP: CRT 0867 to Tape: 0000000242009990 
DBG(48583221)> MT EXP: CRT 0868 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0869 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0870 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0871 to Tape: 0000000000000000 
DBG(48583221)> MT EXP: CRT 0872 to Tape: 0000000000000101 
DBG(48583221)> MT EXP: CRT 0873 to Tape: 0000000241000000 
DBG(48583221)> MT EXP: CRT 0874 to Tape: 0000000000033555 
DBG(48583221)> MT EXP: CRT 0875 to Tape: 0000000000033666 
DBG(48583221)> MT EXP: CRT 0876 to Tape: 0000000249999990 
DBG(48583221)> MT EXP: CRT 0877 to Tape: 0000000000033555 
DBG(48583221)> MT EXP: CRT 0878 to Tape: 0000000000033666 
DBG(48583221)> MT EXP: End Of Block: 04 91 0798 0878 1001 (81 words)
DBG(48583221)> MT DETAIL: Write block (1496 chars, used 4.43 inches, needs 28 msec) to tape 4
DBG(48583221)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48583224)> CPU CMD: Exec 0306: 08 60 0306 0000 1730   call 1730 check write   
DBG(48583225)> CPU DETAIL: Read R 0306: 0860030600001730 
DBG(48583226)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600306 
DBG(48583227)> CPU DETAIL: Transfer to T 
DBG(48583229)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48583230)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48583231)> CPU DETAIL: Result: 0060000000000307 
DBG(48583232)> CPU DETAIL: Write 1742: 0060000000000307 
DBG(48583234)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48583235)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000307000000000 
DBG(48583238)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48583239)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48583240)> CPU DETAIL: Result: 0600305174700000 
DBG(48583241)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060030517470000 
DBG(48583242)> CPU DETAIL: Write 1734: 0060030517470000 
DBG(48583244)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48583245)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48583246)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48583248)> CPU CMD: Exec 1734: 00 60 0305 1747 0000      
DBG(48583249)> CPU DETAIL: Read R 0305: 0491079808781001 
DBG(48583250)> CPU DETAIL: Write 1747: 0491079808781001 
DBG(48583252)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48583253)> CPU DETAIL: Condition not present 
DBG(48583255)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48583256)> CPU DETAIL: Transfer to T 
DBG(48583258)> CPU CMD: Exec 1742: 00 60 0000 0000 0307   EXIT_CheckWrite   
DBG(48583259)> CPU DETAIL: Transfer to T 
DBG(48583261)> CPU CMD: Exec 0307: 00 40 1652 1639 1652   incr block number on write tape instr   
DBG(48583262)> CPU DETAIL: Read R 1652: 0491079807981001 
DBG(48583263)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583264)> CPU DETAIL: Result: 0491079807981002 
DBG(48583265)> CPU DETAIL: Write 1652: 0491079807981002 
DBG(48583267)> CPU CMD: Exec 0308: 00 60 1640 1626 0000   clear (1626 num of words in event output block)   
DBG(48583268)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583269)> CPU DETAIL: Write 1626: 0000000000000000 
DBG(48583271)> CPU CMD: Exec 0309: 00 60 1680 0296 0000   restore instr 0296   
DBG(48583272)> CPU DETAIL: Read R 1680: 0060859807980000 
DBG(48583273)> CPU DETAIL: Write 0296: 0060859807980000 
DBG(48583275)> CPU CMD: Exec 0310: 00 60 0000 0000 0313      
DBG(48583276)> CPU DETAIL: Transfer to T 
DBG(48583278)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48583279)> CPU DETAIL: Read R 1630: 0000000000000000 
DBG(48583280)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48583281)> CPU DETAIL: Result: 0100000000000000 
DBG(48583282)> CPU DETAIL: Write 1630: 0100000000000000 
DBG(48583284)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48583285)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48583286)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48583287)> CPU DETAIL: Transfer to T 
DBG(48583289)> CPU CMD: Exec 0316: 00 42 0095 1653 0000   get tape number 0N 0..0 from 0095 tape read instr   
DBG(48583290)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48583291)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48583292)> CPU DETAIL: Result: 0200000000000000 
DBG(48583295)> CPU CMD: Exec 0317: 00 72 1681 0000 0325   if tape number <> 02 0..0 goto 0325   
DBG(48583296)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48583297)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48583300)> CPU CMD: Exec 0318: 00 40 0095 1681 0095   set tape read instr to tape 04   
DBG(48583301)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48583302)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48583303)> CPU DETAIL: Result: 0494039700000000 
DBG(48583304)> CPU DETAIL: Write 0095: 0494039700000000 
DBG(48583306)> CPU CMD: Exec 0319: 00 41 1652 1681 1652   set tape write instr to tape 02   
DBG(48583307)> CPU DETAIL: Read R 1652: 0491079807981002 
DBG(48583308)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48583309)> CPU DETAIL: Result: 0291079807981002 
DBG(48583310)> CPU DETAIL: Write 1652: 0291079807981002 
DBG(48583312)> CPU CMD: Exec 0320: 00 40 1685 1683 0332   set instr 0332 to write end of file to tape 04   
DBG(48583313)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48583314)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48583315)> CPU DETAIL: Result: 0491000000000000 
DBG(48583316)> CPU DETAIL: Write 0332: 0491000000000000 
DBG(48583318)> CPU CMD: Exec 0321: 00 40 1681 1684 0333   set instr 0333 to rewind tape 02   
DBG(48583319)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48583320)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48583321)> CPU DETAIL: Result: 0298000000000000 
DBG(48583322)> CPU DETAIL: Write 0333: 0298000000000000 
DBG(48583324)> CPU CMD: Exec 0322: 00 40 1685 1684 0334   set instr 0334 to rewind tape 04   
DBG(48583325)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48583326)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48583327)> CPU DETAIL: Result: 0498000000000000 
DBG(48583328)> CPU DETAIL: Write 0334: 0498000000000000 
DBG(48583330)> CPU CMD: Exec 0323: 00 40 1681 1683 0335   set instr 0335 to write end of file to tape 02   
DBG(48583331)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48583332)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48583333)> CPU DETAIL: Result: 0291000000000000 
DBG(48583334)> CPU DETAIL: Write 0335: 0291000000000000 
DBG(48583336)> CPU CMD: Exec 0324: 00 60 0333 0336 0332   set instr 0336 to rewind tape 02, goto 0332    
DBG(48583337)> CPU DETAIL: Read R 0333: 0298000000000000 
DBG(48583338)> CPU DETAIL: Transfer to T 
DBG(48583338)> CPU DETAIL: Write 0336: 0298000000000000 
DBG(48583340)> CPU CMD: Exec 0332: 04 91 0000 0000 0000   write eof on conjugate input tape   
DBG(48583341)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48583341)> MT CMD: Tape unit 4: init write
DBG(48583341)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(48583341)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(48583341)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48583344)> CPU CMD: Exec 0333: 02 98 0000 0000 0000   rewind input tape   
DBG(48583345)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48583345)> MT CMD: Tape unit 2: init rewind (current medium used 5.20 inches)
DBG(48583345)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48583345)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48583347)> CPU CMD: Exec 0334: 04 98 0000 0000 0000   rewind conjugate input tape   
DBG(48583348)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48583348)> MT CMD: Tape unit 4: init rewind (current medium used 5.97 inches)
DBG(48583348)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48583348)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48583350)> CPU CMD: Exec 0335: 02 91 0000 0000 0000   write eof on input tape   
DBG(48583351)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48583351)> MT CMD: Tape unit 2: init write
DBG(48583351)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48583351)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48583351)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48583354)> CPU CMD: Exec 0336: 02 98 0000 0000 0000   rewind input tape   
DBG(48583355)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48583355)> MT CMD: Tape unit 2: init rewind (current medium used 1.54 inches)
DBG(48583355)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48583355)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48583357)> CPU CMD: Exec 0337: 00 60 0000 0000 0121   goto 0121   
DBG(48583358)> CPU DETAIL: Transfer to T 
DBG(48583360)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48583361)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583362)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48583364)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48583365)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48583366)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48583368)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48583369)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48583370)> CPU DETAIL: Transfer to T 
DBG(48583370)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48583372)> CPU CMD: Exec 0095: 04 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48583373)> CPU DETAIL: Tape operation on MT4, Addr 0397->0000, Block Number 0000
DBG(48583373)> MT DATA: Tape unit 4: init read
DBG(48583373)> MT DETAIL: Read tape record (1496 chars, used 4.43 inches, needs 28 msec) from tape 4
DBG(48583373)> MT DETAIL: Tape record contents: D*0491079808781001C*0100000000111112C*0000000209999990C*00000000000000...
DBG(48583373)> MT EXP: Start Of Block Word: 0491079808781001
DBG(48583373)> MT EXP: Read Tape Block number 1001
DBG(48583373)> MT EXP: Read forward addr 0397 to 0000
DBG(48583373)> MT EXP: Tape to CRT 0397: 0100000000111112 
DBG(48583373)> MT EXP: Tape to CRT 0398: 0000000209999990 
DBG(48583373)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0403: 0000000000000100 
DBG(48583373)> MT EXP: Tape to CRT 0404: 0000000201000000 
DBG(48583373)> MT EXP: Tape to CRT 0405: 0000000000033555 
DBG(48583373)> MT EXP: Tape to CRT 0406: 0000000000033666 
DBG(48583373)> MT EXP: Tape to CRT 0407: 0130000000121112 
DBG(48583373)> MT EXP: Tape to CRT 0408: 0000000231010000 
DBG(48583373)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0410: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0411: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0413: 3334444455660101 
DBG(48583373)> MT EXP: Tape to CRT 0414: 0000000231000000 
DBG(48583373)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0416: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0417: 0000000231030000 
DBG(48583373)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0420: 0130000000121113 
DBG(48583373)> MT EXP: Tape to CRT 0421: 0000000231020003 
DBG(48583373)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0423: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0424: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0426: 3335444455660101 
DBG(48583373)> MT EXP: Tape to CRT 0427: 0000000231000000 
DBG(48583373)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0429: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0430: 0000000231030000 
DBG(48583373)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0433: 0130000000131112 
DBG(48583373)> MT EXP: Tape to CRT 0434: 0000000232010000 
DBG(48583373)> MT EXP: Tape to CRT 0435: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0436: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0437: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0438: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0439: 3334444455660101 
DBG(48583373)> MT EXP: Tape to CRT 0440: 0000000232000000 
DBG(48583373)> MT EXP: Tape to CRT 0441: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0442: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0443: 0000000232090000 
DBG(48583373)> MT EXP: Tape to CRT 0444: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0445: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0446: 0190000000141112 
DBG(48583373)> MT EXP: Tape to CRT 0447: 0000000233010000 
DBG(48583373)> MT EXP: Tape to CRT 0448: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0449: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0450: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0451: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0452: 3334444455660103 
DBG(48583373)> MT EXP: Tape to CRT 0453: 0000000233000000 
DBG(48583373)> MT EXP: Tape to CRT 0454: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0455: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0456: 0000000233020000 
DBG(48583373)> MT EXP: Tape to CRT 0457: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0458: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0459: 0000000233030000 
DBG(48583373)> MT EXP: Tape to CRT 0460: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0461: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0462: 0000000233090000 
DBG(48583373)> MT EXP: Tape to CRT 0463: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0464: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0465: 0130000000151113 
DBG(48583373)> MT EXP: Tape to CRT 0466: 0000000242009990 
DBG(48583373)> MT EXP: Tape to CRT 0467: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0468: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0469: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0470: 0000000000000000 
DBG(48583373)> MT EXP: Tape to CRT 0471: 0000000000000101 
DBG(48583373)> MT EXP: Tape to CRT 0472: 0000000241000000 
DBG(48583373)> MT EXP: Tape to CRT 0473: 0000000000033555 
DBG(48583373)> MT EXP: Tape to CRT 0474: 0000000000033666 
DBG(48583373)> MT EXP: Tape to CRT 0475: 0000000249999990 
DBG(48583373)> MT EXP: Tape to CRT 0476: 0000000000033555 
DBG(48583373)> MT EXP: Tape to CRT 0477: 0000000000033666 
DBG(48583373)> MT EXP: End Of Block Word: 0491079808781001, data words in block: 81
DBG(48583373)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48583376)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48583377)> CPU DETAIL: Condition not present 
DBG(48583379)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48583380)> CPU DETAIL: Condition not present 
DBG(48583382)> CPU CMD: Exec 0098: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48583383)> CPU DETAIL: Write 1603: 0491079808781001 
DBG(48583385)> CPU CMD: Exec 0099: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        02 90 aaaa bbbb nnnn ma 
DBG(48583386)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48583387)> CPU DETAIL: Result: 0000000008780000 
DBG(48583388)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000878 
DBG(48583389)> CPU DETAIL: Write 1604: 0000000000000878 
DBG(48583391)> CPU CMD: Exec 0100: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(48583392)> CPU DETAIL: Read R 1603: 0491079808781001 
DBG(48583393)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48583394)> CPU DETAIL: Result: 0000079800000000 
DBG(48583395)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000798 
DBG(48583398)> CPU CMD: Exec 0101: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48583399)> CPU DETAIL: Read R 1604: 0000000000000878 
DBG(48583400)> CPU DETAIL: Result: 0000000000000080 
DBG(48583401)> CPU DETAIL: Write 1605: 0000000000000080 
DBG(48583403)> CPU CMD: Exec 0102: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48583404)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48583405)> CPU DETAIL: Result: 0000000000000081 
DBG(48583406)> CPU DETAIL: Write 1605: 0000000000000081 
DBG(48583408)> CPU CMD: Exec 0103: 00 51 0000 0000 0000   Clear M4   
DBG(48583409)> CPU DETAIL: Clear M4
DBG(48583409)> CPU DETAIL: M4: 0000 
DBG(48583410)> CPU DETAIL: M6: 0023 
DBG(48583411)> CPU DETAIL: M8: 0010 
DBG(48583414)> CPU CMD: Exec 0104: 00 60 1640 1630 0118   nop / clear 1630, goto 0118   
DBG(48583415)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583416)> CPU DETAIL: Transfer to T 
DBG(48583416)> CPU DETAIL: Write 1630: 0000000000000000 
DBG(48583418)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48583419)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48583420)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48583421)> CPU DETAIL: Result: 0000000000000081 
DBG(48583424)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48583425)> CPU DETAIL: REG1: 0000000000000081
DBG(48583425)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48583427)> CPU CMD: Exec 0124: 00 60 0403 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48583428)> CPU DETAIL: Read R 0403: 0000000000000100 
DBG(48583429)> CPU DETAIL: Write 1608: 0000000000000100 
DBG(48583431)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48583432)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48583432)> CPU DETAIL: Read R 0397: 0100000000111112 
DBG(48583433)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48583434)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48583436)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48583437)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48583438)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48583439)> CPU DETAIL: Result: 0000000000000100 
DBG(48583440)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48583441)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48583443)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48583444)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48583445)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48583446)> CPU DETAIL: Result: 0000000000000000 
DBG(48583447)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48583449)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48583450)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583451)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48583452)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48583453)> CPU DETAIL: Transfer to T 
DBG(48583455)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48583456)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48583457)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48583458)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48583461)> CPU CMD: Exec 0132: 00 60 1693 0140 0133   ???   
DBG(48583462)> CPU DETAIL: Read R 1693: 0060169902720256 
DBG(48583463)> CPU DETAIL: Transfer to T 
DBG(48583463)> CPU DETAIL: Write 0140: 0060169902720256 
DBG(48583465)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48583466)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48583467)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583468)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48583468)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583469)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583470)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48583471)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48583473)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48583474)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48583475)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583476)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48583476)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583477)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583478)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583479)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48583481)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48583482)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48583483)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583484)> CPU DETAIL: Result: 0000000000000003 
DBG(48583485)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48583487)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48583488)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48583489)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583490)> CPU DETAIL: Result: 0000000000000000 
DBG(48583491)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48583493)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48583494)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48583495)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48583498)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48583499)> CPU DETAIL: Read R 0124: 0060040316080000 
DBG(48583500)> CPU DETAIL: Result: 0060041316080000 
DBG(48583501)> CPU DETAIL: Write 0124: 0060041316080000 
DBG(48583503)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48583504)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48583505)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48583506)> CPU DETAIL: Result: 0000000000000010 
DBG(48583507)> CPU DETAIL: Write 1606: 0000000000000010 
DBG(48583509)> CPU CMD: Exec 0140: 00 60 1699 0272 0256   nop   
DBG(48583510)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48583511)> CPU DETAIL: Transfer to T 
DBG(48583511)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48583513)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48583514)> CPU DETAIL: Read R 1625: 0000000000000059 
DBG(48583515)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48583516)> CPU DETAIL: Result: 0000000000000069 
DBG(48583519)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48583520)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48583521)> CPU DETAIL: Result: 0000000000000131 
DBG(48583524)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48583525)> CPU DETAIL: REG1: 0000000000000131
DBG(48583525)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48583527)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48583528)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48583529)> CPU DETAIL: Transfer to T 
DBG(48583529)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48583531)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48583532)> CPU DETAIL: M4: 0000 
DBG(48583533)> CPU DETAIL: M6: 0023 
DBG(48583534)> CPU DETAIL: Clear M8
DBG(48583534)> CPU DETAIL: M8: 0000 
DBG(48583537)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48583538)> CPU DETAIL: Read R 1612: 0000000000000005 
DBG(48583539)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583540)> CPU DETAIL: Result: 0000000000000006 
DBG(48583541)> CPU DETAIL: Write 1612: 0000000000000006 
DBG(48583543)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48583544)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48583545)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48583548)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48583549)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48583550)> CPU DETAIL: Result: 0858000100100266 
DBG(48583551)> CPU DETAIL: Write 0270: 0858000100100266 
DBG(48583553)> CPU CMD: Exec 0266: 00 60 4397 1460 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583554)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48583554)> CPU DETAIL: Read R 0397: 0100000000111112 
DBG(48583555)> CPU DETAIL: Write 1460: 0100000000111112 
DBG(48583557)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583558)> CPU DETAIL: Read R 0266: 0060439714600000 
DBG(48583559)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583560)> CPU DETAIL: Result: 0060439714610000 
DBG(48583561)> CPU DETAIL: Write 0266: 0060439714610000 
DBG(48583563)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583564)> CPU DETAIL: Read R 1625: 0000000000000059 
DBG(48583565)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583566)> CPU DETAIL: Result: 0000000000000060 
DBG(48583567)> CPU DETAIL: Write 1625: 0000000000000060 
DBG(48583569)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583570)> CPU DETAIL: M4: 0001 
DBG(48583571)> CPU DETAIL: M6: 0023 
DBG(48583572)> CPU DETAIL: M8: 0000 
DBG(48583575)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583576)> CPU DETAIL: M8: 0001 
DBG(48583577)> CPU DETAIL: Transfer to T 
DBG(48583579)> CPU CMD: Exec 0266: 00 60 4397 1461 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583580)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48583580)> CPU DETAIL: Read R 0398: 0000000209999990 
DBG(48583581)> CPU DETAIL: Write 1461: 0000000209999990 
DBG(48583583)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583584)> CPU DETAIL: Read R 0266: 0060439714610000 
DBG(48583585)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583586)> CPU DETAIL: Result: 0060439714620000 
DBG(48583587)> CPU DETAIL: Write 0266: 0060439714620000 
DBG(48583589)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583590)> CPU DETAIL: Read R 1625: 0000000000000060 
DBG(48583591)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583592)> CPU DETAIL: Result: 0000000000000061 
DBG(48583593)> CPU DETAIL: Write 1625: 0000000000000061 
DBG(48583595)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583596)> CPU DETAIL: M4: 0002 
DBG(48583597)> CPU DETAIL: M6: 0023 
DBG(48583598)> CPU DETAIL: M8: 0001 
DBG(48583601)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583602)> CPU DETAIL: M8: 0002 
DBG(48583603)> CPU DETAIL: Transfer to T 
DBG(48583605)> CPU CMD: Exec 0266: 00 60 4397 1462 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583606)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48583606)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48583607)> CPU DETAIL: Write 1462: 0000000000000000 
DBG(48583609)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583610)> CPU DETAIL: Read R 0266: 0060439714620000 
DBG(48583611)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583612)> CPU DETAIL: Result: 0060439714630000 
DBG(48583613)> CPU DETAIL: Write 0266: 0060439714630000 
DBG(48583615)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583616)> CPU DETAIL: Read R 1625: 0000000000000061 
DBG(48583617)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583618)> CPU DETAIL: Result: 0000000000000062 
DBG(48583619)> CPU DETAIL: Write 1625: 0000000000000062 
DBG(48583621)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583622)> CPU DETAIL: M4: 0003 
DBG(48583623)> CPU DETAIL: M6: 0023 
DBG(48583624)> CPU DETAIL: M8: 0002 
DBG(48583627)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583628)> CPU DETAIL: M8: 0003 
DBG(48583629)> CPU DETAIL: Transfer to T 
DBG(48583631)> CPU CMD: Exec 0266: 00 60 4397 1463 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583632)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48583632)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48583633)> CPU DETAIL: Write 1463: 0000000000000000 
DBG(48583635)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583636)> CPU DETAIL: Read R 0266: 0060439714630000 
DBG(48583637)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583638)> CPU DETAIL: Result: 0060439714640000 
DBG(48583639)> CPU DETAIL: Write 0266: 0060439714640000 
DBG(48583641)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583642)> CPU DETAIL: Read R 1625: 0000000000000062 
DBG(48583643)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583644)> CPU DETAIL: Result: 0000000000000063 
DBG(48583645)> CPU DETAIL: Write 1625: 0000000000000063 
DBG(48583647)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583648)> CPU DETAIL: M4: 0004 
DBG(48583649)> CPU DETAIL: M6: 0023 
DBG(48583650)> CPU DETAIL: M8: 0003 
DBG(48583653)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583654)> CPU DETAIL: M8: 0004 
DBG(48583655)> CPU DETAIL: Transfer to T 
DBG(48583657)> CPU CMD: Exec 0266: 00 60 4397 1464 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583658)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48583658)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48583659)> CPU DETAIL: Write 1464: 0000000000000000 
DBG(48583661)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583662)> CPU DETAIL: Read R 0266: 0060439714640000 
DBG(48583663)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583664)> CPU DETAIL: Result: 0060439714650000 
DBG(48583665)> CPU DETAIL: Write 0266: 0060439714650000 
DBG(48583667)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583668)> CPU DETAIL: Read R 1625: 0000000000000063 
DBG(48583669)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583670)> CPU DETAIL: Result: 0000000000000064 
DBG(48583671)> CPU DETAIL: Write 1625: 0000000000000064 
DBG(48583673)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583674)> CPU DETAIL: M4: 0005 
DBG(48583675)> CPU DETAIL: M6: 0023 
DBG(48583676)> CPU DETAIL: M8: 0004 
DBG(48583679)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583680)> CPU DETAIL: M8: 0005 
DBG(48583681)> CPU DETAIL: Transfer to T 
DBG(48583683)> CPU CMD: Exec 0266: 00 60 4397 1465 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583684)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48583684)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48583685)> CPU DETAIL: Write 1465: 0000000000000000 
DBG(48583687)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583688)> CPU DETAIL: Read R 0266: 0060439714650000 
DBG(48583689)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583690)> CPU DETAIL: Result: 0060439714660000 
DBG(48583691)> CPU DETAIL: Write 0266: 0060439714660000 
DBG(48583693)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583694)> CPU DETAIL: Read R 1625: 0000000000000064 
DBG(48583695)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583696)> CPU DETAIL: Result: 0000000000000065 
DBG(48583697)> CPU DETAIL: Write 1625: 0000000000000065 
DBG(48583699)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583700)> CPU DETAIL: M4: 0006 
DBG(48583701)> CPU DETAIL: M6: 0023 
DBG(48583702)> CPU DETAIL: M8: 0005 
DBG(48583705)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583706)> CPU DETAIL: M8: 0006 
DBG(48583707)> CPU DETAIL: Transfer to T 
DBG(48583709)> CPU CMD: Exec 0266: 00 60 4397 1466 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583710)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48583710)> CPU DETAIL: Read R 0403: 0000000000000100 
DBG(48583711)> CPU DETAIL: Write 1466: 0000000000000100 
DBG(48583713)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583714)> CPU DETAIL: Read R 0266: 0060439714660000 
DBG(48583715)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583716)> CPU DETAIL: Result: 0060439714670000 
DBG(48583717)> CPU DETAIL: Write 0266: 0060439714670000 
DBG(48583719)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583720)> CPU DETAIL: Read R 1625: 0000000000000065 
DBG(48583721)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583722)> CPU DETAIL: Result: 0000000000000066 
DBG(48583723)> CPU DETAIL: Write 1625: 0000000000000066 
DBG(48583725)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583726)> CPU DETAIL: M4: 0007 
DBG(48583727)> CPU DETAIL: M6: 0023 
DBG(48583728)> CPU DETAIL: M8: 0006 
DBG(48583731)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583732)> CPU DETAIL: M8: 0007 
DBG(48583733)> CPU DETAIL: Transfer to T 
DBG(48583735)> CPU CMD: Exec 0266: 00 60 4397 1467 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583736)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48583736)> CPU DETAIL: Read R 0404: 0000000201000000 
DBG(48583737)> CPU DETAIL: Write 1467: 0000000201000000 
DBG(48583739)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583740)> CPU DETAIL: Read R 0266: 0060439714670000 
DBG(48583741)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583742)> CPU DETAIL: Result: 0060439714680000 
DBG(48583743)> CPU DETAIL: Write 0266: 0060439714680000 
DBG(48583745)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583746)> CPU DETAIL: Read R 1625: 0000000000000066 
DBG(48583747)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583748)> CPU DETAIL: Result: 0000000000000067 
DBG(48583749)> CPU DETAIL: Write 1625: 0000000000000067 
DBG(48583751)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583752)> CPU DETAIL: M4: 0008 
DBG(48583753)> CPU DETAIL: M6: 0023 
DBG(48583754)> CPU DETAIL: M8: 0007 
DBG(48583757)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583758)> CPU DETAIL: M8: 0008 
DBG(48583759)> CPU DETAIL: Transfer to T 
DBG(48583761)> CPU CMD: Exec 0266: 00 60 4397 1468 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583762)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48583762)> CPU DETAIL: Read R 0405: 0000000000033555 
DBG(48583763)> CPU DETAIL: Write 1468: 0000000000033555 
DBG(48583765)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583766)> CPU DETAIL: Read R 0266: 0060439714680000 
DBG(48583767)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583768)> CPU DETAIL: Result: 0060439714690000 
DBG(48583769)> CPU DETAIL: Write 0266: 0060439714690000 
DBG(48583771)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583772)> CPU DETAIL: Read R 1625: 0000000000000067 
DBG(48583773)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583774)> CPU DETAIL: Result: 0000000000000068 
DBG(48583775)> CPU DETAIL: Write 1625: 0000000000000068 
DBG(48583777)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583778)> CPU DETAIL: M4: 0009 
DBG(48583779)> CPU DETAIL: M6: 0023 
DBG(48583780)> CPU DETAIL: M8: 0008 
DBG(48583783)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583784)> CPU DETAIL: M8: 0009 
DBG(48583785)> CPU DETAIL: Transfer to T 
DBG(48583787)> CPU CMD: Exec 0266: 00 60 4397 1469 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48583788)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48583788)> CPU DETAIL: Read R 0406: 0000000000033666 
DBG(48583789)> CPU DETAIL: Write 1469: 0000000000033666 
DBG(48583791)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48583792)> CPU DETAIL: Read R 0266: 0060439714690000 
DBG(48583793)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48583794)> CPU DETAIL: Result: 0060439714700000 
DBG(48583795)> CPU DETAIL: Write 0266: 0060439714700000 
DBG(48583797)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48583798)> CPU DETAIL: Read R 1625: 0000000000000068 
DBG(48583799)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48583800)> CPU DETAIL: Result: 0000000000000069 
DBG(48583801)> CPU DETAIL: Write 1625: 0000000000000069 
DBG(48583803)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48583804)> CPU DETAIL: M4: 0010 
DBG(48583805)> CPU DETAIL: M6: 0023 
DBG(48583806)> CPU DETAIL: M8: 0009 
DBG(48583809)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48583810)> CPU DETAIL: M8: 0010 
DBG(48583813)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48583816)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48583817)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48583818)> CPU DETAIL: Transfer to T 
DBG(48583818)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48583820)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48583821)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48583822)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48583823)> CPU DETAIL: Result: 0000000000000071 
DBG(48583826)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48583827)> CPU DETAIL: REG1: 0000000000000071
DBG(48583827)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48583829)> CPU CMD: Exec 0124: 00 60 0413 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48583830)> CPU DETAIL: Read R 0413: 3334444455660101 
DBG(48583831)> CPU DETAIL: Write 1608: 3334444455660101 
DBG(48583833)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48583834)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48583834)> CPU DETAIL: Read R 0407: 0130000000121112 
DBG(48583835)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48583836)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48583838)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48583839)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48583840)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48583841)> CPU DETAIL: Result: 0000000000000100 
DBG(48583842)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48583843)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48583845)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48583846)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48583847)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48583848)> CPU DETAIL: Result: 0000000000000001 
DBG(48583849)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48583851)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48583852)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48583853)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48583854)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48583855)> CPU DETAIL: Transfer to T 
DBG(48583857)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48583858)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48583859)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48583860)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48583861)> CPU DETAIL: Transfer to T 
DBG(48583863)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48583864)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48583865)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583866)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48583866)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583867)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583868)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48583869)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48583871)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48583872)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48583873)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583874)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48583874)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583875)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583876)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48583877)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48583879)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48583880)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48583881)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583882)> CPU DETAIL: Result: 0000000000000003 
DBG(48583883)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48583885)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48583886)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48583887)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583888)> CPU DETAIL: Result: 0000000000000003 
DBG(48583889)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48583891)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48583892)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48583893)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48583896)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48583897)> CPU DETAIL: Read R 0124: 0060041316080000 
DBG(48583898)> CPU DETAIL: Result: 0060042616080000 
DBG(48583899)> CPU DETAIL: Write 0124: 0060042616080000 
DBG(48583901)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48583902)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48583903)> CPU DETAIL: Read S 1606: 0000000000000010 
DBG(48583904)> CPU DETAIL: Result: 0000000000000023 
DBG(48583905)> CPU DETAIL: Write 1606: 0000000000000023 
DBG(48583907)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48583910)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48583911)> CPU DETAIL: Read R 1614: 0000000000000033 
DBG(48583912)> CPU DETAIL: Read S 1615: 0000000000000023 
DBG(48583913)> CPU DETAIL: Result: 0000000000000010 
DBG(48583916)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48583917)> CPU DETAIL: REG1: 0000000000000010
DBG(48583917)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48583919)> CPU CMD: Exec 0149: 00 60 1028 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48583920)> CPU DETAIL: Read R 1028: 0000000000000100 
DBG(48583921)> CPU DETAIL: Write 1616: 0000000000000100 
DBG(48583923)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48583924)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48583924)> CPU DETAIL: Read R 1022: 0100000000151113 
DBG(48583925)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48583926)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48583928)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48583929)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48583930)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48583931)> CPU DETAIL: Result: 0000000000000100 
DBG(48583932)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48583933)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48583935)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48583936)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48583937)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48583938)> CPU DETAIL: Result: 0000000000000000 
DBG(48583939)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48583941)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48583942)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48583943)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48583944)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48583945)> CPU DETAIL: Transfer to T 
DBG(48583947)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48583948)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48583949)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583950)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48583950)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583951)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583952)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48583953)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48583955)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48583956)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48583957)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48583958)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48583958)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48583959)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583960)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48583961)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48583963)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48583964)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48583965)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48583968)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48583969)> CPU DETAIL: Read R 0149: 0060102816160000 
DBG(48583970)> CPU DETAIL: Result: 0060103816160000 
DBG(48583971)> CPU DETAIL: Write 0149: 0060103816160000 
DBG(48583973)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48583974)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48583975)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583976)> CPU DETAIL: Result: 0000000000000003 
DBG(48583977)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48583979)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48583980)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48583981)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48583982)> CPU DETAIL: Result: 0000000000000000 
DBG(48583983)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48583985)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48583986)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48583987)> CPU DETAIL: Read S 1615: 0000000000000023 
DBG(48583988)> CPU DETAIL: Result: 0000000000000033 
DBG(48583989)> CPU DETAIL: Write 1615: 0000000000000033 
DBG(48583991)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48583992)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48583993)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48583996)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48583997)> CPU DETAIL: Read R 0167: 0658000100230165 
DBG(48583998)> CPU DETAIL: Result: 0658000100330165 
DBG(48583999)> CPU DETAIL: Write 0167: 0658000100330165 
DBG(48584001)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584002)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48584002)> CPU DETAIL: Read R 1022: 0100000000151113 
DBG(48584003)> CPU DETAIL: Write 0598: 0100000000151113 
DBG(48584005)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584006)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48584007)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584008)> CPU DETAIL: Result: 0060699905990000 
DBG(48584009)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48584011)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584012)> CPU DETAIL: M6: 0024 
DBG(48584013)> CPU DETAIL: Transfer to T 
DBG(48584015)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584016)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48584016)> CPU DETAIL: Read R 1023: 0000000249999990 
DBG(48584017)> CPU DETAIL: Write 0599: 0000000249999990 
DBG(48584019)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584020)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48584021)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584022)> CPU DETAIL: Result: 0060699906000000 
DBG(48584023)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48584025)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584026)> CPU DETAIL: M6: 0025 
DBG(48584027)> CPU DETAIL: Transfer to T 
DBG(48584029)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584030)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48584030)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48584031)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48584033)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584034)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48584035)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584036)> CPU DETAIL: Result: 0060699906010000 
DBG(48584037)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48584039)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584040)> CPU DETAIL: M6: 0026 
DBG(48584041)> CPU DETAIL: Transfer to T 
DBG(48584043)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584044)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48584044)> CPU DETAIL: Read R 1025: 0000000000000000 
DBG(48584045)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48584047)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584048)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48584049)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584050)> CPU DETAIL: Result: 0060699906020000 
DBG(48584051)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48584053)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584054)> CPU DETAIL: M6: 0027 
DBG(48584055)> CPU DETAIL: Transfer to T 
DBG(48584057)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584058)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48584058)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(48584059)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48584061)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584062)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48584063)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584064)> CPU DETAIL: Result: 0060699906030000 
DBG(48584065)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48584067)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584068)> CPU DETAIL: M6: 0028 
DBG(48584069)> CPU DETAIL: Transfer to T 
DBG(48584071)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584072)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48584072)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48584073)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48584075)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584076)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48584077)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584078)> CPU DETAIL: Result: 0060699906040000 
DBG(48584079)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48584081)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584082)> CPU DETAIL: M6: 0029 
DBG(48584083)> CPU DETAIL: Transfer to T 
DBG(48584085)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584086)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48584086)> CPU DETAIL: Read R 1028: 0000000000000100 
DBG(48584087)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48584089)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584090)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48584091)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584092)> CPU DETAIL: Result: 0060699906050000 
DBG(48584093)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48584095)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584096)> CPU DETAIL: M6: 0030 
DBG(48584097)> CPU DETAIL: Transfer to T 
DBG(48584099)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584100)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48584100)> CPU DETAIL: Read R 1029: 0000000242009990 
DBG(48584101)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48584103)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584104)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48584105)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584106)> CPU DETAIL: Result: 0060699906060000 
DBG(48584107)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48584109)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584110)> CPU DETAIL: M6: 0031 
DBG(48584111)> CPU DETAIL: Transfer to T 
DBG(48584113)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584114)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48584114)> CPU DETAIL: Read R 1030: 0000000000033555 
DBG(48584115)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48584117)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584118)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48584119)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584120)> CPU DETAIL: Result: 0060699906070000 
DBG(48584121)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48584123)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584124)> CPU DETAIL: M6: 0032 
DBG(48584125)> CPU DETAIL: Transfer to T 
DBG(48584127)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584128)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48584128)> CPU DETAIL: Read R 1031: 0000000000033666 
DBG(48584129)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48584131)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584132)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48584133)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584134)> CPU DETAIL: Result: 0060699906080000 
DBG(48584135)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48584137)> CPU CMD: Exec 0167: 06 58 0001 0033 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584138)> CPU DETAIL: M6: 0033 
DBG(48584141)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48584142)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48584143)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48584145)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48584148)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48584149)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48584150)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48584153)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48584154)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48584155)> CPU DETAIL: Result: 0000001000000000 
DBG(48584158)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48584159)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48584160)> CPU DETAIL: Result: 0042440716550000 
DBG(48584161)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48584163)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48584164)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48584165)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584166)> CPU DETAIL: Result: 0000000249999990 
DBG(48584167)> CPU DETAIL: Write 1620: 0000000249999990 
DBG(48584169)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48584170)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48584170)> CPU DETAIL: Read R 0417: 0000000231030000 
DBG(48584171)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584172)> CPU DETAIL: Result: 0000000231030000 
DBG(48584175)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48584176)> CPU DETAIL: Read S 1620: 0000000249999990 
DBG(48584177)> CPU DETAIL: Result: 9999999981030010 
DBG(48584180)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48584181)> CPU DETAIL: REG1: 9999999981030010
DBG(48584181)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(48584183)> CPU CMD: Exec 0207: 00 72 1653 1621 0373   if (1621 current input tape) <> 01 0..0 goto 0373   
DBG(48584184)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48584185)> CPU DETAIL: Read S 1621: 0100000000000000 
DBG(48584186)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48584189)> CPU CMD: Exec 0208: 00 60 1704 0148 0000   ???   
DBG(48584190)> CPU DETAIL: Read R 1704: 0060000000000359 
DBG(48584191)> CPU DETAIL: Write 0148: 0060000000000359 
DBG(48584193)> CPU CMD: Exec 0209: 00 60 0177 0169 0177   ???, goto 0177    
DBG(48584194)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48584195)> CPU DETAIL: Transfer to T 
DBG(48584195)> CPU DETAIL: Write 0169: 0060019701960179 
DBG(48584197)> CPU CMD: Exec 0177: 00 60 0197 0196 0179   ???, goto 0179   
DBG(48584198)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48584199)> CPU DETAIL: Transfer to T 
DBG(48584199)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48584201)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48584202)> CPU DETAIL: Read R 1611: 0000000000000071 
DBG(48584203)> CPU DETAIL: Read S 1619: 0000000000000010 
DBG(48584204)> CPU DETAIL: Result: 0000000000000081 
DBG(48584207)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48584208)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48584209)> CPU DETAIL: Result: 0000000000000119 
DBG(48584212)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48584213)> CPU DETAIL: REG1: 0000000000000119
DBG(48584213)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48584215)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48584216)> CPU DETAIL: M4: 0010 
DBG(48584217)> CPU DETAIL: M6: 0033 
DBG(48584218)> CPU DETAIL: Clear M8
DBG(48584218)> CPU DETAIL: M8: 0000 
DBG(48584221)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48584222)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48584223)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48584226)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48584227)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48584228)> CPU DETAIL: Result: 0858000100100191 
DBG(48584229)> CPU DETAIL: Write 0194: 0858000100100191 
DBG(48584231)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48584232)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48584233)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584234)> CPU DETAIL: Result: 0000000249999990 
DBG(48584237)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48584238)> CPU DETAIL: Read R 1636: 0000000233090000 
DBG(48584239)> CPU DETAIL: Diff: REG1: 9999999983090010
DBG(48584240)> CPU DETAIL: Transfer to T 
DBG(48584242)> CPU CMD: Exec 0191: 00 60 8598 1271 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584243)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48584243)> CPU DETAIL: Read R 0598: 0100000000151113 
DBG(48584244)> CPU DETAIL: Write 1271: 0100000000151113 
DBG(48584246)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584247)> CPU DETAIL: Read R 0191: 0060859812710000 
DBG(48584248)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584249)> CPU DETAIL: Result: 0060859812720000 
DBG(48584250)> CPU DETAIL: Write 0191: 0060859812720000 
DBG(48584252)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584253)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584254)> CPU DETAIL: Read S 1611: 0000000000000071 
DBG(48584255)> CPU DETAIL: Result: 0000000000000072 
DBG(48584256)> CPU DETAIL: Write 1611: 0000000000000072 
DBG(48584258)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584259)> CPU DETAIL: M8: 0001 
DBG(48584260)> CPU DETAIL: Transfer to T 
DBG(48584262)> CPU CMD: Exec 0191: 00 60 8598 1272 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584263)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48584263)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48584264)> CPU DETAIL: Write 1272: 0000000249999990 
DBG(48584266)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584267)> CPU DETAIL: Read R 0191: 0060859812720000 
DBG(48584268)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584269)> CPU DETAIL: Result: 0060859812730000 
DBG(48584270)> CPU DETAIL: Write 0191: 0060859812730000 
DBG(48584272)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584273)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584274)> CPU DETAIL: Read S 1611: 0000000000000072 
DBG(48584275)> CPU DETAIL: Result: 0000000000000073 
DBG(48584276)> CPU DETAIL: Write 1611: 0000000000000073 
DBG(48584278)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584279)> CPU DETAIL: M8: 0002 
DBG(48584280)> CPU DETAIL: Transfer to T 
DBG(48584282)> CPU CMD: Exec 0191: 00 60 8598 1273 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584283)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48584283)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48584284)> CPU DETAIL: Write 1273: 0000000000000000 
DBG(48584286)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584287)> CPU DETAIL: Read R 0191: 0060859812730000 
DBG(48584288)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584289)> CPU DETAIL: Result: 0060859812740000 
DBG(48584290)> CPU DETAIL: Write 0191: 0060859812740000 
DBG(48584292)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584293)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584294)> CPU DETAIL: Read S 1611: 0000000000000073 
DBG(48584295)> CPU DETAIL: Result: 0000000000000074 
DBG(48584296)> CPU DETAIL: Write 1611: 0000000000000074 
DBG(48584298)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584299)> CPU DETAIL: M8: 0003 
DBG(48584300)> CPU DETAIL: Transfer to T 
DBG(48584302)> CPU CMD: Exec 0191: 00 60 8598 1274 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584303)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48584303)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48584304)> CPU DETAIL: Write 1274: 0000000000000000 
DBG(48584306)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584307)> CPU DETAIL: Read R 0191: 0060859812740000 
DBG(48584308)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584309)> CPU DETAIL: Result: 0060859812750000 
DBG(48584310)> CPU DETAIL: Write 0191: 0060859812750000 
DBG(48584312)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584313)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584314)> CPU DETAIL: Read S 1611: 0000000000000074 
DBG(48584315)> CPU DETAIL: Result: 0000000000000075 
DBG(48584316)> CPU DETAIL: Write 1611: 0000000000000075 
DBG(48584318)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584319)> CPU DETAIL: M8: 0004 
DBG(48584320)> CPU DETAIL: Transfer to T 
DBG(48584322)> CPU CMD: Exec 0191: 00 60 8598 1275 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584323)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48584323)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48584324)> CPU DETAIL: Write 1275: 0000000000000000 
DBG(48584326)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584327)> CPU DETAIL: Read R 0191: 0060859812750000 
DBG(48584328)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584329)> CPU DETAIL: Result: 0060859812760000 
DBG(48584330)> CPU DETAIL: Write 0191: 0060859812760000 
DBG(48584332)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584333)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584334)> CPU DETAIL: Read S 1611: 0000000000000075 
DBG(48584335)> CPU DETAIL: Result: 0000000000000076 
DBG(48584336)> CPU DETAIL: Write 1611: 0000000000000076 
DBG(48584338)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584339)> CPU DETAIL: M8: 0005 
DBG(48584340)> CPU DETAIL: Transfer to T 
DBG(48584342)> CPU CMD: Exec 0191: 00 60 8598 1276 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584343)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48584343)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48584344)> CPU DETAIL: Write 1276: 0000000000000000 
DBG(48584346)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584347)> CPU DETAIL: Read R 0191: 0060859812760000 
DBG(48584348)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584349)> CPU DETAIL: Result: 0060859812770000 
DBG(48584350)> CPU DETAIL: Write 0191: 0060859812770000 
DBG(48584352)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584353)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584354)> CPU DETAIL: Read S 1611: 0000000000000076 
DBG(48584355)> CPU DETAIL: Result: 0000000000000077 
DBG(48584356)> CPU DETAIL: Write 1611: 0000000000000077 
DBG(48584358)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584359)> CPU DETAIL: M8: 0006 
DBG(48584360)> CPU DETAIL: Transfer to T 
DBG(48584362)> CPU CMD: Exec 0191: 00 60 8598 1277 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584363)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48584363)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48584364)> CPU DETAIL: Write 1277: 0000000000000100 
DBG(48584366)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584367)> CPU DETAIL: Read R 0191: 0060859812770000 
DBG(48584368)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584369)> CPU DETAIL: Result: 0060859812780000 
DBG(48584370)> CPU DETAIL: Write 0191: 0060859812780000 
DBG(48584372)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584373)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584374)> CPU DETAIL: Read S 1611: 0000000000000077 
DBG(48584375)> CPU DETAIL: Result: 0000000000000078 
DBG(48584376)> CPU DETAIL: Write 1611: 0000000000000078 
DBG(48584378)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584379)> CPU DETAIL: M8: 0007 
DBG(48584380)> CPU DETAIL: Transfer to T 
DBG(48584382)> CPU CMD: Exec 0191: 00 60 8598 1278 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584383)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48584383)> CPU DETAIL: Read R 0605: 0000000242009990 
DBG(48584384)> CPU DETAIL: Write 1278: 0000000242009990 
DBG(48584386)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584387)> CPU DETAIL: Read R 0191: 0060859812780000 
DBG(48584388)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584389)> CPU DETAIL: Result: 0060859812790000 
DBG(48584390)> CPU DETAIL: Write 0191: 0060859812790000 
DBG(48584392)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584393)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584394)> CPU DETAIL: Read S 1611: 0000000000000078 
DBG(48584395)> CPU DETAIL: Result: 0000000000000079 
DBG(48584396)> CPU DETAIL: Write 1611: 0000000000000079 
DBG(48584398)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584399)> CPU DETAIL: M8: 0008 
DBG(48584400)> CPU DETAIL: Transfer to T 
DBG(48584402)> CPU CMD: Exec 0191: 00 60 8598 1279 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584403)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48584403)> CPU DETAIL: Read R 0606: 0000000000033555 
DBG(48584404)> CPU DETAIL: Write 1279: 0000000000033555 
DBG(48584406)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584407)> CPU DETAIL: Read R 0191: 0060859812790000 
DBG(48584408)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584409)> CPU DETAIL: Result: 0060859812800000 
DBG(48584410)> CPU DETAIL: Write 0191: 0060859812800000 
DBG(48584412)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584413)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584414)> CPU DETAIL: Read S 1611: 0000000000000079 
DBG(48584415)> CPU DETAIL: Result: 0000000000000080 
DBG(48584416)> CPU DETAIL: Write 1611: 0000000000000080 
DBG(48584418)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584419)> CPU DETAIL: M8: 0009 
DBG(48584420)> CPU DETAIL: Transfer to T 
DBG(48584422)> CPU CMD: Exec 0191: 00 60 8598 1280 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48584423)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48584423)> CPU DETAIL: Read R 0607: 0000000000033666 
DBG(48584424)> CPU DETAIL: Write 1280: 0000000000033666 
DBG(48584426)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48584427)> CPU DETAIL: Read R 0191: 0060859812800000 
DBG(48584428)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584429)> CPU DETAIL: Result: 0060859812810000 
DBG(48584430)> CPU DETAIL: Write 0191: 0060859812810000 
DBG(48584432)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48584433)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584434)> CPU DETAIL: Read S 1611: 0000000000000080 
DBG(48584435)> CPU DETAIL: Result: 0000000000000081 
DBG(48584436)> CPU DETAIL: Write 1611: 0000000000000081 
DBG(48584438)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48584439)> CPU DETAIL: M8: 0010 
DBG(48584442)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48584443)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48584444)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584445)> CPU DETAIL: Result: 0000000249999990 
DBG(48584446)> CPU DETAIL: Write 1636: 0000000249999990 
DBG(48584448)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48584449)> CPU DETAIL: Transfer to T 
DBG(48584451)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48584452)> CPU DETAIL: Read R 1614: 0000000000000033 
DBG(48584453)> CPU DETAIL: Read S 1615: 0000000000000033 
DBG(48584454)> CPU DETAIL: Result: 0000000000000000 
DBG(48584457)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48584458)> CPU DETAIL: REG1: 0000000000000000
DBG(48584458)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48584460)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48584461)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48584462)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48584464)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48584465)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48584466)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48584468)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48584469)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48584470)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48584472)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48584473)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48584474)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48584476)> CPU CMD: Exec 0148: 00 60 0000 0000 0359   goto read event block from input tape 01   
DBG(48584477)> CPU DETAIL: Transfer to T 
DBG(48584479)> CPU CMD: Exec 0359: 00 70 1611 1640 0210   if (1611 num of word in output block) = zero goto 0210 switch output tape   
DBG(48584480)> CPU DETAIL: Read R 1611: 0000000000000081 
DBG(48584481)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48584482)> CPU DETAIL: Diff: REG1: 0000000000000081
DBG(48584485)> CPU CMD: Exec 0360: 00 60 1712 0206 0198   set exit for 0198 routine to 0210, goto 0198 write output buf to tape    
DBG(48584486)> CPU DETAIL: Read R 1712: 0060000000000210 
DBG(48584487)> CPU DETAIL: Transfer to T 
DBG(48584487)> CPU DETAIL: Write 0206: 0060000000000210 
DBG(48584489)> CPU CMD: Exec 0198: 96 60 1611 0000 0000   set instr ...   
DBG(48584490)> CPU DETAIL: Read R 1611: 0000000000000081 
DBG(48584491)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000810000 
DBG(48584494)> CPU CMD: Exec 0199: 00 41 0000 1648 0000   ... to write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48584495)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584496)> CPU DETAIL: Result: 0000000000800000 
DBG(48584499)> CPU CMD: Exec 0200: 00 40 1664 0000 0201   ... and block 0500 using 1664   
DBG(48584500)> CPU DETAIL: Read R 1664: 0591120012000500 
DBG(48584501)> CPU DETAIL: Result: 0591120012800500 
DBG(48584502)> CPU DETAIL: Write 0201: 0591120012800500 
DBG(48584504)> CPU CMD: Exec 0201: 05 91 1200 1280 0500   write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48584505)> CPU DETAIL: Tape operation on MT5, Addr 1200->1280, Block Number 0500
DBG(48584505)> MT CMD: Tape unit 5: init write
DBG(48584505)> MT EXP: Write from 1200 to 1280 as Block number 0500
DBG(48584505)> MT EXP: Start Of Block: 05 91 1200 1280 0500
DBG(48584505)> MT EXP: CRT 1200 to Tape: 0130000000121114 
DBG(48584505)> MT EXP: CRT 1201 to Tape: 0000000231030000 
DBG(48584505)> MT EXP: CRT 1202 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1203 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1204 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1205 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1206 to Tape: 3336000000000200 
DBG(48584505)> MT EXP: CRT 1207 to Tape: 0000000231010000 
DBG(48584505)> MT EXP: CRT 1208 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1209 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1210 to Tape: 0000000231020000 
DBG(48584505)> MT EXP: CRT 1211 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1212 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1213 to Tape: 0130000000131113 
DBG(48584505)> MT EXP: CRT 1214 to Tape: 0100000232090000 
DBG(48584505)> MT EXP: CRT 1215 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1216 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1217 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1218 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1219 to Tape: 3336000000000200 
DBG(48584505)> MT EXP: CRT 1220 to Tape: 0000000232000000 
DBG(48584505)> MT EXP: CRT 1221 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1222 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1223 to Tape: 0000000232010000 
DBG(48584505)> MT EXP: CRT 1224 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1225 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1226 to Tape: 0160000000141013 
DBG(48584505)> MT EXP: CRT 1227 to Tape: 0100000233020003 
DBG(48584505)> MT EXP: CRT 1228 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1229 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1230 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1231 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1232 to Tape: 3335444455660201 
DBG(48584505)> MT EXP: CRT 1233 to Tape: 0000000233000000 
DBG(48584505)> MT EXP: CRT 1234 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1235 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1236 to Tape: 0000000233010000 
DBG(48584505)> MT EXP: CRT 1237 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1238 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1239 to Tape: 0000000233030000 
DBG(48584505)> MT EXP: CRT 1240 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1241 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1242 to Tape: 0160000000141014 
DBG(48584505)> MT EXP: CRT 1243 to Tape: 0000000233030000 
DBG(48584505)> MT EXP: CRT 1244 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1245 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1246 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1247 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1248 to Tape: 3336000000000201 
DBG(48584505)> MT EXP: CRT 1249 to Tape: 0000000233010000 
DBG(48584505)> MT EXP: CRT 1250 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1251 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1252 to Tape: 0000000233020000 
DBG(48584505)> MT EXP: CRT 1253 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1254 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1255 to Tape: 0000000233090000 
DBG(48584505)> MT EXP: CRT 1256 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1257 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1258 to Tape: 0130000000141015 
DBG(48584505)> MT EXP: CRT 1259 to Tape: 0000000233090000 
DBG(48584505)> MT EXP: CRT 1260 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1261 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1262 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1263 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1264 to Tape: 3336000000000200 
DBG(48584505)> MT EXP: CRT 1265 to Tape: 0000000233010000 
DBG(48584505)> MT EXP: CRT 1266 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1267 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1268 to Tape: 0000000233030000 
DBG(48584505)> MT EXP: CRT 1269 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1270 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1271 to Tape: 0100000000151113 
DBG(48584505)> MT EXP: CRT 1272 to Tape: 0000000249999990 
DBG(48584505)> MT EXP: CRT 1273 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1274 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1275 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1276 to Tape: 0000000000000000 
DBG(48584505)> MT EXP: CRT 1277 to Tape: 0000000000000100 
DBG(48584505)> MT EXP: CRT 1278 to Tape: 0000000242009990 
DBG(48584505)> MT EXP: CRT 1279 to Tape: 0000000000033555 
DBG(48584505)> MT EXP: CRT 1280 to Tape: 0000000000033666 
DBG(48584505)> MT EXP: End Of Block: 05 91 1200 1280 0500 (81 words)
DBG(48584505)> MT DETAIL: Write block (1496 chars, used 4.43 inches, needs 28 msec) to tape 5
DBG(48584505)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48584508)> CPU CMD: Exec 0202: 08 60 0202 0000 1730   call 1730 check write   
DBG(48584509)> CPU DETAIL: Read R 0202: 0860020200001730 
DBG(48584510)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600202 
DBG(48584511)> CPU DETAIL: Transfer to T 
DBG(48584513)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48584514)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48584515)> CPU DETAIL: Result: 0060000000000203 
DBG(48584516)> CPU DETAIL: Write 1742: 0060000000000203 
DBG(48584518)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48584519)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000203000000000 
DBG(48584522)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48584523)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48584524)> CPU DETAIL: Result: 0600201174700000 
DBG(48584525)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060020117470000 
DBG(48584526)> CPU DETAIL: Write 1734: 0060020117470000 
DBG(48584528)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48584529)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48584530)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48584532)> CPU CMD: Exec 1734: 00 60 0201 1747 0000      
DBG(48584533)> CPU DETAIL: Read R 0201: 0591120012800500 
DBG(48584534)> CPU DETAIL: Write 1747: 0591120012800500 
DBG(48584536)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48584537)> CPU DETAIL: Condition not present 
DBG(48584539)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48584540)> CPU DETAIL: Transfer to T 
DBG(48584542)> CPU CMD: Exec 1742: 00 60 0000 0000 0203   EXIT_CheckWrite   
DBG(48584543)> CPU DETAIL: Transfer to T 
DBG(48584545)> CPU CMD: Exec 0203: 00 40 1664 1639 1664   incr block number on write tape instr   
DBG(48584546)> CPU DETAIL: Read R 1664: 0591120012000500 
DBG(48584547)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48584548)> CPU DETAIL: Result: 0591120012000501 
DBG(48584549)> CPU DETAIL: Write 1664: 0591120012000501 
DBG(48584551)> CPU CMD: Exec 0204: 00 60 1640 1611 0000   clear (1611 num of words in event output block)   
DBG(48584552)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48584553)> CPU DETAIL: Write 1611: 0000000000000000 
DBG(48584555)> CPU CMD: Exec 0205: 00 60 1663 0191 0000   restore instr 0191   
DBG(48584556)> CPU DETAIL: Read R 1663: 0060859812000000 
DBG(48584557)> CPU DETAIL: Write 0191: 0060859812000000 
DBG(48584559)> CPU CMD: Exec 0206: 00 60 0000 0000 0210   goto 0210 switch output tape   
DBG(48584560)> CPU DETAIL: Transfer to T 
DBG(48584562)> CPU CMD: Exec 0210: 00 42 0201 1653 0000   get tape number 0N 0..0 from 0201 tape write instr   
DBG(48584563)> CPU DETAIL: Read R 0201: 0591120012800500 
DBG(48584564)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48584565)> CPU DETAIL: Result: 0500000000000000 
DBG(48584568)> CPU CMD: Exec 0211: 00 72 1666 0000 0218   if tape number <> 05 0..0 goto 0218   
DBG(48584569)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48584570)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48584573)> CPU CMD: Exec 0212: 00 40 1664 1653 1664   set tape write instr to tape 06    
DBG(48584574)> CPU DETAIL: Read R 1664: 0591120012000501 
DBG(48584575)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48584576)> CPU DETAIL: Result: 0691120012000501 
DBG(48584577)> CPU DETAIL: Write 1664: 0691120012000501 
DBG(48584579)> CPU CMD: Exec 0213: 00 60 1701 0338 0000   set tape read instr to tape 05   
DBG(48584580)> CPU DETAIL: Read R 1701: 0594099900000000 
DBG(48584581)> CPU DETAIL: Write 0338: 0594099900000000 
DBG(48584583)> CPU CMD: Exec 0214: 00 40 1683 1666 0223   set instr 0223 to write end of file to tape 05   
DBG(48584584)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48584585)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48584586)> CPU DETAIL: Result: 0591000000000000 
DBG(48584587)> CPU DETAIL: Write 0223: 0591000000000000 
DBG(48584589)> CPU CMD: Exec 0215: 00 40 1684 1666 0224   set instr 0224 to rewind tape 05   
DBG(48584590)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48584591)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48584592)> CPU DETAIL: Result: 0598000000000000 
DBG(48584593)> CPU DETAIL: Write 0224: 0598000000000000 
DBG(48584595)> CPU CMD: Exec 0216: 00 40 1684 1666 0343   set instr 0343 to rewind tape 05   
DBG(48584596)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48584597)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48584598)> CPU DETAIL: Result: 0598000000000000 
DBG(48584599)> CPU DETAIL: Write 0343: 0598000000000000 
DBG(48584601)> CPU CMD: Exec 0217: 00 60 0000 0000 0223   goto 0223   
DBG(48584602)> CPU DETAIL: Transfer to T 
DBG(48584604)> CPU CMD: Exec 0223: 05 91 0000 0000 0000   write end of file to tape      
DBG(48584605)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48584605)> MT CMD: Tape unit 5: init write
DBG(48584605)> MT EXP: End Of File mark: 02d 05 0091 0000 0000
DBG(48584605)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 5
DBG(48584605)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48584608)> CPU CMD: Exec 0224: 05 98 0000 0000 0000   rewind tape   
DBG(48584609)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48584609)> MT CMD: Tape unit 5: init rewind (current medium used 5.97 inches)
DBG(48584609)> MT CMD: Tape unit 5: rewind time (0 sec)
DBG(48584609)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48584611)> CPU CMD: Exec 0225: 00 60 1689 0148 0000   set read from tape 2/4 instead of tape 1   
DBG(48584612)> CPU DETAIL: Read R 1689: 0060000000000338 
DBG(48584613)> CPU DETAIL: Write 0148: 0060000000000338 
DBG(48584615)> CPU CMD: Exec 0226: 00 60 1640 1636 0144   clear (1636 last event saved in tape 5), goto 0144 tape 1 input event block  
DBG(48584616)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48584617)> CPU DETAIL: Transfer to T 
DBG(48584617)> CPU DETAIL: Write 1636: 0000000000000000 
DBG(48584619)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48584620)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48584621)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48584623)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48584624)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48584625)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48584627)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48584628)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48584629)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48584631)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48584632)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48584633)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48584635)> CPU CMD: Exec 0148: 00 60 0000 0000 0338   goto read event block from input tape 01   
DBG(48584636)> CPU DETAIL: Transfer to T 
DBG(48584638)> CPU CMD: Exec 0338: 05 94 0999 0000 0000   read input tape 5 at addr 0999   
DBG(48584639)> CPU DETAIL: Tape operation on MT5, Addr 0999->0000, Block Number 0000
DBG(48584639)> MT DATA: Tape unit 5: init read
DBG(48584639)> MT DETAIL: Read tape record (1496 chars, used 4.43 inches, needs 28 msec) from tape 5
DBG(48584639)> MT DETAIL: Tape record contents: D*0591120012800500C*0130000000121114C*0000000231030000C*00000000000000...
DBG(48584639)> MT EXP: Start Of Block Word: 0591120012800500
DBG(48584639)> MT EXP: Read Tape Block number 0500
DBG(48584639)> MT EXP: Read forward addr 0999 to 0000
DBG(48584639)> MT EXP: Tape to CRT 0999: 0130000000121114 
DBG(48584639)> MT EXP: Tape to CRT 1000: 0000000231030000 
DBG(48584639)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1005: 3336000000000200 
DBG(48584639)> MT EXP: Tape to CRT 1006: 0000000231010000 
DBG(48584639)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1009: 0000000231020000 
DBG(48584639)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1012: 0130000000131113 
DBG(48584639)> MT EXP: Tape to CRT 1013: 0100000232090000 
DBG(48584639)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1018: 3336000000000200 
DBG(48584639)> MT EXP: Tape to CRT 1019: 0000000232000000 
DBG(48584639)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1022: 0000000232010000 
DBG(48584639)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1025: 0160000000141013 
DBG(48584639)> MT EXP: Tape to CRT 1026: 0100000233020003 
DBG(48584639)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1030: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1031: 3335444455660201 
DBG(48584639)> MT EXP: Tape to CRT 1032: 0000000233000000 
DBG(48584639)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1035: 0000000233010000 
DBG(48584639)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1037: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1038: 0000000233030000 
DBG(48584639)> MT EXP: Tape to CRT 1039: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1040: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1041: 0160000000141014 
DBG(48584639)> MT EXP: Tape to CRT 1042: 0000000233030000 
DBG(48584639)> MT EXP: Tape to CRT 1043: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1044: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1045: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1047: 3336000000000201 
DBG(48584639)> MT EXP: Tape to CRT 1048: 0000000233010000 
DBG(48584639)> MT EXP: Tape to CRT 1049: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1050: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1051: 0000000233020000 
DBG(48584639)> MT EXP: Tape to CRT 1052: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1053: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1054: 0000000233090000 
DBG(48584639)> MT EXP: Tape to CRT 1055: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1056: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1057: 0130000000141015 
DBG(48584639)> MT EXP: Tape to CRT 1058: 0000000233090000 
DBG(48584639)> MT EXP: Tape to CRT 1059: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1060: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1061: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1062: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1063: 3336000000000200 
DBG(48584639)> MT EXP: Tape to CRT 1064: 0000000233010000 
DBG(48584639)> MT EXP: Tape to CRT 1065: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1066: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1067: 0000000233030000 
DBG(48584639)> MT EXP: Tape to CRT 1068: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1069: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1070: 0100000000151113 
DBG(48584639)> MT EXP: Tape to CRT 1071: 0000000249999990 
DBG(48584639)> MT EXP: Tape to CRT 1072: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1073: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1074: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1075: 0000000000000000 
DBG(48584639)> MT EXP: Tape to CRT 1076: 0000000000000100 
DBG(48584639)> MT EXP: Tape to CRT 1077: 0000000242009990 
DBG(48584639)> MT EXP: Tape to CRT 1078: 0000000000033555 
DBG(48584639)> MT EXP: Tape to CRT 1079: 0000000000033666 
DBG(48584639)> MT EXP: End Of Block Word: 0591120012800500, data words in block: 81
DBG(48584639)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48584642)> CPU CMD: Exec 0339: 08 68 0339 0000 1713   if tape check, call 1713 reread      
DBG(48584643)> CPU DETAIL: Condition not present 
DBG(48584645)> CPU CMD: Exec 0340: 00 67 1688 1628 1760   if end of file, 06 0..0 -> (1628), goto 1760   
DBG(48584646)> CPU DETAIL: Condition not present 
DBG(48584648)> CPU CMD: Exec 0341: 00 60 0000 1613 0000   REG1 -> (1613 Saved start of block just read from tape 01/05)   
DBG(48584649)> CPU DETAIL: Write 1613: 0591120012800500 
DBG(48584651)> CPU CMD: Exec 0342: 00 60 1666 1621 0111   05 0..0 -> (1621 current input tape), goto 0111 read event from input tape   
DBG(48584652)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48584653)> CPU DETAIL: Transfer to T 
DBG(48584653)> CPU DETAIL: Write 1621: 0500000000000000 
DBG(48584655)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48584656)> CPU DETAIL: Read R 1613: 0591120012800500 
DBG(48584657)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48584658)> CPU DETAIL: Result: 0000000012800000 
DBG(48584659)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001280 
DBG(48584660)> CPU DETAIL: Write 1604: 0000000000001280 
DBG(48584662)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48584663)> CPU DETAIL: Read R 1613: 0591120012800500 
DBG(48584664)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48584665)> CPU DETAIL: Result: 0000120000000000 
DBG(48584666)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001200 
DBG(48584669)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48584670)> CPU DETAIL: Read R 1604: 0000000000001280 
DBG(48584671)> CPU DETAIL: Result: 0000000000000080 
DBG(48584672)> CPU DETAIL: Write 1614: 0000000000000080 
DBG(48584674)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48584675)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48584676)> CPU DETAIL: Result: 0000000000000081 
DBG(48584677)> CPU DETAIL: Write 1614: 0000000000000081 
DBG(48584679)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48584680)> CPU DETAIL: M4: 0010 
DBG(48584681)> CPU DETAIL: Clear M6
DBG(48584681)> CPU DETAIL: M6: 0000 
DBG(48584682)> CPU DETAIL: M8: 0010 
DBG(48584685)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48584686)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48584687)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48584689)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48584690)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48584691)> CPU DETAIL: Transfer to T 
DBG(48584691)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48584693)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48584694)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48584695)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48584696)> CPU DETAIL: Result: 0000000000000081 
DBG(48584699)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48584700)> CPU DETAIL: REG1: 0000000000000081
DBG(48584700)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48584702)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48584703)> CPU DETAIL: Read R 1005: 3336000000000200 
DBG(48584704)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48584706)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48584707)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48584707)> CPU DETAIL: Read R 0999: 0130000000121114 
DBG(48584708)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48584709)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48584711)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48584712)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48584713)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48584714)> CPU DETAIL: Result: 0000000000000200 
DBG(48584715)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48584716)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48584718)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48584719)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48584720)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48584721)> CPU DETAIL: Result: 0000000000000000 
DBG(48584722)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48584724)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48584725)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48584726)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48584727)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48584728)> CPU DETAIL: Transfer to T 
DBG(48584730)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48584731)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48584732)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48584733)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48584733)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48584734)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48584735)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48584736)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48584738)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48584739)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48584740)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48584741)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48584741)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48584742)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48584743)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48584744)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48584746)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48584747)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48584748)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48584751)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48584752)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48584753)> CPU DETAIL: Result: 0060101816160000 
DBG(48584754)> CPU DETAIL: Write 0149: 0060101816160000 
DBG(48584756)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48584757)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48584758)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48584759)> CPU DETAIL: Result: 0000000000000006 
DBG(48584760)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48584762)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48584763)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48584764)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48584765)> CPU DETAIL: Result: 0000000000000000 
DBG(48584766)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48584768)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48584769)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48584770)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48584771)> CPU DETAIL: Result: 0000000000000013 
DBG(48584772)> CPU DETAIL: Write 1615: 0000000000000013 
DBG(48584774)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48584775)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48584776)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48584779)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48584780)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48584781)> CPU DETAIL: Result: 0658000100130165 
DBG(48584782)> CPU DETAIL: Write 0167: 0658000100130165 
DBG(48584784)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584785)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48584785)> CPU DETAIL: Read R 0999: 0130000000121114 
DBG(48584786)> CPU DETAIL: Write 0598: 0130000000121114 
DBG(48584788)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584789)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48584790)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584791)> CPU DETAIL: Result: 0060699905990000 
DBG(48584792)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48584794)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584795)> CPU DETAIL: M6: 0001 
DBG(48584796)> CPU DETAIL: Transfer to T 
DBG(48584798)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584799)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48584799)> CPU DETAIL: Read R 1000: 0000000231030000 
DBG(48584800)> CPU DETAIL: Write 0599: 0000000231030000 
DBG(48584802)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584803)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48584804)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584805)> CPU DETAIL: Result: 0060699906000000 
DBG(48584806)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48584808)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584809)> CPU DETAIL: M6: 0002 
DBG(48584810)> CPU DETAIL: Transfer to T 
DBG(48584812)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584813)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48584813)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48584814)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48584816)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584817)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48584818)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584819)> CPU DETAIL: Result: 0060699906010000 
DBG(48584820)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48584822)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584823)> CPU DETAIL: M6: 0003 
DBG(48584824)> CPU DETAIL: Transfer to T 
DBG(48584826)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584827)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48584827)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48584828)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48584830)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584831)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48584832)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584833)> CPU DETAIL: Result: 0060699906020000 
DBG(48584834)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48584836)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584837)> CPU DETAIL: M6: 0004 
DBG(48584838)> CPU DETAIL: Transfer to T 
DBG(48584840)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584841)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48584841)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48584842)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48584844)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584845)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48584846)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584847)> CPU DETAIL: Result: 0060699906030000 
DBG(48584848)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48584850)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584851)> CPU DETAIL: M6: 0005 
DBG(48584852)> CPU DETAIL: Transfer to T 
DBG(48584854)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584855)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48584855)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48584856)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48584858)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584859)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48584860)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584861)> CPU DETAIL: Result: 0060699906040000 
DBG(48584862)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48584864)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584865)> CPU DETAIL: M6: 0006 
DBG(48584866)> CPU DETAIL: Transfer to T 
DBG(48584868)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584869)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48584869)> CPU DETAIL: Read R 1005: 3336000000000200 
DBG(48584870)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48584872)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584873)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48584874)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584875)> CPU DETAIL: Result: 0060699906050000 
DBG(48584876)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48584878)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584879)> CPU DETAIL: M6: 0007 
DBG(48584880)> CPU DETAIL: Transfer to T 
DBG(48584882)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584883)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48584883)> CPU DETAIL: Read R 1006: 0000000231010000 
DBG(48584884)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48584886)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584887)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48584888)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584889)> CPU DETAIL: Result: 0060699906060000 
DBG(48584890)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48584892)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584893)> CPU DETAIL: M6: 0008 
DBG(48584894)> CPU DETAIL: Transfer to T 
DBG(48584896)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584897)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48584897)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48584898)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48584900)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584901)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48584902)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584903)> CPU DETAIL: Result: 0060699906070000 
DBG(48584904)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48584906)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584907)> CPU DETAIL: M6: 0009 
DBG(48584908)> CPU DETAIL: Transfer to T 
DBG(48584910)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584911)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48584911)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48584912)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48584914)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584915)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48584916)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584917)> CPU DETAIL: Result: 0060699906080000 
DBG(48584918)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48584920)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584921)> CPU DETAIL: M6: 0010 
DBG(48584922)> CPU DETAIL: Transfer to T 
DBG(48584924)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584925)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48584925)> CPU DETAIL: Read R 1009: 0000000231020000 
DBG(48584926)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48584928)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584929)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48584930)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584931)> CPU DETAIL: Result: 0060699906090000 
DBG(48584932)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48584934)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584935)> CPU DETAIL: M6: 0011 
DBG(48584936)> CPU DETAIL: Transfer to T 
DBG(48584938)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584939)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48584939)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48584940)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48584942)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584943)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48584944)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584945)> CPU DETAIL: Result: 0060699906100000 
DBG(48584946)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48584948)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584949)> CPU DETAIL: M6: 0012 
DBG(48584950)> CPU DETAIL: Transfer to T 
DBG(48584952)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48584953)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48584953)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48584954)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48584956)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48584957)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48584958)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48584959)> CPU DETAIL: Result: 0060699906110000 
DBG(48584960)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48584962)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48584963)> CPU DETAIL: M6: 0013 
DBG(48584966)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48584967)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48584968)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48584970)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48584973)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48584974)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48584975)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48584978)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48584979)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48584980)> CPU DETAIL: Result: 0000001000000000 
DBG(48584983)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48584984)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48584985)> CPU DETAIL: Result: 0042440716550000 
DBG(48584986)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48584988)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48584989)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48584990)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584991)> CPU DETAIL: Result: 0000000231030000 
DBG(48584992)> CPU DETAIL: Write 1620: 0000000231030000 
DBG(48584994)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48584995)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48584995)> CPU DETAIL: Read R 0417: 0000000231030000 
DBG(48584996)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48584997)> CPU DETAIL: Result: 0000000231030000 
DBG(48585000)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48585001)> CPU DETAIL: Read S 1620: 0000000231030000 
DBG(48585002)> CPU DETAIL: Result: 0000000000000000 
DBG(48585005)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48585006)> CPU DETAIL: REG1: 0000000000000000
DBG(48585006)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48585008)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48585009)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48585010)> CPU DETAIL: Transfer to T 
DBG(48585010)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48585012)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48585013)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48585014)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48585015)> CPU DETAIL: Result: 0000000231010000 
DBG(48585016)> CPU DETAIL: Write 1620: 0000000231010000 
DBG(48585018)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48585019)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585019)> CPU DETAIL: Read R 0408: 0000000231010000 
DBG(48585020)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48585021)> CPU DETAIL: Result: 0000000231010000 
DBG(48585024)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48585025)> CPU DETAIL: Read R 1620: 0000000231010000 
DBG(48585026)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48585027)> CPU DETAIL: Transfer to T 
DBG(48585029)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48585030)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48585031)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48585033)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48585034)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48585035)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48585037)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48585038)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48585039)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48585040)> CPU DETAIL: Result: 0100000231030000 
DBG(48585041)> CPU DETAIL: Write 0599: 0100000231030000 
DBG(48585043)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48585044)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48585045)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48585047)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48585048)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48585049)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48585050)> CPU DETAIL: Result: 0000000000000200 
DBG(48585051)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48585054)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48585055)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48585056)> CPU DETAIL: Result: 0000000000000001 
DBG(48585059)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48585060)> CPU DETAIL: REG1: 0000000000000001
DBG(48585060)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48585062)> CPU CMD: Exec 0241: 00 60 0177 0250 0000   ???: not all predecessors of tape 1 event found yet   
DBG(48585063)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48585064)> CPU DETAIL: Write 0250: 0060019701960179 
DBG(48585066)> CPU CMD: Exec 0242: 00 60 1667 0272 0000   ???   
DBG(48585067)> CPU DETAIL: Read R 1667: 0060169901960179 
DBG(48585068)> CPU DETAIL: Write 0272: 0060169901960179 
DBG(48585070)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48585071)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48585072)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48585075)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48585076)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585076)> CPU DETAIL: Read R 0408: 0000000231010000 
DBG(48585077)> CPU DETAIL: Result: 0001000231010000 
DBG(48585078)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585078)> CPU DETAIL: Write 0408: 0001000231010000 
DBG(48585080)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48585081)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585081)> CPU DETAIL: Read R 0408: 0001000231010000 
DBG(48585082)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48585083)> CPU DETAIL: Result: 0001000000000000 
DBG(48585084)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48585085)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48585087)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48585088)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585088)> CPU DETAIL: Read R 0413: 3334444455660101 
DBG(48585089)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48585090)> CPU DETAIL: Result: 0000000000000001 
DBG(48585093)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48585094)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48585095)> CPU DETAIL: Result: 0000000000000000 
DBG(48585098)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48585099)> CPU DETAIL: REG1: 0000000000000000
DBG(48585099)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48585101)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48585102)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48585103)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48585104)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48585106)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48585107)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585107)> CPU DETAIL: Read R 0413: 3334444455660101 
DBG(48585108)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48585109)> CPU DETAIL: Result: 0000000000000001 
DBG(48585110)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48585113)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48585114)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585114)> CPU DETAIL: Read R 0408: 0001000231010000 
DBG(48585115)> CPU DETAIL: Result: 0000000231010000 
DBG(48585116)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585116)> CPU DETAIL: Write 0408: 0000000231010000 
DBG(48585118)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48585119)> CPU DETAIL: Read R 1625: 0000000000000069 
DBG(48585120)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48585121)> CPU DETAIL: Result: 0000000000000082 
DBG(48585124)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48585125)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48585126)> CPU DETAIL: Result: 0000000000000118 
DBG(48585129)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48585130)> CPU DETAIL: REG1: 0000000000000118
DBG(48585130)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48585132)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48585133)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48585134)> CPU DETAIL: Transfer to T 
DBG(48585134)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48585136)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48585137)> CPU DETAIL: M4: 0010 
DBG(48585138)> CPU DETAIL: M6: 0013 
DBG(48585139)> CPU DETAIL: Clear M8
DBG(48585139)> CPU DETAIL: M8: 0000 
DBG(48585142)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48585143)> CPU DETAIL: Read R 1612: 0000000000000006 
DBG(48585144)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585145)> CPU DETAIL: Result: 0000000000000007 
DBG(48585146)> CPU DETAIL: Write 1612: 0000000000000007 
DBG(48585148)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48585149)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48585150)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48585153)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48585154)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48585155)> CPU DETAIL: Result: 0858000100130266 
DBG(48585156)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48585158)> CPU CMD: Exec 0266: 00 60 4397 1470 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585159)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48585159)> CPU DETAIL: Read R 0407: 0130000000121112 
DBG(48585160)> CPU DETAIL: Write 1470: 0130000000121112 
DBG(48585162)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585163)> CPU DETAIL: Read R 0266: 0060439714700000 
DBG(48585164)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585165)> CPU DETAIL: Result: 0060439714710000 
DBG(48585166)> CPU DETAIL: Write 0266: 0060439714710000 
DBG(48585168)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585169)> CPU DETAIL: Read R 1625: 0000000000000069 
DBG(48585170)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585171)> CPU DETAIL: Result: 0000000000000070 
DBG(48585172)> CPU DETAIL: Write 1625: 0000000000000070 
DBG(48585174)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585175)> CPU DETAIL: M4: 0011 
DBG(48585176)> CPU DETAIL: M6: 0013 
DBG(48585177)> CPU DETAIL: M8: 0000 
DBG(48585180)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585181)> CPU DETAIL: M8: 0001 
DBG(48585182)> CPU DETAIL: Transfer to T 
DBG(48585184)> CPU CMD: Exec 0266: 00 60 4397 1471 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585185)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48585185)> CPU DETAIL: Read R 0408: 0000000231010000 
DBG(48585186)> CPU DETAIL: Write 1471: 0000000231010000 
DBG(48585188)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585189)> CPU DETAIL: Read R 0266: 0060439714710000 
DBG(48585190)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585191)> CPU DETAIL: Result: 0060439714720000 
DBG(48585192)> CPU DETAIL: Write 0266: 0060439714720000 
DBG(48585194)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585195)> CPU DETAIL: Read R 1625: 0000000000000070 
DBG(48585196)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585197)> CPU DETAIL: Result: 0000000000000071 
DBG(48585198)> CPU DETAIL: Write 1625: 0000000000000071 
DBG(48585200)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585201)> CPU DETAIL: M4: 0012 
DBG(48585202)> CPU DETAIL: M6: 0013 
DBG(48585203)> CPU DETAIL: M8: 0001 
DBG(48585206)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585207)> CPU DETAIL: M8: 0002 
DBG(48585208)> CPU DETAIL: Transfer to T 
DBG(48585210)> CPU CMD: Exec 0266: 00 60 4397 1472 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585211)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48585211)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48585212)> CPU DETAIL: Write 1472: 0000000000000000 
DBG(48585214)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585215)> CPU DETAIL: Read R 0266: 0060439714720000 
DBG(48585216)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585217)> CPU DETAIL: Result: 0060439714730000 
DBG(48585218)> CPU DETAIL: Write 0266: 0060439714730000 
DBG(48585220)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585221)> CPU DETAIL: Read R 1625: 0000000000000071 
DBG(48585222)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585223)> CPU DETAIL: Result: 0000000000000072 
DBG(48585224)> CPU DETAIL: Write 1625: 0000000000000072 
DBG(48585226)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585227)> CPU DETAIL: M4: 0013 
DBG(48585228)> CPU DETAIL: M6: 0013 
DBG(48585229)> CPU DETAIL: M8: 0002 
DBG(48585232)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585233)> CPU DETAIL: M8: 0003 
DBG(48585234)> CPU DETAIL: Transfer to T 
DBG(48585236)> CPU CMD: Exec 0266: 00 60 4397 1473 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585237)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(48585237)> CPU DETAIL: Read R 0410: 0000000000000000 
DBG(48585238)> CPU DETAIL: Write 1473: 0000000000000000 
DBG(48585240)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585241)> CPU DETAIL: Read R 0266: 0060439714730000 
DBG(48585242)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585243)> CPU DETAIL: Result: 0060439714740000 
DBG(48585244)> CPU DETAIL: Write 0266: 0060439714740000 
DBG(48585246)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585247)> CPU DETAIL: Read R 1625: 0000000000000072 
DBG(48585248)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585249)> CPU DETAIL: Result: 0000000000000073 
DBG(48585250)> CPU DETAIL: Write 1625: 0000000000000073 
DBG(48585252)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585253)> CPU DETAIL: M4: 0014 
DBG(48585254)> CPU DETAIL: M6: 0013 
DBG(48585255)> CPU DETAIL: M8: 0003 
DBG(48585258)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585259)> CPU DETAIL: M8: 0004 
DBG(48585260)> CPU DETAIL: Transfer to T 
DBG(48585262)> CPU CMD: Exec 0266: 00 60 4397 1474 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585263)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(48585263)> CPU DETAIL: Read R 0411: 0000000000000000 
DBG(48585264)> CPU DETAIL: Write 1474: 0000000000000000 
DBG(48585266)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585267)> CPU DETAIL: Read R 0266: 0060439714740000 
DBG(48585268)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585269)> CPU DETAIL: Result: 0060439714750000 
DBG(48585270)> CPU DETAIL: Write 0266: 0060439714750000 
DBG(48585272)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585273)> CPU DETAIL: Read R 1625: 0000000000000073 
DBG(48585274)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585275)> CPU DETAIL: Result: 0000000000000074 
DBG(48585276)> CPU DETAIL: Write 1625: 0000000000000074 
DBG(48585278)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585279)> CPU DETAIL: M4: 0015 
DBG(48585280)> CPU DETAIL: M6: 0013 
DBG(48585281)> CPU DETAIL: M8: 0004 
DBG(48585284)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585285)> CPU DETAIL: M8: 0005 
DBG(48585286)> CPU DETAIL: Transfer to T 
DBG(48585288)> CPU CMD: Exec 0266: 00 60 4397 1475 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585289)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(48585289)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48585290)> CPU DETAIL: Write 1475: 0000000000000000 
DBG(48585292)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585293)> CPU DETAIL: Read R 0266: 0060439714750000 
DBG(48585294)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585295)> CPU DETAIL: Result: 0060439714760000 
DBG(48585296)> CPU DETAIL: Write 0266: 0060439714760000 
DBG(48585298)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585299)> CPU DETAIL: Read R 1625: 0000000000000074 
DBG(48585300)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585301)> CPU DETAIL: Result: 0000000000000075 
DBG(48585302)> CPU DETAIL: Write 1625: 0000000000000075 
DBG(48585304)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585305)> CPU DETAIL: M4: 0016 
DBG(48585306)> CPU DETAIL: M6: 0013 
DBG(48585307)> CPU DETAIL: M8: 0005 
DBG(48585310)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585311)> CPU DETAIL: M8: 0006 
DBG(48585312)> CPU DETAIL: Transfer to T 
DBG(48585314)> CPU CMD: Exec 0266: 00 60 4397 1476 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585315)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(48585315)> CPU DETAIL: Read R 0413: 3334444455660101 
DBG(48585316)> CPU DETAIL: Write 1476: 3334444455660101 
DBG(48585318)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585319)> CPU DETAIL: Read R 0266: 0060439714760000 
DBG(48585320)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585321)> CPU DETAIL: Result: 0060439714770000 
DBG(48585322)> CPU DETAIL: Write 0266: 0060439714770000 
DBG(48585324)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585325)> CPU DETAIL: Read R 1625: 0000000000000075 
DBG(48585326)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585327)> CPU DETAIL: Result: 0000000000000076 
DBG(48585328)> CPU DETAIL: Write 1625: 0000000000000076 
DBG(48585330)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585331)> CPU DETAIL: M4: 0017 
DBG(48585332)> CPU DETAIL: M6: 0013 
DBG(48585333)> CPU DETAIL: M8: 0006 
DBG(48585336)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585337)> CPU DETAIL: M8: 0007 
DBG(48585338)> CPU DETAIL: Transfer to T 
DBG(48585340)> CPU CMD: Exec 0266: 00 60 4397 1477 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585341)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(48585341)> CPU DETAIL: Read R 0414: 0000000231000000 
DBG(48585342)> CPU DETAIL: Write 1477: 0000000231000000 
DBG(48585344)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585345)> CPU DETAIL: Read R 0266: 0060439714770000 
DBG(48585346)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585347)> CPU DETAIL: Result: 0060439714780000 
DBG(48585348)> CPU DETAIL: Write 0266: 0060439714780000 
DBG(48585350)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585351)> CPU DETAIL: Read R 1625: 0000000000000076 
DBG(48585352)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585353)> CPU DETAIL: Result: 0000000000000077 
DBG(48585354)> CPU DETAIL: Write 1625: 0000000000000077 
DBG(48585356)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585357)> CPU DETAIL: M4: 0018 
DBG(48585358)> CPU DETAIL: M6: 0013 
DBG(48585359)> CPU DETAIL: M8: 0007 
DBG(48585362)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585363)> CPU DETAIL: M8: 0008 
DBG(48585364)> CPU DETAIL: Transfer to T 
DBG(48585366)> CPU CMD: Exec 0266: 00 60 4397 1478 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585367)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(48585367)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48585368)> CPU DETAIL: Write 1478: 0000000000000000 
DBG(48585370)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585371)> CPU DETAIL: Read R 0266: 0060439714780000 
DBG(48585372)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585373)> CPU DETAIL: Result: 0060439714790000 
DBG(48585374)> CPU DETAIL: Write 0266: 0060439714790000 
DBG(48585376)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585377)> CPU DETAIL: Read R 1625: 0000000000000077 
DBG(48585378)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585379)> CPU DETAIL: Result: 0000000000000078 
DBG(48585380)> CPU DETAIL: Write 1625: 0000000000000078 
DBG(48585382)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585383)> CPU DETAIL: M4: 0019 
DBG(48585384)> CPU DETAIL: M6: 0013 
DBG(48585385)> CPU DETAIL: M8: 0008 
DBG(48585388)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585389)> CPU DETAIL: M8: 0009 
DBG(48585390)> CPU DETAIL: Transfer to T 
DBG(48585392)> CPU CMD: Exec 0266: 00 60 4397 1479 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585393)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(48585393)> CPU DETAIL: Read R 0416: 0000000000000000 
DBG(48585394)> CPU DETAIL: Write 1479: 0000000000000000 
DBG(48585396)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585397)> CPU DETAIL: Read R 0266: 0060439714790000 
DBG(48585398)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585399)> CPU DETAIL: Result: 0060439714800000 
DBG(48585400)> CPU DETAIL: Write 0266: 0060439714800000 
DBG(48585402)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585403)> CPU DETAIL: Read R 1625: 0000000000000078 
DBG(48585404)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585405)> CPU DETAIL: Result: 0000000000000079 
DBG(48585406)> CPU DETAIL: Write 1625: 0000000000000079 
DBG(48585408)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585409)> CPU DETAIL: M4: 0020 
DBG(48585410)> CPU DETAIL: M6: 0013 
DBG(48585411)> CPU DETAIL: M8: 0009 
DBG(48585414)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585415)> CPU DETAIL: M8: 0010 
DBG(48585416)> CPU DETAIL: Transfer to T 
DBG(48585418)> CPU CMD: Exec 0266: 00 60 4397 1480 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585419)> CPU DETAIL: M4 Address Modifier: 0020 
DBG(48585419)> CPU DETAIL: Read R 0417: 0000000231030000 
DBG(48585420)> CPU DETAIL: Write 1480: 0000000231030000 
DBG(48585422)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585423)> CPU DETAIL: Read R 0266: 0060439714800000 
DBG(48585424)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585425)> CPU DETAIL: Result: 0060439714810000 
DBG(48585426)> CPU DETAIL: Write 0266: 0060439714810000 
DBG(48585428)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585429)> CPU DETAIL: Read R 1625: 0000000000000079 
DBG(48585430)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585431)> CPU DETAIL: Result: 0000000000000080 
DBG(48585432)> CPU DETAIL: Write 1625: 0000000000000080 
DBG(48585434)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585435)> CPU DETAIL: M4: 0021 
DBG(48585436)> CPU DETAIL: M6: 0013 
DBG(48585437)> CPU DETAIL: M8: 0010 
DBG(48585440)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585441)> CPU DETAIL: M8: 0011 
DBG(48585442)> CPU DETAIL: Transfer to T 
DBG(48585444)> CPU CMD: Exec 0266: 00 60 4397 1481 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585445)> CPU DETAIL: M4 Address Modifier: 0021 
DBG(48585445)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48585446)> CPU DETAIL: Write 1481: 0000000000000000 
DBG(48585448)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585449)> CPU DETAIL: Read R 0266: 0060439714810000 
DBG(48585450)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585451)> CPU DETAIL: Result: 0060439714820000 
DBG(48585452)> CPU DETAIL: Write 0266: 0060439714820000 
DBG(48585454)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585455)> CPU DETAIL: Read R 1625: 0000000000000080 
DBG(48585456)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585457)> CPU DETAIL: Result: 0000000000000081 
DBG(48585458)> CPU DETAIL: Write 1625: 0000000000000081 
DBG(48585460)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585461)> CPU DETAIL: M4: 0022 
DBG(48585462)> CPU DETAIL: M6: 0013 
DBG(48585463)> CPU DETAIL: M8: 0011 
DBG(48585466)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585467)> CPU DETAIL: M8: 0012 
DBG(48585468)> CPU DETAIL: Transfer to T 
DBG(48585470)> CPU CMD: Exec 0266: 00 60 4397 1482 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48585471)> CPU DETAIL: M4 Address Modifier: 0022 
DBG(48585471)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48585472)> CPU DETAIL: Write 1482: 0000000000000000 
DBG(48585474)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48585475)> CPU DETAIL: Read R 0266: 0060439714820000 
DBG(48585476)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585477)> CPU DETAIL: Result: 0060439714830000 
DBG(48585478)> CPU DETAIL: Write 0266: 0060439714830000 
DBG(48585480)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48585481)> CPU DETAIL: Read R 1625: 0000000000000081 
DBG(48585482)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48585483)> CPU DETAIL: Result: 0000000000000082 
DBG(48585484)> CPU DETAIL: Write 1625: 0000000000000082 
DBG(48585486)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48585487)> CPU DETAIL: M4: 0023 
DBG(48585488)> CPU DETAIL: M6: 0013 
DBG(48585489)> CPU DETAIL: M8: 0012 
DBG(48585492)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48585493)> CPU DETAIL: M8: 0013 
DBG(48585496)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48585499)> CPU CMD: Exec 0272: 00 60 1699 0196 0179   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48585500)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48585501)> CPU DETAIL: Transfer to T 
DBG(48585501)> CPU DETAIL: Write 0196: 0060164601400118 
DBG(48585503)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48585504)> CPU DETAIL: Read R 1611: 0000000000000000 
DBG(48585505)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48585506)> CPU DETAIL: Result: 0000000000000013 
DBG(48585509)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48585510)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48585511)> CPU DETAIL: Result: 0000000000000187 
DBG(48585514)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48585515)> CPU DETAIL: REG1: 0000000000000187
DBG(48585515)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48585517)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48585518)> CPU DETAIL: M4: 0023 
DBG(48585519)> CPU DETAIL: M6: 0013 
DBG(48585520)> CPU DETAIL: Clear M8
DBG(48585520)> CPU DETAIL: M8: 0000 
DBG(48585523)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48585524)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48585525)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48585528)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48585529)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48585530)> CPU DETAIL: Result: 0858000100130191 
DBG(48585531)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48585533)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48585534)> CPU DETAIL: Read R 0599: 0100000231030000 
DBG(48585535)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48585536)> CPU DETAIL: Result: 0000000231030000 
DBG(48585539)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48585540)> CPU DETAIL: Read R 1636: 0000000000000000 
DBG(48585541)> CPU DETAIL: Diff: REG1: 9999999768970000
DBG(48585542)> CPU DETAIL: Transfer to T 
DBG(48585544)> CPU CMD: Exec 0191: 00 60 8598 1200 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585545)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48585545)> CPU DETAIL: Read R 0598: 0130000000121114 
DBG(48585546)> CPU DETAIL: Write 1200: 0130000000121114 
DBG(48585548)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585549)> CPU DETAIL: Read R 0191: 0060859812000000 
DBG(48585550)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585551)> CPU DETAIL: Result: 0060859812010000 
DBG(48585552)> CPU DETAIL: Write 0191: 0060859812010000 
DBG(48585554)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585555)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585556)> CPU DETAIL: Read S 1611: 0000000000000000 
DBG(48585557)> CPU DETAIL: Result: 0000000000000001 
DBG(48585558)> CPU DETAIL: Write 1611: 0000000000000001 
DBG(48585560)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585561)> CPU DETAIL: M8: 0001 
DBG(48585562)> CPU DETAIL: Transfer to T 
DBG(48585564)> CPU CMD: Exec 0191: 00 60 8598 1201 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585565)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48585565)> CPU DETAIL: Read R 0599: 0100000231030000 
DBG(48585566)> CPU DETAIL: Write 1201: 0100000231030000 
DBG(48585568)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585569)> CPU DETAIL: Read R 0191: 0060859812010000 
DBG(48585570)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585571)> CPU DETAIL: Result: 0060859812020000 
DBG(48585572)> CPU DETAIL: Write 0191: 0060859812020000 
DBG(48585574)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585575)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585576)> CPU DETAIL: Read S 1611: 0000000000000001 
DBG(48585577)> CPU DETAIL: Result: 0000000000000002 
DBG(48585578)> CPU DETAIL: Write 1611: 0000000000000002 
DBG(48585580)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585581)> CPU DETAIL: M8: 0002 
DBG(48585582)> CPU DETAIL: Transfer to T 
DBG(48585584)> CPU CMD: Exec 0191: 00 60 8598 1202 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585585)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48585585)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48585586)> CPU DETAIL: Write 1202: 0000000000000000 
DBG(48585588)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585589)> CPU DETAIL: Read R 0191: 0060859812020000 
DBG(48585590)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585591)> CPU DETAIL: Result: 0060859812030000 
DBG(48585592)> CPU DETAIL: Write 0191: 0060859812030000 
DBG(48585594)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585595)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585596)> CPU DETAIL: Read S 1611: 0000000000000002 
DBG(48585597)> CPU DETAIL: Result: 0000000000000003 
DBG(48585598)> CPU DETAIL: Write 1611: 0000000000000003 
DBG(48585600)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585601)> CPU DETAIL: M8: 0003 
DBG(48585602)> CPU DETAIL: Transfer to T 
DBG(48585604)> CPU CMD: Exec 0191: 00 60 8598 1203 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585605)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48585605)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48585606)> CPU DETAIL: Write 1203: 0000000000000000 
DBG(48585608)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585609)> CPU DETAIL: Read R 0191: 0060859812030000 
DBG(48585610)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585611)> CPU DETAIL: Result: 0060859812040000 
DBG(48585612)> CPU DETAIL: Write 0191: 0060859812040000 
DBG(48585614)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585615)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585616)> CPU DETAIL: Read S 1611: 0000000000000003 
DBG(48585617)> CPU DETAIL: Result: 0000000000000004 
DBG(48585618)> CPU DETAIL: Write 1611: 0000000000000004 
DBG(48585620)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585621)> CPU DETAIL: M8: 0004 
DBG(48585622)> CPU DETAIL: Transfer to T 
DBG(48585624)> CPU CMD: Exec 0191: 00 60 8598 1204 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585625)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48585625)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48585626)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(48585628)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585629)> CPU DETAIL: Read R 0191: 0060859812040000 
DBG(48585630)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585631)> CPU DETAIL: Result: 0060859812050000 
DBG(48585632)> CPU DETAIL: Write 0191: 0060859812050000 
DBG(48585634)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585635)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585636)> CPU DETAIL: Read S 1611: 0000000000000004 
DBG(48585637)> CPU DETAIL: Result: 0000000000000005 
DBG(48585638)> CPU DETAIL: Write 1611: 0000000000000005 
DBG(48585640)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585641)> CPU DETAIL: M8: 0005 
DBG(48585642)> CPU DETAIL: Transfer to T 
DBG(48585644)> CPU CMD: Exec 0191: 00 60 8598 1205 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585645)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48585645)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48585646)> CPU DETAIL: Write 1205: 0000000000000000 
DBG(48585648)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585649)> CPU DETAIL: Read R 0191: 0060859812050000 
DBG(48585650)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585651)> CPU DETAIL: Result: 0060859812060000 
DBG(48585652)> CPU DETAIL: Write 0191: 0060859812060000 
DBG(48585654)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585655)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585656)> CPU DETAIL: Read S 1611: 0000000000000005 
DBG(48585657)> CPU DETAIL: Result: 0000000000000006 
DBG(48585658)> CPU DETAIL: Write 1611: 0000000000000006 
DBG(48585660)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585661)> CPU DETAIL: M8: 0006 
DBG(48585662)> CPU DETAIL: Transfer to T 
DBG(48585664)> CPU CMD: Exec 0191: 00 60 8598 1206 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585665)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48585665)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48585666)> CPU DETAIL: Write 1206: 3336000000000200 
DBG(48585668)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585669)> CPU DETAIL: Read R 0191: 0060859812060000 
DBG(48585670)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585671)> CPU DETAIL: Result: 0060859812070000 
DBG(48585672)> CPU DETAIL: Write 0191: 0060859812070000 
DBG(48585674)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585675)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585676)> CPU DETAIL: Read S 1611: 0000000000000006 
DBG(48585677)> CPU DETAIL: Result: 0000000000000007 
DBG(48585678)> CPU DETAIL: Write 1611: 0000000000000007 
DBG(48585680)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585681)> CPU DETAIL: M8: 0007 
DBG(48585682)> CPU DETAIL: Transfer to T 
DBG(48585684)> CPU CMD: Exec 0191: 00 60 8598 1207 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585685)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48585685)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48585686)> CPU DETAIL: Write 1207: 0000000231010000 
DBG(48585688)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585689)> CPU DETAIL: Read R 0191: 0060859812070000 
DBG(48585690)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585691)> CPU DETAIL: Result: 0060859812080000 
DBG(48585692)> CPU DETAIL: Write 0191: 0060859812080000 
DBG(48585694)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585695)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585696)> CPU DETAIL: Read S 1611: 0000000000000007 
DBG(48585697)> CPU DETAIL: Result: 0000000000000008 
DBG(48585698)> CPU DETAIL: Write 1611: 0000000000000008 
DBG(48585700)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585701)> CPU DETAIL: M8: 0008 
DBG(48585702)> CPU DETAIL: Transfer to T 
DBG(48585704)> CPU CMD: Exec 0191: 00 60 8598 1208 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585705)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48585705)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48585706)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(48585708)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585709)> CPU DETAIL: Read R 0191: 0060859812080000 
DBG(48585710)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585711)> CPU DETAIL: Result: 0060859812090000 
DBG(48585712)> CPU DETAIL: Write 0191: 0060859812090000 
DBG(48585714)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585715)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585716)> CPU DETAIL: Read S 1611: 0000000000000008 
DBG(48585717)> CPU DETAIL: Result: 0000000000000009 
DBG(48585718)> CPU DETAIL: Write 1611: 0000000000000009 
DBG(48585720)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585721)> CPU DETAIL: M8: 0009 
DBG(48585722)> CPU DETAIL: Transfer to T 
DBG(48585724)> CPU CMD: Exec 0191: 00 60 8598 1209 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585725)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48585725)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48585726)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(48585728)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585729)> CPU DETAIL: Read R 0191: 0060859812090000 
DBG(48585730)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585731)> CPU DETAIL: Result: 0060859812100000 
DBG(48585732)> CPU DETAIL: Write 0191: 0060859812100000 
DBG(48585734)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585735)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585736)> CPU DETAIL: Read S 1611: 0000000000000009 
DBG(48585737)> CPU DETAIL: Result: 0000000000000010 
DBG(48585738)> CPU DETAIL: Write 1611: 0000000000000010 
DBG(48585740)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585741)> CPU DETAIL: M8: 0010 
DBG(48585742)> CPU DETAIL: Transfer to T 
DBG(48585744)> CPU CMD: Exec 0191: 00 60 8598 1210 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585745)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48585745)> CPU DETAIL: Read R 0608: 0000000231020000 
DBG(48585746)> CPU DETAIL: Write 1210: 0000000231020000 
DBG(48585748)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585749)> CPU DETAIL: Read R 0191: 0060859812100000 
DBG(48585750)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585751)> CPU DETAIL: Result: 0060859812110000 
DBG(48585752)> CPU DETAIL: Write 0191: 0060859812110000 
DBG(48585754)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585755)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585756)> CPU DETAIL: Read S 1611: 0000000000000010 
DBG(48585757)> CPU DETAIL: Result: 0000000000000011 
DBG(48585758)> CPU DETAIL: Write 1611: 0000000000000011 
DBG(48585760)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585761)> CPU DETAIL: M8: 0011 
DBG(48585762)> CPU DETAIL: Transfer to T 
DBG(48585764)> CPU CMD: Exec 0191: 00 60 8598 1211 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585765)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48585765)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48585766)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(48585768)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585769)> CPU DETAIL: Read R 0191: 0060859812110000 
DBG(48585770)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585771)> CPU DETAIL: Result: 0060859812120000 
DBG(48585772)> CPU DETAIL: Write 0191: 0060859812120000 
DBG(48585774)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585775)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585776)> CPU DETAIL: Read S 1611: 0000000000000011 
DBG(48585777)> CPU DETAIL: Result: 0000000000000012 
DBG(48585778)> CPU DETAIL: Write 1611: 0000000000000012 
DBG(48585780)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585781)> CPU DETAIL: M8: 0012 
DBG(48585782)> CPU DETAIL: Transfer to T 
DBG(48585784)> CPU CMD: Exec 0191: 00 60 8598 1212 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48585785)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48585785)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48585786)> CPU DETAIL: Write 1212: 0000000000000000 
DBG(48585788)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48585789)> CPU DETAIL: Read R 0191: 0060859812120000 
DBG(48585790)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48585791)> CPU DETAIL: Result: 0060859812130000 
DBG(48585792)> CPU DETAIL: Write 0191: 0060859812130000 
DBG(48585794)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48585795)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48585796)> CPU DETAIL: Read S 1611: 0000000000000012 
DBG(48585797)> CPU DETAIL: Result: 0000000000000013 
DBG(48585798)> CPU DETAIL: Write 1611: 0000000000000013 
DBG(48585800)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48585801)> CPU DETAIL: M8: 0013 
DBG(48585804)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48585805)> CPU DETAIL: Read R 0599: 0100000231030000 
DBG(48585806)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48585807)> CPU DETAIL: Result: 0000000231030000 
DBG(48585808)> CPU DETAIL: Write 1636: 0000000231030000 
DBG(48585810)> CPU CMD: Exec 0196: 00 60 1646 0140 0118   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48585811)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48585812)> CPU DETAIL: Transfer to T 
DBG(48585812)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48585814)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48585815)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48585816)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48585817)> CPU DETAIL: Result: 0000000000000058 
DBG(48585820)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48585821)> CPU DETAIL: REG1: 0000000000000058
DBG(48585821)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48585823)> CPU CMD: Exec 0124: 00 60 0426 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48585824)> CPU DETAIL: Read R 0426: 3335444455660101 
DBG(48585825)> CPU DETAIL: Write 1608: 3335444455660101 
DBG(48585827)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48585828)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48585828)> CPU DETAIL: Read R 0420: 0130000000121113 
DBG(48585829)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48585830)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48585832)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48585833)> CPU DETAIL: Read R 1608: 3335444455660101 
DBG(48585834)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48585835)> CPU DETAIL: Result: 0000000000000100 
DBG(48585836)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48585837)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48585839)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48585840)> CPU DETAIL: Read R 1608: 3335444455660101 
DBG(48585841)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48585842)> CPU DETAIL: Result: 0000000000000001 
DBG(48585843)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48585845)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48585846)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48585847)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48585848)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48585849)> CPU DETAIL: Transfer to T 
DBG(48585851)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48585852)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48585853)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48585854)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48585855)> CPU DETAIL: Transfer to T 
DBG(48585857)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48585858)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48585859)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48585860)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48585860)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48585861)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48585862)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48585863)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48585865)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48585866)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48585867)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48585868)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48585868)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48585869)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48585870)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48585871)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48585873)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48585874)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48585875)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48585876)> CPU DETAIL: Result: 0000000000000003 
DBG(48585877)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48585879)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48585880)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48585881)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48585882)> CPU DETAIL: Result: 0000000000000003 
DBG(48585883)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48585885)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48585886)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48585887)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48585890)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48585891)> CPU DETAIL: Read R 0124: 0060042616080000 
DBG(48585892)> CPU DETAIL: Result: 0060043916080000 
DBG(48585893)> CPU DETAIL: Write 0124: 0060043916080000 
DBG(48585895)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48585896)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48585897)> CPU DETAIL: Read S 1606: 0000000000000023 
DBG(48585898)> CPU DETAIL: Result: 0000000000000036 
DBG(48585899)> CPU DETAIL: Write 1606: 0000000000000036 
DBG(48585901)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48585904)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48585905)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48585906)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48585907)> CPU DETAIL: Result: 0000000000000068 
DBG(48585910)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48585911)> CPU DETAIL: REG1: 0000000000000068
DBG(48585911)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48585913)> CPU CMD: Exec 0149: 00 60 1018 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48585914)> CPU DETAIL: Read R 1018: 3336000000000200 
DBG(48585915)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48585917)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48585918)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48585918)> CPU DETAIL: Read R 1012: 0130000000131113 
DBG(48585919)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48585920)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48585922)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48585923)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48585924)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48585925)> CPU DETAIL: Result: 0000000000000200 
DBG(48585926)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48585927)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48585929)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48585930)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48585931)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48585932)> CPU DETAIL: Result: 0000000000000000 
DBG(48585933)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48585935)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48585936)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48585937)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48585938)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48585939)> CPU DETAIL: Transfer to T 
DBG(48585941)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48585942)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48585943)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48585944)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48585944)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48585945)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48585946)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48585947)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48585949)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48585950)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48585951)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48585952)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48585952)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48585953)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48585954)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48585955)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48585957)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48585958)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48585959)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48585962)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48585963)> CPU DETAIL: Read R 0149: 0060101816160000 
DBG(48585964)> CPU DETAIL: Result: 0060103116160000 
DBG(48585965)> CPU DETAIL: Write 0149: 0060103116160000 
DBG(48585967)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48585968)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48585969)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48585970)> CPU DETAIL: Result: 0000000000000006 
DBG(48585971)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48585973)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48585974)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48585975)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48585976)> CPU DETAIL: Result: 0000000000000000 
DBG(48585977)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48585979)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48585980)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48585981)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48585982)> CPU DETAIL: Result: 0000000000000026 
DBG(48585983)> CPU DETAIL: Write 1615: 0000000000000026 
DBG(48585985)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48585986)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48585987)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48585990)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48585991)> CPU DETAIL: Read R 0167: 0658000100130165 
DBG(48585992)> CPU DETAIL: Result: 0658000100260165 
DBG(48585993)> CPU DETAIL: Write 0167: 0658000100260165 
DBG(48585995)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48585996)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48585996)> CPU DETAIL: Read R 1012: 0130000000131113 
DBG(48585997)> CPU DETAIL: Write 0598: 0130000000131113 
DBG(48585999)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586000)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48586001)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586002)> CPU DETAIL: Result: 0060699905990000 
DBG(48586003)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48586005)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586006)> CPU DETAIL: M6: 0014 
DBG(48586007)> CPU DETAIL: Transfer to T 
DBG(48586009)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586010)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48586010)> CPU DETAIL: Read R 1013: 0100000232090000 
DBG(48586011)> CPU DETAIL: Write 0599: 0100000232090000 
DBG(48586013)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586014)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48586015)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586016)> CPU DETAIL: Result: 0060699906000000 
DBG(48586017)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48586019)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586020)> CPU DETAIL: M6: 0015 
DBG(48586021)> CPU DETAIL: Transfer to T 
DBG(48586023)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586024)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48586024)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48586025)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48586027)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586028)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48586029)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586030)> CPU DETAIL: Result: 0060699906010000 
DBG(48586031)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48586033)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586034)> CPU DETAIL: M6: 0016 
DBG(48586035)> CPU DETAIL: Transfer to T 
DBG(48586037)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586038)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48586038)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(48586039)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48586041)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586042)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48586043)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586044)> CPU DETAIL: Result: 0060699906020000 
DBG(48586045)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48586047)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586048)> CPU DETAIL: M6: 0017 
DBG(48586049)> CPU DETAIL: Transfer to T 
DBG(48586051)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586052)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48586052)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(48586053)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48586055)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586056)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48586057)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586058)> CPU DETAIL: Result: 0060699906030000 
DBG(48586059)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48586061)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586062)> CPU DETAIL: M6: 0018 
DBG(48586063)> CPU DETAIL: Transfer to T 
DBG(48586065)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586066)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48586066)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48586067)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48586069)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586070)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48586071)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586072)> CPU DETAIL: Result: 0060699906040000 
DBG(48586073)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48586075)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586076)> CPU DETAIL: M6: 0019 
DBG(48586077)> CPU DETAIL: Transfer to T 
DBG(48586079)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586080)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48586080)> CPU DETAIL: Read R 1018: 3336000000000200 
DBG(48586081)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48586083)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586084)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48586085)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586086)> CPU DETAIL: Result: 0060699906050000 
DBG(48586087)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48586089)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586090)> CPU DETAIL: M6: 0020 
DBG(48586091)> CPU DETAIL: Transfer to T 
DBG(48586093)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586094)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48586094)> CPU DETAIL: Read R 1019: 0000000232000000 
DBG(48586095)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48586097)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586098)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48586099)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586100)> CPU DETAIL: Result: 0060699906060000 
DBG(48586101)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48586103)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586104)> CPU DETAIL: M6: 0021 
DBG(48586105)> CPU DETAIL: Transfer to T 
DBG(48586107)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586108)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48586108)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48586109)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48586111)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586112)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48586113)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586114)> CPU DETAIL: Result: 0060699906070000 
DBG(48586115)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48586117)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586118)> CPU DETAIL: M6: 0022 
DBG(48586119)> CPU DETAIL: Transfer to T 
DBG(48586121)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586122)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48586122)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(48586123)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48586125)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586126)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48586127)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586128)> CPU DETAIL: Result: 0060699906080000 
DBG(48586129)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48586131)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586132)> CPU DETAIL: M6: 0023 
DBG(48586133)> CPU DETAIL: Transfer to T 
DBG(48586135)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586136)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48586136)> CPU DETAIL: Read R 1022: 0000000232010000 
DBG(48586137)> CPU DETAIL: Write 0608: 0000000232010000 
DBG(48586139)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586140)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48586141)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586142)> CPU DETAIL: Result: 0060699906090000 
DBG(48586143)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48586145)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586146)> CPU DETAIL: M6: 0024 
DBG(48586147)> CPU DETAIL: Transfer to T 
DBG(48586149)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586150)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48586150)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48586151)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48586153)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586154)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48586155)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586156)> CPU DETAIL: Result: 0060699906100000 
DBG(48586157)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48586159)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586160)> CPU DETAIL: M6: 0025 
DBG(48586161)> CPU DETAIL: Transfer to T 
DBG(48586163)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586164)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48586164)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48586165)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48586167)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586168)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48586169)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586170)> CPU DETAIL: Result: 0060699906110000 
DBG(48586171)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48586173)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586174)> CPU DETAIL: M6: 0026 
DBG(48586177)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48586178)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48586179)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48586181)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48586184)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48586185)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48586186)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48586189)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48586190)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48586191)> CPU DETAIL: Result: 0000001000000000 
DBG(48586194)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48586195)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48586196)> CPU DETAIL: Result: 0042440716550000 
DBG(48586197)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48586199)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48586200)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48586201)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48586202)> CPU DETAIL: Result: 0000000232090000 
DBG(48586203)> CPU DETAIL: Write 1620: 0000000232090000 
DBG(48586205)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48586206)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48586206)> CPU DETAIL: Read R 0430: 0000000231030000 
DBG(48586207)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48586208)> CPU DETAIL: Result: 0000000231030000 
DBG(48586211)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48586212)> CPU DETAIL: Read S 1620: 0000000232090000 
DBG(48586213)> CPU DETAIL: Result: 9999999998940000 
DBG(48586216)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48586217)> CPU DETAIL: REG1: 9999999998940000
DBG(48586217)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(48586219)> CPU CMD: Exec 0207: 00 72 1653 1621 0373   if (1621 current input tape) <> 01 0..0 goto 0373   
DBG(48586220)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48586221)> CPU DETAIL: Read S 1621: 0500000000000000 
DBG(48586222)> CPU DETAIL: Diff: REG1: 9600000000000000
DBG(48586223)> CPU DETAIL: Transfer to T 
DBG(48586225)> CPU CMD: Exec 0373: 00 60 1668 0148 0000   ???   
DBG(48586226)> CPU DETAIL: Read R 1668: 0060000000000361 
DBG(48586227)> CPU DETAIL: Write 0148: 0060000000000361 
DBG(48586229)> CPU CMD: Exec 0374: 00 60 0177 0169 0177   ???, goto 0177   
DBG(48586230)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48586231)> CPU DETAIL: Transfer to T 
DBG(48586231)> CPU DETAIL: Write 0169: 0060019701960179 
DBG(48586233)> CPU CMD: Exec 0177: 00 60 0197 0196 0179   ???, goto 0179   
DBG(48586234)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48586235)> CPU DETAIL: Transfer to T 
DBG(48586235)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48586237)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48586238)> CPU DETAIL: Read R 1611: 0000000000000013 
DBG(48586239)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48586240)> CPU DETAIL: Result: 0000000000000026 
DBG(48586243)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48586244)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48586245)> CPU DETAIL: Result: 0000000000000174 
DBG(48586248)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48586249)> CPU DETAIL: REG1: 0000000000000174
DBG(48586249)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48586251)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48586252)> CPU DETAIL: M4: 0023 
DBG(48586253)> CPU DETAIL: M6: 0026 
DBG(48586254)> CPU DETAIL: Clear M8
DBG(48586254)> CPU DETAIL: M8: 0000 
DBG(48586257)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48586258)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48586259)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48586262)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48586263)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48586264)> CPU DETAIL: Result: 0858000100130191 
DBG(48586265)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48586267)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48586268)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48586269)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48586270)> CPU DETAIL: Result: 0000000232090000 
DBG(48586273)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48586274)> CPU DETAIL: Read R 1636: 0000000231030000 
DBG(48586275)> CPU DETAIL: Diff: REG1: 9999999998940000
DBG(48586276)> CPU DETAIL: Transfer to T 
DBG(48586278)> CPU CMD: Exec 0191: 00 60 8598 1213 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586279)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48586279)> CPU DETAIL: Read R 0598: 0130000000131113 
DBG(48586280)> CPU DETAIL: Write 1213: 0130000000131113 
DBG(48586282)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586283)> CPU DETAIL: Read R 0191: 0060859812130000 
DBG(48586284)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586285)> CPU DETAIL: Result: 0060859812140000 
DBG(48586286)> CPU DETAIL: Write 0191: 0060859812140000 
DBG(48586288)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586289)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586290)> CPU DETAIL: Read S 1611: 0000000000000013 
DBG(48586291)> CPU DETAIL: Result: 0000000000000014 
DBG(48586292)> CPU DETAIL: Write 1611: 0000000000000014 
DBG(48586294)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586295)> CPU DETAIL: M8: 0001 
DBG(48586296)> CPU DETAIL: Transfer to T 
DBG(48586298)> CPU CMD: Exec 0191: 00 60 8598 1214 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586299)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48586299)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48586300)> CPU DETAIL: Write 1214: 0100000232090000 
DBG(48586302)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586303)> CPU DETAIL: Read R 0191: 0060859812140000 
DBG(48586304)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586305)> CPU DETAIL: Result: 0060859812150000 
DBG(48586306)> CPU DETAIL: Write 0191: 0060859812150000 
DBG(48586308)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586309)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586310)> CPU DETAIL: Read S 1611: 0000000000000014 
DBG(48586311)> CPU DETAIL: Result: 0000000000000015 
DBG(48586312)> CPU DETAIL: Write 1611: 0000000000000015 
DBG(48586314)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586315)> CPU DETAIL: M8: 0002 
DBG(48586316)> CPU DETAIL: Transfer to T 
DBG(48586318)> CPU CMD: Exec 0191: 00 60 8598 1215 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586319)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48586319)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48586320)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(48586322)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586323)> CPU DETAIL: Read R 0191: 0060859812150000 
DBG(48586324)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586325)> CPU DETAIL: Result: 0060859812160000 
DBG(48586326)> CPU DETAIL: Write 0191: 0060859812160000 
DBG(48586328)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586329)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586330)> CPU DETAIL: Read S 1611: 0000000000000015 
DBG(48586331)> CPU DETAIL: Result: 0000000000000016 
DBG(48586332)> CPU DETAIL: Write 1611: 0000000000000016 
DBG(48586334)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586335)> CPU DETAIL: M8: 0003 
DBG(48586336)> CPU DETAIL: Transfer to T 
DBG(48586338)> CPU CMD: Exec 0191: 00 60 8598 1216 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586339)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48586339)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48586340)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(48586342)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586343)> CPU DETAIL: Read R 0191: 0060859812160000 
DBG(48586344)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586345)> CPU DETAIL: Result: 0060859812170000 
DBG(48586346)> CPU DETAIL: Write 0191: 0060859812170000 
DBG(48586348)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586349)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586350)> CPU DETAIL: Read S 1611: 0000000000000016 
DBG(48586351)> CPU DETAIL: Result: 0000000000000017 
DBG(48586352)> CPU DETAIL: Write 1611: 0000000000000017 
DBG(48586354)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586355)> CPU DETAIL: M8: 0004 
DBG(48586356)> CPU DETAIL: Transfer to T 
DBG(48586358)> CPU CMD: Exec 0191: 00 60 8598 1217 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586359)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48586359)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48586360)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(48586362)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586363)> CPU DETAIL: Read R 0191: 0060859812170000 
DBG(48586364)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586365)> CPU DETAIL: Result: 0060859812180000 
DBG(48586366)> CPU DETAIL: Write 0191: 0060859812180000 
DBG(48586368)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586369)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586370)> CPU DETAIL: Read S 1611: 0000000000000017 
DBG(48586371)> CPU DETAIL: Result: 0000000000000018 
DBG(48586372)> CPU DETAIL: Write 1611: 0000000000000018 
DBG(48586374)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586375)> CPU DETAIL: M8: 0005 
DBG(48586376)> CPU DETAIL: Transfer to T 
DBG(48586378)> CPU CMD: Exec 0191: 00 60 8598 1218 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586379)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48586379)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48586380)> CPU DETAIL: Write 1218: 0000000000000000 
DBG(48586382)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586383)> CPU DETAIL: Read R 0191: 0060859812180000 
DBG(48586384)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586385)> CPU DETAIL: Result: 0060859812190000 
DBG(48586386)> CPU DETAIL: Write 0191: 0060859812190000 
DBG(48586388)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586389)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586390)> CPU DETAIL: Read S 1611: 0000000000000018 
DBG(48586391)> CPU DETAIL: Result: 0000000000000019 
DBG(48586392)> CPU DETAIL: Write 1611: 0000000000000019 
DBG(48586394)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586395)> CPU DETAIL: M8: 0006 
DBG(48586396)> CPU DETAIL: Transfer to T 
DBG(48586398)> CPU CMD: Exec 0191: 00 60 8598 1219 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586399)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48586399)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48586400)> CPU DETAIL: Write 1219: 3336000000000200 
DBG(48586402)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586403)> CPU DETAIL: Read R 0191: 0060859812190000 
DBG(48586404)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586405)> CPU DETAIL: Result: 0060859812200000 
DBG(48586406)> CPU DETAIL: Write 0191: 0060859812200000 
DBG(48586408)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586409)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586410)> CPU DETAIL: Read S 1611: 0000000000000019 
DBG(48586411)> CPU DETAIL: Result: 0000000000000020 
DBG(48586412)> CPU DETAIL: Write 1611: 0000000000000020 
DBG(48586414)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586415)> CPU DETAIL: M8: 0007 
DBG(48586416)> CPU DETAIL: Transfer to T 
DBG(48586418)> CPU CMD: Exec 0191: 00 60 8598 1220 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586419)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48586419)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48586420)> CPU DETAIL: Write 1220: 0000000232000000 
DBG(48586422)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586423)> CPU DETAIL: Read R 0191: 0060859812200000 
DBG(48586424)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586425)> CPU DETAIL: Result: 0060859812210000 
DBG(48586426)> CPU DETAIL: Write 0191: 0060859812210000 
DBG(48586428)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586429)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586430)> CPU DETAIL: Read S 1611: 0000000000000020 
DBG(48586431)> CPU DETAIL: Result: 0000000000000021 
DBG(48586432)> CPU DETAIL: Write 1611: 0000000000000021 
DBG(48586434)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586435)> CPU DETAIL: M8: 0008 
DBG(48586436)> CPU DETAIL: Transfer to T 
DBG(48586438)> CPU CMD: Exec 0191: 00 60 8598 1221 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586439)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48586439)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48586440)> CPU DETAIL: Write 1221: 0000000000000000 
DBG(48586442)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586443)> CPU DETAIL: Read R 0191: 0060859812210000 
DBG(48586444)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586445)> CPU DETAIL: Result: 0060859812220000 
DBG(48586446)> CPU DETAIL: Write 0191: 0060859812220000 
DBG(48586448)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586449)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586450)> CPU DETAIL: Read S 1611: 0000000000000021 
DBG(48586451)> CPU DETAIL: Result: 0000000000000022 
DBG(48586452)> CPU DETAIL: Write 1611: 0000000000000022 
DBG(48586454)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586455)> CPU DETAIL: M8: 0009 
DBG(48586456)> CPU DETAIL: Transfer to T 
DBG(48586458)> CPU CMD: Exec 0191: 00 60 8598 1222 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586459)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48586459)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48586460)> CPU DETAIL: Write 1222: 0000000000000000 
DBG(48586462)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586463)> CPU DETAIL: Read R 0191: 0060859812220000 
DBG(48586464)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586465)> CPU DETAIL: Result: 0060859812230000 
DBG(48586466)> CPU DETAIL: Write 0191: 0060859812230000 
DBG(48586468)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586469)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586470)> CPU DETAIL: Read S 1611: 0000000000000022 
DBG(48586471)> CPU DETAIL: Result: 0000000000000023 
DBG(48586472)> CPU DETAIL: Write 1611: 0000000000000023 
DBG(48586474)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586475)> CPU DETAIL: M8: 0010 
DBG(48586476)> CPU DETAIL: Transfer to T 
DBG(48586478)> CPU CMD: Exec 0191: 00 60 8598 1223 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586479)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48586479)> CPU DETAIL: Read R 0608: 0000000232010000 
DBG(48586480)> CPU DETAIL: Write 1223: 0000000232010000 
DBG(48586482)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586483)> CPU DETAIL: Read R 0191: 0060859812230000 
DBG(48586484)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586485)> CPU DETAIL: Result: 0060859812240000 
DBG(48586486)> CPU DETAIL: Write 0191: 0060859812240000 
DBG(48586488)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586489)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586490)> CPU DETAIL: Read S 1611: 0000000000000023 
DBG(48586491)> CPU DETAIL: Result: 0000000000000024 
DBG(48586492)> CPU DETAIL: Write 1611: 0000000000000024 
DBG(48586494)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586495)> CPU DETAIL: M8: 0011 
DBG(48586496)> CPU DETAIL: Transfer to T 
DBG(48586498)> CPU CMD: Exec 0191: 00 60 8598 1224 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586499)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48586499)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48586500)> CPU DETAIL: Write 1224: 0000000000000000 
DBG(48586502)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586503)> CPU DETAIL: Read R 0191: 0060859812240000 
DBG(48586504)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586505)> CPU DETAIL: Result: 0060859812250000 
DBG(48586506)> CPU DETAIL: Write 0191: 0060859812250000 
DBG(48586508)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586509)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586510)> CPU DETAIL: Read S 1611: 0000000000000024 
DBG(48586511)> CPU DETAIL: Result: 0000000000000025 
DBG(48586512)> CPU DETAIL: Write 1611: 0000000000000025 
DBG(48586514)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586515)> CPU DETAIL: M8: 0012 
DBG(48586516)> CPU DETAIL: Transfer to T 
DBG(48586518)> CPU CMD: Exec 0191: 00 60 8598 1225 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586519)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48586519)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48586520)> CPU DETAIL: Write 1225: 0000000000000000 
DBG(48586522)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586523)> CPU DETAIL: Read R 0191: 0060859812250000 
DBG(48586524)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586525)> CPU DETAIL: Result: 0060859812260000 
DBG(48586526)> CPU DETAIL: Write 0191: 0060859812260000 
DBG(48586528)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586529)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586530)> CPU DETAIL: Read S 1611: 0000000000000025 
DBG(48586531)> CPU DETAIL: Result: 0000000000000026 
DBG(48586532)> CPU DETAIL: Write 1611: 0000000000000026 
DBG(48586534)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586535)> CPU DETAIL: M8: 0013 
DBG(48586538)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48586539)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48586540)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48586541)> CPU DETAIL: Result: 0000000232090000 
DBG(48586542)> CPU DETAIL: Write 1636: 0000000232090000 
DBG(48586544)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48586545)> CPU DETAIL: Transfer to T 
DBG(48586547)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48586548)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48586549)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48586550)> CPU DETAIL: Result: 0000000000000055 
DBG(48586553)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48586554)> CPU DETAIL: REG1: 0000000000000055
DBG(48586554)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48586556)> CPU CMD: Exec 0149: 00 60 1031 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48586557)> CPU DETAIL: Read R 1031: 3335444455660201 
DBG(48586558)> CPU DETAIL: Write 1616: 3335444455660201 
DBG(48586560)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48586561)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48586561)> CPU DETAIL: Read R 1025: 0160000000141013 
DBG(48586562)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48586563)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48586565)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48586566)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48586567)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48586568)> CPU DETAIL: Result: 0000000000000200 
DBG(48586569)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48586570)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48586572)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48586573)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48586574)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48586575)> CPU DETAIL: Result: 0000000000000001 
DBG(48586576)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48586578)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48586579)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48586580)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48586581)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48586582)> CPU DETAIL: Transfer to T 
DBG(48586584)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48586585)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48586586)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48586587)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48586587)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48586588)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48586589)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48586590)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48586592)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48586593)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48586594)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48586595)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48586595)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48586596)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48586597)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48586598)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48586600)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48586601)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48586602)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48586605)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48586606)> CPU DETAIL: Read R 0149: 0060103116160000 
DBG(48586607)> CPU DETAIL: Result: 0060104716160000 
DBG(48586608)> CPU DETAIL: Write 0149: 0060104716160000 
DBG(48586610)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48586611)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48586612)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48586613)> CPU DETAIL: Result: 0000000000000006 
DBG(48586614)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48586616)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48586617)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48586618)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48586619)> CPU DETAIL: Result: 0000000000000003 
DBG(48586620)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48586622)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48586623)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48586624)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48586625)> CPU DETAIL: Result: 0000000000000042 
DBG(48586626)> CPU DETAIL: Write 1615: 0000000000000042 
DBG(48586628)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48586629)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48586630)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48586633)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48586634)> CPU DETAIL: Read R 0167: 0658000100260165 
DBG(48586635)> CPU DETAIL: Result: 0658000100420165 
DBG(48586636)> CPU DETAIL: Write 0167: 0658000100420165 
DBG(48586638)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586639)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48586639)> CPU DETAIL: Read R 1025: 0160000000141013 
DBG(48586640)> CPU DETAIL: Write 0598: 0160000000141013 
DBG(48586642)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586643)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48586644)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586645)> CPU DETAIL: Result: 0060699905990000 
DBG(48586646)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48586648)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586649)> CPU DETAIL: M6: 0027 
DBG(48586650)> CPU DETAIL: Transfer to T 
DBG(48586652)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586653)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48586653)> CPU DETAIL: Read R 1026: 0100000233020003 
DBG(48586654)> CPU DETAIL: Write 0599: 0100000233020003 
DBG(48586656)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586657)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48586658)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586659)> CPU DETAIL: Result: 0060699906000000 
DBG(48586660)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48586662)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586663)> CPU DETAIL: M6: 0028 
DBG(48586664)> CPU DETAIL: Transfer to T 
DBG(48586666)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586667)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48586667)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48586668)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48586670)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586671)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48586672)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586673)> CPU DETAIL: Result: 0060699906010000 
DBG(48586674)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48586676)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586677)> CPU DETAIL: M6: 0029 
DBG(48586678)> CPU DETAIL: Transfer to T 
DBG(48586680)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586681)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48586681)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(48586682)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48586684)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586685)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48586686)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586687)> CPU DETAIL: Result: 0060699906020000 
DBG(48586688)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48586690)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586691)> CPU DETAIL: M6: 0030 
DBG(48586692)> CPU DETAIL: Transfer to T 
DBG(48586694)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586695)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48586695)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(48586696)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48586698)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586699)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48586700)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586701)> CPU DETAIL: Result: 0060699906030000 
DBG(48586702)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48586704)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586705)> CPU DETAIL: M6: 0031 
DBG(48586706)> CPU DETAIL: Transfer to T 
DBG(48586708)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586709)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48586709)> CPU DETAIL: Read R 1030: 0000000000000000 
DBG(48586710)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48586712)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586713)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48586714)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586715)> CPU DETAIL: Result: 0060699906040000 
DBG(48586716)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48586718)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586719)> CPU DETAIL: M6: 0032 
DBG(48586720)> CPU DETAIL: Transfer to T 
DBG(48586722)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586723)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48586723)> CPU DETAIL: Read R 1031: 3335444455660201 
DBG(48586724)> CPU DETAIL: Write 0604: 3335444455660201 
DBG(48586726)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586727)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48586728)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586729)> CPU DETAIL: Result: 0060699906050000 
DBG(48586730)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48586732)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586733)> CPU DETAIL: M6: 0033 
DBG(48586734)> CPU DETAIL: Transfer to T 
DBG(48586736)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586737)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48586737)> CPU DETAIL: Read R 1032: 0000000233000000 
DBG(48586738)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48586740)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586741)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48586742)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586743)> CPU DETAIL: Result: 0060699906060000 
DBG(48586744)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48586746)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586747)> CPU DETAIL: M6: 0034 
DBG(48586748)> CPU DETAIL: Transfer to T 
DBG(48586750)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586751)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48586751)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(48586752)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48586754)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586755)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48586756)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586757)> CPU DETAIL: Result: 0060699906070000 
DBG(48586758)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48586760)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586761)> CPU DETAIL: M6: 0035 
DBG(48586762)> CPU DETAIL: Transfer to T 
DBG(48586764)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586765)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48586765)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(48586766)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48586768)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586769)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48586770)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586771)> CPU DETAIL: Result: 0060699906080000 
DBG(48586772)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48586774)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586775)> CPU DETAIL: M6: 0036 
DBG(48586776)> CPU DETAIL: Transfer to T 
DBG(48586778)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586779)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48586779)> CPU DETAIL: Read R 1035: 0000000233010000 
DBG(48586780)> CPU DETAIL: Write 0608: 0000000233010000 
DBG(48586782)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586783)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48586784)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586785)> CPU DETAIL: Result: 0060699906090000 
DBG(48586786)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48586788)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586789)> CPU DETAIL: M6: 0037 
DBG(48586790)> CPU DETAIL: Transfer to T 
DBG(48586792)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586793)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48586793)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(48586794)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48586796)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586797)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48586798)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586799)> CPU DETAIL: Result: 0060699906100000 
DBG(48586800)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48586802)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586803)> CPU DETAIL: M6: 0038 
DBG(48586804)> CPU DETAIL: Transfer to T 
DBG(48586806)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586807)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48586807)> CPU DETAIL: Read R 1037: 0000000000000000 
DBG(48586808)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48586810)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586811)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48586812)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586813)> CPU DETAIL: Result: 0060699906110000 
DBG(48586814)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48586816)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586817)> CPU DETAIL: M6: 0039 
DBG(48586818)> CPU DETAIL: Transfer to T 
DBG(48586820)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586821)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48586821)> CPU DETAIL: Read R 1038: 0000000233030000 
DBG(48586822)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48586824)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586825)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48586826)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586827)> CPU DETAIL: Result: 0060699906120000 
DBG(48586828)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48586830)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586831)> CPU DETAIL: M6: 0040 
DBG(48586832)> CPU DETAIL: Transfer to T 
DBG(48586834)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586835)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48586835)> CPU DETAIL: Read R 1039: 0000000000000000 
DBG(48586836)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48586838)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586839)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48586840)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586841)> CPU DETAIL: Result: 0060699906130000 
DBG(48586842)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48586844)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586845)> CPU DETAIL: M6: 0041 
DBG(48586846)> CPU DETAIL: Transfer to T 
DBG(48586848)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48586849)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48586849)> CPU DETAIL: Read R 1040: 0000000000000000 
DBG(48586850)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48586852)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48586853)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48586854)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586855)> CPU DETAIL: Result: 0060699906140000 
DBG(48586856)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48586858)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48586859)> CPU DETAIL: M6: 0042 
DBG(48586862)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48586863)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48586864)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48586866)> CPU CMD: Exec 0169: 00 60 0197 0196 0179   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48586867)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48586868)> CPU DETAIL: Transfer to T 
DBG(48586868)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48586870)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48586871)> CPU DETAIL: Read R 1611: 0000000000000026 
DBG(48586872)> CPU DETAIL: Read S 1619: 0000000000000016 
DBG(48586873)> CPU DETAIL: Result: 0000000000000042 
DBG(48586876)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48586877)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48586878)> CPU DETAIL: Result: 0000000000000158 
DBG(48586881)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48586882)> CPU DETAIL: REG1: 0000000000000158
DBG(48586882)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48586884)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48586885)> CPU DETAIL: M4: 0023 
DBG(48586886)> CPU DETAIL: M6: 0042 
DBG(48586887)> CPU DETAIL: Clear M8
DBG(48586887)> CPU DETAIL: M8: 0000 
DBG(48586890)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48586891)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48586892)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48586895)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48586896)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48586897)> CPU DETAIL: Result: 0858000100160191 
DBG(48586898)> CPU DETAIL: Write 0194: 0858000100160191 
DBG(48586900)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48586901)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48586902)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48586903)> CPU DETAIL: Result: 0000000233020000 
DBG(48586906)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48586907)> CPU DETAIL: Read R 1636: 0000000232090000 
DBG(48586908)> CPU DETAIL: Diff: REG1: 9999999999070000
DBG(48586909)> CPU DETAIL: Transfer to T 
DBG(48586911)> CPU CMD: Exec 0191: 00 60 8598 1226 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586912)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48586912)> CPU DETAIL: Read R 0598: 0160000000141013 
DBG(48586913)> CPU DETAIL: Write 1226: 0160000000141013 
DBG(48586915)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586916)> CPU DETAIL: Read R 0191: 0060859812260000 
DBG(48586917)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586918)> CPU DETAIL: Result: 0060859812270000 
DBG(48586919)> CPU DETAIL: Write 0191: 0060859812270000 
DBG(48586921)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586922)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586923)> CPU DETAIL: Read S 1611: 0000000000000026 
DBG(48586924)> CPU DETAIL: Result: 0000000000000027 
DBG(48586925)> CPU DETAIL: Write 1611: 0000000000000027 
DBG(48586927)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586928)> CPU DETAIL: M8: 0001 
DBG(48586929)> CPU DETAIL: Transfer to T 
DBG(48586931)> CPU CMD: Exec 0191: 00 60 8598 1227 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586932)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48586932)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48586933)> CPU DETAIL: Write 1227: 0100000233020003 
DBG(48586935)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586936)> CPU DETAIL: Read R 0191: 0060859812270000 
DBG(48586937)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586938)> CPU DETAIL: Result: 0060859812280000 
DBG(48586939)> CPU DETAIL: Write 0191: 0060859812280000 
DBG(48586941)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586942)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586943)> CPU DETAIL: Read S 1611: 0000000000000027 
DBG(48586944)> CPU DETAIL: Result: 0000000000000028 
DBG(48586945)> CPU DETAIL: Write 1611: 0000000000000028 
DBG(48586947)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586948)> CPU DETAIL: M8: 0002 
DBG(48586949)> CPU DETAIL: Transfer to T 
DBG(48586951)> CPU CMD: Exec 0191: 00 60 8598 1228 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586952)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48586952)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48586953)> CPU DETAIL: Write 1228: 0000000000000000 
DBG(48586955)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586956)> CPU DETAIL: Read R 0191: 0060859812280000 
DBG(48586957)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586958)> CPU DETAIL: Result: 0060859812290000 
DBG(48586959)> CPU DETAIL: Write 0191: 0060859812290000 
DBG(48586961)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586962)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586963)> CPU DETAIL: Read S 1611: 0000000000000028 
DBG(48586964)> CPU DETAIL: Result: 0000000000000029 
DBG(48586965)> CPU DETAIL: Write 1611: 0000000000000029 
DBG(48586967)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586968)> CPU DETAIL: M8: 0003 
DBG(48586969)> CPU DETAIL: Transfer to T 
DBG(48586971)> CPU CMD: Exec 0191: 00 60 8598 1229 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586972)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48586972)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48586973)> CPU DETAIL: Write 1229: 0000000000000000 
DBG(48586975)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586976)> CPU DETAIL: Read R 0191: 0060859812290000 
DBG(48586977)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586978)> CPU DETAIL: Result: 0060859812300000 
DBG(48586979)> CPU DETAIL: Write 0191: 0060859812300000 
DBG(48586981)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48586982)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48586983)> CPU DETAIL: Read S 1611: 0000000000000029 
DBG(48586984)> CPU DETAIL: Result: 0000000000000030 
DBG(48586985)> CPU DETAIL: Write 1611: 0000000000000030 
DBG(48586987)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48586988)> CPU DETAIL: M8: 0004 
DBG(48586989)> CPU DETAIL: Transfer to T 
DBG(48586991)> CPU CMD: Exec 0191: 00 60 8598 1230 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48586992)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48586992)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48586993)> CPU DETAIL: Write 1230: 0000000000000000 
DBG(48586995)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48586996)> CPU DETAIL: Read R 0191: 0060859812300000 
DBG(48586997)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48586998)> CPU DETAIL: Result: 0060859812310000 
DBG(48586999)> CPU DETAIL: Write 0191: 0060859812310000 
DBG(48587001)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587002)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587003)> CPU DETAIL: Read S 1611: 0000000000000030 
DBG(48587004)> CPU DETAIL: Result: 0000000000000031 
DBG(48587005)> CPU DETAIL: Write 1611: 0000000000000031 
DBG(48587007)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587008)> CPU DETAIL: M8: 0005 
DBG(48587009)> CPU DETAIL: Transfer to T 
DBG(48587011)> CPU CMD: Exec 0191: 00 60 8598 1231 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587012)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48587012)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48587013)> CPU DETAIL: Write 1231: 0000000000000000 
DBG(48587015)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587016)> CPU DETAIL: Read R 0191: 0060859812310000 
DBG(48587017)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587018)> CPU DETAIL: Result: 0060859812320000 
DBG(48587019)> CPU DETAIL: Write 0191: 0060859812320000 
DBG(48587021)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587022)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587023)> CPU DETAIL: Read S 1611: 0000000000000031 
DBG(48587024)> CPU DETAIL: Result: 0000000000000032 
DBG(48587025)> CPU DETAIL: Write 1611: 0000000000000032 
DBG(48587027)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587028)> CPU DETAIL: M8: 0006 
DBG(48587029)> CPU DETAIL: Transfer to T 
DBG(48587031)> CPU CMD: Exec 0191: 00 60 8598 1232 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587032)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48587032)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48587033)> CPU DETAIL: Write 1232: 3335444455660201 
DBG(48587035)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587036)> CPU DETAIL: Read R 0191: 0060859812320000 
DBG(48587037)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587038)> CPU DETAIL: Result: 0060859812330000 
DBG(48587039)> CPU DETAIL: Write 0191: 0060859812330000 
DBG(48587041)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587042)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587043)> CPU DETAIL: Read S 1611: 0000000000000032 
DBG(48587044)> CPU DETAIL: Result: 0000000000000033 
DBG(48587045)> CPU DETAIL: Write 1611: 0000000000000033 
DBG(48587047)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587048)> CPU DETAIL: M8: 0007 
DBG(48587049)> CPU DETAIL: Transfer to T 
DBG(48587051)> CPU CMD: Exec 0191: 00 60 8598 1233 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587052)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48587052)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48587053)> CPU DETAIL: Write 1233: 0000000233000000 
DBG(48587055)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587056)> CPU DETAIL: Read R 0191: 0060859812330000 
DBG(48587057)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587058)> CPU DETAIL: Result: 0060859812340000 
DBG(48587059)> CPU DETAIL: Write 0191: 0060859812340000 
DBG(48587061)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587062)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587063)> CPU DETAIL: Read S 1611: 0000000000000033 
DBG(48587064)> CPU DETAIL: Result: 0000000000000034 
DBG(48587065)> CPU DETAIL: Write 1611: 0000000000000034 
DBG(48587067)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587068)> CPU DETAIL: M8: 0008 
DBG(48587069)> CPU DETAIL: Transfer to T 
DBG(48587071)> CPU CMD: Exec 0191: 00 60 8598 1234 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587072)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48587072)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48587073)> CPU DETAIL: Write 1234: 0000000000000000 
DBG(48587075)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587076)> CPU DETAIL: Read R 0191: 0060859812340000 
DBG(48587077)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587078)> CPU DETAIL: Result: 0060859812350000 
DBG(48587079)> CPU DETAIL: Write 0191: 0060859812350000 
DBG(48587081)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587082)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587083)> CPU DETAIL: Read S 1611: 0000000000000034 
DBG(48587084)> CPU DETAIL: Result: 0000000000000035 
DBG(48587085)> CPU DETAIL: Write 1611: 0000000000000035 
DBG(48587087)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587088)> CPU DETAIL: M8: 0009 
DBG(48587089)> CPU DETAIL: Transfer to T 
DBG(48587091)> CPU CMD: Exec 0191: 00 60 8598 1235 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587092)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48587092)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48587093)> CPU DETAIL: Write 1235: 0000000000000000 
DBG(48587095)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587096)> CPU DETAIL: Read R 0191: 0060859812350000 
DBG(48587097)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587098)> CPU DETAIL: Result: 0060859812360000 
DBG(48587099)> CPU DETAIL: Write 0191: 0060859812360000 
DBG(48587101)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587102)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587103)> CPU DETAIL: Read S 1611: 0000000000000035 
DBG(48587104)> CPU DETAIL: Result: 0000000000000036 
DBG(48587105)> CPU DETAIL: Write 1611: 0000000000000036 
DBG(48587107)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587108)> CPU DETAIL: M8: 0010 
DBG(48587109)> CPU DETAIL: Transfer to T 
DBG(48587111)> CPU CMD: Exec 0191: 00 60 8598 1236 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587112)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48587112)> CPU DETAIL: Read R 0608: 0000000233010000 
DBG(48587113)> CPU DETAIL: Write 1236: 0000000233010000 
DBG(48587115)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587116)> CPU DETAIL: Read R 0191: 0060859812360000 
DBG(48587117)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587118)> CPU DETAIL: Result: 0060859812370000 
DBG(48587119)> CPU DETAIL: Write 0191: 0060859812370000 
DBG(48587121)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587122)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587123)> CPU DETAIL: Read S 1611: 0000000000000036 
DBG(48587124)> CPU DETAIL: Result: 0000000000000037 
DBG(48587125)> CPU DETAIL: Write 1611: 0000000000000037 
DBG(48587127)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587128)> CPU DETAIL: M8: 0011 
DBG(48587129)> CPU DETAIL: Transfer to T 
DBG(48587131)> CPU CMD: Exec 0191: 00 60 8598 1237 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587132)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48587132)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48587133)> CPU DETAIL: Write 1237: 0000000000000000 
DBG(48587135)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587136)> CPU DETAIL: Read R 0191: 0060859812370000 
DBG(48587137)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587138)> CPU DETAIL: Result: 0060859812380000 
DBG(48587139)> CPU DETAIL: Write 0191: 0060859812380000 
DBG(48587141)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587142)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587143)> CPU DETAIL: Read S 1611: 0000000000000037 
DBG(48587144)> CPU DETAIL: Result: 0000000000000038 
DBG(48587145)> CPU DETAIL: Write 1611: 0000000000000038 
DBG(48587147)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587148)> CPU DETAIL: M8: 0012 
DBG(48587149)> CPU DETAIL: Transfer to T 
DBG(48587151)> CPU CMD: Exec 0191: 00 60 8598 1238 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587152)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48587152)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48587153)> CPU DETAIL: Write 1238: 0000000000000000 
DBG(48587155)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587156)> CPU DETAIL: Read R 0191: 0060859812380000 
DBG(48587157)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587158)> CPU DETAIL: Result: 0060859812390000 
DBG(48587159)> CPU DETAIL: Write 0191: 0060859812390000 
DBG(48587161)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587162)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587163)> CPU DETAIL: Read S 1611: 0000000000000038 
DBG(48587164)> CPU DETAIL: Result: 0000000000000039 
DBG(48587165)> CPU DETAIL: Write 1611: 0000000000000039 
DBG(48587167)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587168)> CPU DETAIL: M8: 0013 
DBG(48587169)> CPU DETAIL: Transfer to T 
DBG(48587171)> CPU CMD: Exec 0191: 00 60 8598 1239 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587172)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48587172)> CPU DETAIL: Read R 0611: 0000000233030000 
DBG(48587173)> CPU DETAIL: Write 1239: 0000000233030000 
DBG(48587175)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587176)> CPU DETAIL: Read R 0191: 0060859812390000 
DBG(48587177)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587178)> CPU DETAIL: Result: 0060859812400000 
DBG(48587179)> CPU DETAIL: Write 0191: 0060859812400000 
DBG(48587181)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587182)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587183)> CPU DETAIL: Read S 1611: 0000000000000039 
DBG(48587184)> CPU DETAIL: Result: 0000000000000040 
DBG(48587185)> CPU DETAIL: Write 1611: 0000000000000040 
DBG(48587187)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587188)> CPU DETAIL: M8: 0014 
DBG(48587189)> CPU DETAIL: Transfer to T 
DBG(48587191)> CPU CMD: Exec 0191: 00 60 8598 1240 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587192)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48587192)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48587193)> CPU DETAIL: Write 1240: 0000000000000000 
DBG(48587195)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587196)> CPU DETAIL: Read R 0191: 0060859812400000 
DBG(48587197)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587198)> CPU DETAIL: Result: 0060859812410000 
DBG(48587199)> CPU DETAIL: Write 0191: 0060859812410000 
DBG(48587201)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587202)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587203)> CPU DETAIL: Read S 1611: 0000000000000040 
DBG(48587204)> CPU DETAIL: Result: 0000000000000041 
DBG(48587205)> CPU DETAIL: Write 1611: 0000000000000041 
DBG(48587207)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587208)> CPU DETAIL: M8: 0015 
DBG(48587209)> CPU DETAIL: Transfer to T 
DBG(48587211)> CPU CMD: Exec 0191: 00 60 8598 1241 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587212)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48587212)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48587213)> CPU DETAIL: Write 1241: 0000000000000000 
DBG(48587215)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587216)> CPU DETAIL: Read R 0191: 0060859812410000 
DBG(48587217)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587218)> CPU DETAIL: Result: 0060859812420000 
DBG(48587219)> CPU DETAIL: Write 0191: 0060859812420000 
DBG(48587221)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587222)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587223)> CPU DETAIL: Read S 1611: 0000000000000041 
DBG(48587224)> CPU DETAIL: Result: 0000000000000042 
DBG(48587225)> CPU DETAIL: Write 1611: 0000000000000042 
DBG(48587227)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587228)> CPU DETAIL: M8: 0016 
DBG(48587231)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48587232)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48587233)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48587234)> CPU DETAIL: Result: 0000000233020000 
DBG(48587235)> CPU DETAIL: Write 1636: 0000000233020000 
DBG(48587237)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48587238)> CPU DETAIL: Transfer to T 
DBG(48587240)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48587241)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48587242)> CPU DETAIL: Read S 1615: 0000000000000042 
DBG(48587243)> CPU DETAIL: Result: 0000000000000039 
DBG(48587246)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48587247)> CPU DETAIL: REG1: 0000000000000039
DBG(48587247)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48587249)> CPU CMD: Exec 0149: 00 60 1047 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48587250)> CPU DETAIL: Read R 1047: 3336000000000201 
DBG(48587251)> CPU DETAIL: Write 1616: 3336000000000201 
DBG(48587253)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48587254)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48587254)> CPU DETAIL: Read R 1041: 0160000000141014 
DBG(48587255)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48587256)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48587258)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48587259)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48587260)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48587261)> CPU DETAIL: Result: 0000000000000200 
DBG(48587262)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48587263)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48587265)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48587266)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48587267)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48587268)> CPU DETAIL: Result: 0000000000000001 
DBG(48587269)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48587271)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48587272)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48587273)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48587274)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48587275)> CPU DETAIL: Transfer to T 
DBG(48587277)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48587278)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48587279)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48587280)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48587280)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48587281)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48587282)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48587283)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48587285)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48587286)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48587287)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48587288)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48587288)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48587289)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48587290)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48587291)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48587293)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48587294)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48587295)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48587298)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48587299)> CPU DETAIL: Read R 0149: 0060104716160000 
DBG(48587300)> CPU DETAIL: Result: 0060106316160000 
DBG(48587301)> CPU DETAIL: Write 0149: 0060106316160000 
DBG(48587303)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48587304)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48587305)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48587306)> CPU DETAIL: Result: 0000000000000006 
DBG(48587307)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48587309)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48587310)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48587311)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48587312)> CPU DETAIL: Result: 0000000000000003 
DBG(48587313)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48587315)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48587316)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48587317)> CPU DETAIL: Read S 1615: 0000000000000042 
DBG(48587318)> CPU DETAIL: Result: 0000000000000058 
DBG(48587319)> CPU DETAIL: Write 1615: 0000000000000058 
DBG(48587321)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48587322)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48587323)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48587326)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48587327)> CPU DETAIL: Read R 0167: 0658000100420165 
DBG(48587328)> CPU DETAIL: Result: 0658000100580165 
DBG(48587329)> CPU DETAIL: Write 0167: 0658000100580165 
DBG(48587331)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587332)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48587332)> CPU DETAIL: Read R 1041: 0160000000141014 
DBG(48587333)> CPU DETAIL: Write 0598: 0160000000141014 
DBG(48587335)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587336)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48587337)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587338)> CPU DETAIL: Result: 0060699905990000 
DBG(48587339)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48587341)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587342)> CPU DETAIL: M6: 0043 
DBG(48587343)> CPU DETAIL: Transfer to T 
DBG(48587345)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587346)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48587346)> CPU DETAIL: Read R 1042: 0000000233030000 
DBG(48587347)> CPU DETAIL: Write 0599: 0000000233030000 
DBG(48587349)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587350)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48587351)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587352)> CPU DETAIL: Result: 0060699906000000 
DBG(48587353)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48587355)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587356)> CPU DETAIL: M6: 0044 
DBG(48587357)> CPU DETAIL: Transfer to T 
DBG(48587359)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587360)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48587360)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(48587361)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48587363)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587364)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48587365)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587366)> CPU DETAIL: Result: 0060699906010000 
DBG(48587367)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48587369)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587370)> CPU DETAIL: M6: 0045 
DBG(48587371)> CPU DETAIL: Transfer to T 
DBG(48587373)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587374)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48587374)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(48587375)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48587377)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587378)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48587379)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587380)> CPU DETAIL: Result: 0060699906020000 
DBG(48587381)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48587383)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587384)> CPU DETAIL: M6: 0046 
DBG(48587385)> CPU DETAIL: Transfer to T 
DBG(48587387)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587388)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48587388)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(48587389)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48587391)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587392)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48587393)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587394)> CPU DETAIL: Result: 0060699906030000 
DBG(48587395)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48587397)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587398)> CPU DETAIL: M6: 0047 
DBG(48587399)> CPU DETAIL: Transfer to T 
DBG(48587401)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587402)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48587402)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(48587403)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48587405)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587406)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48587407)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587408)> CPU DETAIL: Result: 0060699906040000 
DBG(48587409)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48587411)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587412)> CPU DETAIL: M6: 0048 
DBG(48587413)> CPU DETAIL: Transfer to T 
DBG(48587415)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587416)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48587416)> CPU DETAIL: Read R 1047: 3336000000000201 
DBG(48587417)> CPU DETAIL: Write 0604: 3336000000000201 
DBG(48587419)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587420)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48587421)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587422)> CPU DETAIL: Result: 0060699906050000 
DBG(48587423)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48587425)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587426)> CPU DETAIL: M6: 0049 
DBG(48587427)> CPU DETAIL: Transfer to T 
DBG(48587429)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587430)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48587430)> CPU DETAIL: Read R 1048: 0000000233010000 
DBG(48587431)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48587433)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587434)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48587435)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587436)> CPU DETAIL: Result: 0060699906060000 
DBG(48587437)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48587439)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587440)> CPU DETAIL: M6: 0050 
DBG(48587441)> CPU DETAIL: Transfer to T 
DBG(48587443)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587444)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48587444)> CPU DETAIL: Read R 1049: 0000000000000000 
DBG(48587445)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48587447)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587448)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48587449)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587450)> CPU DETAIL: Result: 0060699906070000 
DBG(48587451)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48587453)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587454)> CPU DETAIL: M6: 0051 
DBG(48587455)> CPU DETAIL: Transfer to T 
DBG(48587457)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587458)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48587458)> CPU DETAIL: Read R 1050: 0000000000000000 
DBG(48587459)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48587461)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587462)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48587463)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587464)> CPU DETAIL: Result: 0060699906080000 
DBG(48587465)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48587467)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587468)> CPU DETAIL: M6: 0052 
DBG(48587469)> CPU DETAIL: Transfer to T 
DBG(48587471)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587472)> CPU DETAIL: M6 Address Modifier: 0052 
DBG(48587472)> CPU DETAIL: Read R 1051: 0000000233020000 
DBG(48587473)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48587475)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587476)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48587477)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587478)> CPU DETAIL: Result: 0060699906090000 
DBG(48587479)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48587481)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587482)> CPU DETAIL: M6: 0053 
DBG(48587483)> CPU DETAIL: Transfer to T 
DBG(48587485)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587486)> CPU DETAIL: M6 Address Modifier: 0053 
DBG(48587486)> CPU DETAIL: Read R 1052: 0000000000000000 
DBG(48587487)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48587489)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587490)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48587491)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587492)> CPU DETAIL: Result: 0060699906100000 
DBG(48587493)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48587495)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587496)> CPU DETAIL: M6: 0054 
DBG(48587497)> CPU DETAIL: Transfer to T 
DBG(48587499)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587500)> CPU DETAIL: M6 Address Modifier: 0054 
DBG(48587500)> CPU DETAIL: Read R 1053: 0000000000000000 
DBG(48587501)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48587503)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587504)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48587505)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587506)> CPU DETAIL: Result: 0060699906110000 
DBG(48587507)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48587509)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587510)> CPU DETAIL: M6: 0055 
DBG(48587511)> CPU DETAIL: Transfer to T 
DBG(48587513)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587514)> CPU DETAIL: M6 Address Modifier: 0055 
DBG(48587514)> CPU DETAIL: Read R 1054: 0000000233090000 
DBG(48587515)> CPU DETAIL: Write 0611: 0000000233090000 
DBG(48587517)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587518)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48587519)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587520)> CPU DETAIL: Result: 0060699906120000 
DBG(48587521)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48587523)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587524)> CPU DETAIL: M6: 0056 
DBG(48587525)> CPU DETAIL: Transfer to T 
DBG(48587527)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587528)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(48587528)> CPU DETAIL: Read R 1055: 0000000000000000 
DBG(48587529)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48587531)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587532)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48587533)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587534)> CPU DETAIL: Result: 0060699906130000 
DBG(48587535)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48587537)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587538)> CPU DETAIL: M6: 0057 
DBG(48587539)> CPU DETAIL: Transfer to T 
DBG(48587541)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48587542)> CPU DETAIL: M6 Address Modifier: 0057 
DBG(48587542)> CPU DETAIL: Read R 1056: 0000000000000000 
DBG(48587543)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48587545)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48587546)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48587547)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587548)> CPU DETAIL: Result: 0060699906140000 
DBG(48587549)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48587551)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48587552)> CPU DETAIL: M6: 0058 
DBG(48587555)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48587556)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48587557)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48587559)> CPU CMD: Exec 0169: 00 60 0197 0196 0179   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48587560)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48587561)> CPU DETAIL: Transfer to T 
DBG(48587561)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48587563)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48587564)> CPU DETAIL: Read R 1611: 0000000000000042 
DBG(48587565)> CPU DETAIL: Read S 1619: 0000000000000016 
DBG(48587566)> CPU DETAIL: Result: 0000000000000058 
DBG(48587569)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48587570)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48587571)> CPU DETAIL: Result: 0000000000000142 
DBG(48587574)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48587575)> CPU DETAIL: REG1: 0000000000000142
DBG(48587575)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48587577)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48587578)> CPU DETAIL: M4: 0023 
DBG(48587579)> CPU DETAIL: M6: 0058 
DBG(48587580)> CPU DETAIL: Clear M8
DBG(48587580)> CPU DETAIL: M8: 0000 
DBG(48587583)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48587584)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48587585)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48587588)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48587589)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48587590)> CPU DETAIL: Result: 0858000100160191 
DBG(48587591)> CPU DETAIL: Write 0194: 0858000100160191 
DBG(48587593)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48587594)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48587595)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48587596)> CPU DETAIL: Result: 0000000233030000 
DBG(48587599)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48587600)> CPU DETAIL: Read R 1636: 0000000233020000 
DBG(48587601)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48587602)> CPU DETAIL: Transfer to T 
DBG(48587604)> CPU CMD: Exec 0191: 00 60 8598 1242 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587605)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48587605)> CPU DETAIL: Read R 0598: 0160000000141014 
DBG(48587606)> CPU DETAIL: Write 1242: 0160000000141014 
DBG(48587608)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587609)> CPU DETAIL: Read R 0191: 0060859812420000 
DBG(48587610)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587611)> CPU DETAIL: Result: 0060859812430000 
DBG(48587612)> CPU DETAIL: Write 0191: 0060859812430000 
DBG(48587614)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587615)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587616)> CPU DETAIL: Read S 1611: 0000000000000042 
DBG(48587617)> CPU DETAIL: Result: 0000000000000043 
DBG(48587618)> CPU DETAIL: Write 1611: 0000000000000043 
DBG(48587620)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587621)> CPU DETAIL: M8: 0001 
DBG(48587622)> CPU DETAIL: Transfer to T 
DBG(48587624)> CPU CMD: Exec 0191: 00 60 8598 1243 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587625)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48587625)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48587626)> CPU DETAIL: Write 1243: 0000000233030000 
DBG(48587628)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587629)> CPU DETAIL: Read R 0191: 0060859812430000 
DBG(48587630)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587631)> CPU DETAIL: Result: 0060859812440000 
DBG(48587632)> CPU DETAIL: Write 0191: 0060859812440000 
DBG(48587634)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587635)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587636)> CPU DETAIL: Read S 1611: 0000000000000043 
DBG(48587637)> CPU DETAIL: Result: 0000000000000044 
DBG(48587638)> CPU DETAIL: Write 1611: 0000000000000044 
DBG(48587640)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587641)> CPU DETAIL: M8: 0002 
DBG(48587642)> CPU DETAIL: Transfer to T 
DBG(48587644)> CPU CMD: Exec 0191: 00 60 8598 1244 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587645)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48587645)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48587646)> CPU DETAIL: Write 1244: 0000000000000000 
DBG(48587648)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587649)> CPU DETAIL: Read R 0191: 0060859812440000 
DBG(48587650)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587651)> CPU DETAIL: Result: 0060859812450000 
DBG(48587652)> CPU DETAIL: Write 0191: 0060859812450000 
DBG(48587654)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587655)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587656)> CPU DETAIL: Read S 1611: 0000000000000044 
DBG(48587657)> CPU DETAIL: Result: 0000000000000045 
DBG(48587658)> CPU DETAIL: Write 1611: 0000000000000045 
DBG(48587660)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587661)> CPU DETAIL: M8: 0003 
DBG(48587662)> CPU DETAIL: Transfer to T 
DBG(48587664)> CPU CMD: Exec 0191: 00 60 8598 1245 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587665)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48587665)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48587666)> CPU DETAIL: Write 1245: 0000000000000000 
DBG(48587668)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587669)> CPU DETAIL: Read R 0191: 0060859812450000 
DBG(48587670)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587671)> CPU DETAIL: Result: 0060859812460000 
DBG(48587672)> CPU DETAIL: Write 0191: 0060859812460000 
DBG(48587674)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587675)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587676)> CPU DETAIL: Read S 1611: 0000000000000045 
DBG(48587677)> CPU DETAIL: Result: 0000000000000046 
DBG(48587678)> CPU DETAIL: Write 1611: 0000000000000046 
DBG(48587680)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587681)> CPU DETAIL: M8: 0004 
DBG(48587682)> CPU DETAIL: Transfer to T 
DBG(48587684)> CPU CMD: Exec 0191: 00 60 8598 1246 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587685)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48587685)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48587686)> CPU DETAIL: Write 1246: 0000000000000000 
DBG(48587688)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587689)> CPU DETAIL: Read R 0191: 0060859812460000 
DBG(48587690)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587691)> CPU DETAIL: Result: 0060859812470000 
DBG(48587692)> CPU DETAIL: Write 0191: 0060859812470000 
DBG(48587694)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587695)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587696)> CPU DETAIL: Read S 1611: 0000000000000046 
DBG(48587697)> CPU DETAIL: Result: 0000000000000047 
DBG(48587698)> CPU DETAIL: Write 1611: 0000000000000047 
DBG(48587700)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587701)> CPU DETAIL: M8: 0005 
DBG(48587702)> CPU DETAIL: Transfer to T 
DBG(48587704)> CPU CMD: Exec 0191: 00 60 8598 1247 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587705)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48587705)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48587706)> CPU DETAIL: Write 1247: 0000000000000000 
DBG(48587708)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587709)> CPU DETAIL: Read R 0191: 0060859812470000 
DBG(48587710)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587711)> CPU DETAIL: Result: 0060859812480000 
DBG(48587712)> CPU DETAIL: Write 0191: 0060859812480000 
DBG(48587714)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587715)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587716)> CPU DETAIL: Read S 1611: 0000000000000047 
DBG(48587717)> CPU DETAIL: Result: 0000000000000048 
DBG(48587718)> CPU DETAIL: Write 1611: 0000000000000048 
DBG(48587720)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587721)> CPU DETAIL: M8: 0006 
DBG(48587722)> CPU DETAIL: Transfer to T 
DBG(48587724)> CPU CMD: Exec 0191: 00 60 8598 1248 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587725)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48587725)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48587726)> CPU DETAIL: Write 1248: 3336000000000201 
DBG(48587728)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587729)> CPU DETAIL: Read R 0191: 0060859812480000 
DBG(48587730)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587731)> CPU DETAIL: Result: 0060859812490000 
DBG(48587732)> CPU DETAIL: Write 0191: 0060859812490000 
DBG(48587734)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587735)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587736)> CPU DETAIL: Read S 1611: 0000000000000048 
DBG(48587737)> CPU DETAIL: Result: 0000000000000049 
DBG(48587738)> CPU DETAIL: Write 1611: 0000000000000049 
DBG(48587740)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587741)> CPU DETAIL: M8: 0007 
DBG(48587742)> CPU DETAIL: Transfer to T 
DBG(48587744)> CPU CMD: Exec 0191: 00 60 8598 1249 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587745)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48587745)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48587746)> CPU DETAIL: Write 1249: 0000000233010000 
DBG(48587748)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587749)> CPU DETAIL: Read R 0191: 0060859812490000 
DBG(48587750)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587751)> CPU DETAIL: Result: 0060859812500000 
DBG(48587752)> CPU DETAIL: Write 0191: 0060859812500000 
DBG(48587754)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587755)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587756)> CPU DETAIL: Read S 1611: 0000000000000049 
DBG(48587757)> CPU DETAIL: Result: 0000000000000050 
DBG(48587758)> CPU DETAIL: Write 1611: 0000000000000050 
DBG(48587760)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587761)> CPU DETAIL: M8: 0008 
DBG(48587762)> CPU DETAIL: Transfer to T 
DBG(48587764)> CPU CMD: Exec 0191: 00 60 8598 1250 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587765)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48587765)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48587766)> CPU DETAIL: Write 1250: 0000000000000000 
DBG(48587768)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587769)> CPU DETAIL: Read R 0191: 0060859812500000 
DBG(48587770)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587771)> CPU DETAIL: Result: 0060859812510000 
DBG(48587772)> CPU DETAIL: Write 0191: 0060859812510000 
DBG(48587774)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587775)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587776)> CPU DETAIL: Read S 1611: 0000000000000050 
DBG(48587777)> CPU DETAIL: Result: 0000000000000051 
DBG(48587778)> CPU DETAIL: Write 1611: 0000000000000051 
DBG(48587780)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587781)> CPU DETAIL: M8: 0009 
DBG(48587782)> CPU DETAIL: Transfer to T 
DBG(48587784)> CPU CMD: Exec 0191: 00 60 8598 1251 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587785)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48587785)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48587786)> CPU DETAIL: Write 1251: 0000000000000000 
DBG(48587788)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587789)> CPU DETAIL: Read R 0191: 0060859812510000 
DBG(48587790)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587791)> CPU DETAIL: Result: 0060859812520000 
DBG(48587792)> CPU DETAIL: Write 0191: 0060859812520000 
DBG(48587794)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587795)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587796)> CPU DETAIL: Read S 1611: 0000000000000051 
DBG(48587797)> CPU DETAIL: Result: 0000000000000052 
DBG(48587798)> CPU DETAIL: Write 1611: 0000000000000052 
DBG(48587800)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587801)> CPU DETAIL: M8: 0010 
DBG(48587802)> CPU DETAIL: Transfer to T 
DBG(48587804)> CPU CMD: Exec 0191: 00 60 8598 1252 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587805)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48587805)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48587806)> CPU DETAIL: Write 1252: 0000000233020000 
DBG(48587808)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587809)> CPU DETAIL: Read R 0191: 0060859812520000 
DBG(48587810)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587811)> CPU DETAIL: Result: 0060859812530000 
DBG(48587812)> CPU DETAIL: Write 0191: 0060859812530000 
DBG(48587814)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587815)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587816)> CPU DETAIL: Read S 1611: 0000000000000052 
DBG(48587817)> CPU DETAIL: Result: 0000000000000053 
DBG(48587818)> CPU DETAIL: Write 1611: 0000000000000053 
DBG(48587820)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587821)> CPU DETAIL: M8: 0011 
DBG(48587822)> CPU DETAIL: Transfer to T 
DBG(48587824)> CPU CMD: Exec 0191: 00 60 8598 1253 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587825)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48587825)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48587826)> CPU DETAIL: Write 1253: 0000000000000000 
DBG(48587828)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587829)> CPU DETAIL: Read R 0191: 0060859812530000 
DBG(48587830)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587831)> CPU DETAIL: Result: 0060859812540000 
DBG(48587832)> CPU DETAIL: Write 0191: 0060859812540000 
DBG(48587834)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587835)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587836)> CPU DETAIL: Read S 1611: 0000000000000053 
DBG(48587837)> CPU DETAIL: Result: 0000000000000054 
DBG(48587838)> CPU DETAIL: Write 1611: 0000000000000054 
DBG(48587840)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587841)> CPU DETAIL: M8: 0012 
DBG(48587842)> CPU DETAIL: Transfer to T 
DBG(48587844)> CPU CMD: Exec 0191: 00 60 8598 1254 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587845)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48587845)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48587846)> CPU DETAIL: Write 1254: 0000000000000000 
DBG(48587848)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587849)> CPU DETAIL: Read R 0191: 0060859812540000 
DBG(48587850)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587851)> CPU DETAIL: Result: 0060859812550000 
DBG(48587852)> CPU DETAIL: Write 0191: 0060859812550000 
DBG(48587854)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587855)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587856)> CPU DETAIL: Read S 1611: 0000000000000054 
DBG(48587857)> CPU DETAIL: Result: 0000000000000055 
DBG(48587858)> CPU DETAIL: Write 1611: 0000000000000055 
DBG(48587860)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587861)> CPU DETAIL: M8: 0013 
DBG(48587862)> CPU DETAIL: Transfer to T 
DBG(48587864)> CPU CMD: Exec 0191: 00 60 8598 1255 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587865)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48587865)> CPU DETAIL: Read R 0611: 0000000233090000 
DBG(48587866)> CPU DETAIL: Write 1255: 0000000233090000 
DBG(48587868)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587869)> CPU DETAIL: Read R 0191: 0060859812550000 
DBG(48587870)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587871)> CPU DETAIL: Result: 0060859812560000 
DBG(48587872)> CPU DETAIL: Write 0191: 0060859812560000 
DBG(48587874)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587875)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587876)> CPU DETAIL: Read S 1611: 0000000000000055 
DBG(48587877)> CPU DETAIL: Result: 0000000000000056 
DBG(48587878)> CPU DETAIL: Write 1611: 0000000000000056 
DBG(48587880)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587881)> CPU DETAIL: M8: 0014 
DBG(48587882)> CPU DETAIL: Transfer to T 
DBG(48587884)> CPU CMD: Exec 0191: 00 60 8598 1256 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587885)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48587885)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48587886)> CPU DETAIL: Write 1256: 0000000000000000 
DBG(48587888)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587889)> CPU DETAIL: Read R 0191: 0060859812560000 
DBG(48587890)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587891)> CPU DETAIL: Result: 0060859812570000 
DBG(48587892)> CPU DETAIL: Write 0191: 0060859812570000 
DBG(48587894)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587895)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587896)> CPU DETAIL: Read S 1611: 0000000000000056 
DBG(48587897)> CPU DETAIL: Result: 0000000000000057 
DBG(48587898)> CPU DETAIL: Write 1611: 0000000000000057 
DBG(48587900)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587901)> CPU DETAIL: M8: 0015 
DBG(48587902)> CPU DETAIL: Transfer to T 
DBG(48587904)> CPU CMD: Exec 0191: 00 60 8598 1257 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48587905)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48587905)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48587906)> CPU DETAIL: Write 1257: 0000000000000000 
DBG(48587908)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48587909)> CPU DETAIL: Read R 0191: 0060859812570000 
DBG(48587910)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48587911)> CPU DETAIL: Result: 0060859812580000 
DBG(48587912)> CPU DETAIL: Write 0191: 0060859812580000 
DBG(48587914)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48587915)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48587916)> CPU DETAIL: Read S 1611: 0000000000000057 
DBG(48587917)> CPU DETAIL: Result: 0000000000000058 
DBG(48587918)> CPU DETAIL: Write 1611: 0000000000000058 
DBG(48587920)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48587921)> CPU DETAIL: M8: 0016 
DBG(48587924)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48587925)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48587926)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48587927)> CPU DETAIL: Result: 0000000233030000 
DBG(48587928)> CPU DETAIL: Write 1636: 0000000233030000 
DBG(48587930)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48587931)> CPU DETAIL: Transfer to T 
DBG(48587933)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48587934)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48587935)> CPU DETAIL: Read S 1615: 0000000000000058 
DBG(48587936)> CPU DETAIL: Result: 0000000000000023 
DBG(48587939)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48587940)> CPU DETAIL: REG1: 0000000000000023
DBG(48587940)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48587942)> CPU CMD: Exec 0149: 00 60 1063 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48587943)> CPU DETAIL: Read R 1063: 3336000000000200 
DBG(48587944)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48587946)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48587947)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48587947)> CPU DETAIL: Read R 1057: 0130000000141015 
DBG(48587948)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48587949)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48587951)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48587952)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48587953)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48587954)> CPU DETAIL: Result: 0000000000000200 
DBG(48587955)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48587956)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48587958)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48587959)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48587960)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48587961)> CPU DETAIL: Result: 0000000000000000 
DBG(48587962)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48587964)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48587965)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48587966)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48587967)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48587968)> CPU DETAIL: Transfer to T 
DBG(48587970)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48587971)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48587972)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48587973)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48587973)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48587974)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48587975)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48587976)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48587978)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48587979)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48587980)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48587981)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48587981)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48587982)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48587983)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48587984)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48587986)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48587987)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48587988)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48587991)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48587992)> CPU DETAIL: Read R 0149: 0060106316160000 
DBG(48587993)> CPU DETAIL: Result: 0060107616160000 
DBG(48587994)> CPU DETAIL: Write 0149: 0060107616160000 
DBG(48587996)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48587997)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48587998)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48587999)> CPU DETAIL: Result: 0000000000000006 
DBG(48588000)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48588002)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48588003)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48588004)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48588005)> CPU DETAIL: Result: 0000000000000000 
DBG(48588006)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48588008)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48588009)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48588010)> CPU DETAIL: Read S 1615: 0000000000000058 
DBG(48588011)> CPU DETAIL: Result: 0000000000000071 
DBG(48588012)> CPU DETAIL: Write 1615: 0000000000000071 
DBG(48588014)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48588015)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48588016)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48588019)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48588020)> CPU DETAIL: Read R 0167: 0658000100580165 
DBG(48588021)> CPU DETAIL: Result: 0658000100710165 
DBG(48588022)> CPU DETAIL: Write 0167: 0658000100710165 
DBG(48588024)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588025)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48588025)> CPU DETAIL: Read R 1057: 0130000000141015 
DBG(48588026)> CPU DETAIL: Write 0598: 0130000000141015 
DBG(48588028)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588029)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48588030)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588031)> CPU DETAIL: Result: 0060699905990000 
DBG(48588032)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48588034)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588035)> CPU DETAIL: M6: 0059 
DBG(48588036)> CPU DETAIL: Transfer to T 
DBG(48588038)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588039)> CPU DETAIL: M6 Address Modifier: 0059 
DBG(48588039)> CPU DETAIL: Read R 1058: 0000000233090000 
DBG(48588040)> CPU DETAIL: Write 0599: 0000000233090000 
DBG(48588042)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588043)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48588044)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588045)> CPU DETAIL: Result: 0060699906000000 
DBG(48588046)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48588048)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588049)> CPU DETAIL: M6: 0060 
DBG(48588050)> CPU DETAIL: Transfer to T 
DBG(48588052)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588053)> CPU DETAIL: M6 Address Modifier: 0060 
DBG(48588053)> CPU DETAIL: Read R 1059: 0000000000000000 
DBG(48588054)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48588056)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588057)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48588058)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588059)> CPU DETAIL: Result: 0060699906010000 
DBG(48588060)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48588062)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588063)> CPU DETAIL: M6: 0061 
DBG(48588064)> CPU DETAIL: Transfer to T 
DBG(48588066)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588067)> CPU DETAIL: M6 Address Modifier: 0061 
DBG(48588067)> CPU DETAIL: Read R 1060: 0000000000000000 
DBG(48588068)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48588070)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588071)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48588072)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588073)> CPU DETAIL: Result: 0060699906020000 
DBG(48588074)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48588076)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588077)> CPU DETAIL: M6: 0062 
DBG(48588078)> CPU DETAIL: Transfer to T 
DBG(48588080)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588081)> CPU DETAIL: M6 Address Modifier: 0062 
DBG(48588081)> CPU DETAIL: Read R 1061: 0000000000000000 
DBG(48588082)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48588084)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588085)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48588086)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588087)> CPU DETAIL: Result: 0060699906030000 
DBG(48588088)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48588090)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588091)> CPU DETAIL: M6: 0063 
DBG(48588092)> CPU DETAIL: Transfer to T 
DBG(48588094)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588095)> CPU DETAIL: M6 Address Modifier: 0063 
DBG(48588095)> CPU DETAIL: Read R 1062: 0000000000000000 
DBG(48588096)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48588098)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588099)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48588100)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588101)> CPU DETAIL: Result: 0060699906040000 
DBG(48588102)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48588104)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588105)> CPU DETAIL: M6: 0064 
DBG(48588106)> CPU DETAIL: Transfer to T 
DBG(48588108)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588109)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48588109)> CPU DETAIL: Read R 1063: 3336000000000200 
DBG(48588110)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48588112)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588113)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48588114)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588115)> CPU DETAIL: Result: 0060699906050000 
DBG(48588116)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48588118)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588119)> CPU DETAIL: M6: 0065 
DBG(48588120)> CPU DETAIL: Transfer to T 
DBG(48588122)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588123)> CPU DETAIL: M6 Address Modifier: 0065 
DBG(48588123)> CPU DETAIL: Read R 1064: 0000000233010000 
DBG(48588124)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48588126)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588127)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48588128)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588129)> CPU DETAIL: Result: 0060699906060000 
DBG(48588130)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48588132)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588133)> CPU DETAIL: M6: 0066 
DBG(48588134)> CPU DETAIL: Transfer to T 
DBG(48588136)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588137)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(48588137)> CPU DETAIL: Read R 1065: 0000000000000000 
DBG(48588138)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48588140)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588141)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48588142)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588143)> CPU DETAIL: Result: 0060699906070000 
DBG(48588144)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48588146)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588147)> CPU DETAIL: M6: 0067 
DBG(48588148)> CPU DETAIL: Transfer to T 
DBG(48588150)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588151)> CPU DETAIL: M6 Address Modifier: 0067 
DBG(48588151)> CPU DETAIL: Read R 1066: 0000000000000000 
DBG(48588152)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48588154)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588155)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48588156)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588157)> CPU DETAIL: Result: 0060699906080000 
DBG(48588158)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48588160)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588161)> CPU DETAIL: M6: 0068 
DBG(48588162)> CPU DETAIL: Transfer to T 
DBG(48588164)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588165)> CPU DETAIL: M6 Address Modifier: 0068 
DBG(48588165)> CPU DETAIL: Read R 1067: 0000000233030000 
DBG(48588166)> CPU DETAIL: Write 0608: 0000000233030000 
DBG(48588168)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588169)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48588170)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588171)> CPU DETAIL: Result: 0060699906090000 
DBG(48588172)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48588174)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588175)> CPU DETAIL: M6: 0069 
DBG(48588176)> CPU DETAIL: Transfer to T 
DBG(48588178)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588179)> CPU DETAIL: M6 Address Modifier: 0069 
DBG(48588179)> CPU DETAIL: Read R 1068: 0000000000000000 
DBG(48588180)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48588182)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588183)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48588184)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588185)> CPU DETAIL: Result: 0060699906100000 
DBG(48588186)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48588188)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588189)> CPU DETAIL: M6: 0070 
DBG(48588190)> CPU DETAIL: Transfer to T 
DBG(48588192)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588193)> CPU DETAIL: M6 Address Modifier: 0070 
DBG(48588193)> CPU DETAIL: Read R 1069: 0000000000000000 
DBG(48588194)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48588196)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588197)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48588198)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588199)> CPU DETAIL: Result: 0060699906110000 
DBG(48588200)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48588202)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588203)> CPU DETAIL: M6: 0071 
DBG(48588206)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48588207)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48588208)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48588210)> CPU CMD: Exec 0169: 00 60 0197 0196 0179   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48588211)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48588212)> CPU DETAIL: Transfer to T 
DBG(48588212)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48588214)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48588215)> CPU DETAIL: Read R 1611: 0000000000000058 
DBG(48588216)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48588217)> CPU DETAIL: Result: 0000000000000071 
DBG(48588220)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48588221)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48588222)> CPU DETAIL: Result: 0000000000000129 
DBG(48588225)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48588226)> CPU DETAIL: REG1: 0000000000000129
DBG(48588226)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48588228)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48588229)> CPU DETAIL: M4: 0023 
DBG(48588230)> CPU DETAIL: M6: 0071 
DBG(48588231)> CPU DETAIL: Clear M8
DBG(48588231)> CPU DETAIL: M8: 0000 
DBG(48588234)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48588235)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48588236)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48588239)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48588240)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48588241)> CPU DETAIL: Result: 0858000100130191 
DBG(48588242)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48588244)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48588245)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48588246)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48588247)> CPU DETAIL: Result: 0000000233090000 
DBG(48588250)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48588251)> CPU DETAIL: Read R 1636: 0000000233030000 
DBG(48588252)> CPU DETAIL: Diff: REG1: 9999999999940000
DBG(48588253)> CPU DETAIL: Transfer to T 
DBG(48588255)> CPU CMD: Exec 0191: 00 60 8598 1258 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588256)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48588256)> CPU DETAIL: Read R 0598: 0130000000141015 
DBG(48588257)> CPU DETAIL: Write 1258: 0130000000141015 
DBG(48588259)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588260)> CPU DETAIL: Read R 0191: 0060859812580000 
DBG(48588261)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588262)> CPU DETAIL: Result: 0060859812590000 
DBG(48588263)> CPU DETAIL: Write 0191: 0060859812590000 
DBG(48588265)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588266)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588267)> CPU DETAIL: Read S 1611: 0000000000000058 
DBG(48588268)> CPU DETAIL: Result: 0000000000000059 
DBG(48588269)> CPU DETAIL: Write 1611: 0000000000000059 
DBG(48588271)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588272)> CPU DETAIL: M8: 0001 
DBG(48588273)> CPU DETAIL: Transfer to T 
DBG(48588275)> CPU CMD: Exec 0191: 00 60 8598 1259 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588276)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48588276)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48588277)> CPU DETAIL: Write 1259: 0000000233090000 
DBG(48588279)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588280)> CPU DETAIL: Read R 0191: 0060859812590000 
DBG(48588281)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588282)> CPU DETAIL: Result: 0060859812600000 
DBG(48588283)> CPU DETAIL: Write 0191: 0060859812600000 
DBG(48588285)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588286)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588287)> CPU DETAIL: Read S 1611: 0000000000000059 
DBG(48588288)> CPU DETAIL: Result: 0000000000000060 
DBG(48588289)> CPU DETAIL: Write 1611: 0000000000000060 
DBG(48588291)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588292)> CPU DETAIL: M8: 0002 
DBG(48588293)> CPU DETAIL: Transfer to T 
DBG(48588295)> CPU CMD: Exec 0191: 00 60 8598 1260 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588296)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48588296)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48588297)> CPU DETAIL: Write 1260: 0000000000000000 
DBG(48588299)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588300)> CPU DETAIL: Read R 0191: 0060859812600000 
DBG(48588301)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588302)> CPU DETAIL: Result: 0060859812610000 
DBG(48588303)> CPU DETAIL: Write 0191: 0060859812610000 
DBG(48588305)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588306)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588307)> CPU DETAIL: Read S 1611: 0000000000000060 
DBG(48588308)> CPU DETAIL: Result: 0000000000000061 
DBG(48588309)> CPU DETAIL: Write 1611: 0000000000000061 
DBG(48588311)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588312)> CPU DETAIL: M8: 0003 
DBG(48588313)> CPU DETAIL: Transfer to T 
DBG(48588315)> CPU CMD: Exec 0191: 00 60 8598 1261 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588316)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48588316)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48588317)> CPU DETAIL: Write 1261: 0000000000000000 
DBG(48588319)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588320)> CPU DETAIL: Read R 0191: 0060859812610000 
DBG(48588321)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588322)> CPU DETAIL: Result: 0060859812620000 
DBG(48588323)> CPU DETAIL: Write 0191: 0060859812620000 
DBG(48588325)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588326)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588327)> CPU DETAIL: Read S 1611: 0000000000000061 
DBG(48588328)> CPU DETAIL: Result: 0000000000000062 
DBG(48588329)> CPU DETAIL: Write 1611: 0000000000000062 
DBG(48588331)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588332)> CPU DETAIL: M8: 0004 
DBG(48588333)> CPU DETAIL: Transfer to T 
DBG(48588335)> CPU CMD: Exec 0191: 00 60 8598 1262 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588336)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48588336)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48588337)> CPU DETAIL: Write 1262: 0000000000000000 
DBG(48588339)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588340)> CPU DETAIL: Read R 0191: 0060859812620000 
DBG(48588341)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588342)> CPU DETAIL: Result: 0060859812630000 
DBG(48588343)> CPU DETAIL: Write 0191: 0060859812630000 
DBG(48588345)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588346)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588347)> CPU DETAIL: Read S 1611: 0000000000000062 
DBG(48588348)> CPU DETAIL: Result: 0000000000000063 
DBG(48588349)> CPU DETAIL: Write 1611: 0000000000000063 
DBG(48588351)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588352)> CPU DETAIL: M8: 0005 
DBG(48588353)> CPU DETAIL: Transfer to T 
DBG(48588355)> CPU CMD: Exec 0191: 00 60 8598 1263 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588356)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48588356)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48588357)> CPU DETAIL: Write 1263: 0000000000000000 
DBG(48588359)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588360)> CPU DETAIL: Read R 0191: 0060859812630000 
DBG(48588361)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588362)> CPU DETAIL: Result: 0060859812640000 
DBG(48588363)> CPU DETAIL: Write 0191: 0060859812640000 
DBG(48588365)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588366)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588367)> CPU DETAIL: Read S 1611: 0000000000000063 
DBG(48588368)> CPU DETAIL: Result: 0000000000000064 
DBG(48588369)> CPU DETAIL: Write 1611: 0000000000000064 
DBG(48588371)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588372)> CPU DETAIL: M8: 0006 
DBG(48588373)> CPU DETAIL: Transfer to T 
DBG(48588375)> CPU CMD: Exec 0191: 00 60 8598 1264 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588376)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48588376)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48588377)> CPU DETAIL: Write 1264: 3336000000000200 
DBG(48588379)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588380)> CPU DETAIL: Read R 0191: 0060859812640000 
DBG(48588381)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588382)> CPU DETAIL: Result: 0060859812650000 
DBG(48588383)> CPU DETAIL: Write 0191: 0060859812650000 
DBG(48588385)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588386)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588387)> CPU DETAIL: Read S 1611: 0000000000000064 
DBG(48588388)> CPU DETAIL: Result: 0000000000000065 
DBG(48588389)> CPU DETAIL: Write 1611: 0000000000000065 
DBG(48588391)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588392)> CPU DETAIL: M8: 0007 
DBG(48588393)> CPU DETAIL: Transfer to T 
DBG(48588395)> CPU CMD: Exec 0191: 00 60 8598 1265 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588396)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48588396)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48588397)> CPU DETAIL: Write 1265: 0000000233010000 
DBG(48588399)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588400)> CPU DETAIL: Read R 0191: 0060859812650000 
DBG(48588401)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588402)> CPU DETAIL: Result: 0060859812660000 
DBG(48588403)> CPU DETAIL: Write 0191: 0060859812660000 
DBG(48588405)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588406)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588407)> CPU DETAIL: Read S 1611: 0000000000000065 
DBG(48588408)> CPU DETAIL: Result: 0000000000000066 
DBG(48588409)> CPU DETAIL: Write 1611: 0000000000000066 
DBG(48588411)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588412)> CPU DETAIL: M8: 0008 
DBG(48588413)> CPU DETAIL: Transfer to T 
DBG(48588415)> CPU CMD: Exec 0191: 00 60 8598 1266 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588416)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48588416)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48588417)> CPU DETAIL: Write 1266: 0000000000000000 
DBG(48588419)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588420)> CPU DETAIL: Read R 0191: 0060859812660000 
DBG(48588421)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588422)> CPU DETAIL: Result: 0060859812670000 
DBG(48588423)> CPU DETAIL: Write 0191: 0060859812670000 
DBG(48588425)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588426)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588427)> CPU DETAIL: Read S 1611: 0000000000000066 
DBG(48588428)> CPU DETAIL: Result: 0000000000000067 
DBG(48588429)> CPU DETAIL: Write 1611: 0000000000000067 
DBG(48588431)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588432)> CPU DETAIL: M8: 0009 
DBG(48588433)> CPU DETAIL: Transfer to T 
DBG(48588435)> CPU CMD: Exec 0191: 00 60 8598 1267 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588436)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48588436)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48588437)> CPU DETAIL: Write 1267: 0000000000000000 
DBG(48588439)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588440)> CPU DETAIL: Read R 0191: 0060859812670000 
DBG(48588441)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588442)> CPU DETAIL: Result: 0060859812680000 
DBG(48588443)> CPU DETAIL: Write 0191: 0060859812680000 
DBG(48588445)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588446)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588447)> CPU DETAIL: Read S 1611: 0000000000000067 
DBG(48588448)> CPU DETAIL: Result: 0000000000000068 
DBG(48588449)> CPU DETAIL: Write 1611: 0000000000000068 
DBG(48588451)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588452)> CPU DETAIL: M8: 0010 
DBG(48588453)> CPU DETAIL: Transfer to T 
DBG(48588455)> CPU CMD: Exec 0191: 00 60 8598 1268 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588456)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48588456)> CPU DETAIL: Read R 0608: 0000000233030000 
DBG(48588457)> CPU DETAIL: Write 1268: 0000000233030000 
DBG(48588459)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588460)> CPU DETAIL: Read R 0191: 0060859812680000 
DBG(48588461)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588462)> CPU DETAIL: Result: 0060859812690000 
DBG(48588463)> CPU DETAIL: Write 0191: 0060859812690000 
DBG(48588465)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588466)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588467)> CPU DETAIL: Read S 1611: 0000000000000068 
DBG(48588468)> CPU DETAIL: Result: 0000000000000069 
DBG(48588469)> CPU DETAIL: Write 1611: 0000000000000069 
DBG(48588471)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588472)> CPU DETAIL: M8: 0011 
DBG(48588473)> CPU DETAIL: Transfer to T 
DBG(48588475)> CPU CMD: Exec 0191: 00 60 8598 1269 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588476)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48588476)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48588477)> CPU DETAIL: Write 1269: 0000000000000000 
DBG(48588479)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588480)> CPU DETAIL: Read R 0191: 0060859812690000 
DBG(48588481)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588482)> CPU DETAIL: Result: 0060859812700000 
DBG(48588483)> CPU DETAIL: Write 0191: 0060859812700000 
DBG(48588485)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588486)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588487)> CPU DETAIL: Read S 1611: 0000000000000069 
DBG(48588488)> CPU DETAIL: Result: 0000000000000070 
DBG(48588489)> CPU DETAIL: Write 1611: 0000000000000070 
DBG(48588491)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588492)> CPU DETAIL: M8: 0012 
DBG(48588493)> CPU DETAIL: Transfer to T 
DBG(48588495)> CPU CMD: Exec 0191: 00 60 8598 1270 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588496)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48588496)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48588497)> CPU DETAIL: Write 1270: 0000000000000000 
DBG(48588499)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588500)> CPU DETAIL: Read R 0191: 0060859812700000 
DBG(48588501)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588502)> CPU DETAIL: Result: 0060859812710000 
DBG(48588503)> CPU DETAIL: Write 0191: 0060859812710000 
DBG(48588505)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588506)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588507)> CPU DETAIL: Read S 1611: 0000000000000070 
DBG(48588508)> CPU DETAIL: Result: 0000000000000071 
DBG(48588509)> CPU DETAIL: Write 1611: 0000000000000071 
DBG(48588511)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588512)> CPU DETAIL: M8: 0013 
DBG(48588515)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48588516)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48588517)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48588518)> CPU DETAIL: Result: 0000000233090000 
DBG(48588519)> CPU DETAIL: Write 1636: 0000000233090000 
DBG(48588521)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48588522)> CPU DETAIL: Transfer to T 
DBG(48588524)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48588525)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48588526)> CPU DETAIL: Read S 1615: 0000000000000071 
DBG(48588527)> CPU DETAIL: Result: 0000000000000010 
DBG(48588530)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48588531)> CPU DETAIL: REG1: 0000000000000010
DBG(48588531)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48588533)> CPU CMD: Exec 0149: 00 60 1076 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48588534)> CPU DETAIL: Read R 1076: 0000000000000100 
DBG(48588535)> CPU DETAIL: Write 1616: 0000000000000100 
DBG(48588537)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48588538)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48588538)> CPU DETAIL: Read R 1070: 0100000000151113 
DBG(48588539)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48588540)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48588542)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48588543)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48588544)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48588545)> CPU DETAIL: Result: 0000000000000100 
DBG(48588546)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48588547)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48588549)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48588550)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48588551)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48588552)> CPU DETAIL: Result: 0000000000000000 
DBG(48588553)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48588555)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48588556)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48588557)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48588558)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48588559)> CPU DETAIL: Transfer to T 
DBG(48588561)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48588562)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48588563)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48588564)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48588564)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48588565)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48588566)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48588567)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48588569)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48588570)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48588571)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48588572)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48588572)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48588573)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48588574)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48588575)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48588577)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48588578)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48588579)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48588582)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48588583)> CPU DETAIL: Read R 0149: 0060107616160000 
DBG(48588584)> CPU DETAIL: Result: 0060108616160000 
DBG(48588585)> CPU DETAIL: Write 0149: 0060108616160000 
DBG(48588587)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48588588)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48588589)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48588590)> CPU DETAIL: Result: 0000000000000003 
DBG(48588591)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48588593)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48588594)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48588595)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48588596)> CPU DETAIL: Result: 0000000000000000 
DBG(48588597)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48588599)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48588600)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48588601)> CPU DETAIL: Read S 1615: 0000000000000071 
DBG(48588602)> CPU DETAIL: Result: 0000000000000081 
DBG(48588603)> CPU DETAIL: Write 1615: 0000000000000081 
DBG(48588605)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48588606)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48588607)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48588610)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48588611)> CPU DETAIL: Read R 0167: 0658000100710165 
DBG(48588612)> CPU DETAIL: Result: 0658000100810165 
DBG(48588613)> CPU DETAIL: Write 0167: 0658000100810165 
DBG(48588615)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588616)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48588616)> CPU DETAIL: Read R 1070: 0100000000151113 
DBG(48588617)> CPU DETAIL: Write 0598: 0100000000151113 
DBG(48588619)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588620)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48588621)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588622)> CPU DETAIL: Result: 0060699905990000 
DBG(48588623)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48588625)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588626)> CPU DETAIL: M6: 0072 
DBG(48588627)> CPU DETAIL: Transfer to T 
DBG(48588629)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588630)> CPU DETAIL: M6 Address Modifier: 0072 
DBG(48588630)> CPU DETAIL: Read R 1071: 0000000249999990 
DBG(48588631)> CPU DETAIL: Write 0599: 0000000249999990 
DBG(48588633)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588634)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48588635)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588636)> CPU DETAIL: Result: 0060699906000000 
DBG(48588637)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48588639)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588640)> CPU DETAIL: M6: 0073 
DBG(48588641)> CPU DETAIL: Transfer to T 
DBG(48588643)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588644)> CPU DETAIL: M6 Address Modifier: 0073 
DBG(48588644)> CPU DETAIL: Read R 1072: 0000000000000000 
DBG(48588645)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48588647)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588648)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48588649)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588650)> CPU DETAIL: Result: 0060699906010000 
DBG(48588651)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48588653)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588654)> CPU DETAIL: M6: 0074 
DBG(48588655)> CPU DETAIL: Transfer to T 
DBG(48588657)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588658)> CPU DETAIL: M6 Address Modifier: 0074 
DBG(48588658)> CPU DETAIL: Read R 1073: 0000000000000000 
DBG(48588659)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48588661)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588662)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48588663)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588664)> CPU DETAIL: Result: 0060699906020000 
DBG(48588665)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48588667)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588668)> CPU DETAIL: M6: 0075 
DBG(48588669)> CPU DETAIL: Transfer to T 
DBG(48588671)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588672)> CPU DETAIL: M6 Address Modifier: 0075 
DBG(48588672)> CPU DETAIL: Read R 1074: 0000000000000000 
DBG(48588673)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48588675)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588676)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48588677)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588678)> CPU DETAIL: Result: 0060699906030000 
DBG(48588679)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48588681)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588682)> CPU DETAIL: M6: 0076 
DBG(48588683)> CPU DETAIL: Transfer to T 
DBG(48588685)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588686)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(48588686)> CPU DETAIL: Read R 1075: 0000000000000000 
DBG(48588687)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48588689)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588690)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48588691)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588692)> CPU DETAIL: Result: 0060699906040000 
DBG(48588693)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48588695)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588696)> CPU DETAIL: M6: 0077 
DBG(48588697)> CPU DETAIL: Transfer to T 
DBG(48588699)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588700)> CPU DETAIL: M6 Address Modifier: 0077 
DBG(48588700)> CPU DETAIL: Read R 1076: 0000000000000100 
DBG(48588701)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48588703)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588704)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48588705)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588706)> CPU DETAIL: Result: 0060699906050000 
DBG(48588707)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48588709)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588710)> CPU DETAIL: M6: 0078 
DBG(48588711)> CPU DETAIL: Transfer to T 
DBG(48588713)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588714)> CPU DETAIL: M6 Address Modifier: 0078 
DBG(48588714)> CPU DETAIL: Read R 1077: 0000000242009990 
DBG(48588715)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48588717)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588718)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48588719)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588720)> CPU DETAIL: Result: 0060699906060000 
DBG(48588721)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48588723)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588724)> CPU DETAIL: M6: 0079 
DBG(48588725)> CPU DETAIL: Transfer to T 
DBG(48588727)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588728)> CPU DETAIL: M6 Address Modifier: 0079 
DBG(48588728)> CPU DETAIL: Read R 1078: 0000000000033555 
DBG(48588729)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48588731)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588732)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48588733)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588734)> CPU DETAIL: Result: 0060699906070000 
DBG(48588735)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48588737)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588738)> CPU DETAIL: M6: 0080 
DBG(48588739)> CPU DETAIL: Transfer to T 
DBG(48588741)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48588742)> CPU DETAIL: M6 Address Modifier: 0080 
DBG(48588742)> CPU DETAIL: Read R 1079: 0000000000033666 
DBG(48588743)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48588745)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48588746)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48588747)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588748)> CPU DETAIL: Result: 0060699906080000 
DBG(48588749)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48588751)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48588752)> CPU DETAIL: M6: 0081 
DBG(48588755)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48588756)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48588757)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48588759)> CPU CMD: Exec 0169: 00 60 0197 0196 0179   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48588760)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48588761)> CPU DETAIL: Transfer to T 
DBG(48588761)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48588763)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48588764)> CPU DETAIL: Read R 1611: 0000000000000071 
DBG(48588765)> CPU DETAIL: Read S 1619: 0000000000000010 
DBG(48588766)> CPU DETAIL: Result: 0000000000000081 
DBG(48588769)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48588770)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48588771)> CPU DETAIL: Result: 0000000000000119 
DBG(48588774)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48588775)> CPU DETAIL: REG1: 0000000000000119
DBG(48588775)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48588777)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48588778)> CPU DETAIL: M4: 0023 
DBG(48588779)> CPU DETAIL: M6: 0081 
DBG(48588780)> CPU DETAIL: Clear M8
DBG(48588780)> CPU DETAIL: M8: 0000 
DBG(48588783)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48588784)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48588785)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48588788)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48588789)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48588790)> CPU DETAIL: Result: 0858000100100191 
DBG(48588791)> CPU DETAIL: Write 0194: 0858000100100191 
DBG(48588793)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48588794)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48588795)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48588796)> CPU DETAIL: Result: 0000000249999990 
DBG(48588799)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48588800)> CPU DETAIL: Read R 1636: 0000000233090000 
DBG(48588801)> CPU DETAIL: Diff: REG1: 9999999983090010
DBG(48588802)> CPU DETAIL: Transfer to T 
DBG(48588804)> CPU CMD: Exec 0191: 00 60 8598 1271 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588805)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48588805)> CPU DETAIL: Read R 0598: 0100000000151113 
DBG(48588806)> CPU DETAIL: Write 1271: 0100000000151113 
DBG(48588808)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588809)> CPU DETAIL: Read R 0191: 0060859812710000 
DBG(48588810)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588811)> CPU DETAIL: Result: 0060859812720000 
DBG(48588812)> CPU DETAIL: Write 0191: 0060859812720000 
DBG(48588814)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588815)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588816)> CPU DETAIL: Read S 1611: 0000000000000071 
DBG(48588817)> CPU DETAIL: Result: 0000000000000072 
DBG(48588818)> CPU DETAIL: Write 1611: 0000000000000072 
DBG(48588820)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588821)> CPU DETAIL: M8: 0001 
DBG(48588822)> CPU DETAIL: Transfer to T 
DBG(48588824)> CPU CMD: Exec 0191: 00 60 8598 1272 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588825)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48588825)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48588826)> CPU DETAIL: Write 1272: 0000000249999990 
DBG(48588828)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588829)> CPU DETAIL: Read R 0191: 0060859812720000 
DBG(48588830)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588831)> CPU DETAIL: Result: 0060859812730000 
DBG(48588832)> CPU DETAIL: Write 0191: 0060859812730000 
DBG(48588834)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588835)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588836)> CPU DETAIL: Read S 1611: 0000000000000072 
DBG(48588837)> CPU DETAIL: Result: 0000000000000073 
DBG(48588838)> CPU DETAIL: Write 1611: 0000000000000073 
DBG(48588840)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588841)> CPU DETAIL: M8: 0002 
DBG(48588842)> CPU DETAIL: Transfer to T 
DBG(48588844)> CPU CMD: Exec 0191: 00 60 8598 1273 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588845)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48588845)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48588846)> CPU DETAIL: Write 1273: 0000000000000000 
DBG(48588848)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588849)> CPU DETAIL: Read R 0191: 0060859812730000 
DBG(48588850)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588851)> CPU DETAIL: Result: 0060859812740000 
DBG(48588852)> CPU DETAIL: Write 0191: 0060859812740000 
DBG(48588854)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588855)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588856)> CPU DETAIL: Read S 1611: 0000000000000073 
DBG(48588857)> CPU DETAIL: Result: 0000000000000074 
DBG(48588858)> CPU DETAIL: Write 1611: 0000000000000074 
DBG(48588860)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588861)> CPU DETAIL: M8: 0003 
DBG(48588862)> CPU DETAIL: Transfer to T 
DBG(48588864)> CPU CMD: Exec 0191: 00 60 8598 1274 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588865)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48588865)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48588866)> CPU DETAIL: Write 1274: 0000000000000000 
DBG(48588868)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588869)> CPU DETAIL: Read R 0191: 0060859812740000 
DBG(48588870)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588871)> CPU DETAIL: Result: 0060859812750000 
DBG(48588872)> CPU DETAIL: Write 0191: 0060859812750000 
DBG(48588874)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588875)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588876)> CPU DETAIL: Read S 1611: 0000000000000074 
DBG(48588877)> CPU DETAIL: Result: 0000000000000075 
DBG(48588878)> CPU DETAIL: Write 1611: 0000000000000075 
DBG(48588880)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588881)> CPU DETAIL: M8: 0004 
DBG(48588882)> CPU DETAIL: Transfer to T 
DBG(48588884)> CPU CMD: Exec 0191: 00 60 8598 1275 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588885)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48588885)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48588886)> CPU DETAIL: Write 1275: 0000000000000000 
DBG(48588888)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588889)> CPU DETAIL: Read R 0191: 0060859812750000 
DBG(48588890)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588891)> CPU DETAIL: Result: 0060859812760000 
DBG(48588892)> CPU DETAIL: Write 0191: 0060859812760000 
DBG(48588894)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588895)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588896)> CPU DETAIL: Read S 1611: 0000000000000075 
DBG(48588897)> CPU DETAIL: Result: 0000000000000076 
DBG(48588898)> CPU DETAIL: Write 1611: 0000000000000076 
DBG(48588900)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588901)> CPU DETAIL: M8: 0005 
DBG(48588902)> CPU DETAIL: Transfer to T 
DBG(48588904)> CPU CMD: Exec 0191: 00 60 8598 1276 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588905)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48588905)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48588906)> CPU DETAIL: Write 1276: 0000000000000000 
DBG(48588908)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588909)> CPU DETAIL: Read R 0191: 0060859812760000 
DBG(48588910)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588911)> CPU DETAIL: Result: 0060859812770000 
DBG(48588912)> CPU DETAIL: Write 0191: 0060859812770000 
DBG(48588914)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588915)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588916)> CPU DETAIL: Read S 1611: 0000000000000076 
DBG(48588917)> CPU DETAIL: Result: 0000000000000077 
DBG(48588918)> CPU DETAIL: Write 1611: 0000000000000077 
DBG(48588920)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588921)> CPU DETAIL: M8: 0006 
DBG(48588922)> CPU DETAIL: Transfer to T 
DBG(48588924)> CPU CMD: Exec 0191: 00 60 8598 1277 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588925)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48588925)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48588926)> CPU DETAIL: Write 1277: 0000000000000100 
DBG(48588928)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588929)> CPU DETAIL: Read R 0191: 0060859812770000 
DBG(48588930)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588931)> CPU DETAIL: Result: 0060859812780000 
DBG(48588932)> CPU DETAIL: Write 0191: 0060859812780000 
DBG(48588934)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588935)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588936)> CPU DETAIL: Read S 1611: 0000000000000077 
DBG(48588937)> CPU DETAIL: Result: 0000000000000078 
DBG(48588938)> CPU DETAIL: Write 1611: 0000000000000078 
DBG(48588940)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588941)> CPU DETAIL: M8: 0007 
DBG(48588942)> CPU DETAIL: Transfer to T 
DBG(48588944)> CPU CMD: Exec 0191: 00 60 8598 1278 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588945)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48588945)> CPU DETAIL: Read R 0605: 0000000242009990 
DBG(48588946)> CPU DETAIL: Write 1278: 0000000242009990 
DBG(48588948)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588949)> CPU DETAIL: Read R 0191: 0060859812780000 
DBG(48588950)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588951)> CPU DETAIL: Result: 0060859812790000 
DBG(48588952)> CPU DETAIL: Write 0191: 0060859812790000 
DBG(48588954)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588955)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588956)> CPU DETAIL: Read S 1611: 0000000000000078 
DBG(48588957)> CPU DETAIL: Result: 0000000000000079 
DBG(48588958)> CPU DETAIL: Write 1611: 0000000000000079 
DBG(48588960)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588961)> CPU DETAIL: M8: 0008 
DBG(48588962)> CPU DETAIL: Transfer to T 
DBG(48588964)> CPU CMD: Exec 0191: 00 60 8598 1279 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588965)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48588965)> CPU DETAIL: Read R 0606: 0000000000033555 
DBG(48588966)> CPU DETAIL: Write 1279: 0000000000033555 
DBG(48588968)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588969)> CPU DETAIL: Read R 0191: 0060859812790000 
DBG(48588970)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588971)> CPU DETAIL: Result: 0060859812800000 
DBG(48588972)> CPU DETAIL: Write 0191: 0060859812800000 
DBG(48588974)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588975)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588976)> CPU DETAIL: Read S 1611: 0000000000000079 
DBG(48588977)> CPU DETAIL: Result: 0000000000000080 
DBG(48588978)> CPU DETAIL: Write 1611: 0000000000000080 
DBG(48588980)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48588981)> CPU DETAIL: M8: 0009 
DBG(48588982)> CPU DETAIL: Transfer to T 
DBG(48588984)> CPU CMD: Exec 0191: 00 60 8598 1280 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48588985)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48588985)> CPU DETAIL: Read R 0607: 0000000000033666 
DBG(48588986)> CPU DETAIL: Write 1280: 0000000000033666 
DBG(48588988)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48588989)> CPU DETAIL: Read R 0191: 0060859812800000 
DBG(48588990)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48588991)> CPU DETAIL: Result: 0060859812810000 
DBG(48588992)> CPU DETAIL: Write 0191: 0060859812810000 
DBG(48588994)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48588995)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48588996)> CPU DETAIL: Read S 1611: 0000000000000080 
DBG(48588997)> CPU DETAIL: Result: 0000000000000081 
DBG(48588998)> CPU DETAIL: Write 1611: 0000000000000081 
DBG(48589000)> CPU CMD: Exec 0194: 08 58 0001 0010 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48589001)> CPU DETAIL: M8: 0010 
DBG(48589004)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48589005)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48589006)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589007)> CPU DETAIL: Result: 0000000249999990 
DBG(48589008)> CPU DETAIL: Write 1636: 0000000249999990 
DBG(48589010)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48589011)> CPU DETAIL: Transfer to T 
DBG(48589013)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48589014)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48589015)> CPU DETAIL: Read S 1615: 0000000000000081 
DBG(48589016)> CPU DETAIL: Result: 0000000000000000 
DBG(48589019)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48589020)> CPU DETAIL: REG1: 0000000000000000
DBG(48589020)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48589022)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48589023)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589024)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48589026)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48589027)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48589028)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48589030)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48589031)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48589032)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48589034)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48589035)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48589036)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48589038)> CPU CMD: Exec 0148: 00 60 0000 0000 0361   goto read event block from input tape 01   
DBG(48589039)> CPU DETAIL: Transfer to T 
DBG(48589041)> CPU CMD: Exec 0361: 00 72 1628 1688 0365   if (1628) <> 060..0 goto 0365   
DBG(48589042)> CPU DETAIL: Read R 1628: 0000000000000000 
DBG(48589043)> CPU DETAIL: Read S 1688: 0600000000000000 
DBG(48589044)> CPU DETAIL: Diff: REG1: 9400000000000000
DBG(48589045)> CPU DETAIL: Transfer to T 
DBG(48589047)> CPU CMD: Exec 0365: 00 60 1706 0345 0338   ???, goto 0338   
DBG(48589048)> CPU DETAIL: Read R 1706: 0060170503450361 
DBG(48589049)> CPU DETAIL: Transfer to T 
DBG(48589049)> CPU DETAIL: Write 0345: 0060170503450361 
DBG(48589051)> CPU CMD: Exec 0338: 05 94 0999 0000 0000   read input tape 5 at addr 0999   
DBG(48589052)> CPU DETAIL: Tape operation on MT5, Addr 0999->0000, Block Number 0000
DBG(48589052)> MT DATA: Tape unit 5: init read
DBG(48589052)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 5
DBG(48589052)> MT DETAIL: Tape record contents: D*0591000000000000CD
DBG(48589052)> MT EXP: End Of File mark sensed: 0591000000000000 
DBG(48589052)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48589055)> CPU CMD: Exec 0339: 08 68 0339 0000 1713   if tape check, call 1713 reread      
DBG(48589056)> CPU DETAIL: Condition not present 
DBG(48589058)> CPU CMD: Exec 0340: 00 67 1688 1628 1760   if end of file, 06 0..0 -> (1628), goto 1760   
DBG(48589059)> CPU DETAIL: Reset condition present 
DBG(48589059)> CPU DETAIL: Read R 1688: 0600000000000000 
DBG(48589060)> CPU DETAIL: Transfer to T 
DBG(48589060)> CPU DETAIL: Write 1628: 0600000000000000 
DBG(48589062)> CPU CMD: Exec 1760: 00 40 1635 1639 1635   incr (1635 of times input tape rewinded when scanning for an event)   
DBG(48589063)> CPU DETAIL: Read R 1635: 0000000000000000 
DBG(48589064)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589065)> CPU DETAIL: Result: 0000000000000001 
DBG(48589066)> CPU DETAIL: Write 1635: 0000000000000001 
DBG(48589068)> CPU CMD: Exec 1761: 00 41 1707 0000 0000   3 - (1635 of times input tape rewinded when scanning for an event) -> REG1   
DBG(48589069)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48589070)> CPU DETAIL: Result: 0000000000000002 
DBG(48589073)> CPU CMD: Exec 1762: 00 63 0343 0343 0386   if >=0 goto 0343, else goto 0386   
DBG(48589074)> CPU DETAIL: REG1: 0000000000000002
DBG(48589074)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48589076)> CPU CMD: Exec 0343: 05 98 0000 0000 0000   rewind current input tape   
DBG(48589077)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48589077)> MT CMD: Tape unit 5: init rewind (current medium used 5.97 inches)
DBG(48589077)> MT CMD: Tape unit 5: rewind time (0 sec)
DBG(48589077)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48589079)> CPU CMD: Exec 0344: 00 60 1685 1634 0000   040..0 -> (1634 eof on this tape number)   
DBG(48589080)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48589081)> CPU DETAIL: Write 1634: 0400000000000000 
DBG(48589083)> CPU CMD: Exec 0345: 00 60 1705 0345 0361   ???   
DBG(48589084)> CPU DETAIL: Read R 1705: 0060169101480144 
DBG(48589085)> CPU DETAIL: Transfer to T 
DBG(48589085)> CPU DETAIL: Write 0345: 0060169101480144 
DBG(48589087)> CPU CMD: Exec 0361: 00 72 1628 1688 0365   if (1628) <> 060..0 goto 0365   
DBG(48589088)> CPU DETAIL: Read R 1628: 0600000000000000 
DBG(48589089)> CPU DETAIL: Read S 1688: 0600000000000000 
DBG(48589090)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48589093)> CPU CMD: Exec 0362: 00 60 1640 1628 0000   clear (1628)   
DBG(48589094)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589095)> CPU DETAIL: Write 1628: 0000000000000000 
DBG(48589097)> CPU CMD: Exec 0363: 00 60 1646 0169 0000   ???   
DBG(48589098)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48589099)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48589101)> CPU CMD: Exec 0364: 00 60 1689 0148 0359   ???, goto 0359   
DBG(48589102)> CPU DETAIL: Read R 1689: 0060000000000338 
DBG(48589103)> CPU DETAIL: Transfer to T 
DBG(48589103)> CPU DETAIL: Write 0148: 0060000000000338 
DBG(48589105)> CPU CMD: Exec 0359: 00 70 1611 1640 0210   if (1611 num of word in output block) = zero goto 0210 switch output tape   
DBG(48589106)> CPU DETAIL: Read R 1611: 0000000000000081 
DBG(48589107)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48589108)> CPU DETAIL: Diff: REG1: 0000000000000081
DBG(48589111)> CPU CMD: Exec 0360: 00 60 1712 0206 0198   set exit for 0198 routine to 0210, goto 0198 write output buf to tape    
DBG(48589112)> CPU DETAIL: Read R 1712: 0060000000000210 
DBG(48589113)> CPU DETAIL: Transfer to T 
DBG(48589113)> CPU DETAIL: Write 0206: 0060000000000210 
DBG(48589115)> CPU CMD: Exec 0198: 96 60 1611 0000 0000   set instr ...   
DBG(48589116)> CPU DETAIL: Read R 1611: 0000000000000081 
DBG(48589117)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000810000 
DBG(48589120)> CPU CMD: Exec 0199: 00 41 0000 1648 0000   ... to write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48589121)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589122)> CPU DETAIL: Result: 0000000000800000 
DBG(48589125)> CPU CMD: Exec 0200: 00 40 1664 0000 0201   ... and block 0500 using 1664   
DBG(48589126)> CPU DETAIL: Read R 1664: 0691120012000501 
DBG(48589127)> CPU DETAIL: Result: 0691120012800501 
DBG(48589128)> CPU DETAIL: Write 0201: 0691120012800501 
DBG(48589130)> CPU CMD: Exec 0201: 06 91 1200 1280 0501   write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48589131)> CPU DETAIL: Tape operation on MT6, Addr 1200->1280, Block Number 0501
DBG(48589131)> MT CMD: Tape unit 6: init write
DBG(48589131)> MT EXP: Write from 1200 to 1280 as Block number 0501
DBG(48589131)> MT EXP: Start Of Block: 06 91 1200 1280 0501
DBG(48589131)> MT EXP: CRT 1200 to Tape: 0130000000121114 
DBG(48589131)> MT EXP: CRT 1201 to Tape: 0100000231030000 
DBG(48589131)> MT EXP: CRT 1202 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1203 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1204 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1205 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1206 to Tape: 3336000000000200 
DBG(48589131)> MT EXP: CRT 1207 to Tape: 0000000231010000 
DBG(48589131)> MT EXP: CRT 1208 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1209 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1210 to Tape: 0000000231020000 
DBG(48589131)> MT EXP: CRT 1211 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1212 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1213 to Tape: 0130000000131113 
DBG(48589131)> MT EXP: CRT 1214 to Tape: 0100000232090000 
DBG(48589131)> MT EXP: CRT 1215 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1216 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1217 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1218 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1219 to Tape: 3336000000000200 
DBG(48589131)> MT EXP: CRT 1220 to Tape: 0000000232000000 
DBG(48589131)> MT EXP: CRT 1221 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1222 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1223 to Tape: 0000000232010000 
DBG(48589131)> MT EXP: CRT 1224 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1225 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1226 to Tape: 0160000000141013 
DBG(48589131)> MT EXP: CRT 1227 to Tape: 0100000233020003 
DBG(48589131)> MT EXP: CRT 1228 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1229 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1230 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1231 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1232 to Tape: 3335444455660201 
DBG(48589131)> MT EXP: CRT 1233 to Tape: 0000000233000000 
DBG(48589131)> MT EXP: CRT 1234 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1235 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1236 to Tape: 0000000233010000 
DBG(48589131)> MT EXP: CRT 1237 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1238 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1239 to Tape: 0000000233030000 
DBG(48589131)> MT EXP: CRT 1240 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1241 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1242 to Tape: 0160000000141014 
DBG(48589131)> MT EXP: CRT 1243 to Tape: 0000000233030000 
DBG(48589131)> MT EXP: CRT 1244 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1245 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1246 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1247 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1248 to Tape: 3336000000000201 
DBG(48589131)> MT EXP: CRT 1249 to Tape: 0000000233010000 
DBG(48589131)> MT EXP: CRT 1250 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1251 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1252 to Tape: 0000000233020000 
DBG(48589131)> MT EXP: CRT 1253 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1254 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1255 to Tape: 0000000233090000 
DBG(48589131)> MT EXP: CRT 1256 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1257 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1258 to Tape: 0130000000141015 
DBG(48589131)> MT EXP: CRT 1259 to Tape: 0000000233090000 
DBG(48589131)> MT EXP: CRT 1260 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1261 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1262 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1263 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1264 to Tape: 3336000000000200 
DBG(48589131)> MT EXP: CRT 1265 to Tape: 0000000233010000 
DBG(48589131)> MT EXP: CRT 1266 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1267 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1268 to Tape: 0000000233030000 
DBG(48589131)> MT EXP: CRT 1269 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1270 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1271 to Tape: 0100000000151113 
DBG(48589131)> MT EXP: CRT 1272 to Tape: 0000000249999990 
DBG(48589131)> MT EXP: CRT 1273 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1274 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1275 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1276 to Tape: 0000000000000000 
DBG(48589131)> MT EXP: CRT 1277 to Tape: 0000000000000100 
DBG(48589131)> MT EXP: CRT 1278 to Tape: 0000000242009990 
DBG(48589131)> MT EXP: CRT 1279 to Tape: 0000000000033555 
DBG(48589131)> MT EXP: CRT 1280 to Tape: 0000000000033666 
DBG(48589131)> MT EXP: End Of Block: 06 91 1200 1280 0501 (81 words)
DBG(48589131)> MT DETAIL: Write block (1496 chars, used 4.43 inches, needs 28 msec) to tape 6
DBG(48589131)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48589134)> CPU CMD: Exec 0202: 08 60 0202 0000 1730   call 1730 check write   
DBG(48589135)> CPU DETAIL: Read R 0202: 0860020200001730 
DBG(48589136)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600202 
DBG(48589137)> CPU DETAIL: Transfer to T 
DBG(48589139)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48589140)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48589141)> CPU DETAIL: Result: 0060000000000203 
DBG(48589142)> CPU DETAIL: Write 1742: 0060000000000203 
DBG(48589144)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48589145)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000203000000000 
DBG(48589148)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48589149)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48589150)> CPU DETAIL: Result: 0600201174700000 
DBG(48589151)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060020117470000 
DBG(48589152)> CPU DETAIL: Write 1734: 0060020117470000 
DBG(48589154)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48589155)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48589156)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48589158)> CPU CMD: Exec 1734: 00 60 0201 1747 0000      
DBG(48589159)> CPU DETAIL: Read R 0201: 0691120012800501 
DBG(48589160)> CPU DETAIL: Write 1747: 0691120012800501 
DBG(48589162)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48589163)> CPU DETAIL: Condition not present 
DBG(48589165)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48589166)> CPU DETAIL: Transfer to T 
DBG(48589168)> CPU CMD: Exec 1742: 00 60 0000 0000 0203   EXIT_CheckWrite   
DBG(48589169)> CPU DETAIL: Transfer to T 
DBG(48589171)> CPU CMD: Exec 0203: 00 40 1664 1639 1664   incr block number on write tape instr   
DBG(48589172)> CPU DETAIL: Read R 1664: 0691120012000501 
DBG(48589173)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589174)> CPU DETAIL: Result: 0691120012000502 
DBG(48589175)> CPU DETAIL: Write 1664: 0691120012000502 
DBG(48589177)> CPU CMD: Exec 0204: 00 60 1640 1611 0000   clear (1611 num of words in event output block)   
DBG(48589178)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589179)> CPU DETAIL: Write 1611: 0000000000000000 
DBG(48589181)> CPU CMD: Exec 0205: 00 60 1663 0191 0000   restore instr 0191   
DBG(48589182)> CPU DETAIL: Read R 1663: 0060859812000000 
DBG(48589183)> CPU DETAIL: Write 0191: 0060859812000000 
DBG(48589185)> CPU CMD: Exec 0206: 00 60 0000 0000 0210   goto 0210 switch output tape   
DBG(48589186)> CPU DETAIL: Transfer to T 
DBG(48589188)> CPU CMD: Exec 0210: 00 42 0201 1653 0000   get tape number 0N 0..0 from 0201 tape write instr   
DBG(48589189)> CPU DETAIL: Read R 0201: 0691120012800501 
DBG(48589190)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48589191)> CPU DETAIL: Result: 0600000000000000 
DBG(48589194)> CPU CMD: Exec 0211: 00 72 1666 0000 0218   if tape number <> 05 0..0 goto 0218   
DBG(48589195)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48589196)> CPU DETAIL: Diff: REG1: 9900000000000000
DBG(48589197)> CPU DETAIL: Transfer to T 
DBG(48589199)> CPU CMD: Exec 0218: 00 41 1664 1653 1664   set tape write instr to tape 05    
DBG(48589200)> CPU DETAIL: Read R 1664: 0691120012000502 
DBG(48589201)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48589202)> CPU DETAIL: Result: 0591120012000502 
DBG(48589203)> CPU DETAIL: Write 1664: 0591120012000502 
DBG(48589205)> CPU CMD: Exec 0219: 00 40 1653 1701 0338   set tape read instr to tape 06   
DBG(48589206)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48589207)> CPU DETAIL: Read S 1701: 0594099900000000 
DBG(48589208)> CPU DETAIL: Result: 0694099900000000 
DBG(48589209)> CPU DETAIL: Write 0338: 0694099900000000 
DBG(48589211)> CPU CMD: Exec 0220: 00 40 1683 1688 0223   set instr 0223 to write end of file to tape 06   
DBG(48589212)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48589213)> CPU DETAIL: Read S 1688: 0600000000000000 
DBG(48589214)> CPU DETAIL: Result: 0691000000000000 
DBG(48589215)> CPU DETAIL: Write 0223: 0691000000000000 
DBG(48589217)> CPU CMD: Exec 0221: 00 40 1684 1688 0224   set instr 0224 to rewind tape 06   
DBG(48589218)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48589219)> CPU DETAIL: Read S 1688: 0600000000000000 
DBG(48589220)> CPU DETAIL: Result: 0698000000000000 
DBG(48589221)> CPU DETAIL: Write 0224: 0698000000000000 
DBG(48589223)> CPU CMD: Exec 0222: 00 40 1684 1688 0343   set instr 0343 to rewind tape 06   
DBG(48589224)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48589225)> CPU DETAIL: Read S 1688: 0600000000000000 
DBG(48589226)> CPU DETAIL: Result: 0698000000000000 
DBG(48589227)> CPU DETAIL: Write 0343: 0698000000000000 
DBG(48589229)> CPU CMD: Exec 0223: 06 91 0000 0000 0000   write end of file to tape      
DBG(48589230)> CPU DETAIL: Tape operation on MT6, Addr 0000->0000, Block Number 0000
DBG(48589230)> MT CMD: Tape unit 6: init write
DBG(48589230)> MT EXP: End Of File mark: 02d 06 0091 0000 0000
DBG(48589230)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 6
DBG(48589230)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48589233)> CPU CMD: Exec 0224: 06 98 0000 0000 0000   rewind tape   
DBG(48589234)> CPU DETAIL: Tape operation on MT6, Addr 0000->0000, Block Number 0000
DBG(48589234)> MT CMD: Tape unit 6: init rewind (current medium used 5.97 inches)
DBG(48589234)> MT CMD: Tape unit 6: rewind time (0 sec)
DBG(48589234)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48589236)> CPU CMD: Exec 0225: 00 60 1689 0148 0000   set read from tape 2/4 instead of tape 1   
DBG(48589237)> CPU DETAIL: Read R 1689: 0060000000000338 
DBG(48589238)> CPU DETAIL: Write 0148: 0060000000000338 
DBG(48589240)> CPU CMD: Exec 0226: 00 60 1640 1636 0144   clear (1636 last event saved in tape 5), goto 0144 tape 1 input event block  
DBG(48589241)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589242)> CPU DETAIL: Transfer to T 
DBG(48589242)> CPU DETAIL: Write 1636: 0000000000000000 
DBG(48589244)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48589245)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589246)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48589248)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48589249)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48589250)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48589252)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48589253)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48589254)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48589256)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48589257)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48589258)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48589260)> CPU CMD: Exec 0148: 00 60 0000 0000 0338   goto read event block from input tape 01   
DBG(48589261)> CPU DETAIL: Transfer to T 
DBG(48589263)> CPU CMD: Exec 0338: 06 94 0999 0000 0000   read input tape 5 at addr 0999   
DBG(48589264)> CPU DETAIL: Tape operation on MT6, Addr 0999->0000, Block Number 0000
DBG(48589264)> MT DATA: Tape unit 6: init read
DBG(48589264)> MT DETAIL: Read tape record (1496 chars, used 4.43 inches, needs 28 msec) from tape 6
DBG(48589264)> MT DETAIL: Tape record contents: D*0691120012800501C*0130000000121114C*0100000231030000C*00000000000000...
DBG(48589264)> MT EXP: Start Of Block Word: 0691120012800501
DBG(48589264)> MT EXP: Read Tape Block number 0501
DBG(48589264)> MT EXP: Read forward addr 0999 to 0000
DBG(48589264)> MT EXP: Tape to CRT 0999: 0130000000121114 
DBG(48589264)> MT EXP: Tape to CRT 1000: 0100000231030000 
DBG(48589264)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1005: 3336000000000200 
DBG(48589264)> MT EXP: Tape to CRT 1006: 0000000231010000 
DBG(48589264)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1009: 0000000231020000 
DBG(48589264)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1012: 0130000000131113 
DBG(48589264)> MT EXP: Tape to CRT 1013: 0100000232090000 
DBG(48589264)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1018: 3336000000000200 
DBG(48589264)> MT EXP: Tape to CRT 1019: 0000000232000000 
DBG(48589264)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1022: 0000000232010000 
DBG(48589264)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1025: 0160000000141013 
DBG(48589264)> MT EXP: Tape to CRT 1026: 0100000233020003 
DBG(48589264)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1030: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1031: 3335444455660201 
DBG(48589264)> MT EXP: Tape to CRT 1032: 0000000233000000 
DBG(48589264)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1034: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1035: 0000000233010000 
DBG(48589264)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1037: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1038: 0000000233030000 
DBG(48589264)> MT EXP: Tape to CRT 1039: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1040: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1041: 0160000000141014 
DBG(48589264)> MT EXP: Tape to CRT 1042: 0000000233030000 
DBG(48589264)> MT EXP: Tape to CRT 1043: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1044: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1045: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1047: 3336000000000201 
DBG(48589264)> MT EXP: Tape to CRT 1048: 0000000233010000 
DBG(48589264)> MT EXP: Tape to CRT 1049: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1050: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1051: 0000000233020000 
DBG(48589264)> MT EXP: Tape to CRT 1052: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1053: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1054: 0000000233090000 
DBG(48589264)> MT EXP: Tape to CRT 1055: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1056: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1057: 0130000000141015 
DBG(48589264)> MT EXP: Tape to CRT 1058: 0000000233090000 
DBG(48589264)> MT EXP: Tape to CRT 1059: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1060: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1061: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1062: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1063: 3336000000000200 
DBG(48589264)> MT EXP: Tape to CRT 1064: 0000000233010000 
DBG(48589264)> MT EXP: Tape to CRT 1065: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1066: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1067: 0000000233030000 
DBG(48589264)> MT EXP: Tape to CRT 1068: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1069: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1070: 0100000000151113 
DBG(48589264)> MT EXP: Tape to CRT 1071: 0000000249999990 
DBG(48589264)> MT EXP: Tape to CRT 1072: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1073: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1074: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1075: 0000000000000000 
DBG(48589264)> MT EXP: Tape to CRT 1076: 0000000000000100 
DBG(48589264)> MT EXP: Tape to CRT 1077: 0000000242009990 
DBG(48589264)> MT EXP: Tape to CRT 1078: 0000000000033555 
DBG(48589264)> MT EXP: Tape to CRT 1079: 0000000000033666 
DBG(48589264)> MT EXP: End Of Block Word: 0691120012800501, data words in block: 81
DBG(48589264)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.03% of medium (4.43 inches)
DBG(48589267)> CPU CMD: Exec 0339: 08 68 0339 0000 1713   if tape check, call 1713 reread      
DBG(48589268)> CPU DETAIL: Condition not present 
DBG(48589270)> CPU CMD: Exec 0340: 00 67 1688 1628 1760   if end of file, 06 0..0 -> (1628), goto 1760   
DBG(48589271)> CPU DETAIL: Condition not present 
DBG(48589273)> CPU CMD: Exec 0341: 00 60 0000 1613 0000   REG1 -> (1613 Saved start of block just read from tape 01/05)   
DBG(48589274)> CPU DETAIL: Write 1613: 0691120012800501 
DBG(48589276)> CPU CMD: Exec 0342: 00 60 1666 1621 0111   05 0..0 -> (1621 current input tape), goto 0111 read event from input tape   
DBG(48589277)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48589278)> CPU DETAIL: Transfer to T 
DBG(48589278)> CPU DETAIL: Write 1621: 0500000000000000 
DBG(48589280)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48589281)> CPU DETAIL: Read R 1613: 0691120012800501 
DBG(48589282)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48589283)> CPU DETAIL: Result: 0000000012800000 
DBG(48589284)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001280 
DBG(48589285)> CPU DETAIL: Write 1604: 0000000000001280 
DBG(48589287)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48589288)> CPU DETAIL: Read R 1613: 0691120012800501 
DBG(48589289)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48589290)> CPU DETAIL: Result: 0000120000000000 
DBG(48589291)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001200 
DBG(48589294)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48589295)> CPU DETAIL: Read R 1604: 0000000000001280 
DBG(48589296)> CPU DETAIL: Result: 0000000000000080 
DBG(48589297)> CPU DETAIL: Write 1614: 0000000000000080 
DBG(48589299)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48589300)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48589301)> CPU DETAIL: Result: 0000000000000081 
DBG(48589302)> CPU DETAIL: Write 1614: 0000000000000081 
DBG(48589304)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48589305)> CPU DETAIL: M4: 0023 
DBG(48589306)> CPU DETAIL: Clear M6
DBG(48589306)> CPU DETAIL: M6: 0000 
DBG(48589307)> CPU DETAIL: M8: 0010 
DBG(48589310)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48589311)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48589312)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48589314)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48589315)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48589316)> CPU DETAIL: Transfer to T 
DBG(48589316)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48589318)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48589319)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48589320)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48589321)> CPU DETAIL: Result: 0000000000000081 
DBG(48589324)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48589325)> CPU DETAIL: REG1: 0000000000000081
DBG(48589325)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48589327)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48589328)> CPU DETAIL: Read R 1005: 3336000000000200 
DBG(48589329)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48589331)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48589332)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48589332)> CPU DETAIL: Read R 0999: 0130000000121114 
DBG(48589333)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48589334)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48589336)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48589337)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48589338)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48589339)> CPU DETAIL: Result: 0000000000000200 
DBG(48589340)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48589341)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48589343)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48589344)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48589345)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48589346)> CPU DETAIL: Result: 0000000000000000 
DBG(48589347)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48589349)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48589350)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48589351)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48589352)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48589353)> CPU DETAIL: Transfer to T 
DBG(48589355)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48589356)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48589357)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48589358)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48589358)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48589359)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48589360)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48589361)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48589363)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48589364)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48589365)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48589366)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48589366)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48589367)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48589368)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48589369)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48589371)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48589372)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48589373)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48589376)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48589377)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48589378)> CPU DETAIL: Result: 0060101816160000 
DBG(48589379)> CPU DETAIL: Write 0149: 0060101816160000 
DBG(48589381)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48589382)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48589383)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48589384)> CPU DETAIL: Result: 0000000000000006 
DBG(48589385)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48589387)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48589388)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48589389)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48589390)> CPU DETAIL: Result: 0000000000000000 
DBG(48589391)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48589393)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48589394)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48589395)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48589396)> CPU DETAIL: Result: 0000000000000013 
DBG(48589397)> CPU DETAIL: Write 1615: 0000000000000013 
DBG(48589399)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48589400)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48589401)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48589404)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48589405)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48589406)> CPU DETAIL: Result: 0658000100130165 
DBG(48589407)> CPU DETAIL: Write 0167: 0658000100130165 
DBG(48589409)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589410)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48589410)> CPU DETAIL: Read R 0999: 0130000000121114 
DBG(48589411)> CPU DETAIL: Write 0598: 0130000000121114 
DBG(48589413)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589414)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48589415)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589416)> CPU DETAIL: Result: 0060699905990000 
DBG(48589417)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48589419)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589420)> CPU DETAIL: M6: 0001 
DBG(48589421)> CPU DETAIL: Transfer to T 
DBG(48589423)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589424)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48589424)> CPU DETAIL: Read R 1000: 0100000231030000 
DBG(48589425)> CPU DETAIL: Write 0599: 0100000231030000 
DBG(48589427)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589428)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48589429)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589430)> CPU DETAIL: Result: 0060699906000000 
DBG(48589431)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48589433)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589434)> CPU DETAIL: M6: 0002 
DBG(48589435)> CPU DETAIL: Transfer to T 
DBG(48589437)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589438)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48589438)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48589439)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48589441)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589442)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48589443)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589444)> CPU DETAIL: Result: 0060699906010000 
DBG(48589445)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48589447)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589448)> CPU DETAIL: M6: 0003 
DBG(48589449)> CPU DETAIL: Transfer to T 
DBG(48589451)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589452)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48589452)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48589453)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48589455)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589456)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48589457)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589458)> CPU DETAIL: Result: 0060699906020000 
DBG(48589459)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48589461)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589462)> CPU DETAIL: M6: 0004 
DBG(48589463)> CPU DETAIL: Transfer to T 
DBG(48589465)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589466)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48589466)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48589467)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48589469)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589470)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48589471)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589472)> CPU DETAIL: Result: 0060699906030000 
DBG(48589473)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48589475)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589476)> CPU DETAIL: M6: 0005 
DBG(48589477)> CPU DETAIL: Transfer to T 
DBG(48589479)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589480)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48589480)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48589481)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48589483)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589484)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48589485)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589486)> CPU DETAIL: Result: 0060699906040000 
DBG(48589487)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48589489)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589490)> CPU DETAIL: M6: 0006 
DBG(48589491)> CPU DETAIL: Transfer to T 
DBG(48589493)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589494)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48589494)> CPU DETAIL: Read R 1005: 3336000000000200 
DBG(48589495)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48589497)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589498)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48589499)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589500)> CPU DETAIL: Result: 0060699906050000 
DBG(48589501)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48589503)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589504)> CPU DETAIL: M6: 0007 
DBG(48589505)> CPU DETAIL: Transfer to T 
DBG(48589507)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589508)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48589508)> CPU DETAIL: Read R 1006: 0000000231010000 
DBG(48589509)> CPU DETAIL: Write 0605: 0000000231010000 
DBG(48589511)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589512)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48589513)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589514)> CPU DETAIL: Result: 0060699906060000 
DBG(48589515)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48589517)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589518)> CPU DETAIL: M6: 0008 
DBG(48589519)> CPU DETAIL: Transfer to T 
DBG(48589521)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589522)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48589522)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48589523)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48589525)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589526)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48589527)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589528)> CPU DETAIL: Result: 0060699906070000 
DBG(48589529)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48589531)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589532)> CPU DETAIL: M6: 0009 
DBG(48589533)> CPU DETAIL: Transfer to T 
DBG(48589535)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589536)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48589536)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48589537)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48589539)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589540)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48589541)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589542)> CPU DETAIL: Result: 0060699906080000 
DBG(48589543)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48589545)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589546)> CPU DETAIL: M6: 0010 
DBG(48589547)> CPU DETAIL: Transfer to T 
DBG(48589549)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589550)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48589550)> CPU DETAIL: Read R 1009: 0000000231020000 
DBG(48589551)> CPU DETAIL: Write 0608: 0000000231020000 
DBG(48589553)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589554)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48589555)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589556)> CPU DETAIL: Result: 0060699906090000 
DBG(48589557)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48589559)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589560)> CPU DETAIL: M6: 0011 
DBG(48589561)> CPU DETAIL: Transfer to T 
DBG(48589563)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589564)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48589564)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48589565)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48589567)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589568)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48589569)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589570)> CPU DETAIL: Result: 0060699906100000 
DBG(48589571)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48589573)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589574)> CPU DETAIL: M6: 0012 
DBG(48589575)> CPU DETAIL: Transfer to T 
DBG(48589577)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48589578)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48589578)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48589579)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48589581)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48589582)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48589583)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589584)> CPU DETAIL: Result: 0060699906110000 
DBG(48589585)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48589587)> CPU CMD: Exec 0167: 06 58 0001 0013 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48589588)> CPU DETAIL: M6: 0013 
DBG(48589591)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48589592)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48589593)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48589595)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48589598)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48589599)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48589600)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48589603)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48589604)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48589605)> CPU DETAIL: Result: 0000001000000000 
DBG(48589608)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48589609)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48589610)> CPU DETAIL: Result: 0042440716550000 
DBG(48589611)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48589613)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48589614)> CPU DETAIL: Read R 0599: 0100000231030000 
DBG(48589615)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589616)> CPU DETAIL: Result: 0000000231030000 
DBG(48589617)> CPU DETAIL: Write 1620: 0000000231030000 
DBG(48589619)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48589620)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48589620)> CPU DETAIL: Read R 0430: 0000000231030000 
DBG(48589621)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589622)> CPU DETAIL: Result: 0000000231030000 
DBG(48589625)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48589626)> CPU DETAIL: Read S 1620: 0000000231030000 
DBG(48589627)> CPU DETAIL: Result: 0000000000000000 
DBG(48589630)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48589631)> CPU DETAIL: REG1: 0000000000000000
DBG(48589631)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48589633)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48589634)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589635)> CPU DETAIL: Transfer to T 
DBG(48589635)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48589637)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48589638)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48589639)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589640)> CPU DETAIL: Result: 0000000231010000 
DBG(48589641)> CPU DETAIL: Write 1620: 0000000231010000 
DBG(48589643)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48589644)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48589644)> CPU DETAIL: Read R 0421: 0000000231020003 
DBG(48589645)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589646)> CPU DETAIL: Result: 0000000231020000 
DBG(48589649)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48589650)> CPU DETAIL: Read R 1620: 0000000231010000 
DBG(48589651)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48589654)> CPU CMD: Exec 0230: 00 40 1644 0227 0227   incr field_R on instr 0227 to read next predecessor on list   
DBG(48589655)> CPU DETAIL: Read R 1644: 0000000300000000 
DBG(48589656)> CPU DETAIL: Read S 0227: 0042060516551620 
DBG(48589657)> CPU DETAIL: Result: 0042060816551620 
DBG(48589658)> CPU DETAIL: Write 0227: 0042060816551620 
DBG(48589660)> CPU CMD: Exec 0231: 00 40 1707 1624 1624   incr (1624 number of words scanned on predecessor list)   
DBG(48589661)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48589662)> CPU DETAIL: Read S 1624: 0000000000000000 
DBG(48589663)> CPU DETAIL: Result: 0000000000000003 
DBG(48589664)> CPU DETAIL: Write 1624: 0000000000000003 
DBG(48589666)> CPU CMD: Exec 0232: 00 72 0000 1617 0227   if <> (1617 num of words used by predecessor list) goto 0227: loop because p 
DBG(48589667)> CPU DETAIL: Read S 1617: 0000000000000006 
DBG(48589668)> CPU DETAIL: Diff: REG1: 9999999999999997
DBG(48589669)> CPU DETAIL: Transfer to T 
DBG(48589671)> CPU CMD: Exec 0227: 00 42 0608 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48589672)> CPU DETAIL: Read R 0608: 0000000231020000 
DBG(48589673)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589674)> CPU DETAIL: Result: 0000000231020000 
DBG(48589675)> CPU DETAIL: Write 1620: 0000000231020000 
DBG(48589677)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48589678)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48589678)> CPU DETAIL: Read R 0421: 0000000231020003 
DBG(48589679)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48589680)> CPU DETAIL: Result: 0000000231020000 
DBG(48589683)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48589684)> CPU DETAIL: Read R 1620: 0000000231020000 
DBG(48589685)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48589686)> CPU DETAIL: Transfer to T 
DBG(48589688)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48589689)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48589690)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48589692)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48589693)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48589694)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48589696)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48589697)> CPU DETAIL: Read R 0599: 0100000231030000 
DBG(48589698)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48589699)> CPU DETAIL: Result: 0200000231030000 
DBG(48589700)> CPU DETAIL: Write 0599: 0200000231030000 
DBG(48589702)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48589703)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000002 
DBG(48589704)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48589706)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48589707)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48589708)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48589709)> CPU DETAIL: Result: 0000000000000200 
DBG(48589710)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48589713)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48589714)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48589715)> CPU DETAIL: Result: 0000000000000000 
DBG(48589718)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48589719)> CPU DETAIL: REG1: 0000000000000000
DBG(48589719)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48589721)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48589722)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48589723)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48589725)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48589726)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48589727)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48589729)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48589730)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48589731)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48589732)> CPU DETAIL: Result: 0000000000000200 
DBG(48589733)> CPU DETAIL: Word Shift 12 digits left: REG1: 0200000000000000 
DBG(48589736)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48589737)> CPU DETAIL: Read R 0599: 0200000231030000 
DBG(48589738)> CPU DETAIL: Result: 0000000231030000 
DBG(48589739)> CPU DETAIL: Write 0599: 0000000231030000 
DBG(48589741)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48589742)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48589743)> CPU DETAIL: Read S 1626: 0000000000000000 
DBG(48589744)> CPU DETAIL: Result: 0000000000000013 
DBG(48589747)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48589748)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48589749)> CPU DETAIL: Result: 0000000000000187 
DBG(48589752)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48589753)> CPU DETAIL: REG1: 0000000000000187
DBG(48589753)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48589755)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48589756)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48589757)> CPU DETAIL: Transfer to T 
DBG(48589757)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48589759)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48589760)> CPU DETAIL: M4: 0023 
DBG(48589761)> CPU DETAIL: M6: 0013 
DBG(48589762)> CPU DETAIL: Clear M8
DBG(48589762)> CPU DETAIL: M8: 0000 
DBG(48589765)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48589766)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48589767)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48589770)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48589771)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48589772)> CPU DETAIL: Result: 0858000100130296 
DBG(48589773)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48589775)> CPU CMD: Exec 0296: 00 60 8598 0798 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589776)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48589776)> CPU DETAIL: Read R 0598: 0130000000121114 
DBG(48589777)> CPU DETAIL: Write 0798: 0130000000121114 
DBG(48589779)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589780)> CPU DETAIL: Read R 0296: 0060859807980000 
DBG(48589781)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589782)> CPU DETAIL: Result: 0060859807990000 
DBG(48589783)> CPU DETAIL: Write 0296: 0060859807990000 
DBG(48589785)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589786)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48589787)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589788)> CPU DETAIL: Result: 0000000000000001 
DBG(48589789)> CPU DETAIL: Write 1626: 0000000000000001 
DBG(48589791)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589792)> CPU DETAIL: M8: 0001 
DBG(48589793)> CPU DETAIL: Transfer to T 
DBG(48589795)> CPU CMD: Exec 0296: 00 60 8598 0799 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589796)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48589796)> CPU DETAIL: Read R 0599: 0000000231030000 
DBG(48589797)> CPU DETAIL: Write 0799: 0000000231030000 
DBG(48589799)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589800)> CPU DETAIL: Read R 0296: 0060859807990000 
DBG(48589801)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589802)> CPU DETAIL: Result: 0060859808000000 
DBG(48589803)> CPU DETAIL: Write 0296: 0060859808000000 
DBG(48589805)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589806)> CPU DETAIL: Read R 1626: 0000000000000001 
DBG(48589807)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589808)> CPU DETAIL: Result: 0000000000000002 
DBG(48589809)> CPU DETAIL: Write 1626: 0000000000000002 
DBG(48589811)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589812)> CPU DETAIL: M8: 0002 
DBG(48589813)> CPU DETAIL: Transfer to T 
DBG(48589815)> CPU CMD: Exec 0296: 00 60 8598 0800 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589816)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48589816)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48589817)> CPU DETAIL: Write 0800: 0000000000000000 
DBG(48589819)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589820)> CPU DETAIL: Read R 0296: 0060859808000000 
DBG(48589821)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589822)> CPU DETAIL: Result: 0060859808010000 
DBG(48589823)> CPU DETAIL: Write 0296: 0060859808010000 
DBG(48589825)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589826)> CPU DETAIL: Read R 1626: 0000000000000002 
DBG(48589827)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589828)> CPU DETAIL: Result: 0000000000000003 
DBG(48589829)> CPU DETAIL: Write 1626: 0000000000000003 
DBG(48589831)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589832)> CPU DETAIL: M8: 0003 
DBG(48589833)> CPU DETAIL: Transfer to T 
DBG(48589835)> CPU CMD: Exec 0296: 00 60 8598 0801 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589836)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48589836)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48589837)> CPU DETAIL: Write 0801: 0000000000000000 
DBG(48589839)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589840)> CPU DETAIL: Read R 0296: 0060859808010000 
DBG(48589841)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589842)> CPU DETAIL: Result: 0060859808020000 
DBG(48589843)> CPU DETAIL: Write 0296: 0060859808020000 
DBG(48589845)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589846)> CPU DETAIL: Read R 1626: 0000000000000003 
DBG(48589847)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589848)> CPU DETAIL: Result: 0000000000000004 
DBG(48589849)> CPU DETAIL: Write 1626: 0000000000000004 
DBG(48589851)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589852)> CPU DETAIL: M8: 0004 
DBG(48589853)> CPU DETAIL: Transfer to T 
DBG(48589855)> CPU CMD: Exec 0296: 00 60 8598 0802 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589856)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48589856)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48589857)> CPU DETAIL: Write 0802: 0000000000000000 
DBG(48589859)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589860)> CPU DETAIL: Read R 0296: 0060859808020000 
DBG(48589861)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589862)> CPU DETAIL: Result: 0060859808030000 
DBG(48589863)> CPU DETAIL: Write 0296: 0060859808030000 
DBG(48589865)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589866)> CPU DETAIL: Read R 1626: 0000000000000004 
DBG(48589867)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589868)> CPU DETAIL: Result: 0000000000000005 
DBG(48589869)> CPU DETAIL: Write 1626: 0000000000000005 
DBG(48589871)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589872)> CPU DETAIL: M8: 0005 
DBG(48589873)> CPU DETAIL: Transfer to T 
DBG(48589875)> CPU CMD: Exec 0296: 00 60 8598 0803 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589876)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48589876)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48589877)> CPU DETAIL: Write 0803: 0000000000000000 
DBG(48589879)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589880)> CPU DETAIL: Read R 0296: 0060859808030000 
DBG(48589881)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589882)> CPU DETAIL: Result: 0060859808040000 
DBG(48589883)> CPU DETAIL: Write 0296: 0060859808040000 
DBG(48589885)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589886)> CPU DETAIL: Read R 1626: 0000000000000005 
DBG(48589887)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589888)> CPU DETAIL: Result: 0000000000000006 
DBG(48589889)> CPU DETAIL: Write 1626: 0000000000000006 
DBG(48589891)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589892)> CPU DETAIL: M8: 0006 
DBG(48589893)> CPU DETAIL: Transfer to T 
DBG(48589895)> CPU CMD: Exec 0296: 00 60 8598 0804 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589896)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48589896)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48589897)> CPU DETAIL: Write 0804: 3336000000000200 
DBG(48589899)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589900)> CPU DETAIL: Read R 0296: 0060859808040000 
DBG(48589901)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589902)> CPU DETAIL: Result: 0060859808050000 
DBG(48589903)> CPU DETAIL: Write 0296: 0060859808050000 
DBG(48589905)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589906)> CPU DETAIL: Read R 1626: 0000000000000006 
DBG(48589907)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589908)> CPU DETAIL: Result: 0000000000000007 
DBG(48589909)> CPU DETAIL: Write 1626: 0000000000000007 
DBG(48589911)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589912)> CPU DETAIL: M8: 0007 
DBG(48589913)> CPU DETAIL: Transfer to T 
DBG(48589915)> CPU CMD: Exec 0296: 00 60 8598 0805 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589916)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48589916)> CPU DETAIL: Read R 0605: 0000000231010000 
DBG(48589917)> CPU DETAIL: Write 0805: 0000000231010000 
DBG(48589919)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589920)> CPU DETAIL: Read R 0296: 0060859808050000 
DBG(48589921)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589922)> CPU DETAIL: Result: 0060859808060000 
DBG(48589923)> CPU DETAIL: Write 0296: 0060859808060000 
DBG(48589925)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589926)> CPU DETAIL: Read R 1626: 0000000000000007 
DBG(48589927)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589928)> CPU DETAIL: Result: 0000000000000008 
DBG(48589929)> CPU DETAIL: Write 1626: 0000000000000008 
DBG(48589931)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589932)> CPU DETAIL: M8: 0008 
DBG(48589933)> CPU DETAIL: Transfer to T 
DBG(48589935)> CPU CMD: Exec 0296: 00 60 8598 0806 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589936)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48589936)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48589937)> CPU DETAIL: Write 0806: 0000000000000000 
DBG(48589939)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589940)> CPU DETAIL: Read R 0296: 0060859808060000 
DBG(48589941)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589942)> CPU DETAIL: Result: 0060859808070000 
DBG(48589943)> CPU DETAIL: Write 0296: 0060859808070000 
DBG(48589945)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589946)> CPU DETAIL: Read R 1626: 0000000000000008 
DBG(48589947)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589948)> CPU DETAIL: Result: 0000000000000009 
DBG(48589949)> CPU DETAIL: Write 1626: 0000000000000009 
DBG(48589951)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589952)> CPU DETAIL: M8: 0009 
DBG(48589953)> CPU DETAIL: Transfer to T 
DBG(48589955)> CPU CMD: Exec 0296: 00 60 8598 0807 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589956)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48589956)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48589957)> CPU DETAIL: Write 0807: 0000000000000000 
DBG(48589959)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589960)> CPU DETAIL: Read R 0296: 0060859808070000 
DBG(48589961)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589962)> CPU DETAIL: Result: 0060859808080000 
DBG(48589963)> CPU DETAIL: Write 0296: 0060859808080000 
DBG(48589965)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589966)> CPU DETAIL: Read R 1626: 0000000000000009 
DBG(48589967)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589968)> CPU DETAIL: Result: 0000000000000010 
DBG(48589969)> CPU DETAIL: Write 1626: 0000000000000010 
DBG(48589971)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589972)> CPU DETAIL: M8: 0010 
DBG(48589973)> CPU DETAIL: Transfer to T 
DBG(48589975)> CPU CMD: Exec 0296: 00 60 8598 0808 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589976)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48589976)> CPU DETAIL: Read R 0608: 0000000231020000 
DBG(48589977)> CPU DETAIL: Write 0808: 0000000231020000 
DBG(48589979)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48589980)> CPU DETAIL: Read R 0296: 0060859808080000 
DBG(48589981)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48589982)> CPU DETAIL: Result: 0060859808090000 
DBG(48589983)> CPU DETAIL: Write 0296: 0060859808090000 
DBG(48589985)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48589986)> CPU DETAIL: Read R 1626: 0000000000000010 
DBG(48589987)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48589988)> CPU DETAIL: Result: 0000000000000011 
DBG(48589989)> CPU DETAIL: Write 1626: 0000000000000011 
DBG(48589991)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48589992)> CPU DETAIL: M8: 0011 
DBG(48589993)> CPU DETAIL: Transfer to T 
DBG(48589995)> CPU CMD: Exec 0296: 00 60 8598 0809 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48589996)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48589996)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48589997)> CPU DETAIL: Write 0809: 0000000000000000 
DBG(48589999)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48590000)> CPU DETAIL: Read R 0296: 0060859808090000 
DBG(48590001)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590002)> CPU DETAIL: Result: 0060859808100000 
DBG(48590003)> CPU DETAIL: Write 0296: 0060859808100000 
DBG(48590005)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48590006)> CPU DETAIL: Read R 1626: 0000000000000011 
DBG(48590007)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590008)> CPU DETAIL: Result: 0000000000000012 
DBG(48590009)> CPU DETAIL: Write 1626: 0000000000000012 
DBG(48590011)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48590012)> CPU DETAIL: M8: 0012 
DBG(48590013)> CPU DETAIL: Transfer to T 
DBG(48590015)> CPU CMD: Exec 0296: 00 60 8598 0810 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48590016)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48590016)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48590017)> CPU DETAIL: Write 0810: 0000000000000000 
DBG(48590019)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48590020)> CPU DETAIL: Read R 0296: 0060859808100000 
DBG(48590021)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590022)> CPU DETAIL: Result: 0060859808110000 
DBG(48590023)> CPU DETAIL: Write 0296: 0060859808110000 
DBG(48590025)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48590026)> CPU DETAIL: Read R 1626: 0000000000000012 
DBG(48590027)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590028)> CPU DETAIL: Result: 0000000000000013 
DBG(48590029)> CPU DETAIL: Write 1626: 0000000000000013 
DBG(48590031)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48590032)> CPU DETAIL: M8: 0013 
DBG(48590035)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48590038)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48590039)> CPU DETAIL: Transfer to T 
DBG(48590041)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48590042)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48590043)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48590046)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48590047)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590047)> CPU DETAIL: Read R 0421: 0000000231020003 
DBG(48590048)> CPU DETAIL: Result: 0001000231020003 
DBG(48590049)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590049)> CPU DETAIL: Write 0421: 0001000231020003 
DBG(48590051)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48590052)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590052)> CPU DETAIL: Read R 0421: 0001000231020003 
DBG(48590053)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48590054)> CPU DETAIL: Result: 0001000000000000 
DBG(48590055)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48590056)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48590058)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48590059)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590059)> CPU DETAIL: Read R 0426: 3335444455660101 
DBG(48590060)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48590061)> CPU DETAIL: Result: 0000000000000001 
DBG(48590064)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48590065)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48590066)> CPU DETAIL: Result: 0000000000000000 
DBG(48590069)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48590070)> CPU DETAIL: REG1: 0000000000000000
DBG(48590070)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48590072)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48590073)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48590074)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48590075)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48590077)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48590078)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590078)> CPU DETAIL: Read R 0426: 3335444455660101 
DBG(48590079)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48590080)> CPU DETAIL: Result: 0000000000000001 
DBG(48590081)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48590084)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48590085)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590085)> CPU DETAIL: Read R 0421: 0001000231020003 
DBG(48590086)> CPU DETAIL: Result: 0000000231020003 
DBG(48590087)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590087)> CPU DETAIL: Write 0421: 0000000231020003 
DBG(48590089)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48590090)> CPU DETAIL: Read R 1625: 0000000000000082 
DBG(48590091)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48590092)> CPU DETAIL: Result: 0000000000000095 
DBG(48590095)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48590096)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48590097)> CPU DETAIL: Result: 0000000000000105 
DBG(48590100)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48590101)> CPU DETAIL: REG1: 0000000000000105
DBG(48590101)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48590103)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48590104)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48590105)> CPU DETAIL: Transfer to T 
DBG(48590105)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48590107)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48590108)> CPU DETAIL: M4: 0023 
DBG(48590109)> CPU DETAIL: M6: 0013 
DBG(48590110)> CPU DETAIL: Clear M8
DBG(48590110)> CPU DETAIL: M8: 0000 
DBG(48590113)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48590114)> CPU DETAIL: Read R 1612: 0000000000000007 
DBG(48590115)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590116)> CPU DETAIL: Result: 0000000000000008 
DBG(48590117)> CPU DETAIL: Write 1612: 0000000000000008 
DBG(48590119)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48590120)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48590121)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48590124)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48590125)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48590126)> CPU DETAIL: Result: 0858000100130266 
DBG(48590127)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48590129)> CPU CMD: Exec 0266: 00 60 4397 1483 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590130)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48590130)> CPU DETAIL: Read R 0420: 0130000000121113 
DBG(48590131)> CPU DETAIL: Write 1483: 0130000000121113 
DBG(48590133)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590134)> CPU DETAIL: Read R 0266: 0060439714830000 
DBG(48590135)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590136)> CPU DETAIL: Result: 0060439714840000 
DBG(48590137)> CPU DETAIL: Write 0266: 0060439714840000 
DBG(48590139)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590140)> CPU DETAIL: Read R 1625: 0000000000000082 
DBG(48590141)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590142)> CPU DETAIL: Result: 0000000000000083 
DBG(48590143)> CPU DETAIL: Write 1625: 0000000000000083 
DBG(48590145)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590146)> CPU DETAIL: M4: 0024 
DBG(48590147)> CPU DETAIL: M6: 0013 
DBG(48590148)> CPU DETAIL: M8: 0000 
DBG(48590151)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590152)> CPU DETAIL: M8: 0001 
DBG(48590153)> CPU DETAIL: Transfer to T 
DBG(48590155)> CPU CMD: Exec 0266: 00 60 4397 1484 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590156)> CPU DETAIL: M4 Address Modifier: 0024 
DBG(48590156)> CPU DETAIL: Read R 0421: 0000000231020003 
DBG(48590157)> CPU DETAIL: Write 1484: 0000000231020003 
DBG(48590159)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590160)> CPU DETAIL: Read R 0266: 0060439714840000 
DBG(48590161)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590162)> CPU DETAIL: Result: 0060439714850000 
DBG(48590163)> CPU DETAIL: Write 0266: 0060439714850000 
DBG(48590165)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590166)> CPU DETAIL: Read R 1625: 0000000000000083 
DBG(48590167)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590168)> CPU DETAIL: Result: 0000000000000084 
DBG(48590169)> CPU DETAIL: Write 1625: 0000000000000084 
DBG(48590171)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590172)> CPU DETAIL: M4: 0025 
DBG(48590173)> CPU DETAIL: M6: 0013 
DBG(48590174)> CPU DETAIL: M8: 0001 
DBG(48590177)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590178)> CPU DETAIL: M8: 0002 
DBG(48590179)> CPU DETAIL: Transfer to T 
DBG(48590181)> CPU CMD: Exec 0266: 00 60 4397 1485 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590182)> CPU DETAIL: M4 Address Modifier: 0025 
DBG(48590182)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48590183)> CPU DETAIL: Write 1485: 0000000000000000 
DBG(48590185)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590186)> CPU DETAIL: Read R 0266: 0060439714850000 
DBG(48590187)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590188)> CPU DETAIL: Result: 0060439714860000 
DBG(48590189)> CPU DETAIL: Write 0266: 0060439714860000 
DBG(48590191)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590192)> CPU DETAIL: Read R 1625: 0000000000000084 
DBG(48590193)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590194)> CPU DETAIL: Result: 0000000000000085 
DBG(48590195)> CPU DETAIL: Write 1625: 0000000000000085 
DBG(48590197)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590198)> CPU DETAIL: M4: 0026 
DBG(48590199)> CPU DETAIL: M6: 0013 
DBG(48590200)> CPU DETAIL: M8: 0002 
DBG(48590203)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590204)> CPU DETAIL: M8: 0003 
DBG(48590205)> CPU DETAIL: Transfer to T 
DBG(48590207)> CPU CMD: Exec 0266: 00 60 4397 1486 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590208)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48590208)> CPU DETAIL: Read R 0423: 0000000000000000 
DBG(48590209)> CPU DETAIL: Write 1486: 0000000000000000 
DBG(48590211)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590212)> CPU DETAIL: Read R 0266: 0060439714860000 
DBG(48590213)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590214)> CPU DETAIL: Result: 0060439714870000 
DBG(48590215)> CPU DETAIL: Write 0266: 0060439714870000 
DBG(48590217)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590218)> CPU DETAIL: Read R 1625: 0000000000000085 
DBG(48590219)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590220)> CPU DETAIL: Result: 0000000000000086 
DBG(48590221)> CPU DETAIL: Write 1625: 0000000000000086 
DBG(48590223)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590224)> CPU DETAIL: M4: 0027 
DBG(48590225)> CPU DETAIL: M6: 0013 
DBG(48590226)> CPU DETAIL: M8: 0003 
DBG(48590229)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590230)> CPU DETAIL: M8: 0004 
DBG(48590231)> CPU DETAIL: Transfer to T 
DBG(48590233)> CPU CMD: Exec 0266: 00 60 4397 1487 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590234)> CPU DETAIL: M4 Address Modifier: 0027 
DBG(48590234)> CPU DETAIL: Read R 0424: 0000000000000000 
DBG(48590235)> CPU DETAIL: Write 1487: 0000000000000000 
DBG(48590237)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590238)> CPU DETAIL: Read R 0266: 0060439714870000 
DBG(48590239)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590240)> CPU DETAIL: Result: 0060439714880000 
DBG(48590241)> CPU DETAIL: Write 0266: 0060439714880000 
DBG(48590243)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590244)> CPU DETAIL: Read R 1625: 0000000000000086 
DBG(48590245)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590246)> CPU DETAIL: Result: 0000000000000087 
DBG(48590247)> CPU DETAIL: Write 1625: 0000000000000087 
DBG(48590249)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590250)> CPU DETAIL: M4: 0028 
DBG(48590251)> CPU DETAIL: M6: 0013 
DBG(48590252)> CPU DETAIL: M8: 0004 
DBG(48590255)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590256)> CPU DETAIL: M8: 0005 
DBG(48590257)> CPU DETAIL: Transfer to T 
DBG(48590259)> CPU CMD: Exec 0266: 00 60 4397 1488 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590260)> CPU DETAIL: M4 Address Modifier: 0028 
DBG(48590260)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48590261)> CPU DETAIL: Write 1488: 0000000000000000 
DBG(48590263)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590264)> CPU DETAIL: Read R 0266: 0060439714880000 
DBG(48590265)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590266)> CPU DETAIL: Result: 0060439714890000 
DBG(48590267)> CPU DETAIL: Write 0266: 0060439714890000 
DBG(48590269)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590270)> CPU DETAIL: Read R 1625: 0000000000000087 
DBG(48590271)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590272)> CPU DETAIL: Result: 0000000000000088 
DBG(48590273)> CPU DETAIL: Write 1625: 0000000000000088 
DBG(48590275)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590276)> CPU DETAIL: M4: 0029 
DBG(48590277)> CPU DETAIL: M6: 0013 
DBG(48590278)> CPU DETAIL: M8: 0005 
DBG(48590281)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590282)> CPU DETAIL: M8: 0006 
DBG(48590283)> CPU DETAIL: Transfer to T 
DBG(48590285)> CPU CMD: Exec 0266: 00 60 4397 1489 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590286)> CPU DETAIL: M4 Address Modifier: 0029 
DBG(48590286)> CPU DETAIL: Read R 0426: 3335444455660101 
DBG(48590287)> CPU DETAIL: Write 1489: 3335444455660101 
DBG(48590289)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590290)> CPU DETAIL: Read R 0266: 0060439714890000 
DBG(48590291)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590292)> CPU DETAIL: Result: 0060439714900000 
DBG(48590293)> CPU DETAIL: Write 0266: 0060439714900000 
DBG(48590295)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590296)> CPU DETAIL: Read R 1625: 0000000000000088 
DBG(48590297)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590298)> CPU DETAIL: Result: 0000000000000089 
DBG(48590299)> CPU DETAIL: Write 1625: 0000000000000089 
DBG(48590301)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590302)> CPU DETAIL: M4: 0030 
DBG(48590303)> CPU DETAIL: M6: 0013 
DBG(48590304)> CPU DETAIL: M8: 0006 
DBG(48590307)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590308)> CPU DETAIL: M8: 0007 
DBG(48590309)> CPU DETAIL: Transfer to T 
DBG(48590311)> CPU CMD: Exec 0266: 00 60 4397 1490 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590312)> CPU DETAIL: M4 Address Modifier: 0030 
DBG(48590312)> CPU DETAIL: Read R 0427: 0000000231000000 
DBG(48590313)> CPU DETAIL: Write 1490: 0000000231000000 
DBG(48590315)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590316)> CPU DETAIL: Read R 0266: 0060439714900000 
DBG(48590317)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590318)> CPU DETAIL: Result: 0060439714910000 
DBG(48590319)> CPU DETAIL: Write 0266: 0060439714910000 
DBG(48590321)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590322)> CPU DETAIL: Read R 1625: 0000000000000089 
DBG(48590323)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590324)> CPU DETAIL: Result: 0000000000000090 
DBG(48590325)> CPU DETAIL: Write 1625: 0000000000000090 
DBG(48590327)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590328)> CPU DETAIL: M4: 0031 
DBG(48590329)> CPU DETAIL: M6: 0013 
DBG(48590330)> CPU DETAIL: M8: 0007 
DBG(48590333)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590334)> CPU DETAIL: M8: 0008 
DBG(48590335)> CPU DETAIL: Transfer to T 
DBG(48590337)> CPU CMD: Exec 0266: 00 60 4397 1491 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590338)> CPU DETAIL: M4 Address Modifier: 0031 
DBG(48590338)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48590339)> CPU DETAIL: Write 1491: 0000000000000000 
DBG(48590341)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590342)> CPU DETAIL: Read R 0266: 0060439714910000 
DBG(48590343)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590344)> CPU DETAIL: Result: 0060439714920000 
DBG(48590345)> CPU DETAIL: Write 0266: 0060439714920000 
DBG(48590347)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590348)> CPU DETAIL: Read R 1625: 0000000000000090 
DBG(48590349)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590350)> CPU DETAIL: Result: 0000000000000091 
DBG(48590351)> CPU DETAIL: Write 1625: 0000000000000091 
DBG(48590353)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590354)> CPU DETAIL: M4: 0032 
DBG(48590355)> CPU DETAIL: M6: 0013 
DBG(48590356)> CPU DETAIL: M8: 0008 
DBG(48590359)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590360)> CPU DETAIL: M8: 0009 
DBG(48590361)> CPU DETAIL: Transfer to T 
DBG(48590363)> CPU CMD: Exec 0266: 00 60 4397 1492 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590364)> CPU DETAIL: M4 Address Modifier: 0032 
DBG(48590364)> CPU DETAIL: Read R 0429: 0000000000000000 
DBG(48590365)> CPU DETAIL: Write 1492: 0000000000000000 
DBG(48590367)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590368)> CPU DETAIL: Read R 0266: 0060439714920000 
DBG(48590369)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590370)> CPU DETAIL: Result: 0060439714930000 
DBG(48590371)> CPU DETAIL: Write 0266: 0060439714930000 
DBG(48590373)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590374)> CPU DETAIL: Read R 1625: 0000000000000091 
DBG(48590375)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590376)> CPU DETAIL: Result: 0000000000000092 
DBG(48590377)> CPU DETAIL: Write 1625: 0000000000000092 
DBG(48590379)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590380)> CPU DETAIL: M4: 0033 
DBG(48590381)> CPU DETAIL: M6: 0013 
DBG(48590382)> CPU DETAIL: M8: 0009 
DBG(48590385)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590386)> CPU DETAIL: M8: 0010 
DBG(48590387)> CPU DETAIL: Transfer to T 
DBG(48590389)> CPU CMD: Exec 0266: 00 60 4397 1493 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590390)> CPU DETAIL: M4 Address Modifier: 0033 
DBG(48590390)> CPU DETAIL: Read R 0430: 0000000231030000 
DBG(48590391)> CPU DETAIL: Write 1493: 0000000231030000 
DBG(48590393)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590394)> CPU DETAIL: Read R 0266: 0060439714930000 
DBG(48590395)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590396)> CPU DETAIL: Result: 0060439714940000 
DBG(48590397)> CPU DETAIL: Write 0266: 0060439714940000 
DBG(48590399)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590400)> CPU DETAIL: Read R 1625: 0000000000000092 
DBG(48590401)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590402)> CPU DETAIL: Result: 0000000000000093 
DBG(48590403)> CPU DETAIL: Write 1625: 0000000000000093 
DBG(48590405)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590406)> CPU DETAIL: M4: 0034 
DBG(48590407)> CPU DETAIL: M6: 0013 
DBG(48590408)> CPU DETAIL: M8: 0010 
DBG(48590411)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590412)> CPU DETAIL: M8: 0011 
DBG(48590413)> CPU DETAIL: Transfer to T 
DBG(48590415)> CPU CMD: Exec 0266: 00 60 4397 1494 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590416)> CPU DETAIL: M4 Address Modifier: 0034 
DBG(48590416)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48590417)> CPU DETAIL: Write 1494: 0000000000000000 
DBG(48590419)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590420)> CPU DETAIL: Read R 0266: 0060439714940000 
DBG(48590421)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590422)> CPU DETAIL: Result: 0060439714950000 
DBG(48590423)> CPU DETAIL: Write 0266: 0060439714950000 
DBG(48590425)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590426)> CPU DETAIL: Read R 1625: 0000000000000093 
DBG(48590427)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590428)> CPU DETAIL: Result: 0000000000000094 
DBG(48590429)> CPU DETAIL: Write 1625: 0000000000000094 
DBG(48590431)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590432)> CPU DETAIL: M4: 0035 
DBG(48590433)> CPU DETAIL: M6: 0013 
DBG(48590434)> CPU DETAIL: M8: 0011 
DBG(48590437)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590438)> CPU DETAIL: M8: 0012 
DBG(48590439)> CPU DETAIL: Transfer to T 
DBG(48590441)> CPU CMD: Exec 0266: 00 60 4397 1495 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48590442)> CPU DETAIL: M4 Address Modifier: 0035 
DBG(48590442)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48590443)> CPU DETAIL: Write 1495: 0000000000000000 
DBG(48590445)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48590446)> CPU DETAIL: Read R 0266: 0060439714950000 
DBG(48590447)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590448)> CPU DETAIL: Result: 0060439714960000 
DBG(48590449)> CPU DETAIL: Write 0266: 0060439714960000 
DBG(48590451)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48590452)> CPU DETAIL: Read R 1625: 0000000000000094 
DBG(48590453)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48590454)> CPU DETAIL: Result: 0000000000000095 
DBG(48590455)> CPU DETAIL: Write 1625: 0000000000000095 
DBG(48590457)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48590458)> CPU DETAIL: M4: 0036 
DBG(48590459)> CPU DETAIL: M6: 0013 
DBG(48590460)> CPU DETAIL: M8: 0012 
DBG(48590463)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48590464)> CPU DETAIL: M8: 0013 
DBG(48590467)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48590470)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48590471)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48590472)> CPU DETAIL: Transfer to T 
DBG(48590472)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48590474)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48590475)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48590476)> CPU DETAIL: Read S 1606: 0000000000000036 
DBG(48590477)> CPU DETAIL: Result: 0000000000000045 
DBG(48590480)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48590481)> CPU DETAIL: REG1: 0000000000000045
DBG(48590481)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48590483)> CPU CMD: Exec 0124: 00 60 0439 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48590484)> CPU DETAIL: Read R 0439: 3334444455660101 
DBG(48590485)> CPU DETAIL: Write 1608: 3334444455660101 
DBG(48590487)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48590488)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48590488)> CPU DETAIL: Read R 0433: 0130000000131112 
DBG(48590489)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48590490)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48590492)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48590493)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48590494)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48590495)> CPU DETAIL: Result: 0000000000000100 
DBG(48590496)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48590497)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48590499)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48590500)> CPU DETAIL: Read R 1608: 3334444455660101 
DBG(48590501)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48590502)> CPU DETAIL: Result: 0000000000000001 
DBG(48590503)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48590505)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48590506)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48590507)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48590508)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48590509)> CPU DETAIL: Transfer to T 
DBG(48590511)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48590512)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48590513)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48590514)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48590515)> CPU DETAIL: Transfer to T 
DBG(48590517)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48590518)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48590519)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48590520)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48590520)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48590521)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48590522)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48590523)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48590525)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48590526)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48590527)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48590528)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48590528)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48590529)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48590530)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48590531)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48590533)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48590534)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48590535)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48590536)> CPU DETAIL: Result: 0000000000000003 
DBG(48590537)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48590539)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48590540)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48590541)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48590542)> CPU DETAIL: Result: 0000000000000003 
DBG(48590543)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48590545)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48590546)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48590547)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48590550)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48590551)> CPU DETAIL: Read R 0124: 0060043916080000 
DBG(48590552)> CPU DETAIL: Result: 0060045216080000 
DBG(48590553)> CPU DETAIL: Write 0124: 0060045216080000 
DBG(48590555)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48590556)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48590557)> CPU DETAIL: Read S 1606: 0000000000000036 
DBG(48590558)> CPU DETAIL: Result: 0000000000000049 
DBG(48590559)> CPU DETAIL: Write 1606: 0000000000000049 
DBG(48590561)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48590564)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48590565)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48590566)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48590567)> CPU DETAIL: Result: 0000000000000068 
DBG(48590570)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48590571)> CPU DETAIL: REG1: 0000000000000068
DBG(48590571)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48590573)> CPU CMD: Exec 0149: 00 60 1018 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48590574)> CPU DETAIL: Read R 1018: 3336000000000200 
DBG(48590575)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48590577)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48590578)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48590578)> CPU DETAIL: Read R 1012: 0130000000131113 
DBG(48590579)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48590580)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48590582)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48590583)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48590584)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48590585)> CPU DETAIL: Result: 0000000000000200 
DBG(48590586)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48590587)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48590589)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48590590)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48590591)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48590592)> CPU DETAIL: Result: 0000000000000000 
DBG(48590593)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48590595)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48590596)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48590597)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48590598)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48590599)> CPU DETAIL: Transfer to T 
DBG(48590601)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48590602)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48590603)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48590604)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48590604)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48590605)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48590606)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48590607)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48590609)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48590610)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48590611)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48590612)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48590612)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48590613)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48590614)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48590615)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48590617)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48590618)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48590619)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48590622)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48590623)> CPU DETAIL: Read R 0149: 0060101816160000 
DBG(48590624)> CPU DETAIL: Result: 0060103116160000 
DBG(48590625)> CPU DETAIL: Write 0149: 0060103116160000 
DBG(48590627)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48590628)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48590629)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48590630)> CPU DETAIL: Result: 0000000000000006 
DBG(48590631)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48590633)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48590634)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48590635)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48590636)> CPU DETAIL: Result: 0000000000000000 
DBG(48590637)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48590639)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48590640)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48590641)> CPU DETAIL: Read S 1615: 0000000000000013 
DBG(48590642)> CPU DETAIL: Result: 0000000000000026 
DBG(48590643)> CPU DETAIL: Write 1615: 0000000000000026 
DBG(48590645)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48590646)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48590647)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48590650)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48590651)> CPU DETAIL: Read R 0167: 0658000100130165 
DBG(48590652)> CPU DETAIL: Result: 0658000100260165 
DBG(48590653)> CPU DETAIL: Write 0167: 0658000100260165 
DBG(48590655)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590656)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48590656)> CPU DETAIL: Read R 1012: 0130000000131113 
DBG(48590657)> CPU DETAIL: Write 0598: 0130000000131113 
DBG(48590659)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590660)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48590661)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590662)> CPU DETAIL: Result: 0060699905990000 
DBG(48590663)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48590665)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590666)> CPU DETAIL: M6: 0014 
DBG(48590667)> CPU DETAIL: Transfer to T 
DBG(48590669)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590670)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48590670)> CPU DETAIL: Read R 1013: 0100000232090000 
DBG(48590671)> CPU DETAIL: Write 0599: 0100000232090000 
DBG(48590673)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590674)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48590675)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590676)> CPU DETAIL: Result: 0060699906000000 
DBG(48590677)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48590679)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590680)> CPU DETAIL: M6: 0015 
DBG(48590681)> CPU DETAIL: Transfer to T 
DBG(48590683)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590684)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48590684)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48590685)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48590687)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590688)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48590689)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590690)> CPU DETAIL: Result: 0060699906010000 
DBG(48590691)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48590693)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590694)> CPU DETAIL: M6: 0016 
DBG(48590695)> CPU DETAIL: Transfer to T 
DBG(48590697)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590698)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48590698)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(48590699)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48590701)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590702)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48590703)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590704)> CPU DETAIL: Result: 0060699906020000 
DBG(48590705)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48590707)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590708)> CPU DETAIL: M6: 0017 
DBG(48590709)> CPU DETAIL: Transfer to T 
DBG(48590711)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590712)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48590712)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(48590713)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48590715)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590716)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48590717)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590718)> CPU DETAIL: Result: 0060699906030000 
DBG(48590719)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48590721)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590722)> CPU DETAIL: M6: 0018 
DBG(48590723)> CPU DETAIL: Transfer to T 
DBG(48590725)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590726)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48590726)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48590727)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48590729)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590730)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48590731)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590732)> CPU DETAIL: Result: 0060699906040000 
DBG(48590733)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48590735)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590736)> CPU DETAIL: M6: 0019 
DBG(48590737)> CPU DETAIL: Transfer to T 
DBG(48590739)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590740)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48590740)> CPU DETAIL: Read R 1018: 3336000000000200 
DBG(48590741)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48590743)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590744)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48590745)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590746)> CPU DETAIL: Result: 0060699906050000 
DBG(48590747)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48590749)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590750)> CPU DETAIL: M6: 0020 
DBG(48590751)> CPU DETAIL: Transfer to T 
DBG(48590753)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590754)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48590754)> CPU DETAIL: Read R 1019: 0000000232000000 
DBG(48590755)> CPU DETAIL: Write 0605: 0000000232000000 
DBG(48590757)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590758)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48590759)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590760)> CPU DETAIL: Result: 0060699906060000 
DBG(48590761)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48590763)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590764)> CPU DETAIL: M6: 0021 
DBG(48590765)> CPU DETAIL: Transfer to T 
DBG(48590767)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590768)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48590768)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48590769)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48590771)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590772)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48590773)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590774)> CPU DETAIL: Result: 0060699906070000 
DBG(48590775)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48590777)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590778)> CPU DETAIL: M6: 0022 
DBG(48590779)> CPU DETAIL: Transfer to T 
DBG(48590781)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590782)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48590782)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(48590783)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48590785)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590786)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48590787)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590788)> CPU DETAIL: Result: 0060699906080000 
DBG(48590789)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48590791)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590792)> CPU DETAIL: M6: 0023 
DBG(48590793)> CPU DETAIL: Transfer to T 
DBG(48590795)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590796)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48590796)> CPU DETAIL: Read R 1022: 0000000232010000 
DBG(48590797)> CPU DETAIL: Write 0608: 0000000232010000 
DBG(48590799)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590800)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48590801)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590802)> CPU DETAIL: Result: 0060699906090000 
DBG(48590803)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48590805)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590806)> CPU DETAIL: M6: 0024 
DBG(48590807)> CPU DETAIL: Transfer to T 
DBG(48590809)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590810)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48590810)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48590811)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48590813)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590814)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48590815)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590816)> CPU DETAIL: Result: 0060699906100000 
DBG(48590817)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48590819)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590820)> CPU DETAIL: M6: 0025 
DBG(48590821)> CPU DETAIL: Transfer to T 
DBG(48590823)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48590824)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48590824)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48590825)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48590827)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48590828)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48590829)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48590830)> CPU DETAIL: Result: 0060699906110000 
DBG(48590831)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48590833)> CPU CMD: Exec 0167: 06 58 0001 0026 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48590834)> CPU DETAIL: M6: 0026 
DBG(48590837)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48590838)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48590839)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48590841)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48590844)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48590845)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48590846)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48590849)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48590850)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48590851)> CPU DETAIL: Result: 0000001000000000 
DBG(48590854)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48590855)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48590856)> CPU DETAIL: Result: 0042440716550000 
DBG(48590857)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48590859)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48590860)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48590861)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590862)> CPU DETAIL: Result: 0000000232090000 
DBG(48590863)> CPU DETAIL: Write 1620: 0000000232090000 
DBG(48590865)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48590866)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48590866)> CPU DETAIL: Read R 0443: 0000000232090000 
DBG(48590867)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590868)> CPU DETAIL: Result: 0000000232090000 
DBG(48590871)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48590872)> CPU DETAIL: Read S 1620: 0000000232090000 
DBG(48590873)> CPU DETAIL: Result: 0000000000000000 
DBG(48590876)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48590877)> CPU DETAIL: REG1: 0000000000000000
DBG(48590877)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48590879)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48590880)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48590881)> CPU DETAIL: Transfer to T 
DBG(48590881)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48590883)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48590884)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48590885)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590886)> CPU DETAIL: Result: 0000000232000000 
DBG(48590887)> CPU DETAIL: Write 1620: 0000000232000000 
DBG(48590889)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48590890)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48590890)> CPU DETAIL: Read R 0434: 0000000232010000 
DBG(48590891)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590892)> CPU DETAIL: Result: 0000000232010000 
DBG(48590895)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48590896)> CPU DETAIL: Read R 1620: 0000000232000000 
DBG(48590897)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48590900)> CPU CMD: Exec 0230: 00 40 1644 0227 0227   incr field_R on instr 0227 to read next predecessor on list   
DBG(48590901)> CPU DETAIL: Read R 1644: 0000000300000000 
DBG(48590902)> CPU DETAIL: Read S 0227: 0042060516551620 
DBG(48590903)> CPU DETAIL: Result: 0042060816551620 
DBG(48590904)> CPU DETAIL: Write 0227: 0042060816551620 
DBG(48590906)> CPU CMD: Exec 0231: 00 40 1707 1624 1624   incr (1624 number of words scanned on predecessor list)   
DBG(48590907)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48590908)> CPU DETAIL: Read S 1624: 0000000000000000 
DBG(48590909)> CPU DETAIL: Result: 0000000000000003 
DBG(48590910)> CPU DETAIL: Write 1624: 0000000000000003 
DBG(48590912)> CPU CMD: Exec 0232: 00 72 0000 1617 0227   if <> (1617 num of words used by predecessor list) goto 0227: loop because p 
DBG(48590913)> CPU DETAIL: Read S 1617: 0000000000000006 
DBG(48590914)> CPU DETAIL: Diff: REG1: 9999999999999997
DBG(48590915)> CPU DETAIL: Transfer to T 
DBG(48590917)> CPU CMD: Exec 0227: 00 42 0608 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48590918)> CPU DETAIL: Read R 0608: 0000000232010000 
DBG(48590919)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590920)> CPU DETAIL: Result: 0000000232010000 
DBG(48590921)> CPU DETAIL: Write 1620: 0000000232010000 
DBG(48590923)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48590924)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48590924)> CPU DETAIL: Read R 0434: 0000000232010000 
DBG(48590925)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48590926)> CPU DETAIL: Result: 0000000232010000 
DBG(48590929)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48590930)> CPU DETAIL: Read R 1620: 0000000232010000 
DBG(48590931)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48590932)> CPU DETAIL: Transfer to T 
DBG(48590934)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48590935)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48590936)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48590938)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48590939)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48590940)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48590942)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48590943)> CPU DETAIL: Read R 0599: 0100000232090000 
DBG(48590944)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48590945)> CPU DETAIL: Result: 0200000232090000 
DBG(48590946)> CPU DETAIL: Write 0599: 0200000232090000 
DBG(48590948)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48590949)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000002 
DBG(48590950)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48590952)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48590953)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48590954)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48590955)> CPU DETAIL: Result: 0000000000000200 
DBG(48590956)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48590959)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48590960)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48590961)> CPU DETAIL: Result: 0000000000000000 
DBG(48590964)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48590965)> CPU DETAIL: REG1: 0000000000000000
DBG(48590965)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48590967)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48590968)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48590969)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48590971)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48590972)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48590973)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48590975)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48590976)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48590977)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48590978)> CPU DETAIL: Result: 0000000000000200 
DBG(48590979)> CPU DETAIL: Word Shift 12 digits left: REG1: 0200000000000000 
DBG(48590982)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48590983)> CPU DETAIL: Read R 0599: 0200000232090000 
DBG(48590984)> CPU DETAIL: Result: 0000000232090000 
DBG(48590985)> CPU DETAIL: Write 0599: 0000000232090000 
DBG(48590987)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48590988)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48590989)> CPU DETAIL: Read S 1626: 0000000000000013 
DBG(48590990)> CPU DETAIL: Result: 0000000000000026 
DBG(48590993)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48590994)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48590995)> CPU DETAIL: Result: 0000000000000174 
DBG(48590998)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48590999)> CPU DETAIL: REG1: 0000000000000174
DBG(48590999)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48591001)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48591002)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48591003)> CPU DETAIL: Transfer to T 
DBG(48591003)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48591005)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48591006)> CPU DETAIL: M4: 0036 
DBG(48591007)> CPU DETAIL: M6: 0026 
DBG(48591008)> CPU DETAIL: Clear M8
DBG(48591008)> CPU DETAIL: M8: 0000 
DBG(48591011)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48591012)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48591013)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48591016)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48591017)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48591018)> CPU DETAIL: Result: 0858000100130296 
DBG(48591019)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48591021)> CPU CMD: Exec 0296: 00 60 8598 0811 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591022)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48591022)> CPU DETAIL: Read R 0598: 0130000000131113 
DBG(48591023)> CPU DETAIL: Write 0811: 0130000000131113 
DBG(48591025)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591026)> CPU DETAIL: Read R 0296: 0060859808110000 
DBG(48591027)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591028)> CPU DETAIL: Result: 0060859808120000 
DBG(48591029)> CPU DETAIL: Write 0296: 0060859808120000 
DBG(48591031)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591032)> CPU DETAIL: Read R 1626: 0000000000000013 
DBG(48591033)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591034)> CPU DETAIL: Result: 0000000000000014 
DBG(48591035)> CPU DETAIL: Write 1626: 0000000000000014 
DBG(48591037)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591038)> CPU DETAIL: M8: 0001 
DBG(48591039)> CPU DETAIL: Transfer to T 
DBG(48591041)> CPU CMD: Exec 0296: 00 60 8598 0812 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591042)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48591042)> CPU DETAIL: Read R 0599: 0000000232090000 
DBG(48591043)> CPU DETAIL: Write 0812: 0000000232090000 
DBG(48591045)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591046)> CPU DETAIL: Read R 0296: 0060859808120000 
DBG(48591047)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591048)> CPU DETAIL: Result: 0060859808130000 
DBG(48591049)> CPU DETAIL: Write 0296: 0060859808130000 
DBG(48591051)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591052)> CPU DETAIL: Read R 1626: 0000000000000014 
DBG(48591053)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591054)> CPU DETAIL: Result: 0000000000000015 
DBG(48591055)> CPU DETAIL: Write 1626: 0000000000000015 
DBG(48591057)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591058)> CPU DETAIL: M8: 0002 
DBG(48591059)> CPU DETAIL: Transfer to T 
DBG(48591061)> CPU CMD: Exec 0296: 00 60 8598 0813 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591062)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48591062)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48591063)> CPU DETAIL: Write 0813: 0000000000000000 
DBG(48591065)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591066)> CPU DETAIL: Read R 0296: 0060859808130000 
DBG(48591067)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591068)> CPU DETAIL: Result: 0060859808140000 
DBG(48591069)> CPU DETAIL: Write 0296: 0060859808140000 
DBG(48591071)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591072)> CPU DETAIL: Read R 1626: 0000000000000015 
DBG(48591073)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591074)> CPU DETAIL: Result: 0000000000000016 
DBG(48591075)> CPU DETAIL: Write 1626: 0000000000000016 
DBG(48591077)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591078)> CPU DETAIL: M8: 0003 
DBG(48591079)> CPU DETAIL: Transfer to T 
DBG(48591081)> CPU CMD: Exec 0296: 00 60 8598 0814 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591082)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48591082)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48591083)> CPU DETAIL: Write 0814: 0000000000000000 
DBG(48591085)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591086)> CPU DETAIL: Read R 0296: 0060859808140000 
DBG(48591087)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591088)> CPU DETAIL: Result: 0060859808150000 
DBG(48591089)> CPU DETAIL: Write 0296: 0060859808150000 
DBG(48591091)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591092)> CPU DETAIL: Read R 1626: 0000000000000016 
DBG(48591093)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591094)> CPU DETAIL: Result: 0000000000000017 
DBG(48591095)> CPU DETAIL: Write 1626: 0000000000000017 
DBG(48591097)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591098)> CPU DETAIL: M8: 0004 
DBG(48591099)> CPU DETAIL: Transfer to T 
DBG(48591101)> CPU CMD: Exec 0296: 00 60 8598 0815 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591102)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48591102)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48591103)> CPU DETAIL: Write 0815: 0000000000000000 
DBG(48591105)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591106)> CPU DETAIL: Read R 0296: 0060859808150000 
DBG(48591107)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591108)> CPU DETAIL: Result: 0060859808160000 
DBG(48591109)> CPU DETAIL: Write 0296: 0060859808160000 
DBG(48591111)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591112)> CPU DETAIL: Read R 1626: 0000000000000017 
DBG(48591113)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591114)> CPU DETAIL: Result: 0000000000000018 
DBG(48591115)> CPU DETAIL: Write 1626: 0000000000000018 
DBG(48591117)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591118)> CPU DETAIL: M8: 0005 
DBG(48591119)> CPU DETAIL: Transfer to T 
DBG(48591121)> CPU CMD: Exec 0296: 00 60 8598 0816 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591122)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48591122)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48591123)> CPU DETAIL: Write 0816: 0000000000000000 
DBG(48591125)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591126)> CPU DETAIL: Read R 0296: 0060859808160000 
DBG(48591127)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591128)> CPU DETAIL: Result: 0060859808170000 
DBG(48591129)> CPU DETAIL: Write 0296: 0060859808170000 
DBG(48591131)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591132)> CPU DETAIL: Read R 1626: 0000000000000018 
DBG(48591133)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591134)> CPU DETAIL: Result: 0000000000000019 
DBG(48591135)> CPU DETAIL: Write 1626: 0000000000000019 
DBG(48591137)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591138)> CPU DETAIL: M8: 0006 
DBG(48591139)> CPU DETAIL: Transfer to T 
DBG(48591141)> CPU CMD: Exec 0296: 00 60 8598 0817 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591142)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48591142)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48591143)> CPU DETAIL: Write 0817: 3336000000000200 
DBG(48591145)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591146)> CPU DETAIL: Read R 0296: 0060859808170000 
DBG(48591147)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591148)> CPU DETAIL: Result: 0060859808180000 
DBG(48591149)> CPU DETAIL: Write 0296: 0060859808180000 
DBG(48591151)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591152)> CPU DETAIL: Read R 1626: 0000000000000019 
DBG(48591153)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591154)> CPU DETAIL: Result: 0000000000000020 
DBG(48591155)> CPU DETAIL: Write 1626: 0000000000000020 
DBG(48591157)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591158)> CPU DETAIL: M8: 0007 
DBG(48591159)> CPU DETAIL: Transfer to T 
DBG(48591161)> CPU CMD: Exec 0296: 00 60 8598 0818 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591162)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48591162)> CPU DETAIL: Read R 0605: 0000000232000000 
DBG(48591163)> CPU DETAIL: Write 0818: 0000000232000000 
DBG(48591165)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591166)> CPU DETAIL: Read R 0296: 0060859808180000 
DBG(48591167)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591168)> CPU DETAIL: Result: 0060859808190000 
DBG(48591169)> CPU DETAIL: Write 0296: 0060859808190000 
DBG(48591171)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591172)> CPU DETAIL: Read R 1626: 0000000000000020 
DBG(48591173)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591174)> CPU DETAIL: Result: 0000000000000021 
DBG(48591175)> CPU DETAIL: Write 1626: 0000000000000021 
DBG(48591177)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591178)> CPU DETAIL: M8: 0008 
DBG(48591179)> CPU DETAIL: Transfer to T 
DBG(48591181)> CPU CMD: Exec 0296: 00 60 8598 0819 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591182)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48591182)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48591183)> CPU DETAIL: Write 0819: 0000000000000000 
DBG(48591185)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591186)> CPU DETAIL: Read R 0296: 0060859808190000 
DBG(48591187)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591188)> CPU DETAIL: Result: 0060859808200000 
DBG(48591189)> CPU DETAIL: Write 0296: 0060859808200000 
DBG(48591191)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591192)> CPU DETAIL: Read R 1626: 0000000000000021 
DBG(48591193)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591194)> CPU DETAIL: Result: 0000000000000022 
DBG(48591195)> CPU DETAIL: Write 1626: 0000000000000022 
DBG(48591197)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591198)> CPU DETAIL: M8: 0009 
DBG(48591199)> CPU DETAIL: Transfer to T 
DBG(48591201)> CPU CMD: Exec 0296: 00 60 8598 0820 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591202)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48591202)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48591203)> CPU DETAIL: Write 0820: 0000000000000000 
DBG(48591205)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591206)> CPU DETAIL: Read R 0296: 0060859808200000 
DBG(48591207)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591208)> CPU DETAIL: Result: 0060859808210000 
DBG(48591209)> CPU DETAIL: Write 0296: 0060859808210000 
DBG(48591211)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591212)> CPU DETAIL: Read R 1626: 0000000000000022 
DBG(48591213)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591214)> CPU DETAIL: Result: 0000000000000023 
DBG(48591215)> CPU DETAIL: Write 1626: 0000000000000023 
DBG(48591217)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591218)> CPU DETAIL: M8: 0010 
DBG(48591219)> CPU DETAIL: Transfer to T 
DBG(48591221)> CPU CMD: Exec 0296: 00 60 8598 0821 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591222)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48591222)> CPU DETAIL: Read R 0608: 0000000232010000 
DBG(48591223)> CPU DETAIL: Write 0821: 0000000232010000 
DBG(48591225)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591226)> CPU DETAIL: Read R 0296: 0060859808210000 
DBG(48591227)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591228)> CPU DETAIL: Result: 0060859808220000 
DBG(48591229)> CPU DETAIL: Write 0296: 0060859808220000 
DBG(48591231)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591232)> CPU DETAIL: Read R 1626: 0000000000000023 
DBG(48591233)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591234)> CPU DETAIL: Result: 0000000000000024 
DBG(48591235)> CPU DETAIL: Write 1626: 0000000000000024 
DBG(48591237)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591238)> CPU DETAIL: M8: 0011 
DBG(48591239)> CPU DETAIL: Transfer to T 
DBG(48591241)> CPU CMD: Exec 0296: 00 60 8598 0822 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591242)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48591242)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48591243)> CPU DETAIL: Write 0822: 0000000000000000 
DBG(48591245)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591246)> CPU DETAIL: Read R 0296: 0060859808220000 
DBG(48591247)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591248)> CPU DETAIL: Result: 0060859808230000 
DBG(48591249)> CPU DETAIL: Write 0296: 0060859808230000 
DBG(48591251)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591252)> CPU DETAIL: Read R 1626: 0000000000000024 
DBG(48591253)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591254)> CPU DETAIL: Result: 0000000000000025 
DBG(48591255)> CPU DETAIL: Write 1626: 0000000000000025 
DBG(48591257)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591258)> CPU DETAIL: M8: 0012 
DBG(48591259)> CPU DETAIL: Transfer to T 
DBG(48591261)> CPU CMD: Exec 0296: 00 60 8598 0823 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48591262)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48591262)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48591263)> CPU DETAIL: Write 0823: 0000000000000000 
DBG(48591265)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48591266)> CPU DETAIL: Read R 0296: 0060859808230000 
DBG(48591267)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591268)> CPU DETAIL: Result: 0060859808240000 
DBG(48591269)> CPU DETAIL: Write 0296: 0060859808240000 
DBG(48591271)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48591272)> CPU DETAIL: Read R 1626: 0000000000000025 
DBG(48591273)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591274)> CPU DETAIL: Result: 0000000000000026 
DBG(48591275)> CPU DETAIL: Write 1626: 0000000000000026 
DBG(48591277)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48591278)> CPU DETAIL: M8: 0013 
DBG(48591281)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48591284)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48591285)> CPU DETAIL: Transfer to T 
DBG(48591287)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48591288)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48591289)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48591292)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48591293)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591293)> CPU DETAIL: Read R 0434: 0000000232010000 
DBG(48591294)> CPU DETAIL: Result: 0001000232010000 
DBG(48591295)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591295)> CPU DETAIL: Write 0434: 0001000232010000 
DBG(48591297)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48591298)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591298)> CPU DETAIL: Read R 0434: 0001000232010000 
DBG(48591299)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48591300)> CPU DETAIL: Result: 0001000000000000 
DBG(48591301)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48591302)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48591304)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48591305)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591305)> CPU DETAIL: Read R 0439: 3334444455660101 
DBG(48591306)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48591307)> CPU DETAIL: Result: 0000000000000001 
DBG(48591310)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48591311)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48591312)> CPU DETAIL: Result: 0000000000000000 
DBG(48591315)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48591316)> CPU DETAIL: REG1: 0000000000000000
DBG(48591316)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48591318)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48591319)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48591320)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48591321)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48591323)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48591324)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591324)> CPU DETAIL: Read R 0439: 3334444455660101 
DBG(48591325)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48591326)> CPU DETAIL: Result: 0000000000000001 
DBG(48591327)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48591330)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48591331)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591331)> CPU DETAIL: Read R 0434: 0001000232010000 
DBG(48591332)> CPU DETAIL: Result: 0000000232010000 
DBG(48591333)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591333)> CPU DETAIL: Write 0434: 0000000232010000 
DBG(48591335)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48591336)> CPU DETAIL: Read R 1625: 0000000000000095 
DBG(48591337)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48591338)> CPU DETAIL: Result: 0000000000000108 
DBG(48591341)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48591342)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48591343)> CPU DETAIL: Result: 0000000000000092 
DBG(48591346)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48591347)> CPU DETAIL: REG1: 0000000000000092
DBG(48591347)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48591349)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48591350)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48591351)> CPU DETAIL: Transfer to T 
DBG(48591351)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48591353)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48591354)> CPU DETAIL: M4: 0036 
DBG(48591355)> CPU DETAIL: M6: 0026 
DBG(48591356)> CPU DETAIL: Clear M8
DBG(48591356)> CPU DETAIL: M8: 0000 
DBG(48591359)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48591360)> CPU DETAIL: Read R 1612: 0000000000000008 
DBG(48591361)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591362)> CPU DETAIL: Result: 0000000000000009 
DBG(48591363)> CPU DETAIL: Write 1612: 0000000000000009 
DBG(48591365)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48591366)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48591367)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48591370)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48591371)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48591372)> CPU DETAIL: Result: 0858000100130266 
DBG(48591373)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48591375)> CPU CMD: Exec 0266: 00 60 4397 1496 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591376)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48591376)> CPU DETAIL: Read R 0433: 0130000000131112 
DBG(48591377)> CPU DETAIL: Write 1496: 0130000000131112 
DBG(48591379)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591380)> CPU DETAIL: Read R 0266: 0060439714960000 
DBG(48591381)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591382)> CPU DETAIL: Result: 0060439714970000 
DBG(48591383)> CPU DETAIL: Write 0266: 0060439714970000 
DBG(48591385)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591386)> CPU DETAIL: Read R 1625: 0000000000000095 
DBG(48591387)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591388)> CPU DETAIL: Result: 0000000000000096 
DBG(48591389)> CPU DETAIL: Write 1625: 0000000000000096 
DBG(48591391)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591392)> CPU DETAIL: M4: 0037 
DBG(48591393)> CPU DETAIL: M6: 0026 
DBG(48591394)> CPU DETAIL: M8: 0000 
DBG(48591397)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591398)> CPU DETAIL: M8: 0001 
DBG(48591399)> CPU DETAIL: Transfer to T 
DBG(48591401)> CPU CMD: Exec 0266: 00 60 4397 1497 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591402)> CPU DETAIL: M4 Address Modifier: 0037 
DBG(48591402)> CPU DETAIL: Read R 0434: 0000000232010000 
DBG(48591403)> CPU DETAIL: Write 1497: 0000000232010000 
DBG(48591405)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591406)> CPU DETAIL: Read R 0266: 0060439714970000 
DBG(48591407)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591408)> CPU DETAIL: Result: 0060439714980000 
DBG(48591409)> CPU DETAIL: Write 0266: 0060439714980000 
DBG(48591411)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591412)> CPU DETAIL: Read R 1625: 0000000000000096 
DBG(48591413)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591414)> CPU DETAIL: Result: 0000000000000097 
DBG(48591415)> CPU DETAIL: Write 1625: 0000000000000097 
DBG(48591417)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591418)> CPU DETAIL: M4: 0038 
DBG(48591419)> CPU DETAIL: M6: 0026 
DBG(48591420)> CPU DETAIL: M8: 0001 
DBG(48591423)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591424)> CPU DETAIL: M8: 0002 
DBG(48591425)> CPU DETAIL: Transfer to T 
DBG(48591427)> CPU CMD: Exec 0266: 00 60 4397 1498 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591428)> CPU DETAIL: M4 Address Modifier: 0038 
DBG(48591428)> CPU DETAIL: Read R 0435: 0000000000000000 
DBG(48591429)> CPU DETAIL: Write 1498: 0000000000000000 
DBG(48591431)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591432)> CPU DETAIL: Read R 0266: 0060439714980000 
DBG(48591433)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591434)> CPU DETAIL: Result: 0060439714990000 
DBG(48591435)> CPU DETAIL: Write 0266: 0060439714990000 
DBG(48591437)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591438)> CPU DETAIL: Read R 1625: 0000000000000097 
DBG(48591439)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591440)> CPU DETAIL: Result: 0000000000000098 
DBG(48591441)> CPU DETAIL: Write 1625: 0000000000000098 
DBG(48591443)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591444)> CPU DETAIL: M4: 0039 
DBG(48591445)> CPU DETAIL: M6: 0026 
DBG(48591446)> CPU DETAIL: M8: 0002 
DBG(48591449)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591450)> CPU DETAIL: M8: 0003 
DBG(48591451)> CPU DETAIL: Transfer to T 
DBG(48591453)> CPU CMD: Exec 0266: 00 60 4397 1499 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591454)> CPU DETAIL: M4 Address Modifier: 0039 
DBG(48591454)> CPU DETAIL: Read R 0436: 0000000000000000 
DBG(48591455)> CPU DETAIL: Write 1499: 0000000000000000 
DBG(48591457)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591458)> CPU DETAIL: Read R 0266: 0060439714990000 
DBG(48591459)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591460)> CPU DETAIL: Result: 0060439715000000 
DBG(48591461)> CPU DETAIL: Write 0266: 0060439715000000 
DBG(48591463)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591464)> CPU DETAIL: Read R 1625: 0000000000000098 
DBG(48591465)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591466)> CPU DETAIL: Result: 0000000000000099 
DBG(48591467)> CPU DETAIL: Write 1625: 0000000000000099 
DBG(48591469)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591470)> CPU DETAIL: M4: 0040 
DBG(48591471)> CPU DETAIL: M6: 0026 
DBG(48591472)> CPU DETAIL: M8: 0003 
DBG(48591475)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591476)> CPU DETAIL: M8: 0004 
DBG(48591477)> CPU DETAIL: Transfer to T 
DBG(48591479)> CPU CMD: Exec 0266: 00 60 4397 1500 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591480)> CPU DETAIL: M4 Address Modifier: 0040 
DBG(48591480)> CPU DETAIL: Read R 0437: 0000000000000000 
DBG(48591481)> CPU DETAIL: Write 1500: 0000000000000000 
DBG(48591483)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591484)> CPU DETAIL: Read R 0266: 0060439715000000 
DBG(48591485)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591486)> CPU DETAIL: Result: 0060439715010000 
DBG(48591487)> CPU DETAIL: Write 0266: 0060439715010000 
DBG(48591489)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591490)> CPU DETAIL: Read R 1625: 0000000000000099 
DBG(48591491)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591492)> CPU DETAIL: Result: 0000000000000100 
DBG(48591493)> CPU DETAIL: Write 1625: 0000000000000100 
DBG(48591495)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591496)> CPU DETAIL: M4: 0041 
DBG(48591497)> CPU DETAIL: M6: 0026 
DBG(48591498)> CPU DETAIL: M8: 0004 
DBG(48591501)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591502)> CPU DETAIL: M8: 0005 
DBG(48591503)> CPU DETAIL: Transfer to T 
DBG(48591505)> CPU CMD: Exec 0266: 00 60 4397 1501 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591506)> CPU DETAIL: M4 Address Modifier: 0041 
DBG(48591506)> CPU DETAIL: Read R 0438: 0000000000000000 
DBG(48591507)> CPU DETAIL: Write 1501: 0000000000000000 
DBG(48591509)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591510)> CPU DETAIL: Read R 0266: 0060439715010000 
DBG(48591511)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591512)> CPU DETAIL: Result: 0060439715020000 
DBG(48591513)> CPU DETAIL: Write 0266: 0060439715020000 
DBG(48591515)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591516)> CPU DETAIL: Read R 1625: 0000000000000100 
DBG(48591517)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591518)> CPU DETAIL: Result: 0000000000000101 
DBG(48591519)> CPU DETAIL: Write 1625: 0000000000000101 
DBG(48591521)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591522)> CPU DETAIL: M4: 0042 
DBG(48591523)> CPU DETAIL: M6: 0026 
DBG(48591524)> CPU DETAIL: M8: 0005 
DBG(48591527)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591528)> CPU DETAIL: M8: 0006 
DBG(48591529)> CPU DETAIL: Transfer to T 
DBG(48591531)> CPU CMD: Exec 0266: 00 60 4397 1502 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591532)> CPU DETAIL: M4 Address Modifier: 0042 
DBG(48591532)> CPU DETAIL: Read R 0439: 3334444455660101 
DBG(48591533)> CPU DETAIL: Write 1502: 3334444455660101 
DBG(48591535)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591536)> CPU DETAIL: Read R 0266: 0060439715020000 
DBG(48591537)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591538)> CPU DETAIL: Result: 0060439715030000 
DBG(48591539)> CPU DETAIL: Write 0266: 0060439715030000 
DBG(48591541)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591542)> CPU DETAIL: Read R 1625: 0000000000000101 
DBG(48591543)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591544)> CPU DETAIL: Result: 0000000000000102 
DBG(48591545)> CPU DETAIL: Write 1625: 0000000000000102 
DBG(48591547)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591548)> CPU DETAIL: M4: 0043 
DBG(48591549)> CPU DETAIL: M6: 0026 
DBG(48591550)> CPU DETAIL: M8: 0006 
DBG(48591553)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591554)> CPU DETAIL: M8: 0007 
DBG(48591555)> CPU DETAIL: Transfer to T 
DBG(48591557)> CPU CMD: Exec 0266: 00 60 4397 1503 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591558)> CPU DETAIL: M4 Address Modifier: 0043 
DBG(48591558)> CPU DETAIL: Read R 0440: 0000000232000000 
DBG(48591559)> CPU DETAIL: Write 1503: 0000000232000000 
DBG(48591561)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591562)> CPU DETAIL: Read R 0266: 0060439715030000 
DBG(48591563)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591564)> CPU DETAIL: Result: 0060439715040000 
DBG(48591565)> CPU DETAIL: Write 0266: 0060439715040000 
DBG(48591567)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591568)> CPU DETAIL: Read R 1625: 0000000000000102 
DBG(48591569)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591570)> CPU DETAIL: Result: 0000000000000103 
DBG(48591571)> CPU DETAIL: Write 1625: 0000000000000103 
DBG(48591573)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591574)> CPU DETAIL: M4: 0044 
DBG(48591575)> CPU DETAIL: M6: 0026 
DBG(48591576)> CPU DETAIL: M8: 0007 
DBG(48591579)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591580)> CPU DETAIL: M8: 0008 
DBG(48591581)> CPU DETAIL: Transfer to T 
DBG(48591583)> CPU CMD: Exec 0266: 00 60 4397 1504 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591584)> CPU DETAIL: M4 Address Modifier: 0044 
DBG(48591584)> CPU DETAIL: Read R 0441: 0000000000000000 
DBG(48591585)> CPU DETAIL: Write 1504: 0000000000000000 
DBG(48591587)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591588)> CPU DETAIL: Read R 0266: 0060439715040000 
DBG(48591589)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591590)> CPU DETAIL: Result: 0060439715050000 
DBG(48591591)> CPU DETAIL: Write 0266: 0060439715050000 
DBG(48591593)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591594)> CPU DETAIL: Read R 1625: 0000000000000103 
DBG(48591595)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591596)> CPU DETAIL: Result: 0000000000000104 
DBG(48591597)> CPU DETAIL: Write 1625: 0000000000000104 
DBG(48591599)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591600)> CPU DETAIL: M4: 0045 
DBG(48591601)> CPU DETAIL: M6: 0026 
DBG(48591602)> CPU DETAIL: M8: 0008 
DBG(48591605)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591606)> CPU DETAIL: M8: 0009 
DBG(48591607)> CPU DETAIL: Transfer to T 
DBG(48591609)> CPU CMD: Exec 0266: 00 60 4397 1505 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591610)> CPU DETAIL: M4 Address Modifier: 0045 
DBG(48591610)> CPU DETAIL: Read R 0442: 0000000000000000 
DBG(48591611)> CPU DETAIL: Write 1505: 0000000000000000 
DBG(48591613)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591614)> CPU DETAIL: Read R 0266: 0060439715050000 
DBG(48591615)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591616)> CPU DETAIL: Result: 0060439715060000 
DBG(48591617)> CPU DETAIL: Write 0266: 0060439715060000 
DBG(48591619)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591620)> CPU DETAIL: Read R 1625: 0000000000000104 
DBG(48591621)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591622)> CPU DETAIL: Result: 0000000000000105 
DBG(48591623)> CPU DETAIL: Write 1625: 0000000000000105 
DBG(48591625)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591626)> CPU DETAIL: M4: 0046 
DBG(48591627)> CPU DETAIL: M6: 0026 
DBG(48591628)> CPU DETAIL: M8: 0009 
DBG(48591631)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591632)> CPU DETAIL: M8: 0010 
DBG(48591633)> CPU DETAIL: Transfer to T 
DBG(48591635)> CPU CMD: Exec 0266: 00 60 4397 1506 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591636)> CPU DETAIL: M4 Address Modifier: 0046 
DBG(48591636)> CPU DETAIL: Read R 0443: 0000000232090000 
DBG(48591637)> CPU DETAIL: Write 1506: 0000000232090000 
DBG(48591639)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591640)> CPU DETAIL: Read R 0266: 0060439715060000 
DBG(48591641)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591642)> CPU DETAIL: Result: 0060439715070000 
DBG(48591643)> CPU DETAIL: Write 0266: 0060439715070000 
DBG(48591645)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591646)> CPU DETAIL: Read R 1625: 0000000000000105 
DBG(48591647)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591648)> CPU DETAIL: Result: 0000000000000106 
DBG(48591649)> CPU DETAIL: Write 1625: 0000000000000106 
DBG(48591651)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591652)> CPU DETAIL: M4: 0047 
DBG(48591653)> CPU DETAIL: M6: 0026 
DBG(48591654)> CPU DETAIL: M8: 0010 
DBG(48591657)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591658)> CPU DETAIL: M8: 0011 
DBG(48591659)> CPU DETAIL: Transfer to T 
DBG(48591661)> CPU CMD: Exec 0266: 00 60 4397 1507 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591662)> CPU DETAIL: M4 Address Modifier: 0047 
DBG(48591662)> CPU DETAIL: Read R 0444: 0000000000000000 
DBG(48591663)> CPU DETAIL: Write 1507: 0000000000000000 
DBG(48591665)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591666)> CPU DETAIL: Read R 0266: 0060439715070000 
DBG(48591667)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591668)> CPU DETAIL: Result: 0060439715080000 
DBG(48591669)> CPU DETAIL: Write 0266: 0060439715080000 
DBG(48591671)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591672)> CPU DETAIL: Read R 1625: 0000000000000106 
DBG(48591673)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591674)> CPU DETAIL: Result: 0000000000000107 
DBG(48591675)> CPU DETAIL: Write 1625: 0000000000000107 
DBG(48591677)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591678)> CPU DETAIL: M4: 0048 
DBG(48591679)> CPU DETAIL: M6: 0026 
DBG(48591680)> CPU DETAIL: M8: 0011 
DBG(48591683)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591684)> CPU DETAIL: M8: 0012 
DBG(48591685)> CPU DETAIL: Transfer to T 
DBG(48591687)> CPU CMD: Exec 0266: 00 60 4397 1508 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48591688)> CPU DETAIL: M4 Address Modifier: 0048 
DBG(48591688)> CPU DETAIL: Read R 0445: 0000000000000000 
DBG(48591689)> CPU DETAIL: Write 1508: 0000000000000000 
DBG(48591691)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48591692)> CPU DETAIL: Read R 0266: 0060439715080000 
DBG(48591693)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591694)> CPU DETAIL: Result: 0060439715090000 
DBG(48591695)> CPU DETAIL: Write 0266: 0060439715090000 
DBG(48591697)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48591698)> CPU DETAIL: Read R 1625: 0000000000000107 
DBG(48591699)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48591700)> CPU DETAIL: Result: 0000000000000108 
DBG(48591701)> CPU DETAIL: Write 1625: 0000000000000108 
DBG(48591703)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48591704)> CPU DETAIL: M4: 0049 
DBG(48591705)> CPU DETAIL: M6: 0026 
DBG(48591706)> CPU DETAIL: M8: 0012 
DBG(48591709)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48591710)> CPU DETAIL: M8: 0013 
DBG(48591713)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48591716)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48591717)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48591718)> CPU DETAIL: Transfer to T 
DBG(48591718)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48591720)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48591721)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48591722)> CPU DETAIL: Read S 1606: 0000000000000049 
DBG(48591723)> CPU DETAIL: Result: 0000000000000032 
DBG(48591726)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48591727)> CPU DETAIL: REG1: 0000000000000032
DBG(48591727)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48591729)> CPU CMD: Exec 0124: 00 60 0452 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48591730)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48591731)> CPU DETAIL: Write 1608: 3334444455660103 
DBG(48591733)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48591734)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48591734)> CPU DETAIL: Read R 0446: 0190000000141112 
DBG(48591735)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000019 
DBG(48591736)> CPU DETAIL: Write 1607: 0000000000000019 
DBG(48591738)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48591739)> CPU DETAIL: Read R 1608: 3334444455660103 
DBG(48591740)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48591741)> CPU DETAIL: Result: 0000000000000100 
DBG(48591742)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48591743)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48591745)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48591746)> CPU DETAIL: Read R 1608: 3334444455660103 
DBG(48591747)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48591748)> CPU DETAIL: Result: 0000000000000003 
DBG(48591749)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48591751)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48591752)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48591753)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48591754)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48591755)> CPU DETAIL: Transfer to T 
DBG(48591757)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48591758)> CPU DETAIL: Read R 1610: 0000000000000003 
DBG(48591759)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48591760)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(48591761)> CPU DETAIL: Transfer to T 
DBG(48591763)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48591764)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48591765)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48591766)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48591766)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48591767)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48591768)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48591769)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48591771)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48591772)> CPU DETAIL: Read R 1610: 0000000000000003 
DBG(48591773)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48591774)> CPU DETAIL: Float: REG1: 88 0 3 0000 0000 0000 (0.000000)
DBG(48591774)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48591775)> CPU DETAIL: Result: 84 0 9 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48591776)> CPU DETAIL: Shift : 96 0 0 0000 0000 0009 00000000 00000000 (0.000000)
DBG(48591777)> CPU DETAIL: Write 1610: 9600000000000009 
DBG(48591779)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48591780)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48591781)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48591782)> CPU DETAIL: Result: 0000000000000003 
DBG(48591783)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48591785)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48591786)> CPU DETAIL: Read R 1610: 9600000000000009 
DBG(48591787)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48591788)> CPU DETAIL: Result: 0000000000000009 
DBG(48591789)> CPU DETAIL: Write 1610: 0000000000000009 
DBG(48591791)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48591792)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48591793)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001900000000 
DBG(48591796)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48591797)> CPU DETAIL: Read R 0124: 0060045216080000 
DBG(48591798)> CPU DETAIL: Result: 0060047116080000 
DBG(48591799)> CPU DETAIL: Write 0124: 0060047116080000 
DBG(48591801)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48591802)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48591803)> CPU DETAIL: Read S 1606: 0000000000000049 
DBG(48591804)> CPU DETAIL: Result: 0000000000000068 
DBG(48591805)> CPU DETAIL: Write 1606: 0000000000000068 
DBG(48591807)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48591810)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48591811)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48591812)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48591813)> CPU DETAIL: Result: 0000000000000055 
DBG(48591816)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48591817)> CPU DETAIL: REG1: 0000000000000055
DBG(48591817)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48591819)> CPU CMD: Exec 0149: 00 60 1031 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48591820)> CPU DETAIL: Read R 1031: 3335444455660201 
DBG(48591821)> CPU DETAIL: Write 1616: 3335444455660201 
DBG(48591823)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48591824)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48591824)> CPU DETAIL: Read R 1025: 0160000000141013 
DBG(48591825)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48591826)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48591828)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48591829)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48591830)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48591831)> CPU DETAIL: Result: 0000000000000200 
DBG(48591832)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48591833)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48591835)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48591836)> CPU DETAIL: Read R 1616: 3335444455660201 
DBG(48591837)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48591838)> CPU DETAIL: Result: 0000000000000001 
DBG(48591839)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48591841)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48591842)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48591843)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48591844)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48591845)> CPU DETAIL: Transfer to T 
DBG(48591847)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48591848)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48591849)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48591850)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48591850)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48591851)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48591852)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48591853)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48591855)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48591856)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48591857)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48591858)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48591858)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48591859)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48591860)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48591861)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48591863)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48591864)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48591865)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48591868)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48591869)> CPU DETAIL: Read R 0149: 0060103116160000 
DBG(48591870)> CPU DETAIL: Result: 0060104716160000 
DBG(48591871)> CPU DETAIL: Write 0149: 0060104716160000 
DBG(48591873)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48591874)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48591875)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48591876)> CPU DETAIL: Result: 0000000000000006 
DBG(48591877)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48591879)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48591880)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48591881)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48591882)> CPU DETAIL: Result: 0000000000000003 
DBG(48591883)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48591885)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48591886)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48591887)> CPU DETAIL: Read S 1615: 0000000000000026 
DBG(48591888)> CPU DETAIL: Result: 0000000000000042 
DBG(48591889)> CPU DETAIL: Write 1615: 0000000000000042 
DBG(48591891)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48591892)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48591893)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48591896)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48591897)> CPU DETAIL: Read R 0167: 0658000100260165 
DBG(48591898)> CPU DETAIL: Result: 0658000100420165 
DBG(48591899)> CPU DETAIL: Write 0167: 0658000100420165 
DBG(48591901)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591902)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48591902)> CPU DETAIL: Read R 1025: 0160000000141013 
DBG(48591903)> CPU DETAIL: Write 0598: 0160000000141013 
DBG(48591905)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591906)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48591907)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591908)> CPU DETAIL: Result: 0060699905990000 
DBG(48591909)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48591911)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591912)> CPU DETAIL: M6: 0027 
DBG(48591913)> CPU DETAIL: Transfer to T 
DBG(48591915)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591916)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48591916)> CPU DETAIL: Read R 1026: 0100000233020003 
DBG(48591917)> CPU DETAIL: Write 0599: 0100000233020003 
DBG(48591919)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591920)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48591921)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591922)> CPU DETAIL: Result: 0060699906000000 
DBG(48591923)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48591925)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591926)> CPU DETAIL: M6: 0028 
DBG(48591927)> CPU DETAIL: Transfer to T 
DBG(48591929)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591930)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48591930)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48591931)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48591933)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591934)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48591935)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591936)> CPU DETAIL: Result: 0060699906010000 
DBG(48591937)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48591939)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591940)> CPU DETAIL: M6: 0029 
DBG(48591941)> CPU DETAIL: Transfer to T 
DBG(48591943)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591944)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(48591944)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(48591945)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48591947)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591948)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48591949)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591950)> CPU DETAIL: Result: 0060699906020000 
DBG(48591951)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48591953)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591954)> CPU DETAIL: M6: 0030 
DBG(48591955)> CPU DETAIL: Transfer to T 
DBG(48591957)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591958)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(48591958)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(48591959)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48591961)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591962)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48591963)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591964)> CPU DETAIL: Result: 0060699906030000 
DBG(48591965)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48591967)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591968)> CPU DETAIL: M6: 0031 
DBG(48591969)> CPU DETAIL: Transfer to T 
DBG(48591971)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591972)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(48591972)> CPU DETAIL: Read R 1030: 0000000000000000 
DBG(48591973)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48591975)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591976)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48591977)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591978)> CPU DETAIL: Result: 0060699906040000 
DBG(48591979)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48591981)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591982)> CPU DETAIL: M6: 0032 
DBG(48591983)> CPU DETAIL: Transfer to T 
DBG(48591985)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48591986)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(48591986)> CPU DETAIL: Read R 1031: 3335444455660201 
DBG(48591987)> CPU DETAIL: Write 0604: 3335444455660201 
DBG(48591989)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48591990)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48591991)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48591992)> CPU DETAIL: Result: 0060699906050000 
DBG(48591993)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48591995)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48591996)> CPU DETAIL: M6: 0033 
DBG(48591997)> CPU DETAIL: Transfer to T 
DBG(48591999)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592000)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(48592000)> CPU DETAIL: Read R 1032: 0000000233000000 
DBG(48592001)> CPU DETAIL: Write 0605: 0000000233000000 
DBG(48592003)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592004)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48592005)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592006)> CPU DETAIL: Result: 0060699906060000 
DBG(48592007)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48592009)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592010)> CPU DETAIL: M6: 0034 
DBG(48592011)> CPU DETAIL: Transfer to T 
DBG(48592013)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592014)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(48592014)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(48592015)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48592017)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592018)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48592019)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592020)> CPU DETAIL: Result: 0060699906070000 
DBG(48592021)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48592023)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592024)> CPU DETAIL: M6: 0035 
DBG(48592025)> CPU DETAIL: Transfer to T 
DBG(48592027)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592028)> CPU DETAIL: M6 Address Modifier: 0035 
DBG(48592028)> CPU DETAIL: Read R 1034: 0000000000000000 
DBG(48592029)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48592031)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592032)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48592033)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592034)> CPU DETAIL: Result: 0060699906080000 
DBG(48592035)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48592037)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592038)> CPU DETAIL: M6: 0036 
DBG(48592039)> CPU DETAIL: Transfer to T 
DBG(48592041)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592042)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(48592042)> CPU DETAIL: Read R 1035: 0000000233010000 
DBG(48592043)> CPU DETAIL: Write 0608: 0000000233010000 
DBG(48592045)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592046)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48592047)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592048)> CPU DETAIL: Result: 0060699906090000 
DBG(48592049)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48592051)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592052)> CPU DETAIL: M6: 0037 
DBG(48592053)> CPU DETAIL: Transfer to T 
DBG(48592055)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592056)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(48592056)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(48592057)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48592059)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592060)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48592061)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592062)> CPU DETAIL: Result: 0060699906100000 
DBG(48592063)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48592065)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592066)> CPU DETAIL: M6: 0038 
DBG(48592067)> CPU DETAIL: Transfer to T 
DBG(48592069)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592070)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(48592070)> CPU DETAIL: Read R 1037: 0000000000000000 
DBG(48592071)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48592073)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592074)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48592075)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592076)> CPU DETAIL: Result: 0060699906110000 
DBG(48592077)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48592079)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592080)> CPU DETAIL: M6: 0039 
DBG(48592081)> CPU DETAIL: Transfer to T 
DBG(48592083)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592084)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(48592084)> CPU DETAIL: Read R 1038: 0000000233030000 
DBG(48592085)> CPU DETAIL: Write 0611: 0000000233030000 
DBG(48592087)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592088)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48592089)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592090)> CPU DETAIL: Result: 0060699906120000 
DBG(48592091)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48592093)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592094)> CPU DETAIL: M6: 0040 
DBG(48592095)> CPU DETAIL: Transfer to T 
DBG(48592097)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592098)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(48592098)> CPU DETAIL: Read R 1039: 0000000000000000 
DBG(48592099)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48592101)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592102)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48592103)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592104)> CPU DETAIL: Result: 0060699906130000 
DBG(48592105)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48592107)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592108)> CPU DETAIL: M6: 0041 
DBG(48592109)> CPU DETAIL: Transfer to T 
DBG(48592111)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592112)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(48592112)> CPU DETAIL: Read R 1040: 0000000000000000 
DBG(48592113)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48592115)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592116)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48592117)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592118)> CPU DETAIL: Result: 0060699906140000 
DBG(48592119)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48592121)> CPU CMD: Exec 0167: 06 58 0001 0042 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592122)> CPU DETAIL: M6: 0042 
DBG(48592125)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48592126)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48592127)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48592129)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48592132)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48592133)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48592134)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48592137)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48592138)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48592139)> CPU DETAIL: Result: 0000001000000000 
DBG(48592142)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48592143)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48592144)> CPU DETAIL: Result: 0042440716550000 
DBG(48592145)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48592147)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48592148)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48592149)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592150)> CPU DETAIL: Result: 0000000233020000 
DBG(48592151)> CPU DETAIL: Write 1620: 0000000233020000 
DBG(48592153)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48592154)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592154)> CPU DETAIL: Read R 0456: 0000000233020000 
DBG(48592155)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592156)> CPU DETAIL: Result: 0000000233020000 
DBG(48592159)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48592160)> CPU DETAIL: Read S 1620: 0000000233020000 
DBG(48592161)> CPU DETAIL: Result: 0000000000000000 
DBG(48592164)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48592165)> CPU DETAIL: REG1: 0000000000000000
DBG(48592165)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48592167)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48592168)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48592169)> CPU DETAIL: Transfer to T 
DBG(48592169)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48592171)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48592172)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48592173)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592174)> CPU DETAIL: Result: 0000000233000000 
DBG(48592175)> CPU DETAIL: Write 1620: 0000000233000000 
DBG(48592177)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48592178)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592178)> CPU DETAIL: Read R 0447: 0000000233010000 
DBG(48592179)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592180)> CPU DETAIL: Result: 0000000233010000 
DBG(48592183)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48592184)> CPU DETAIL: Read R 1620: 0000000233000000 
DBG(48592185)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48592188)> CPU CMD: Exec 0230: 00 40 1644 0227 0227   incr field_R on instr 0227 to read next predecessor on list   
DBG(48592189)> CPU DETAIL: Read R 1644: 0000000300000000 
DBG(48592190)> CPU DETAIL: Read S 0227: 0042060516551620 
DBG(48592191)> CPU DETAIL: Result: 0042060816551620 
DBG(48592192)> CPU DETAIL: Write 0227: 0042060816551620 
DBG(48592194)> CPU CMD: Exec 0231: 00 40 1707 1624 1624   incr (1624 number of words scanned on predecessor list)   
DBG(48592195)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48592196)> CPU DETAIL: Read S 1624: 0000000000000000 
DBG(48592197)> CPU DETAIL: Result: 0000000000000003 
DBG(48592198)> CPU DETAIL: Write 1624: 0000000000000003 
DBG(48592200)> CPU CMD: Exec 0232: 00 72 0000 1617 0227   if <> (1617 num of words used by predecessor list) goto 0227: loop because p 
DBG(48592201)> CPU DETAIL: Read S 1617: 0000000000000006 
DBG(48592202)> CPU DETAIL: Diff: REG1: 9999999999999997
DBG(48592203)> CPU DETAIL: Transfer to T 
DBG(48592205)> CPU CMD: Exec 0227: 00 42 0608 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48592206)> CPU DETAIL: Read R 0608: 0000000233010000 
DBG(48592207)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592208)> CPU DETAIL: Result: 0000000233010000 
DBG(48592209)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48592211)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48592212)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592212)> CPU DETAIL: Read R 0447: 0000000233010000 
DBG(48592213)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48592214)> CPU DETAIL: Result: 0000000233010000 
DBG(48592217)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48592218)> CPU DETAIL: Read R 1620: 0000000233010000 
DBG(48592219)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48592220)> CPU DETAIL: Transfer to T 
DBG(48592222)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48592223)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48592224)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48592226)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48592227)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48592228)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48592230)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48592231)> CPU DETAIL: Read R 0599: 0100000233020003 
DBG(48592232)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48592233)> CPU DETAIL: Result: 0200000233020003 
DBG(48592234)> CPU DETAIL: Write 0599: 0200000233020003 
DBG(48592236)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48592237)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000002 
DBG(48592238)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48592240)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48592241)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48592242)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48592243)> CPU DETAIL: Result: 0000000000000200 
DBG(48592244)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48592247)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48592248)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48592249)> CPU DETAIL: Result: 0000000000000000 
DBG(48592252)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48592253)> CPU DETAIL: REG1: 0000000000000000
DBG(48592253)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48592255)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48592256)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48592257)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48592259)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48592260)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48592261)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48592263)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48592264)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48592265)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48592266)> CPU DETAIL: Result: 0000000000000200 
DBG(48592267)> CPU DETAIL: Word Shift 12 digits left: REG1: 0200000000000000 
DBG(48592270)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48592271)> CPU DETAIL: Read R 0599: 0200000233020003 
DBG(48592272)> CPU DETAIL: Result: 0000000233020003 
DBG(48592273)> CPU DETAIL: Write 0599: 0000000233020003 
DBG(48592275)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48592276)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48592277)> CPU DETAIL: Read S 1626: 0000000000000026 
DBG(48592278)> CPU DETAIL: Result: 0000000000000042 
DBG(48592281)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48592282)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48592283)> CPU DETAIL: Result: 0000000000000158 
DBG(48592286)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48592287)> CPU DETAIL: REG1: 0000000000000158
DBG(48592287)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48592289)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48592290)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48592291)> CPU DETAIL: Transfer to T 
DBG(48592291)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48592293)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48592294)> CPU DETAIL: M4: 0049 
DBG(48592295)> CPU DETAIL: M6: 0042 
DBG(48592296)> CPU DETAIL: Clear M8
DBG(48592296)> CPU DETAIL: M8: 0000 
DBG(48592299)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48592300)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48592301)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48592304)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48592305)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48592306)> CPU DETAIL: Result: 0858000100160296 
DBG(48592307)> CPU DETAIL: Write 0299: 0858000100160296 
DBG(48592309)> CPU CMD: Exec 0296: 00 60 8598 0824 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592310)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48592310)> CPU DETAIL: Read R 0598: 0160000000141013 
DBG(48592311)> CPU DETAIL: Write 0824: 0160000000141013 
DBG(48592313)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592314)> CPU DETAIL: Read R 0296: 0060859808240000 
DBG(48592315)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592316)> CPU DETAIL: Result: 0060859808250000 
DBG(48592317)> CPU DETAIL: Write 0296: 0060859808250000 
DBG(48592319)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592320)> CPU DETAIL: Read R 1626: 0000000000000026 
DBG(48592321)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592322)> CPU DETAIL: Result: 0000000000000027 
DBG(48592323)> CPU DETAIL: Write 1626: 0000000000000027 
DBG(48592325)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592326)> CPU DETAIL: M8: 0001 
DBG(48592327)> CPU DETAIL: Transfer to T 
DBG(48592329)> CPU CMD: Exec 0296: 00 60 8598 0825 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592330)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48592330)> CPU DETAIL: Read R 0599: 0000000233020003 
DBG(48592331)> CPU DETAIL: Write 0825: 0000000233020003 
DBG(48592333)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592334)> CPU DETAIL: Read R 0296: 0060859808250000 
DBG(48592335)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592336)> CPU DETAIL: Result: 0060859808260000 
DBG(48592337)> CPU DETAIL: Write 0296: 0060859808260000 
DBG(48592339)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592340)> CPU DETAIL: Read R 1626: 0000000000000027 
DBG(48592341)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592342)> CPU DETAIL: Result: 0000000000000028 
DBG(48592343)> CPU DETAIL: Write 1626: 0000000000000028 
DBG(48592345)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592346)> CPU DETAIL: M8: 0002 
DBG(48592347)> CPU DETAIL: Transfer to T 
DBG(48592349)> CPU CMD: Exec 0296: 00 60 8598 0826 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592350)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48592350)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48592351)> CPU DETAIL: Write 0826: 0000000000000000 
DBG(48592353)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592354)> CPU DETAIL: Read R 0296: 0060859808260000 
DBG(48592355)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592356)> CPU DETAIL: Result: 0060859808270000 
DBG(48592357)> CPU DETAIL: Write 0296: 0060859808270000 
DBG(48592359)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592360)> CPU DETAIL: Read R 1626: 0000000000000028 
DBG(48592361)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592362)> CPU DETAIL: Result: 0000000000000029 
DBG(48592363)> CPU DETAIL: Write 1626: 0000000000000029 
DBG(48592365)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592366)> CPU DETAIL: M8: 0003 
DBG(48592367)> CPU DETAIL: Transfer to T 
DBG(48592369)> CPU CMD: Exec 0296: 00 60 8598 0827 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592370)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48592370)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48592371)> CPU DETAIL: Write 0827: 0000000000000000 
DBG(48592373)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592374)> CPU DETAIL: Read R 0296: 0060859808270000 
DBG(48592375)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592376)> CPU DETAIL: Result: 0060859808280000 
DBG(48592377)> CPU DETAIL: Write 0296: 0060859808280000 
DBG(48592379)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592380)> CPU DETAIL: Read R 1626: 0000000000000029 
DBG(48592381)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592382)> CPU DETAIL: Result: 0000000000000030 
DBG(48592383)> CPU DETAIL: Write 1626: 0000000000000030 
DBG(48592385)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592386)> CPU DETAIL: M8: 0004 
DBG(48592387)> CPU DETAIL: Transfer to T 
DBG(48592389)> CPU CMD: Exec 0296: 00 60 8598 0828 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592390)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48592390)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48592391)> CPU DETAIL: Write 0828: 0000000000000000 
DBG(48592393)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592394)> CPU DETAIL: Read R 0296: 0060859808280000 
DBG(48592395)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592396)> CPU DETAIL: Result: 0060859808290000 
DBG(48592397)> CPU DETAIL: Write 0296: 0060859808290000 
DBG(48592399)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592400)> CPU DETAIL: Read R 1626: 0000000000000030 
DBG(48592401)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592402)> CPU DETAIL: Result: 0000000000000031 
DBG(48592403)> CPU DETAIL: Write 1626: 0000000000000031 
DBG(48592405)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592406)> CPU DETAIL: M8: 0005 
DBG(48592407)> CPU DETAIL: Transfer to T 
DBG(48592409)> CPU CMD: Exec 0296: 00 60 8598 0829 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592410)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48592410)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48592411)> CPU DETAIL: Write 0829: 0000000000000000 
DBG(48592413)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592414)> CPU DETAIL: Read R 0296: 0060859808290000 
DBG(48592415)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592416)> CPU DETAIL: Result: 0060859808300000 
DBG(48592417)> CPU DETAIL: Write 0296: 0060859808300000 
DBG(48592419)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592420)> CPU DETAIL: Read R 1626: 0000000000000031 
DBG(48592421)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592422)> CPU DETAIL: Result: 0000000000000032 
DBG(48592423)> CPU DETAIL: Write 1626: 0000000000000032 
DBG(48592425)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592426)> CPU DETAIL: M8: 0006 
DBG(48592427)> CPU DETAIL: Transfer to T 
DBG(48592429)> CPU CMD: Exec 0296: 00 60 8598 0830 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592430)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48592430)> CPU DETAIL: Read R 0604: 3335444455660201 
DBG(48592431)> CPU DETAIL: Write 0830: 3335444455660201 
DBG(48592433)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592434)> CPU DETAIL: Read R 0296: 0060859808300000 
DBG(48592435)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592436)> CPU DETAIL: Result: 0060859808310000 
DBG(48592437)> CPU DETAIL: Write 0296: 0060859808310000 
DBG(48592439)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592440)> CPU DETAIL: Read R 1626: 0000000000000032 
DBG(48592441)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592442)> CPU DETAIL: Result: 0000000000000033 
DBG(48592443)> CPU DETAIL: Write 1626: 0000000000000033 
DBG(48592445)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592446)> CPU DETAIL: M8: 0007 
DBG(48592447)> CPU DETAIL: Transfer to T 
DBG(48592449)> CPU CMD: Exec 0296: 00 60 8598 0831 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592450)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48592450)> CPU DETAIL: Read R 0605: 0000000233000000 
DBG(48592451)> CPU DETAIL: Write 0831: 0000000233000000 
DBG(48592453)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592454)> CPU DETAIL: Read R 0296: 0060859808310000 
DBG(48592455)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592456)> CPU DETAIL: Result: 0060859808320000 
DBG(48592457)> CPU DETAIL: Write 0296: 0060859808320000 
DBG(48592459)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592460)> CPU DETAIL: Read R 1626: 0000000000000033 
DBG(48592461)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592462)> CPU DETAIL: Result: 0000000000000034 
DBG(48592463)> CPU DETAIL: Write 1626: 0000000000000034 
DBG(48592465)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592466)> CPU DETAIL: M8: 0008 
DBG(48592467)> CPU DETAIL: Transfer to T 
DBG(48592469)> CPU CMD: Exec 0296: 00 60 8598 0832 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592470)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48592470)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48592471)> CPU DETAIL: Write 0832: 0000000000000000 
DBG(48592473)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592474)> CPU DETAIL: Read R 0296: 0060859808320000 
DBG(48592475)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592476)> CPU DETAIL: Result: 0060859808330000 
DBG(48592477)> CPU DETAIL: Write 0296: 0060859808330000 
DBG(48592479)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592480)> CPU DETAIL: Read R 1626: 0000000000000034 
DBG(48592481)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592482)> CPU DETAIL: Result: 0000000000000035 
DBG(48592483)> CPU DETAIL: Write 1626: 0000000000000035 
DBG(48592485)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592486)> CPU DETAIL: M8: 0009 
DBG(48592487)> CPU DETAIL: Transfer to T 
DBG(48592489)> CPU CMD: Exec 0296: 00 60 8598 0833 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592490)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48592490)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48592491)> CPU DETAIL: Write 0833: 0000000000000000 
DBG(48592493)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592494)> CPU DETAIL: Read R 0296: 0060859808330000 
DBG(48592495)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592496)> CPU DETAIL: Result: 0060859808340000 
DBG(48592497)> CPU DETAIL: Write 0296: 0060859808340000 
DBG(48592499)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592500)> CPU DETAIL: Read R 1626: 0000000000000035 
DBG(48592501)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592502)> CPU DETAIL: Result: 0000000000000036 
DBG(48592503)> CPU DETAIL: Write 1626: 0000000000000036 
DBG(48592505)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592506)> CPU DETAIL: M8: 0010 
DBG(48592507)> CPU DETAIL: Transfer to T 
DBG(48592509)> CPU CMD: Exec 0296: 00 60 8598 0834 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592510)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48592510)> CPU DETAIL: Read R 0608: 0000000233010000 
DBG(48592511)> CPU DETAIL: Write 0834: 0000000233010000 
DBG(48592513)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592514)> CPU DETAIL: Read R 0296: 0060859808340000 
DBG(48592515)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592516)> CPU DETAIL: Result: 0060859808350000 
DBG(48592517)> CPU DETAIL: Write 0296: 0060859808350000 
DBG(48592519)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592520)> CPU DETAIL: Read R 1626: 0000000000000036 
DBG(48592521)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592522)> CPU DETAIL: Result: 0000000000000037 
DBG(48592523)> CPU DETAIL: Write 1626: 0000000000000037 
DBG(48592525)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592526)> CPU DETAIL: M8: 0011 
DBG(48592527)> CPU DETAIL: Transfer to T 
DBG(48592529)> CPU CMD: Exec 0296: 00 60 8598 0835 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592530)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48592530)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48592531)> CPU DETAIL: Write 0835: 0000000000000000 
DBG(48592533)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592534)> CPU DETAIL: Read R 0296: 0060859808350000 
DBG(48592535)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592536)> CPU DETAIL: Result: 0060859808360000 
DBG(48592537)> CPU DETAIL: Write 0296: 0060859808360000 
DBG(48592539)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592540)> CPU DETAIL: Read R 1626: 0000000000000037 
DBG(48592541)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592542)> CPU DETAIL: Result: 0000000000000038 
DBG(48592543)> CPU DETAIL: Write 1626: 0000000000000038 
DBG(48592545)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592546)> CPU DETAIL: M8: 0012 
DBG(48592547)> CPU DETAIL: Transfer to T 
DBG(48592549)> CPU CMD: Exec 0296: 00 60 8598 0836 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592550)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48592550)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48592551)> CPU DETAIL: Write 0836: 0000000000000000 
DBG(48592553)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592554)> CPU DETAIL: Read R 0296: 0060859808360000 
DBG(48592555)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592556)> CPU DETAIL: Result: 0060859808370000 
DBG(48592557)> CPU DETAIL: Write 0296: 0060859808370000 
DBG(48592559)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592560)> CPU DETAIL: Read R 1626: 0000000000000038 
DBG(48592561)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592562)> CPU DETAIL: Result: 0000000000000039 
DBG(48592563)> CPU DETAIL: Write 1626: 0000000000000039 
DBG(48592565)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592566)> CPU DETAIL: M8: 0013 
DBG(48592567)> CPU DETAIL: Transfer to T 
DBG(48592569)> CPU CMD: Exec 0296: 00 60 8598 0837 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592570)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48592570)> CPU DETAIL: Read R 0611: 0000000233030000 
DBG(48592571)> CPU DETAIL: Write 0837: 0000000233030000 
DBG(48592573)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592574)> CPU DETAIL: Read R 0296: 0060859808370000 
DBG(48592575)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592576)> CPU DETAIL: Result: 0060859808380000 
DBG(48592577)> CPU DETAIL: Write 0296: 0060859808380000 
DBG(48592579)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592580)> CPU DETAIL: Read R 1626: 0000000000000039 
DBG(48592581)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592582)> CPU DETAIL: Result: 0000000000000040 
DBG(48592583)> CPU DETAIL: Write 1626: 0000000000000040 
DBG(48592585)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592586)> CPU DETAIL: M8: 0014 
DBG(48592587)> CPU DETAIL: Transfer to T 
DBG(48592589)> CPU CMD: Exec 0296: 00 60 8598 0838 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592590)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48592590)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48592591)> CPU DETAIL: Write 0838: 0000000000000000 
DBG(48592593)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592594)> CPU DETAIL: Read R 0296: 0060859808380000 
DBG(48592595)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592596)> CPU DETAIL: Result: 0060859808390000 
DBG(48592597)> CPU DETAIL: Write 0296: 0060859808390000 
DBG(48592599)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592600)> CPU DETAIL: Read R 1626: 0000000000000040 
DBG(48592601)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592602)> CPU DETAIL: Result: 0000000000000041 
DBG(48592603)> CPU DETAIL: Write 1626: 0000000000000041 
DBG(48592605)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592606)> CPU DETAIL: M8: 0015 
DBG(48592607)> CPU DETAIL: Transfer to T 
DBG(48592609)> CPU CMD: Exec 0296: 00 60 8598 0839 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48592610)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48592610)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48592611)> CPU DETAIL: Write 0839: 0000000000000000 
DBG(48592613)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48592614)> CPU DETAIL: Read R 0296: 0060859808390000 
DBG(48592615)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592616)> CPU DETAIL: Result: 0060859808400000 
DBG(48592617)> CPU DETAIL: Write 0296: 0060859808400000 
DBG(48592619)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48592620)> CPU DETAIL: Read R 1626: 0000000000000041 
DBG(48592621)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48592622)> CPU DETAIL: Result: 0000000000000042 
DBG(48592623)> CPU DETAIL: Write 1626: 0000000000000042 
DBG(48592625)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48592626)> CPU DETAIL: M8: 0016 
DBG(48592629)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48592632)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48592633)> CPU DETAIL: Transfer to T 
DBG(48592635)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48592636)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48592637)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48592640)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48592641)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592641)> CPU DETAIL: Read R 0447: 0000000233010000 
DBG(48592642)> CPU DETAIL: Result: 0001000233010000 
DBG(48592643)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592643)> CPU DETAIL: Write 0447: 0001000233010000 
DBG(48592645)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48592646)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592646)> CPU DETAIL: Read R 0447: 0001000233010000 
DBG(48592647)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48592648)> CPU DETAIL: Result: 0001000000000000 
DBG(48592649)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48592650)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48592652)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48592653)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48592653)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48592654)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48592655)> CPU DETAIL: Result: 0000000000000003 
DBG(48592658)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48592659)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48592660)> CPU DETAIL: Result: 0000000000000002 
DBG(48592663)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48592664)> CPU DETAIL: REG1: 0000000000000002
DBG(48592664)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48592666)> CPU CMD: Exec 0249: 00 40 1672 1644 1672   (1672) = +3 to point to next successor   
DBG(48592667)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48592668)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48592669)> CPU DETAIL: Result: 0000001000000000 
DBG(48592670)> CPU DETAIL: Write 1672: 0000001000000000 
DBG(48592672)> CPU CMD: Exec 0250: 00 60 0000 0000 0141   goto 0141 read event from tape 1 input block   
DBG(48592673)> CPU DETAIL: Transfer to T 
DBG(48592675)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48592676)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48592677)> CPU DETAIL: Read S 1615: 0000000000000042 
DBG(48592678)> CPU DETAIL: Result: 0000000000000039 
DBG(48592681)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48592682)> CPU DETAIL: REG1: 0000000000000039
DBG(48592682)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48592684)> CPU CMD: Exec 0149: 00 60 1047 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48592685)> CPU DETAIL: Read R 1047: 3336000000000201 
DBG(48592686)> CPU DETAIL: Write 1616: 3336000000000201 
DBG(48592688)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48592689)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48592689)> CPU DETAIL: Read R 1041: 0160000000141014 
DBG(48592690)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48592691)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48592693)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48592694)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48592695)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48592696)> CPU DETAIL: Result: 0000000000000200 
DBG(48592697)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48592698)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48592700)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48592701)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48592702)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48592703)> CPU DETAIL: Result: 0000000000000001 
DBG(48592704)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48592706)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48592707)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48592708)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48592709)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48592710)> CPU DETAIL: Transfer to T 
DBG(48592712)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48592713)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48592714)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48592715)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48592715)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48592716)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48592717)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48592718)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48592720)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48592721)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48592722)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48592723)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48592723)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48592724)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48592725)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48592726)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48592728)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48592729)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48592730)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48592733)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48592734)> CPU DETAIL: Read R 0149: 0060104716160000 
DBG(48592735)> CPU DETAIL: Result: 0060106316160000 
DBG(48592736)> CPU DETAIL: Write 0149: 0060106316160000 
DBG(48592738)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48592739)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48592740)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48592741)> CPU DETAIL: Result: 0000000000000006 
DBG(48592742)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48592744)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48592745)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48592746)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48592747)> CPU DETAIL: Result: 0000000000000003 
DBG(48592748)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48592750)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48592751)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48592752)> CPU DETAIL: Read S 1615: 0000000000000042 
DBG(48592753)> CPU DETAIL: Result: 0000000000000058 
DBG(48592754)> CPU DETAIL: Write 1615: 0000000000000058 
DBG(48592756)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48592757)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48592758)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48592761)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48592762)> CPU DETAIL: Read R 0167: 0658000100420165 
DBG(48592763)> CPU DETAIL: Result: 0658000100580165 
DBG(48592764)> CPU DETAIL: Write 0167: 0658000100580165 
DBG(48592766)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592767)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(48592767)> CPU DETAIL: Read R 1041: 0160000000141014 
DBG(48592768)> CPU DETAIL: Write 0598: 0160000000141014 
DBG(48592770)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592771)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48592772)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592773)> CPU DETAIL: Result: 0060699905990000 
DBG(48592774)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48592776)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592777)> CPU DETAIL: M6: 0043 
DBG(48592778)> CPU DETAIL: Transfer to T 
DBG(48592780)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592781)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(48592781)> CPU DETAIL: Read R 1042: 0000000233030000 
DBG(48592782)> CPU DETAIL: Write 0599: 0000000233030000 
DBG(48592784)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592785)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48592786)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592787)> CPU DETAIL: Result: 0060699906000000 
DBG(48592788)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48592790)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592791)> CPU DETAIL: M6: 0044 
DBG(48592792)> CPU DETAIL: Transfer to T 
DBG(48592794)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592795)> CPU DETAIL: M6 Address Modifier: 0044 
DBG(48592795)> CPU DETAIL: Read R 1043: 0000000000000000 
DBG(48592796)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48592798)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592799)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48592800)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592801)> CPU DETAIL: Result: 0060699906010000 
DBG(48592802)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48592804)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592805)> CPU DETAIL: M6: 0045 
DBG(48592806)> CPU DETAIL: Transfer to T 
DBG(48592808)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592809)> CPU DETAIL: M6 Address Modifier: 0045 
DBG(48592809)> CPU DETAIL: Read R 1044: 0000000000000000 
DBG(48592810)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48592812)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592813)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48592814)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592815)> CPU DETAIL: Result: 0060699906020000 
DBG(48592816)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48592818)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592819)> CPU DETAIL: M6: 0046 
DBG(48592820)> CPU DETAIL: Transfer to T 
DBG(48592822)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592823)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(48592823)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(48592824)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48592826)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592827)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48592828)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592829)> CPU DETAIL: Result: 0060699906030000 
DBG(48592830)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48592832)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592833)> CPU DETAIL: M6: 0047 
DBG(48592834)> CPU DETAIL: Transfer to T 
DBG(48592836)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592837)> CPU DETAIL: M6 Address Modifier: 0047 
DBG(48592837)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(48592838)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48592840)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592841)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48592842)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592843)> CPU DETAIL: Result: 0060699906040000 
DBG(48592844)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48592846)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592847)> CPU DETAIL: M6: 0048 
DBG(48592848)> CPU DETAIL: Transfer to T 
DBG(48592850)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592851)> CPU DETAIL: M6 Address Modifier: 0048 
DBG(48592851)> CPU DETAIL: Read R 1047: 3336000000000201 
DBG(48592852)> CPU DETAIL: Write 0604: 3336000000000201 
DBG(48592854)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592855)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48592856)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592857)> CPU DETAIL: Result: 0060699906050000 
DBG(48592858)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48592860)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592861)> CPU DETAIL: M6: 0049 
DBG(48592862)> CPU DETAIL: Transfer to T 
DBG(48592864)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592865)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(48592865)> CPU DETAIL: Read R 1048: 0000000233010000 
DBG(48592866)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48592868)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592869)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48592870)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592871)> CPU DETAIL: Result: 0060699906060000 
DBG(48592872)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48592874)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592875)> CPU DETAIL: M6: 0050 
DBG(48592876)> CPU DETAIL: Transfer to T 
DBG(48592878)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592879)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(48592879)> CPU DETAIL: Read R 1049: 0000000000000000 
DBG(48592880)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48592882)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592883)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48592884)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592885)> CPU DETAIL: Result: 0060699906070000 
DBG(48592886)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48592888)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592889)> CPU DETAIL: M6: 0051 
DBG(48592890)> CPU DETAIL: Transfer to T 
DBG(48592892)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592893)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(48592893)> CPU DETAIL: Read R 1050: 0000000000000000 
DBG(48592894)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48592896)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592897)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48592898)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592899)> CPU DETAIL: Result: 0060699906080000 
DBG(48592900)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48592902)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592903)> CPU DETAIL: M6: 0052 
DBG(48592904)> CPU DETAIL: Transfer to T 
DBG(48592906)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592907)> CPU DETAIL: M6 Address Modifier: 0052 
DBG(48592907)> CPU DETAIL: Read R 1051: 0000000233020000 
DBG(48592908)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48592910)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592911)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48592912)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592913)> CPU DETAIL: Result: 0060699906090000 
DBG(48592914)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48592916)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592917)> CPU DETAIL: M6: 0053 
DBG(48592918)> CPU DETAIL: Transfer to T 
DBG(48592920)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592921)> CPU DETAIL: M6 Address Modifier: 0053 
DBG(48592921)> CPU DETAIL: Read R 1052: 0000000000000000 
DBG(48592922)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48592924)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592925)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48592926)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592927)> CPU DETAIL: Result: 0060699906100000 
DBG(48592928)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48592930)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592931)> CPU DETAIL: M6: 0054 
DBG(48592932)> CPU DETAIL: Transfer to T 
DBG(48592934)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592935)> CPU DETAIL: M6 Address Modifier: 0054 
DBG(48592935)> CPU DETAIL: Read R 1053: 0000000000000000 
DBG(48592936)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48592938)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592939)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48592940)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592941)> CPU DETAIL: Result: 0060699906110000 
DBG(48592942)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48592944)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592945)> CPU DETAIL: M6: 0055 
DBG(48592946)> CPU DETAIL: Transfer to T 
DBG(48592948)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592949)> CPU DETAIL: M6 Address Modifier: 0055 
DBG(48592949)> CPU DETAIL: Read R 1054: 0000000233090000 
DBG(48592950)> CPU DETAIL: Write 0611: 0000000233090000 
DBG(48592952)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592953)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48592954)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592955)> CPU DETAIL: Result: 0060699906120000 
DBG(48592956)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48592958)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592959)> CPU DETAIL: M6: 0056 
DBG(48592960)> CPU DETAIL: Transfer to T 
DBG(48592962)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592963)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(48592963)> CPU DETAIL: Read R 1055: 0000000000000000 
DBG(48592964)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48592966)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592967)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48592968)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592969)> CPU DETAIL: Result: 0060699906130000 
DBG(48592970)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48592972)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592973)> CPU DETAIL: M6: 0057 
DBG(48592974)> CPU DETAIL: Transfer to T 
DBG(48592976)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48592977)> CPU DETAIL: M6 Address Modifier: 0057 
DBG(48592977)> CPU DETAIL: Read R 1056: 0000000000000000 
DBG(48592978)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48592980)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48592981)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48592982)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48592983)> CPU DETAIL: Result: 0060699906140000 
DBG(48592984)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48592986)> CPU CMD: Exec 0167: 06 58 0001 0058 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48592987)> CPU DETAIL: M6: 0058 
DBG(48592990)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48592991)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48592992)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48592994)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48592997)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48592998)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48592999)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48593002)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48593003)> CPU DETAIL: Read R 1672: 0000001000000000 
DBG(48593004)> CPU DETAIL: Result: 0000001300000000 
DBG(48593007)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48593008)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48593009)> CPU DETAIL: Result: 0042441016550000 
DBG(48593010)> CPU DETAIL: Write 0174: 0042441016550000 
DBG(48593012)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48593013)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48593014)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593015)> CPU DETAIL: Result: 0000000233030000 
DBG(48593016)> CPU DETAIL: Write 1620: 0000000233030000 
DBG(48593018)> CPU CMD: Exec 0174: 00 42 4410 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48593019)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593019)> CPU DETAIL: Read R 0459: 0000000233030000 
DBG(48593020)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593021)> CPU DETAIL: Result: 0000000233030000 
DBG(48593024)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48593025)> CPU DETAIL: Read S 1620: 0000000233030000 
DBG(48593026)> CPU DETAIL: Result: 0000000000000000 
DBG(48593029)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48593030)> CPU DETAIL: REG1: 0000000000000000
DBG(48593030)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48593032)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48593033)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48593034)> CPU DETAIL: Transfer to T 
DBG(48593034)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48593036)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48593037)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48593038)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593039)> CPU DETAIL: Result: 0000000233010000 
DBG(48593040)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48593042)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48593043)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593043)> CPU DETAIL: Read R 0447: 0001000233010000 
DBG(48593044)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593045)> CPU DETAIL: Result: 0000000233010000 
DBG(48593048)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48593049)> CPU DETAIL: Read R 1620: 0000000233010000 
DBG(48593050)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48593051)> CPU DETAIL: Transfer to T 
DBG(48593053)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48593054)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48593055)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48593057)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48593058)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48593059)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48593061)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48593062)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48593063)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48593064)> CPU DETAIL: Result: 0100000233030000 
DBG(48593065)> CPU DETAIL: Write 0599: 0100000233030000 
DBG(48593067)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48593068)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48593069)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48593071)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48593072)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48593073)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48593074)> CPU DETAIL: Result: 0000000000000200 
DBG(48593075)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48593078)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48593079)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48593080)> CPU DETAIL: Result: 0000000000000001 
DBG(48593083)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48593084)> CPU DETAIL: REG1: 0000000000000001
DBG(48593084)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593086)> CPU CMD: Exec 0241: 00 60 0177 0250 0000   ???: not all predecessors of tape 1 event found yet   
DBG(48593087)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48593088)> CPU DETAIL: Write 0250: 0060019701960179 
DBG(48593090)> CPU CMD: Exec 0242: 00 60 1667 0272 0000   ???   
DBG(48593091)> CPU DETAIL: Read R 1667: 0060169901960179 
DBG(48593092)> CPU DETAIL: Write 0272: 0060169901960179 
DBG(48593094)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48593095)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48593096)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48593099)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48593100)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593100)> CPU DETAIL: Read R 0447: 0001000233010000 
DBG(48593101)> CPU DETAIL: Result: 0002000233010000 
DBG(48593102)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593102)> CPU DETAIL: Write 0447: 0002000233010000 
DBG(48593104)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48593105)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593105)> CPU DETAIL: Read R 0447: 0002000233010000 
DBG(48593106)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48593107)> CPU DETAIL: Result: 0002000000000000 
DBG(48593108)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000002 
DBG(48593109)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48593111)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48593112)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593112)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48593113)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48593114)> CPU DETAIL: Result: 0000000000000003 
DBG(48593117)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48593118)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48593119)> CPU DETAIL: Result: 0000000000000001 
DBG(48593122)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48593123)> CPU DETAIL: REG1: 0000000000000001
DBG(48593123)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593125)> CPU CMD: Exec 0249: 00 40 1672 1644 1672   (1672) = +3 to point to next successor   
DBG(48593126)> CPU DETAIL: Read R 1672: 0000001000000000 
DBG(48593127)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48593128)> CPU DETAIL: Result: 0000001300000000 
DBG(48593129)> CPU DETAIL: Write 1672: 0000001300000000 
DBG(48593131)> CPU CMD: Exec 0250: 00 60 0197 0196 0179   goto 0141 read event from tape 1 input block   
DBG(48593132)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48593133)> CPU DETAIL: Transfer to T 
DBG(48593133)> CPU DETAIL: Write 0196: 0060000000000141 
DBG(48593135)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48593136)> CPU DETAIL: Read R 1611: 0000000000000000 
DBG(48593137)> CPU DETAIL: Read S 1619: 0000000000000016 
DBG(48593138)> CPU DETAIL: Result: 0000000000000016 
DBG(48593141)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48593142)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48593143)> CPU DETAIL: Result: 0000000000000184 
DBG(48593146)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48593147)> CPU DETAIL: REG1: 0000000000000184
DBG(48593147)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593149)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48593150)> CPU DETAIL: M4: 0049 
DBG(48593151)> CPU DETAIL: M6: 0058 
DBG(48593152)> CPU DETAIL: Clear M8
DBG(48593152)> CPU DETAIL: M8: 0000 
DBG(48593155)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48593156)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48593157)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48593160)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48593161)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48593162)> CPU DETAIL: Result: 0858000100160191 
DBG(48593163)> CPU DETAIL: Write 0194: 0858000100160191 
DBG(48593165)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48593166)> CPU DETAIL: Read R 0599: 0100000233030000 
DBG(48593167)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593168)> CPU DETAIL: Result: 0000000233030000 
DBG(48593171)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48593172)> CPU DETAIL: Read R 1636: 0000000000000000 
DBG(48593173)> CPU DETAIL: Diff: REG1: 9999999766970000
DBG(48593174)> CPU DETAIL: Transfer to T 
DBG(48593176)> CPU CMD: Exec 0191: 00 60 8598 1200 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593177)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48593177)> CPU DETAIL: Read R 0598: 0160000000141014 
DBG(48593178)> CPU DETAIL: Write 1200: 0160000000141014 
DBG(48593180)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593181)> CPU DETAIL: Read R 0191: 0060859812000000 
DBG(48593182)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593183)> CPU DETAIL: Result: 0060859812010000 
DBG(48593184)> CPU DETAIL: Write 0191: 0060859812010000 
DBG(48593186)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593187)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593188)> CPU DETAIL: Read S 1611: 0000000000000000 
DBG(48593189)> CPU DETAIL: Result: 0000000000000001 
DBG(48593190)> CPU DETAIL: Write 1611: 0000000000000001 
DBG(48593192)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593193)> CPU DETAIL: M8: 0001 
DBG(48593194)> CPU DETAIL: Transfer to T 
DBG(48593196)> CPU CMD: Exec 0191: 00 60 8598 1201 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593197)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48593197)> CPU DETAIL: Read R 0599: 0100000233030000 
DBG(48593198)> CPU DETAIL: Write 1201: 0100000233030000 
DBG(48593200)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593201)> CPU DETAIL: Read R 0191: 0060859812010000 
DBG(48593202)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593203)> CPU DETAIL: Result: 0060859812020000 
DBG(48593204)> CPU DETAIL: Write 0191: 0060859812020000 
DBG(48593206)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593207)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593208)> CPU DETAIL: Read S 1611: 0000000000000001 
DBG(48593209)> CPU DETAIL: Result: 0000000000000002 
DBG(48593210)> CPU DETAIL: Write 1611: 0000000000000002 
DBG(48593212)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593213)> CPU DETAIL: M8: 0002 
DBG(48593214)> CPU DETAIL: Transfer to T 
DBG(48593216)> CPU CMD: Exec 0191: 00 60 8598 1202 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593217)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48593217)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48593218)> CPU DETAIL: Write 1202: 0000000000000000 
DBG(48593220)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593221)> CPU DETAIL: Read R 0191: 0060859812020000 
DBG(48593222)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593223)> CPU DETAIL: Result: 0060859812030000 
DBG(48593224)> CPU DETAIL: Write 0191: 0060859812030000 
DBG(48593226)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593227)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593228)> CPU DETAIL: Read S 1611: 0000000000000002 
DBG(48593229)> CPU DETAIL: Result: 0000000000000003 
DBG(48593230)> CPU DETAIL: Write 1611: 0000000000000003 
DBG(48593232)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593233)> CPU DETAIL: M8: 0003 
DBG(48593234)> CPU DETAIL: Transfer to T 
DBG(48593236)> CPU CMD: Exec 0191: 00 60 8598 1203 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593237)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48593237)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48593238)> CPU DETAIL: Write 1203: 0000000000000000 
DBG(48593240)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593241)> CPU DETAIL: Read R 0191: 0060859812030000 
DBG(48593242)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593243)> CPU DETAIL: Result: 0060859812040000 
DBG(48593244)> CPU DETAIL: Write 0191: 0060859812040000 
DBG(48593246)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593247)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593248)> CPU DETAIL: Read S 1611: 0000000000000003 
DBG(48593249)> CPU DETAIL: Result: 0000000000000004 
DBG(48593250)> CPU DETAIL: Write 1611: 0000000000000004 
DBG(48593252)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593253)> CPU DETAIL: M8: 0004 
DBG(48593254)> CPU DETAIL: Transfer to T 
DBG(48593256)> CPU CMD: Exec 0191: 00 60 8598 1204 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593257)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48593257)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48593258)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(48593260)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593261)> CPU DETAIL: Read R 0191: 0060859812040000 
DBG(48593262)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593263)> CPU DETAIL: Result: 0060859812050000 
DBG(48593264)> CPU DETAIL: Write 0191: 0060859812050000 
DBG(48593266)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593267)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593268)> CPU DETAIL: Read S 1611: 0000000000000004 
DBG(48593269)> CPU DETAIL: Result: 0000000000000005 
DBG(48593270)> CPU DETAIL: Write 1611: 0000000000000005 
DBG(48593272)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593273)> CPU DETAIL: M8: 0005 
DBG(48593274)> CPU DETAIL: Transfer to T 
DBG(48593276)> CPU CMD: Exec 0191: 00 60 8598 1205 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593277)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48593277)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48593278)> CPU DETAIL: Write 1205: 0000000000000000 
DBG(48593280)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593281)> CPU DETAIL: Read R 0191: 0060859812050000 
DBG(48593282)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593283)> CPU DETAIL: Result: 0060859812060000 
DBG(48593284)> CPU DETAIL: Write 0191: 0060859812060000 
DBG(48593286)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593287)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593288)> CPU DETAIL: Read S 1611: 0000000000000005 
DBG(48593289)> CPU DETAIL: Result: 0000000000000006 
DBG(48593290)> CPU DETAIL: Write 1611: 0000000000000006 
DBG(48593292)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593293)> CPU DETAIL: M8: 0006 
DBG(48593294)> CPU DETAIL: Transfer to T 
DBG(48593296)> CPU CMD: Exec 0191: 00 60 8598 1206 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593297)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48593297)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48593298)> CPU DETAIL: Write 1206: 3336000000000201 
DBG(48593300)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593301)> CPU DETAIL: Read R 0191: 0060859812060000 
DBG(48593302)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593303)> CPU DETAIL: Result: 0060859812070000 
DBG(48593304)> CPU DETAIL: Write 0191: 0060859812070000 
DBG(48593306)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593307)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593308)> CPU DETAIL: Read S 1611: 0000000000000006 
DBG(48593309)> CPU DETAIL: Result: 0000000000000007 
DBG(48593310)> CPU DETAIL: Write 1611: 0000000000000007 
DBG(48593312)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593313)> CPU DETAIL: M8: 0007 
DBG(48593314)> CPU DETAIL: Transfer to T 
DBG(48593316)> CPU CMD: Exec 0191: 00 60 8598 1207 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593317)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48593317)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48593318)> CPU DETAIL: Write 1207: 0000000233010000 
DBG(48593320)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593321)> CPU DETAIL: Read R 0191: 0060859812070000 
DBG(48593322)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593323)> CPU DETAIL: Result: 0060859812080000 
DBG(48593324)> CPU DETAIL: Write 0191: 0060859812080000 
DBG(48593326)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593327)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593328)> CPU DETAIL: Read S 1611: 0000000000000007 
DBG(48593329)> CPU DETAIL: Result: 0000000000000008 
DBG(48593330)> CPU DETAIL: Write 1611: 0000000000000008 
DBG(48593332)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593333)> CPU DETAIL: M8: 0008 
DBG(48593334)> CPU DETAIL: Transfer to T 
DBG(48593336)> CPU CMD: Exec 0191: 00 60 8598 1208 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593337)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48593337)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48593338)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(48593340)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593341)> CPU DETAIL: Read R 0191: 0060859812080000 
DBG(48593342)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593343)> CPU DETAIL: Result: 0060859812090000 
DBG(48593344)> CPU DETAIL: Write 0191: 0060859812090000 
DBG(48593346)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593347)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593348)> CPU DETAIL: Read S 1611: 0000000000000008 
DBG(48593349)> CPU DETAIL: Result: 0000000000000009 
DBG(48593350)> CPU DETAIL: Write 1611: 0000000000000009 
DBG(48593352)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593353)> CPU DETAIL: M8: 0009 
DBG(48593354)> CPU DETAIL: Transfer to T 
DBG(48593356)> CPU CMD: Exec 0191: 00 60 8598 1209 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593357)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48593357)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48593358)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(48593360)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593361)> CPU DETAIL: Read R 0191: 0060859812090000 
DBG(48593362)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593363)> CPU DETAIL: Result: 0060859812100000 
DBG(48593364)> CPU DETAIL: Write 0191: 0060859812100000 
DBG(48593366)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593367)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593368)> CPU DETAIL: Read S 1611: 0000000000000009 
DBG(48593369)> CPU DETAIL: Result: 0000000000000010 
DBG(48593370)> CPU DETAIL: Write 1611: 0000000000000010 
DBG(48593372)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593373)> CPU DETAIL: M8: 0010 
DBG(48593374)> CPU DETAIL: Transfer to T 
DBG(48593376)> CPU CMD: Exec 0191: 00 60 8598 1210 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593377)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48593377)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48593378)> CPU DETAIL: Write 1210: 0000000233020000 
DBG(48593380)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593381)> CPU DETAIL: Read R 0191: 0060859812100000 
DBG(48593382)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593383)> CPU DETAIL: Result: 0060859812110000 
DBG(48593384)> CPU DETAIL: Write 0191: 0060859812110000 
DBG(48593386)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593387)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593388)> CPU DETAIL: Read S 1611: 0000000000000010 
DBG(48593389)> CPU DETAIL: Result: 0000000000000011 
DBG(48593390)> CPU DETAIL: Write 1611: 0000000000000011 
DBG(48593392)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593393)> CPU DETAIL: M8: 0011 
DBG(48593394)> CPU DETAIL: Transfer to T 
DBG(48593396)> CPU CMD: Exec 0191: 00 60 8598 1211 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593397)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48593397)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48593398)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(48593400)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593401)> CPU DETAIL: Read R 0191: 0060859812110000 
DBG(48593402)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593403)> CPU DETAIL: Result: 0060859812120000 
DBG(48593404)> CPU DETAIL: Write 0191: 0060859812120000 
DBG(48593406)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593407)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593408)> CPU DETAIL: Read S 1611: 0000000000000011 
DBG(48593409)> CPU DETAIL: Result: 0000000000000012 
DBG(48593410)> CPU DETAIL: Write 1611: 0000000000000012 
DBG(48593412)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593413)> CPU DETAIL: M8: 0012 
DBG(48593414)> CPU DETAIL: Transfer to T 
DBG(48593416)> CPU CMD: Exec 0191: 00 60 8598 1212 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593417)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48593417)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48593418)> CPU DETAIL: Write 1212: 0000000000000000 
DBG(48593420)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593421)> CPU DETAIL: Read R 0191: 0060859812120000 
DBG(48593422)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593423)> CPU DETAIL: Result: 0060859812130000 
DBG(48593424)> CPU DETAIL: Write 0191: 0060859812130000 
DBG(48593426)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593427)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593428)> CPU DETAIL: Read S 1611: 0000000000000012 
DBG(48593429)> CPU DETAIL: Result: 0000000000000013 
DBG(48593430)> CPU DETAIL: Write 1611: 0000000000000013 
DBG(48593432)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593433)> CPU DETAIL: M8: 0013 
DBG(48593434)> CPU DETAIL: Transfer to T 
DBG(48593436)> CPU CMD: Exec 0191: 00 60 8598 1213 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593437)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48593437)> CPU DETAIL: Read R 0611: 0000000233090000 
DBG(48593438)> CPU DETAIL: Write 1213: 0000000233090000 
DBG(48593440)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593441)> CPU DETAIL: Read R 0191: 0060859812130000 
DBG(48593442)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593443)> CPU DETAIL: Result: 0060859812140000 
DBG(48593444)> CPU DETAIL: Write 0191: 0060859812140000 
DBG(48593446)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593447)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593448)> CPU DETAIL: Read S 1611: 0000000000000013 
DBG(48593449)> CPU DETAIL: Result: 0000000000000014 
DBG(48593450)> CPU DETAIL: Write 1611: 0000000000000014 
DBG(48593452)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593453)> CPU DETAIL: M8: 0014 
DBG(48593454)> CPU DETAIL: Transfer to T 
DBG(48593456)> CPU CMD: Exec 0191: 00 60 8598 1214 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593457)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48593457)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48593458)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(48593460)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593461)> CPU DETAIL: Read R 0191: 0060859812140000 
DBG(48593462)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593463)> CPU DETAIL: Result: 0060859812150000 
DBG(48593464)> CPU DETAIL: Write 0191: 0060859812150000 
DBG(48593466)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593467)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593468)> CPU DETAIL: Read S 1611: 0000000000000014 
DBG(48593469)> CPU DETAIL: Result: 0000000000000015 
DBG(48593470)> CPU DETAIL: Write 1611: 0000000000000015 
DBG(48593472)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593473)> CPU DETAIL: M8: 0015 
DBG(48593474)> CPU DETAIL: Transfer to T 
DBG(48593476)> CPU CMD: Exec 0191: 00 60 8598 1215 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48593477)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48593477)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48593478)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(48593480)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48593481)> CPU DETAIL: Read R 0191: 0060859812150000 
DBG(48593482)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593483)> CPU DETAIL: Result: 0060859812160000 
DBG(48593484)> CPU DETAIL: Write 0191: 0060859812160000 
DBG(48593486)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48593487)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48593488)> CPU DETAIL: Read S 1611: 0000000000000015 
DBG(48593489)> CPU DETAIL: Result: 0000000000000016 
DBG(48593490)> CPU DETAIL: Write 1611: 0000000000000016 
DBG(48593492)> CPU CMD: Exec 0194: 08 58 0001 0016 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48593493)> CPU DETAIL: M8: 0016 
DBG(48593496)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48593497)> CPU DETAIL: Read R 0599: 0100000233030000 
DBG(48593498)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593499)> CPU DETAIL: Result: 0000000233030000 
DBG(48593500)> CPU DETAIL: Write 1636: 0000000233030000 
DBG(48593502)> CPU CMD: Exec 0196: 00 60 0000 0000 0141   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48593503)> CPU DETAIL: Transfer to T 
DBG(48593505)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48593506)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48593507)> CPU DETAIL: Read S 1615: 0000000000000058 
DBG(48593508)> CPU DETAIL: Result: 0000000000000023 
DBG(48593511)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48593512)> CPU DETAIL: REG1: 0000000000000023
DBG(48593512)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593514)> CPU CMD: Exec 0149: 00 60 1063 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48593515)> CPU DETAIL: Read R 1063: 3336000000000200 
DBG(48593516)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48593518)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48593519)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48593519)> CPU DETAIL: Read R 1057: 0130000000141015 
DBG(48593520)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48593521)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48593523)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48593524)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48593525)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48593526)> CPU DETAIL: Result: 0000000000000200 
DBG(48593527)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48593528)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48593530)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48593531)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48593532)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48593533)> CPU DETAIL: Result: 0000000000000000 
DBG(48593534)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48593536)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48593537)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48593538)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48593539)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48593540)> CPU DETAIL: Transfer to T 
DBG(48593542)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48593543)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48593544)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48593545)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48593545)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48593546)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48593547)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48593548)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48593550)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48593551)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48593552)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48593553)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48593553)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48593554)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48593555)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48593556)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48593558)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48593559)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48593560)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48593563)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48593564)> CPU DETAIL: Read R 0149: 0060106316160000 
DBG(48593565)> CPU DETAIL: Result: 0060107616160000 
DBG(48593566)> CPU DETAIL: Write 0149: 0060107616160000 
DBG(48593568)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48593569)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48593570)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48593571)> CPU DETAIL: Result: 0000000000000006 
DBG(48593572)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48593574)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48593575)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48593576)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48593577)> CPU DETAIL: Result: 0000000000000000 
DBG(48593578)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48593580)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48593581)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48593582)> CPU DETAIL: Read S 1615: 0000000000000058 
DBG(48593583)> CPU DETAIL: Result: 0000000000000071 
DBG(48593584)> CPU DETAIL: Write 1615: 0000000000000071 
DBG(48593586)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48593587)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48593588)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48593591)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48593592)> CPU DETAIL: Read R 0167: 0658000100580165 
DBG(48593593)> CPU DETAIL: Result: 0658000100710165 
DBG(48593594)> CPU DETAIL: Write 0167: 0658000100710165 
DBG(48593596)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593597)> CPU DETAIL: M6 Address Modifier: 0058 
DBG(48593597)> CPU DETAIL: Read R 1057: 0130000000141015 
DBG(48593598)> CPU DETAIL: Write 0598: 0130000000141015 
DBG(48593600)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593601)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48593602)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593603)> CPU DETAIL: Result: 0060699905990000 
DBG(48593604)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48593606)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593607)> CPU DETAIL: M6: 0059 
DBG(48593608)> CPU DETAIL: Transfer to T 
DBG(48593610)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593611)> CPU DETAIL: M6 Address Modifier: 0059 
DBG(48593611)> CPU DETAIL: Read R 1058: 0000000233090000 
DBG(48593612)> CPU DETAIL: Write 0599: 0000000233090000 
DBG(48593614)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593615)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48593616)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593617)> CPU DETAIL: Result: 0060699906000000 
DBG(48593618)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48593620)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593621)> CPU DETAIL: M6: 0060 
DBG(48593622)> CPU DETAIL: Transfer to T 
DBG(48593624)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593625)> CPU DETAIL: M6 Address Modifier: 0060 
DBG(48593625)> CPU DETAIL: Read R 1059: 0000000000000000 
DBG(48593626)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48593628)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593629)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48593630)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593631)> CPU DETAIL: Result: 0060699906010000 
DBG(48593632)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48593634)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593635)> CPU DETAIL: M6: 0061 
DBG(48593636)> CPU DETAIL: Transfer to T 
DBG(48593638)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593639)> CPU DETAIL: M6 Address Modifier: 0061 
DBG(48593639)> CPU DETAIL: Read R 1060: 0000000000000000 
DBG(48593640)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48593642)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593643)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48593644)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593645)> CPU DETAIL: Result: 0060699906020000 
DBG(48593646)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48593648)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593649)> CPU DETAIL: M6: 0062 
DBG(48593650)> CPU DETAIL: Transfer to T 
DBG(48593652)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593653)> CPU DETAIL: M6 Address Modifier: 0062 
DBG(48593653)> CPU DETAIL: Read R 1061: 0000000000000000 
DBG(48593654)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48593656)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593657)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48593658)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593659)> CPU DETAIL: Result: 0060699906030000 
DBG(48593660)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48593662)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593663)> CPU DETAIL: M6: 0063 
DBG(48593664)> CPU DETAIL: Transfer to T 
DBG(48593666)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593667)> CPU DETAIL: M6 Address Modifier: 0063 
DBG(48593667)> CPU DETAIL: Read R 1062: 0000000000000000 
DBG(48593668)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48593670)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593671)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48593672)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593673)> CPU DETAIL: Result: 0060699906040000 
DBG(48593674)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48593676)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593677)> CPU DETAIL: M6: 0064 
DBG(48593678)> CPU DETAIL: Transfer to T 
DBG(48593680)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593681)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(48593681)> CPU DETAIL: Read R 1063: 3336000000000200 
DBG(48593682)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48593684)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593685)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48593686)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593687)> CPU DETAIL: Result: 0060699906050000 
DBG(48593688)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48593690)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593691)> CPU DETAIL: M6: 0065 
DBG(48593692)> CPU DETAIL: Transfer to T 
DBG(48593694)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593695)> CPU DETAIL: M6 Address Modifier: 0065 
DBG(48593695)> CPU DETAIL: Read R 1064: 0000000233010000 
DBG(48593696)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48593698)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593699)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48593700)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593701)> CPU DETAIL: Result: 0060699906060000 
DBG(48593702)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48593704)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593705)> CPU DETAIL: M6: 0066 
DBG(48593706)> CPU DETAIL: Transfer to T 
DBG(48593708)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593709)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(48593709)> CPU DETAIL: Read R 1065: 0000000000000000 
DBG(48593710)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48593712)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593713)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48593714)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593715)> CPU DETAIL: Result: 0060699906070000 
DBG(48593716)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48593718)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593719)> CPU DETAIL: M6: 0067 
DBG(48593720)> CPU DETAIL: Transfer to T 
DBG(48593722)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593723)> CPU DETAIL: M6 Address Modifier: 0067 
DBG(48593723)> CPU DETAIL: Read R 1066: 0000000000000000 
DBG(48593724)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48593726)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593727)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48593728)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593729)> CPU DETAIL: Result: 0060699906080000 
DBG(48593730)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48593732)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593733)> CPU DETAIL: M6: 0068 
DBG(48593734)> CPU DETAIL: Transfer to T 
DBG(48593736)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593737)> CPU DETAIL: M6 Address Modifier: 0068 
DBG(48593737)> CPU DETAIL: Read R 1067: 0000000233030000 
DBG(48593738)> CPU DETAIL: Write 0608: 0000000233030000 
DBG(48593740)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593741)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48593742)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593743)> CPU DETAIL: Result: 0060699906090000 
DBG(48593744)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48593746)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593747)> CPU DETAIL: M6: 0069 
DBG(48593748)> CPU DETAIL: Transfer to T 
DBG(48593750)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593751)> CPU DETAIL: M6 Address Modifier: 0069 
DBG(48593751)> CPU DETAIL: Read R 1068: 0000000000000000 
DBG(48593752)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48593754)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593755)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48593756)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593757)> CPU DETAIL: Result: 0060699906100000 
DBG(48593758)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48593760)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593761)> CPU DETAIL: M6: 0070 
DBG(48593762)> CPU DETAIL: Transfer to T 
DBG(48593764)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48593765)> CPU DETAIL: M6 Address Modifier: 0070 
DBG(48593765)> CPU DETAIL: Read R 1069: 0000000000000000 
DBG(48593766)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48593768)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48593769)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48593770)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593771)> CPU DETAIL: Result: 0060699906110000 
DBG(48593772)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48593774)> CPU CMD: Exec 0167: 06 58 0001 0071 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48593775)> CPU DETAIL: M6: 0071 
DBG(48593778)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48593779)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48593780)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48593782)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48593785)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48593786)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48593787)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48593790)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48593791)> CPU DETAIL: Read R 1672: 0000001300000000 
DBG(48593792)> CPU DETAIL: Result: 0000001600000000 
DBG(48593795)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48593796)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48593797)> CPU DETAIL: Result: 0042441316550000 
DBG(48593798)> CPU DETAIL: Write 0174: 0042441316550000 
DBG(48593800)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48593801)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48593802)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593803)> CPU DETAIL: Result: 0000000233090000 
DBG(48593804)> CPU DETAIL: Write 1620: 0000000233090000 
DBG(48593806)> CPU CMD: Exec 0174: 00 42 4413 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48593807)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593807)> CPU DETAIL: Read R 0462: 0000000233090000 
DBG(48593808)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593809)> CPU DETAIL: Result: 0000000233090000 
DBG(48593812)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48593813)> CPU DETAIL: Read S 1620: 0000000233090000 
DBG(48593814)> CPU DETAIL: Result: 0000000000000000 
DBG(48593817)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48593818)> CPU DETAIL: REG1: 0000000000000000
DBG(48593818)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48593820)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48593821)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48593822)> CPU DETAIL: Transfer to T 
DBG(48593822)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48593824)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48593825)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48593826)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593827)> CPU DETAIL: Result: 0000000233010000 
DBG(48593828)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48593830)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48593831)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593831)> CPU DETAIL: Read R 0447: 0002000233010000 
DBG(48593832)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48593833)> CPU DETAIL: Result: 0000000233010000 
DBG(48593836)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48593837)> CPU DETAIL: Read R 1620: 0000000233010000 
DBG(48593838)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48593839)> CPU DETAIL: Transfer to T 
DBG(48593841)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48593842)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48593843)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48593845)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48593846)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48593847)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48593849)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48593850)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48593851)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48593852)> CPU DETAIL: Result: 0100000233090000 
DBG(48593853)> CPU DETAIL: Write 0599: 0100000233090000 
DBG(48593855)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48593856)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48593857)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48593859)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48593860)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48593861)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48593862)> CPU DETAIL: Result: 0000000000000200 
DBG(48593863)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48593866)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48593867)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48593868)> CPU DETAIL: Result: 0000000000000001 
DBG(48593871)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48593872)> CPU DETAIL: REG1: 0000000000000001
DBG(48593872)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593874)> CPU CMD: Exec 0241: 00 60 0177 0250 0000   ???: not all predecessors of tape 1 event found yet   
DBG(48593875)> CPU DETAIL: Read R 0177: 0060019701960179 
DBG(48593876)> CPU DETAIL: Write 0250: 0060019701960179 
DBG(48593878)> CPU CMD: Exec 0242: 00 60 1667 0272 0000   ???   
DBG(48593879)> CPU DETAIL: Read R 1667: 0060169901960179 
DBG(48593880)> CPU DETAIL: Write 0272: 0060169901960179 
DBG(48593882)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48593883)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48593884)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48593887)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48593888)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593888)> CPU DETAIL: Read R 0447: 0002000233010000 
DBG(48593889)> CPU DETAIL: Result: 0003000233010000 
DBG(48593890)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593890)> CPU DETAIL: Write 0447: 0003000233010000 
DBG(48593892)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48593893)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593893)> CPU DETAIL: Read R 0447: 0003000233010000 
DBG(48593894)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48593895)> CPU DETAIL: Result: 0003000000000000 
DBG(48593896)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000003 
DBG(48593897)> CPU DETAIL: Write 1632: 0000000000000003 
DBG(48593899)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48593900)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593900)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48593901)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48593902)> CPU DETAIL: Result: 0000000000000003 
DBG(48593905)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48593906)> CPU DETAIL: Read S 1632: 0000000000000003 
DBG(48593907)> CPU DETAIL: Result: 0000000000000000 
DBG(48593910)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48593911)> CPU DETAIL: REG1: 0000000000000000
DBG(48593911)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48593913)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48593914)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48593915)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48593916)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48593918)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48593919)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593919)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48593920)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48593921)> CPU DETAIL: Result: 0000000000000003 
DBG(48593922)> CPU DETAIL: Word Shift 12 digits left: REG1: 0003000000000000 
DBG(48593925)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48593926)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593926)> CPU DETAIL: Read R 0447: 0003000233010000 
DBG(48593927)> CPU DETAIL: Result: 0000000233010000 
DBG(48593928)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593928)> CPU DETAIL: Write 0447: 0000000233010000 
DBG(48593930)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48593931)> CPU DETAIL: Read R 1625: 0000000000000108 
DBG(48593932)> CPU DETAIL: Read S 1607: 0000000000000019 
DBG(48593933)> CPU DETAIL: Result: 0000000000000127 
DBG(48593936)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48593937)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48593938)> CPU DETAIL: Result: 0000000000000073 
DBG(48593941)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48593942)> CPU DETAIL: REG1: 0000000000000073
DBG(48593942)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48593944)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48593945)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48593946)> CPU DETAIL: Transfer to T 
DBG(48593946)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48593948)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48593949)> CPU DETAIL: M4: 0049 
DBG(48593950)> CPU DETAIL: M6: 0071 
DBG(48593951)> CPU DETAIL: Clear M8
DBG(48593951)> CPU DETAIL: M8: 0000 
DBG(48593954)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48593955)> CPU DETAIL: Read R 1612: 0000000000000009 
DBG(48593956)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48593957)> CPU DETAIL: Result: 0000000000000010 
DBG(48593958)> CPU DETAIL: Write 1612: 0000000000000010 
DBG(48593960)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48593961)> CPU DETAIL: Read R 1607: 0000000000000019 
DBG(48593962)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000190000 
DBG(48593965)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48593966)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48593967)> CPU DETAIL: Result: 0858000100190266 
DBG(48593968)> CPU DETAIL: Write 0270: 0858000100190266 
DBG(48593970)> CPU CMD: Exec 0266: 00 60 4397 1509 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48593971)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48593971)> CPU DETAIL: Read R 0446: 0190000000141112 
DBG(48593972)> CPU DETAIL: Write 1509: 0190000000141112 
DBG(48593974)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48593975)> CPU DETAIL: Read R 0266: 0060439715090000 
DBG(48593976)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48593977)> CPU DETAIL: Result: 0060439715100000 
DBG(48593978)> CPU DETAIL: Write 0266: 0060439715100000 
DBG(48593980)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48593981)> CPU DETAIL: Read R 1625: 0000000000000108 
DBG(48593982)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48593983)> CPU DETAIL: Result: 0000000000000109 
DBG(48593984)> CPU DETAIL: Write 1625: 0000000000000109 
DBG(48593986)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48593987)> CPU DETAIL: M4: 0050 
DBG(48593988)> CPU DETAIL: M6: 0071 
DBG(48593989)> CPU DETAIL: M8: 0000 
DBG(48593992)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48593993)> CPU DETAIL: M8: 0001 
DBG(48593994)> CPU DETAIL: Transfer to T 
DBG(48593996)> CPU CMD: Exec 0266: 00 60 4397 1510 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48593997)> CPU DETAIL: M4 Address Modifier: 0050 
DBG(48593997)> CPU DETAIL: Read R 0447: 0000000233010000 
DBG(48593998)> CPU DETAIL: Write 1510: 0000000233010000 
DBG(48594000)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594001)> CPU DETAIL: Read R 0266: 0060439715100000 
DBG(48594002)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594003)> CPU DETAIL: Result: 0060439715110000 
DBG(48594004)> CPU DETAIL: Write 0266: 0060439715110000 
DBG(48594006)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594007)> CPU DETAIL: Read R 1625: 0000000000000109 
DBG(48594008)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594009)> CPU DETAIL: Result: 0000000000000110 
DBG(48594010)> CPU DETAIL: Write 1625: 0000000000000110 
DBG(48594012)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594013)> CPU DETAIL: M4: 0051 
DBG(48594014)> CPU DETAIL: M6: 0071 
DBG(48594015)> CPU DETAIL: M8: 0001 
DBG(48594018)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594019)> CPU DETAIL: M8: 0002 
DBG(48594020)> CPU DETAIL: Transfer to T 
DBG(48594022)> CPU CMD: Exec 0266: 00 60 4397 1511 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594023)> CPU DETAIL: M4 Address Modifier: 0051 
DBG(48594023)> CPU DETAIL: Read R 0448: 0000000000000000 
DBG(48594024)> CPU DETAIL: Write 1511: 0000000000000000 
DBG(48594026)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594027)> CPU DETAIL: Read R 0266: 0060439715110000 
DBG(48594028)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594029)> CPU DETAIL: Result: 0060439715120000 
DBG(48594030)> CPU DETAIL: Write 0266: 0060439715120000 
DBG(48594032)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594033)> CPU DETAIL: Read R 1625: 0000000000000110 
DBG(48594034)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594035)> CPU DETAIL: Result: 0000000000000111 
DBG(48594036)> CPU DETAIL: Write 1625: 0000000000000111 
DBG(48594038)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594039)> CPU DETAIL: M4: 0052 
DBG(48594040)> CPU DETAIL: M6: 0071 
DBG(48594041)> CPU DETAIL: M8: 0002 
DBG(48594044)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594045)> CPU DETAIL: M8: 0003 
DBG(48594046)> CPU DETAIL: Transfer to T 
DBG(48594048)> CPU CMD: Exec 0266: 00 60 4397 1512 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594049)> CPU DETAIL: M4 Address Modifier: 0052 
DBG(48594049)> CPU DETAIL: Read R 0449: 0000000000000000 
DBG(48594050)> CPU DETAIL: Write 1512: 0000000000000000 
DBG(48594052)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594053)> CPU DETAIL: Read R 0266: 0060439715120000 
DBG(48594054)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594055)> CPU DETAIL: Result: 0060439715130000 
DBG(48594056)> CPU DETAIL: Write 0266: 0060439715130000 
DBG(48594058)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594059)> CPU DETAIL: Read R 1625: 0000000000000111 
DBG(48594060)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594061)> CPU DETAIL: Result: 0000000000000112 
DBG(48594062)> CPU DETAIL: Write 1625: 0000000000000112 
DBG(48594064)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594065)> CPU DETAIL: M4: 0053 
DBG(48594066)> CPU DETAIL: M6: 0071 
DBG(48594067)> CPU DETAIL: M8: 0003 
DBG(48594070)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594071)> CPU DETAIL: M8: 0004 
DBG(48594072)> CPU DETAIL: Transfer to T 
DBG(48594074)> CPU CMD: Exec 0266: 00 60 4397 1513 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594075)> CPU DETAIL: M4 Address Modifier: 0053 
DBG(48594075)> CPU DETAIL: Read R 0450: 0000000000000000 
DBG(48594076)> CPU DETAIL: Write 1513: 0000000000000000 
DBG(48594078)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594079)> CPU DETAIL: Read R 0266: 0060439715130000 
DBG(48594080)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594081)> CPU DETAIL: Result: 0060439715140000 
DBG(48594082)> CPU DETAIL: Write 0266: 0060439715140000 
DBG(48594084)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594085)> CPU DETAIL: Read R 1625: 0000000000000112 
DBG(48594086)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594087)> CPU DETAIL: Result: 0000000000000113 
DBG(48594088)> CPU DETAIL: Write 1625: 0000000000000113 
DBG(48594090)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594091)> CPU DETAIL: M4: 0054 
DBG(48594092)> CPU DETAIL: M6: 0071 
DBG(48594093)> CPU DETAIL: M8: 0004 
DBG(48594096)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594097)> CPU DETAIL: M8: 0005 
DBG(48594098)> CPU DETAIL: Transfer to T 
DBG(48594100)> CPU CMD: Exec 0266: 00 60 4397 1514 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594101)> CPU DETAIL: M4 Address Modifier: 0054 
DBG(48594101)> CPU DETAIL: Read R 0451: 0000000000000000 
DBG(48594102)> CPU DETAIL: Write 1514: 0000000000000000 
DBG(48594104)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594105)> CPU DETAIL: Read R 0266: 0060439715140000 
DBG(48594106)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594107)> CPU DETAIL: Result: 0060439715150000 
DBG(48594108)> CPU DETAIL: Write 0266: 0060439715150000 
DBG(48594110)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594111)> CPU DETAIL: Read R 1625: 0000000000000113 
DBG(48594112)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594113)> CPU DETAIL: Result: 0000000000000114 
DBG(48594114)> CPU DETAIL: Write 1625: 0000000000000114 
DBG(48594116)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594117)> CPU DETAIL: M4: 0055 
DBG(48594118)> CPU DETAIL: M6: 0071 
DBG(48594119)> CPU DETAIL: M8: 0005 
DBG(48594122)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594123)> CPU DETAIL: M8: 0006 
DBG(48594124)> CPU DETAIL: Transfer to T 
DBG(48594126)> CPU CMD: Exec 0266: 00 60 4397 1515 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594127)> CPU DETAIL: M4 Address Modifier: 0055 
DBG(48594127)> CPU DETAIL: Read R 0452: 3334444455660103 
DBG(48594128)> CPU DETAIL: Write 1515: 3334444455660103 
DBG(48594130)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594131)> CPU DETAIL: Read R 0266: 0060439715150000 
DBG(48594132)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594133)> CPU DETAIL: Result: 0060439715160000 
DBG(48594134)> CPU DETAIL: Write 0266: 0060439715160000 
DBG(48594136)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594137)> CPU DETAIL: Read R 1625: 0000000000000114 
DBG(48594138)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594139)> CPU DETAIL: Result: 0000000000000115 
DBG(48594140)> CPU DETAIL: Write 1625: 0000000000000115 
DBG(48594142)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594143)> CPU DETAIL: M4: 0056 
DBG(48594144)> CPU DETAIL: M6: 0071 
DBG(48594145)> CPU DETAIL: M8: 0006 
DBG(48594148)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594149)> CPU DETAIL: M8: 0007 
DBG(48594150)> CPU DETAIL: Transfer to T 
DBG(48594152)> CPU CMD: Exec 0266: 00 60 4397 1516 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594153)> CPU DETAIL: M4 Address Modifier: 0056 
DBG(48594153)> CPU DETAIL: Read R 0453: 0000000233000000 
DBG(48594154)> CPU DETAIL: Write 1516: 0000000233000000 
DBG(48594156)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594157)> CPU DETAIL: Read R 0266: 0060439715160000 
DBG(48594158)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594159)> CPU DETAIL: Result: 0060439715170000 
DBG(48594160)> CPU DETAIL: Write 0266: 0060439715170000 
DBG(48594162)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594163)> CPU DETAIL: Read R 1625: 0000000000000115 
DBG(48594164)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594165)> CPU DETAIL: Result: 0000000000000116 
DBG(48594166)> CPU DETAIL: Write 1625: 0000000000000116 
DBG(48594168)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594169)> CPU DETAIL: M4: 0057 
DBG(48594170)> CPU DETAIL: M6: 0071 
DBG(48594171)> CPU DETAIL: M8: 0007 
DBG(48594174)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594175)> CPU DETAIL: M8: 0008 
DBG(48594176)> CPU DETAIL: Transfer to T 
DBG(48594178)> CPU CMD: Exec 0266: 00 60 4397 1517 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594179)> CPU DETAIL: M4 Address Modifier: 0057 
DBG(48594179)> CPU DETAIL: Read R 0454: 0000000000000000 
DBG(48594180)> CPU DETAIL: Write 1517: 0000000000000000 
DBG(48594182)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594183)> CPU DETAIL: Read R 0266: 0060439715170000 
DBG(48594184)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594185)> CPU DETAIL: Result: 0060439715180000 
DBG(48594186)> CPU DETAIL: Write 0266: 0060439715180000 
DBG(48594188)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594189)> CPU DETAIL: Read R 1625: 0000000000000116 
DBG(48594190)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594191)> CPU DETAIL: Result: 0000000000000117 
DBG(48594192)> CPU DETAIL: Write 1625: 0000000000000117 
DBG(48594194)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594195)> CPU DETAIL: M4: 0058 
DBG(48594196)> CPU DETAIL: M6: 0071 
DBG(48594197)> CPU DETAIL: M8: 0008 
DBG(48594200)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594201)> CPU DETAIL: M8: 0009 
DBG(48594202)> CPU DETAIL: Transfer to T 
DBG(48594204)> CPU CMD: Exec 0266: 00 60 4397 1518 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594205)> CPU DETAIL: M4 Address Modifier: 0058 
DBG(48594205)> CPU DETAIL: Read R 0455: 0000000000000000 
DBG(48594206)> CPU DETAIL: Write 1518: 0000000000000000 
DBG(48594208)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594209)> CPU DETAIL: Read R 0266: 0060439715180000 
DBG(48594210)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594211)> CPU DETAIL: Result: 0060439715190000 
DBG(48594212)> CPU DETAIL: Write 0266: 0060439715190000 
DBG(48594214)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594215)> CPU DETAIL: Read R 1625: 0000000000000117 
DBG(48594216)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594217)> CPU DETAIL: Result: 0000000000000118 
DBG(48594218)> CPU DETAIL: Write 1625: 0000000000000118 
DBG(48594220)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594221)> CPU DETAIL: M4: 0059 
DBG(48594222)> CPU DETAIL: M6: 0071 
DBG(48594223)> CPU DETAIL: M8: 0009 
DBG(48594226)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594227)> CPU DETAIL: M8: 0010 
DBG(48594228)> CPU DETAIL: Transfer to T 
DBG(48594230)> CPU CMD: Exec 0266: 00 60 4397 1519 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594231)> CPU DETAIL: M4 Address Modifier: 0059 
DBG(48594231)> CPU DETAIL: Read R 0456: 0000000233020000 
DBG(48594232)> CPU DETAIL: Write 1519: 0000000233020000 
DBG(48594234)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594235)> CPU DETAIL: Read R 0266: 0060439715190000 
DBG(48594236)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594237)> CPU DETAIL: Result: 0060439715200000 
DBG(48594238)> CPU DETAIL: Write 0266: 0060439715200000 
DBG(48594240)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594241)> CPU DETAIL: Read R 1625: 0000000000000118 
DBG(48594242)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594243)> CPU DETAIL: Result: 0000000000000119 
DBG(48594244)> CPU DETAIL: Write 1625: 0000000000000119 
DBG(48594246)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594247)> CPU DETAIL: M4: 0060 
DBG(48594248)> CPU DETAIL: M6: 0071 
DBG(48594249)> CPU DETAIL: M8: 0010 
DBG(48594252)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594253)> CPU DETAIL: M8: 0011 
DBG(48594254)> CPU DETAIL: Transfer to T 
DBG(48594256)> CPU CMD: Exec 0266: 00 60 4397 1520 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594257)> CPU DETAIL: M4 Address Modifier: 0060 
DBG(48594257)> CPU DETAIL: Read R 0457: 0000000000000000 
DBG(48594258)> CPU DETAIL: Write 1520: 0000000000000000 
DBG(48594260)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594261)> CPU DETAIL: Read R 0266: 0060439715200000 
DBG(48594262)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594263)> CPU DETAIL: Result: 0060439715210000 
DBG(48594264)> CPU DETAIL: Write 0266: 0060439715210000 
DBG(48594266)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594267)> CPU DETAIL: Read R 1625: 0000000000000119 
DBG(48594268)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594269)> CPU DETAIL: Result: 0000000000000120 
DBG(48594270)> CPU DETAIL: Write 1625: 0000000000000120 
DBG(48594272)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594273)> CPU DETAIL: M4: 0061 
DBG(48594274)> CPU DETAIL: M6: 0071 
DBG(48594275)> CPU DETAIL: M8: 0011 
DBG(48594278)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594279)> CPU DETAIL: M8: 0012 
DBG(48594280)> CPU DETAIL: Transfer to T 
DBG(48594282)> CPU CMD: Exec 0266: 00 60 4397 1521 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594283)> CPU DETAIL: M4 Address Modifier: 0061 
DBG(48594283)> CPU DETAIL: Read R 0458: 0000000000000000 
DBG(48594284)> CPU DETAIL: Write 1521: 0000000000000000 
DBG(48594286)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594287)> CPU DETAIL: Read R 0266: 0060439715210000 
DBG(48594288)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594289)> CPU DETAIL: Result: 0060439715220000 
DBG(48594290)> CPU DETAIL: Write 0266: 0060439715220000 
DBG(48594292)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594293)> CPU DETAIL: Read R 1625: 0000000000000120 
DBG(48594294)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594295)> CPU DETAIL: Result: 0000000000000121 
DBG(48594296)> CPU DETAIL: Write 1625: 0000000000000121 
DBG(48594298)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594299)> CPU DETAIL: M4: 0062 
DBG(48594300)> CPU DETAIL: M6: 0071 
DBG(48594301)> CPU DETAIL: M8: 0012 
DBG(48594304)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594305)> CPU DETAIL: M8: 0013 
DBG(48594306)> CPU DETAIL: Transfer to T 
DBG(48594308)> CPU CMD: Exec 0266: 00 60 4397 1522 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594309)> CPU DETAIL: M4 Address Modifier: 0062 
DBG(48594309)> CPU DETAIL: Read R 0459: 0000000233030000 
DBG(48594310)> CPU DETAIL: Write 1522: 0000000233030000 
DBG(48594312)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594313)> CPU DETAIL: Read R 0266: 0060439715220000 
DBG(48594314)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594315)> CPU DETAIL: Result: 0060439715230000 
DBG(48594316)> CPU DETAIL: Write 0266: 0060439715230000 
DBG(48594318)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594319)> CPU DETAIL: Read R 1625: 0000000000000121 
DBG(48594320)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594321)> CPU DETAIL: Result: 0000000000000122 
DBG(48594322)> CPU DETAIL: Write 1625: 0000000000000122 
DBG(48594324)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594325)> CPU DETAIL: M4: 0063 
DBG(48594326)> CPU DETAIL: M6: 0071 
DBG(48594327)> CPU DETAIL: M8: 0013 
DBG(48594330)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594331)> CPU DETAIL: M8: 0014 
DBG(48594332)> CPU DETAIL: Transfer to T 
DBG(48594334)> CPU CMD: Exec 0266: 00 60 4397 1523 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594335)> CPU DETAIL: M4 Address Modifier: 0063 
DBG(48594335)> CPU DETAIL: Read R 0460: 0000000000000000 
DBG(48594336)> CPU DETAIL: Write 1523: 0000000000000000 
DBG(48594338)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594339)> CPU DETAIL: Read R 0266: 0060439715230000 
DBG(48594340)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594341)> CPU DETAIL: Result: 0060439715240000 
DBG(48594342)> CPU DETAIL: Write 0266: 0060439715240000 
DBG(48594344)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594345)> CPU DETAIL: Read R 1625: 0000000000000122 
DBG(48594346)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594347)> CPU DETAIL: Result: 0000000000000123 
DBG(48594348)> CPU DETAIL: Write 1625: 0000000000000123 
DBG(48594350)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594351)> CPU DETAIL: M4: 0064 
DBG(48594352)> CPU DETAIL: M6: 0071 
DBG(48594353)> CPU DETAIL: M8: 0014 
DBG(48594356)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594357)> CPU DETAIL: M8: 0015 
DBG(48594358)> CPU DETAIL: Transfer to T 
DBG(48594360)> CPU CMD: Exec 0266: 00 60 4397 1524 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594361)> CPU DETAIL: M4 Address Modifier: 0064 
DBG(48594361)> CPU DETAIL: Read R 0461: 0000000000000000 
DBG(48594362)> CPU DETAIL: Write 1524: 0000000000000000 
DBG(48594364)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594365)> CPU DETAIL: Read R 0266: 0060439715240000 
DBG(48594366)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594367)> CPU DETAIL: Result: 0060439715250000 
DBG(48594368)> CPU DETAIL: Write 0266: 0060439715250000 
DBG(48594370)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594371)> CPU DETAIL: Read R 1625: 0000000000000123 
DBG(48594372)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594373)> CPU DETAIL: Result: 0000000000000124 
DBG(48594374)> CPU DETAIL: Write 1625: 0000000000000124 
DBG(48594376)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594377)> CPU DETAIL: M4: 0065 
DBG(48594378)> CPU DETAIL: M6: 0071 
DBG(48594379)> CPU DETAIL: M8: 0015 
DBG(48594382)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594383)> CPU DETAIL: M8: 0016 
DBG(48594384)> CPU DETAIL: Transfer to T 
DBG(48594386)> CPU CMD: Exec 0266: 00 60 4397 1525 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594387)> CPU DETAIL: M4 Address Modifier: 0065 
DBG(48594387)> CPU DETAIL: Read R 0462: 0000000233090000 
DBG(48594388)> CPU DETAIL: Write 1525: 0000000233090000 
DBG(48594390)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594391)> CPU DETAIL: Read R 0266: 0060439715250000 
DBG(48594392)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594393)> CPU DETAIL: Result: 0060439715260000 
DBG(48594394)> CPU DETAIL: Write 0266: 0060439715260000 
DBG(48594396)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594397)> CPU DETAIL: Read R 1625: 0000000000000124 
DBG(48594398)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594399)> CPU DETAIL: Result: 0000000000000125 
DBG(48594400)> CPU DETAIL: Write 1625: 0000000000000125 
DBG(48594402)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594403)> CPU DETAIL: M4: 0066 
DBG(48594404)> CPU DETAIL: M6: 0071 
DBG(48594405)> CPU DETAIL: M8: 0016 
DBG(48594408)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594409)> CPU DETAIL: M8: 0017 
DBG(48594410)> CPU DETAIL: Transfer to T 
DBG(48594412)> CPU CMD: Exec 0266: 00 60 4397 1526 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594413)> CPU DETAIL: M4 Address Modifier: 0066 
DBG(48594413)> CPU DETAIL: Read R 0463: 0000000000000000 
DBG(48594414)> CPU DETAIL: Write 1526: 0000000000000000 
DBG(48594416)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594417)> CPU DETAIL: Read R 0266: 0060439715260000 
DBG(48594418)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594419)> CPU DETAIL: Result: 0060439715270000 
DBG(48594420)> CPU DETAIL: Write 0266: 0060439715270000 
DBG(48594422)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594423)> CPU DETAIL: Read R 1625: 0000000000000125 
DBG(48594424)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594425)> CPU DETAIL: Result: 0000000000000126 
DBG(48594426)> CPU DETAIL: Write 1625: 0000000000000126 
DBG(48594428)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594429)> CPU DETAIL: M4: 0067 
DBG(48594430)> CPU DETAIL: M6: 0071 
DBG(48594431)> CPU DETAIL: M8: 0017 
DBG(48594434)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594435)> CPU DETAIL: M8: 0018 
DBG(48594436)> CPU DETAIL: Transfer to T 
DBG(48594438)> CPU CMD: Exec 0266: 00 60 4397 1527 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48594439)> CPU DETAIL: M4 Address Modifier: 0067 
DBG(48594439)> CPU DETAIL: Read R 0464: 0000000000000000 
DBG(48594440)> CPU DETAIL: Write 1527: 0000000000000000 
DBG(48594442)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48594443)> CPU DETAIL: Read R 0266: 0060439715270000 
DBG(48594444)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594445)> CPU DETAIL: Result: 0060439715280000 
DBG(48594446)> CPU DETAIL: Write 0266: 0060439715280000 
DBG(48594448)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48594449)> CPU DETAIL: Read R 1625: 0000000000000126 
DBG(48594450)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48594451)> CPU DETAIL: Result: 0000000000000127 
DBG(48594452)> CPU DETAIL: Write 1625: 0000000000000127 
DBG(48594454)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48594455)> CPU DETAIL: M4: 0068 
DBG(48594456)> CPU DETAIL: M6: 0071 
DBG(48594457)> CPU DETAIL: M8: 0018 
DBG(48594460)> CPU CMD: Exec 0270: 08 58 0001 0019 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48594461)> CPU DETAIL: M8: 0019 
DBG(48594464)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48594467)> CPU CMD: Exec 0272: 00 60 1699 0196 0179   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48594468)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48594469)> CPU DETAIL: Transfer to T 
DBG(48594469)> CPU DETAIL: Write 0196: 0060164601400118 
DBG(48594471)> CPU CMD: Exec 0179: 00 40 1611 1619 0000   (1611 num of word in output block) + (1619 event rec len NNN) -> REG1   
DBG(48594472)> CPU DETAIL: Read R 1611: 0000000000000016 
DBG(48594473)> CPU DETAIL: Read S 1619: 0000000000000013 
DBG(48594474)> CPU DETAIL: Result: 0000000000000029 
DBG(48594477)> CPU CMD: Exec 0180: 00 41 1650 0000 0000   200 - REG1                                     check if room in output buf   
DBG(48594478)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48594479)> CPU DETAIL: Result: 0000000000000171 
DBG(48594482)> CPU CMD: Exec 0181: 00 63 0185 0182 0183   if >0 goto 0185, =0 goto 182, <0 goto 0183   
DBG(48594483)> CPU DETAIL: REG1: 0000000000000171
DBG(48594483)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48594485)> CPU CMD: Exec 0185: 00 54 0000 0000 0000   clear M8   
DBG(48594486)> CPU DETAIL: M4: 0068 
DBG(48594487)> CPU DETAIL: M6: 0071 
DBG(48594488)> CPU DETAIL: Clear M8
DBG(48594488)> CPU DETAIL: M8: 0000 
DBG(48594491)> CPU CMD: Exec 0186: 96 60 1619 0000 0000   set instr 0194 to ...   
DBG(48594492)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48594493)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48594496)> CPU CMD: Exec 0187: 00 40 1662 0000 0194   ... loop on M8 up to (1619 event rec len NNN from tape 1)    
DBG(48594497)> CPU DETAIL: Read R 1662: 0858000100000191 
DBG(48594498)> CPU DETAIL: Result: 0858000100130191 
DBG(48594499)> CPU DETAIL: Write 0194: 0858000100130191 
DBG(48594501)> CPU CMD: Exec 0188: 00 42 0599 1655 0000   mask (0599 event w2 from tape 1) to get event code   
DBG(48594502)> CPU DETAIL: Read R 0599: 0100000233090000 
DBG(48594503)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48594504)> CPU DETAIL: Result: 0000000233090000 
DBG(48594507)> CPU CMD: Exec 0189: 00 72 1636 0000 0191   if <> (1636 last event saved in tape 5) goto 0191   
DBG(48594508)> CPU DETAIL: Read R 1636: 0000000233030000 
DBG(48594509)> CPU DETAIL: Diff: REG1: 9999999999940000
DBG(48594510)> CPU DETAIL: Transfer to T 
DBG(48594512)> CPU CMD: Exec 0191: 00 60 8598 1216 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594513)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48594513)> CPU DETAIL: Read R 0598: 0130000000141015 
DBG(48594514)> CPU DETAIL: Write 1216: 0130000000141015 
DBG(48594516)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594517)> CPU DETAIL: Read R 0191: 0060859812160000 
DBG(48594518)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594519)> CPU DETAIL: Result: 0060859812170000 
DBG(48594520)> CPU DETAIL: Write 0191: 0060859812170000 
DBG(48594522)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594523)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594524)> CPU DETAIL: Read S 1611: 0000000000000016 
DBG(48594525)> CPU DETAIL: Result: 0000000000000017 
DBG(48594526)> CPU DETAIL: Write 1611: 0000000000000017 
DBG(48594528)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594529)> CPU DETAIL: M8: 0001 
DBG(48594530)> CPU DETAIL: Transfer to T 
DBG(48594532)> CPU CMD: Exec 0191: 00 60 8598 1217 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594533)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48594533)> CPU DETAIL: Read R 0599: 0100000233090000 
DBG(48594534)> CPU DETAIL: Write 1217: 0100000233090000 
DBG(48594536)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594537)> CPU DETAIL: Read R 0191: 0060859812170000 
DBG(48594538)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594539)> CPU DETAIL: Result: 0060859812180000 
DBG(48594540)> CPU DETAIL: Write 0191: 0060859812180000 
DBG(48594542)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594543)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594544)> CPU DETAIL: Read S 1611: 0000000000000017 
DBG(48594545)> CPU DETAIL: Result: 0000000000000018 
DBG(48594546)> CPU DETAIL: Write 1611: 0000000000000018 
DBG(48594548)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594549)> CPU DETAIL: M8: 0002 
DBG(48594550)> CPU DETAIL: Transfer to T 
DBG(48594552)> CPU CMD: Exec 0191: 00 60 8598 1218 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594553)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48594553)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48594554)> CPU DETAIL: Write 1218: 0000000000000000 
DBG(48594556)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594557)> CPU DETAIL: Read R 0191: 0060859812180000 
DBG(48594558)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594559)> CPU DETAIL: Result: 0060859812190000 
DBG(48594560)> CPU DETAIL: Write 0191: 0060859812190000 
DBG(48594562)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594563)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594564)> CPU DETAIL: Read S 1611: 0000000000000018 
DBG(48594565)> CPU DETAIL: Result: 0000000000000019 
DBG(48594566)> CPU DETAIL: Write 1611: 0000000000000019 
DBG(48594568)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594569)> CPU DETAIL: M8: 0003 
DBG(48594570)> CPU DETAIL: Transfer to T 
DBG(48594572)> CPU CMD: Exec 0191: 00 60 8598 1219 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594573)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48594573)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48594574)> CPU DETAIL: Write 1219: 0000000000000000 
DBG(48594576)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594577)> CPU DETAIL: Read R 0191: 0060859812190000 
DBG(48594578)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594579)> CPU DETAIL: Result: 0060859812200000 
DBG(48594580)> CPU DETAIL: Write 0191: 0060859812200000 
DBG(48594582)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594583)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594584)> CPU DETAIL: Read S 1611: 0000000000000019 
DBG(48594585)> CPU DETAIL: Result: 0000000000000020 
DBG(48594586)> CPU DETAIL: Write 1611: 0000000000000020 
DBG(48594588)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594589)> CPU DETAIL: M8: 0004 
DBG(48594590)> CPU DETAIL: Transfer to T 
DBG(48594592)> CPU CMD: Exec 0191: 00 60 8598 1220 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594593)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48594593)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48594594)> CPU DETAIL: Write 1220: 0000000000000000 
DBG(48594596)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594597)> CPU DETAIL: Read R 0191: 0060859812200000 
DBG(48594598)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594599)> CPU DETAIL: Result: 0060859812210000 
DBG(48594600)> CPU DETAIL: Write 0191: 0060859812210000 
DBG(48594602)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594603)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594604)> CPU DETAIL: Read S 1611: 0000000000000020 
DBG(48594605)> CPU DETAIL: Result: 0000000000000021 
DBG(48594606)> CPU DETAIL: Write 1611: 0000000000000021 
DBG(48594608)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594609)> CPU DETAIL: M8: 0005 
DBG(48594610)> CPU DETAIL: Transfer to T 
DBG(48594612)> CPU CMD: Exec 0191: 00 60 8598 1221 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594613)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48594613)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48594614)> CPU DETAIL: Write 1221: 0000000000000000 
DBG(48594616)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594617)> CPU DETAIL: Read R 0191: 0060859812210000 
DBG(48594618)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594619)> CPU DETAIL: Result: 0060859812220000 
DBG(48594620)> CPU DETAIL: Write 0191: 0060859812220000 
DBG(48594622)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594623)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594624)> CPU DETAIL: Read S 1611: 0000000000000021 
DBG(48594625)> CPU DETAIL: Result: 0000000000000022 
DBG(48594626)> CPU DETAIL: Write 1611: 0000000000000022 
DBG(48594628)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594629)> CPU DETAIL: M8: 0006 
DBG(48594630)> CPU DETAIL: Transfer to T 
DBG(48594632)> CPU CMD: Exec 0191: 00 60 8598 1222 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594633)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48594633)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48594634)> CPU DETAIL: Write 1222: 3336000000000200 
DBG(48594636)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594637)> CPU DETAIL: Read R 0191: 0060859812220000 
DBG(48594638)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594639)> CPU DETAIL: Result: 0060859812230000 
DBG(48594640)> CPU DETAIL: Write 0191: 0060859812230000 
DBG(48594642)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594643)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594644)> CPU DETAIL: Read S 1611: 0000000000000022 
DBG(48594645)> CPU DETAIL: Result: 0000000000000023 
DBG(48594646)> CPU DETAIL: Write 1611: 0000000000000023 
DBG(48594648)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594649)> CPU DETAIL: M8: 0007 
DBG(48594650)> CPU DETAIL: Transfer to T 
DBG(48594652)> CPU CMD: Exec 0191: 00 60 8598 1223 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594653)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48594653)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48594654)> CPU DETAIL: Write 1223: 0000000233010000 
DBG(48594656)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594657)> CPU DETAIL: Read R 0191: 0060859812230000 
DBG(48594658)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594659)> CPU DETAIL: Result: 0060859812240000 
DBG(48594660)> CPU DETAIL: Write 0191: 0060859812240000 
DBG(48594662)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594663)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594664)> CPU DETAIL: Read S 1611: 0000000000000023 
DBG(48594665)> CPU DETAIL: Result: 0000000000000024 
DBG(48594666)> CPU DETAIL: Write 1611: 0000000000000024 
DBG(48594668)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594669)> CPU DETAIL: M8: 0008 
DBG(48594670)> CPU DETAIL: Transfer to T 
DBG(48594672)> CPU CMD: Exec 0191: 00 60 8598 1224 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594673)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48594673)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48594674)> CPU DETAIL: Write 1224: 0000000000000000 
DBG(48594676)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594677)> CPU DETAIL: Read R 0191: 0060859812240000 
DBG(48594678)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594679)> CPU DETAIL: Result: 0060859812250000 
DBG(48594680)> CPU DETAIL: Write 0191: 0060859812250000 
DBG(48594682)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594683)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594684)> CPU DETAIL: Read S 1611: 0000000000000024 
DBG(48594685)> CPU DETAIL: Result: 0000000000000025 
DBG(48594686)> CPU DETAIL: Write 1611: 0000000000000025 
DBG(48594688)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594689)> CPU DETAIL: M8: 0009 
DBG(48594690)> CPU DETAIL: Transfer to T 
DBG(48594692)> CPU CMD: Exec 0191: 00 60 8598 1225 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594693)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48594693)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48594694)> CPU DETAIL: Write 1225: 0000000000000000 
DBG(48594696)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594697)> CPU DETAIL: Read R 0191: 0060859812250000 
DBG(48594698)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594699)> CPU DETAIL: Result: 0060859812260000 
DBG(48594700)> CPU DETAIL: Write 0191: 0060859812260000 
DBG(48594702)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594703)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594704)> CPU DETAIL: Read S 1611: 0000000000000025 
DBG(48594705)> CPU DETAIL: Result: 0000000000000026 
DBG(48594706)> CPU DETAIL: Write 1611: 0000000000000026 
DBG(48594708)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594709)> CPU DETAIL: M8: 0010 
DBG(48594710)> CPU DETAIL: Transfer to T 
DBG(48594712)> CPU CMD: Exec 0191: 00 60 8598 1226 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594713)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48594713)> CPU DETAIL: Read R 0608: 0000000233030000 
DBG(48594714)> CPU DETAIL: Write 1226: 0000000233030000 
DBG(48594716)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594717)> CPU DETAIL: Read R 0191: 0060859812260000 
DBG(48594718)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594719)> CPU DETAIL: Result: 0060859812270000 
DBG(48594720)> CPU DETAIL: Write 0191: 0060859812270000 
DBG(48594722)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594723)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594724)> CPU DETAIL: Read S 1611: 0000000000000026 
DBG(48594725)> CPU DETAIL: Result: 0000000000000027 
DBG(48594726)> CPU DETAIL: Write 1611: 0000000000000027 
DBG(48594728)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594729)> CPU DETAIL: M8: 0011 
DBG(48594730)> CPU DETAIL: Transfer to T 
DBG(48594732)> CPU CMD: Exec 0191: 00 60 8598 1227 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594733)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48594733)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48594734)> CPU DETAIL: Write 1227: 0000000000000000 
DBG(48594736)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594737)> CPU DETAIL: Read R 0191: 0060859812270000 
DBG(48594738)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594739)> CPU DETAIL: Result: 0060859812280000 
DBG(48594740)> CPU DETAIL: Write 0191: 0060859812280000 
DBG(48594742)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594743)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594744)> CPU DETAIL: Read S 1611: 0000000000000027 
DBG(48594745)> CPU DETAIL: Result: 0000000000000028 
DBG(48594746)> CPU DETAIL: Write 1611: 0000000000000028 
DBG(48594748)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594749)> CPU DETAIL: M8: 0012 
DBG(48594750)> CPU DETAIL: Transfer to T 
DBG(48594752)> CPU CMD: Exec 0191: 00 60 8598 1228 0000   (M8+0598 event rec from tape 1) -> (1200 tape 5 event output block)   
DBG(48594753)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48594753)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48594754)> CPU DETAIL: Write 1228: 0000000000000000 
DBG(48594756)> CPU CMD: Exec 0192: 00 40 0191 1648 0191   incr_s   
DBG(48594757)> CPU DETAIL: Read R 0191: 0060859812280000 
DBG(48594758)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594759)> CPU DETAIL: Result: 0060859812290000 
DBG(48594760)> CPU DETAIL: Write 0191: 0060859812290000 
DBG(48594762)> CPU CMD: Exec 0193: 00 40 1639 1611 1611   incr (1611 num of word in output block)   
DBG(48594763)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48594764)> CPU DETAIL: Read S 1611: 0000000000000028 
DBG(48594765)> CPU DETAIL: Result: 0000000000000029 
DBG(48594766)> CPU DETAIL: Write 1611: 0000000000000029 
DBG(48594768)> CPU CMD: Exec 0194: 08 58 0001 0013 0191   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0191   
DBG(48594769)> CPU DETAIL: M8: 0013 
DBG(48594772)> CPU CMD: Exec 0195: 00 42 0599 1655 1636   mask (0599 event w2 from tape 1) to get event code -> (1636 last event saved 
DBG(48594773)> CPU DETAIL: Read R 0599: 0100000233090000 
DBG(48594774)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48594775)> CPU DETAIL: Result: 0000000233090000 
DBG(48594776)> CPU DETAIL: Write 1636: 0000000233090000 
DBG(48594778)> CPU CMD: Exec 0196: 00 60 1646 0140 0118   nop / set nop in 0140, goto 0118 read event from tape 2 input block    
DBG(48594779)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48594780)> CPU DETAIL: Transfer to T 
DBG(48594780)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48594782)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48594783)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48594784)> CPU DETAIL: Read S 1606: 0000000000000068 
DBG(48594785)> CPU DETAIL: Result: 0000000000000013 
DBG(48594788)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48594789)> CPU DETAIL: REG1: 0000000000000013
DBG(48594789)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48594791)> CPU CMD: Exec 0124: 00 60 0471 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48594792)> CPU DETAIL: Read R 0471: 0000000000000101 
DBG(48594793)> CPU DETAIL: Write 1608: 0000000000000101 
DBG(48594795)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48594796)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48594796)> CPU DETAIL: Read R 0465: 0130000000151113 
DBG(48594797)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48594798)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48594800)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48594801)> CPU DETAIL: Read R 1608: 0000000000000101 
DBG(48594802)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48594803)> CPU DETAIL: Result: 0000000000000100 
DBG(48594804)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48594805)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48594807)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48594808)> CPU DETAIL: Read R 1608: 0000000000000101 
DBG(48594809)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48594810)> CPU DETAIL: Result: 0000000000000001 
DBG(48594811)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48594813)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48594814)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48594815)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48594816)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48594817)> CPU DETAIL: Transfer to T 
DBG(48594819)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48594820)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48594821)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48594822)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48594823)> CPU DETAIL: Transfer to T 
DBG(48594825)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48594826)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48594827)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48594828)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48594828)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48594829)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48594830)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48594831)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48594833)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48594834)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48594835)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48594836)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48594836)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48594837)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48594838)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48594839)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48594841)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48594842)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48594843)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48594844)> CPU DETAIL: Result: 0000000000000003 
DBG(48594845)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48594847)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48594848)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48594849)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48594850)> CPU DETAIL: Result: 0000000000000003 
DBG(48594851)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48594853)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48594854)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48594855)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48594858)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48594859)> CPU DETAIL: Read R 0124: 0060047116080000 
DBG(48594860)> CPU DETAIL: Result: 0060048416080000 
DBG(48594861)> CPU DETAIL: Write 0124: 0060048416080000 
DBG(48594863)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48594864)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48594865)> CPU DETAIL: Read S 1606: 0000000000000068 
DBG(48594866)> CPU DETAIL: Result: 0000000000000081 
DBG(48594867)> CPU DETAIL: Write 1606: 0000000000000081 
DBG(48594869)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48594872)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48594873)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48594874)> CPU DETAIL: Read S 1615: 0000000000000071 
DBG(48594875)> CPU DETAIL: Result: 0000000000000010 
DBG(48594878)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48594879)> CPU DETAIL: REG1: 0000000000000010
DBG(48594879)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48594881)> CPU CMD: Exec 0149: 00 60 1076 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48594882)> CPU DETAIL: Read R 1076: 0000000000000100 
DBG(48594883)> CPU DETAIL: Write 1616: 0000000000000100 
DBG(48594885)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48594886)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48594886)> CPU DETAIL: Read R 1070: 0100000000151113 
DBG(48594887)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48594888)> CPU DETAIL: Write 1619: 0000000000000010 
DBG(48594890)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48594891)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48594892)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48594893)> CPU DETAIL: Result: 0000000000000100 
DBG(48594894)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48594895)> CPU DETAIL: Write 1617: 0000000000000001 
DBG(48594897)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48594898)> CPU DETAIL: Read R 1616: 0000000000000100 
DBG(48594899)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48594900)> CPU DETAIL: Result: 0000000000000000 
DBG(48594901)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48594903)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48594904)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48594905)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48594906)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48594907)> CPU DETAIL: Transfer to T 
DBG(48594909)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48594910)> CPU DETAIL: Read R 1617: 0000000000000001 
DBG(48594911)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48594912)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48594912)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48594913)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48594914)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48594915)> CPU DETAIL: Write 1617: 9600000000000003 
DBG(48594917)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48594918)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48594919)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48594920)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48594920)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48594921)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48594922)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48594923)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48594925)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48594926)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48594927)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48594930)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48594931)> CPU DETAIL: Read R 0149: 0060107616160000 
DBG(48594932)> CPU DETAIL: Result: 0060108616160000 
DBG(48594933)> CPU DETAIL: Write 0149: 0060108616160000 
DBG(48594935)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48594936)> CPU DETAIL: Read R 1617: 9600000000000003 
DBG(48594937)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48594938)> CPU DETAIL: Result: 0000000000000003 
DBG(48594939)> CPU DETAIL: Write 1617: 0000000000000003 
DBG(48594941)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48594942)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48594943)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48594944)> CPU DETAIL: Result: 0000000000000000 
DBG(48594945)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48594947)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48594948)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48594949)> CPU DETAIL: Read S 1615: 0000000000000071 
DBG(48594950)> CPU DETAIL: Result: 0000000000000081 
DBG(48594951)> CPU DETAIL: Write 1615: 0000000000000081 
DBG(48594953)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48594954)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48594955)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48594958)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48594959)> CPU DETAIL: Read R 0167: 0658000100710165 
DBG(48594960)> CPU DETAIL: Result: 0658000100810165 
DBG(48594961)> CPU DETAIL: Write 0167: 0658000100810165 
DBG(48594963)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48594964)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(48594964)> CPU DETAIL: Read R 1070: 0100000000151113 
DBG(48594965)> CPU DETAIL: Write 0598: 0100000000151113 
DBG(48594967)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48594968)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48594969)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594970)> CPU DETAIL: Result: 0060699905990000 
DBG(48594971)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48594973)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48594974)> CPU DETAIL: M6: 0072 
DBG(48594975)> CPU DETAIL: Transfer to T 
DBG(48594977)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48594978)> CPU DETAIL: M6 Address Modifier: 0072 
DBG(48594978)> CPU DETAIL: Read R 1071: 0000000249999990 
DBG(48594979)> CPU DETAIL: Write 0599: 0000000249999990 
DBG(48594981)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48594982)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48594983)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594984)> CPU DETAIL: Result: 0060699906000000 
DBG(48594985)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48594987)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48594988)> CPU DETAIL: M6: 0073 
DBG(48594989)> CPU DETAIL: Transfer to T 
DBG(48594991)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48594992)> CPU DETAIL: M6 Address Modifier: 0073 
DBG(48594992)> CPU DETAIL: Read R 1072: 0000000000000000 
DBG(48594993)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48594995)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48594996)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48594997)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48594998)> CPU DETAIL: Result: 0060699906010000 
DBG(48594999)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48595001)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595002)> CPU DETAIL: M6: 0074 
DBG(48595003)> CPU DETAIL: Transfer to T 
DBG(48595005)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595006)> CPU DETAIL: M6 Address Modifier: 0074 
DBG(48595006)> CPU DETAIL: Read R 1073: 0000000000000000 
DBG(48595007)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48595009)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595010)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48595011)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595012)> CPU DETAIL: Result: 0060699906020000 
DBG(48595013)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48595015)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595016)> CPU DETAIL: M6: 0075 
DBG(48595017)> CPU DETAIL: Transfer to T 
DBG(48595019)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595020)> CPU DETAIL: M6 Address Modifier: 0075 
DBG(48595020)> CPU DETAIL: Read R 1074: 0000000000000000 
DBG(48595021)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48595023)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595024)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48595025)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595026)> CPU DETAIL: Result: 0060699906030000 
DBG(48595027)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48595029)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595030)> CPU DETAIL: M6: 0076 
DBG(48595031)> CPU DETAIL: Transfer to T 
DBG(48595033)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595034)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(48595034)> CPU DETAIL: Read R 1075: 0000000000000000 
DBG(48595035)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48595037)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595038)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48595039)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595040)> CPU DETAIL: Result: 0060699906040000 
DBG(48595041)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48595043)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595044)> CPU DETAIL: M6: 0077 
DBG(48595045)> CPU DETAIL: Transfer to T 
DBG(48595047)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595048)> CPU DETAIL: M6 Address Modifier: 0077 
DBG(48595048)> CPU DETAIL: Read R 1076: 0000000000000100 
DBG(48595049)> CPU DETAIL: Write 0604: 0000000000000100 
DBG(48595051)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595052)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48595053)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595054)> CPU DETAIL: Result: 0060699906050000 
DBG(48595055)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48595057)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595058)> CPU DETAIL: M6: 0078 
DBG(48595059)> CPU DETAIL: Transfer to T 
DBG(48595061)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595062)> CPU DETAIL: M6 Address Modifier: 0078 
DBG(48595062)> CPU DETAIL: Read R 1077: 0000000242009990 
DBG(48595063)> CPU DETAIL: Write 0605: 0000000242009990 
DBG(48595065)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595066)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48595067)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595068)> CPU DETAIL: Result: 0060699906060000 
DBG(48595069)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48595071)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595072)> CPU DETAIL: M6: 0079 
DBG(48595073)> CPU DETAIL: Transfer to T 
DBG(48595075)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595076)> CPU DETAIL: M6 Address Modifier: 0079 
DBG(48595076)> CPU DETAIL: Read R 1078: 0000000000033555 
DBG(48595077)> CPU DETAIL: Write 0606: 0000000000033555 
DBG(48595079)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595080)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48595081)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595082)> CPU DETAIL: Result: 0060699906070000 
DBG(48595083)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48595085)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595086)> CPU DETAIL: M6: 0080 
DBG(48595087)> CPU DETAIL: Transfer to T 
DBG(48595089)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48595090)> CPU DETAIL: M6 Address Modifier: 0080 
DBG(48595090)> CPU DETAIL: Read R 1079: 0000000000033666 
DBG(48595091)> CPU DETAIL: Write 0607: 0000000000033666 
DBG(48595093)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48595094)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48595095)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595096)> CPU DETAIL: Result: 0060699906080000 
DBG(48595097)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48595099)> CPU CMD: Exec 0167: 06 58 0001 0081 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48595100)> CPU DETAIL: M6: 0081 
DBG(48595103)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48595104)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48595105)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48595107)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48595110)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48595111)> CPU DETAIL: Read R 1609: 0000000000000003 
DBG(48595112)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000300000000 
DBG(48595115)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48595116)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48595117)> CPU DETAIL: Result: 0000001000000000 
DBG(48595120)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48595121)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48595122)> CPU DETAIL: Result: 0042440716550000 
DBG(48595123)> CPU DETAIL: Write 0174: 0042440716550000 
DBG(48595125)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48595126)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48595127)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48595128)> CPU DETAIL: Result: 0000000249999990 
DBG(48595129)> CPU DETAIL: Write 1620: 0000000249999990 
DBG(48595131)> CPU CMD: Exec 0174: 00 42 4407 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48595132)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595132)> CPU DETAIL: Read R 0475: 0000000249999990 
DBG(48595133)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48595134)> CPU DETAIL: Result: 0000000249999990 
DBG(48595137)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48595138)> CPU DETAIL: Read S 1620: 0000000249999990 
DBG(48595139)> CPU DETAIL: Result: 0000000000000000 
DBG(48595142)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48595143)> CPU DETAIL: REG1: 0000000000000000
DBG(48595143)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48595145)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48595146)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48595147)> CPU DETAIL: Transfer to T 
DBG(48595147)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48595149)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48595150)> CPU DETAIL: Read R 0605: 0000000242009990 
DBG(48595151)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48595152)> CPU DETAIL: Result: 0000000242009990 
DBG(48595153)> CPU DETAIL: Write 1620: 0000000242009990 
DBG(48595155)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48595156)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595156)> CPU DETAIL: Read R 0466: 0000000242009990 
DBG(48595157)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48595158)> CPU DETAIL: Result: 0000000242009990 
DBG(48595161)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48595162)> CPU DETAIL: Read R 1620: 0000000242009990 
DBG(48595163)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48595164)> CPU DETAIL: Transfer to T 
DBG(48595166)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48595167)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48595168)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48595170)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48595171)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48595172)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48595174)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48595175)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48595176)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48595177)> CPU DETAIL: Result: 0100000249999990 
DBG(48595178)> CPU DETAIL: Write 0599: 0100000249999990 
DBG(48595180)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48595181)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000001 
DBG(48595182)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48595184)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48595185)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48595186)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48595187)> CPU DETAIL: Result: 0000000000000100 
DBG(48595188)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48595191)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48595192)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48595193)> CPU DETAIL: Result: 0000000000000000 
DBG(48595196)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48595197)> CPU DETAIL: REG1: 0000000000000000
DBG(48595197)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48595199)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48595200)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48595201)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48595203)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48595204)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48595205)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48595207)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48595208)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48595209)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48595210)> CPU DETAIL: Result: 0000000000000100 
DBG(48595211)> CPU DETAIL: Word Shift 12 digits left: REG1: 0100000000000000 
DBG(48595214)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48595215)> CPU DETAIL: Read R 0599: 0100000249999990 
DBG(48595216)> CPU DETAIL: Result: 0000000249999990 
DBG(48595217)> CPU DETAIL: Write 0599: 0000000249999990 
DBG(48595219)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48595220)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48595221)> CPU DETAIL: Read S 1626: 0000000000000042 
DBG(48595222)> CPU DETAIL: Result: 0000000000000052 
DBG(48595225)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48595226)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48595227)> CPU DETAIL: Result: 0000000000000148 
DBG(48595230)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48595231)> CPU DETAIL: REG1: 0000000000000148
DBG(48595231)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48595233)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48595234)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48595235)> CPU DETAIL: Transfer to T 
DBG(48595235)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48595237)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48595238)> CPU DETAIL: M4: 0068 
DBG(48595239)> CPU DETAIL: M6: 0081 
DBG(48595240)> CPU DETAIL: Clear M8
DBG(48595240)> CPU DETAIL: M8: 0000 
DBG(48595243)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48595244)> CPU DETAIL: Read R 1619: 0000000000000010 
DBG(48595245)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48595248)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48595249)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48595250)> CPU DETAIL: Result: 0858000100100296 
DBG(48595251)> CPU DETAIL: Write 0299: 0858000100100296 
DBG(48595253)> CPU CMD: Exec 0296: 00 60 8598 0840 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595254)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48595254)> CPU DETAIL: Read R 0598: 0100000000151113 
DBG(48595255)> CPU DETAIL: Write 0840: 0100000000151113 
DBG(48595257)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595258)> CPU DETAIL: Read R 0296: 0060859808400000 
DBG(48595259)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595260)> CPU DETAIL: Result: 0060859808410000 
DBG(48595261)> CPU DETAIL: Write 0296: 0060859808410000 
DBG(48595263)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595264)> CPU DETAIL: Read R 1626: 0000000000000042 
DBG(48595265)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595266)> CPU DETAIL: Result: 0000000000000043 
DBG(48595267)> CPU DETAIL: Write 1626: 0000000000000043 
DBG(48595269)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595270)> CPU DETAIL: M8: 0001 
DBG(48595271)> CPU DETAIL: Transfer to T 
DBG(48595273)> CPU CMD: Exec 0296: 00 60 8598 0841 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595274)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48595274)> CPU DETAIL: Read R 0599: 0000000249999990 
DBG(48595275)> CPU DETAIL: Write 0841: 0000000249999990 
DBG(48595277)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595278)> CPU DETAIL: Read R 0296: 0060859808410000 
DBG(48595279)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595280)> CPU DETAIL: Result: 0060859808420000 
DBG(48595281)> CPU DETAIL: Write 0296: 0060859808420000 
DBG(48595283)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595284)> CPU DETAIL: Read R 1626: 0000000000000043 
DBG(48595285)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595286)> CPU DETAIL: Result: 0000000000000044 
DBG(48595287)> CPU DETAIL: Write 1626: 0000000000000044 
DBG(48595289)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595290)> CPU DETAIL: M8: 0002 
DBG(48595291)> CPU DETAIL: Transfer to T 
DBG(48595293)> CPU CMD: Exec 0296: 00 60 8598 0842 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595294)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48595294)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48595295)> CPU DETAIL: Write 0842: 0000000000000000 
DBG(48595297)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595298)> CPU DETAIL: Read R 0296: 0060859808420000 
DBG(48595299)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595300)> CPU DETAIL: Result: 0060859808430000 
DBG(48595301)> CPU DETAIL: Write 0296: 0060859808430000 
DBG(48595303)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595304)> CPU DETAIL: Read R 1626: 0000000000000044 
DBG(48595305)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595306)> CPU DETAIL: Result: 0000000000000045 
DBG(48595307)> CPU DETAIL: Write 1626: 0000000000000045 
DBG(48595309)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595310)> CPU DETAIL: M8: 0003 
DBG(48595311)> CPU DETAIL: Transfer to T 
DBG(48595313)> CPU CMD: Exec 0296: 00 60 8598 0843 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595314)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48595314)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48595315)> CPU DETAIL: Write 0843: 0000000000000000 
DBG(48595317)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595318)> CPU DETAIL: Read R 0296: 0060859808430000 
DBG(48595319)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595320)> CPU DETAIL: Result: 0060859808440000 
DBG(48595321)> CPU DETAIL: Write 0296: 0060859808440000 
DBG(48595323)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595324)> CPU DETAIL: Read R 1626: 0000000000000045 
DBG(48595325)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595326)> CPU DETAIL: Result: 0000000000000046 
DBG(48595327)> CPU DETAIL: Write 1626: 0000000000000046 
DBG(48595329)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595330)> CPU DETAIL: M8: 0004 
DBG(48595331)> CPU DETAIL: Transfer to T 
DBG(48595333)> CPU CMD: Exec 0296: 00 60 8598 0844 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595334)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48595334)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48595335)> CPU DETAIL: Write 0844: 0000000000000000 
DBG(48595337)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595338)> CPU DETAIL: Read R 0296: 0060859808440000 
DBG(48595339)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595340)> CPU DETAIL: Result: 0060859808450000 
DBG(48595341)> CPU DETAIL: Write 0296: 0060859808450000 
DBG(48595343)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595344)> CPU DETAIL: Read R 1626: 0000000000000046 
DBG(48595345)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595346)> CPU DETAIL: Result: 0000000000000047 
DBG(48595347)> CPU DETAIL: Write 1626: 0000000000000047 
DBG(48595349)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595350)> CPU DETAIL: M8: 0005 
DBG(48595351)> CPU DETAIL: Transfer to T 
DBG(48595353)> CPU CMD: Exec 0296: 00 60 8598 0845 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595354)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48595354)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48595355)> CPU DETAIL: Write 0845: 0000000000000000 
DBG(48595357)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595358)> CPU DETAIL: Read R 0296: 0060859808450000 
DBG(48595359)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595360)> CPU DETAIL: Result: 0060859808460000 
DBG(48595361)> CPU DETAIL: Write 0296: 0060859808460000 
DBG(48595363)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595364)> CPU DETAIL: Read R 1626: 0000000000000047 
DBG(48595365)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595366)> CPU DETAIL: Result: 0000000000000048 
DBG(48595367)> CPU DETAIL: Write 1626: 0000000000000048 
DBG(48595369)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595370)> CPU DETAIL: M8: 0006 
DBG(48595371)> CPU DETAIL: Transfer to T 
DBG(48595373)> CPU CMD: Exec 0296: 00 60 8598 0846 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595374)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48595374)> CPU DETAIL: Read R 0604: 0000000000000100 
DBG(48595375)> CPU DETAIL: Write 0846: 0000000000000100 
DBG(48595377)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595378)> CPU DETAIL: Read R 0296: 0060859808460000 
DBG(48595379)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595380)> CPU DETAIL: Result: 0060859808470000 
DBG(48595381)> CPU DETAIL: Write 0296: 0060859808470000 
DBG(48595383)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595384)> CPU DETAIL: Read R 1626: 0000000000000048 
DBG(48595385)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595386)> CPU DETAIL: Result: 0000000000000049 
DBG(48595387)> CPU DETAIL: Write 1626: 0000000000000049 
DBG(48595389)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595390)> CPU DETAIL: M8: 0007 
DBG(48595391)> CPU DETAIL: Transfer to T 
DBG(48595393)> CPU CMD: Exec 0296: 00 60 8598 0847 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595394)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48595394)> CPU DETAIL: Read R 0605: 0000000242009990 
DBG(48595395)> CPU DETAIL: Write 0847: 0000000242009990 
DBG(48595397)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595398)> CPU DETAIL: Read R 0296: 0060859808470000 
DBG(48595399)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595400)> CPU DETAIL: Result: 0060859808480000 
DBG(48595401)> CPU DETAIL: Write 0296: 0060859808480000 
DBG(48595403)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595404)> CPU DETAIL: Read R 1626: 0000000000000049 
DBG(48595405)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595406)> CPU DETAIL: Result: 0000000000000050 
DBG(48595407)> CPU DETAIL: Write 1626: 0000000000000050 
DBG(48595409)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595410)> CPU DETAIL: M8: 0008 
DBG(48595411)> CPU DETAIL: Transfer to T 
DBG(48595413)> CPU CMD: Exec 0296: 00 60 8598 0848 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595414)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48595414)> CPU DETAIL: Read R 0606: 0000000000033555 
DBG(48595415)> CPU DETAIL: Write 0848: 0000000000033555 
DBG(48595417)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595418)> CPU DETAIL: Read R 0296: 0060859808480000 
DBG(48595419)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595420)> CPU DETAIL: Result: 0060859808490000 
DBG(48595421)> CPU DETAIL: Write 0296: 0060859808490000 
DBG(48595423)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595424)> CPU DETAIL: Read R 1626: 0000000000000050 
DBG(48595425)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595426)> CPU DETAIL: Result: 0000000000000051 
DBG(48595427)> CPU DETAIL: Write 1626: 0000000000000051 
DBG(48595429)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595430)> CPU DETAIL: M8: 0009 
DBG(48595431)> CPU DETAIL: Transfer to T 
DBG(48595433)> CPU CMD: Exec 0296: 00 60 8598 0849 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48595434)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48595434)> CPU DETAIL: Read R 0607: 0000000000033666 
DBG(48595435)> CPU DETAIL: Write 0849: 0000000000033666 
DBG(48595437)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48595438)> CPU DETAIL: Read R 0296: 0060859808490000 
DBG(48595439)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595440)> CPU DETAIL: Result: 0060859808500000 
DBG(48595441)> CPU DETAIL: Write 0296: 0060859808500000 
DBG(48595443)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48595444)> CPU DETAIL: Read R 1626: 0000000000000051 
DBG(48595445)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595446)> CPU DETAIL: Result: 0000000000000052 
DBG(48595447)> CPU DETAIL: Write 1626: 0000000000000052 
DBG(48595449)> CPU CMD: Exec 0299: 08 58 0001 0010 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48595450)> CPU DETAIL: M8: 0010 
DBG(48595453)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48595456)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48595457)> CPU DETAIL: Transfer to T 
DBG(48595459)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48595460)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48595461)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48595464)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48595465)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595465)> CPU DETAIL: Read R 0466: 0000000242009990 
DBG(48595466)> CPU DETAIL: Result: 0001000242009990 
DBG(48595467)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595467)> CPU DETAIL: Write 0466: 0001000242009990 
DBG(48595469)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48595470)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595470)> CPU DETAIL: Read R 0466: 0001000242009990 
DBG(48595471)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48595472)> CPU DETAIL: Result: 0001000000000000 
DBG(48595473)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48595474)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48595476)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48595477)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595477)> CPU DETAIL: Read R 0471: 0000000000000101 
DBG(48595478)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48595479)> CPU DETAIL: Result: 0000000000000001 
DBG(48595482)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48595483)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48595484)> CPU DETAIL: Result: 0000000000000000 
DBG(48595487)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48595488)> CPU DETAIL: REG1: 0000000000000000
DBG(48595488)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48595490)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48595491)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48595492)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48595493)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48595495)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48595496)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595496)> CPU DETAIL: Read R 0471: 0000000000000101 
DBG(48595497)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48595498)> CPU DETAIL: Result: 0000000000000001 
DBG(48595499)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48595502)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48595503)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595503)> CPU DETAIL: Read R 0466: 0001000242009990 
DBG(48595504)> CPU DETAIL: Result: 0000000242009990 
DBG(48595505)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595505)> CPU DETAIL: Write 0466: 0000000242009990 
DBG(48595507)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48595508)> CPU DETAIL: Read R 1625: 0000000000000127 
DBG(48595509)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48595510)> CPU DETAIL: Result: 0000000000000140 
DBG(48595513)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48595514)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48595515)> CPU DETAIL: Result: 0000000000000060 
DBG(48595518)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48595519)> CPU DETAIL: REG1: 0000000000000060
DBG(48595519)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48595521)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48595522)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48595523)> CPU DETAIL: Transfer to T 
DBG(48595523)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48595525)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48595526)> CPU DETAIL: M4: 0068 
DBG(48595527)> CPU DETAIL: M6: 0081 
DBG(48595528)> CPU DETAIL: Clear M8
DBG(48595528)> CPU DETAIL: M8: 0000 
DBG(48595531)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48595532)> CPU DETAIL: Read R 1612: 0000000000000010 
DBG(48595533)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595534)> CPU DETAIL: Result: 0000000000000011 
DBG(48595535)> CPU DETAIL: Write 1612: 0000000000000011 
DBG(48595537)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48595538)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48595539)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48595542)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48595543)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48595544)> CPU DETAIL: Result: 0858000100130266 
DBG(48595545)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48595547)> CPU CMD: Exec 0266: 00 60 4397 1528 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595548)> CPU DETAIL: M4 Address Modifier: 0068 
DBG(48595548)> CPU DETAIL: Read R 0465: 0130000000151113 
DBG(48595549)> CPU DETAIL: Write 1528: 0130000000151113 
DBG(48595551)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595552)> CPU DETAIL: Read R 0266: 0060439715280000 
DBG(48595553)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595554)> CPU DETAIL: Result: 0060439715290000 
DBG(48595555)> CPU DETAIL: Write 0266: 0060439715290000 
DBG(48595557)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595558)> CPU DETAIL: Read R 1625: 0000000000000127 
DBG(48595559)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595560)> CPU DETAIL: Result: 0000000000000128 
DBG(48595561)> CPU DETAIL: Write 1625: 0000000000000128 
DBG(48595563)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595564)> CPU DETAIL: M4: 0069 
DBG(48595565)> CPU DETAIL: M6: 0081 
DBG(48595566)> CPU DETAIL: M8: 0000 
DBG(48595569)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595570)> CPU DETAIL: M8: 0001 
DBG(48595571)> CPU DETAIL: Transfer to T 
DBG(48595573)> CPU CMD: Exec 0266: 00 60 4397 1529 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595574)> CPU DETAIL: M4 Address Modifier: 0069 
DBG(48595574)> CPU DETAIL: Read R 0466: 0000000242009990 
DBG(48595575)> CPU DETAIL: Write 1529: 0000000242009990 
DBG(48595577)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595578)> CPU DETAIL: Read R 0266: 0060439715290000 
DBG(48595579)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595580)> CPU DETAIL: Result: 0060439715300000 
DBG(48595581)> CPU DETAIL: Write 0266: 0060439715300000 
DBG(48595583)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595584)> CPU DETAIL: Read R 1625: 0000000000000128 
DBG(48595585)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595586)> CPU DETAIL: Result: 0000000000000129 
DBG(48595587)> CPU DETAIL: Write 1625: 0000000000000129 
DBG(48595589)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595590)> CPU DETAIL: M4: 0070 
DBG(48595591)> CPU DETAIL: M6: 0081 
DBG(48595592)> CPU DETAIL: M8: 0001 
DBG(48595595)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595596)> CPU DETAIL: M8: 0002 
DBG(48595597)> CPU DETAIL: Transfer to T 
DBG(48595599)> CPU CMD: Exec 0266: 00 60 4397 1530 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595600)> CPU DETAIL: M4 Address Modifier: 0070 
DBG(48595600)> CPU DETAIL: Read R 0467: 0000000000000000 
DBG(48595601)> CPU DETAIL: Write 1530: 0000000000000000 
DBG(48595603)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595604)> CPU DETAIL: Read R 0266: 0060439715300000 
DBG(48595605)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595606)> CPU DETAIL: Result: 0060439715310000 
DBG(48595607)> CPU DETAIL: Write 0266: 0060439715310000 
DBG(48595609)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595610)> CPU DETAIL: Read R 1625: 0000000000000129 
DBG(48595611)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595612)> CPU DETAIL: Result: 0000000000000130 
DBG(48595613)> CPU DETAIL: Write 1625: 0000000000000130 
DBG(48595615)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595616)> CPU DETAIL: M4: 0071 
DBG(48595617)> CPU DETAIL: M6: 0081 
DBG(48595618)> CPU DETAIL: M8: 0002 
DBG(48595621)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595622)> CPU DETAIL: M8: 0003 
DBG(48595623)> CPU DETAIL: Transfer to T 
DBG(48595625)> CPU CMD: Exec 0266: 00 60 4397 1531 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595626)> CPU DETAIL: M4 Address Modifier: 0071 
DBG(48595626)> CPU DETAIL: Read R 0468: 0000000000000000 
DBG(48595627)> CPU DETAIL: Write 1531: 0000000000000000 
DBG(48595629)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595630)> CPU DETAIL: Read R 0266: 0060439715310000 
DBG(48595631)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595632)> CPU DETAIL: Result: 0060439715320000 
DBG(48595633)> CPU DETAIL: Write 0266: 0060439715320000 
DBG(48595635)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595636)> CPU DETAIL: Read R 1625: 0000000000000130 
DBG(48595637)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595638)> CPU DETAIL: Result: 0000000000000131 
DBG(48595639)> CPU DETAIL: Write 1625: 0000000000000131 
DBG(48595641)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595642)> CPU DETAIL: M4: 0072 
DBG(48595643)> CPU DETAIL: M6: 0081 
DBG(48595644)> CPU DETAIL: M8: 0003 
DBG(48595647)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595648)> CPU DETAIL: M8: 0004 
DBG(48595649)> CPU DETAIL: Transfer to T 
DBG(48595651)> CPU CMD: Exec 0266: 00 60 4397 1532 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595652)> CPU DETAIL: M4 Address Modifier: 0072 
DBG(48595652)> CPU DETAIL: Read R 0469: 0000000000000000 
DBG(48595653)> CPU DETAIL: Write 1532: 0000000000000000 
DBG(48595655)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595656)> CPU DETAIL: Read R 0266: 0060439715320000 
DBG(48595657)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595658)> CPU DETAIL: Result: 0060439715330000 
DBG(48595659)> CPU DETAIL: Write 0266: 0060439715330000 
DBG(48595661)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595662)> CPU DETAIL: Read R 1625: 0000000000000131 
DBG(48595663)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595664)> CPU DETAIL: Result: 0000000000000132 
DBG(48595665)> CPU DETAIL: Write 1625: 0000000000000132 
DBG(48595667)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595668)> CPU DETAIL: M4: 0073 
DBG(48595669)> CPU DETAIL: M6: 0081 
DBG(48595670)> CPU DETAIL: M8: 0004 
DBG(48595673)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595674)> CPU DETAIL: M8: 0005 
DBG(48595675)> CPU DETAIL: Transfer to T 
DBG(48595677)> CPU CMD: Exec 0266: 00 60 4397 1533 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595678)> CPU DETAIL: M4 Address Modifier: 0073 
DBG(48595678)> CPU DETAIL: Read R 0470: 0000000000000000 
DBG(48595679)> CPU DETAIL: Write 1533: 0000000000000000 
DBG(48595681)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595682)> CPU DETAIL: Read R 0266: 0060439715330000 
DBG(48595683)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595684)> CPU DETAIL: Result: 0060439715340000 
DBG(48595685)> CPU DETAIL: Write 0266: 0060439715340000 
DBG(48595687)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595688)> CPU DETAIL: Read R 1625: 0000000000000132 
DBG(48595689)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595690)> CPU DETAIL: Result: 0000000000000133 
DBG(48595691)> CPU DETAIL: Write 1625: 0000000000000133 
DBG(48595693)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595694)> CPU DETAIL: M4: 0074 
DBG(48595695)> CPU DETAIL: M6: 0081 
DBG(48595696)> CPU DETAIL: M8: 0005 
DBG(48595699)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595700)> CPU DETAIL: M8: 0006 
DBG(48595701)> CPU DETAIL: Transfer to T 
DBG(48595703)> CPU CMD: Exec 0266: 00 60 4397 1534 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595704)> CPU DETAIL: M4 Address Modifier: 0074 
DBG(48595704)> CPU DETAIL: Read R 0471: 0000000000000101 
DBG(48595705)> CPU DETAIL: Write 1534: 0000000000000101 
DBG(48595707)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595708)> CPU DETAIL: Read R 0266: 0060439715340000 
DBG(48595709)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595710)> CPU DETAIL: Result: 0060439715350000 
DBG(48595711)> CPU DETAIL: Write 0266: 0060439715350000 
DBG(48595713)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595714)> CPU DETAIL: Read R 1625: 0000000000000133 
DBG(48595715)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595716)> CPU DETAIL: Result: 0000000000000134 
DBG(48595717)> CPU DETAIL: Write 1625: 0000000000000134 
DBG(48595719)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595720)> CPU DETAIL: M4: 0075 
DBG(48595721)> CPU DETAIL: M6: 0081 
DBG(48595722)> CPU DETAIL: M8: 0006 
DBG(48595725)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595726)> CPU DETAIL: M8: 0007 
DBG(48595727)> CPU DETAIL: Transfer to T 
DBG(48595729)> CPU CMD: Exec 0266: 00 60 4397 1535 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595730)> CPU DETAIL: M4 Address Modifier: 0075 
DBG(48595730)> CPU DETAIL: Read R 0472: 0000000241000000 
DBG(48595731)> CPU DETAIL: Write 1535: 0000000241000000 
DBG(48595733)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595734)> CPU DETAIL: Read R 0266: 0060439715350000 
DBG(48595735)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595736)> CPU DETAIL: Result: 0060439715360000 
DBG(48595737)> CPU DETAIL: Write 0266: 0060439715360000 
DBG(48595739)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595740)> CPU DETAIL: Read R 1625: 0000000000000134 
DBG(48595741)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595742)> CPU DETAIL: Result: 0000000000000135 
DBG(48595743)> CPU DETAIL: Write 1625: 0000000000000135 
DBG(48595745)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595746)> CPU DETAIL: M4: 0076 
DBG(48595747)> CPU DETAIL: M6: 0081 
DBG(48595748)> CPU DETAIL: M8: 0007 
DBG(48595751)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595752)> CPU DETAIL: M8: 0008 
DBG(48595753)> CPU DETAIL: Transfer to T 
DBG(48595755)> CPU CMD: Exec 0266: 00 60 4397 1536 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595756)> CPU DETAIL: M4 Address Modifier: 0076 
DBG(48595756)> CPU DETAIL: Read R 0473: 0000000000033555 
DBG(48595757)> CPU DETAIL: Write 1536: 0000000000033555 
DBG(48595759)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595760)> CPU DETAIL: Read R 0266: 0060439715360000 
DBG(48595761)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595762)> CPU DETAIL: Result: 0060439715370000 
DBG(48595763)> CPU DETAIL: Write 0266: 0060439715370000 
DBG(48595765)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595766)> CPU DETAIL: Read R 1625: 0000000000000135 
DBG(48595767)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595768)> CPU DETAIL: Result: 0000000000000136 
DBG(48595769)> CPU DETAIL: Write 1625: 0000000000000136 
DBG(48595771)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595772)> CPU DETAIL: M4: 0077 
DBG(48595773)> CPU DETAIL: M6: 0081 
DBG(48595774)> CPU DETAIL: M8: 0008 
DBG(48595777)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595778)> CPU DETAIL: M8: 0009 
DBG(48595779)> CPU DETAIL: Transfer to T 
DBG(48595781)> CPU CMD: Exec 0266: 00 60 4397 1537 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595782)> CPU DETAIL: M4 Address Modifier: 0077 
DBG(48595782)> CPU DETAIL: Read R 0474: 0000000000033666 
DBG(48595783)> CPU DETAIL: Write 1537: 0000000000033666 
DBG(48595785)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595786)> CPU DETAIL: Read R 0266: 0060439715370000 
DBG(48595787)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595788)> CPU DETAIL: Result: 0060439715380000 
DBG(48595789)> CPU DETAIL: Write 0266: 0060439715380000 
DBG(48595791)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595792)> CPU DETAIL: Read R 1625: 0000000000000136 
DBG(48595793)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595794)> CPU DETAIL: Result: 0000000000000137 
DBG(48595795)> CPU DETAIL: Write 1625: 0000000000000137 
DBG(48595797)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595798)> CPU DETAIL: M4: 0078 
DBG(48595799)> CPU DETAIL: M6: 0081 
DBG(48595800)> CPU DETAIL: M8: 0009 
DBG(48595803)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595804)> CPU DETAIL: M8: 0010 
DBG(48595805)> CPU DETAIL: Transfer to T 
DBG(48595807)> CPU CMD: Exec 0266: 00 60 4397 1538 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595808)> CPU DETAIL: M4 Address Modifier: 0078 
DBG(48595808)> CPU DETAIL: Read R 0475: 0000000249999990 
DBG(48595809)> CPU DETAIL: Write 1538: 0000000249999990 
DBG(48595811)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595812)> CPU DETAIL: Read R 0266: 0060439715380000 
DBG(48595813)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595814)> CPU DETAIL: Result: 0060439715390000 
DBG(48595815)> CPU DETAIL: Write 0266: 0060439715390000 
DBG(48595817)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595818)> CPU DETAIL: Read R 1625: 0000000000000137 
DBG(48595819)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595820)> CPU DETAIL: Result: 0000000000000138 
DBG(48595821)> CPU DETAIL: Write 1625: 0000000000000138 
DBG(48595823)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595824)> CPU DETAIL: M4: 0079 
DBG(48595825)> CPU DETAIL: M6: 0081 
DBG(48595826)> CPU DETAIL: M8: 0010 
DBG(48595829)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595830)> CPU DETAIL: M8: 0011 
DBG(48595831)> CPU DETAIL: Transfer to T 
DBG(48595833)> CPU CMD: Exec 0266: 00 60 4397 1539 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595834)> CPU DETAIL: M4 Address Modifier: 0079 
DBG(48595834)> CPU DETAIL: Read R 0476: 0000000000033555 
DBG(48595835)> CPU DETAIL: Write 1539: 0000000000033555 
DBG(48595837)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595838)> CPU DETAIL: Read R 0266: 0060439715390000 
DBG(48595839)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595840)> CPU DETAIL: Result: 0060439715400000 
DBG(48595841)> CPU DETAIL: Write 0266: 0060439715400000 
DBG(48595843)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595844)> CPU DETAIL: Read R 1625: 0000000000000138 
DBG(48595845)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595846)> CPU DETAIL: Result: 0000000000000139 
DBG(48595847)> CPU DETAIL: Write 1625: 0000000000000139 
DBG(48595849)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595850)> CPU DETAIL: M4: 0080 
DBG(48595851)> CPU DETAIL: M6: 0081 
DBG(48595852)> CPU DETAIL: M8: 0011 
DBG(48595855)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595856)> CPU DETAIL: M8: 0012 
DBG(48595857)> CPU DETAIL: Transfer to T 
DBG(48595859)> CPU CMD: Exec 0266: 00 60 4397 1540 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48595860)> CPU DETAIL: M4 Address Modifier: 0080 
DBG(48595860)> CPU DETAIL: Read R 0477: 0000000000033666 
DBG(48595861)> CPU DETAIL: Write 1540: 0000000000033666 
DBG(48595863)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48595864)> CPU DETAIL: Read R 0266: 0060439715400000 
DBG(48595865)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595866)> CPU DETAIL: Result: 0060439715410000 
DBG(48595867)> CPU DETAIL: Write 0266: 0060439715410000 
DBG(48595869)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48595870)> CPU DETAIL: Read R 1625: 0000000000000139 
DBG(48595871)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595872)> CPU DETAIL: Result: 0000000000000140 
DBG(48595873)> CPU DETAIL: Write 1625: 0000000000000140 
DBG(48595875)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48595876)> CPU DETAIL: M4: 0081 
DBG(48595877)> CPU DETAIL: M6: 0081 
DBG(48595878)> CPU DETAIL: M8: 0012 
DBG(48595881)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48595882)> CPU DETAIL: M8: 0013 
DBG(48595885)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48595888)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48595889)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48595890)> CPU DETAIL: Transfer to T 
DBG(48595890)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48595892)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48595893)> CPU DETAIL: Read R 1605: 0000000000000081 
DBG(48595894)> CPU DETAIL: Read S 1606: 0000000000000081 
DBG(48595895)> CPU DETAIL: Result: 0000000000000000 
DBG(48595898)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48595899)> CPU DETAIL: REG1: 0000000000000000
DBG(48595899)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48595901)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48595902)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48595903)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48595905)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48595906)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48595907)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48595909)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48595910)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48595911)> CPU DETAIL: Transfer to T 
DBG(48595911)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48595913)> CPU CMD: Exec 0095: 04 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48595914)> CPU DETAIL: Tape operation on MT4, Addr 0397->0000, Block Number 0000
DBG(48595914)> MT DATA: Tape unit 4: init read
DBG(48595914)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 4
DBG(48595914)> MT DETAIL: Tape record contents: D*0491000000000000CD
DBG(48595914)> MT EXP: End Of File mark sensed: 0491000000000000 
DBG(48595914)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48595917)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48595918)> CPU DETAIL: Condition not present 
DBG(48595920)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48595921)> CPU DETAIL: Reset condition present 
DBG(48595921)> CPU DETAIL: Transfer to T 
DBG(48595923)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48595924)> CPU DETAIL: Read R 1626: 0000000000000052 
DBG(48595925)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48595926)> CPU DETAIL: Diff: REG1: 0000000000000052
DBG(48595929)> CPU CMD: Exec 0312: 00 60 1686 0310 0302   set 0310 to goto 0313, then goto 0302 to write 0798 event output block to ta 
DBG(48595930)> CPU DETAIL: Read R 1686: 0060000000000313 
DBG(48595931)> CPU DETAIL: Transfer to T 
DBG(48595931)> CPU DETAIL: Write 0310: 0060000000000313 
DBG(48595933)> CPU CMD: Exec 0302: 96 60 1626 0000 0000   set instr ...     
DBG(48595934)> CPU DETAIL: Read R 1626: 0000000000000052 
DBG(48595935)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000520000 
DBG(48595938)> CPU CMD: Exec 0303: 00 41 0000 1648 0000   ... to write on tape 04 0798 0798+(1626 num of words in event output block)- 
DBG(48595939)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48595940)> CPU DETAIL: Result: 0000000000510000 
DBG(48595943)> CPU CMD: Exec 0304: 00 40 1652 0000 0305   ... and block 1001   
DBG(48595944)> CPU DETAIL: Read R 1652: 0291079807981002 
DBG(48595945)> CPU DETAIL: Result: 0291079808491002 
DBG(48595946)> CPU DETAIL: Write 0305: 0291079808491002 
DBG(48595948)> CPU CMD: Exec 0305: 02 91 0798 0849 1002   write on tape 04 0798 0798+(1626 num of words in event output block)-1    
DBG(48595949)> CPU DETAIL: Tape operation on MT2, Addr 0798->0849, Block Number 1002
DBG(48595949)> MT CMD: Tape unit 2: init write
DBG(48595949)> MT EXP: Write from 0798 to 0849 as Block number 1002
DBG(48595949)> MT EXP: Start Of Block: 02 91 0798 0849 1002
DBG(48595949)> MT EXP: CRT 0798 to Tape: 0130000000121114 
DBG(48595949)> MT EXP: CRT 0799 to Tape: 0000000231030000 
DBG(48595949)> MT EXP: CRT 0800 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0801 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0802 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0803 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0804 to Tape: 3336000000000200 
DBG(48595949)> MT EXP: CRT 0805 to Tape: 0000000231010000 
DBG(48595949)> MT EXP: CRT 0806 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0807 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0808 to Tape: 0000000231020000 
DBG(48595949)> MT EXP: CRT 0809 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0810 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0811 to Tape: 0130000000131113 
DBG(48595949)> MT EXP: CRT 0812 to Tape: 0000000232090000 
DBG(48595949)> MT EXP: CRT 0813 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0814 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0815 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0816 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0817 to Tape: 3336000000000200 
DBG(48595949)> MT EXP: CRT 0818 to Tape: 0000000232000000 
DBG(48595949)> MT EXP: CRT 0819 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0820 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0821 to Tape: 0000000232010000 
DBG(48595949)> MT EXP: CRT 0822 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0823 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0824 to Tape: 0160000000141013 
DBG(48595949)> MT EXP: CRT 0825 to Tape: 0000000233020003 
DBG(48595949)> MT EXP: CRT 0826 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0827 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0828 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0829 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0830 to Tape: 3335444455660201 
DBG(48595949)> MT EXP: CRT 0831 to Tape: 0000000233000000 
DBG(48595949)> MT EXP: CRT 0832 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0833 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0834 to Tape: 0000000233010000 
DBG(48595949)> MT EXP: CRT 0835 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0836 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0837 to Tape: 0000000233030000 
DBG(48595949)> MT EXP: CRT 0838 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0839 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0840 to Tape: 0100000000151113 
DBG(48595949)> MT EXP: CRT 0841 to Tape: 0000000249999990 
DBG(48595949)> MT EXP: CRT 0842 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0843 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0844 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0845 to Tape: 0000000000000000 
DBG(48595949)> MT EXP: CRT 0846 to Tape: 0000000000000100 
DBG(48595949)> MT EXP: CRT 0847 to Tape: 0000000242009990 
DBG(48595949)> MT EXP: CRT 0848 to Tape: 0000000000033555 
DBG(48595949)> MT EXP: CRT 0849 to Tape: 0000000000033666 
DBG(48595949)> MT EXP: End Of Block: 02 91 0798 0849 1002 (52 words)
DBG(48595949)> MT DETAIL: Write block (974 chars, used 3.41 inches, needs 21 msec) to tape 2
DBG(48595949)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.41 inches)
DBG(48595952)> CPU CMD: Exec 0306: 08 60 0306 0000 1730   call 1730 check write   
DBG(48595953)> CPU DETAIL: Read R 0306: 0860030600001730 
DBG(48595954)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600306 
DBG(48595955)> CPU DETAIL: Transfer to T 
DBG(48595957)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48595958)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48595959)> CPU DETAIL: Result: 0060000000000307 
DBG(48595960)> CPU DETAIL: Write 1742: 0060000000000307 
DBG(48595962)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48595963)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000307000000000 
DBG(48595966)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48595967)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48595968)> CPU DETAIL: Result: 0600305174700000 
DBG(48595969)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060030517470000 
DBG(48595970)> CPU DETAIL: Write 1734: 0060030517470000 
DBG(48595972)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48595973)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48595974)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48595976)> CPU CMD: Exec 1734: 00 60 0305 1747 0000      
DBG(48595977)> CPU DETAIL: Read R 0305: 0291079808491002 
DBG(48595978)> CPU DETAIL: Write 1747: 0291079808491002 
DBG(48595980)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48595981)> CPU DETAIL: Condition not present 
DBG(48595983)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48595984)> CPU DETAIL: Transfer to T 
DBG(48595986)> CPU CMD: Exec 1742: 00 60 0000 0000 0307   EXIT_CheckWrite   
DBG(48595987)> CPU DETAIL: Transfer to T 
DBG(48595989)> CPU CMD: Exec 0307: 00 40 1652 1639 1652   incr block number on write tape instr   
DBG(48595990)> CPU DETAIL: Read R 1652: 0291079807981002 
DBG(48595991)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48595992)> CPU DETAIL: Result: 0291079807981003 
DBG(48595993)> CPU DETAIL: Write 1652: 0291079807981003 
DBG(48595995)> CPU CMD: Exec 0308: 00 60 1640 1626 0000   clear (1626 num of words in event output block)   
DBG(48595996)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48595997)> CPU DETAIL: Write 1626: 0000000000000000 
DBG(48595999)> CPU CMD: Exec 0309: 00 60 1680 0296 0000   restore instr 0296   
DBG(48596000)> CPU DETAIL: Read R 1680: 0060859807980000 
DBG(48596001)> CPU DETAIL: Write 0296: 0060859807980000 
DBG(48596003)> CPU CMD: Exec 0310: 00 60 0000 0000 0313      
DBG(48596004)> CPU DETAIL: Transfer to T 
DBG(48596006)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48596007)> CPU DETAIL: Read R 1630: 0000000000000000 
DBG(48596008)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48596009)> CPU DETAIL: Result: 0100000000000000 
DBG(48596010)> CPU DETAIL: Write 1630: 0100000000000000 
DBG(48596012)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48596013)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48596014)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48596015)> CPU DETAIL: Transfer to T 
DBG(48596017)> CPU CMD: Exec 0316: 00 42 0095 1653 0000   get tape number 0N 0..0 from 0095 tape read instr   
DBG(48596018)> CPU DETAIL: Read R 0095: 0494039700000000 
DBG(48596019)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48596020)> CPU DETAIL: Result: 0400000000000000 
DBG(48596023)> CPU CMD: Exec 0317: 00 72 1681 0000 0325   if tape number <> 02 0..0 goto 0325   
DBG(48596024)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48596025)> CPU DETAIL: Diff: REG1: 9800000000000000
DBG(48596026)> CPU DETAIL: Transfer to T 
DBG(48596028)> CPU CMD: Exec 0325: 00 41 0095 1681 0095   set tape read instr to tape 02       
DBG(48596029)> CPU DETAIL: Read R 0095: 0494039700000000 
DBG(48596030)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48596031)> CPU DETAIL: Result: 0294039700000000 
DBG(48596032)> CPU DETAIL: Write 0095: 0294039700000000 
DBG(48596034)> CPU CMD: Exec 0326: 00 40 1652 1681 1652   set tape write instr to tape 04   
DBG(48596035)> CPU DETAIL: Read R 1652: 0291079807981003 
DBG(48596036)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48596037)> CPU DETAIL: Result: 0491079807981003 
DBG(48596038)> CPU DETAIL: Write 1652: 0491079807981003 
DBG(48596040)> CPU CMD: Exec 0327: 00 40 1683 1681 0332   set instr 0332 to write end of file to tape 02   
DBG(48596041)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48596042)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48596043)> CPU DETAIL: Result: 0291000000000000 
DBG(48596044)> CPU DETAIL: Write 0332: 0291000000000000 
DBG(48596046)> CPU CMD: Exec 0328: 00 40 1684 1685 0333   set instr 0333 to rewind tape 04   
DBG(48596047)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48596048)> CPU DETAIL: Read S 1685: 0400000000000000 
DBG(48596049)> CPU DETAIL: Result: 0498000000000000 
DBG(48596050)> CPU DETAIL: Write 0333: 0498000000000000 
DBG(48596052)> CPU CMD: Exec 0329: 00 40 1684 1681 0334   set instr 0334 to rewind tape 02   
DBG(48596053)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48596054)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48596055)> CPU DETAIL: Result: 0298000000000000 
DBG(48596056)> CPU DETAIL: Write 0334: 0298000000000000 
DBG(48596058)> CPU CMD: Exec 0330: 00 40 1683 1685 0335   set instr 0335 to write end of file to tape 04   
DBG(48596059)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48596060)> CPU DETAIL: Read S 1685: 0400000000000000 
DBG(48596061)> CPU DETAIL: Result: 0491000000000000 
DBG(48596062)> CPU DETAIL: Write 0335: 0491000000000000 
DBG(48596064)> CPU CMD: Exec 0331: 00 60 0333 0336 0332   set instr 0336 to rewind tape 04, goto 0332    
DBG(48596065)> CPU DETAIL: Read R 0333: 0498000000000000 
DBG(48596066)> CPU DETAIL: Transfer to T 
DBG(48596066)> CPU DETAIL: Write 0336: 0498000000000000 
DBG(48596068)> CPU CMD: Exec 0332: 02 91 0000 0000 0000   write eof on conjugate input tape   
DBG(48596069)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48596069)> MT CMD: Tape unit 2: init write
DBG(48596069)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48596069)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48596069)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (4.95 inches)
DBG(48596072)> CPU CMD: Exec 0333: 04 98 0000 0000 0000   rewind input tape   
DBG(48596073)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48596073)> MT CMD: Tape unit 4: init rewind (current medium used 5.97 inches)
DBG(48596073)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48596073)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48596075)> CPU CMD: Exec 0334: 02 98 0000 0000 0000   rewind conjugate input tape   
DBG(48596076)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48596076)> MT CMD: Tape unit 2: init rewind (current medium used 4.95 inches)
DBG(48596076)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48596076)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48596078)> CPU CMD: Exec 0335: 04 91 0000 0000 0000   write eof on input tape   
DBG(48596079)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48596079)> MT CMD: Tape unit 4: init write
DBG(48596079)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(48596079)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(48596079)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48596082)> CPU CMD: Exec 0336: 04 98 0000 0000 0000   rewind input tape   
DBG(48596083)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48596083)> MT CMD: Tape unit 4: init rewind (current medium used 1.54 inches)
DBG(48596083)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48596083)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48596085)> CPU CMD: Exec 0337: 00 60 0000 0000 0121   goto 0121   
DBG(48596086)> CPU DETAIL: Transfer to T 
DBG(48596088)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48596089)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48596090)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48596092)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48596093)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48596094)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48596096)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48596097)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48596098)> CPU DETAIL: Transfer to T 
DBG(48596098)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48596100)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48596101)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48596101)> MT DATA: Tape unit 2: init read
DBG(48596101)> MT DETAIL: Read tape record (974 chars, used 3.41 inches, needs 21 msec) from tape 2
DBG(48596101)> MT DETAIL: Tape record contents: D*0291079808491002C*0130000000121114C*0000000231030000C*00000000000000...
DBG(48596101)> MT EXP: Start Of Block Word: 0291079808491002
DBG(48596101)> MT EXP: Read Tape Block number 1002
DBG(48596101)> MT EXP: Read forward addr 0397 to 0000
DBG(48596101)> MT EXP: Tape to CRT 0397: 0130000000121114 
DBG(48596101)> MT EXP: Tape to CRT 0398: 0000000231030000 
DBG(48596101)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0403: 3336000000000200 
DBG(48596101)> MT EXP: Tape to CRT 0404: 0000000231010000 
DBG(48596101)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0407: 0000000231020000 
DBG(48596101)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0410: 0130000000131113 
DBG(48596101)> MT EXP: Tape to CRT 0411: 0000000232090000 
DBG(48596101)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0413: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0414: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0415: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0416: 3336000000000200 
DBG(48596101)> MT EXP: Tape to CRT 0417: 0000000232000000 
DBG(48596101)> MT EXP: Tape to CRT 0418: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0419: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0420: 0000000232010000 
DBG(48596101)> MT EXP: Tape to CRT 0421: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0422: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0423: 0160000000141013 
DBG(48596101)> MT EXP: Tape to CRT 0424: 0000000233020003 
DBG(48596101)> MT EXP: Tape to CRT 0425: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0426: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0427: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0428: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0429: 3335444455660201 
DBG(48596101)> MT EXP: Tape to CRT 0430: 0000000233000000 
DBG(48596101)> MT EXP: Tape to CRT 0431: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0432: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0433: 0000000233010000 
DBG(48596101)> MT EXP: Tape to CRT 0434: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0435: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0436: 0000000233030000 
DBG(48596101)> MT EXP: Tape to CRT 0437: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0438: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0439: 0100000000151113 
DBG(48596101)> MT EXP: Tape to CRT 0440: 0000000249999990 
DBG(48596101)> MT EXP: Tape to CRT 0441: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0442: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0443: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0444: 0000000000000000 
DBG(48596101)> MT EXP: Tape to CRT 0445: 0000000000000100 
DBG(48596101)> MT EXP: Tape to CRT 0446: 0000000242009990 
DBG(48596101)> MT EXP: Tape to CRT 0447: 0000000000033555 
DBG(48596101)> MT EXP: Tape to CRT 0448: 0000000000033666 
DBG(48596101)> MT EXP: End Of Block Word: 0291079808491002, data words in block: 52
DBG(48596101)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.41 inches)
DBG(48596104)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48596105)> CPU DETAIL: Condition not present 
DBG(48596107)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48596108)> CPU DETAIL: Condition not present 
DBG(48596110)> CPU CMD: Exec 0098: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48596111)> CPU DETAIL: Write 1603: 0291079808491002 
DBG(48596113)> CPU CMD: Exec 0099: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        02 90 aaaa bbbb nnnn ma 
DBG(48596114)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48596115)> CPU DETAIL: Result: 0000000008490000 
DBG(48596116)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000849 
DBG(48596117)> CPU DETAIL: Write 1604: 0000000000000849 
DBG(48596119)> CPU CMD: Exec 0100: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(48596120)> CPU DETAIL: Read R 1603: 0291079808491002 
DBG(48596121)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48596122)> CPU DETAIL: Result: 0000079800000000 
DBG(48596123)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000798 
DBG(48596126)> CPU CMD: Exec 0101: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48596127)> CPU DETAIL: Read R 1604: 0000000000000849 
DBG(48596128)> CPU DETAIL: Result: 0000000000000051 
DBG(48596129)> CPU DETAIL: Write 1605: 0000000000000051 
DBG(48596131)> CPU CMD: Exec 0102: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48596132)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48596133)> CPU DETAIL: Result: 0000000000000052 
DBG(48596134)> CPU DETAIL: Write 1605: 0000000000000052 
DBG(48596136)> CPU CMD: Exec 0103: 00 51 0000 0000 0000   Clear M4   
DBG(48596137)> CPU DETAIL: Clear M4
DBG(48596137)> CPU DETAIL: M4: 0000 
DBG(48596138)> CPU DETAIL: M6: 0081 
DBG(48596139)> CPU DETAIL: M8: 0013 
DBG(48596142)> CPU CMD: Exec 0104: 00 60 1640 1630 0118   nop / clear 1630, goto 0118   
DBG(48596143)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48596144)> CPU DETAIL: Transfer to T 
DBG(48596144)> CPU DETAIL: Write 1630: 0000000000000000 
DBG(48596146)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48596147)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48596148)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48596149)> CPU DETAIL: Result: 0000000000000052 
DBG(48596152)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48596153)> CPU DETAIL: REG1: 0000000000000052
DBG(48596153)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48596155)> CPU CMD: Exec 0124: 00 60 0403 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48596156)> CPU DETAIL: Read R 0403: 3336000000000200 
DBG(48596157)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48596159)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48596160)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48596160)> CPU DETAIL: Read R 0397: 0130000000121114 
DBG(48596161)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48596162)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48596164)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48596165)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48596166)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48596167)> CPU DETAIL: Result: 0000000000000200 
DBG(48596168)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48596169)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48596171)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48596172)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48596173)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48596174)> CPU DETAIL: Result: 0000000000000000 
DBG(48596175)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596177)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48596178)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48596179)> CPU DETAIL: Read S 1609: 0000000000000002 
DBG(48596180)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(48596181)> CPU DETAIL: Transfer to T 
DBG(48596183)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48596184)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596185)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48596186)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48596189)> CPU CMD: Exec 0132: 00 60 1693 0140 0133   ???   
DBG(48596190)> CPU DETAIL: Read R 1693: 0060169902720256 
DBG(48596191)> CPU DETAIL: Transfer to T 
DBG(48596191)> CPU DETAIL: Write 0140: 0060169902720256 
DBG(48596193)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48596194)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48596195)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48596196)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48596196)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48596197)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596198)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48596199)> CPU DETAIL: Write 1609: 9600000000000006 
DBG(48596201)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48596202)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596203)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48596204)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48596204)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48596205)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596206)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596207)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596209)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48596210)> CPU DETAIL: Read R 1609: 9600000000000006 
DBG(48596211)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48596212)> CPU DETAIL: Result: 0000000000000006 
DBG(48596213)> CPU DETAIL: Write 1609: 0000000000000006 
DBG(48596215)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48596216)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596217)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48596218)> CPU DETAIL: Result: 0000000000000000 
DBG(48596219)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596221)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48596222)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596223)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48596226)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48596227)> CPU DETAIL: Read R 0124: 0060040316080000 
DBG(48596228)> CPU DETAIL: Result: 0060041616080000 
DBG(48596229)> CPU DETAIL: Write 0124: 0060041616080000 
DBG(48596231)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48596232)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596233)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48596234)> CPU DETAIL: Result: 0000000000000013 
DBG(48596235)> CPU DETAIL: Write 1606: 0000000000000013 
DBG(48596237)> CPU CMD: Exec 0140: 00 60 1699 0272 0256   nop   
DBG(48596238)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48596239)> CPU DETAIL: Transfer to T 
DBG(48596239)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48596241)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48596242)> CPU DETAIL: Read R 1625: 0000000000000140 
DBG(48596243)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48596244)> CPU DETAIL: Result: 0000000000000153 
DBG(48596247)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48596248)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48596249)> CPU DETAIL: Result: 0000000000000047 
DBG(48596252)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48596253)> CPU DETAIL: REG1: 0000000000000047
DBG(48596253)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48596255)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48596256)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48596257)> CPU DETAIL: Transfer to T 
DBG(48596257)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48596259)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48596260)> CPU DETAIL: M4: 0000 
DBG(48596261)> CPU DETAIL: M6: 0081 
DBG(48596262)> CPU DETAIL: Clear M8
DBG(48596262)> CPU DETAIL: M8: 0000 
DBG(48596265)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48596266)> CPU DETAIL: Read R 1612: 0000000000000011 
DBG(48596267)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596268)> CPU DETAIL: Result: 0000000000000012 
DBG(48596269)> CPU DETAIL: Write 1612: 0000000000000012 
DBG(48596271)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48596272)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596273)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48596276)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48596277)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48596278)> CPU DETAIL: Result: 0858000100130266 
DBG(48596279)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48596281)> CPU CMD: Exec 0266: 00 60 4397 1541 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596282)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48596282)> CPU DETAIL: Read R 0397: 0130000000121114 
DBG(48596283)> CPU DETAIL: Write 1541: 0130000000121114 
DBG(48596285)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596286)> CPU DETAIL: Read R 0266: 0060439715410000 
DBG(48596287)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596288)> CPU DETAIL: Result: 0060439715420000 
DBG(48596289)> CPU DETAIL: Write 0266: 0060439715420000 
DBG(48596291)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596292)> CPU DETAIL: Read R 1625: 0000000000000140 
DBG(48596293)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596294)> CPU DETAIL: Result: 0000000000000141 
DBG(48596295)> CPU DETAIL: Write 1625: 0000000000000141 
DBG(48596297)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596298)> CPU DETAIL: M4: 0001 
DBG(48596299)> CPU DETAIL: M6: 0081 
DBG(48596300)> CPU DETAIL: M8: 0000 
DBG(48596303)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596304)> CPU DETAIL: M8: 0001 
DBG(48596305)> CPU DETAIL: Transfer to T 
DBG(48596307)> CPU CMD: Exec 0266: 00 60 4397 1542 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596308)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48596308)> CPU DETAIL: Read R 0398: 0000000231030000 
DBG(48596309)> CPU DETAIL: Write 1542: 0000000231030000 
DBG(48596311)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596312)> CPU DETAIL: Read R 0266: 0060439715420000 
DBG(48596313)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596314)> CPU DETAIL: Result: 0060439715430000 
DBG(48596315)> CPU DETAIL: Write 0266: 0060439715430000 
DBG(48596317)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596318)> CPU DETAIL: Read R 1625: 0000000000000141 
DBG(48596319)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596320)> CPU DETAIL: Result: 0000000000000142 
DBG(48596321)> CPU DETAIL: Write 1625: 0000000000000142 
DBG(48596323)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596324)> CPU DETAIL: M4: 0002 
DBG(48596325)> CPU DETAIL: M6: 0081 
DBG(48596326)> CPU DETAIL: M8: 0001 
DBG(48596329)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596330)> CPU DETAIL: M8: 0002 
DBG(48596331)> CPU DETAIL: Transfer to T 
DBG(48596333)> CPU CMD: Exec 0266: 00 60 4397 1543 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596334)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48596334)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48596335)> CPU DETAIL: Write 1543: 0000000000000000 
DBG(48596337)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596338)> CPU DETAIL: Read R 0266: 0060439715430000 
DBG(48596339)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596340)> CPU DETAIL: Result: 0060439715440000 
DBG(48596341)> CPU DETAIL: Write 0266: 0060439715440000 
DBG(48596343)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596344)> CPU DETAIL: Read R 1625: 0000000000000142 
DBG(48596345)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596346)> CPU DETAIL: Result: 0000000000000143 
DBG(48596347)> CPU DETAIL: Write 1625: 0000000000000143 
DBG(48596349)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596350)> CPU DETAIL: M4: 0003 
DBG(48596351)> CPU DETAIL: M6: 0081 
DBG(48596352)> CPU DETAIL: M8: 0002 
DBG(48596355)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596356)> CPU DETAIL: M8: 0003 
DBG(48596357)> CPU DETAIL: Transfer to T 
DBG(48596359)> CPU CMD: Exec 0266: 00 60 4397 1544 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596360)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48596360)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48596361)> CPU DETAIL: Write 1544: 0000000000000000 
DBG(48596363)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596364)> CPU DETAIL: Read R 0266: 0060439715440000 
DBG(48596365)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596366)> CPU DETAIL: Result: 0060439715450000 
DBG(48596367)> CPU DETAIL: Write 0266: 0060439715450000 
DBG(48596369)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596370)> CPU DETAIL: Read R 1625: 0000000000000143 
DBG(48596371)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596372)> CPU DETAIL: Result: 0000000000000144 
DBG(48596373)> CPU DETAIL: Write 1625: 0000000000000144 
DBG(48596375)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596376)> CPU DETAIL: M4: 0004 
DBG(48596377)> CPU DETAIL: M6: 0081 
DBG(48596378)> CPU DETAIL: M8: 0003 
DBG(48596381)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596382)> CPU DETAIL: M8: 0004 
DBG(48596383)> CPU DETAIL: Transfer to T 
DBG(48596385)> CPU CMD: Exec 0266: 00 60 4397 1545 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596386)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48596386)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48596387)> CPU DETAIL: Write 1545: 0000000000000000 
DBG(48596389)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596390)> CPU DETAIL: Read R 0266: 0060439715450000 
DBG(48596391)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596392)> CPU DETAIL: Result: 0060439715460000 
DBG(48596393)> CPU DETAIL: Write 0266: 0060439715460000 
DBG(48596395)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596396)> CPU DETAIL: Read R 1625: 0000000000000144 
DBG(48596397)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596398)> CPU DETAIL: Result: 0000000000000145 
DBG(48596399)> CPU DETAIL: Write 1625: 0000000000000145 
DBG(48596401)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596402)> CPU DETAIL: M4: 0005 
DBG(48596403)> CPU DETAIL: M6: 0081 
DBG(48596404)> CPU DETAIL: M8: 0004 
DBG(48596407)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596408)> CPU DETAIL: M8: 0005 
DBG(48596409)> CPU DETAIL: Transfer to T 
DBG(48596411)> CPU CMD: Exec 0266: 00 60 4397 1546 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596412)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48596412)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48596413)> CPU DETAIL: Write 1546: 0000000000000000 
DBG(48596415)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596416)> CPU DETAIL: Read R 0266: 0060439715460000 
DBG(48596417)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596418)> CPU DETAIL: Result: 0060439715470000 
DBG(48596419)> CPU DETAIL: Write 0266: 0060439715470000 
DBG(48596421)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596422)> CPU DETAIL: Read R 1625: 0000000000000145 
DBG(48596423)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596424)> CPU DETAIL: Result: 0000000000000146 
DBG(48596425)> CPU DETAIL: Write 1625: 0000000000000146 
DBG(48596427)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596428)> CPU DETAIL: M4: 0006 
DBG(48596429)> CPU DETAIL: M6: 0081 
DBG(48596430)> CPU DETAIL: M8: 0005 
DBG(48596433)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596434)> CPU DETAIL: M8: 0006 
DBG(48596435)> CPU DETAIL: Transfer to T 
DBG(48596437)> CPU CMD: Exec 0266: 00 60 4397 1547 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596438)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48596438)> CPU DETAIL: Read R 0403: 3336000000000200 
DBG(48596439)> CPU DETAIL: Write 1547: 3336000000000200 
DBG(48596441)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596442)> CPU DETAIL: Read R 0266: 0060439715470000 
DBG(48596443)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596444)> CPU DETAIL: Result: 0060439715480000 
DBG(48596445)> CPU DETAIL: Write 0266: 0060439715480000 
DBG(48596447)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596448)> CPU DETAIL: Read R 1625: 0000000000000146 
DBG(48596449)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596450)> CPU DETAIL: Result: 0000000000000147 
DBG(48596451)> CPU DETAIL: Write 1625: 0000000000000147 
DBG(48596453)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596454)> CPU DETAIL: M4: 0007 
DBG(48596455)> CPU DETAIL: M6: 0081 
DBG(48596456)> CPU DETAIL: M8: 0006 
DBG(48596459)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596460)> CPU DETAIL: M8: 0007 
DBG(48596461)> CPU DETAIL: Transfer to T 
DBG(48596463)> CPU CMD: Exec 0266: 00 60 4397 1548 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596464)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48596464)> CPU DETAIL: Read R 0404: 0000000231010000 
DBG(48596465)> CPU DETAIL: Write 1548: 0000000231010000 
DBG(48596467)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596468)> CPU DETAIL: Read R 0266: 0060439715480000 
DBG(48596469)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596470)> CPU DETAIL: Result: 0060439715490000 
DBG(48596471)> CPU DETAIL: Write 0266: 0060439715490000 
DBG(48596473)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596474)> CPU DETAIL: Read R 1625: 0000000000000147 
DBG(48596475)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596476)> CPU DETAIL: Result: 0000000000000148 
DBG(48596477)> CPU DETAIL: Write 1625: 0000000000000148 
DBG(48596479)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596480)> CPU DETAIL: M4: 0008 
DBG(48596481)> CPU DETAIL: M6: 0081 
DBG(48596482)> CPU DETAIL: M8: 0007 
DBG(48596485)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596486)> CPU DETAIL: M8: 0008 
DBG(48596487)> CPU DETAIL: Transfer to T 
DBG(48596489)> CPU CMD: Exec 0266: 00 60 4397 1549 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596490)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48596490)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48596491)> CPU DETAIL: Write 1549: 0000000000000000 
DBG(48596493)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596494)> CPU DETAIL: Read R 0266: 0060439715490000 
DBG(48596495)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596496)> CPU DETAIL: Result: 0060439715500000 
DBG(48596497)> CPU DETAIL: Write 0266: 0060439715500000 
DBG(48596499)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596500)> CPU DETAIL: Read R 1625: 0000000000000148 
DBG(48596501)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596502)> CPU DETAIL: Result: 0000000000000149 
DBG(48596503)> CPU DETAIL: Write 1625: 0000000000000149 
DBG(48596505)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596506)> CPU DETAIL: M4: 0009 
DBG(48596507)> CPU DETAIL: M6: 0081 
DBG(48596508)> CPU DETAIL: M8: 0008 
DBG(48596511)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596512)> CPU DETAIL: M8: 0009 
DBG(48596513)> CPU DETAIL: Transfer to T 
DBG(48596515)> CPU CMD: Exec 0266: 00 60 4397 1550 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596516)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48596516)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48596517)> CPU DETAIL: Write 1550: 0000000000000000 
DBG(48596519)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596520)> CPU DETAIL: Read R 0266: 0060439715500000 
DBG(48596521)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596522)> CPU DETAIL: Result: 0060439715510000 
DBG(48596523)> CPU DETAIL: Write 0266: 0060439715510000 
DBG(48596525)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596526)> CPU DETAIL: Read R 1625: 0000000000000149 
DBG(48596527)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596528)> CPU DETAIL: Result: 0000000000000150 
DBG(48596529)> CPU DETAIL: Write 1625: 0000000000000150 
DBG(48596531)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596532)> CPU DETAIL: M4: 0010 
DBG(48596533)> CPU DETAIL: M6: 0081 
DBG(48596534)> CPU DETAIL: M8: 0009 
DBG(48596537)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596538)> CPU DETAIL: M8: 0010 
DBG(48596539)> CPU DETAIL: Transfer to T 
DBG(48596541)> CPU CMD: Exec 0266: 00 60 4397 1551 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596542)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48596542)> CPU DETAIL: Read R 0407: 0000000231020000 
DBG(48596543)> CPU DETAIL: Write 1551: 0000000231020000 
DBG(48596545)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596546)> CPU DETAIL: Read R 0266: 0060439715510000 
DBG(48596547)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596548)> CPU DETAIL: Result: 0060439715520000 
DBG(48596549)> CPU DETAIL: Write 0266: 0060439715520000 
DBG(48596551)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596552)> CPU DETAIL: Read R 1625: 0000000000000150 
DBG(48596553)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596554)> CPU DETAIL: Result: 0000000000000151 
DBG(48596555)> CPU DETAIL: Write 1625: 0000000000000151 
DBG(48596557)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596558)> CPU DETAIL: M4: 0011 
DBG(48596559)> CPU DETAIL: M6: 0081 
DBG(48596560)> CPU DETAIL: M8: 0010 
DBG(48596563)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596564)> CPU DETAIL: M8: 0011 
DBG(48596565)> CPU DETAIL: Transfer to T 
DBG(48596567)> CPU CMD: Exec 0266: 00 60 4397 1552 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596568)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48596568)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48596569)> CPU DETAIL: Write 1552: 0000000000000000 
DBG(48596571)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596572)> CPU DETAIL: Read R 0266: 0060439715520000 
DBG(48596573)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596574)> CPU DETAIL: Result: 0060439715530000 
DBG(48596575)> CPU DETAIL: Write 0266: 0060439715530000 
DBG(48596577)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596578)> CPU DETAIL: Read R 1625: 0000000000000151 
DBG(48596579)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596580)> CPU DETAIL: Result: 0000000000000152 
DBG(48596581)> CPU DETAIL: Write 1625: 0000000000000152 
DBG(48596583)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596584)> CPU DETAIL: M4: 0012 
DBG(48596585)> CPU DETAIL: M6: 0081 
DBG(48596586)> CPU DETAIL: M8: 0011 
DBG(48596589)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596590)> CPU DETAIL: M8: 0012 
DBG(48596591)> CPU DETAIL: Transfer to T 
DBG(48596593)> CPU CMD: Exec 0266: 00 60 4397 1553 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596594)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48596594)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48596595)> CPU DETAIL: Write 1553: 0000000000000000 
DBG(48596597)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596598)> CPU DETAIL: Read R 0266: 0060439715530000 
DBG(48596599)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596600)> CPU DETAIL: Result: 0060439715540000 
DBG(48596601)> CPU DETAIL: Write 0266: 0060439715540000 
DBG(48596603)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596604)> CPU DETAIL: Read R 1625: 0000000000000152 
DBG(48596605)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596606)> CPU DETAIL: Result: 0000000000000153 
DBG(48596607)> CPU DETAIL: Write 1625: 0000000000000153 
DBG(48596609)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596610)> CPU DETAIL: M4: 0013 
DBG(48596611)> CPU DETAIL: M6: 0081 
DBG(48596612)> CPU DETAIL: M8: 0012 
DBG(48596615)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596616)> CPU DETAIL: M8: 0013 
DBG(48596619)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48596622)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48596623)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48596624)> CPU DETAIL: Transfer to T 
DBG(48596624)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48596626)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48596627)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48596628)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48596629)> CPU DETAIL: Result: 0000000000000039 
DBG(48596632)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48596633)> CPU DETAIL: REG1: 0000000000000039
DBG(48596633)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48596635)> CPU CMD: Exec 0124: 00 60 0416 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48596636)> CPU DETAIL: Read R 0416: 3336000000000200 
DBG(48596637)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48596639)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48596640)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(48596640)> CPU DETAIL: Read R 0410: 0130000000131113 
DBG(48596641)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48596642)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48596644)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48596645)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48596646)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48596647)> CPU DETAIL: Result: 0000000000000200 
DBG(48596648)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48596649)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48596651)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48596652)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48596653)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48596654)> CPU DETAIL: Result: 0000000000000000 
DBG(48596655)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596657)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48596658)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48596659)> CPU DETAIL: Read S 1609: 0000000000000002 
DBG(48596660)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(48596661)> CPU DETAIL: Transfer to T 
DBG(48596663)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48596664)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596665)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48596666)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48596669)> CPU CMD: Exec 0132: 00 60 1693 0140 0133   ???   
DBG(48596670)> CPU DETAIL: Read R 1693: 0060169902720256 
DBG(48596671)> CPU DETAIL: Transfer to T 
DBG(48596671)> CPU DETAIL: Write 0140: 0060169902720256 
DBG(48596673)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48596674)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48596675)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48596676)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48596676)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48596677)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596678)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48596679)> CPU DETAIL: Write 1609: 9600000000000006 
DBG(48596681)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48596682)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596683)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48596684)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48596684)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48596685)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596686)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48596687)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596689)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48596690)> CPU DETAIL: Read R 1609: 9600000000000006 
DBG(48596691)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48596692)> CPU DETAIL: Result: 0000000000000006 
DBG(48596693)> CPU DETAIL: Write 1609: 0000000000000006 
DBG(48596695)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48596696)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48596697)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48596698)> CPU DETAIL: Result: 0000000000000000 
DBG(48596699)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48596701)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48596702)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596703)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48596706)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48596707)> CPU DETAIL: Read R 0124: 0060041616080000 
DBG(48596708)> CPU DETAIL: Result: 0060042916080000 
DBG(48596709)> CPU DETAIL: Write 0124: 0060042916080000 
DBG(48596711)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48596712)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596713)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48596714)> CPU DETAIL: Result: 0000000000000026 
DBG(48596715)> CPU DETAIL: Write 1606: 0000000000000026 
DBG(48596717)> CPU CMD: Exec 0140: 00 60 1699 0272 0256   nop   
DBG(48596718)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48596719)> CPU DETAIL: Transfer to T 
DBG(48596719)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48596721)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48596722)> CPU DETAIL: Read R 1625: 0000000000000153 
DBG(48596723)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48596724)> CPU DETAIL: Result: 0000000000000166 
DBG(48596727)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48596728)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48596729)> CPU DETAIL: Result: 0000000000000034 
DBG(48596732)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48596733)> CPU DETAIL: REG1: 0000000000000034
DBG(48596733)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48596735)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48596736)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48596737)> CPU DETAIL: Transfer to T 
DBG(48596737)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48596739)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48596740)> CPU DETAIL: M4: 0013 
DBG(48596741)> CPU DETAIL: M6: 0081 
DBG(48596742)> CPU DETAIL: Clear M8
DBG(48596742)> CPU DETAIL: M8: 0000 
DBG(48596745)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48596746)> CPU DETAIL: Read R 1612: 0000000000000012 
DBG(48596747)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596748)> CPU DETAIL: Result: 0000000000000013 
DBG(48596749)> CPU DETAIL: Write 1612: 0000000000000013 
DBG(48596751)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48596752)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48596753)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48596756)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48596757)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48596758)> CPU DETAIL: Result: 0858000100130266 
DBG(48596759)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48596761)> CPU CMD: Exec 0266: 00 60 4397 1554 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596762)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(48596762)> CPU DETAIL: Read R 0410: 0130000000131113 
DBG(48596763)> CPU DETAIL: Write 1554: 0130000000131113 
DBG(48596765)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596766)> CPU DETAIL: Read R 0266: 0060439715540000 
DBG(48596767)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596768)> CPU DETAIL: Result: 0060439715550000 
DBG(48596769)> CPU DETAIL: Write 0266: 0060439715550000 
DBG(48596771)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596772)> CPU DETAIL: Read R 1625: 0000000000000153 
DBG(48596773)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596774)> CPU DETAIL: Result: 0000000000000154 
DBG(48596775)> CPU DETAIL: Write 1625: 0000000000000154 
DBG(48596777)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596778)> CPU DETAIL: M4: 0014 
DBG(48596779)> CPU DETAIL: M6: 0081 
DBG(48596780)> CPU DETAIL: M8: 0000 
DBG(48596783)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596784)> CPU DETAIL: M8: 0001 
DBG(48596785)> CPU DETAIL: Transfer to T 
DBG(48596787)> CPU CMD: Exec 0266: 00 60 4397 1555 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596788)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(48596788)> CPU DETAIL: Read R 0411: 0000000232090000 
DBG(48596789)> CPU DETAIL: Write 1555: 0000000232090000 
DBG(48596791)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596792)> CPU DETAIL: Read R 0266: 0060439715550000 
DBG(48596793)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596794)> CPU DETAIL: Result: 0060439715560000 
DBG(48596795)> CPU DETAIL: Write 0266: 0060439715560000 
DBG(48596797)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596798)> CPU DETAIL: Read R 1625: 0000000000000154 
DBG(48596799)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596800)> CPU DETAIL: Result: 0000000000000155 
DBG(48596801)> CPU DETAIL: Write 1625: 0000000000000155 
DBG(48596803)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596804)> CPU DETAIL: M4: 0015 
DBG(48596805)> CPU DETAIL: M6: 0081 
DBG(48596806)> CPU DETAIL: M8: 0001 
DBG(48596809)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596810)> CPU DETAIL: M8: 0002 
DBG(48596811)> CPU DETAIL: Transfer to T 
DBG(48596813)> CPU CMD: Exec 0266: 00 60 4397 1556 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596814)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(48596814)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48596815)> CPU DETAIL: Write 1556: 0000000000000000 
DBG(48596817)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596818)> CPU DETAIL: Read R 0266: 0060439715560000 
DBG(48596819)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596820)> CPU DETAIL: Result: 0060439715570000 
DBG(48596821)> CPU DETAIL: Write 0266: 0060439715570000 
DBG(48596823)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596824)> CPU DETAIL: Read R 1625: 0000000000000155 
DBG(48596825)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596826)> CPU DETAIL: Result: 0000000000000156 
DBG(48596827)> CPU DETAIL: Write 1625: 0000000000000156 
DBG(48596829)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596830)> CPU DETAIL: M4: 0016 
DBG(48596831)> CPU DETAIL: M6: 0081 
DBG(48596832)> CPU DETAIL: M8: 0002 
DBG(48596835)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596836)> CPU DETAIL: M8: 0003 
DBG(48596837)> CPU DETAIL: Transfer to T 
DBG(48596839)> CPU CMD: Exec 0266: 00 60 4397 1557 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596840)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(48596840)> CPU DETAIL: Read R 0413: 0000000000000000 
DBG(48596841)> CPU DETAIL: Write 1557: 0000000000000000 
DBG(48596843)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596844)> CPU DETAIL: Read R 0266: 0060439715570000 
DBG(48596845)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596846)> CPU DETAIL: Result: 0060439715580000 
DBG(48596847)> CPU DETAIL: Write 0266: 0060439715580000 
DBG(48596849)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596850)> CPU DETAIL: Read R 1625: 0000000000000156 
DBG(48596851)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596852)> CPU DETAIL: Result: 0000000000000157 
DBG(48596853)> CPU DETAIL: Write 1625: 0000000000000157 
DBG(48596855)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596856)> CPU DETAIL: M4: 0017 
DBG(48596857)> CPU DETAIL: M6: 0081 
DBG(48596858)> CPU DETAIL: M8: 0003 
DBG(48596861)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596862)> CPU DETAIL: M8: 0004 
DBG(48596863)> CPU DETAIL: Transfer to T 
DBG(48596865)> CPU CMD: Exec 0266: 00 60 4397 1558 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596866)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(48596866)> CPU DETAIL: Read R 0414: 0000000000000000 
DBG(48596867)> CPU DETAIL: Write 1558: 0000000000000000 
DBG(48596869)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596870)> CPU DETAIL: Read R 0266: 0060439715580000 
DBG(48596871)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596872)> CPU DETAIL: Result: 0060439715590000 
DBG(48596873)> CPU DETAIL: Write 0266: 0060439715590000 
DBG(48596875)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596876)> CPU DETAIL: Read R 1625: 0000000000000157 
DBG(48596877)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596878)> CPU DETAIL: Result: 0000000000000158 
DBG(48596879)> CPU DETAIL: Write 1625: 0000000000000158 
DBG(48596881)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596882)> CPU DETAIL: M4: 0018 
DBG(48596883)> CPU DETAIL: M6: 0081 
DBG(48596884)> CPU DETAIL: M8: 0004 
DBG(48596887)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596888)> CPU DETAIL: M8: 0005 
DBG(48596889)> CPU DETAIL: Transfer to T 
DBG(48596891)> CPU CMD: Exec 0266: 00 60 4397 1559 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596892)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(48596892)> CPU DETAIL: Read R 0415: 0000000000000000 
DBG(48596893)> CPU DETAIL: Write 1559: 0000000000000000 
DBG(48596895)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596896)> CPU DETAIL: Read R 0266: 0060439715590000 
DBG(48596897)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596898)> CPU DETAIL: Result: 0060439715600000 
DBG(48596899)> CPU DETAIL: Write 0266: 0060439715600000 
DBG(48596901)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596902)> CPU DETAIL: Read R 1625: 0000000000000158 
DBG(48596903)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596904)> CPU DETAIL: Result: 0000000000000159 
DBG(48596905)> CPU DETAIL: Write 1625: 0000000000000159 
DBG(48596907)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596908)> CPU DETAIL: M4: 0019 
DBG(48596909)> CPU DETAIL: M6: 0081 
DBG(48596910)> CPU DETAIL: M8: 0005 
DBG(48596913)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596914)> CPU DETAIL: M8: 0006 
DBG(48596915)> CPU DETAIL: Transfer to T 
DBG(48596917)> CPU CMD: Exec 0266: 00 60 4397 1560 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596918)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(48596918)> CPU DETAIL: Read R 0416: 3336000000000200 
DBG(48596919)> CPU DETAIL: Write 1560: 3336000000000200 
DBG(48596921)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596922)> CPU DETAIL: Read R 0266: 0060439715600000 
DBG(48596923)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596924)> CPU DETAIL: Result: 0060439715610000 
DBG(48596925)> CPU DETAIL: Write 0266: 0060439715610000 
DBG(48596927)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596928)> CPU DETAIL: Read R 1625: 0000000000000159 
DBG(48596929)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596930)> CPU DETAIL: Result: 0000000000000160 
DBG(48596931)> CPU DETAIL: Write 1625: 0000000000000160 
DBG(48596933)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596934)> CPU DETAIL: M4: 0020 
DBG(48596935)> CPU DETAIL: M6: 0081 
DBG(48596936)> CPU DETAIL: M8: 0006 
DBG(48596939)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596940)> CPU DETAIL: M8: 0007 
DBG(48596941)> CPU DETAIL: Transfer to T 
DBG(48596943)> CPU CMD: Exec 0266: 00 60 4397 1561 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596944)> CPU DETAIL: M4 Address Modifier: 0020 
DBG(48596944)> CPU DETAIL: Read R 0417: 0000000232000000 
DBG(48596945)> CPU DETAIL: Write 1561: 0000000232000000 
DBG(48596947)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596948)> CPU DETAIL: Read R 0266: 0060439715610000 
DBG(48596949)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596950)> CPU DETAIL: Result: 0060439715620000 
DBG(48596951)> CPU DETAIL: Write 0266: 0060439715620000 
DBG(48596953)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596954)> CPU DETAIL: Read R 1625: 0000000000000160 
DBG(48596955)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596956)> CPU DETAIL: Result: 0000000000000161 
DBG(48596957)> CPU DETAIL: Write 1625: 0000000000000161 
DBG(48596959)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596960)> CPU DETAIL: M4: 0021 
DBG(48596961)> CPU DETAIL: M6: 0081 
DBG(48596962)> CPU DETAIL: M8: 0007 
DBG(48596965)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596966)> CPU DETAIL: M8: 0008 
DBG(48596967)> CPU DETAIL: Transfer to T 
DBG(48596969)> CPU CMD: Exec 0266: 00 60 4397 1562 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596970)> CPU DETAIL: M4 Address Modifier: 0021 
DBG(48596970)> CPU DETAIL: Read R 0418: 0000000000000000 
DBG(48596971)> CPU DETAIL: Write 1562: 0000000000000000 
DBG(48596973)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48596974)> CPU DETAIL: Read R 0266: 0060439715620000 
DBG(48596975)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48596976)> CPU DETAIL: Result: 0060439715630000 
DBG(48596977)> CPU DETAIL: Write 0266: 0060439715630000 
DBG(48596979)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48596980)> CPU DETAIL: Read R 1625: 0000000000000161 
DBG(48596981)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48596982)> CPU DETAIL: Result: 0000000000000162 
DBG(48596983)> CPU DETAIL: Write 1625: 0000000000000162 
DBG(48596985)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48596986)> CPU DETAIL: M4: 0022 
DBG(48596987)> CPU DETAIL: M6: 0081 
DBG(48596988)> CPU DETAIL: M8: 0008 
DBG(48596991)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48596992)> CPU DETAIL: M8: 0009 
DBG(48596993)> CPU DETAIL: Transfer to T 
DBG(48596995)> CPU CMD: Exec 0266: 00 60 4397 1563 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48596996)> CPU DETAIL: M4 Address Modifier: 0022 
DBG(48596996)> CPU DETAIL: Read R 0419: 0000000000000000 
DBG(48596997)> CPU DETAIL: Write 1563: 0000000000000000 
DBG(48596999)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48597000)> CPU DETAIL: Read R 0266: 0060439715630000 
DBG(48597001)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597002)> CPU DETAIL: Result: 0060439715640000 
DBG(48597003)> CPU DETAIL: Write 0266: 0060439715640000 
DBG(48597005)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48597006)> CPU DETAIL: Read R 1625: 0000000000000162 
DBG(48597007)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597008)> CPU DETAIL: Result: 0000000000000163 
DBG(48597009)> CPU DETAIL: Write 1625: 0000000000000163 
DBG(48597011)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48597012)> CPU DETAIL: M4: 0023 
DBG(48597013)> CPU DETAIL: M6: 0081 
DBG(48597014)> CPU DETAIL: M8: 0009 
DBG(48597017)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48597018)> CPU DETAIL: M8: 0010 
DBG(48597019)> CPU DETAIL: Transfer to T 
DBG(48597021)> CPU CMD: Exec 0266: 00 60 4397 1564 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48597022)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(48597022)> CPU DETAIL: Read R 0420: 0000000232010000 
DBG(48597023)> CPU DETAIL: Write 1564: 0000000232010000 
DBG(48597025)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48597026)> CPU DETAIL: Read R 0266: 0060439715640000 
DBG(48597027)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597028)> CPU DETAIL: Result: 0060439715650000 
DBG(48597029)> CPU DETAIL: Write 0266: 0060439715650000 
DBG(48597031)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48597032)> CPU DETAIL: Read R 1625: 0000000000000163 
DBG(48597033)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597034)> CPU DETAIL: Result: 0000000000000164 
DBG(48597035)> CPU DETAIL: Write 1625: 0000000000000164 
DBG(48597037)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48597038)> CPU DETAIL: M4: 0024 
DBG(48597039)> CPU DETAIL: M6: 0081 
DBG(48597040)> CPU DETAIL: M8: 0010 
DBG(48597043)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48597044)> CPU DETAIL: M8: 0011 
DBG(48597045)> CPU DETAIL: Transfer to T 
DBG(48597047)> CPU CMD: Exec 0266: 00 60 4397 1565 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48597048)> CPU DETAIL: M4 Address Modifier: 0024 
DBG(48597048)> CPU DETAIL: Read R 0421: 0000000000000000 
DBG(48597049)> CPU DETAIL: Write 1565: 0000000000000000 
DBG(48597051)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48597052)> CPU DETAIL: Read R 0266: 0060439715650000 
DBG(48597053)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597054)> CPU DETAIL: Result: 0060439715660000 
DBG(48597055)> CPU DETAIL: Write 0266: 0060439715660000 
DBG(48597057)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48597058)> CPU DETAIL: Read R 1625: 0000000000000164 
DBG(48597059)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597060)> CPU DETAIL: Result: 0000000000000165 
DBG(48597061)> CPU DETAIL: Write 1625: 0000000000000165 
DBG(48597063)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48597064)> CPU DETAIL: M4: 0025 
DBG(48597065)> CPU DETAIL: M6: 0081 
DBG(48597066)> CPU DETAIL: M8: 0011 
DBG(48597069)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48597070)> CPU DETAIL: M8: 0012 
DBG(48597071)> CPU DETAIL: Transfer to T 
DBG(48597073)> CPU CMD: Exec 0266: 00 60 4397 1566 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48597074)> CPU DETAIL: M4 Address Modifier: 0025 
DBG(48597074)> CPU DETAIL: Read R 0422: 0000000000000000 
DBG(48597075)> CPU DETAIL: Write 1566: 0000000000000000 
DBG(48597077)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48597078)> CPU DETAIL: Read R 0266: 0060439715660000 
DBG(48597079)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597080)> CPU DETAIL: Result: 0060439715670000 
DBG(48597081)> CPU DETAIL: Write 0266: 0060439715670000 
DBG(48597083)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48597084)> CPU DETAIL: Read R 1625: 0000000000000165 
DBG(48597085)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597086)> CPU DETAIL: Result: 0000000000000166 
DBG(48597087)> CPU DETAIL: Write 1625: 0000000000000166 
DBG(48597089)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48597090)> CPU DETAIL: M4: 0026 
DBG(48597091)> CPU DETAIL: M6: 0081 
DBG(48597092)> CPU DETAIL: M8: 0012 
DBG(48597095)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48597096)> CPU DETAIL: M8: 0013 
DBG(48597099)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48597102)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48597103)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48597104)> CPU DETAIL: Transfer to T 
DBG(48597104)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48597106)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48597107)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48597108)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48597109)> CPU DETAIL: Result: 0000000000000026 
DBG(48597112)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48597113)> CPU DETAIL: REG1: 0000000000000026
DBG(48597113)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48597115)> CPU CMD: Exec 0124: 00 60 0429 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48597116)> CPU DETAIL: Read R 0429: 3335444455660201 
DBG(48597117)> CPU DETAIL: Write 1608: 3335444455660201 
DBG(48597119)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48597120)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48597120)> CPU DETAIL: Read R 0423: 0160000000141013 
DBG(48597121)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48597122)> CPU DETAIL: Write 1607: 0000000000000016 
DBG(48597124)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48597125)> CPU DETAIL: Read R 1608: 3335444455660201 
DBG(48597126)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48597127)> CPU DETAIL: Result: 0000000000000200 
DBG(48597128)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48597129)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48597131)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48597132)> CPU DETAIL: Read R 1608: 3335444455660201 
DBG(48597133)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48597134)> CPU DETAIL: Result: 0000000000000001 
DBG(48597135)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48597137)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48597138)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597139)> CPU DETAIL: Read S 1609: 0000000000000002 
DBG(48597140)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(48597141)> CPU DETAIL: Transfer to T 
DBG(48597143)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48597144)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48597145)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48597146)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48597147)> CPU DETAIL: Transfer to T 
DBG(48597149)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48597150)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48597151)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48597152)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48597152)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48597153)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48597154)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48597155)> CPU DETAIL: Write 1609: 9600000000000006 
DBG(48597157)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48597158)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48597159)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48597160)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48597160)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48597161)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48597162)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48597163)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48597165)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48597166)> CPU DETAIL: Read R 1609: 9600000000000006 
DBG(48597167)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48597168)> CPU DETAIL: Result: 0000000000000006 
DBG(48597169)> CPU DETAIL: Write 1609: 0000000000000006 
DBG(48597171)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48597172)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48597173)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48597174)> CPU DETAIL: Result: 0000000000000003 
DBG(48597175)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48597177)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48597178)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48597179)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48597182)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48597183)> CPU DETAIL: Read R 0124: 0060042916080000 
DBG(48597184)> CPU DETAIL: Result: 0060044516080000 
DBG(48597185)> CPU DETAIL: Write 0124: 0060044516080000 
DBG(48597187)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48597188)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48597189)> CPU DETAIL: Read S 1606: 0000000000000026 
DBG(48597190)> CPU DETAIL: Result: 0000000000000042 
DBG(48597191)> CPU DETAIL: Write 1606: 0000000000000042 
DBG(48597193)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48597196)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48597197)> CPU DETAIL: Read R 1614: 0000000000000081 
DBG(48597198)> CPU DETAIL: Read S 1615: 0000000000000081 
DBG(48597199)> CPU DETAIL: Result: 0000000000000000 
DBG(48597202)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48597203)> CPU DETAIL: REG1: 0000000000000000
DBG(48597203)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48597205)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48597206)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597207)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48597209)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48597210)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48597211)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48597213)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48597214)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48597215)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48597217)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48597218)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48597219)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48597221)> CPU CMD: Exec 0148: 00 60 0000 0000 0338   goto read event block from input tape 01   
DBG(48597222)> CPU DETAIL: Transfer to T 
DBG(48597224)> CPU CMD: Exec 0338: 06 94 0999 0000 0000   read input tape 5 at addr 0999   
DBG(48597225)> CPU DETAIL: Tape operation on MT6, Addr 0999->0000, Block Number 0000
DBG(48597225)> MT DATA: Tape unit 6: init read
DBG(48597225)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 6
DBG(48597225)> MT DETAIL: Tape record contents: D*0691000000000000CD
DBG(48597225)> MT EXP: End Of File mark sensed: 0691000000000000 
DBG(48597225)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.04% of medium (5.97 inches)
DBG(48597228)> CPU CMD: Exec 0339: 08 68 0339 0000 1713   if tape check, call 1713 reread      
DBG(48597229)> CPU DETAIL: Condition not present 
DBG(48597231)> CPU CMD: Exec 0340: 00 67 1688 1628 1760   if end of file, 06 0..0 -> (1628), goto 1760   
DBG(48597232)> CPU DETAIL: Reset condition present 
DBG(48597232)> CPU DETAIL: Read R 1688: 0600000000000000 
DBG(48597233)> CPU DETAIL: Transfer to T 
DBG(48597233)> CPU DETAIL: Write 1628: 0600000000000000 
DBG(48597235)> CPU CMD: Exec 1760: 00 40 1635 1639 1635   incr (1635 of times input tape rewinded when scanning for an event)   
DBG(48597236)> CPU DETAIL: Read R 1635: 0000000000000000 
DBG(48597237)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597238)> CPU DETAIL: Result: 0000000000000001 
DBG(48597239)> CPU DETAIL: Write 1635: 0000000000000001 
DBG(48597241)> CPU CMD: Exec 1761: 00 41 1707 0000 0000   3 - (1635 of times input tape rewinded when scanning for an event) -> REG1   
DBG(48597242)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48597243)> CPU DETAIL: Result: 0000000000000002 
DBG(48597246)> CPU CMD: Exec 1762: 00 63 0343 0343 0386   if >=0 goto 0343, else goto 0386   
DBG(48597247)> CPU DETAIL: REG1: 0000000000000002
DBG(48597247)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48597249)> CPU CMD: Exec 0343: 06 98 0000 0000 0000   rewind current input tape   
DBG(48597250)> CPU DETAIL: Tape operation on MT6, Addr 0000->0000, Block Number 0000
DBG(48597250)> MT CMD: Tape unit 6: init rewind (current medium used 5.97 inches)
DBG(48597250)> MT CMD: Tape unit 6: rewind time (0 sec)
DBG(48597250)> CPU DETAIL: ... Tape 6 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48597252)> CPU CMD: Exec 0344: 00 60 1685 1634 0000   040..0 -> (1634 eof on this tape number)   
DBG(48597253)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48597254)> CPU DETAIL: Write 1634: 0400000000000000 
DBG(48597256)> CPU CMD: Exec 0345: 00 60 1691 0148 0144   ???   
DBG(48597257)> CPU DETAIL: Read R 1691: 0060164016280105 
DBG(48597258)> CPU DETAIL: Transfer to T 
DBG(48597258)> CPU DETAIL: Write 0148: 0060164016280105 
DBG(48597260)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48597261)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597262)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48597264)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48597265)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48597266)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48597268)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48597269)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48597270)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48597272)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48597273)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48597274)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48597276)> CPU CMD: Exec 0148: 00 60 1640 1628 0105   goto read event block from input tape 01   
DBG(48597277)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597278)> CPU DETAIL: Transfer to T 
DBG(48597278)> CPU DETAIL: Write 1628: 0000000000000000 
DBG(48597280)> CPU CMD: Exec 0105: 01 94 0999 0000 0006   read input tape 01 -> (0999 input event block tape 01)    
DBG(48597281)> CPU DETAIL: Tape operation on MT1, Addr 0999->0000, Block Number 0006
DBG(48597281)> MT DATA: Tape unit 1: init read
DBG(48597281)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 1
DBG(48597281)> MT DETAIL: Tape record contents: D*0190000000000000CD
DBG(48597281)> MT EXP: End Of File mark sensed: 0190000000000000 
DBG(48597281)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.11% of medium (18.82 inches)
DBG(48597284)> CPU CMD: Exec 0106: 08 68 0106 0000 1713   if tape check, call 1713 reread      
DBG(48597285)> CPU DETAIL: Condition not present 
DBG(48597287)> CPU CMD: Exec 0107: 00 67 1653 1634 0348   if end of file, 01 0..0 -> (1634 eof on this tape number), goto 0348   
DBG(48597288)> CPU DETAIL: Reset condition present 
DBG(48597288)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48597289)> CPU DETAIL: Transfer to T 
DBG(48597289)> CPU DETAIL: Write 1634: 0100000000000000 
DBG(48597291)> CPU CMD: Exec 0348: 00 60 1708 0105 0381   ???   
DBG(48597292)> CPU DETAIL: Read R 1708: 0060000000000383 
DBG(48597293)> CPU DETAIL: Transfer to T 
DBG(48597293)> CPU DETAIL: Write 0105: 0060000000000383 
DBG(48597295)> CPU CMD: Exec 0381: 00 72 1634 1640 0383   if (1634 eof on this tape number) <> zero goto 0383   
DBG(48597296)> CPU DETAIL: Read R 1634: 0100000000000000 
DBG(48597297)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48597298)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48597299)> CPU DETAIL: Transfer to T 
DBG(48597301)> CPU CMD: Exec 0383: 00 40 1635 1639 1635   incr (1635 of times input tape rewinded when scanning for an event)   
DBG(48597302)> CPU DETAIL: Read R 1635: 0000000000000001 
DBG(48597303)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597304)> CPU DETAIL: Result: 0000000000000002 
DBG(48597305)> CPU DETAIL: Write 1635: 0000000000000002 
DBG(48597307)> CPU CMD: Exec 0384: 00 41 1707 0000 0000   3 - (1635 of times input tape rewinded when scanning for an event) -> REG1   
DBG(48597308)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48597309)> CPU DETAIL: Result: 0000000000000001 
DBG(48597312)> CPU CMD: Exec 0385: 00 63 0362 0362 0000   if >=0 goto 0362   
DBG(48597313)> CPU DETAIL: REG1: 0000000000000001
DBG(48597313)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48597315)> CPU CMD: Exec 0362: 00 60 1640 1628 0000   clear (1628)   
DBG(48597316)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597317)> CPU DETAIL: Write 1628: 0000000000000000 
DBG(48597319)> CPU CMD: Exec 0363: 00 60 1646 0169 0000   ???   
DBG(48597320)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48597321)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48597323)> CPU CMD: Exec 0364: 00 60 1689 0148 0359   ???, goto 0359   
DBG(48597324)> CPU DETAIL: Read R 1689: 0060000000000338 
DBG(48597325)> CPU DETAIL: Transfer to T 
DBG(48597325)> CPU DETAIL: Write 0148: 0060000000000338 
DBG(48597327)> CPU CMD: Exec 0359: 00 70 1611 1640 0210   if (1611 num of word in output block) = zero goto 0210 switch output tape   
DBG(48597328)> CPU DETAIL: Read R 1611: 0000000000000029 
DBG(48597329)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48597330)> CPU DETAIL: Diff: REG1: 0000000000000029
DBG(48597333)> CPU CMD: Exec 0360: 00 60 1712 0206 0198   set exit for 0198 routine to 0210, goto 0198 write output buf to tape    
DBG(48597334)> CPU DETAIL: Read R 1712: 0060000000000210 
DBG(48597335)> CPU DETAIL: Transfer to T 
DBG(48597335)> CPU DETAIL: Write 0206: 0060000000000210 
DBG(48597337)> CPU CMD: Exec 0198: 96 60 1611 0000 0000   set instr ...   
DBG(48597338)> CPU DETAIL: Read R 1611: 0000000000000029 
DBG(48597339)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000290000 
DBG(48597342)> CPU CMD: Exec 0199: 00 41 0000 1648 0000   ... to write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48597343)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597344)> CPU DETAIL: Result: 0000000000280000 
DBG(48597347)> CPU CMD: Exec 0200: 00 40 1664 0000 0201   ... and block 0500 using 1664   
DBG(48597348)> CPU DETAIL: Read R 1664: 0591120012000502 
DBG(48597349)> CPU DETAIL: Result: 0591120012280502 
DBG(48597350)> CPU DETAIL: Write 0201: 0591120012280502 
DBG(48597352)> CPU CMD: Exec 0201: 05 91 1200 1228 0502   write on tape 05 1200 1200+(1611 num of words in output block)-1    
DBG(48597353)> CPU DETAIL: Tape operation on MT5, Addr 1200->1228, Block Number 0502
DBG(48597353)> MT CMD: Tape unit 5: init write
DBG(48597353)> MT EXP: Write from 1200 to 1228 as Block number 0502
DBG(48597353)> MT EXP: Start Of Block: 05 91 1200 1228 0502
DBG(48597353)> MT EXP: CRT 1200 to Tape: 0160000000141014 
DBG(48597353)> MT EXP: CRT 1201 to Tape: 0100000233030000 
DBG(48597353)> MT EXP: CRT 1202 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1203 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1204 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1205 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1206 to Tape: 3336000000000201 
DBG(48597353)> MT EXP: CRT 1207 to Tape: 0000000233010000 
DBG(48597353)> MT EXP: CRT 1208 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1209 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1210 to Tape: 0000000233020000 
DBG(48597353)> MT EXP: CRT 1211 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1212 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1213 to Tape: 0000000233090000 
DBG(48597353)> MT EXP: CRT 1214 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1215 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1216 to Tape: 0130000000141015 
DBG(48597353)> MT EXP: CRT 1217 to Tape: 0100000233090000 
DBG(48597353)> MT EXP: CRT 1218 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1219 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1220 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1221 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1222 to Tape: 3336000000000200 
DBG(48597353)> MT EXP: CRT 1223 to Tape: 0000000233010000 
DBG(48597353)> MT EXP: CRT 1224 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1225 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1226 to Tape: 0000000233030000 
DBG(48597353)> MT EXP: CRT 1227 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: CRT 1228 to Tape: 0000000000000000 
DBG(48597353)> MT EXP: End Of Block: 05 91 1200 1228 0502 (29 words)
DBG(48597353)> MT DETAIL: Write block (560 chars, used 2.60 inches, needs 15 msec) to tape 5
DBG(48597353)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.02% of medium (2.60 inches)
DBG(48597356)> CPU CMD: Exec 0202: 08 60 0202 0000 1730   call 1730 check write   
DBG(48597357)> CPU DETAIL: Read R 0202: 0860020200001730 
DBG(48597358)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600202 
DBG(48597359)> CPU DETAIL: Transfer to T 
DBG(48597361)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48597362)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48597363)> CPU DETAIL: Result: 0060000000000203 
DBG(48597364)> CPU DETAIL: Write 1742: 0060000000000203 
DBG(48597366)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48597367)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000203000000000 
DBG(48597370)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48597371)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48597372)> CPU DETAIL: Result: 0600201174700000 
DBG(48597373)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060020117470000 
DBG(48597374)> CPU DETAIL: Write 1734: 0060020117470000 
DBG(48597376)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48597377)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48597378)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48597380)> CPU CMD: Exec 1734: 00 60 0201 1747 0000      
DBG(48597381)> CPU DETAIL: Read R 0201: 0591120012280502 
DBG(48597382)> CPU DETAIL: Write 1747: 0591120012280502 
DBG(48597384)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48597385)> CPU DETAIL: Condition not present 
DBG(48597387)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48597388)> CPU DETAIL: Transfer to T 
DBG(48597390)> CPU CMD: Exec 1742: 00 60 0000 0000 0203   EXIT_CheckWrite   
DBG(48597391)> CPU DETAIL: Transfer to T 
DBG(48597393)> CPU CMD: Exec 0203: 00 40 1664 1639 1664   incr block number on write tape instr   
DBG(48597394)> CPU DETAIL: Read R 1664: 0591120012000502 
DBG(48597395)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48597396)> CPU DETAIL: Result: 0591120012000503 
DBG(48597397)> CPU DETAIL: Write 1664: 0591120012000503 
DBG(48597399)> CPU CMD: Exec 0204: 00 60 1640 1611 0000   clear (1611 num of words in event output block)   
DBG(48597400)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597401)> CPU DETAIL: Write 1611: 0000000000000000 
DBG(48597403)> CPU CMD: Exec 0205: 00 60 1663 0191 0000   restore instr 0191   
DBG(48597404)> CPU DETAIL: Read R 1663: 0060859812000000 
DBG(48597405)> CPU DETAIL: Write 0191: 0060859812000000 
DBG(48597407)> CPU CMD: Exec 0206: 00 60 0000 0000 0210   goto 0210 switch output tape   
DBG(48597408)> CPU DETAIL: Transfer to T 
DBG(48597410)> CPU CMD: Exec 0210: 00 42 0201 1653 0000   get tape number 0N 0..0 from 0201 tape write instr   
DBG(48597411)> CPU DETAIL: Read R 0201: 0591120012280502 
DBG(48597412)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48597413)> CPU DETAIL: Result: 0500000000000000 
DBG(48597416)> CPU CMD: Exec 0211: 00 72 1666 0000 0218   if tape number <> 05 0..0 goto 0218   
DBG(48597417)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48597418)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48597421)> CPU CMD: Exec 0212: 00 40 1664 1653 1664   set tape write instr to tape 06    
DBG(48597422)> CPU DETAIL: Read R 1664: 0591120012000503 
DBG(48597423)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48597424)> CPU DETAIL: Result: 0691120012000503 
DBG(48597425)> CPU DETAIL: Write 1664: 0691120012000503 
DBG(48597427)> CPU CMD: Exec 0213: 00 60 1701 0338 0000   set tape read instr to tape 05   
DBG(48597428)> CPU DETAIL: Read R 1701: 0594099900000000 
DBG(48597429)> CPU DETAIL: Write 0338: 0594099900000000 
DBG(48597431)> CPU CMD: Exec 0214: 00 40 1683 1666 0223   set instr 0223 to write end of file to tape 05   
DBG(48597432)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48597433)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48597434)> CPU DETAIL: Result: 0591000000000000 
DBG(48597435)> CPU DETAIL: Write 0223: 0591000000000000 
DBG(48597437)> CPU CMD: Exec 0215: 00 40 1684 1666 0224   set instr 0224 to rewind tape 05   
DBG(48597438)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48597439)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48597440)> CPU DETAIL: Result: 0598000000000000 
DBG(48597441)> CPU DETAIL: Write 0224: 0598000000000000 
DBG(48597443)> CPU CMD: Exec 0216: 00 40 1684 1666 0343   set instr 0343 to rewind tape 05   
DBG(48597444)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48597445)> CPU DETAIL: Read S 1666: 0500000000000000 
DBG(48597446)> CPU DETAIL: Result: 0598000000000000 
DBG(48597447)> CPU DETAIL: Write 0343: 0598000000000000 
DBG(48597449)> CPU CMD: Exec 0217: 00 60 0000 0000 0223   goto 0223   
DBG(48597450)> CPU DETAIL: Transfer to T 
DBG(48597452)> CPU CMD: Exec 0223: 05 91 0000 0000 0000   write end of file to tape      
DBG(48597453)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48597453)> MT CMD: Tape unit 5: init write
DBG(48597453)> MT EXP: End Of File mark: 02d 05 0091 0000 0000
DBG(48597453)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 5
DBG(48597453)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.02% of medium (4.14 inches)
DBG(48597456)> CPU CMD: Exec 0224: 05 98 0000 0000 0000   rewind tape   
DBG(48597457)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48597457)> MT CMD: Tape unit 5: init rewind (current medium used 4.14 inches)
DBG(48597457)> MT CMD: Tape unit 5: rewind time (0 sec)
DBG(48597457)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48597459)> CPU CMD: Exec 0225: 00 60 1689 0148 0000   set read from tape 2/4 instead of tape 1   
DBG(48597460)> CPU DETAIL: Read R 1689: 0060000000000338 
DBG(48597461)> CPU DETAIL: Write 0148: 0060000000000338 
DBG(48597463)> CPU CMD: Exec 0226: 00 60 1640 1636 0144   clear (1636 last event saved in tape 5), goto 0144 tape 1 input event block  
DBG(48597464)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597465)> CPU DETAIL: Transfer to T 
DBG(48597465)> CPU DETAIL: Write 1636: 0000000000000000 
DBG(48597467)> CPU CMD: Exec 0144: 00 60 1640 1615 0000   clear (1614 words in tape 01 block)   
DBG(48597468)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597469)> CPU DETAIL: Write 1615: 0000000000000000 
DBG(48597471)> CPU CMD: Exec 0145: 00 60 1659 0149 0000   restore instr 0149   
DBG(48597472)> CPU DETAIL: Read R 1659: 0060100516160000 
DBG(48597473)> CPU DETAIL: Write 0149: 0060100516160000 
DBG(48597475)> CPU CMD: Exec 0146: 00 60 1657 0117 0000   ???   
DBG(48597476)> CPU DETAIL: Read R 1657: 0060164601690141 
DBG(48597477)> CPU DETAIL: Write 0117: 0060164601690141 
DBG(48597479)> CPU CMD: Exec 0147: 00 60 1660 0167 0000   restore instr 0167   
DBG(48597480)> CPU DETAIL: Read R 1660: 0658000100000165 
DBG(48597481)> CPU DETAIL: Write 0167: 0658000100000165 
DBG(48597483)> CPU CMD: Exec 0148: 00 60 0000 0000 0338   goto read event block from input tape 01   
DBG(48597484)> CPU DETAIL: Transfer to T 
DBG(48597486)> CPU CMD: Exec 0338: 05 94 0999 0000 0000   read input tape 5 at addr 0999   
DBG(48597487)> CPU DETAIL: Tape operation on MT5, Addr 0999->0000, Block Number 0000
DBG(48597487)> MT DATA: Tape unit 5: init read
DBG(48597487)> MT DETAIL: Read tape record (560 chars, used 2.60 inches, needs 15 msec) from tape 5
DBG(48597487)> MT DETAIL: Tape record contents: D*0591120012280502C*0160000000141014C*0100000233030000C*00000000000000...
DBG(48597487)> MT EXP: Start Of Block Word: 0591120012280502
DBG(48597487)> MT EXP: Read Tape Block number 0502
DBG(48597487)> MT EXP: Read forward addr 0999 to 0000
DBG(48597487)> MT EXP: Tape to CRT 0999: 0160000000141014 
DBG(48597487)> MT EXP: Tape to CRT 1000: 0100000233030000 
DBG(48597487)> MT EXP: Tape to CRT 1001: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1002: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1005: 3336000000000201 
DBG(48597487)> MT EXP: Tape to CRT 1006: 0000000233010000 
DBG(48597487)> MT EXP: Tape to CRT 1007: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1008: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1009: 0000000233020000 
DBG(48597487)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1011: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1012: 0000000233090000 
DBG(48597487)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1015: 0130000000141015 
DBG(48597487)> MT EXP: Tape to CRT 1016: 0100000233090000 
DBG(48597487)> MT EXP: Tape to CRT 1017: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1018: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1019: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1021: 3336000000000200 
DBG(48597487)> MT EXP: Tape to CRT 1022: 0000000233010000 
DBG(48597487)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1024: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1025: 0000000233030000 
DBG(48597487)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(48597487)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(48597487)> MT EXP: End Of Block Word: 0591120012280502, data words in block: 29
DBG(48597487)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.02% of medium (2.60 inches)
DBG(48597490)> CPU CMD: Exec 0339: 08 68 0339 0000 1713   if tape check, call 1713 reread      
DBG(48597491)> CPU DETAIL: Condition not present 
DBG(48597493)> CPU CMD: Exec 0340: 00 67 1688 1628 1760   if end of file, 06 0..0 -> (1628), goto 1760   
DBG(48597494)> CPU DETAIL: Condition not present 
DBG(48597496)> CPU CMD: Exec 0341: 00 60 0000 1613 0000   REG1 -> (1613 Saved start of block just read from tape 01/05)   
DBG(48597497)> CPU DETAIL: Write 1613: 0591120012280502 
DBG(48597499)> CPU CMD: Exec 0342: 00 60 1666 1621 0111   05 0..0 -> (1621 current input tape), goto 0111 read event from input tape   
DBG(48597500)> CPU DETAIL: Read R 1666: 0500000000000000 
DBG(48597501)> CPU DETAIL: Transfer to T 
DBG(48597501)> CPU DETAIL: Write 1621: 0500000000000000 
DBG(48597503)> CPU CMD: Exec 0111: 04 42 1613 1637 1604   Mask and shift start of block: bbbb -> (1604)          
DBG(48597504)> CPU DETAIL: Read R 1613: 0591120012280502 
DBG(48597505)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48597506)> CPU DETAIL: Result: 0000000012280000 
DBG(48597507)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001228 
DBG(48597508)> CPU DETAIL: Write 1604: 0000000000001228 
DBG(48597510)> CPU CMD: Exec 0112: 08 42 1613 1638 0000   Mask and shift start of block: aaaa -> (REG1)           
DBG(48597511)> CPU DETAIL: Read R 1613: 0591120012280502 
DBG(48597512)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48597513)> CPU DETAIL: Result: 0000120000000000 
DBG(48597514)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001200 
DBG(48597517)> CPU CMD: Exec 0113: 00 41 1604 0000 1614   (1604) - REG2 -> (1614)   
DBG(48597518)> CPU DETAIL: Read R 1604: 0000000000001228 
DBG(48597519)> CPU DETAIL: Result: 0000000000000028 
DBG(48597520)> CPU DETAIL: Write 1614: 0000000000000028 
DBG(48597522)> CPU CMD: Exec 0114: 00 40 1639 0000 1614          + 1 -> (1614)                                 1614=total number of wo 
DBG(48597523)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48597524)> CPU DETAIL: Result: 0000000000000029 
DBG(48597525)> CPU DETAIL: Write 1614: 0000000000000029 
DBG(48597527)> CPU CMD: Exec 0115: 00 52 0000 0000 0000   Clear M6   
DBG(48597528)> CPU DETAIL: M4: 0026 
DBG(48597529)> CPU DETAIL: Clear M6
DBG(48597529)> CPU DETAIL: M6: 0000 
DBG(48597530)> CPU DETAIL: M8: 0013 
DBG(48597533)> CPU CMD: Exec 0116: 00 60 1646 0140 0000   set 0140 as nop   
DBG(48597534)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48597535)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48597537)> CPU CMD: Exec 0117: 00 60 1646 0169 0141   nop   
DBG(48597538)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48597539)> CPU DETAIL: Transfer to T 
DBG(48597539)> CPU DETAIL: Write 0169: 0060000000000000 
DBG(48597541)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48597542)> CPU DETAIL: Read R 1614: 0000000000000029 
DBG(48597543)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48597544)> CPU DETAIL: Result: 0000000000000029 
DBG(48597547)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48597548)> CPU DETAIL: REG1: 0000000000000029
DBG(48597548)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48597550)> CPU CMD: Exec 0149: 00 60 1005 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48597551)> CPU DETAIL: Read R 1005: 3336000000000201 
DBG(48597552)> CPU DETAIL: Write 1616: 3336000000000201 
DBG(48597554)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48597555)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48597555)> CPU DETAIL: Read R 0999: 0160000000141014 
DBG(48597556)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48597557)> CPU DETAIL: Write 1619: 0000000000000016 
DBG(48597559)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48597560)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48597561)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48597562)> CPU DETAIL: Result: 0000000000000200 
DBG(48597563)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48597564)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48597566)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48597567)> CPU DETAIL: Read R 1616: 3336000000000201 
DBG(48597568)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48597569)> CPU DETAIL: Result: 0000000000000001 
DBG(48597570)> CPU DETAIL: Write 1618: 0000000000000001 
DBG(48597572)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48597573)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48597574)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48597575)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48597576)> CPU DETAIL: Transfer to T 
DBG(48597578)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48597579)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48597580)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48597581)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48597581)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48597582)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48597583)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48597584)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48597586)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48597587)> CPU DETAIL: Read R 1618: 0000000000000001 
DBG(48597588)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48597589)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48597589)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48597590)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48597591)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48597592)> CPU DETAIL: Write 1618: 9600000000000003 
DBG(48597594)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48597595)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48597596)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48597599)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48597600)> CPU DETAIL: Read R 0149: 0060100516160000 
DBG(48597601)> CPU DETAIL: Result: 0060102116160000 
DBG(48597602)> CPU DETAIL: Write 0149: 0060102116160000 
DBG(48597604)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48597605)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48597606)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48597607)> CPU DETAIL: Result: 0000000000000006 
DBG(48597608)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48597610)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48597611)> CPU DETAIL: Read R 1618: 9600000000000003 
DBG(48597612)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48597613)> CPU DETAIL: Result: 0000000000000003 
DBG(48597614)> CPU DETAIL: Write 1618: 0000000000000003 
DBG(48597616)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48597617)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48597618)> CPU DETAIL: Read S 1615: 0000000000000000 
DBG(48597619)> CPU DETAIL: Result: 0000000000000016 
DBG(48597620)> CPU DETAIL: Write 1615: 0000000000000016 
DBG(48597622)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48597623)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48597624)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48597627)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48597628)> CPU DETAIL: Read R 0167: 0658000100000165 
DBG(48597629)> CPU DETAIL: Result: 0658000100160165 
DBG(48597630)> CPU DETAIL: Write 0167: 0658000100160165 
DBG(48597632)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597633)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(48597633)> CPU DETAIL: Read R 0999: 0160000000141014 
DBG(48597634)> CPU DETAIL: Write 0598: 0160000000141014 
DBG(48597636)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597637)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48597638)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597639)> CPU DETAIL: Result: 0060699905990000 
DBG(48597640)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48597642)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597643)> CPU DETAIL: M6: 0001 
DBG(48597644)> CPU DETAIL: Transfer to T 
DBG(48597646)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597647)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(48597647)> CPU DETAIL: Read R 1000: 0100000233030000 
DBG(48597648)> CPU DETAIL: Write 0599: 0100000233030000 
DBG(48597650)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597651)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48597652)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597653)> CPU DETAIL: Result: 0060699906000000 
DBG(48597654)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48597656)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597657)> CPU DETAIL: M6: 0002 
DBG(48597658)> CPU DETAIL: Transfer to T 
DBG(48597660)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597661)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(48597661)> CPU DETAIL: Read R 1001: 0000000000000000 
DBG(48597662)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48597664)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597665)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48597666)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597667)> CPU DETAIL: Result: 0060699906010000 
DBG(48597668)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48597670)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597671)> CPU DETAIL: M6: 0003 
DBG(48597672)> CPU DETAIL: Transfer to T 
DBG(48597674)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597675)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(48597675)> CPU DETAIL: Read R 1002: 0000000000000000 
DBG(48597676)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48597678)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597679)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48597680)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597681)> CPU DETAIL: Result: 0060699906020000 
DBG(48597682)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48597684)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597685)> CPU DETAIL: M6: 0004 
DBG(48597686)> CPU DETAIL: Transfer to T 
DBG(48597688)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597689)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(48597689)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(48597690)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48597692)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597693)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48597694)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597695)> CPU DETAIL: Result: 0060699906030000 
DBG(48597696)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48597698)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597699)> CPU DETAIL: M6: 0005 
DBG(48597700)> CPU DETAIL: Transfer to T 
DBG(48597702)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597703)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(48597703)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(48597704)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48597706)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597707)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48597708)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597709)> CPU DETAIL: Result: 0060699906040000 
DBG(48597710)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48597712)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597713)> CPU DETAIL: M6: 0006 
DBG(48597714)> CPU DETAIL: Transfer to T 
DBG(48597716)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597717)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(48597717)> CPU DETAIL: Read R 1005: 3336000000000201 
DBG(48597718)> CPU DETAIL: Write 0604: 3336000000000201 
DBG(48597720)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597721)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48597722)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597723)> CPU DETAIL: Result: 0060699906050000 
DBG(48597724)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48597726)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597727)> CPU DETAIL: M6: 0007 
DBG(48597728)> CPU DETAIL: Transfer to T 
DBG(48597730)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597731)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(48597731)> CPU DETAIL: Read R 1006: 0000000233010000 
DBG(48597732)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48597734)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597735)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48597736)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597737)> CPU DETAIL: Result: 0060699906060000 
DBG(48597738)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48597740)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597741)> CPU DETAIL: M6: 0008 
DBG(48597742)> CPU DETAIL: Transfer to T 
DBG(48597744)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597745)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(48597745)> CPU DETAIL: Read R 1007: 0000000000000000 
DBG(48597746)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48597748)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597749)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48597750)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597751)> CPU DETAIL: Result: 0060699906070000 
DBG(48597752)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48597754)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597755)> CPU DETAIL: M6: 0009 
DBG(48597756)> CPU DETAIL: Transfer to T 
DBG(48597758)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597759)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(48597759)> CPU DETAIL: Read R 1008: 0000000000000000 
DBG(48597760)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48597762)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597763)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48597764)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597765)> CPU DETAIL: Result: 0060699906080000 
DBG(48597766)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48597768)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597769)> CPU DETAIL: M6: 0010 
DBG(48597770)> CPU DETAIL: Transfer to T 
DBG(48597772)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597773)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(48597773)> CPU DETAIL: Read R 1009: 0000000233020000 
DBG(48597774)> CPU DETAIL: Write 0608: 0000000233020000 
DBG(48597776)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597777)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48597778)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597779)> CPU DETAIL: Result: 0060699906090000 
DBG(48597780)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48597782)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597783)> CPU DETAIL: M6: 0011 
DBG(48597784)> CPU DETAIL: Transfer to T 
DBG(48597786)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597787)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(48597787)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(48597788)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48597790)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597791)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48597792)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597793)> CPU DETAIL: Result: 0060699906100000 
DBG(48597794)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48597796)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597797)> CPU DETAIL: M6: 0012 
DBG(48597798)> CPU DETAIL: Transfer to T 
DBG(48597800)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597801)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(48597801)> CPU DETAIL: Read R 1011: 0000000000000000 
DBG(48597802)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48597804)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597805)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48597806)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597807)> CPU DETAIL: Result: 0060699906110000 
DBG(48597808)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48597810)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597811)> CPU DETAIL: M6: 0013 
DBG(48597812)> CPU DETAIL: Transfer to T 
DBG(48597814)> CPU CMD: Exec 0165: 00 60 6999 0611 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597815)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(48597815)> CPU DETAIL: Read R 1012: 0000000233090000 
DBG(48597816)> CPU DETAIL: Write 0611: 0000000233090000 
DBG(48597818)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597819)> CPU DETAIL: Read R 0165: 0060699906110000 
DBG(48597820)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597821)> CPU DETAIL: Result: 0060699906120000 
DBG(48597822)> CPU DETAIL: Write 0165: 0060699906120000 
DBG(48597824)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597825)> CPU DETAIL: M6: 0014 
DBG(48597826)> CPU DETAIL: Transfer to T 
DBG(48597828)> CPU CMD: Exec 0165: 00 60 6999 0612 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597829)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(48597829)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(48597830)> CPU DETAIL: Write 0612: 0000000000000000 
DBG(48597832)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597833)> CPU DETAIL: Read R 0165: 0060699906120000 
DBG(48597834)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597835)> CPU DETAIL: Result: 0060699906130000 
DBG(48597836)> CPU DETAIL: Write 0165: 0060699906130000 
DBG(48597838)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597839)> CPU DETAIL: M6: 0015 
DBG(48597840)> CPU DETAIL: Transfer to T 
DBG(48597842)> CPU CMD: Exec 0165: 00 60 6999 0613 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48597843)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(48597843)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(48597844)> CPU DETAIL: Write 0613: 0000000000000000 
DBG(48597846)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48597847)> CPU DETAIL: Read R 0165: 0060699906130000 
DBG(48597848)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48597849)> CPU DETAIL: Result: 0060699906140000 
DBG(48597850)> CPU DETAIL: Write 0165: 0060699906140000 
DBG(48597852)> CPU CMD: Exec 0167: 06 58 0001 0016 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48597853)> CPU DETAIL: M6: 0016 
DBG(48597856)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48597857)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48597858)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48597860)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48597863)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48597864)> CPU DETAIL: Read R 1609: 0000000000000006 
DBG(48597865)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000600000000 
DBG(48597868)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48597869)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48597870)> CPU DETAIL: Result: 0000001300000000 
DBG(48597873)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48597874)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48597875)> CPU DETAIL: Result: 0042441016550000 
DBG(48597876)> CPU DETAIL: Write 0174: 0042441016550000 
DBG(48597878)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48597879)> CPU DETAIL: Read R 0599: 0100000233030000 
DBG(48597880)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597881)> CPU DETAIL: Result: 0000000233030000 
DBG(48597882)> CPU DETAIL: Write 1620: 0000000233030000 
DBG(48597884)> CPU CMD: Exec 0174: 00 42 4410 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48597885)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48597885)> CPU DETAIL: Read R 0436: 0000000233030000 
DBG(48597886)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597887)> CPU DETAIL: Result: 0000000233030000 
DBG(48597890)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48597891)> CPU DETAIL: Read S 1620: 0000000233030000 
DBG(48597892)> CPU DETAIL: Result: 0000000000000000 
DBG(48597895)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48597896)> CPU DETAIL: REG1: 0000000000000000
DBG(48597896)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48597898)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48597899)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597900)> CPU DETAIL: Transfer to T 
DBG(48597900)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48597902)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48597903)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48597904)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597905)> CPU DETAIL: Result: 0000000233010000 
DBG(48597906)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48597908)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48597909)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48597909)> CPU DETAIL: Read R 0424: 0000000233020003 
DBG(48597910)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597911)> CPU DETAIL: Result: 0000000233020000 
DBG(48597914)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48597915)> CPU DETAIL: Read R 1620: 0000000233010000 
DBG(48597916)> CPU DETAIL: Diff: REG1: 9999999999990000
DBG(48597919)> CPU CMD: Exec 0230: 00 40 1644 0227 0227   incr field_R on instr 0227 to read next predecessor on list   
DBG(48597920)> CPU DETAIL: Read R 1644: 0000000300000000 
DBG(48597921)> CPU DETAIL: Read S 0227: 0042060516551620 
DBG(48597922)> CPU DETAIL: Result: 0042060816551620 
DBG(48597923)> CPU DETAIL: Write 0227: 0042060816551620 
DBG(48597925)> CPU CMD: Exec 0231: 00 40 1707 1624 1624   incr (1624 number of words scanned on predecessor list)   
DBG(48597926)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48597927)> CPU DETAIL: Read S 1624: 0000000000000000 
DBG(48597928)> CPU DETAIL: Result: 0000000000000003 
DBG(48597929)> CPU DETAIL: Write 1624: 0000000000000003 
DBG(48597931)> CPU CMD: Exec 0232: 00 72 0000 1617 0227   if <> (1617 num of words used by predecessor list) goto 0227: loop because p 
DBG(48597932)> CPU DETAIL: Read S 1617: 0000000000000006 
DBG(48597933)> CPU DETAIL: Diff: REG1: 9999999999999997
DBG(48597934)> CPU DETAIL: Transfer to T 
DBG(48597936)> CPU CMD: Exec 0227: 00 42 0608 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48597937)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48597938)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597939)> CPU DETAIL: Result: 0000000233020000 
DBG(48597940)> CPU DETAIL: Write 1620: 0000000233020000 
DBG(48597942)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48597943)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48597943)> CPU DETAIL: Read R 0424: 0000000233020003 
DBG(48597944)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48597945)> CPU DETAIL: Result: 0000000233020000 
DBG(48597948)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48597949)> CPU DETAIL: Read R 1620: 0000000233020000 
DBG(48597950)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48597951)> CPU DETAIL: Transfer to T 
DBG(48597953)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48597954)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48597955)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48597957)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48597958)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48597959)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48597961)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48597962)> CPU DETAIL: Read R 0599: 0100000233030000 
DBG(48597963)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48597964)> CPU DETAIL: Result: 0200000233030000 
DBG(48597965)> CPU DETAIL: Write 0599: 0200000233030000 
DBG(48597967)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48597968)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000002 
DBG(48597969)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48597971)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48597972)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48597973)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48597974)> CPU DETAIL: Result: 0000000000000200 
DBG(48597975)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48597978)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48597979)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48597980)> CPU DETAIL: Result: 0000000000000000 
DBG(48597983)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48597984)> CPU DETAIL: REG1: 0000000000000000
DBG(48597984)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48597986)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48597987)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48597988)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48597990)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48597991)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48597992)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48597994)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48597995)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48597996)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48597997)> CPU DETAIL: Result: 0000000000000200 
DBG(48597998)> CPU DETAIL: Word Shift 12 digits left: REG1: 0200000000000000 
DBG(48598001)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48598002)> CPU DETAIL: Read R 0599: 0200000233030000 
DBG(48598003)> CPU DETAIL: Result: 0000000233030000 
DBG(48598004)> CPU DETAIL: Write 0599: 0000000233030000 
DBG(48598006)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48598007)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48598008)> CPU DETAIL: Read S 1626: 0000000000000000 
DBG(48598009)> CPU DETAIL: Result: 0000000000000016 
DBG(48598012)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48598013)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48598014)> CPU DETAIL: Result: 0000000000000184 
DBG(48598017)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48598018)> CPU DETAIL: REG1: 0000000000000184
DBG(48598018)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48598020)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48598021)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48598022)> CPU DETAIL: Transfer to T 
DBG(48598022)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48598024)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48598025)> CPU DETAIL: M4: 0026 
DBG(48598026)> CPU DETAIL: M6: 0016 
DBG(48598027)> CPU DETAIL: Clear M8
DBG(48598027)> CPU DETAIL: M8: 0000 
DBG(48598030)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48598031)> CPU DETAIL: Read R 1619: 0000000000000016 
DBG(48598032)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48598035)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48598036)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48598037)> CPU DETAIL: Result: 0858000100160296 
DBG(48598038)> CPU DETAIL: Write 0299: 0858000100160296 
DBG(48598040)> CPU CMD: Exec 0296: 00 60 8598 0798 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598041)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48598041)> CPU DETAIL: Read R 0598: 0160000000141014 
DBG(48598042)> CPU DETAIL: Write 0798: 0160000000141014 
DBG(48598044)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598045)> CPU DETAIL: Read R 0296: 0060859807980000 
DBG(48598046)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598047)> CPU DETAIL: Result: 0060859807990000 
DBG(48598048)> CPU DETAIL: Write 0296: 0060859807990000 
DBG(48598050)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598051)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48598052)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598053)> CPU DETAIL: Result: 0000000000000001 
DBG(48598054)> CPU DETAIL: Write 1626: 0000000000000001 
DBG(48598056)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598057)> CPU DETAIL: M8: 0001 
DBG(48598058)> CPU DETAIL: Transfer to T 
DBG(48598060)> CPU CMD: Exec 0296: 00 60 8598 0799 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598061)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48598061)> CPU DETAIL: Read R 0599: 0000000233030000 
DBG(48598062)> CPU DETAIL: Write 0799: 0000000233030000 
DBG(48598064)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598065)> CPU DETAIL: Read R 0296: 0060859807990000 
DBG(48598066)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598067)> CPU DETAIL: Result: 0060859808000000 
DBG(48598068)> CPU DETAIL: Write 0296: 0060859808000000 
DBG(48598070)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598071)> CPU DETAIL: Read R 1626: 0000000000000001 
DBG(48598072)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598073)> CPU DETAIL: Result: 0000000000000002 
DBG(48598074)> CPU DETAIL: Write 1626: 0000000000000002 
DBG(48598076)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598077)> CPU DETAIL: M8: 0002 
DBG(48598078)> CPU DETAIL: Transfer to T 
DBG(48598080)> CPU CMD: Exec 0296: 00 60 8598 0800 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598081)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48598081)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48598082)> CPU DETAIL: Write 0800: 0000000000000000 
DBG(48598084)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598085)> CPU DETAIL: Read R 0296: 0060859808000000 
DBG(48598086)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598087)> CPU DETAIL: Result: 0060859808010000 
DBG(48598088)> CPU DETAIL: Write 0296: 0060859808010000 
DBG(48598090)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598091)> CPU DETAIL: Read R 1626: 0000000000000002 
DBG(48598092)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598093)> CPU DETAIL: Result: 0000000000000003 
DBG(48598094)> CPU DETAIL: Write 1626: 0000000000000003 
DBG(48598096)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598097)> CPU DETAIL: M8: 0003 
DBG(48598098)> CPU DETAIL: Transfer to T 
DBG(48598100)> CPU CMD: Exec 0296: 00 60 8598 0801 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598101)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48598101)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48598102)> CPU DETAIL: Write 0801: 0000000000000000 
DBG(48598104)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598105)> CPU DETAIL: Read R 0296: 0060859808010000 
DBG(48598106)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598107)> CPU DETAIL: Result: 0060859808020000 
DBG(48598108)> CPU DETAIL: Write 0296: 0060859808020000 
DBG(48598110)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598111)> CPU DETAIL: Read R 1626: 0000000000000003 
DBG(48598112)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598113)> CPU DETAIL: Result: 0000000000000004 
DBG(48598114)> CPU DETAIL: Write 1626: 0000000000000004 
DBG(48598116)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598117)> CPU DETAIL: M8: 0004 
DBG(48598118)> CPU DETAIL: Transfer to T 
DBG(48598120)> CPU CMD: Exec 0296: 00 60 8598 0802 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598121)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48598121)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48598122)> CPU DETAIL: Write 0802: 0000000000000000 
DBG(48598124)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598125)> CPU DETAIL: Read R 0296: 0060859808020000 
DBG(48598126)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598127)> CPU DETAIL: Result: 0060859808030000 
DBG(48598128)> CPU DETAIL: Write 0296: 0060859808030000 
DBG(48598130)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598131)> CPU DETAIL: Read R 1626: 0000000000000004 
DBG(48598132)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598133)> CPU DETAIL: Result: 0000000000000005 
DBG(48598134)> CPU DETAIL: Write 1626: 0000000000000005 
DBG(48598136)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598137)> CPU DETAIL: M8: 0005 
DBG(48598138)> CPU DETAIL: Transfer to T 
DBG(48598140)> CPU CMD: Exec 0296: 00 60 8598 0803 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598141)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48598141)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48598142)> CPU DETAIL: Write 0803: 0000000000000000 
DBG(48598144)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598145)> CPU DETAIL: Read R 0296: 0060859808030000 
DBG(48598146)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598147)> CPU DETAIL: Result: 0060859808040000 
DBG(48598148)> CPU DETAIL: Write 0296: 0060859808040000 
DBG(48598150)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598151)> CPU DETAIL: Read R 1626: 0000000000000005 
DBG(48598152)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598153)> CPU DETAIL: Result: 0000000000000006 
DBG(48598154)> CPU DETAIL: Write 1626: 0000000000000006 
DBG(48598156)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598157)> CPU DETAIL: M8: 0006 
DBG(48598158)> CPU DETAIL: Transfer to T 
DBG(48598160)> CPU CMD: Exec 0296: 00 60 8598 0804 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598161)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48598161)> CPU DETAIL: Read R 0604: 3336000000000201 
DBG(48598162)> CPU DETAIL: Write 0804: 3336000000000201 
DBG(48598164)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598165)> CPU DETAIL: Read R 0296: 0060859808040000 
DBG(48598166)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598167)> CPU DETAIL: Result: 0060859808050000 
DBG(48598168)> CPU DETAIL: Write 0296: 0060859808050000 
DBG(48598170)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598171)> CPU DETAIL: Read R 1626: 0000000000000006 
DBG(48598172)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598173)> CPU DETAIL: Result: 0000000000000007 
DBG(48598174)> CPU DETAIL: Write 1626: 0000000000000007 
DBG(48598176)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598177)> CPU DETAIL: M8: 0007 
DBG(48598178)> CPU DETAIL: Transfer to T 
DBG(48598180)> CPU CMD: Exec 0296: 00 60 8598 0805 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598181)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48598181)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48598182)> CPU DETAIL: Write 0805: 0000000233010000 
DBG(48598184)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598185)> CPU DETAIL: Read R 0296: 0060859808050000 
DBG(48598186)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598187)> CPU DETAIL: Result: 0060859808060000 
DBG(48598188)> CPU DETAIL: Write 0296: 0060859808060000 
DBG(48598190)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598191)> CPU DETAIL: Read R 1626: 0000000000000007 
DBG(48598192)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598193)> CPU DETAIL: Result: 0000000000000008 
DBG(48598194)> CPU DETAIL: Write 1626: 0000000000000008 
DBG(48598196)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598197)> CPU DETAIL: M8: 0008 
DBG(48598198)> CPU DETAIL: Transfer to T 
DBG(48598200)> CPU CMD: Exec 0296: 00 60 8598 0806 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598201)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48598201)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48598202)> CPU DETAIL: Write 0806: 0000000000000000 
DBG(48598204)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598205)> CPU DETAIL: Read R 0296: 0060859808060000 
DBG(48598206)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598207)> CPU DETAIL: Result: 0060859808070000 
DBG(48598208)> CPU DETAIL: Write 0296: 0060859808070000 
DBG(48598210)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598211)> CPU DETAIL: Read R 1626: 0000000000000008 
DBG(48598212)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598213)> CPU DETAIL: Result: 0000000000000009 
DBG(48598214)> CPU DETAIL: Write 1626: 0000000000000009 
DBG(48598216)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598217)> CPU DETAIL: M8: 0009 
DBG(48598218)> CPU DETAIL: Transfer to T 
DBG(48598220)> CPU CMD: Exec 0296: 00 60 8598 0807 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598221)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48598221)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48598222)> CPU DETAIL: Write 0807: 0000000000000000 
DBG(48598224)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598225)> CPU DETAIL: Read R 0296: 0060859808070000 
DBG(48598226)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598227)> CPU DETAIL: Result: 0060859808080000 
DBG(48598228)> CPU DETAIL: Write 0296: 0060859808080000 
DBG(48598230)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598231)> CPU DETAIL: Read R 1626: 0000000000000009 
DBG(48598232)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598233)> CPU DETAIL: Result: 0000000000000010 
DBG(48598234)> CPU DETAIL: Write 1626: 0000000000000010 
DBG(48598236)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598237)> CPU DETAIL: M8: 0010 
DBG(48598238)> CPU DETAIL: Transfer to T 
DBG(48598240)> CPU CMD: Exec 0296: 00 60 8598 0808 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598241)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48598241)> CPU DETAIL: Read R 0608: 0000000233020000 
DBG(48598242)> CPU DETAIL: Write 0808: 0000000233020000 
DBG(48598244)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598245)> CPU DETAIL: Read R 0296: 0060859808080000 
DBG(48598246)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598247)> CPU DETAIL: Result: 0060859808090000 
DBG(48598248)> CPU DETAIL: Write 0296: 0060859808090000 
DBG(48598250)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598251)> CPU DETAIL: Read R 1626: 0000000000000010 
DBG(48598252)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598253)> CPU DETAIL: Result: 0000000000000011 
DBG(48598254)> CPU DETAIL: Write 1626: 0000000000000011 
DBG(48598256)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598257)> CPU DETAIL: M8: 0011 
DBG(48598258)> CPU DETAIL: Transfer to T 
DBG(48598260)> CPU CMD: Exec 0296: 00 60 8598 0809 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598261)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48598261)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48598262)> CPU DETAIL: Write 0809: 0000000000000000 
DBG(48598264)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598265)> CPU DETAIL: Read R 0296: 0060859808090000 
DBG(48598266)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598267)> CPU DETAIL: Result: 0060859808100000 
DBG(48598268)> CPU DETAIL: Write 0296: 0060859808100000 
DBG(48598270)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598271)> CPU DETAIL: Read R 1626: 0000000000000011 
DBG(48598272)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598273)> CPU DETAIL: Result: 0000000000000012 
DBG(48598274)> CPU DETAIL: Write 1626: 0000000000000012 
DBG(48598276)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598277)> CPU DETAIL: M8: 0012 
DBG(48598278)> CPU DETAIL: Transfer to T 
DBG(48598280)> CPU CMD: Exec 0296: 00 60 8598 0810 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598281)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48598281)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48598282)> CPU DETAIL: Write 0810: 0000000000000000 
DBG(48598284)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598285)> CPU DETAIL: Read R 0296: 0060859808100000 
DBG(48598286)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598287)> CPU DETAIL: Result: 0060859808110000 
DBG(48598288)> CPU DETAIL: Write 0296: 0060859808110000 
DBG(48598290)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598291)> CPU DETAIL: Read R 1626: 0000000000000012 
DBG(48598292)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598293)> CPU DETAIL: Result: 0000000000000013 
DBG(48598294)> CPU DETAIL: Write 1626: 0000000000000013 
DBG(48598296)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598297)> CPU DETAIL: M8: 0013 
DBG(48598298)> CPU DETAIL: Transfer to T 
DBG(48598300)> CPU CMD: Exec 0296: 00 60 8598 0811 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598301)> CPU DETAIL: M8 Address Modifier: 0013 
DBG(48598301)> CPU DETAIL: Read R 0611: 0000000233090000 
DBG(48598302)> CPU DETAIL: Write 0811: 0000000233090000 
DBG(48598304)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598305)> CPU DETAIL: Read R 0296: 0060859808110000 
DBG(48598306)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598307)> CPU DETAIL: Result: 0060859808120000 
DBG(48598308)> CPU DETAIL: Write 0296: 0060859808120000 
DBG(48598310)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598311)> CPU DETAIL: Read R 1626: 0000000000000013 
DBG(48598312)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598313)> CPU DETAIL: Result: 0000000000000014 
DBG(48598314)> CPU DETAIL: Write 1626: 0000000000000014 
DBG(48598316)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598317)> CPU DETAIL: M8: 0014 
DBG(48598318)> CPU DETAIL: Transfer to T 
DBG(48598320)> CPU CMD: Exec 0296: 00 60 8598 0812 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598321)> CPU DETAIL: M8 Address Modifier: 0014 
DBG(48598321)> CPU DETAIL: Read R 0612: 0000000000000000 
DBG(48598322)> CPU DETAIL: Write 0812: 0000000000000000 
DBG(48598324)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598325)> CPU DETAIL: Read R 0296: 0060859808120000 
DBG(48598326)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598327)> CPU DETAIL: Result: 0060859808130000 
DBG(48598328)> CPU DETAIL: Write 0296: 0060859808130000 
DBG(48598330)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598331)> CPU DETAIL: Read R 1626: 0000000000000014 
DBG(48598332)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598333)> CPU DETAIL: Result: 0000000000000015 
DBG(48598334)> CPU DETAIL: Write 1626: 0000000000000015 
DBG(48598336)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598337)> CPU DETAIL: M8: 0015 
DBG(48598338)> CPU DETAIL: Transfer to T 
DBG(48598340)> CPU CMD: Exec 0296: 00 60 8598 0813 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48598341)> CPU DETAIL: M8 Address Modifier: 0015 
DBG(48598341)> CPU DETAIL: Read R 0613: 0000000000000000 
DBG(48598342)> CPU DETAIL: Write 0813: 0000000000000000 
DBG(48598344)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48598345)> CPU DETAIL: Read R 0296: 0060859808130000 
DBG(48598346)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598347)> CPU DETAIL: Result: 0060859808140000 
DBG(48598348)> CPU DETAIL: Write 0296: 0060859808140000 
DBG(48598350)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48598351)> CPU DETAIL: Read R 1626: 0000000000000015 
DBG(48598352)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598353)> CPU DETAIL: Result: 0000000000000016 
DBG(48598354)> CPU DETAIL: Write 1626: 0000000000000016 
DBG(48598356)> CPU CMD: Exec 0299: 08 58 0001 0016 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48598357)> CPU DETAIL: M8: 0016 
DBG(48598360)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48598363)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48598364)> CPU DETAIL: Transfer to T 
DBG(48598366)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48598367)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48598368)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48598371)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48598372)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598372)> CPU DETAIL: Read R 0424: 0000000233020003 
DBG(48598373)> CPU DETAIL: Result: 0001000233020003 
DBG(48598374)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598374)> CPU DETAIL: Write 0424: 0001000233020003 
DBG(48598376)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48598377)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598377)> CPU DETAIL: Read R 0424: 0001000233020003 
DBG(48598378)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48598379)> CPU DETAIL: Result: 0001000000000000 
DBG(48598380)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48598381)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48598383)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48598384)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598384)> CPU DETAIL: Read R 0429: 3335444455660201 
DBG(48598385)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48598386)> CPU DETAIL: Result: 0000000000000001 
DBG(48598389)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48598390)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48598391)> CPU DETAIL: Result: 0000000000000000 
DBG(48598394)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48598395)> CPU DETAIL: REG1: 0000000000000000
DBG(48598395)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48598397)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48598398)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48598399)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48598400)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48598402)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48598403)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598403)> CPU DETAIL: Read R 0429: 3335444455660201 
DBG(48598404)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48598405)> CPU DETAIL: Result: 0000000000000001 
DBG(48598406)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48598409)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48598410)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598410)> CPU DETAIL: Read R 0424: 0001000233020003 
DBG(48598411)> CPU DETAIL: Result: 0000000233020003 
DBG(48598412)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598412)> CPU DETAIL: Write 0424: 0000000233020003 
DBG(48598414)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48598415)> CPU DETAIL: Read R 1625: 0000000000000166 
DBG(48598416)> CPU DETAIL: Read S 1607: 0000000000000016 
DBG(48598417)> CPU DETAIL: Result: 0000000000000182 
DBG(48598420)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48598421)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48598422)> CPU DETAIL: Result: 0000000000000018 
DBG(48598425)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48598426)> CPU DETAIL: REG1: 0000000000000018
DBG(48598426)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48598428)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48598429)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48598430)> CPU DETAIL: Transfer to T 
DBG(48598430)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48598432)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48598433)> CPU DETAIL: M4: 0026 
DBG(48598434)> CPU DETAIL: M6: 0016 
DBG(48598435)> CPU DETAIL: Clear M8
DBG(48598435)> CPU DETAIL: M8: 0000 
DBG(48598438)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48598439)> CPU DETAIL: Read R 1612: 0000000000000013 
DBG(48598440)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598441)> CPU DETAIL: Result: 0000000000000014 
DBG(48598442)> CPU DETAIL: Write 1612: 0000000000000014 
DBG(48598444)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48598445)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48598446)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48598449)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48598450)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48598451)> CPU DETAIL: Result: 0858000100160266 
DBG(48598452)> CPU DETAIL: Write 0270: 0858000100160266 
DBG(48598454)> CPU CMD: Exec 0266: 00 60 4397 1567 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598455)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(48598455)> CPU DETAIL: Read R 0423: 0160000000141013 
DBG(48598456)> CPU DETAIL: Write 1567: 0160000000141013 
DBG(48598458)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598459)> CPU DETAIL: Read R 0266: 0060439715670000 
DBG(48598460)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598461)> CPU DETAIL: Result: 0060439715680000 
DBG(48598462)> CPU DETAIL: Write 0266: 0060439715680000 
DBG(48598464)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598465)> CPU DETAIL: Read R 1625: 0000000000000166 
DBG(48598466)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598467)> CPU DETAIL: Result: 0000000000000167 
DBG(48598468)> CPU DETAIL: Write 1625: 0000000000000167 
DBG(48598470)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598471)> CPU DETAIL: M4: 0027 
DBG(48598472)> CPU DETAIL: M6: 0016 
DBG(48598473)> CPU DETAIL: M8: 0000 
DBG(48598476)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598477)> CPU DETAIL: M8: 0001 
DBG(48598478)> CPU DETAIL: Transfer to T 
DBG(48598480)> CPU CMD: Exec 0266: 00 60 4397 1568 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598481)> CPU DETAIL: M4 Address Modifier: 0027 
DBG(48598481)> CPU DETAIL: Read R 0424: 0000000233020003 
DBG(48598482)> CPU DETAIL: Write 1568: 0000000233020003 
DBG(48598484)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598485)> CPU DETAIL: Read R 0266: 0060439715680000 
DBG(48598486)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598487)> CPU DETAIL: Result: 0060439715690000 
DBG(48598488)> CPU DETAIL: Write 0266: 0060439715690000 
DBG(48598490)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598491)> CPU DETAIL: Read R 1625: 0000000000000167 
DBG(48598492)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598493)> CPU DETAIL: Result: 0000000000000168 
DBG(48598494)> CPU DETAIL: Write 1625: 0000000000000168 
DBG(48598496)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598497)> CPU DETAIL: M4: 0028 
DBG(48598498)> CPU DETAIL: M6: 0016 
DBG(48598499)> CPU DETAIL: M8: 0001 
DBG(48598502)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598503)> CPU DETAIL: M8: 0002 
DBG(48598504)> CPU DETAIL: Transfer to T 
DBG(48598506)> CPU CMD: Exec 0266: 00 60 4397 1569 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598507)> CPU DETAIL: M4 Address Modifier: 0028 
DBG(48598507)> CPU DETAIL: Read R 0425: 0000000000000000 
DBG(48598508)> CPU DETAIL: Write 1569: 0000000000000000 
DBG(48598510)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598511)> CPU DETAIL: Read R 0266: 0060439715690000 
DBG(48598512)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598513)> CPU DETAIL: Result: 0060439715700000 
DBG(48598514)> CPU DETAIL: Write 0266: 0060439715700000 
DBG(48598516)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598517)> CPU DETAIL: Read R 1625: 0000000000000168 
DBG(48598518)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598519)> CPU DETAIL: Result: 0000000000000169 
DBG(48598520)> CPU DETAIL: Write 1625: 0000000000000169 
DBG(48598522)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598523)> CPU DETAIL: M4: 0029 
DBG(48598524)> CPU DETAIL: M6: 0016 
DBG(48598525)> CPU DETAIL: M8: 0002 
DBG(48598528)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598529)> CPU DETAIL: M8: 0003 
DBG(48598530)> CPU DETAIL: Transfer to T 
DBG(48598532)> CPU CMD: Exec 0266: 00 60 4397 1570 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598533)> CPU DETAIL: M4 Address Modifier: 0029 
DBG(48598533)> CPU DETAIL: Read R 0426: 0000000000000000 
DBG(48598534)> CPU DETAIL: Write 1570: 0000000000000000 
DBG(48598536)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598537)> CPU DETAIL: Read R 0266: 0060439715700000 
DBG(48598538)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598539)> CPU DETAIL: Result: 0060439715710000 
DBG(48598540)> CPU DETAIL: Write 0266: 0060439715710000 
DBG(48598542)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598543)> CPU DETAIL: Read R 1625: 0000000000000169 
DBG(48598544)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598545)> CPU DETAIL: Result: 0000000000000170 
DBG(48598546)> CPU DETAIL: Write 1625: 0000000000000170 
DBG(48598548)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598549)> CPU DETAIL: M4: 0030 
DBG(48598550)> CPU DETAIL: M6: 0016 
DBG(48598551)> CPU DETAIL: M8: 0003 
DBG(48598554)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598555)> CPU DETAIL: M8: 0004 
DBG(48598556)> CPU DETAIL: Transfer to T 
DBG(48598558)> CPU CMD: Exec 0266: 00 60 4397 1571 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598559)> CPU DETAIL: M4 Address Modifier: 0030 
DBG(48598559)> CPU DETAIL: Read R 0427: 0000000000000000 
DBG(48598560)> CPU DETAIL: Write 1571: 0000000000000000 
DBG(48598562)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598563)> CPU DETAIL: Read R 0266: 0060439715710000 
DBG(48598564)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598565)> CPU DETAIL: Result: 0060439715720000 
DBG(48598566)> CPU DETAIL: Write 0266: 0060439715720000 
DBG(48598568)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598569)> CPU DETAIL: Read R 1625: 0000000000000170 
DBG(48598570)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598571)> CPU DETAIL: Result: 0000000000000171 
DBG(48598572)> CPU DETAIL: Write 1625: 0000000000000171 
DBG(48598574)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598575)> CPU DETAIL: M4: 0031 
DBG(48598576)> CPU DETAIL: M6: 0016 
DBG(48598577)> CPU DETAIL: M8: 0004 
DBG(48598580)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598581)> CPU DETAIL: M8: 0005 
DBG(48598582)> CPU DETAIL: Transfer to T 
DBG(48598584)> CPU CMD: Exec 0266: 00 60 4397 1572 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598585)> CPU DETAIL: M4 Address Modifier: 0031 
DBG(48598585)> CPU DETAIL: Read R 0428: 0000000000000000 
DBG(48598586)> CPU DETAIL: Write 1572: 0000000000000000 
DBG(48598588)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598589)> CPU DETAIL: Read R 0266: 0060439715720000 
DBG(48598590)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598591)> CPU DETAIL: Result: 0060439715730000 
DBG(48598592)> CPU DETAIL: Write 0266: 0060439715730000 
DBG(48598594)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598595)> CPU DETAIL: Read R 1625: 0000000000000171 
DBG(48598596)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598597)> CPU DETAIL: Result: 0000000000000172 
DBG(48598598)> CPU DETAIL: Write 1625: 0000000000000172 
DBG(48598600)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598601)> CPU DETAIL: M4: 0032 
DBG(48598602)> CPU DETAIL: M6: 0016 
DBG(48598603)> CPU DETAIL: M8: 0005 
DBG(48598606)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598607)> CPU DETAIL: M8: 0006 
DBG(48598608)> CPU DETAIL: Transfer to T 
DBG(48598610)> CPU CMD: Exec 0266: 00 60 4397 1573 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598611)> CPU DETAIL: M4 Address Modifier: 0032 
DBG(48598611)> CPU DETAIL: Read R 0429: 3335444455660201 
DBG(48598612)> CPU DETAIL: Write 1573: 3335444455660201 
DBG(48598614)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598615)> CPU DETAIL: Read R 0266: 0060439715730000 
DBG(48598616)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598617)> CPU DETAIL: Result: 0060439715740000 
DBG(48598618)> CPU DETAIL: Write 0266: 0060439715740000 
DBG(48598620)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598621)> CPU DETAIL: Read R 1625: 0000000000000172 
DBG(48598622)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598623)> CPU DETAIL: Result: 0000000000000173 
DBG(48598624)> CPU DETAIL: Write 1625: 0000000000000173 
DBG(48598626)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598627)> CPU DETAIL: M4: 0033 
DBG(48598628)> CPU DETAIL: M6: 0016 
DBG(48598629)> CPU DETAIL: M8: 0006 
DBG(48598632)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598633)> CPU DETAIL: M8: 0007 
DBG(48598634)> CPU DETAIL: Transfer to T 
DBG(48598636)> CPU CMD: Exec 0266: 00 60 4397 1574 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598637)> CPU DETAIL: M4 Address Modifier: 0033 
DBG(48598637)> CPU DETAIL: Read R 0430: 0000000233000000 
DBG(48598638)> CPU DETAIL: Write 1574: 0000000233000000 
DBG(48598640)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598641)> CPU DETAIL: Read R 0266: 0060439715740000 
DBG(48598642)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598643)> CPU DETAIL: Result: 0060439715750000 
DBG(48598644)> CPU DETAIL: Write 0266: 0060439715750000 
DBG(48598646)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598647)> CPU DETAIL: Read R 1625: 0000000000000173 
DBG(48598648)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598649)> CPU DETAIL: Result: 0000000000000174 
DBG(48598650)> CPU DETAIL: Write 1625: 0000000000000174 
DBG(48598652)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598653)> CPU DETAIL: M4: 0034 
DBG(48598654)> CPU DETAIL: M6: 0016 
DBG(48598655)> CPU DETAIL: M8: 0007 
DBG(48598658)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598659)> CPU DETAIL: M8: 0008 
DBG(48598660)> CPU DETAIL: Transfer to T 
DBG(48598662)> CPU CMD: Exec 0266: 00 60 4397 1575 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598663)> CPU DETAIL: M4 Address Modifier: 0034 
DBG(48598663)> CPU DETAIL: Read R 0431: 0000000000000000 
DBG(48598664)> CPU DETAIL: Write 1575: 0000000000000000 
DBG(48598666)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598667)> CPU DETAIL: Read R 0266: 0060439715750000 
DBG(48598668)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598669)> CPU DETAIL: Result: 0060439715760000 
DBG(48598670)> CPU DETAIL: Write 0266: 0060439715760000 
DBG(48598672)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598673)> CPU DETAIL: Read R 1625: 0000000000000174 
DBG(48598674)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598675)> CPU DETAIL: Result: 0000000000000175 
DBG(48598676)> CPU DETAIL: Write 1625: 0000000000000175 
DBG(48598678)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598679)> CPU DETAIL: M4: 0035 
DBG(48598680)> CPU DETAIL: M6: 0016 
DBG(48598681)> CPU DETAIL: M8: 0008 
DBG(48598684)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598685)> CPU DETAIL: M8: 0009 
DBG(48598686)> CPU DETAIL: Transfer to T 
DBG(48598688)> CPU CMD: Exec 0266: 00 60 4397 1576 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598689)> CPU DETAIL: M4 Address Modifier: 0035 
DBG(48598689)> CPU DETAIL: Read R 0432: 0000000000000000 
DBG(48598690)> CPU DETAIL: Write 1576: 0000000000000000 
DBG(48598692)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598693)> CPU DETAIL: Read R 0266: 0060439715760000 
DBG(48598694)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598695)> CPU DETAIL: Result: 0060439715770000 
DBG(48598696)> CPU DETAIL: Write 0266: 0060439715770000 
DBG(48598698)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598699)> CPU DETAIL: Read R 1625: 0000000000000175 
DBG(48598700)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598701)> CPU DETAIL: Result: 0000000000000176 
DBG(48598702)> CPU DETAIL: Write 1625: 0000000000000176 
DBG(48598704)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598705)> CPU DETAIL: M4: 0036 
DBG(48598706)> CPU DETAIL: M6: 0016 
DBG(48598707)> CPU DETAIL: M8: 0009 
DBG(48598710)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598711)> CPU DETAIL: M8: 0010 
DBG(48598712)> CPU DETAIL: Transfer to T 
DBG(48598714)> CPU CMD: Exec 0266: 00 60 4397 1577 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598715)> CPU DETAIL: M4 Address Modifier: 0036 
DBG(48598715)> CPU DETAIL: Read R 0433: 0000000233010000 
DBG(48598716)> CPU DETAIL: Write 1577: 0000000233010000 
DBG(48598718)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598719)> CPU DETAIL: Read R 0266: 0060439715770000 
DBG(48598720)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598721)> CPU DETAIL: Result: 0060439715780000 
DBG(48598722)> CPU DETAIL: Write 0266: 0060439715780000 
DBG(48598724)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598725)> CPU DETAIL: Read R 1625: 0000000000000176 
DBG(48598726)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598727)> CPU DETAIL: Result: 0000000000000177 
DBG(48598728)> CPU DETAIL: Write 1625: 0000000000000177 
DBG(48598730)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598731)> CPU DETAIL: M4: 0037 
DBG(48598732)> CPU DETAIL: M6: 0016 
DBG(48598733)> CPU DETAIL: M8: 0010 
DBG(48598736)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598737)> CPU DETAIL: M8: 0011 
DBG(48598738)> CPU DETAIL: Transfer to T 
DBG(48598740)> CPU CMD: Exec 0266: 00 60 4397 1578 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598741)> CPU DETAIL: M4 Address Modifier: 0037 
DBG(48598741)> CPU DETAIL: Read R 0434: 0000000000000000 
DBG(48598742)> CPU DETAIL: Write 1578: 0000000000000000 
DBG(48598744)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598745)> CPU DETAIL: Read R 0266: 0060439715780000 
DBG(48598746)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598747)> CPU DETAIL: Result: 0060439715790000 
DBG(48598748)> CPU DETAIL: Write 0266: 0060439715790000 
DBG(48598750)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598751)> CPU DETAIL: Read R 1625: 0000000000000177 
DBG(48598752)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598753)> CPU DETAIL: Result: 0000000000000178 
DBG(48598754)> CPU DETAIL: Write 1625: 0000000000000178 
DBG(48598756)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598757)> CPU DETAIL: M4: 0038 
DBG(48598758)> CPU DETAIL: M6: 0016 
DBG(48598759)> CPU DETAIL: M8: 0011 
DBG(48598762)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598763)> CPU DETAIL: M8: 0012 
DBG(48598764)> CPU DETAIL: Transfer to T 
DBG(48598766)> CPU CMD: Exec 0266: 00 60 4397 1579 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598767)> CPU DETAIL: M4 Address Modifier: 0038 
DBG(48598767)> CPU DETAIL: Read R 0435: 0000000000000000 
DBG(48598768)> CPU DETAIL: Write 1579: 0000000000000000 
DBG(48598770)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598771)> CPU DETAIL: Read R 0266: 0060439715790000 
DBG(48598772)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598773)> CPU DETAIL: Result: 0060439715800000 
DBG(48598774)> CPU DETAIL: Write 0266: 0060439715800000 
DBG(48598776)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598777)> CPU DETAIL: Read R 1625: 0000000000000178 
DBG(48598778)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598779)> CPU DETAIL: Result: 0000000000000179 
DBG(48598780)> CPU DETAIL: Write 1625: 0000000000000179 
DBG(48598782)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598783)> CPU DETAIL: M4: 0039 
DBG(48598784)> CPU DETAIL: M6: 0016 
DBG(48598785)> CPU DETAIL: M8: 0012 
DBG(48598788)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598789)> CPU DETAIL: M8: 0013 
DBG(48598790)> CPU DETAIL: Transfer to T 
DBG(48598792)> CPU CMD: Exec 0266: 00 60 4397 1580 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598793)> CPU DETAIL: M4 Address Modifier: 0039 
DBG(48598793)> CPU DETAIL: Read R 0436: 0000000233030000 
DBG(48598794)> CPU DETAIL: Write 1580: 0000000233030000 
DBG(48598796)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598797)> CPU DETAIL: Read R 0266: 0060439715800000 
DBG(48598798)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598799)> CPU DETAIL: Result: 0060439715810000 
DBG(48598800)> CPU DETAIL: Write 0266: 0060439715810000 
DBG(48598802)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598803)> CPU DETAIL: Read R 1625: 0000000000000179 
DBG(48598804)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598805)> CPU DETAIL: Result: 0000000000000180 
DBG(48598806)> CPU DETAIL: Write 1625: 0000000000000180 
DBG(48598808)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598809)> CPU DETAIL: M4: 0040 
DBG(48598810)> CPU DETAIL: M6: 0016 
DBG(48598811)> CPU DETAIL: M8: 0013 
DBG(48598814)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598815)> CPU DETAIL: M8: 0014 
DBG(48598816)> CPU DETAIL: Transfer to T 
DBG(48598818)> CPU CMD: Exec 0266: 00 60 4397 1581 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598819)> CPU DETAIL: M4 Address Modifier: 0040 
DBG(48598819)> CPU DETAIL: Read R 0437: 0000000000000000 
DBG(48598820)> CPU DETAIL: Write 1581: 0000000000000000 
DBG(48598822)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598823)> CPU DETAIL: Read R 0266: 0060439715810000 
DBG(48598824)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598825)> CPU DETAIL: Result: 0060439715820000 
DBG(48598826)> CPU DETAIL: Write 0266: 0060439715820000 
DBG(48598828)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598829)> CPU DETAIL: Read R 1625: 0000000000000180 
DBG(48598830)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598831)> CPU DETAIL: Result: 0000000000000181 
DBG(48598832)> CPU DETAIL: Write 1625: 0000000000000181 
DBG(48598834)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598835)> CPU DETAIL: M4: 0041 
DBG(48598836)> CPU DETAIL: M6: 0016 
DBG(48598837)> CPU DETAIL: M8: 0014 
DBG(48598840)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598841)> CPU DETAIL: M8: 0015 
DBG(48598842)> CPU DETAIL: Transfer to T 
DBG(48598844)> CPU CMD: Exec 0266: 00 60 4397 1582 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48598845)> CPU DETAIL: M4 Address Modifier: 0041 
DBG(48598845)> CPU DETAIL: Read R 0438: 0000000000000000 
DBG(48598846)> CPU DETAIL: Write 1582: 0000000000000000 
DBG(48598848)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48598849)> CPU DETAIL: Read R 0266: 0060439715820000 
DBG(48598850)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48598851)> CPU DETAIL: Result: 0060439715830000 
DBG(48598852)> CPU DETAIL: Write 0266: 0060439715830000 
DBG(48598854)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48598855)> CPU DETAIL: Read R 1625: 0000000000000181 
DBG(48598856)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598857)> CPU DETAIL: Result: 0000000000000182 
DBG(48598858)> CPU DETAIL: Write 1625: 0000000000000182 
DBG(48598860)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48598861)> CPU DETAIL: M4: 0042 
DBG(48598862)> CPU DETAIL: M6: 0016 
DBG(48598863)> CPU DETAIL: M8: 0015 
DBG(48598866)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48598867)> CPU DETAIL: M8: 0016 
DBG(48598870)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48598873)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48598874)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48598875)> CPU DETAIL: Transfer to T 
DBG(48598875)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48598877)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48598878)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48598879)> CPU DETAIL: Read S 1606: 0000000000000042 
DBG(48598880)> CPU DETAIL: Result: 0000000000000010 
DBG(48598883)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48598884)> CPU DETAIL: REG1: 0000000000000010
DBG(48598884)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48598886)> CPU CMD: Exec 0124: 00 60 0445 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48598887)> CPU DETAIL: Read R 0445: 0000000000000100 
DBG(48598888)> CPU DETAIL: Write 1608: 0000000000000100 
DBG(48598890)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48598891)> CPU DETAIL: M4 Address Modifier: 0042 
DBG(48598891)> CPU DETAIL: Read R 0439: 0100000000151113 
DBG(48598892)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(48598893)> CPU DETAIL: Write 1607: 0000000000000010 
DBG(48598895)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48598896)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48598897)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48598898)> CPU DETAIL: Result: 0000000000000100 
DBG(48598899)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(48598900)> CPU DETAIL: Write 1609: 0000000000000001 
DBG(48598902)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48598903)> CPU DETAIL: Read R 1608: 0000000000000100 
DBG(48598904)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48598905)> CPU DETAIL: Result: 0000000000000000 
DBG(48598906)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48598908)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48598909)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48598910)> CPU DETAIL: Read S 1609: 0000000000000001 
DBG(48598911)> CPU DETAIL: Diff: REG1: 9999999999999999
DBG(48598912)> CPU DETAIL: Transfer to T 
DBG(48598914)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48598915)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48598916)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48598917)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48598920)> CPU CMD: Exec 0132: 00 60 1693 0140 0133   ???   
DBG(48598921)> CPU DETAIL: Read R 1693: 0060169902720256 
DBG(48598922)> CPU DETAIL: Transfer to T 
DBG(48598922)> CPU DETAIL: Write 0140: 0060169902720256 
DBG(48598924)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48598925)> CPU DETAIL: Read R 1609: 0000000000000001 
DBG(48598926)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48598927)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48598927)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48598928)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48598929)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48598930)> CPU DETAIL: Write 1609: 9600000000000003 
DBG(48598932)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48598933)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48598934)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48598935)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48598935)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48598936)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48598937)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48598938)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48598940)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48598941)> CPU DETAIL: Read R 1609: 9600000000000003 
DBG(48598942)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48598943)> CPU DETAIL: Result: 0000000000000003 
DBG(48598944)> CPU DETAIL: Write 1609: 0000000000000003 
DBG(48598946)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48598947)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48598948)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48598949)> CPU DETAIL: Result: 0000000000000000 
DBG(48598950)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48598952)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48598953)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48598954)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001000000000 
DBG(48598957)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48598958)> CPU DETAIL: Read R 0124: 0060044516080000 
DBG(48598959)> CPU DETAIL: Result: 0060045516080000 
DBG(48598960)> CPU DETAIL: Write 0124: 0060045516080000 
DBG(48598962)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48598963)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48598964)> CPU DETAIL: Read S 1606: 0000000000000042 
DBG(48598965)> CPU DETAIL: Result: 0000000000000052 
DBG(48598966)> CPU DETAIL: Write 1606: 0000000000000052 
DBG(48598968)> CPU CMD: Exec 0140: 00 60 1699 0272 0256   nop   
DBG(48598969)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48598970)> CPU DETAIL: Transfer to T 
DBG(48598970)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48598972)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48598973)> CPU DETAIL: Read R 1625: 0000000000000182 
DBG(48598974)> CPU DETAIL: Read S 1607: 0000000000000010 
DBG(48598975)> CPU DETAIL: Result: 0000000000000192 
DBG(48598978)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48598979)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48598980)> CPU DETAIL: Result: 0000000000000008 
DBG(48598983)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48598984)> CPU DETAIL: REG1: 0000000000000008
DBG(48598984)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48598986)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48598987)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48598988)> CPU DETAIL: Transfer to T 
DBG(48598988)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48598990)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48598991)> CPU DETAIL: M4: 0042 
DBG(48598992)> CPU DETAIL: M6: 0016 
DBG(48598993)> CPU DETAIL: Clear M8
DBG(48598993)> CPU DETAIL: M8: 0000 
DBG(48598996)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48598997)> CPU DETAIL: Read R 1612: 0000000000000014 
DBG(48598998)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48598999)> CPU DETAIL: Result: 0000000000000015 
DBG(48599000)> CPU DETAIL: Write 1612: 0000000000000015 
DBG(48599002)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48599003)> CPU DETAIL: Read R 1607: 0000000000000010 
DBG(48599004)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(48599007)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48599008)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48599009)> CPU DETAIL: Result: 0858000100100266 
DBG(48599010)> CPU DETAIL: Write 0270: 0858000100100266 
DBG(48599012)> CPU CMD: Exec 0266: 00 60 4397 1583 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599013)> CPU DETAIL: M4 Address Modifier: 0042 
DBG(48599013)> CPU DETAIL: Read R 0439: 0100000000151113 
DBG(48599014)> CPU DETAIL: Write 1583: 0100000000151113 
DBG(48599016)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599017)> CPU DETAIL: Read R 0266: 0060439715830000 
DBG(48599018)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599019)> CPU DETAIL: Result: 0060439715840000 
DBG(48599020)> CPU DETAIL: Write 0266: 0060439715840000 
DBG(48599022)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599023)> CPU DETAIL: Read R 1625: 0000000000000182 
DBG(48599024)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599025)> CPU DETAIL: Result: 0000000000000183 
DBG(48599026)> CPU DETAIL: Write 1625: 0000000000000183 
DBG(48599028)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599029)> CPU DETAIL: M4: 0043 
DBG(48599030)> CPU DETAIL: M6: 0016 
DBG(48599031)> CPU DETAIL: M8: 0000 
DBG(48599034)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599035)> CPU DETAIL: M8: 0001 
DBG(48599036)> CPU DETAIL: Transfer to T 
DBG(48599038)> CPU CMD: Exec 0266: 00 60 4397 1584 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599039)> CPU DETAIL: M4 Address Modifier: 0043 
DBG(48599039)> CPU DETAIL: Read R 0440: 0000000249999990 
DBG(48599040)> CPU DETAIL: Write 1584: 0000000249999990 
DBG(48599042)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599043)> CPU DETAIL: Read R 0266: 0060439715840000 
DBG(48599044)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599045)> CPU DETAIL: Result: 0060439715850000 
DBG(48599046)> CPU DETAIL: Write 0266: 0060439715850000 
DBG(48599048)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599049)> CPU DETAIL: Read R 1625: 0000000000000183 
DBG(48599050)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599051)> CPU DETAIL: Result: 0000000000000184 
DBG(48599052)> CPU DETAIL: Write 1625: 0000000000000184 
DBG(48599054)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599055)> CPU DETAIL: M4: 0044 
DBG(48599056)> CPU DETAIL: M6: 0016 
DBG(48599057)> CPU DETAIL: M8: 0001 
DBG(48599060)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599061)> CPU DETAIL: M8: 0002 
DBG(48599062)> CPU DETAIL: Transfer to T 
DBG(48599064)> CPU CMD: Exec 0266: 00 60 4397 1585 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599065)> CPU DETAIL: M4 Address Modifier: 0044 
DBG(48599065)> CPU DETAIL: Read R 0441: 0000000000000000 
DBG(48599066)> CPU DETAIL: Write 1585: 0000000000000000 
DBG(48599068)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599069)> CPU DETAIL: Read R 0266: 0060439715850000 
DBG(48599070)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599071)> CPU DETAIL: Result: 0060439715860000 
DBG(48599072)> CPU DETAIL: Write 0266: 0060439715860000 
DBG(48599074)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599075)> CPU DETAIL: Read R 1625: 0000000000000184 
DBG(48599076)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599077)> CPU DETAIL: Result: 0000000000000185 
DBG(48599078)> CPU DETAIL: Write 1625: 0000000000000185 
DBG(48599080)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599081)> CPU DETAIL: M4: 0045 
DBG(48599082)> CPU DETAIL: M6: 0016 
DBG(48599083)> CPU DETAIL: M8: 0002 
DBG(48599086)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599087)> CPU DETAIL: M8: 0003 
DBG(48599088)> CPU DETAIL: Transfer to T 
DBG(48599090)> CPU CMD: Exec 0266: 00 60 4397 1586 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599091)> CPU DETAIL: M4 Address Modifier: 0045 
DBG(48599091)> CPU DETAIL: Read R 0442: 0000000000000000 
DBG(48599092)> CPU DETAIL: Write 1586: 0000000000000000 
DBG(48599094)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599095)> CPU DETAIL: Read R 0266: 0060439715860000 
DBG(48599096)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599097)> CPU DETAIL: Result: 0060439715870000 
DBG(48599098)> CPU DETAIL: Write 0266: 0060439715870000 
DBG(48599100)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599101)> CPU DETAIL: Read R 1625: 0000000000000185 
DBG(48599102)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599103)> CPU DETAIL: Result: 0000000000000186 
DBG(48599104)> CPU DETAIL: Write 1625: 0000000000000186 
DBG(48599106)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599107)> CPU DETAIL: M4: 0046 
DBG(48599108)> CPU DETAIL: M6: 0016 
DBG(48599109)> CPU DETAIL: M8: 0003 
DBG(48599112)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599113)> CPU DETAIL: M8: 0004 
DBG(48599114)> CPU DETAIL: Transfer to T 
DBG(48599116)> CPU CMD: Exec 0266: 00 60 4397 1587 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599117)> CPU DETAIL: M4 Address Modifier: 0046 
DBG(48599117)> CPU DETAIL: Read R 0443: 0000000000000000 
DBG(48599118)> CPU DETAIL: Write 1587: 0000000000000000 
DBG(48599120)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599121)> CPU DETAIL: Read R 0266: 0060439715870000 
DBG(48599122)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599123)> CPU DETAIL: Result: 0060439715880000 
DBG(48599124)> CPU DETAIL: Write 0266: 0060439715880000 
DBG(48599126)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599127)> CPU DETAIL: Read R 1625: 0000000000000186 
DBG(48599128)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599129)> CPU DETAIL: Result: 0000000000000187 
DBG(48599130)> CPU DETAIL: Write 1625: 0000000000000187 
DBG(48599132)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599133)> CPU DETAIL: M4: 0047 
DBG(48599134)> CPU DETAIL: M6: 0016 
DBG(48599135)> CPU DETAIL: M8: 0004 
DBG(48599138)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599139)> CPU DETAIL: M8: 0005 
DBG(48599140)> CPU DETAIL: Transfer to T 
DBG(48599142)> CPU CMD: Exec 0266: 00 60 4397 1588 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599143)> CPU DETAIL: M4 Address Modifier: 0047 
DBG(48599143)> CPU DETAIL: Read R 0444: 0000000000000000 
DBG(48599144)> CPU DETAIL: Write 1588: 0000000000000000 
DBG(48599146)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599147)> CPU DETAIL: Read R 0266: 0060439715880000 
DBG(48599148)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599149)> CPU DETAIL: Result: 0060439715890000 
DBG(48599150)> CPU DETAIL: Write 0266: 0060439715890000 
DBG(48599152)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599153)> CPU DETAIL: Read R 1625: 0000000000000187 
DBG(48599154)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599155)> CPU DETAIL: Result: 0000000000000188 
DBG(48599156)> CPU DETAIL: Write 1625: 0000000000000188 
DBG(48599158)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599159)> CPU DETAIL: M4: 0048 
DBG(48599160)> CPU DETAIL: M6: 0016 
DBG(48599161)> CPU DETAIL: M8: 0005 
DBG(48599164)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599165)> CPU DETAIL: M8: 0006 
DBG(48599166)> CPU DETAIL: Transfer to T 
DBG(48599168)> CPU CMD: Exec 0266: 00 60 4397 1589 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599169)> CPU DETAIL: M4 Address Modifier: 0048 
DBG(48599169)> CPU DETAIL: Read R 0445: 0000000000000100 
DBG(48599170)> CPU DETAIL: Write 1589: 0000000000000100 
DBG(48599172)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599173)> CPU DETAIL: Read R 0266: 0060439715890000 
DBG(48599174)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599175)> CPU DETAIL: Result: 0060439715900000 
DBG(48599176)> CPU DETAIL: Write 0266: 0060439715900000 
DBG(48599178)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599179)> CPU DETAIL: Read R 1625: 0000000000000188 
DBG(48599180)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599181)> CPU DETAIL: Result: 0000000000000189 
DBG(48599182)> CPU DETAIL: Write 1625: 0000000000000189 
DBG(48599184)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599185)> CPU DETAIL: M4: 0049 
DBG(48599186)> CPU DETAIL: M6: 0016 
DBG(48599187)> CPU DETAIL: M8: 0006 
DBG(48599190)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599191)> CPU DETAIL: M8: 0007 
DBG(48599192)> CPU DETAIL: Transfer to T 
DBG(48599194)> CPU CMD: Exec 0266: 00 60 4397 1590 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599195)> CPU DETAIL: M4 Address Modifier: 0049 
DBG(48599195)> CPU DETAIL: Read R 0446: 0000000242009990 
DBG(48599196)> CPU DETAIL: Write 1590: 0000000242009990 
DBG(48599198)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599199)> CPU DETAIL: Read R 0266: 0060439715900000 
DBG(48599200)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599201)> CPU DETAIL: Result: 0060439715910000 
DBG(48599202)> CPU DETAIL: Write 0266: 0060439715910000 
DBG(48599204)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599205)> CPU DETAIL: Read R 1625: 0000000000000189 
DBG(48599206)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599207)> CPU DETAIL: Result: 0000000000000190 
DBG(48599208)> CPU DETAIL: Write 1625: 0000000000000190 
DBG(48599210)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599211)> CPU DETAIL: M4: 0050 
DBG(48599212)> CPU DETAIL: M6: 0016 
DBG(48599213)> CPU DETAIL: M8: 0007 
DBG(48599216)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599217)> CPU DETAIL: M8: 0008 
DBG(48599218)> CPU DETAIL: Transfer to T 
DBG(48599220)> CPU CMD: Exec 0266: 00 60 4397 1591 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599221)> CPU DETAIL: M4 Address Modifier: 0050 
DBG(48599221)> CPU DETAIL: Read R 0447: 0000000000033555 
DBG(48599222)> CPU DETAIL: Write 1591: 0000000000033555 
DBG(48599224)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599225)> CPU DETAIL: Read R 0266: 0060439715910000 
DBG(48599226)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599227)> CPU DETAIL: Result: 0060439715920000 
DBG(48599228)> CPU DETAIL: Write 0266: 0060439715920000 
DBG(48599230)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599231)> CPU DETAIL: Read R 1625: 0000000000000190 
DBG(48599232)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599233)> CPU DETAIL: Result: 0000000000000191 
DBG(48599234)> CPU DETAIL: Write 1625: 0000000000000191 
DBG(48599236)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599237)> CPU DETAIL: M4: 0051 
DBG(48599238)> CPU DETAIL: M6: 0016 
DBG(48599239)> CPU DETAIL: M8: 0008 
DBG(48599242)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599243)> CPU DETAIL: M8: 0009 
DBG(48599244)> CPU DETAIL: Transfer to T 
DBG(48599246)> CPU CMD: Exec 0266: 00 60 4397 1592 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48599247)> CPU DETAIL: M4 Address Modifier: 0051 
DBG(48599247)> CPU DETAIL: Read R 0448: 0000000000033666 
DBG(48599248)> CPU DETAIL: Write 1592: 0000000000033666 
DBG(48599250)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48599251)> CPU DETAIL: Read R 0266: 0060439715920000 
DBG(48599252)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599253)> CPU DETAIL: Result: 0060439715930000 
DBG(48599254)> CPU DETAIL: Write 0266: 0060439715930000 
DBG(48599256)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48599257)> CPU DETAIL: Read R 1625: 0000000000000191 
DBG(48599258)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599259)> CPU DETAIL: Result: 0000000000000192 
DBG(48599260)> CPU DETAIL: Write 1625: 0000000000000192 
DBG(48599262)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48599263)> CPU DETAIL: M4: 0052 
DBG(48599264)> CPU DETAIL: M6: 0016 
DBG(48599265)> CPU DETAIL: M8: 0009 
DBG(48599268)> CPU CMD: Exec 0270: 08 58 0001 0010 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48599269)> CPU DETAIL: M8: 0010 
DBG(48599272)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48599275)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48599276)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48599277)> CPU DETAIL: Transfer to T 
DBG(48599277)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48599279)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48599280)> CPU DETAIL: Read R 1605: 0000000000000052 
DBG(48599281)> CPU DETAIL: Read S 1606: 0000000000000052 
DBG(48599282)> CPU DETAIL: Result: 0000000000000000 
DBG(48599285)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48599286)> CPU DETAIL: REG1: 0000000000000000
DBG(48599286)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48599288)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48599289)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599290)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48599292)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48599293)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48599294)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48599296)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48599297)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48599298)> CPU DETAIL: Transfer to T 
DBG(48599298)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48599300)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48599301)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48599301)> MT DATA: Tape unit 2: init read
DBG(48599301)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 2
DBG(48599301)> MT DETAIL: Tape record contents: D*0291000000000000CD
DBG(48599301)> MT EXP: End Of File mark sensed: 0291000000000000 
DBG(48599301)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (4.95 inches)
DBG(48599304)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48599305)> CPU DETAIL: Condition not present 
DBG(48599307)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48599308)> CPU DETAIL: Reset condition present 
DBG(48599308)> CPU DETAIL: Transfer to T 
DBG(48599310)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48599311)> CPU DETAIL: Read R 1626: 0000000000000016 
DBG(48599312)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48599313)> CPU DETAIL: Diff: REG1: 0000000000000016
DBG(48599316)> CPU CMD: Exec 0312: 00 60 1686 0310 0302   set 0310 to goto 0313, then goto 0302 to write 0798 event output block to ta 
DBG(48599317)> CPU DETAIL: Read R 1686: 0060000000000313 
DBG(48599318)> CPU DETAIL: Transfer to T 
DBG(48599318)> CPU DETAIL: Write 0310: 0060000000000313 
DBG(48599320)> CPU CMD: Exec 0302: 96 60 1626 0000 0000   set instr ...     
DBG(48599321)> CPU DETAIL: Read R 1626: 0000000000000016 
DBG(48599322)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48599325)> CPU CMD: Exec 0303: 00 41 0000 1648 0000   ... to write on tape 04 0798 0798+(1626 num of words in event output block)- 
DBG(48599326)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599327)> CPU DETAIL: Result: 0000000000150000 
DBG(48599330)> CPU CMD: Exec 0304: 00 40 1652 0000 0305   ... and block 1001   
DBG(48599331)> CPU DETAIL: Read R 1652: 0491079807981003 
DBG(48599332)> CPU DETAIL: Result: 0491079808131003 
DBG(48599333)> CPU DETAIL: Write 0305: 0491079808131003 
DBG(48599335)> CPU CMD: Exec 0305: 04 91 0798 0813 1003   write on tape 04 0798 0798+(1626 num of words in event output block)-1    
DBG(48599336)> CPU DETAIL: Tape operation on MT4, Addr 0798->0813, Block Number 1003
DBG(48599336)> MT CMD: Tape unit 4: init write
DBG(48599336)> MT EXP: Write from 0798 to 0813 as Block number 1003
DBG(48599336)> MT EXP: Start Of Block: 04 91 0798 0813 1003
DBG(48599336)> MT EXP: CRT 0798 to Tape: 0160000000141014 
DBG(48599336)> MT EXP: CRT 0799 to Tape: 0000000233030000 
DBG(48599336)> MT EXP: CRT 0800 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0801 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0802 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0803 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0804 to Tape: 3336000000000201 
DBG(48599336)> MT EXP: CRT 0805 to Tape: 0000000233010000 
DBG(48599336)> MT EXP: CRT 0806 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0807 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0808 to Tape: 0000000233020000 
DBG(48599336)> MT EXP: CRT 0809 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0810 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0811 to Tape: 0000000233090000 
DBG(48599336)> MT EXP: CRT 0812 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: CRT 0813 to Tape: 0000000000000000 
DBG(48599336)> MT EXP: End Of Block: 04 91 0798 0813 1003 (16 words)
DBG(48599336)> MT DETAIL: Write block (326 chars, used 2.14 inches, needs 12 msec) to tape 4
DBG(48599336)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (2.14 inches)
DBG(48599339)> CPU CMD: Exec 0306: 08 60 0306 0000 1730   call 1730 check write   
DBG(48599340)> CPU DETAIL: Read R 0306: 0860030600001730 
DBG(48599341)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600306 
DBG(48599342)> CPU DETAIL: Transfer to T 
DBG(48599344)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48599345)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48599346)> CPU DETAIL: Result: 0060000000000307 
DBG(48599347)> CPU DETAIL: Write 1742: 0060000000000307 
DBG(48599349)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48599350)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000307000000000 
DBG(48599353)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48599354)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48599355)> CPU DETAIL: Result: 0600305174700000 
DBG(48599356)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060030517470000 
DBG(48599357)> CPU DETAIL: Write 1734: 0060030517470000 
DBG(48599359)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48599360)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48599361)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48599363)> CPU CMD: Exec 1734: 00 60 0305 1747 0000      
DBG(48599364)> CPU DETAIL: Read R 0305: 0491079808131003 
DBG(48599365)> CPU DETAIL: Write 1747: 0491079808131003 
DBG(48599367)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48599368)> CPU DETAIL: Condition not present 
DBG(48599370)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48599371)> CPU DETAIL: Transfer to T 
DBG(48599373)> CPU CMD: Exec 1742: 00 60 0000 0000 0307   EXIT_CheckWrite   
DBG(48599374)> CPU DETAIL: Transfer to T 
DBG(48599376)> CPU CMD: Exec 0307: 00 40 1652 1639 1652   incr block number on write tape instr   
DBG(48599377)> CPU DETAIL: Read R 1652: 0491079807981003 
DBG(48599378)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48599379)> CPU DETAIL: Result: 0491079807981004 
DBG(48599380)> CPU DETAIL: Write 1652: 0491079807981004 
DBG(48599382)> CPU CMD: Exec 0308: 00 60 1640 1626 0000   clear (1626 num of words in event output block)   
DBG(48599383)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599384)> CPU DETAIL: Write 1626: 0000000000000000 
DBG(48599386)> CPU CMD: Exec 0309: 00 60 1680 0296 0000   restore instr 0296   
DBG(48599387)> CPU DETAIL: Read R 1680: 0060859807980000 
DBG(48599388)> CPU DETAIL: Write 0296: 0060859807980000 
DBG(48599390)> CPU CMD: Exec 0310: 00 60 0000 0000 0313      
DBG(48599391)> CPU DETAIL: Transfer to T 
DBG(48599393)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48599394)> CPU DETAIL: Read R 1630: 0000000000000000 
DBG(48599395)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48599396)> CPU DETAIL: Result: 0100000000000000 
DBG(48599397)> CPU DETAIL: Write 1630: 0100000000000000 
DBG(48599399)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48599400)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48599401)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48599402)> CPU DETAIL: Transfer to T 
DBG(48599404)> CPU CMD: Exec 0316: 00 42 0095 1653 0000   get tape number 0N 0..0 from 0095 tape read instr   
DBG(48599405)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48599406)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48599407)> CPU DETAIL: Result: 0200000000000000 
DBG(48599410)> CPU CMD: Exec 0317: 00 72 1681 0000 0325   if tape number <> 02 0..0 goto 0325   
DBG(48599411)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48599412)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48599415)> CPU CMD: Exec 0318: 00 40 0095 1681 0095   set tape read instr to tape 04   
DBG(48599416)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48599417)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48599418)> CPU DETAIL: Result: 0494039700000000 
DBG(48599419)> CPU DETAIL: Write 0095: 0494039700000000 
DBG(48599421)> CPU CMD: Exec 0319: 00 41 1652 1681 1652   set tape write instr to tape 02   
DBG(48599422)> CPU DETAIL: Read R 1652: 0491079807981004 
DBG(48599423)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48599424)> CPU DETAIL: Result: 0291079807981004 
DBG(48599425)> CPU DETAIL: Write 1652: 0291079807981004 
DBG(48599427)> CPU CMD: Exec 0320: 00 40 1685 1683 0332   set instr 0332 to write end of file to tape 04   
DBG(48599428)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48599429)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48599430)> CPU DETAIL: Result: 0491000000000000 
DBG(48599431)> CPU DETAIL: Write 0332: 0491000000000000 
DBG(48599433)> CPU CMD: Exec 0321: 00 40 1681 1684 0333   set instr 0333 to rewind tape 02   
DBG(48599434)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48599435)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48599436)> CPU DETAIL: Result: 0298000000000000 
DBG(48599437)> CPU DETAIL: Write 0333: 0298000000000000 
DBG(48599439)> CPU CMD: Exec 0322: 00 40 1685 1684 0334   set instr 0334 to rewind tape 04   
DBG(48599440)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48599441)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48599442)> CPU DETAIL: Result: 0498000000000000 
DBG(48599443)> CPU DETAIL: Write 0334: 0498000000000000 
DBG(48599445)> CPU CMD: Exec 0323: 00 40 1681 1683 0335   set instr 0335 to write end of file to tape 02   
DBG(48599446)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48599447)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48599448)> CPU DETAIL: Result: 0291000000000000 
DBG(48599449)> CPU DETAIL: Write 0335: 0291000000000000 
DBG(48599451)> CPU CMD: Exec 0324: 00 60 0333 0336 0332   set instr 0336 to rewind tape 02, goto 0332    
DBG(48599452)> CPU DETAIL: Read R 0333: 0298000000000000 
DBG(48599453)> CPU DETAIL: Transfer to T 
DBG(48599453)> CPU DETAIL: Write 0336: 0298000000000000 
DBG(48599455)> CPU CMD: Exec 0332: 04 91 0000 0000 0000   write eof on conjugate input tape   
DBG(48599456)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48599456)> MT CMD: Tape unit 4: init write
DBG(48599456)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(48599456)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(48599456)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.02% of medium (3.68 inches)
DBG(48599459)> CPU CMD: Exec 0333: 02 98 0000 0000 0000   rewind input tape   
DBG(48599460)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48599460)> MT CMD: Tape unit 2: init rewind (current medium used 4.95 inches)
DBG(48599460)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48599460)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48599462)> CPU CMD: Exec 0334: 04 98 0000 0000 0000   rewind conjugate input tape   
DBG(48599463)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48599463)> MT CMD: Tape unit 4: init rewind (current medium used 3.68 inches)
DBG(48599463)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48599463)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48599465)> CPU CMD: Exec 0335: 02 91 0000 0000 0000   write eof on input tape   
DBG(48599466)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48599466)> MT CMD: Tape unit 2: init write
DBG(48599466)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48599466)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48599466)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48599469)> CPU CMD: Exec 0336: 02 98 0000 0000 0000   rewind input tape   
DBG(48599470)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48599470)> MT CMD: Tape unit 2: init rewind (current medium used 1.54 inches)
DBG(48599470)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48599470)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48599472)> CPU CMD: Exec 0337: 00 60 0000 0000 0121   goto 0121   
DBG(48599473)> CPU DETAIL: Transfer to T 
DBG(48599475)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48599476)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599477)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48599479)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48599480)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48599481)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48599483)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48599484)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48599485)> CPU DETAIL: Transfer to T 
DBG(48599485)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48599487)> CPU CMD: Exec 0095: 04 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48599488)> CPU DETAIL: Tape operation on MT4, Addr 0397->0000, Block Number 0000
DBG(48599488)> MT DATA: Tape unit 4: init read
DBG(48599488)> MT DETAIL: Read tape record (326 chars, used 2.14 inches, needs 12 msec) from tape 4
DBG(48599488)> MT DETAIL: Tape record contents: D*0491079808131003C*0160000000141014C*0000000233030000C*00000000000000...
DBG(48599488)> MT EXP: Start Of Block Word: 0491079808131003
DBG(48599488)> MT EXP: Read Tape Block number 1003
DBG(48599488)> MT EXP: Read forward addr 0397 to 0000
DBG(48599488)> MT EXP: Tape to CRT 0397: 0160000000141014 
DBG(48599488)> MT EXP: Tape to CRT 0398: 0000000233030000 
DBG(48599488)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0403: 3336000000000201 
DBG(48599488)> MT EXP: Tape to CRT 0404: 0000000233010000 
DBG(48599488)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0407: 0000000233020000 
DBG(48599488)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0410: 0000000233090000 
DBG(48599488)> MT EXP: Tape to CRT 0411: 0000000000000000 
DBG(48599488)> MT EXP: Tape to CRT 0412: 0000000000000000 
DBG(48599488)> MT EXP: End Of Block Word: 0491079808131003, data words in block: 16
DBG(48599488)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (2.14 inches)
DBG(48599491)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48599492)> CPU DETAIL: Condition not present 
DBG(48599494)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48599495)> CPU DETAIL: Condition not present 
DBG(48599497)> CPU CMD: Exec 0098: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48599498)> CPU DETAIL: Write 1603: 0491079808131003 
DBG(48599500)> CPU CMD: Exec 0099: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        02 90 aaaa bbbb nnnn ma 
DBG(48599501)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48599502)> CPU DETAIL: Result: 0000000008130000 
DBG(48599503)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000813 
DBG(48599504)> CPU DETAIL: Write 1604: 0000000000000813 
DBG(48599506)> CPU CMD: Exec 0100: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(48599507)> CPU DETAIL: Read R 1603: 0491079808131003 
DBG(48599508)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48599509)> CPU DETAIL: Result: 0000079800000000 
DBG(48599510)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000798 
DBG(48599513)> CPU CMD: Exec 0101: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48599514)> CPU DETAIL: Read R 1604: 0000000000000813 
DBG(48599515)> CPU DETAIL: Result: 0000000000000015 
DBG(48599516)> CPU DETAIL: Write 1605: 0000000000000015 
DBG(48599518)> CPU CMD: Exec 0102: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48599519)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48599520)> CPU DETAIL: Result: 0000000000000016 
DBG(48599521)> CPU DETAIL: Write 1605: 0000000000000016 
DBG(48599523)> CPU CMD: Exec 0103: 00 51 0000 0000 0000   Clear M4   
DBG(48599524)> CPU DETAIL: Clear M4
DBG(48599524)> CPU DETAIL: M4: 0000 
DBG(48599525)> CPU DETAIL: M6: 0016 
DBG(48599526)> CPU DETAIL: M8: 0010 
DBG(48599529)> CPU CMD: Exec 0104: 00 60 1640 1630 0118   nop / clear 1630, goto 0118   
DBG(48599530)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599531)> CPU DETAIL: Transfer to T 
DBG(48599531)> CPU DETAIL: Write 1630: 0000000000000000 
DBG(48599533)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48599534)> CPU DETAIL: Read R 1605: 0000000000000016 
DBG(48599535)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48599536)> CPU DETAIL: Result: 0000000000000016 
DBG(48599539)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48599540)> CPU DETAIL: REG1: 0000000000000016
DBG(48599540)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48599542)> CPU CMD: Exec 0124: 00 60 0403 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48599543)> CPU DETAIL: Read R 0403: 3336000000000201 
DBG(48599544)> CPU DETAIL: Write 1608: 3336000000000201 
DBG(48599546)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48599547)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48599547)> CPU DETAIL: Read R 0397: 0160000000141014 
DBG(48599548)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000016 
DBG(48599549)> CPU DETAIL: Write 1607: 0000000000000016 
DBG(48599551)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48599552)> CPU DETAIL: Read R 1608: 3336000000000201 
DBG(48599553)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48599554)> CPU DETAIL: Result: 0000000000000200 
DBG(48599555)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48599556)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48599558)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48599559)> CPU DETAIL: Read R 1608: 3336000000000201 
DBG(48599560)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48599561)> CPU DETAIL: Result: 0000000000000001 
DBG(48599562)> CPU DETAIL: Write 1610: 0000000000000001 
DBG(48599564)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48599565)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599566)> CPU DETAIL: Read S 1609: 0000000000000002 
DBG(48599567)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(48599568)> CPU DETAIL: Transfer to T 
DBG(48599570)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48599571)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48599572)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48599573)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(48599574)> CPU DETAIL: Transfer to T 
DBG(48599576)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48599577)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48599578)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48599579)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48599579)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48599580)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48599581)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48599582)> CPU DETAIL: Write 1609: 9600000000000006 
DBG(48599584)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48599585)> CPU DETAIL: Read R 1610: 0000000000000001 
DBG(48599586)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48599587)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(48599587)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48599588)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48599589)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(48599590)> CPU DETAIL: Write 1610: 9600000000000003 
DBG(48599592)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48599593)> CPU DETAIL: Read R 1609: 9600000000000006 
DBG(48599594)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48599595)> CPU DETAIL: Result: 0000000000000006 
DBG(48599596)> CPU DETAIL: Write 1609: 0000000000000006 
DBG(48599598)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48599599)> CPU DETAIL: Read R 1610: 9600000000000003 
DBG(48599600)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48599601)> CPU DETAIL: Result: 0000000000000003 
DBG(48599602)> CPU DETAIL: Write 1610: 0000000000000003 
DBG(48599604)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48599605)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48599606)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001600000000 
DBG(48599609)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48599610)> CPU DETAIL: Read R 0124: 0060040316080000 
DBG(48599611)> CPU DETAIL: Result: 0060041916080000 
DBG(48599612)> CPU DETAIL: Write 0124: 0060041916080000 
DBG(48599614)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48599615)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48599616)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48599617)> CPU DETAIL: Result: 0000000000000016 
DBG(48599618)> CPU DETAIL: Write 1606: 0000000000000016 
DBG(48599620)> CPU CMD: Exec 0140: 00 60 0000 0000 0000   nop   
DBG(48599623)> CPU CMD: Exec 0141: 00 41 1614 1615 0000   (1614 words in tape 01 block) - (1615 words already processed) -> REG1   
DBG(48599624)> CPU DETAIL: Read R 1614: 0000000000000029 
DBG(48599625)> CPU DETAIL: Read S 1615: 0000000000000016 
DBG(48599626)> CPU DETAIL: Result: 0000000000000013 
DBG(48599629)> CPU CMD: Exec 0142: 00 63 0149 0144 0000   if >0 goto 0149, if =0 goto 0144   
DBG(48599630)> CPU DETAIL: REG1: 0000000000000013
DBG(48599630)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48599632)> CPU CMD: Exec 0149: 00 60 1021 1616 0000   (1005 input tape 1 w7) -> (1616 tape 1 event rec w7 = xxxx xxxx xxxx AABB)   
DBG(48599633)> CPU DETAIL: Read R 1021: 3336000000000200 
DBG(48599634)> CPU DETAIL: Write 1616: 3336000000000200 
DBG(48599636)> CPU CMD: Exec 0150: 13 60 6999 1619 0000   (M6 + 0999 input event block tape 01) -> (1619 tape 1 event rec len (= value 
DBG(48599637)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48599637)> CPU DETAIL: Read R 1015: 0130000000141015 
DBG(48599638)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48599639)> CPU DETAIL: Write 1619: 0000000000000013 
DBG(48599641)> CPU CMD: Exec 0151: 02 42 1616 1642 1617   Mask (event w7) with 0..0 1100 Shift 2 Right         1617=num of predecesors 
DBG(48599642)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48599643)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48599644)> CPU DETAIL: Result: 0000000000000200 
DBG(48599645)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48599646)> CPU DETAIL: Write 1617: 0000000000000002 
DBG(48599648)> CPU CMD: Exec 0152: 00 42 1616 1643 1618   Mask (event w7) with 0..0 11                         1618=num of successors  
DBG(48599649)> CPU DETAIL: Read R 1616: 3336000000000200 
DBG(48599650)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48599651)> CPU DETAIL: Result: 0000000000000000 
DBG(48599652)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48599654)> CPU CMD: Exec 0153: 00 72 1617 1640 0156   if num predecessors <> 0 goto 0156                      
DBG(48599655)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48599656)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48599657)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(48599658)> CPU DETAIL: Transfer to T 
DBG(48599660)> CPU CMD: Exec 0156: 96 34 1617 1644 1617   mult (1609) x 3     
DBG(48599661)> CPU DETAIL: Read R 1617: 0000000000000002 
DBG(48599662)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48599663)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48599663)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48599664)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48599665)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48599666)> CPU DETAIL: Write 1617: 9600000000000006 
DBG(48599668)> CPU CMD: Exec 0157: 96 34 1618 1644 1618   mult (1609) x 3     
DBG(48599669)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48599670)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48599671)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48599671)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48599672)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48599673)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48599674)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48599676)> CPU CMD: Exec 0158: 92 60 1619 0000 0000   set instr 0149 ...   
DBG(48599677)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48599678)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48599681)> CPU CMD: Exec 0159: 00 40 0149 0000 0149   ... to access next event in tape 1 input block      
DBG(48599682)> CPU DETAIL: Read R 0149: 0060102116160000 
DBG(48599683)> CPU DETAIL: Result: 0060103416160000 
DBG(48599684)> CPU DETAIL: Write 0149: 0060103416160000 
DBG(48599686)> CPU CMD: Exec 0160: 00 42 1617 1711 1617   (1617 = number of words used by predecessors on tape 1)      
DBG(48599687)> CPU DETAIL: Read R 1617: 9600000000000006 
DBG(48599688)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48599689)> CPU DETAIL: Result: 0000000000000006 
DBG(48599690)> CPU DETAIL: Write 1617: 0000000000000006 
DBG(48599692)> CPU CMD: Exec 0161: 00 42 1618 1711 1618   (1618 = number of words used by successors on tape 1)      
DBG(48599693)> CPU DETAIL: Read R 1618: 0000000000000000 
DBG(48599694)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48599695)> CPU DETAIL: Result: 0000000000000000 
DBG(48599696)> CPU DETAIL: Write 1618: 0000000000000000 
DBG(48599698)> CPU CMD: Exec 0162: 00 40 1619 1615 1615   (1615 words processed from tape 01 block) += (1619 event len tape 01)   
DBG(48599699)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48599700)> CPU DETAIL: Read S 1615: 0000000000000016 
DBG(48599701)> CPU DETAIL: Result: 0000000000000029 
DBG(48599702)> CPU DETAIL: Write 1615: 0000000000000029 
DBG(48599704)> CPU CMD: Exec 0163: 96 60 1619 0000 0000   set end of loop on M6 ...   
DBG(48599705)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48599706)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48599709)> CPU CMD: Exec 0164: 00 40 0167 0000 0167   ... to (1619 event len tape 01)   
DBG(48599710)> CPU DETAIL: Read R 0167: 0658000100160165 
DBG(48599711)> CPU DETAIL: Result: 0658000100290165 
DBG(48599712)> CPU DETAIL: Write 0167: 0658000100290165 
DBG(48599714)> CPU CMD: Exec 0165: 00 60 6999 0598 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599715)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(48599715)> CPU DETAIL: Read R 1015: 0130000000141015 
DBG(48599716)> CPU DETAIL: Write 0598: 0130000000141015 
DBG(48599718)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599719)> CPU DETAIL: Read R 0165: 0060699905980000 
DBG(48599720)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599721)> CPU DETAIL: Result: 0060699905990000 
DBG(48599722)> CPU DETAIL: Write 0165: 0060699905990000 
DBG(48599724)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599725)> CPU DETAIL: M6: 0017 
DBG(48599726)> CPU DETAIL: Transfer to T 
DBG(48599728)> CPU CMD: Exec 0165: 00 60 6999 0599 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599729)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(48599729)> CPU DETAIL: Read R 1016: 0100000233090000 
DBG(48599730)> CPU DETAIL: Write 0599: 0100000233090000 
DBG(48599732)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599733)> CPU DETAIL: Read R 0165: 0060699905990000 
DBG(48599734)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599735)> CPU DETAIL: Result: 0060699906000000 
DBG(48599736)> CPU DETAIL: Write 0165: 0060699906000000 
DBG(48599738)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599739)> CPU DETAIL: M6: 0018 
DBG(48599740)> CPU DETAIL: Transfer to T 
DBG(48599742)> CPU CMD: Exec 0165: 00 60 6999 0600 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599743)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(48599743)> CPU DETAIL: Read R 1017: 0000000000000000 
DBG(48599744)> CPU DETAIL: Write 0600: 0000000000000000 
DBG(48599746)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599747)> CPU DETAIL: Read R 0165: 0060699906000000 
DBG(48599748)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599749)> CPU DETAIL: Result: 0060699906010000 
DBG(48599750)> CPU DETAIL: Write 0165: 0060699906010000 
DBG(48599752)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599753)> CPU DETAIL: M6: 0019 
DBG(48599754)> CPU DETAIL: Transfer to T 
DBG(48599756)> CPU CMD: Exec 0165: 00 60 6999 0601 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599757)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(48599757)> CPU DETAIL: Read R 1018: 0000000000000000 
DBG(48599758)> CPU DETAIL: Write 0601: 0000000000000000 
DBG(48599760)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599761)> CPU DETAIL: Read R 0165: 0060699906010000 
DBG(48599762)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599763)> CPU DETAIL: Result: 0060699906020000 
DBG(48599764)> CPU DETAIL: Write 0165: 0060699906020000 
DBG(48599766)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599767)> CPU DETAIL: M6: 0020 
DBG(48599768)> CPU DETAIL: Transfer to T 
DBG(48599770)> CPU CMD: Exec 0165: 00 60 6999 0602 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599771)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(48599771)> CPU DETAIL: Read R 1019: 0000000000000000 
DBG(48599772)> CPU DETAIL: Write 0602: 0000000000000000 
DBG(48599774)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599775)> CPU DETAIL: Read R 0165: 0060699906020000 
DBG(48599776)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599777)> CPU DETAIL: Result: 0060699906030000 
DBG(48599778)> CPU DETAIL: Write 0165: 0060699906030000 
DBG(48599780)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599781)> CPU DETAIL: M6: 0021 
DBG(48599782)> CPU DETAIL: Transfer to T 
DBG(48599784)> CPU CMD: Exec 0165: 00 60 6999 0603 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599785)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(48599785)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(48599786)> CPU DETAIL: Write 0603: 0000000000000000 
DBG(48599788)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599789)> CPU DETAIL: Read R 0165: 0060699906030000 
DBG(48599790)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599791)> CPU DETAIL: Result: 0060699906040000 
DBG(48599792)> CPU DETAIL: Write 0165: 0060699906040000 
DBG(48599794)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599795)> CPU DETAIL: M6: 0022 
DBG(48599796)> CPU DETAIL: Transfer to T 
DBG(48599798)> CPU CMD: Exec 0165: 00 60 6999 0604 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599799)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(48599799)> CPU DETAIL: Read R 1021: 3336000000000200 
DBG(48599800)> CPU DETAIL: Write 0604: 3336000000000200 
DBG(48599802)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599803)> CPU DETAIL: Read R 0165: 0060699906040000 
DBG(48599804)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599805)> CPU DETAIL: Result: 0060699906050000 
DBG(48599806)> CPU DETAIL: Write 0165: 0060699906050000 
DBG(48599808)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599809)> CPU DETAIL: M6: 0023 
DBG(48599810)> CPU DETAIL: Transfer to T 
DBG(48599812)> CPU CMD: Exec 0165: 00 60 6999 0605 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599813)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(48599813)> CPU DETAIL: Read R 1022: 0000000233010000 
DBG(48599814)> CPU DETAIL: Write 0605: 0000000233010000 
DBG(48599816)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599817)> CPU DETAIL: Read R 0165: 0060699906050000 
DBG(48599818)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599819)> CPU DETAIL: Result: 0060699906060000 
DBG(48599820)> CPU DETAIL: Write 0165: 0060699906060000 
DBG(48599822)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599823)> CPU DETAIL: M6: 0024 
DBG(48599824)> CPU DETAIL: Transfer to T 
DBG(48599826)> CPU CMD: Exec 0165: 00 60 6999 0606 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599827)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(48599827)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(48599828)> CPU DETAIL: Write 0606: 0000000000000000 
DBG(48599830)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599831)> CPU DETAIL: Read R 0165: 0060699906060000 
DBG(48599832)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599833)> CPU DETAIL: Result: 0060699906070000 
DBG(48599834)> CPU DETAIL: Write 0165: 0060699906070000 
DBG(48599836)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599837)> CPU DETAIL: M6: 0025 
DBG(48599838)> CPU DETAIL: Transfer to T 
DBG(48599840)> CPU CMD: Exec 0165: 00 60 6999 0607 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599841)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(48599841)> CPU DETAIL: Read R 1024: 0000000000000000 
DBG(48599842)> CPU DETAIL: Write 0607: 0000000000000000 
DBG(48599844)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599845)> CPU DETAIL: Read R 0165: 0060699906070000 
DBG(48599846)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599847)> CPU DETAIL: Result: 0060699906080000 
DBG(48599848)> CPU DETAIL: Write 0165: 0060699906080000 
DBG(48599850)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599851)> CPU DETAIL: M6: 0026 
DBG(48599852)> CPU DETAIL: Transfer to T 
DBG(48599854)> CPU CMD: Exec 0165: 00 60 6999 0608 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599855)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(48599855)> CPU DETAIL: Read R 1025: 0000000233030000 
DBG(48599856)> CPU DETAIL: Write 0608: 0000000233030000 
DBG(48599858)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599859)> CPU DETAIL: Read R 0165: 0060699906080000 
DBG(48599860)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599861)> CPU DETAIL: Result: 0060699906090000 
DBG(48599862)> CPU DETAIL: Write 0165: 0060699906090000 
DBG(48599864)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599865)> CPU DETAIL: M6: 0027 
DBG(48599866)> CPU DETAIL: Transfer to T 
DBG(48599868)> CPU CMD: Exec 0165: 00 60 6999 0609 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599869)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(48599869)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(48599870)> CPU DETAIL: Write 0609: 0000000000000000 
DBG(48599872)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599873)> CPU DETAIL: Read R 0165: 0060699906090000 
DBG(48599874)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599875)> CPU DETAIL: Result: 0060699906100000 
DBG(48599876)> CPU DETAIL: Write 0165: 0060699906100000 
DBG(48599878)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599879)> CPU DETAIL: M6: 0028 
DBG(48599880)> CPU DETAIL: Transfer to T 
DBG(48599882)> CPU CMD: Exec 0165: 00 60 6999 0610 0000   (M6 + 0999 input event block tape 01) -> (0598 event rec) event rec = tape 0 
DBG(48599883)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(48599883)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(48599884)> CPU DETAIL: Write 0610: 0000000000000000 
DBG(48599886)> CPU CMD: Exec 0166: 00 40 0165 1648 0165   incr S   
DBG(48599887)> CPU DETAIL: Read R 0165: 0060699906100000 
DBG(48599888)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48599889)> CPU DETAIL: Result: 0060699906110000 
DBG(48599890)> CPU DETAIL: Write 0165: 0060699906110000 
DBG(48599892)> CPU CMD: Exec 0167: 06 58 0001 0029 0165   loop, incr M6, if M6 <> (1619 event len tape 01) goto 0165   
DBG(48599893)> CPU DETAIL: M6: 0029 
DBG(48599896)> CPU CMD: Exec 0168: 00 60 1661 0165 0000   restore instr 0165   
DBG(48599897)> CPU DETAIL: Read R 1661: 0060699905980000 
DBG(48599898)> CPU DETAIL: Write 0165: 0060699905980000 
DBG(48599900)> CPU CMD: Exec 0169: 00 60 0000 0000 0000   nop / set to nop and goto 0141 read next event on tape 1   
DBG(48599903)> CPU CMD: Exec 0170: 92 60 1609 0000 0000   (words used by predecessors on tape 2 event) -> field S   
DBG(48599904)> CPU DETAIL: Read R 1609: 0000000000000006 
DBG(48599905)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000600000000 
DBG(48599908)> CPU CMD: Exec 0171: 00 40 1672 0000 0000   + 7 in field S (now points to first succesor)   
DBG(48599909)> CPU DETAIL: Read R 1672: 0000000700000000 
DBG(48599910)> CPU DETAIL: Result: 0000001300000000 
DBG(48599913)> CPU CMD: Exec 0172: 00 40 1694 0000 0174   set instr 0174 as ...    
DBG(48599914)> CPU DETAIL: Read R 1694: 0042439716550000 
DBG(48599915)> CPU DETAIL: Result: 0042441016550000 
DBG(48599916)> CPU DETAIL: Write 0174: 0042441016550000 
DBG(48599918)> CPU CMD: Exec 0173: 00 42 0599 1655 1620   Mask (0599 event rec w2) to get event rec code -> (1620 event code from tape 
DBG(48599919)> CPU DETAIL: Read R 0599: 0100000233090000 
DBG(48599920)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599921)> CPU DETAIL: Result: 0000000233090000 
DBG(48599922)> CPU DETAIL: Write 1620: 0000000233090000 
DBG(48599924)> CPU CMD: Exec 0174: 00 42 4410 1655 0000   Mask (M4 + 0404) to get event code from first successor on event rec on tape 
DBG(48599925)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48599925)> CPU DETAIL: Read R 0410: 0000000233090000 
DBG(48599926)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599927)> CPU DETAIL: Result: 0000000233090000 
DBG(48599930)> CPU CMD: Exec 0175: 00 41 0000 1620 0000   compare both event codes   
DBG(48599931)> CPU DETAIL: Read S 1620: 0000000233090000 
DBG(48599932)> CPU DETAIL: Result: 0000000000000000 
DBG(48599935)> CPU CMD: Exec 0176: 00 63 0000 0178 0207   if =0 goto 0178, if <0 goto 0207   
DBG(48599936)> CPU DETAIL: REG1: 0000000000000000
DBG(48599936)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48599938)> CPU CMD: Exec 0178: 00 60 1640 1635 0227   clear (1635 of times input tape rewinded when scanning for an event), goto 0 
DBG(48599939)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599940)> CPU DETAIL: Transfer to T 
DBG(48599940)> CPU DETAIL: Write 1635: 0000000000000000 
DBG(48599942)> CPU CMD: Exec 0227: 00 42 0605 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48599943)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48599944)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599945)> CPU DETAIL: Result: 0000000233010000 
DBG(48599946)> CPU DETAIL: Write 1620: 0000000233010000 
DBG(48599948)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48599949)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48599949)> CPU DETAIL: Read R 0398: 0000000233030000 
DBG(48599950)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599951)> CPU DETAIL: Result: 0000000233030000 
DBG(48599954)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48599955)> CPU DETAIL: Read R 1620: 0000000233010000 
DBG(48599956)> CPU DETAIL: Diff: REG1: 9999999999980000
DBG(48599959)> CPU CMD: Exec 0230: 00 40 1644 0227 0227   incr field_R on instr 0227 to read next predecessor on list   
DBG(48599960)> CPU DETAIL: Read R 1644: 0000000300000000 
DBG(48599961)> CPU DETAIL: Read S 0227: 0042060516551620 
DBG(48599962)> CPU DETAIL: Result: 0042060816551620 
DBG(48599963)> CPU DETAIL: Write 0227: 0042060816551620 
DBG(48599965)> CPU CMD: Exec 0231: 00 40 1707 1624 1624   incr (1624 number of words scanned on predecessor list)   
DBG(48599966)> CPU DETAIL: Read R 1707: 0000000000000003 
DBG(48599967)> CPU DETAIL: Read S 1624: 0000000000000000 
DBG(48599968)> CPU DETAIL: Result: 0000000000000003 
DBG(48599969)> CPU DETAIL: Write 1624: 0000000000000003 
DBG(48599971)> CPU CMD: Exec 0232: 00 72 0000 1617 0227   if <> (1617 num of words used by predecessor list) goto 0227: loop because p 
DBG(48599972)> CPU DETAIL: Read S 1617: 0000000000000006 
DBG(48599973)> CPU DETAIL: Diff: REG1: 9999999999999997
DBG(48599974)> CPU DETAIL: Transfer to T 
DBG(48599976)> CPU CMD: Exec 0227: 00 42 0608 1655 1620   mask (0605 event rec from tape 1) w8) to get first predecessor event code -> 
DBG(48599977)> CPU DETAIL: Read R 0608: 0000000233030000 
DBG(48599978)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599979)> CPU DETAIL: Result: 0000000233030000 
DBG(48599980)> CPU DETAIL: Write 1620: 0000000233030000 
DBG(48599982)> CPU CMD: Exec 0228: 00 42 4398 1655 0000   mask (M4 + 0398 event block tape 2) to get event code   
DBG(48599983)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48599983)> CPU DETAIL: Read R 0398: 0000000233030000 
DBG(48599984)> CPU DETAIL: Read S 1655: 0000001111111110 
DBG(48599985)> CPU DETAIL: Result: 0000000233030000 
DBG(48599988)> CPU CMD: Exec 0229: 00 70 1620 0000 0234   if pred on tape 1 same as event rec tape 2 goto 0234   
DBG(48599989)> CPU DETAIL: Read R 1620: 0000000233030000 
DBG(48599990)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48599991)> CPU DETAIL: Transfer to T 
DBG(48599993)> CPU CMD: Exec 0234: 00 60 1640 1624 0000   clear (1624 number of words scanned on predecessor list)   
DBG(48599994)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48599995)> CPU DETAIL: Write 1624: 0000000000000000 
DBG(48599997)> CPU CMD: Exec 0235: 00 60 1669 0227 0000   restore instr 0227    
DBG(48599998)> CPU DETAIL: Read R 1669: 0042060516551620 
DBG(48599999)> CPU DETAIL: Write 0227: 0042060516551620 
DBG(48600001)> CPU CMD: Exec 0236: 00 40 0599 1653 0599   incr AF in (0599 w2) event rec from tape 1   
DBG(48600002)> CPU DETAIL: Read R 0599: 0100000233090000 
DBG(48600003)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48600004)> CPU DETAIL: Result: 0200000233090000 
DBG(48600005)> CPU DETAIL: Write 0599: 0200000233090000 
DBG(48600007)> CPU CMD: Exec 0237: 14 60 0000 1632 0000   AF -> (1632 number of predecessors found on tape 2 for tape 1's event in eve 
DBG(48600008)> CPU DETAIL: Word Shift 14 digits right: REG1: 0000000000000002 
DBG(48600009)> CPU DETAIL: Write 1632: 0000000000000002 
DBG(48600011)> CPU CMD: Exec 0238: 02 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors   
DBG(48600012)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48600013)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48600014)> CPU DETAIL: Result: 0000000000000200 
DBG(48600015)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48600018)> CPU CMD: Exec 0239: 00 41 0000 1632 0000   set REG1 = AA-AF = num of predecessors not in tape 2    
DBG(48600019)> CPU DETAIL: Read S 1632: 0000000000000002 
DBG(48600020)> CPU DETAIL: Result: 0000000000000000 
DBG(48600023)> CPU CMD: Exec 0240: 00 63 0000 0282 0251   if =0 goto 0282 (AA=AF -> all predecessors on tape 2), if <0 goto 0251 (stop 
DBG(48600024)> CPU DETAIL: REG1: 0000000000000000
DBG(48600024)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48600026)> CPU CMD: Exec 0282: 00 60 0197 0250 0000   ???   
DBG(48600027)> CPU DETAIL: Read R 0197: 0060000000000141 
DBG(48600028)> CPU DETAIL: Write 0250: 0060000000000141 
DBG(48600030)> CPU CMD: Exec 0283: 00 60 1699 0272 0000   set exit after writing to tape 3 to process next event from tape 2   
DBG(48600031)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48600032)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48600034)> CPU CMD: Exec 0284: 88 42 0604 1642 0000   mask (0604 event rec w7 from tape 1) to get AA num of predecessors      
DBG(48600035)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48600036)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48600037)> CPU DETAIL: Result: 0000000000000200 
DBG(48600038)> CPU DETAIL: Word Shift 12 digits left: REG1: 0200000000000000 
DBG(48600041)> CPU CMD: Exec 0285: 00 41 0599 0000 0599   remove it from (0599 w2)   
DBG(48600042)> CPU DETAIL: Read R 0599: 0200000233090000 
DBG(48600043)> CPU DETAIL: Result: 0000000233090000 
DBG(48600044)> CPU DETAIL: Write 0599: 0000000233090000 
DBG(48600046)> CPU CMD: Exec 0286: 00 40 1619 1626 0000   (1619 event rec from tape 1 len NNN) + (1626 num of words in event output bl 
DBG(48600047)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48600048)> CPU DETAIL: Read S 1626: 0000000000000000 
DBG(48600049)> CPU DETAIL: Result: 0000000000000013 
DBG(48600052)> CPU CMD: Exec 0287: 00 41 1650 0000 0000   200 - REG1                                             on output block for   
DBG(48600053)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48600054)> CPU DETAIL: Result: 0000000000000187 
DBG(48600057)> CPU CMD: Exec 0288: 00 63 0000 0290 0292   if =0 goto 0290, if <0 goto 0292                       tape 1 event rec   
DBG(48600058)> CPU DETAIL: REG1: 0000000000000187
DBG(48600058)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48600060)> CPU CMD: Exec 0289: 00 60 1646 0300 0293   set 0300 as nop, goto 0293   
DBG(48600061)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48600062)> CPU DETAIL: Transfer to T 
DBG(48600062)> CPU DETAIL: Write 0300: 0060000000000000 
DBG(48600064)> CPU CMD: Exec 0293: 00 54 0000 0000 0000   clear M8    
DBG(48600065)> CPU DETAIL: M4: 0000 
DBG(48600066)> CPU DETAIL: M6: 0029 
DBG(48600067)> CPU DETAIL: Clear M8
DBG(48600067)> CPU DETAIL: M8: 0000 
DBG(48600070)> CPU CMD: Exec 0294: 96 60 1619 0000 0000   set instr 0299 to ...    
DBG(48600071)> CPU DETAIL: Read R 1619: 0000000000000013 
DBG(48600072)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48600075)> CPU CMD: Exec 0295: 00 40 1679 0000 0299   ... loop on M8 up to (1619 event rec len NNN from tape 1)   
DBG(48600076)> CPU DETAIL: Read R 1679: 0858000100000296 
DBG(48600077)> CPU DETAIL: Result: 0858000100130296 
DBG(48600078)> CPU DETAIL: Write 0299: 0858000100130296 
DBG(48600080)> CPU CMD: Exec 0296: 00 60 8598 0798 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600081)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(48600081)> CPU DETAIL: Read R 0598: 0130000000141015 
DBG(48600082)> CPU DETAIL: Write 0798: 0130000000141015 
DBG(48600084)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600085)> CPU DETAIL: Read R 0296: 0060859807980000 
DBG(48600086)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600087)> CPU DETAIL: Result: 0060859807990000 
DBG(48600088)> CPU DETAIL: Write 0296: 0060859807990000 
DBG(48600090)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600091)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48600092)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600093)> CPU DETAIL: Result: 0000000000000001 
DBG(48600094)> CPU DETAIL: Write 1626: 0000000000000001 
DBG(48600096)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600097)> CPU DETAIL: M8: 0001 
DBG(48600098)> CPU DETAIL: Transfer to T 
DBG(48600100)> CPU CMD: Exec 0296: 00 60 8598 0799 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600101)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(48600101)> CPU DETAIL: Read R 0599: 0000000233090000 
DBG(48600102)> CPU DETAIL: Write 0799: 0000000233090000 
DBG(48600104)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600105)> CPU DETAIL: Read R 0296: 0060859807990000 
DBG(48600106)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600107)> CPU DETAIL: Result: 0060859808000000 
DBG(48600108)> CPU DETAIL: Write 0296: 0060859808000000 
DBG(48600110)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600111)> CPU DETAIL: Read R 1626: 0000000000000001 
DBG(48600112)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600113)> CPU DETAIL: Result: 0000000000000002 
DBG(48600114)> CPU DETAIL: Write 1626: 0000000000000002 
DBG(48600116)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600117)> CPU DETAIL: M8: 0002 
DBG(48600118)> CPU DETAIL: Transfer to T 
DBG(48600120)> CPU CMD: Exec 0296: 00 60 8598 0800 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600121)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(48600121)> CPU DETAIL: Read R 0600: 0000000000000000 
DBG(48600122)> CPU DETAIL: Write 0800: 0000000000000000 
DBG(48600124)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600125)> CPU DETAIL: Read R 0296: 0060859808000000 
DBG(48600126)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600127)> CPU DETAIL: Result: 0060859808010000 
DBG(48600128)> CPU DETAIL: Write 0296: 0060859808010000 
DBG(48600130)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600131)> CPU DETAIL: Read R 1626: 0000000000000002 
DBG(48600132)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600133)> CPU DETAIL: Result: 0000000000000003 
DBG(48600134)> CPU DETAIL: Write 1626: 0000000000000003 
DBG(48600136)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600137)> CPU DETAIL: M8: 0003 
DBG(48600138)> CPU DETAIL: Transfer to T 
DBG(48600140)> CPU CMD: Exec 0296: 00 60 8598 0801 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600141)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(48600141)> CPU DETAIL: Read R 0601: 0000000000000000 
DBG(48600142)> CPU DETAIL: Write 0801: 0000000000000000 
DBG(48600144)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600145)> CPU DETAIL: Read R 0296: 0060859808010000 
DBG(48600146)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600147)> CPU DETAIL: Result: 0060859808020000 
DBG(48600148)> CPU DETAIL: Write 0296: 0060859808020000 
DBG(48600150)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600151)> CPU DETAIL: Read R 1626: 0000000000000003 
DBG(48600152)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600153)> CPU DETAIL: Result: 0000000000000004 
DBG(48600154)> CPU DETAIL: Write 1626: 0000000000000004 
DBG(48600156)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600157)> CPU DETAIL: M8: 0004 
DBG(48600158)> CPU DETAIL: Transfer to T 
DBG(48600160)> CPU CMD: Exec 0296: 00 60 8598 0802 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600161)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(48600161)> CPU DETAIL: Read R 0602: 0000000000000000 
DBG(48600162)> CPU DETAIL: Write 0802: 0000000000000000 
DBG(48600164)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600165)> CPU DETAIL: Read R 0296: 0060859808020000 
DBG(48600166)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600167)> CPU DETAIL: Result: 0060859808030000 
DBG(48600168)> CPU DETAIL: Write 0296: 0060859808030000 
DBG(48600170)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600171)> CPU DETAIL: Read R 1626: 0000000000000004 
DBG(48600172)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600173)> CPU DETAIL: Result: 0000000000000005 
DBG(48600174)> CPU DETAIL: Write 1626: 0000000000000005 
DBG(48600176)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600177)> CPU DETAIL: M8: 0005 
DBG(48600178)> CPU DETAIL: Transfer to T 
DBG(48600180)> CPU CMD: Exec 0296: 00 60 8598 0803 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600181)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(48600181)> CPU DETAIL: Read R 0603: 0000000000000000 
DBG(48600182)> CPU DETAIL: Write 0803: 0000000000000000 
DBG(48600184)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600185)> CPU DETAIL: Read R 0296: 0060859808030000 
DBG(48600186)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600187)> CPU DETAIL: Result: 0060859808040000 
DBG(48600188)> CPU DETAIL: Write 0296: 0060859808040000 
DBG(48600190)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600191)> CPU DETAIL: Read R 1626: 0000000000000005 
DBG(48600192)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600193)> CPU DETAIL: Result: 0000000000000006 
DBG(48600194)> CPU DETAIL: Write 1626: 0000000000000006 
DBG(48600196)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600197)> CPU DETAIL: M8: 0006 
DBG(48600198)> CPU DETAIL: Transfer to T 
DBG(48600200)> CPU CMD: Exec 0296: 00 60 8598 0804 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600201)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(48600201)> CPU DETAIL: Read R 0604: 3336000000000200 
DBG(48600202)> CPU DETAIL: Write 0804: 3336000000000200 
DBG(48600204)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600205)> CPU DETAIL: Read R 0296: 0060859808040000 
DBG(48600206)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600207)> CPU DETAIL: Result: 0060859808050000 
DBG(48600208)> CPU DETAIL: Write 0296: 0060859808050000 
DBG(48600210)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600211)> CPU DETAIL: Read R 1626: 0000000000000006 
DBG(48600212)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600213)> CPU DETAIL: Result: 0000000000000007 
DBG(48600214)> CPU DETAIL: Write 1626: 0000000000000007 
DBG(48600216)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600217)> CPU DETAIL: M8: 0007 
DBG(48600218)> CPU DETAIL: Transfer to T 
DBG(48600220)> CPU CMD: Exec 0296: 00 60 8598 0805 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600221)> CPU DETAIL: M8 Address Modifier: 0007 
DBG(48600221)> CPU DETAIL: Read R 0605: 0000000233010000 
DBG(48600222)> CPU DETAIL: Write 0805: 0000000233010000 
DBG(48600224)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600225)> CPU DETAIL: Read R 0296: 0060859808050000 
DBG(48600226)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600227)> CPU DETAIL: Result: 0060859808060000 
DBG(48600228)> CPU DETAIL: Write 0296: 0060859808060000 
DBG(48600230)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600231)> CPU DETAIL: Read R 1626: 0000000000000007 
DBG(48600232)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600233)> CPU DETAIL: Result: 0000000000000008 
DBG(48600234)> CPU DETAIL: Write 1626: 0000000000000008 
DBG(48600236)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600237)> CPU DETAIL: M8: 0008 
DBG(48600238)> CPU DETAIL: Transfer to T 
DBG(48600240)> CPU CMD: Exec 0296: 00 60 8598 0806 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600241)> CPU DETAIL: M8 Address Modifier: 0008 
DBG(48600241)> CPU DETAIL: Read R 0606: 0000000000000000 
DBG(48600242)> CPU DETAIL: Write 0806: 0000000000000000 
DBG(48600244)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600245)> CPU DETAIL: Read R 0296: 0060859808060000 
DBG(48600246)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600247)> CPU DETAIL: Result: 0060859808070000 
DBG(48600248)> CPU DETAIL: Write 0296: 0060859808070000 
DBG(48600250)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600251)> CPU DETAIL: Read R 1626: 0000000000000008 
DBG(48600252)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600253)> CPU DETAIL: Result: 0000000000000009 
DBG(48600254)> CPU DETAIL: Write 1626: 0000000000000009 
DBG(48600256)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600257)> CPU DETAIL: M8: 0009 
DBG(48600258)> CPU DETAIL: Transfer to T 
DBG(48600260)> CPU CMD: Exec 0296: 00 60 8598 0807 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600261)> CPU DETAIL: M8 Address Modifier: 0009 
DBG(48600261)> CPU DETAIL: Read R 0607: 0000000000000000 
DBG(48600262)> CPU DETAIL: Write 0807: 0000000000000000 
DBG(48600264)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600265)> CPU DETAIL: Read R 0296: 0060859808070000 
DBG(48600266)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600267)> CPU DETAIL: Result: 0060859808080000 
DBG(48600268)> CPU DETAIL: Write 0296: 0060859808080000 
DBG(48600270)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600271)> CPU DETAIL: Read R 1626: 0000000000000009 
DBG(48600272)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600273)> CPU DETAIL: Result: 0000000000000010 
DBG(48600274)> CPU DETAIL: Write 1626: 0000000000000010 
DBG(48600276)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600277)> CPU DETAIL: M8: 0010 
DBG(48600278)> CPU DETAIL: Transfer to T 
DBG(48600280)> CPU CMD: Exec 0296: 00 60 8598 0808 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600281)> CPU DETAIL: M8 Address Modifier: 0010 
DBG(48600281)> CPU DETAIL: Read R 0608: 0000000233030000 
DBG(48600282)> CPU DETAIL: Write 0808: 0000000233030000 
DBG(48600284)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600285)> CPU DETAIL: Read R 0296: 0060859808080000 
DBG(48600286)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600287)> CPU DETAIL: Result: 0060859808090000 
DBG(48600288)> CPU DETAIL: Write 0296: 0060859808090000 
DBG(48600290)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600291)> CPU DETAIL: Read R 1626: 0000000000000010 
DBG(48600292)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600293)> CPU DETAIL: Result: 0000000000000011 
DBG(48600294)> CPU DETAIL: Write 1626: 0000000000000011 
DBG(48600296)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600297)> CPU DETAIL: M8: 0011 
DBG(48600298)> CPU DETAIL: Transfer to T 
DBG(48600300)> CPU CMD: Exec 0296: 00 60 8598 0809 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600301)> CPU DETAIL: M8 Address Modifier: 0011 
DBG(48600301)> CPU DETAIL: Read R 0609: 0000000000000000 
DBG(48600302)> CPU DETAIL: Write 0809: 0000000000000000 
DBG(48600304)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600305)> CPU DETAIL: Read R 0296: 0060859808090000 
DBG(48600306)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600307)> CPU DETAIL: Result: 0060859808100000 
DBG(48600308)> CPU DETAIL: Write 0296: 0060859808100000 
DBG(48600310)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600311)> CPU DETAIL: Read R 1626: 0000000000000011 
DBG(48600312)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600313)> CPU DETAIL: Result: 0000000000000012 
DBG(48600314)> CPU DETAIL: Write 1626: 0000000000000012 
DBG(48600316)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600317)> CPU DETAIL: M8: 0012 
DBG(48600318)> CPU DETAIL: Transfer to T 
DBG(48600320)> CPU CMD: Exec 0296: 00 60 8598 0810 0000   (M8+0598 event rec from tape 1) -> (0798 event output block)   
DBG(48600321)> CPU DETAIL: M8 Address Modifier: 0012 
DBG(48600321)> CPU DETAIL: Read R 0610: 0000000000000000 
DBG(48600322)> CPU DETAIL: Write 0810: 0000000000000000 
DBG(48600324)> CPU CMD: Exec 0297: 00 40 0296 1648 0296   incr_S   
DBG(48600325)> CPU DETAIL: Read R 0296: 0060859808100000 
DBG(48600326)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600327)> CPU DETAIL: Result: 0060859808110000 
DBG(48600328)> CPU DETAIL: Write 0296: 0060859808110000 
DBG(48600330)> CPU CMD: Exec 0298: 00 40 1626 1639 1626   incr (1626 num of words in event output block)   
DBG(48600331)> CPU DETAIL: Read R 1626: 0000000000000012 
DBG(48600332)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600333)> CPU DETAIL: Result: 0000000000000013 
DBG(48600334)> CPU DETAIL: Write 1626: 0000000000000013 
DBG(48600336)> CPU CMD: Exec 0299: 08 58 0001 0013 0296   loop, incr M8, if M8<>(1619 event rec len NNN from tape 1) goto 0296   
DBG(48600337)> CPU DETAIL: M8: 0013 
DBG(48600340)> CPU CMD: Exec 0300: 00 60 0000 0000 0000   nop   
DBG(48600343)> CPU CMD: Exec 0301: 00 60 0000 0000 0243   goto 0243   
DBG(48600344)> CPU DETAIL: Transfer to T 
DBG(48600346)> CPU CMD: Exec 0243: 02 60 1653 0000 0000   0001 0..0 -> REG1   
DBG(48600347)> CPU DETAIL: Read R 1653: 0100000000000000 
DBG(48600348)> CPU DETAIL: Word Shift 2 digits right: REG1: 0001000000000000 
DBG(48600351)> CPU CMD: Exec 0244: 00 40 4398 0000 4398   incr (M4+0398 tape 2 input block w2) num BF of successors found   
DBG(48600352)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600352)> CPU DETAIL: Read R 0398: 0000000233030000 
DBG(48600353)> CPU DETAIL: Result: 0001000233030000 
DBG(48600354)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600354)> CPU DETAIL: Write 0398: 0001000233030000 
DBG(48600356)> CPU CMD: Exec 0245: 12 42 4398 1671 1632   mask (M4+0398 tape 2 input block w2) to get BF -> (1632 num of successors fo 
DBG(48600357)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600357)> CPU DETAIL: Read R 0398: 0001000233030000 
DBG(48600358)> CPU DETAIL: Read S 1671: 0011000000000000 
DBG(48600359)> CPU DETAIL: Result: 0001000000000000 
DBG(48600360)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000001 
DBG(48600361)> CPU DETAIL: Write 1632: 0000000000000001 
DBG(48600363)> CPU CMD: Exec 0246: 00 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB    
DBG(48600364)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600364)> CPU DETAIL: Read R 0403: 3336000000000201 
DBG(48600365)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48600366)> CPU DETAIL: Result: 0000000000000001 
DBG(48600369)> CPU CMD: Exec 0247: 00 41 0000 1632 0000   set REG1 = BB-BF = num of successors not found   
DBG(48600370)> CPU DETAIL: Read S 1632: 0000000000000001 
DBG(48600371)> CPU DETAIL: Result: 0000000000000000 
DBG(48600374)> CPU CMD: Exec 0248: 00 63 0000 0253 0252   if =0 goto 0253 (BB=BF -> all successors found), if <0 goto 0252 (stop)      
DBG(48600375)> CPU DETAIL: REG1: 0000000000000000
DBG(48600375)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48600377)> CPU CMD: Exec 0253: 92 60 1698 1672 0000   restore pointer (1672) to +7 to point to first successor again for next even 
DBG(48600378)> CPU DETAIL: Read R 1698: 0000000000000007 
DBG(48600379)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000700000000 
DBG(48600380)> CPU DETAIL: Write 1672: 0000000700000000 
DBG(48600382)> CPU CMD: Exec 0254: 88 42 4403 1643 0000   mask (M4+0403 tape 2 input block w7) to get BB num of successors   
DBG(48600383)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600383)> CPU DETAIL: Read R 0403: 3336000000000201 
DBG(48600384)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48600385)> CPU DETAIL: Result: 0000000000000001 
DBG(48600386)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(48600389)> CPU CMD: Exec 0255: 00 41 4398 0000 4398   remove it from (M4+0398 tape 2 input block w2)    
DBG(48600390)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600390)> CPU DETAIL: Read R 0398: 0001000233030000 
DBG(48600391)> CPU DETAIL: Result: 0000000233030000 
DBG(48600392)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600392)> CPU DETAIL: Write 0398: 0000000233030000 
DBG(48600394)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48600395)> CPU DETAIL: Read R 1625: 0000000000000192 
DBG(48600396)> CPU DETAIL: Read S 1607: 0000000000000016 
DBG(48600397)> CPU DETAIL: Result: 0000000000000208 
DBG(48600400)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48600401)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48600402)> CPU DETAIL: Result: 9999999999999992 
DBG(48600405)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48600406)> CPU DETAIL: REG1: 9999999999999992
DBG(48600406)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(48600408)> CPU CMD: Exec 0261: 00 60 0259 0281 0273      
DBG(48600409)> CPU DETAIL: Read R 0259: 0060164602710262 
DBG(48600410)> CPU DETAIL: Transfer to T 
DBG(48600410)> CPU DETAIL: Write 0281: 0060164602710262 
DBG(48600412)> CPU CMD: Exec 0273: 96 60 1625 0000 0000   set instr ...           
DBG(48600413)> CPU DETAIL: Read R 1625: 0000000000000192 
DBG(48600414)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001920000 
DBG(48600417)> CPU CMD: Exec 0274: 00 41 0000 1648 0000   ... to write on tape 03 1401 1401+(1625 num of words in output block for tap 
DBG(48600418)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600419)> CPU DETAIL: Result: 0000000001910000 
DBG(48600422)> CPU CMD: Exec 0275: 00 40 1677 0000 0276   ... and block 1000   
DBG(48600423)> CPU DETAIL: Read R 1677: 0391140114011000 
DBG(48600424)> CPU DETAIL: Result: 0391140115921000 
DBG(48600425)> CPU DETAIL: Write 0276: 0391140115921000 
DBG(48600427)> CPU CMD: Exec 0276: 03 91 1401 1592 1000   write on tape 03 1401 1401+(1625 num of words in output block for tape 03)-1 
DBG(48600428)> CPU DETAIL: Tape operation on MT3, Addr 1401->1592, Block Number 1000
DBG(48600428)> MT CMD: Tape unit 3: init write
DBG(48600428)> MT EXP: Write from 1401 to 1592 as Block number 1000
DBG(48600428)> MT EXP: Start Of Block: 03 91 1401 1592 1000
DBG(48600428)> MT EXP: CRT 1401 to Tape: 0100000000111111 
DBG(48600428)> MT EXP: CRT 1402 to Tape: 0000000201000003 
DBG(48600428)> MT EXP: CRT 1403 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1404 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1405 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1406 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1407 to Tape: 2222444455660001 
DBG(48600428)> MT EXP: CRT 1408 to Tape: 0000000209999990 
DBG(48600428)> MT EXP: CRT 1409 to Tape: 0104110000000000 
DBG(48600428)> MT EXP: CRT 1410 to Tape: 0001209999999997 
DBG(48600428)> MT EXP: CRT 1411 to Tape: 0130000000121111 
DBG(48600428)> MT EXP: CRT 1412 to Tape: 0000000231000000 
DBG(48600428)> MT EXP: CRT 1413 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1414 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1415 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1416 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1417 to Tape: 3333444455660002 
DBG(48600428)> MT EXP: CRT 1418 to Tape: 0000000231010000 
DBG(48600428)> MT EXP: CRT 1419 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1420 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1421 to Tape: 0000000231020000 
DBG(48600428)> MT EXP: CRT 1422 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1423 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1424 to Tape: 0130000000131111 
DBG(48600428)> MT EXP: CRT 1425 to Tape: 0000000232000000 
DBG(48600428)> MT EXP: CRT 1426 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1427 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1428 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1429 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1430 to Tape: 3333444455660002 
DBG(48600428)> MT EXP: CRT 1431 to Tape: 0000000232010000 
DBG(48600428)> MT EXP: CRT 1432 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1433 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1434 to Tape: 0000000232090000 
DBG(48600428)> MT EXP: CRT 1435 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1436 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1437 to Tape: 0130000000141111 
DBG(48600428)> MT EXP: CRT 1438 to Tape: 0000000233000000 
DBG(48600428)> MT EXP: CRT 1439 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1440 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1441 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1442 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1443 to Tape: 3333444455660002 
DBG(48600428)> MT EXP: CRT 1444 to Tape: 0000000233010000 
DBG(48600428)> MT EXP: CRT 1445 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1446 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1447 to Tape: 0000000233020000 
DBG(48600428)> MT EXP: CRT 1448 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1449 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1450 to Tape: 0100000000151111 
DBG(48600428)> MT EXP: CRT 1451 to Tape: 0000000241000003 
DBG(48600428)> MT EXP: CRT 1452 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1453 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1454 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1455 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1456 to Tape: 2222444455660001 
DBG(48600428)> MT EXP: CRT 1457 to Tape: 0000000242009990 
DBG(48600428)> MT EXP: CRT 1458 to Tape: 0104110000000000 
DBG(48600428)> MT EXP: CRT 1459 to Tape: 0001209999999997 
DBG(48600428)> MT EXP: CRT 1460 to Tape: 0100000000111112 
DBG(48600428)> MT EXP: CRT 1461 to Tape: 0000000209999990 
DBG(48600428)> MT EXP: CRT 1462 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1463 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1464 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1465 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1466 to Tape: 0000000000000100 
DBG(48600428)> MT EXP: CRT 1467 to Tape: 0000000201000000 
DBG(48600428)> MT EXP: CRT 1468 to Tape: 0000000000033555 
DBG(48600428)> MT EXP: CRT 1469 to Tape: 0000000000033666 
DBG(48600428)> MT EXP: CRT 1470 to Tape: 0130000000121112 
DBG(48600428)> MT EXP: CRT 1471 to Tape: 0000000231010000 
DBG(48600428)> MT EXP: CRT 1472 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1473 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1474 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1475 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1476 to Tape: 3334444455660101 
DBG(48600428)> MT EXP: CRT 1477 to Tape: 0000000231000000 
DBG(48600428)> MT EXP: CRT 1478 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1479 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1480 to Tape: 0000000231030000 
DBG(48600428)> MT EXP: CRT 1481 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1482 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1483 to Tape: 0130000000121113 
DBG(48600428)> MT EXP: CRT 1484 to Tape: 0000000231020003 
DBG(48600428)> MT EXP: CRT 1485 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1486 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1487 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1488 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1489 to Tape: 3335444455660101 
DBG(48600428)> MT EXP: CRT 1490 to Tape: 0000000231000000 
DBG(48600428)> MT EXP: CRT 1491 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1492 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1493 to Tape: 0000000231030000 
DBG(48600428)> MT EXP: CRT 1494 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1495 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1496 to Tape: 0130000000131112 
DBG(48600428)> MT EXP: CRT 1497 to Tape: 0000000232010000 
DBG(48600428)> MT EXP: CRT 1498 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: Tape spacing: insert 43 words
DBG(48600428)> MT EXP: CRT 1499 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1500 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1501 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1502 to Tape: 3334444455660101 
DBG(48600428)> MT EXP: CRT 1503 to Tape: 0000000232000000 
DBG(48600428)> MT EXP: CRT 1504 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1505 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1506 to Tape: 0000000232090000 
DBG(48600428)> MT EXP: CRT 1507 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1508 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1509 to Tape: 0190000000141112 
DBG(48600428)> MT EXP: CRT 1510 to Tape: 0000000233010000 
DBG(48600428)> MT EXP: CRT 1511 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1512 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1513 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1514 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1515 to Tape: 3334444455660103 
DBG(48600428)> MT EXP: CRT 1516 to Tape: 0000000233000000 
DBG(48600428)> MT EXP: CRT 1517 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1518 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1519 to Tape: 0000000233020000 
DBG(48600428)> MT EXP: CRT 1520 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1521 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1522 to Tape: 0000000233030000 
DBG(48600428)> MT EXP: CRT 1523 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1524 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1525 to Tape: 0000000233090000 
DBG(48600428)> MT EXP: CRT 1526 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1527 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1528 to Tape: 0130000000151113 
DBG(48600428)> MT EXP: CRT 1529 to Tape: 0000000242009990 
DBG(48600428)> MT EXP: CRT 1530 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1531 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1532 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1533 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1534 to Tape: 0000000000000101 
DBG(48600428)> MT EXP: CRT 1535 to Tape: 0000000241000000 
DBG(48600428)> MT EXP: CRT 1536 to Tape: 0000000000033555 
DBG(48600428)> MT EXP: CRT 1537 to Tape: 0000000000033666 
DBG(48600428)> MT EXP: CRT 1538 to Tape: 0000000249999990 
DBG(48600428)> MT EXP: CRT 1539 to Tape: 0000000000033555 
DBG(48600428)> MT EXP: CRT 1540 to Tape: 0000000000033666 
DBG(48600428)> MT EXP: CRT 1541 to Tape: 0130000000121114 
DBG(48600428)> MT EXP: CRT 1542 to Tape: 0000000231030000 
DBG(48600428)> MT EXP: CRT 1543 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1544 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1545 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1546 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1547 to Tape: 3336000000000200 
DBG(48600428)> MT EXP: CRT 1548 to Tape: 0000000231010000 
DBG(48600428)> MT EXP: CRT 1549 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1550 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1551 to Tape: 0000000231020000 
DBG(48600428)> MT EXP: CRT 1552 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1553 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1554 to Tape: 0130000000131113 
DBG(48600428)> MT EXP: CRT 1555 to Tape: 0000000232090000 
DBG(48600428)> MT EXP: CRT 1556 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1557 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1558 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1559 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1560 to Tape: 3336000000000200 
DBG(48600428)> MT EXP: CRT 1561 to Tape: 0000000232000000 
DBG(48600428)> MT EXP: CRT 1562 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1563 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1564 to Tape: 0000000232010000 
DBG(48600428)> MT EXP: CRT 1565 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1566 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1567 to Tape: 0160000000141013 
DBG(48600428)> MT EXP: CRT 1568 to Tape: 0000000233020003 
DBG(48600428)> MT EXP: CRT 1569 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1570 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1571 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1572 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1573 to Tape: 3335444455660201 
DBG(48600428)> MT EXP: CRT 1574 to Tape: 0000000233000000 
DBG(48600428)> MT EXP: CRT 1575 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1576 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1577 to Tape: 0000000233010000 
DBG(48600428)> MT EXP: CRT 1578 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1579 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1580 to Tape: 0000000233030000 
DBG(48600428)> MT EXP: CRT 1581 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1582 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1583 to Tape: 0100000000151113 
DBG(48600428)> MT EXP: CRT 1584 to Tape: 0000000249999990 
DBG(48600428)> MT EXP: CRT 1585 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1586 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1587 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1588 to Tape: 0000000000000000 
DBG(48600428)> MT EXP: CRT 1589 to Tape: 0000000000000100 
DBG(48600428)> MT EXP: CRT 1590 to Tape: 0000000242009990 
DBG(48600428)> MT EXP: CRT 1591 to Tape: 0000000000033555 
DBG(48600428)> MT EXP: CRT 1592 to Tape: 0000000000033666 
DBG(48600428)> MT EXP: End Of Block: 03 91 1401 1592 1000 (192 words)
DBG(48600428)> MT DETAIL: Write block (4268 chars, used 9.87 inches, needs 67 msec) to tape 3
DBG(48600428)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.07% of medium (11.48 inches)
DBG(48600431)> CPU CMD: Exec 0277: 08 60 0277 0000 1730   call 1730 check write      
DBG(48600432)> CPU DETAIL: Read R 0277: 0860027700001730 
DBG(48600433)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600277 
DBG(48600434)> CPU DETAIL: Transfer to T 
DBG(48600436)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48600437)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48600438)> CPU DETAIL: Result: 0060000000000278 
DBG(48600439)> CPU DETAIL: Write 1742: 0060000000000278 
DBG(48600441)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48600442)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000278000000000 
DBG(48600445)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48600446)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48600447)> CPU DETAIL: Result: 0600276174700000 
DBG(48600448)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060027617470000 
DBG(48600449)> CPU DETAIL: Write 1734: 0060027617470000 
DBG(48600451)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48600452)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48600453)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48600455)> CPU CMD: Exec 1734: 00 60 0276 1747 0000      
DBG(48600456)> CPU DETAIL: Read R 0276: 0391140115921000 
DBG(48600457)> CPU DETAIL: Write 1747: 0391140115921000 
DBG(48600459)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48600460)> CPU DETAIL: Condition not present 
DBG(48600462)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48600463)> CPU DETAIL: Transfer to T 
DBG(48600465)> CPU CMD: Exec 1742: 00 60 0000 0000 0278   EXIT_CheckWrite   
DBG(48600466)> CPU DETAIL: Transfer to T 
DBG(48600468)> CPU CMD: Exec 0278: 00 40 1677 1639 1677   incr block number on write tape instr   
DBG(48600469)> CPU DETAIL: Read R 1677: 0391140114011000 
DBG(48600470)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600471)> CPU DETAIL: Result: 0391140114011001 
DBG(48600472)> CPU DETAIL: Write 1677: 0391140114011001 
DBG(48600474)> CPU CMD: Exec 0279: 00 60 1640 1625 0000   clear (1625 num of words in event output block for tape 03)   
DBG(48600475)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48600476)> CPU DETAIL: Write 1625: 0000000000000000 
DBG(48600478)> CPU CMD: Exec 0280: 00 60 1673 0266 0000   restore instr 0266   
DBG(48600479)> CPU DETAIL: Read R 1673: 0060439714010000 
DBG(48600480)> CPU DETAIL: Write 0266: 0060439714010000 
DBG(48600482)> CPU CMD: Exec 0281: 00 60 1646 0271 0262   goto 0366   
DBG(48600483)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48600484)> CPU DETAIL: Transfer to T 
DBG(48600484)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48600486)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48600487)> CPU DETAIL: M4: 0000 
DBG(48600488)> CPU DETAIL: M6: 0029 
DBG(48600489)> CPU DETAIL: Clear M8
DBG(48600489)> CPU DETAIL: M8: 0000 
DBG(48600492)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48600493)> CPU DETAIL: Read R 1612: 0000000000000015 
DBG(48600494)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600495)> CPU DETAIL: Result: 0000000000000016 
DBG(48600496)> CPU DETAIL: Write 1612: 0000000000000016 
DBG(48600498)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48600499)> CPU DETAIL: Read R 1607: 0000000000000016 
DBG(48600500)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(48600503)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48600504)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48600505)> CPU DETAIL: Result: 0858000100160266 
DBG(48600506)> CPU DETAIL: Write 0270: 0858000100160266 
DBG(48600508)> CPU CMD: Exec 0266: 00 60 4397 1401 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600509)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48600509)> CPU DETAIL: Read R 0397: 0160000000141014 
DBG(48600510)> CPU DETAIL: Write 1401: 0160000000141014 
DBG(48600512)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600513)> CPU DETAIL: Read R 0266: 0060439714010000 
DBG(48600514)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600515)> CPU DETAIL: Result: 0060439714020000 
DBG(48600516)> CPU DETAIL: Write 0266: 0060439714020000 
DBG(48600518)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600519)> CPU DETAIL: Read R 1625: 0000000000000000 
DBG(48600520)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600521)> CPU DETAIL: Result: 0000000000000001 
DBG(48600522)> CPU DETAIL: Write 1625: 0000000000000001 
DBG(48600524)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600525)> CPU DETAIL: M4: 0001 
DBG(48600526)> CPU DETAIL: M6: 0029 
DBG(48600527)> CPU DETAIL: M8: 0000 
DBG(48600530)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600531)> CPU DETAIL: M8: 0001 
DBG(48600532)> CPU DETAIL: Transfer to T 
DBG(48600534)> CPU CMD: Exec 0266: 00 60 4397 1402 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600535)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48600535)> CPU DETAIL: Read R 0398: 0000000233030000 
DBG(48600536)> CPU DETAIL: Write 1402: 0000000233030000 
DBG(48600538)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600539)> CPU DETAIL: Read R 0266: 0060439714020000 
DBG(48600540)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600541)> CPU DETAIL: Result: 0060439714030000 
DBG(48600542)> CPU DETAIL: Write 0266: 0060439714030000 
DBG(48600544)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600545)> CPU DETAIL: Read R 1625: 0000000000000001 
DBG(48600546)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600547)> CPU DETAIL: Result: 0000000000000002 
DBG(48600548)> CPU DETAIL: Write 1625: 0000000000000002 
DBG(48600550)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600551)> CPU DETAIL: M4: 0002 
DBG(48600552)> CPU DETAIL: M6: 0029 
DBG(48600553)> CPU DETAIL: M8: 0001 
DBG(48600556)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600557)> CPU DETAIL: M8: 0002 
DBG(48600558)> CPU DETAIL: Transfer to T 
DBG(48600560)> CPU CMD: Exec 0266: 00 60 4397 1403 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600561)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48600561)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48600562)> CPU DETAIL: Write 1403: 0000000000000000 
DBG(48600564)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600565)> CPU DETAIL: Read R 0266: 0060439714030000 
DBG(48600566)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600567)> CPU DETAIL: Result: 0060439714040000 
DBG(48600568)> CPU DETAIL: Write 0266: 0060439714040000 
DBG(48600570)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600571)> CPU DETAIL: Read R 1625: 0000000000000002 
DBG(48600572)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600573)> CPU DETAIL: Result: 0000000000000003 
DBG(48600574)> CPU DETAIL: Write 1625: 0000000000000003 
DBG(48600576)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600577)> CPU DETAIL: M4: 0003 
DBG(48600578)> CPU DETAIL: M6: 0029 
DBG(48600579)> CPU DETAIL: M8: 0002 
DBG(48600582)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600583)> CPU DETAIL: M8: 0003 
DBG(48600584)> CPU DETAIL: Transfer to T 
DBG(48600586)> CPU CMD: Exec 0266: 00 60 4397 1404 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600587)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48600587)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48600588)> CPU DETAIL: Write 1404: 0000000000000000 
DBG(48600590)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600591)> CPU DETAIL: Read R 0266: 0060439714040000 
DBG(48600592)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600593)> CPU DETAIL: Result: 0060439714050000 
DBG(48600594)> CPU DETAIL: Write 0266: 0060439714050000 
DBG(48600596)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600597)> CPU DETAIL: Read R 1625: 0000000000000003 
DBG(48600598)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600599)> CPU DETAIL: Result: 0000000000000004 
DBG(48600600)> CPU DETAIL: Write 1625: 0000000000000004 
DBG(48600602)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600603)> CPU DETAIL: M4: 0004 
DBG(48600604)> CPU DETAIL: M6: 0029 
DBG(48600605)> CPU DETAIL: M8: 0003 
DBG(48600608)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600609)> CPU DETAIL: M8: 0004 
DBG(48600610)> CPU DETAIL: Transfer to T 
DBG(48600612)> CPU CMD: Exec 0266: 00 60 4397 1405 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600613)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48600613)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48600614)> CPU DETAIL: Write 1405: 0000000000000000 
DBG(48600616)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600617)> CPU DETAIL: Read R 0266: 0060439714050000 
DBG(48600618)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600619)> CPU DETAIL: Result: 0060439714060000 
DBG(48600620)> CPU DETAIL: Write 0266: 0060439714060000 
DBG(48600622)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600623)> CPU DETAIL: Read R 1625: 0000000000000004 
DBG(48600624)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600625)> CPU DETAIL: Result: 0000000000000005 
DBG(48600626)> CPU DETAIL: Write 1625: 0000000000000005 
DBG(48600628)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600629)> CPU DETAIL: M4: 0005 
DBG(48600630)> CPU DETAIL: M6: 0029 
DBG(48600631)> CPU DETAIL: M8: 0004 
DBG(48600634)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600635)> CPU DETAIL: M8: 0005 
DBG(48600636)> CPU DETAIL: Transfer to T 
DBG(48600638)> CPU CMD: Exec 0266: 00 60 4397 1406 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600639)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48600639)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48600640)> CPU DETAIL: Write 1406: 0000000000000000 
DBG(48600642)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600643)> CPU DETAIL: Read R 0266: 0060439714060000 
DBG(48600644)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600645)> CPU DETAIL: Result: 0060439714070000 
DBG(48600646)> CPU DETAIL: Write 0266: 0060439714070000 
DBG(48600648)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600649)> CPU DETAIL: Read R 1625: 0000000000000005 
DBG(48600650)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600651)> CPU DETAIL: Result: 0000000000000006 
DBG(48600652)> CPU DETAIL: Write 1625: 0000000000000006 
DBG(48600654)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600655)> CPU DETAIL: M4: 0006 
DBG(48600656)> CPU DETAIL: M6: 0029 
DBG(48600657)> CPU DETAIL: M8: 0005 
DBG(48600660)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600661)> CPU DETAIL: M8: 0006 
DBG(48600662)> CPU DETAIL: Transfer to T 
DBG(48600664)> CPU CMD: Exec 0266: 00 60 4397 1407 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600665)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48600665)> CPU DETAIL: Read R 0403: 3336000000000201 
DBG(48600666)> CPU DETAIL: Write 1407: 3336000000000201 
DBG(48600668)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600669)> CPU DETAIL: Read R 0266: 0060439714070000 
DBG(48600670)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600671)> CPU DETAIL: Result: 0060439714080000 
DBG(48600672)> CPU DETAIL: Write 0266: 0060439714080000 
DBG(48600674)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600675)> CPU DETAIL: Read R 1625: 0000000000000006 
DBG(48600676)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600677)> CPU DETAIL: Result: 0000000000000007 
DBG(48600678)> CPU DETAIL: Write 1625: 0000000000000007 
DBG(48600680)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600681)> CPU DETAIL: M4: 0007 
DBG(48600682)> CPU DETAIL: M6: 0029 
DBG(48600683)> CPU DETAIL: M8: 0006 
DBG(48600686)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600687)> CPU DETAIL: M8: 0007 
DBG(48600688)> CPU DETAIL: Transfer to T 
DBG(48600690)> CPU CMD: Exec 0266: 00 60 4397 1408 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600691)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48600691)> CPU DETAIL: Read R 0404: 0000000233010000 
DBG(48600692)> CPU DETAIL: Write 1408: 0000000233010000 
DBG(48600694)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600695)> CPU DETAIL: Read R 0266: 0060439714080000 
DBG(48600696)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600697)> CPU DETAIL: Result: 0060439714090000 
DBG(48600698)> CPU DETAIL: Write 0266: 0060439714090000 
DBG(48600700)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600701)> CPU DETAIL: Read R 1625: 0000000000000007 
DBG(48600702)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600703)> CPU DETAIL: Result: 0000000000000008 
DBG(48600704)> CPU DETAIL: Write 1625: 0000000000000008 
DBG(48600706)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600707)> CPU DETAIL: M4: 0008 
DBG(48600708)> CPU DETAIL: M6: 0029 
DBG(48600709)> CPU DETAIL: M8: 0007 
DBG(48600712)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600713)> CPU DETAIL: M8: 0008 
DBG(48600714)> CPU DETAIL: Transfer to T 
DBG(48600716)> CPU CMD: Exec 0266: 00 60 4397 1409 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600717)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48600717)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48600718)> CPU DETAIL: Write 1409: 0000000000000000 
DBG(48600720)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600721)> CPU DETAIL: Read R 0266: 0060439714090000 
DBG(48600722)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600723)> CPU DETAIL: Result: 0060439714100000 
DBG(48600724)> CPU DETAIL: Write 0266: 0060439714100000 
DBG(48600726)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600727)> CPU DETAIL: Read R 1625: 0000000000000008 
DBG(48600728)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600729)> CPU DETAIL: Result: 0000000000000009 
DBG(48600730)> CPU DETAIL: Write 1625: 0000000000000009 
DBG(48600732)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600733)> CPU DETAIL: M4: 0009 
DBG(48600734)> CPU DETAIL: M6: 0029 
DBG(48600735)> CPU DETAIL: M8: 0008 
DBG(48600738)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600739)> CPU DETAIL: M8: 0009 
DBG(48600740)> CPU DETAIL: Transfer to T 
DBG(48600742)> CPU CMD: Exec 0266: 00 60 4397 1410 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600743)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48600743)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48600744)> CPU DETAIL: Write 1410: 0000000000000000 
DBG(48600746)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600747)> CPU DETAIL: Read R 0266: 0060439714100000 
DBG(48600748)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600749)> CPU DETAIL: Result: 0060439714110000 
DBG(48600750)> CPU DETAIL: Write 0266: 0060439714110000 
DBG(48600752)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600753)> CPU DETAIL: Read R 1625: 0000000000000009 
DBG(48600754)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600755)> CPU DETAIL: Result: 0000000000000010 
DBG(48600756)> CPU DETAIL: Write 1625: 0000000000000010 
DBG(48600758)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600759)> CPU DETAIL: M4: 0010 
DBG(48600760)> CPU DETAIL: M6: 0029 
DBG(48600761)> CPU DETAIL: M8: 0009 
DBG(48600764)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600765)> CPU DETAIL: M8: 0010 
DBG(48600766)> CPU DETAIL: Transfer to T 
DBG(48600768)> CPU CMD: Exec 0266: 00 60 4397 1411 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600769)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48600769)> CPU DETAIL: Read R 0407: 0000000233020000 
DBG(48600770)> CPU DETAIL: Write 1411: 0000000233020000 
DBG(48600772)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600773)> CPU DETAIL: Read R 0266: 0060439714110000 
DBG(48600774)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600775)> CPU DETAIL: Result: 0060439714120000 
DBG(48600776)> CPU DETAIL: Write 0266: 0060439714120000 
DBG(48600778)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600779)> CPU DETAIL: Read R 1625: 0000000000000010 
DBG(48600780)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600781)> CPU DETAIL: Result: 0000000000000011 
DBG(48600782)> CPU DETAIL: Write 1625: 0000000000000011 
DBG(48600784)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600785)> CPU DETAIL: M4: 0011 
DBG(48600786)> CPU DETAIL: M6: 0029 
DBG(48600787)> CPU DETAIL: M8: 0010 
DBG(48600790)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600791)> CPU DETAIL: M8: 0011 
DBG(48600792)> CPU DETAIL: Transfer to T 
DBG(48600794)> CPU CMD: Exec 0266: 00 60 4397 1412 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600795)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48600795)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48600796)> CPU DETAIL: Write 1412: 0000000000000000 
DBG(48600798)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600799)> CPU DETAIL: Read R 0266: 0060439714120000 
DBG(48600800)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600801)> CPU DETAIL: Result: 0060439714130000 
DBG(48600802)> CPU DETAIL: Write 0266: 0060439714130000 
DBG(48600804)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600805)> CPU DETAIL: Read R 1625: 0000000000000011 
DBG(48600806)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600807)> CPU DETAIL: Result: 0000000000000012 
DBG(48600808)> CPU DETAIL: Write 1625: 0000000000000012 
DBG(48600810)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600811)> CPU DETAIL: M4: 0012 
DBG(48600812)> CPU DETAIL: M6: 0029 
DBG(48600813)> CPU DETAIL: M8: 0011 
DBG(48600816)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600817)> CPU DETAIL: M8: 0012 
DBG(48600818)> CPU DETAIL: Transfer to T 
DBG(48600820)> CPU CMD: Exec 0266: 00 60 4397 1413 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600821)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48600821)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48600822)> CPU DETAIL: Write 1413: 0000000000000000 
DBG(48600824)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600825)> CPU DETAIL: Read R 0266: 0060439714130000 
DBG(48600826)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600827)> CPU DETAIL: Result: 0060439714140000 
DBG(48600828)> CPU DETAIL: Write 0266: 0060439714140000 
DBG(48600830)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600831)> CPU DETAIL: Read R 1625: 0000000000000012 
DBG(48600832)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600833)> CPU DETAIL: Result: 0000000000000013 
DBG(48600834)> CPU DETAIL: Write 1625: 0000000000000013 
DBG(48600836)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600837)> CPU DETAIL: M4: 0013 
DBG(48600838)> CPU DETAIL: M6: 0029 
DBG(48600839)> CPU DETAIL: M8: 0012 
DBG(48600842)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600843)> CPU DETAIL: M8: 0013 
DBG(48600844)> CPU DETAIL: Transfer to T 
DBG(48600846)> CPU CMD: Exec 0266: 00 60 4397 1414 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600847)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(48600847)> CPU DETAIL: Read R 0410: 0000000233090000 
DBG(48600848)> CPU DETAIL: Write 1414: 0000000233090000 
DBG(48600850)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600851)> CPU DETAIL: Read R 0266: 0060439714140000 
DBG(48600852)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600853)> CPU DETAIL: Result: 0060439714150000 
DBG(48600854)> CPU DETAIL: Write 0266: 0060439714150000 
DBG(48600856)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600857)> CPU DETAIL: Read R 1625: 0000000000000013 
DBG(48600858)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600859)> CPU DETAIL: Result: 0000000000000014 
DBG(48600860)> CPU DETAIL: Write 1625: 0000000000000014 
DBG(48600862)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600863)> CPU DETAIL: M4: 0014 
DBG(48600864)> CPU DETAIL: M6: 0029 
DBG(48600865)> CPU DETAIL: M8: 0013 
DBG(48600868)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600869)> CPU DETAIL: M8: 0014 
DBG(48600870)> CPU DETAIL: Transfer to T 
DBG(48600872)> CPU CMD: Exec 0266: 00 60 4397 1415 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600873)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(48600873)> CPU DETAIL: Read R 0411: 0000000000000000 
DBG(48600874)> CPU DETAIL: Write 1415: 0000000000000000 
DBG(48600876)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600877)> CPU DETAIL: Read R 0266: 0060439714150000 
DBG(48600878)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600879)> CPU DETAIL: Result: 0060439714160000 
DBG(48600880)> CPU DETAIL: Write 0266: 0060439714160000 
DBG(48600882)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600883)> CPU DETAIL: Read R 1625: 0000000000000014 
DBG(48600884)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600885)> CPU DETAIL: Result: 0000000000000015 
DBG(48600886)> CPU DETAIL: Write 1625: 0000000000000015 
DBG(48600888)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600889)> CPU DETAIL: M4: 0015 
DBG(48600890)> CPU DETAIL: M6: 0029 
DBG(48600891)> CPU DETAIL: M8: 0014 
DBG(48600894)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600895)> CPU DETAIL: M8: 0015 
DBG(48600896)> CPU DETAIL: Transfer to T 
DBG(48600898)> CPU CMD: Exec 0266: 00 60 4397 1416 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48600899)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(48600899)> CPU DETAIL: Read R 0412: 0000000000000000 
DBG(48600900)> CPU DETAIL: Write 1416: 0000000000000000 
DBG(48600902)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48600903)> CPU DETAIL: Read R 0266: 0060439714160000 
DBG(48600904)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600905)> CPU DETAIL: Result: 0060439714170000 
DBG(48600906)> CPU DETAIL: Write 0266: 0060439714170000 
DBG(48600908)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48600909)> CPU DETAIL: Read R 1625: 0000000000000015 
DBG(48600910)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48600911)> CPU DETAIL: Result: 0000000000000016 
DBG(48600912)> CPU DETAIL: Write 1625: 0000000000000016 
DBG(48600914)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48600915)> CPU DETAIL: M4: 0016 
DBG(48600916)> CPU DETAIL: M6: 0029 
DBG(48600917)> CPU DETAIL: M8: 0015 
DBG(48600920)> CPU CMD: Exec 0270: 08 58 0001 0016 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48600921)> CPU DETAIL: M8: 0016 
DBG(48600924)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48600927)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48600928)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48600929)> CPU DETAIL: Transfer to T 
DBG(48600929)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48600931)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48600932)> CPU DETAIL: Read R 1605: 0000000000000016 
DBG(48600933)> CPU DETAIL: Read S 1606: 0000000000000016 
DBG(48600934)> CPU DETAIL: Result: 0000000000000000 
DBG(48600937)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48600938)> CPU DETAIL: REG1: 0000000000000000
DBG(48600938)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48600940)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48600941)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48600942)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48600944)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48600945)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48600946)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48600948)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48600949)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48600950)> CPU DETAIL: Transfer to T 
DBG(48600950)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48600952)> CPU CMD: Exec 0095: 04 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48600953)> CPU DETAIL: Tape operation on MT4, Addr 0397->0000, Block Number 0000
DBG(48600953)> MT DATA: Tape unit 4: init read
DBG(48600953)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 4
DBG(48600953)> MT DETAIL: Tape record contents: D*0491000000000000CD
DBG(48600953)> MT EXP: End Of File mark sensed: 0491000000000000 
DBG(48600953)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.02% of medium (3.68 inches)
DBG(48600956)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48600957)> CPU DETAIL: Condition not present 
DBG(48600959)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48600960)> CPU DETAIL: Reset condition present 
DBG(48600960)> CPU DETAIL: Transfer to T 
DBG(48600962)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48600963)> CPU DETAIL: Read R 1626: 0000000000000013 
DBG(48600964)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48600965)> CPU DETAIL: Diff: REG1: 0000000000000013
DBG(48600968)> CPU CMD: Exec 0312: 00 60 1686 0310 0302   set 0310 to goto 0313, then goto 0302 to write 0798 event output block to ta 
DBG(48600969)> CPU DETAIL: Read R 1686: 0060000000000313 
DBG(48600970)> CPU DETAIL: Transfer to T 
DBG(48600970)> CPU DETAIL: Write 0310: 0060000000000313 
DBG(48600972)> CPU CMD: Exec 0302: 96 60 1626 0000 0000   set instr ...     
DBG(48600973)> CPU DETAIL: Read R 1626: 0000000000000013 
DBG(48600974)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48600977)> CPU CMD: Exec 0303: 00 41 0000 1648 0000   ... to write on tape 04 0798 0798+(1626 num of words in event output block)- 
DBG(48600978)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48600979)> CPU DETAIL: Result: 0000000000120000 
DBG(48600982)> CPU CMD: Exec 0304: 00 40 1652 0000 0305   ... and block 1001   
DBG(48600983)> CPU DETAIL: Read R 1652: 0291079807981004 
DBG(48600984)> CPU DETAIL: Result: 0291079808101004 
DBG(48600985)> CPU DETAIL: Write 0305: 0291079808101004 
DBG(48600987)> CPU CMD: Exec 0305: 02 91 0798 0810 1004   write on tape 04 0798 0798+(1626 num of words in event output block)-1    
DBG(48600988)> CPU DETAIL: Tape operation on MT2, Addr 0798->0810, Block Number 1004
DBG(48600988)> MT CMD: Tape unit 2: init write
DBG(48600988)> MT EXP: Write from 0798 to 0810 as Block number 1004
DBG(48600988)> MT EXP: Start Of Block: 02 91 0798 0810 1004
DBG(48600988)> MT EXP: CRT 0798 to Tape: 0130000000141015 
DBG(48600988)> MT EXP: CRT 0799 to Tape: 0000000233090000 
DBG(48600988)> MT EXP: CRT 0800 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0801 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0802 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0803 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0804 to Tape: 3336000000000200 
DBG(48600988)> MT EXP: CRT 0805 to Tape: 0000000233010000 
DBG(48600988)> MT EXP: CRT 0806 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0807 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0808 to Tape: 0000000233030000 
DBG(48600988)> MT EXP: CRT 0809 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: CRT 0810 to Tape: 0000000000000000 
DBG(48600988)> MT EXP: End Of Block: 02 91 0798 0810 1004 (13 words)
DBG(48600988)> MT DETAIL: Write block (272 chars, used 2.03 inches, needs 11 msec) to tape 2
DBG(48600988)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (2.03 inches)
DBG(48600991)> CPU CMD: Exec 0306: 08 60 0306 0000 1730   call 1730 check write   
DBG(48600992)> CPU DETAIL: Read R 0306: 0860030600001730 
DBG(48600993)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600306 
DBG(48600994)> CPU DETAIL: Transfer to T 
DBG(48600996)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48600997)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48600998)> CPU DETAIL: Result: 0060000000000307 
DBG(48600999)> CPU DETAIL: Write 1742: 0060000000000307 
DBG(48601001)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48601002)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000307000000000 
DBG(48601005)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48601006)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48601007)> CPU DETAIL: Result: 0600305174700000 
DBG(48601008)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060030517470000 
DBG(48601009)> CPU DETAIL: Write 1734: 0060030517470000 
DBG(48601011)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48601012)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48601013)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48601015)> CPU CMD: Exec 1734: 00 60 0305 1747 0000      
DBG(48601016)> CPU DETAIL: Read R 0305: 0291079808101004 
DBG(48601017)> CPU DETAIL: Write 1747: 0291079808101004 
DBG(48601019)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48601020)> CPU DETAIL: Condition not present 
DBG(48601022)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48601023)> CPU DETAIL: Transfer to T 
DBG(48601025)> CPU CMD: Exec 1742: 00 60 0000 0000 0307   EXIT_CheckWrite   
DBG(48601026)> CPU DETAIL: Transfer to T 
DBG(48601028)> CPU CMD: Exec 0307: 00 40 1652 1639 1652   incr block number on write tape instr   
DBG(48601029)> CPU DETAIL: Read R 1652: 0291079807981004 
DBG(48601030)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601031)> CPU DETAIL: Result: 0291079807981005 
DBG(48601032)> CPU DETAIL: Write 1652: 0291079807981005 
DBG(48601034)> CPU CMD: Exec 0308: 00 60 1640 1626 0000   clear (1626 num of words in event output block)   
DBG(48601035)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601036)> CPU DETAIL: Write 1626: 0000000000000000 
DBG(48601038)> CPU CMD: Exec 0309: 00 60 1680 0296 0000   restore instr 0296   
DBG(48601039)> CPU DETAIL: Read R 1680: 0060859807980000 
DBG(48601040)> CPU DETAIL: Write 0296: 0060859807980000 
DBG(48601042)> CPU CMD: Exec 0310: 00 60 0000 0000 0313      
DBG(48601043)> CPU DETAIL: Transfer to T 
DBG(48601045)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48601046)> CPU DETAIL: Read R 1630: 0000000000000000 
DBG(48601047)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48601048)> CPU DETAIL: Result: 0100000000000000 
DBG(48601049)> CPU DETAIL: Write 1630: 0100000000000000 
DBG(48601051)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48601052)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601053)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48601054)> CPU DETAIL: Transfer to T 
DBG(48601056)> CPU CMD: Exec 0316: 00 42 0095 1653 0000   get tape number 0N 0..0 from 0095 tape read instr   
DBG(48601057)> CPU DETAIL: Read R 0095: 0494039700000000 
DBG(48601058)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48601059)> CPU DETAIL: Result: 0400000000000000 
DBG(48601062)> CPU CMD: Exec 0317: 00 72 1681 0000 0325   if tape number <> 02 0..0 goto 0325   
DBG(48601063)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601064)> CPU DETAIL: Diff: REG1: 9800000000000000
DBG(48601065)> CPU DETAIL: Transfer to T 
DBG(48601067)> CPU CMD: Exec 0325: 00 41 0095 1681 0095   set tape read instr to tape 02       
DBG(48601068)> CPU DETAIL: Read R 0095: 0494039700000000 
DBG(48601069)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601070)> CPU DETAIL: Result: 0294039700000000 
DBG(48601071)> CPU DETAIL: Write 0095: 0294039700000000 
DBG(48601073)> CPU CMD: Exec 0326: 00 40 1652 1681 1652   set tape write instr to tape 04   
DBG(48601074)> CPU DETAIL: Read R 1652: 0291079807981005 
DBG(48601075)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601076)> CPU DETAIL: Result: 0491079807981005 
DBG(48601077)> CPU DETAIL: Write 1652: 0491079807981005 
DBG(48601079)> CPU CMD: Exec 0327: 00 40 1683 1681 0332   set instr 0332 to write end of file to tape 02   
DBG(48601080)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48601081)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601082)> CPU DETAIL: Result: 0291000000000000 
DBG(48601083)> CPU DETAIL: Write 0332: 0291000000000000 
DBG(48601085)> CPU CMD: Exec 0328: 00 40 1684 1685 0333   set instr 0333 to rewind tape 04   
DBG(48601086)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48601087)> CPU DETAIL: Read S 1685: 0400000000000000 
DBG(48601088)> CPU DETAIL: Result: 0498000000000000 
DBG(48601089)> CPU DETAIL: Write 0333: 0498000000000000 
DBG(48601091)> CPU CMD: Exec 0329: 00 40 1684 1681 0334   set instr 0334 to rewind tape 02   
DBG(48601092)> CPU DETAIL: Read R 1684: 0098000000000000 
DBG(48601093)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601094)> CPU DETAIL: Result: 0298000000000000 
DBG(48601095)> CPU DETAIL: Write 0334: 0298000000000000 
DBG(48601097)> CPU CMD: Exec 0330: 00 40 1683 1685 0335   set instr 0335 to write end of file to tape 04   
DBG(48601098)> CPU DETAIL: Read R 1683: 0091000000000000 
DBG(48601099)> CPU DETAIL: Read S 1685: 0400000000000000 
DBG(48601100)> CPU DETAIL: Result: 0491000000000000 
DBG(48601101)> CPU DETAIL: Write 0335: 0491000000000000 
DBG(48601103)> CPU CMD: Exec 0331: 00 60 0333 0336 0332   set instr 0336 to rewind tape 04, goto 0332    
DBG(48601104)> CPU DETAIL: Read R 0333: 0498000000000000 
DBG(48601105)> CPU DETAIL: Transfer to T 
DBG(48601105)> CPU DETAIL: Write 0336: 0498000000000000 
DBG(48601107)> CPU CMD: Exec 0332: 02 91 0000 0000 0000   write eof on conjugate input tape   
DBG(48601108)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601108)> MT CMD: Tape unit 2: init write
DBG(48601108)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48601108)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48601108)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.57 inches)
DBG(48601111)> CPU CMD: Exec 0333: 04 98 0000 0000 0000   rewind input tape   
DBG(48601112)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601112)> MT CMD: Tape unit 4: init rewind (current medium used 3.68 inches)
DBG(48601112)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48601112)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601114)> CPU CMD: Exec 0334: 02 98 0000 0000 0000   rewind conjugate input tape   
DBG(48601115)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601115)> MT CMD: Tape unit 2: init rewind (current medium used 3.57 inches)
DBG(48601115)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48601115)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601117)> CPU CMD: Exec 0335: 04 91 0000 0000 0000   write eof on input tape   
DBG(48601118)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601118)> MT CMD: Tape unit 4: init write
DBG(48601118)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(48601118)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(48601118)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48601121)> CPU CMD: Exec 0336: 04 98 0000 0000 0000   rewind input tape   
DBG(48601122)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601122)> MT CMD: Tape unit 4: init rewind (current medium used 1.54 inches)
DBG(48601122)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48601122)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601124)> CPU CMD: Exec 0337: 00 60 0000 0000 0121   goto 0121   
DBG(48601125)> CPU DETAIL: Transfer to T 
DBG(48601127)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48601128)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601129)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48601131)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48601132)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48601133)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48601135)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48601136)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48601137)> CPU DETAIL: Transfer to T 
DBG(48601137)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48601139)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48601140)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48601140)> MT DATA: Tape unit 2: init read
DBG(48601140)> MT DETAIL: Read tape record (272 chars, used 2.03 inches, needs 11 msec) from tape 2
DBG(48601140)> MT DETAIL: Tape record contents: D*0291079808101004C*0130000000141015C*0000000233090000C*00000000000000...
DBG(48601140)> MT EXP: Start Of Block Word: 0291079808101004
DBG(48601140)> MT EXP: Read Tape Block number 1004
DBG(48601140)> MT EXP: Read forward addr 0397 to 0000
DBG(48601140)> MT EXP: Tape to CRT 0397: 0130000000141015 
DBG(48601140)> MT EXP: Tape to CRT 0398: 0000000233090000 
DBG(48601140)> MT EXP: Tape to CRT 0399: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0400: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0401: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0402: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0403: 3336000000000200 
DBG(48601140)> MT EXP: Tape to CRT 0404: 0000000233010000 
DBG(48601140)> MT EXP: Tape to CRT 0405: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0406: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0407: 0000000233030000 
DBG(48601140)> MT EXP: Tape to CRT 0408: 0000000000000000 
DBG(48601140)> MT EXP: Tape to CRT 0409: 0000000000000000 
DBG(48601140)> MT EXP: End Of Block Word: 0291079808101004, data words in block: 13
DBG(48601140)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (2.03 inches)
DBG(48601143)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48601144)> CPU DETAIL: Condition not present 
DBG(48601146)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48601147)> CPU DETAIL: Condition not present 
DBG(48601149)> CPU CMD: Exec 0098: 00 60 0000 1603 0000   REG1 -> (1603) = Start of block      
DBG(48601150)> CPU DETAIL: Write 1603: 0291079808101004 
DBG(48601152)> CPU CMD: Exec 0099: 04 42 0000 1637 1604   Mask and shift start of block: bbbb -> (1604)        02 90 aaaa bbbb nnnn ma 
DBG(48601153)> CPU DETAIL: Read S 1637: 0000000011110000 
DBG(48601154)> CPU DETAIL: Result: 0000000008100000 
DBG(48601155)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000810 
DBG(48601156)> CPU DETAIL: Write 1604: 0000000000000810 
DBG(48601158)> CPU CMD: Exec 0100: 08 42 1603 1638 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(48601159)> CPU DETAIL: Read R 1603: 0291079808101004 
DBG(48601160)> CPU DETAIL: Read S 1638: 0000111100000000 
DBG(48601161)> CPU DETAIL: Result: 0000079800000000 
DBG(48601162)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000798 
DBG(48601165)> CPU CMD: Exec 0101: 00 41 1604 0000 1605   (1604) - REG2 -> (1605)   
DBG(48601166)> CPU DETAIL: Read R 1604: 0000000000000810 
DBG(48601167)> CPU DETAIL: Result: 0000000000000012 
DBG(48601168)> CPU DETAIL: Write 1605: 0000000000000012 
DBG(48601170)> CPU CMD: Exec 0102: 00 40 1639 0000 1605          + 1 -> (1605)                                 1605=total number of wo 
DBG(48601171)> CPU DETAIL: Read R 1639: 0000000000000001 
DBG(48601172)> CPU DETAIL: Result: 0000000000000013 
DBG(48601173)> CPU DETAIL: Write 1605: 0000000000000013 
DBG(48601175)> CPU CMD: Exec 0103: 00 51 0000 0000 0000   Clear M4   
DBG(48601176)> CPU DETAIL: Clear M4
DBG(48601176)> CPU DETAIL: M4: 0000 
DBG(48601177)> CPU DETAIL: M6: 0029 
DBG(48601178)> CPU DETAIL: M8: 0016 
DBG(48601181)> CPU CMD: Exec 0104: 00 60 1640 1630 0118   nop / clear 1630, goto 0118   
DBG(48601182)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601183)> CPU DETAIL: Transfer to T 
DBG(48601183)> CPU DETAIL: Write 1630: 0000000000000000 
DBG(48601185)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48601186)> CPU DETAIL: Read R 1605: 0000000000000013 
DBG(48601187)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48601188)> CPU DETAIL: Result: 0000000000000013 
DBG(48601191)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48601192)> CPU DETAIL: REG1: 0000000000000013
DBG(48601192)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48601194)> CPU CMD: Exec 0124: 00 60 0403 1608 0000   (0403 tape 2 event block w7) -> (1608 event rec w7) w7 = TSTS TTTT RS PR AA  
DBG(48601195)> CPU DETAIL: Read R 0403: 3336000000000200 
DBG(48601196)> CPU DETAIL: Write 1608: 3336000000000200 
DBG(48601198)> CPU CMD: Exec 0125: 13 60 4397 1607 0000   (M4 + 0397 event block tape 2) -> (1607 event rec len = value NNN from w1)   
DBG(48601199)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48601199)> CPU DETAIL: Read R 0397: 0130000000141015 
DBG(48601200)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(48601201)> CPU DETAIL: Write 1607: 0000000000000013 
DBG(48601203)> CPU CMD: Exec 0126: 02 42 1608 1642 1609   Mask (event w7) with 0..0 1100 Shift 2 Right         1609=num of predecesors 
DBG(48601204)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48601205)> CPU DETAIL: Read S 1642: 0000000000001100 
DBG(48601206)> CPU DETAIL: Result: 0000000000000200 
DBG(48601207)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(48601208)> CPU DETAIL: Write 1609: 0000000000000002 
DBG(48601210)> CPU CMD: Exec 0127: 00 42 1608 1643 1610   Mask (event w7) with 0..0 11                         1610=num of successors  
DBG(48601211)> CPU DETAIL: Read R 1608: 3336000000000200 
DBG(48601212)> CPU DETAIL: Read S 1643: 0000000000000011 
DBG(48601213)> CPU DETAIL: Result: 0000000000000000 
DBG(48601214)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48601216)> CPU CMD: Exec 0128: 00 72 1640 1609 0131   if num predecessors w7 <> zero goto 0131   
DBG(48601217)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601218)> CPU DETAIL: Read S 1609: 0000000000000002 
DBG(48601219)> CPU DETAIL: Diff: REG1: 9999999999999998
DBG(48601220)> CPU DETAIL: Transfer to T 
DBG(48601222)> CPU CMD: Exec 0131: 00 72 1610 1640 0133   if num successors w7 <> zero goto 0133   
DBG(48601223)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48601224)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48601225)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48601228)> CPU CMD: Exec 0132: 00 60 1693 0140 0133   ???   
DBG(48601229)> CPU DETAIL: Read R 1693: 0060169902720256 
DBG(48601230)> CPU DETAIL: Transfer to T 
DBG(48601230)> CPU DETAIL: Write 0140: 0060169902720256 
DBG(48601232)> CPU CMD: Exec 0133: 96 34 1609 1644 1609   mult (1609) x 3     
DBG(48601233)> CPU DETAIL: Read R 1609: 0000000000000002 
DBG(48601234)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48601235)> CPU DETAIL: Float: REG1: 88 0 2 0000 0000 0000 (0.000000)
DBG(48601235)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48601236)> CPU DETAIL: Result: 84 0 6 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48601237)> CPU DETAIL: Shift : 96 0 0 0000 0000 0006 00000000 00000000 (0.000000)
DBG(48601238)> CPU DETAIL: Write 1609: 9600000000000006 
DBG(48601240)> CPU CMD: Exec 0134: 96 34 1610 1644 1610   mult (1610) x 3   
DBG(48601241)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48601242)> CPU DETAIL: Read S 1644: 0000000300000000 
DBG(48601243)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(48601243)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(48601244)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48601245)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(48601246)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48601248)> CPU CMD: Exec 0135: 00 42 1609 1711 1609   (1609 = number of words used by predecessors)   
DBG(48601249)> CPU DETAIL: Read R 1609: 9600000000000006 
DBG(48601250)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48601251)> CPU DETAIL: Result: 0000000000000006 
DBG(48601252)> CPU DETAIL: Write 1609: 0000000000000006 
DBG(48601254)> CPU CMD: Exec 0136: 00 42 1610 1711 1610   (1610 = number of words used by successors)   
DBG(48601255)> CPU DETAIL: Read R 1610: 0000000000000000 
DBG(48601256)> CPU DETAIL: Read S 1711: 0000000000001111 
DBG(48601257)> CPU DETAIL: Result: 0000000000000000 
DBG(48601258)> CPU DETAIL: Write 1610: 0000000000000000 
DBG(48601260)> CPU CMD: Exec 0137: 92 60 1607 0000 0000   set instr 0124 ...   
DBG(48601261)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48601262)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000001300000000 
DBG(48601265)> CPU CMD: Exec 0138: 00 40 0124 0000 0124   ... to access next event rec in block   
DBG(48601266)> CPU DETAIL: Read R 0124: 0060040316080000 
DBG(48601267)> CPU DETAIL: Result: 0060041616080000 
DBG(48601268)> CPU DETAIL: Write 0124: 0060041616080000 
DBG(48601270)> CPU CMD: Exec 0139: 00 40 1607 1606 1606   (1606 words processed from input tape 02 block) += (1607 event rec len NNN)  
DBG(48601271)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48601272)> CPU DETAIL: Read S 1606: 0000000000000000 
DBG(48601273)> CPU DETAIL: Result: 0000000000000013 
DBG(48601274)> CPU DETAIL: Write 1606: 0000000000000013 
DBG(48601276)> CPU CMD: Exec 0140: 00 60 1699 0272 0256   nop   
DBG(48601277)> CPU DETAIL: Read R 1699: 0060164601400118 
DBG(48601278)> CPU DETAIL: Transfer to T 
DBG(48601278)> CPU DETAIL: Write 0272: 0060164601400118 
DBG(48601280)> CPU CMD: Exec 0256: 00 40 1625 1607 0000   (1625 num of word in output block for tape 03) + (1607 event rec len NNN (co 
DBG(48601281)> CPU DETAIL: Read R 1625: 0000000000000016 
DBG(48601282)> CPU DETAIL: Read S 1607: 0000000000000013 
DBG(48601283)> CPU DETAIL: Result: 0000000000000029 
DBG(48601286)> CPU CMD: Exec 0257: 00 41 1650 0000 0000   200 - REG1                             check if room on output block    
DBG(48601287)> CPU DETAIL: Read R 1650: 0000000000000200 
DBG(48601288)> CPU DETAIL: Result: 0000000000000171 
DBG(48601291)> CPU CMD: Exec 0258: 00 63 0000 0260 0261   if =0 goto 0260, if <0 goto 0261       for event rec thant comes from tape 2 
DBG(48601292)> CPU DETAIL: REG1: 0000000000000171
DBG(48601292)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(48601294)> CPU CMD: Exec 0259: 00 60 1646 0271 0262   set instr 0271 to nop. goto 0262 (enough room, save to tape 3 and continue)  
DBG(48601295)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48601296)> CPU DETAIL: Transfer to T 
DBG(48601296)> CPU DETAIL: Write 0271: 0060000000000000 
DBG(48601298)> CPU CMD: Exec 0262: 00 54 0000 0000 0000   clear M8   
DBG(48601299)> CPU DETAIL: M4: 0000 
DBG(48601300)> CPU DETAIL: M6: 0029 
DBG(48601301)> CPU DETAIL: Clear M8
DBG(48601301)> CPU DETAIL: M8: 0000 
DBG(48601304)> CPU CMD: Exec 0263: 00 40 1612 1639 1612   incr (1612 num of events on result tape 3)   
DBG(48601305)> CPU DETAIL: Read R 1612: 0000000000000016 
DBG(48601306)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601307)> CPU DETAIL: Result: 0000000000000017 
DBG(48601308)> CPU DETAIL: Write 1612: 0000000000000017 
DBG(48601310)> CPU CMD: Exec 0264: 96 60 1607 0000 0000   set instr 0270 to ...   
DBG(48601311)> CPU DETAIL: Read R 1607: 0000000000000013 
DBG(48601312)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(48601315)> CPU CMD: Exec 0265: 00 40 1674 0000 0270   ... loop on M8 up to (1607 event rec len NNN from tape 2)   
DBG(48601316)> CPU DETAIL: Read R 1674: 0858000100000266 
DBG(48601317)> CPU DETAIL: Result: 0858000100130266 
DBG(48601318)> CPU DETAIL: Write 0270: 0858000100130266 
DBG(48601320)> CPU CMD: Exec 0266: 00 60 4397 1417 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601321)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(48601321)> CPU DETAIL: Read R 0397: 0130000000141015 
DBG(48601322)> CPU DETAIL: Write 1417: 0130000000141015 
DBG(48601324)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601325)> CPU DETAIL: Read R 0266: 0060439714170000 
DBG(48601326)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601327)> CPU DETAIL: Result: 0060439714180000 
DBG(48601328)> CPU DETAIL: Write 0266: 0060439714180000 
DBG(48601330)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601331)> CPU DETAIL: Read R 1625: 0000000000000016 
DBG(48601332)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601333)> CPU DETAIL: Result: 0000000000000017 
DBG(48601334)> CPU DETAIL: Write 1625: 0000000000000017 
DBG(48601336)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601337)> CPU DETAIL: M4: 0001 
DBG(48601338)> CPU DETAIL: M6: 0029 
DBG(48601339)> CPU DETAIL: M8: 0000 
DBG(48601342)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601343)> CPU DETAIL: M8: 0001 
DBG(48601344)> CPU DETAIL: Transfer to T 
DBG(48601346)> CPU CMD: Exec 0266: 00 60 4397 1418 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601347)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(48601347)> CPU DETAIL: Read R 0398: 0000000233090000 
DBG(48601348)> CPU DETAIL: Write 1418: 0000000233090000 
DBG(48601350)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601351)> CPU DETAIL: Read R 0266: 0060439714180000 
DBG(48601352)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601353)> CPU DETAIL: Result: 0060439714190000 
DBG(48601354)> CPU DETAIL: Write 0266: 0060439714190000 
DBG(48601356)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601357)> CPU DETAIL: Read R 1625: 0000000000000017 
DBG(48601358)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601359)> CPU DETAIL: Result: 0000000000000018 
DBG(48601360)> CPU DETAIL: Write 1625: 0000000000000018 
DBG(48601362)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601363)> CPU DETAIL: M4: 0002 
DBG(48601364)> CPU DETAIL: M6: 0029 
DBG(48601365)> CPU DETAIL: M8: 0001 
DBG(48601368)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601369)> CPU DETAIL: M8: 0002 
DBG(48601370)> CPU DETAIL: Transfer to T 
DBG(48601372)> CPU CMD: Exec 0266: 00 60 4397 1419 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601373)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(48601373)> CPU DETAIL: Read R 0399: 0000000000000000 
DBG(48601374)> CPU DETAIL: Write 1419: 0000000000000000 
DBG(48601376)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601377)> CPU DETAIL: Read R 0266: 0060439714190000 
DBG(48601378)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601379)> CPU DETAIL: Result: 0060439714200000 
DBG(48601380)> CPU DETAIL: Write 0266: 0060439714200000 
DBG(48601382)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601383)> CPU DETAIL: Read R 1625: 0000000000000018 
DBG(48601384)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601385)> CPU DETAIL: Result: 0000000000000019 
DBG(48601386)> CPU DETAIL: Write 1625: 0000000000000019 
DBG(48601388)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601389)> CPU DETAIL: M4: 0003 
DBG(48601390)> CPU DETAIL: M6: 0029 
DBG(48601391)> CPU DETAIL: M8: 0002 
DBG(48601394)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601395)> CPU DETAIL: M8: 0003 
DBG(48601396)> CPU DETAIL: Transfer to T 
DBG(48601398)> CPU CMD: Exec 0266: 00 60 4397 1420 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601399)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(48601399)> CPU DETAIL: Read R 0400: 0000000000000000 
DBG(48601400)> CPU DETAIL: Write 1420: 0000000000000000 
DBG(48601402)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601403)> CPU DETAIL: Read R 0266: 0060439714200000 
DBG(48601404)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601405)> CPU DETAIL: Result: 0060439714210000 
DBG(48601406)> CPU DETAIL: Write 0266: 0060439714210000 
DBG(48601408)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601409)> CPU DETAIL: Read R 1625: 0000000000000019 
DBG(48601410)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601411)> CPU DETAIL: Result: 0000000000000020 
DBG(48601412)> CPU DETAIL: Write 1625: 0000000000000020 
DBG(48601414)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601415)> CPU DETAIL: M4: 0004 
DBG(48601416)> CPU DETAIL: M6: 0029 
DBG(48601417)> CPU DETAIL: M8: 0003 
DBG(48601420)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601421)> CPU DETAIL: M8: 0004 
DBG(48601422)> CPU DETAIL: Transfer to T 
DBG(48601424)> CPU CMD: Exec 0266: 00 60 4397 1421 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601425)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(48601425)> CPU DETAIL: Read R 0401: 0000000000000000 
DBG(48601426)> CPU DETAIL: Write 1421: 0000000000000000 
DBG(48601428)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601429)> CPU DETAIL: Read R 0266: 0060439714210000 
DBG(48601430)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601431)> CPU DETAIL: Result: 0060439714220000 
DBG(48601432)> CPU DETAIL: Write 0266: 0060439714220000 
DBG(48601434)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601435)> CPU DETAIL: Read R 1625: 0000000000000020 
DBG(48601436)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601437)> CPU DETAIL: Result: 0000000000000021 
DBG(48601438)> CPU DETAIL: Write 1625: 0000000000000021 
DBG(48601440)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601441)> CPU DETAIL: M4: 0005 
DBG(48601442)> CPU DETAIL: M6: 0029 
DBG(48601443)> CPU DETAIL: M8: 0004 
DBG(48601446)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601447)> CPU DETAIL: M8: 0005 
DBG(48601448)> CPU DETAIL: Transfer to T 
DBG(48601450)> CPU CMD: Exec 0266: 00 60 4397 1422 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601451)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(48601451)> CPU DETAIL: Read R 0402: 0000000000000000 
DBG(48601452)> CPU DETAIL: Write 1422: 0000000000000000 
DBG(48601454)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601455)> CPU DETAIL: Read R 0266: 0060439714220000 
DBG(48601456)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601457)> CPU DETAIL: Result: 0060439714230000 
DBG(48601458)> CPU DETAIL: Write 0266: 0060439714230000 
DBG(48601460)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601461)> CPU DETAIL: Read R 1625: 0000000000000021 
DBG(48601462)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601463)> CPU DETAIL: Result: 0000000000000022 
DBG(48601464)> CPU DETAIL: Write 1625: 0000000000000022 
DBG(48601466)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601467)> CPU DETAIL: M4: 0006 
DBG(48601468)> CPU DETAIL: M6: 0029 
DBG(48601469)> CPU DETAIL: M8: 0005 
DBG(48601472)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601473)> CPU DETAIL: M8: 0006 
DBG(48601474)> CPU DETAIL: Transfer to T 
DBG(48601476)> CPU CMD: Exec 0266: 00 60 4397 1423 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601477)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(48601477)> CPU DETAIL: Read R 0403: 3336000000000200 
DBG(48601478)> CPU DETAIL: Write 1423: 3336000000000200 
DBG(48601480)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601481)> CPU DETAIL: Read R 0266: 0060439714230000 
DBG(48601482)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601483)> CPU DETAIL: Result: 0060439714240000 
DBG(48601484)> CPU DETAIL: Write 0266: 0060439714240000 
DBG(48601486)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601487)> CPU DETAIL: Read R 1625: 0000000000000022 
DBG(48601488)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601489)> CPU DETAIL: Result: 0000000000000023 
DBG(48601490)> CPU DETAIL: Write 1625: 0000000000000023 
DBG(48601492)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601493)> CPU DETAIL: M4: 0007 
DBG(48601494)> CPU DETAIL: M6: 0029 
DBG(48601495)> CPU DETAIL: M8: 0006 
DBG(48601498)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601499)> CPU DETAIL: M8: 0007 
DBG(48601500)> CPU DETAIL: Transfer to T 
DBG(48601502)> CPU CMD: Exec 0266: 00 60 4397 1424 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601503)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(48601503)> CPU DETAIL: Read R 0404: 0000000233010000 
DBG(48601504)> CPU DETAIL: Write 1424: 0000000233010000 
DBG(48601506)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601507)> CPU DETAIL: Read R 0266: 0060439714240000 
DBG(48601508)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601509)> CPU DETAIL: Result: 0060439714250000 
DBG(48601510)> CPU DETAIL: Write 0266: 0060439714250000 
DBG(48601512)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601513)> CPU DETAIL: Read R 1625: 0000000000000023 
DBG(48601514)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601515)> CPU DETAIL: Result: 0000000000000024 
DBG(48601516)> CPU DETAIL: Write 1625: 0000000000000024 
DBG(48601518)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601519)> CPU DETAIL: M4: 0008 
DBG(48601520)> CPU DETAIL: M6: 0029 
DBG(48601521)> CPU DETAIL: M8: 0007 
DBG(48601524)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601525)> CPU DETAIL: M8: 0008 
DBG(48601526)> CPU DETAIL: Transfer to T 
DBG(48601528)> CPU CMD: Exec 0266: 00 60 4397 1425 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601529)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(48601529)> CPU DETAIL: Read R 0405: 0000000000000000 
DBG(48601530)> CPU DETAIL: Write 1425: 0000000000000000 
DBG(48601532)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601533)> CPU DETAIL: Read R 0266: 0060439714250000 
DBG(48601534)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601535)> CPU DETAIL: Result: 0060439714260000 
DBG(48601536)> CPU DETAIL: Write 0266: 0060439714260000 
DBG(48601538)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601539)> CPU DETAIL: Read R 1625: 0000000000000024 
DBG(48601540)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601541)> CPU DETAIL: Result: 0000000000000025 
DBG(48601542)> CPU DETAIL: Write 1625: 0000000000000025 
DBG(48601544)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601545)> CPU DETAIL: M4: 0009 
DBG(48601546)> CPU DETAIL: M6: 0029 
DBG(48601547)> CPU DETAIL: M8: 0008 
DBG(48601550)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601551)> CPU DETAIL: M8: 0009 
DBG(48601552)> CPU DETAIL: Transfer to T 
DBG(48601554)> CPU CMD: Exec 0266: 00 60 4397 1426 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601555)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(48601555)> CPU DETAIL: Read R 0406: 0000000000000000 
DBG(48601556)> CPU DETAIL: Write 1426: 0000000000000000 
DBG(48601558)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601559)> CPU DETAIL: Read R 0266: 0060439714260000 
DBG(48601560)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601561)> CPU DETAIL: Result: 0060439714270000 
DBG(48601562)> CPU DETAIL: Write 0266: 0060439714270000 
DBG(48601564)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601565)> CPU DETAIL: Read R 1625: 0000000000000025 
DBG(48601566)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601567)> CPU DETAIL: Result: 0000000000000026 
DBG(48601568)> CPU DETAIL: Write 1625: 0000000000000026 
DBG(48601570)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601571)> CPU DETAIL: M4: 0010 
DBG(48601572)> CPU DETAIL: M6: 0029 
DBG(48601573)> CPU DETAIL: M8: 0009 
DBG(48601576)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601577)> CPU DETAIL: M8: 0010 
DBG(48601578)> CPU DETAIL: Transfer to T 
DBG(48601580)> CPU CMD: Exec 0266: 00 60 4397 1427 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601581)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(48601581)> CPU DETAIL: Read R 0407: 0000000233030000 
DBG(48601582)> CPU DETAIL: Write 1427: 0000000233030000 
DBG(48601584)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601585)> CPU DETAIL: Read R 0266: 0060439714270000 
DBG(48601586)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601587)> CPU DETAIL: Result: 0060439714280000 
DBG(48601588)> CPU DETAIL: Write 0266: 0060439714280000 
DBG(48601590)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601591)> CPU DETAIL: Read R 1625: 0000000000000026 
DBG(48601592)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601593)> CPU DETAIL: Result: 0000000000000027 
DBG(48601594)> CPU DETAIL: Write 1625: 0000000000000027 
DBG(48601596)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601597)> CPU DETAIL: M4: 0011 
DBG(48601598)> CPU DETAIL: M6: 0029 
DBG(48601599)> CPU DETAIL: M8: 0010 
DBG(48601602)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601603)> CPU DETAIL: M8: 0011 
DBG(48601604)> CPU DETAIL: Transfer to T 
DBG(48601606)> CPU CMD: Exec 0266: 00 60 4397 1428 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601607)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(48601607)> CPU DETAIL: Read R 0408: 0000000000000000 
DBG(48601608)> CPU DETAIL: Write 1428: 0000000000000000 
DBG(48601610)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601611)> CPU DETAIL: Read R 0266: 0060439714280000 
DBG(48601612)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601613)> CPU DETAIL: Result: 0060439714290000 
DBG(48601614)> CPU DETAIL: Write 0266: 0060439714290000 
DBG(48601616)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601617)> CPU DETAIL: Read R 1625: 0000000000000027 
DBG(48601618)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601619)> CPU DETAIL: Result: 0000000000000028 
DBG(48601620)> CPU DETAIL: Write 1625: 0000000000000028 
DBG(48601622)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601623)> CPU DETAIL: M4: 0012 
DBG(48601624)> CPU DETAIL: M6: 0029 
DBG(48601625)> CPU DETAIL: M8: 0011 
DBG(48601628)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601629)> CPU DETAIL: M8: 0012 
DBG(48601630)> CPU DETAIL: Transfer to T 
DBG(48601632)> CPU CMD: Exec 0266: 00 60 4397 1429 0000   (M4+0397 input block tape 2) -> (1401 tape 3 event output block)   
DBG(48601633)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(48601633)> CPU DETAIL: Read R 0409: 0000000000000000 
DBG(48601634)> CPU DETAIL: Write 1429: 0000000000000000 
DBG(48601636)> CPU CMD: Exec 0267: 00 40 0266 1648 0266   incr_S   
DBG(48601637)> CPU DETAIL: Read R 0266: 0060439714290000 
DBG(48601638)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601639)> CPU DETAIL: Result: 0060439714300000 
DBG(48601640)> CPU DETAIL: Write 0266: 0060439714300000 
DBG(48601642)> CPU CMD: Exec 0268: 00 40 1625 1639 1625   incr (1625 num of word in output block for tape 03)   
DBG(48601643)> CPU DETAIL: Read R 1625: 0000000000000028 
DBG(48601644)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601645)> CPU DETAIL: Result: 0000000000000029 
DBG(48601646)> CPU DETAIL: Write 1625: 0000000000000029 
DBG(48601648)> CPU CMD: Exec 0269: 00 50 0001 0000 0000   incr M4   
DBG(48601649)> CPU DETAIL: M4: 0013 
DBG(48601650)> CPU DETAIL: M6: 0029 
DBG(48601651)> CPU DETAIL: M8: 0012 
DBG(48601654)> CPU CMD: Exec 0270: 08 58 0001 0013 0266   loop, incr M8, if M8<>(1607 event rec len NNN from tape 2) goto 0266   
DBG(48601655)> CPU DETAIL: M8: 0013 
DBG(48601658)> CPU CMD: Exec 0271: 00 60 0000 0000 0000   nop (if enough room on tape 3) /    
DBG(48601661)> CPU CMD: Exec 0272: 00 60 1646 0140 0118   set 0140 to nop, goto 0118 process next event in tape 2   
DBG(48601662)> CPU DETAIL: Read R 1646: 0060000000000000 
DBG(48601663)> CPU DETAIL: Transfer to T 
DBG(48601663)> CPU DETAIL: Write 0140: 0060000000000000 
DBG(48601665)> CPU CMD: Exec 0118: 00 41 1605 1606 0000   (1605 number of words in tape 2 block) - (1606 number of words already read  
DBG(48601666)> CPU DETAIL: Read R 1605: 0000000000000013 
DBG(48601667)> CPU DETAIL: Read S 1606: 0000000000000013 
DBG(48601668)> CPU DETAIL: Result: 0000000000000000 
DBG(48601671)> CPU CMD: Exec 0119: 00 63 0124 0121 0000   if >0 goto 0124, =0 goto 0121 (if all events from event block processed)   
DBG(48601672)> CPU DETAIL: REG1: 0000000000000000
DBG(48601672)> CPU DETAIL: Transfer to S (REG1=0)
DBG(48601674)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48601675)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601676)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48601678)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48601679)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48601680)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48601682)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48601683)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48601684)> CPU DETAIL: Transfer to T 
DBG(48601684)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48601686)> CPU CMD: Exec 0095: 02 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48601687)> CPU DETAIL: Tape operation on MT2, Addr 0397->0000, Block Number 0000
DBG(48601687)> MT DATA: Tape unit 2: init read
DBG(48601687)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 2
DBG(48601687)> MT DETAIL: Tape record contents: D*0291000000000000CD
DBG(48601687)> MT EXP: End Of File mark sensed: 0291000000000000 
DBG(48601687)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.57 inches)
DBG(48601690)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48601691)> CPU DETAIL: Condition not present 
DBG(48601693)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48601694)> CPU DETAIL: Reset condition present 
DBG(48601694)> CPU DETAIL: Transfer to T 
DBG(48601696)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48601697)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48601698)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48601699)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48601700)> CPU DETAIL: Transfer to T 
DBG(48601702)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48601703)> CPU DETAIL: Read R 1630: 0000000000000000 
DBG(48601704)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48601705)> CPU DETAIL: Result: 0100000000000000 
DBG(48601706)> CPU DETAIL: Write 1630: 0100000000000000 
DBG(48601708)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48601709)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601710)> CPU DETAIL: Diff: REG1: 0100000000000000
DBG(48601711)> CPU DETAIL: Transfer to T 
DBG(48601713)> CPU CMD: Exec 0316: 00 42 0095 1653 0000   get tape number 0N 0..0 from 0095 tape read instr   
DBG(48601714)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48601715)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48601716)> CPU DETAIL: Result: 0200000000000000 
DBG(48601719)> CPU CMD: Exec 0317: 00 72 1681 0000 0325   if tape number <> 02 0..0 goto 0325   
DBG(48601720)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601721)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48601724)> CPU CMD: Exec 0318: 00 40 0095 1681 0095   set tape read instr to tape 04   
DBG(48601725)> CPU DETAIL: Read R 0095: 0294039700000000 
DBG(48601726)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601727)> CPU DETAIL: Result: 0494039700000000 
DBG(48601728)> CPU DETAIL: Write 0095: 0494039700000000 
DBG(48601730)> CPU CMD: Exec 0319: 00 41 1652 1681 1652   set tape write instr to tape 02   
DBG(48601731)> CPU DETAIL: Read R 1652: 0491079807981005 
DBG(48601732)> CPU DETAIL: Read S 1681: 0200000000000000 
DBG(48601733)> CPU DETAIL: Result: 0291079807981005 
DBG(48601734)> CPU DETAIL: Write 1652: 0291079807981005 
DBG(48601736)> CPU CMD: Exec 0320: 00 40 1685 1683 0332   set instr 0332 to write end of file to tape 04   
DBG(48601737)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48601738)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48601739)> CPU DETAIL: Result: 0491000000000000 
DBG(48601740)> CPU DETAIL: Write 0332: 0491000000000000 
DBG(48601742)> CPU CMD: Exec 0321: 00 40 1681 1684 0333   set instr 0333 to rewind tape 02   
DBG(48601743)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601744)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48601745)> CPU DETAIL: Result: 0298000000000000 
DBG(48601746)> CPU DETAIL: Write 0333: 0298000000000000 
DBG(48601748)> CPU CMD: Exec 0322: 00 40 1685 1684 0334   set instr 0334 to rewind tape 04   
DBG(48601749)> CPU DETAIL: Read R 1685: 0400000000000000 
DBG(48601750)> CPU DETAIL: Read S 1684: 0098000000000000 
DBG(48601751)> CPU DETAIL: Result: 0498000000000000 
DBG(48601752)> CPU DETAIL: Write 0334: 0498000000000000 
DBG(48601754)> CPU CMD: Exec 0323: 00 40 1681 1683 0335   set instr 0335 to write end of file to tape 02   
DBG(48601755)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601756)> CPU DETAIL: Read S 1683: 0091000000000000 
DBG(48601757)> CPU DETAIL: Result: 0291000000000000 
DBG(48601758)> CPU DETAIL: Write 0335: 0291000000000000 
DBG(48601760)> CPU CMD: Exec 0324: 00 60 0333 0336 0332   set instr 0336 to rewind tape 02, goto 0332    
DBG(48601761)> CPU DETAIL: Read R 0333: 0298000000000000 
DBG(48601762)> CPU DETAIL: Transfer to T 
DBG(48601762)> CPU DETAIL: Write 0336: 0298000000000000 
DBG(48601764)> CPU CMD: Exec 0332: 04 91 0000 0000 0000   write eof on conjugate input tape   
DBG(48601765)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601765)> MT CMD: Tape unit 4: init write
DBG(48601765)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(48601765)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(48601765)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48601768)> CPU CMD: Exec 0333: 02 98 0000 0000 0000   rewind input tape   
DBG(48601769)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601769)> MT CMD: Tape unit 2: init rewind (current medium used 3.57 inches)
DBG(48601769)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48601769)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601771)> CPU CMD: Exec 0334: 04 98 0000 0000 0000   rewind conjugate input tape   
DBG(48601772)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601772)> MT CMD: Tape unit 4: init rewind (current medium used 1.54 inches)
DBG(48601772)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48601772)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601774)> CPU CMD: Exec 0335: 02 91 0000 0000 0000   write eof on input tape   
DBG(48601775)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601775)> MT CMD: Tape unit 2: init write
DBG(48601775)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(48601775)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(48601775)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48601778)> CPU CMD: Exec 0336: 02 98 0000 0000 0000   rewind input tape   
DBG(48601779)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601779)> MT CMD: Tape unit 2: init rewind (current medium used 1.54 inches)
DBG(48601779)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(48601779)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601781)> CPU CMD: Exec 0337: 00 60 0000 0000 0121   goto 0121   
DBG(48601782)> CPU DETAIL: Transfer to T 
DBG(48601784)> CPU CMD: Exec 0121: 00 60 1640 1606 0000   clear (1606 number of words already processed from block read from input tap 
DBG(48601785)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601786)> CPU DETAIL: Write 1606: 0000000000000000 
DBG(48601788)> CPU CMD: Exec 0122: 00 60 1645 0124 0000   restore instr 0124   
DBG(48601789)> CPU DETAIL: Read R 1645: 0060040316080000 
DBG(48601790)> CPU DETAIL: Write 0124: 0060040316080000 
DBG(48601792)> CPU CMD: Exec 0123: 00 60 1656 0104 0095   set instr 0104 (clear 1630 goto 0118), goto read next tape 02 block   
DBG(48601793)> CPU DETAIL: Read R 1656: 0060164016300118 
DBG(48601794)> CPU DETAIL: Transfer to T 
DBG(48601794)> CPU DETAIL: Write 0104: 0060164016300118 
DBG(48601796)> CPU CMD: Exec 0095: 04 94 0397 0000 0000   read input tape 02 -> (0397 input event block tape 2)    
DBG(48601797)> CPU DETAIL: Tape operation on MT4, Addr 0397->0000, Block Number 0000
DBG(48601797)> MT DATA: Tape unit 4: init read
DBG(48601797)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 4
DBG(48601797)> MT DETAIL: Tape record contents: D*0491000000000000CD
DBG(48601797)> MT EXP: End Of File mark sensed: 0491000000000000 
DBG(48601797)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(48601800)> CPU CMD: Exec 0096: 08 68 0096 0000 1713   if tape check, call 1713 reread      
DBG(48601801)> CPU DETAIL: Condition not present 
DBG(48601803)> CPU CMD: Exec 0097: 00 67 0000 0000 0311   if end of file goto 0311   
DBG(48601804)> CPU DETAIL: Reset condition present 
DBG(48601804)> CPU DETAIL: Transfer to T 
DBG(48601806)> CPU CMD: Exec 0311: 00 70 1626 1640 0313   if (1626 num of words in event output block at addr 0798) = zero goto 0313   
DBG(48601807)> CPU DETAIL: Read R 1626: 0000000000000000 
DBG(48601808)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48601809)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48601810)> CPU DETAIL: Transfer to T 
DBG(48601812)> CPU CMD: Exec 0313: 00 40 1630 1653 1630   (1630) += 01 0..0     
DBG(48601813)> CPU DETAIL: Read R 1630: 0100000000000000 
DBG(48601814)> CPU DETAIL: Read S 1653: 0100000000000000 
DBG(48601815)> CPU DETAIL: Result: 0200000000000000 
DBG(48601816)> CPU DETAIL: Write 1630: 0200000000000000 
DBG(48601818)> CPU CMD: Exec 0314: 00 72 1681 0000 0316   if <> 02 0..0 goto 0316   
DBG(48601819)> CPU DETAIL: Read R 1681: 0200000000000000 
DBG(48601820)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(48601823)> CPU CMD: Exec 0315: 00 60 0000 0000 0395   goto 0395 flush output block to tape 03   
DBG(48601824)> CPU DETAIL: Transfer to T 
DBG(48601826)> CPU CMD: Exec 0395: 00 70 1625 1640 0366   if (1625 num of words in output block for tape 03) = zero goto 0366   
DBG(48601827)> CPU DETAIL: Read R 1625: 0000000000000029 
DBG(48601828)> CPU DETAIL: Read S 1640: 0000000000000000 
DBG(48601829)> CPU DETAIL: Diff: REG1: 0000000000000029
DBG(48601832)> CPU CMD: Exec 0396: 00 60 1709 0281 0273   set exit for 0273 routine to 0366, goto 0273 write output block to tape 03   
DBG(48601833)> CPU DETAIL: Read R 1709: 0060000000000366 
DBG(48601834)> CPU DETAIL: Transfer to T 
DBG(48601834)> CPU DETAIL: Write 0281: 0060000000000366 
DBG(48601836)> CPU CMD: Exec 0273: 96 60 1625 0000 0000   set instr ...           
DBG(48601837)> CPU DETAIL: Read R 1625: 0000000000000029 
DBG(48601838)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000290000 
DBG(48601841)> CPU CMD: Exec 0274: 00 41 0000 1648 0000   ... to write on tape 03 1401 1401+(1625 num of words in output block for tap 
DBG(48601842)> CPU DETAIL: Read S 1648: 0000000000010000 
DBG(48601843)> CPU DETAIL: Result: 0000000000280000 
DBG(48601846)> CPU CMD: Exec 0275: 00 40 1677 0000 0276   ... and block 1000   
DBG(48601847)> CPU DETAIL: Read R 1677: 0391140114011001 
DBG(48601848)> CPU DETAIL: Result: 0391140114291001 
DBG(48601849)> CPU DETAIL: Write 0276: 0391140114291001 
DBG(48601851)> CPU CMD: Exec 0276: 03 91 1401 1429 1001   write on tape 03 1401 1401+(1625 num of words in output block for tape 03)-1 
DBG(48601852)> CPU DETAIL: Tape operation on MT3, Addr 1401->1429, Block Number 1001
DBG(48601852)> MT CMD: Tape unit 3: init write
DBG(48601852)> MT EXP: Write from 1401 to 1429 as Block number 1001
DBG(48601852)> MT EXP: Start Of Block: 03 91 1401 1429 1001
DBG(48601852)> MT EXP: CRT 1401 to Tape: 0160000000141014 
DBG(48601852)> MT EXP: CRT 1402 to Tape: 0000000233030000 
DBG(48601852)> MT EXP: CRT 1403 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1404 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1405 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1406 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1407 to Tape: 3336000000000201 
DBG(48601852)> MT EXP: CRT 1408 to Tape: 0000000233010000 
DBG(48601852)> MT EXP: CRT 1409 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1410 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1411 to Tape: 0000000233020000 
DBG(48601852)> MT EXP: CRT 1412 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1413 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1414 to Tape: 0000000233090000 
DBG(48601852)> MT EXP: CRT 1415 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1416 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1417 to Tape: 0130000000141015 
DBG(48601852)> MT EXP: CRT 1418 to Tape: 0000000233090000 
DBG(48601852)> MT EXP: CRT 1419 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1420 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1421 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1422 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1423 to Tape: 3336000000000200 
DBG(48601852)> MT EXP: CRT 1424 to Tape: 0000000233010000 
DBG(48601852)> MT EXP: CRT 1425 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1426 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1427 to Tape: 0000000233030000 
DBG(48601852)> MT EXP: CRT 1428 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: CRT 1429 to Tape: 0000000000000000 
DBG(48601852)> MT EXP: End Of Block: 03 91 1401 1429 1001 (29 words)
DBG(48601852)> MT DETAIL: Write block (560 chars, used 2.60 inches, needs 15 msec) to tape 3
DBG(48601852)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.08% of medium (14.08 inches)
DBG(48601855)> CPU CMD: Exec 0277: 08 60 0277 0000 1730   call 1730 check write      
DBG(48601856)> CPU DETAIL: Read R 0277: 0860027700001730 
DBG(48601857)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600277 
DBG(48601858)> CPU DETAIL: Transfer to T 
DBG(48601860)> CPU CMD: Exec 1730: 00 40 1749 0000 1742   Check write routine: save exit transfer in (1742 EXIT_CheckWrite)   
DBG(48601861)> CPU DETAIL: Read R 1749: 0059999991400001 
DBG(48601862)> CPU DETAIL: Result: 0060000000000278 
DBG(48601863)> CPU DETAIL: Write 1742: 0060000000000278 
DBG(48601865)> CPU CMD: Exec 1731: 91 60 0000 0000 0000      
DBG(48601866)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000278000000000 
DBG(48601869)> CPU CMD: Exec 1732: 01 40 1750 0000 1734      
DBG(48601870)> CPU DETAIL: Read R 1750: 0599998174700000 
DBG(48601871)> CPU DETAIL: Result: 0600276174700000 
DBG(48601872)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060027617470000 
DBG(48601873)> CPU DETAIL: Write 1734: 0060027617470000 
DBG(48601875)> CPU CMD: Exec 1733: 00 60 1753 1744 0000      
DBG(48601876)> CPU DETAIL: Read R 1753: 0060173817441744 
DBG(48601877)> CPU DETAIL: Write 1744: 0060173817441744 
DBG(48601879)> CPU CMD: Exec 1734: 00 60 0276 1747 0000      
DBG(48601880)> CPU DETAIL: Read R 0276: 0391140114291001 
DBG(48601881)> CPU DETAIL: Write 1747: 0391140114291001 
DBG(48601883)> CPU CMD: Exec 1735: 00 68 0000 0000 1737   if tape signal on write goto 1737   
DBG(48601884)> CPU DETAIL: Condition not present 
DBG(48601886)> CPU CMD: Exec 1736: 00 60 0000 0000 1742   go to exit word   
DBG(48601887)> CPU DETAIL: Transfer to T 
DBG(48601889)> CPU CMD: Exec 1742: 00 60 0000 0000 0278   EXIT_CheckWrite   
DBG(48601890)> CPU DETAIL: Transfer to T 
DBG(48601892)> CPU CMD: Exec 0278: 00 40 1677 1639 1677   incr block number on write tape instr   
DBG(48601893)> CPU DETAIL: Read R 1677: 0391140114011001 
DBG(48601894)> CPU DETAIL: Read S 1639: 0000000000000001 
DBG(48601895)> CPU DETAIL: Result: 0391140114011002 
DBG(48601896)> CPU DETAIL: Write 1677: 0391140114011002 
DBG(48601898)> CPU CMD: Exec 0279: 00 60 1640 1625 0000   clear (1625 num of words in event output block for tape 03)   
DBG(48601899)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601900)> CPU DETAIL: Write 1625: 0000000000000000 
DBG(48601902)> CPU CMD: Exec 0280: 00 60 1673 0266 0000   restore instr 0266   
DBG(48601903)> CPU DETAIL: Read R 1673: 0060439714010000 
DBG(48601904)> CPU DETAIL: Write 0266: 0060439714010000 
DBG(48601906)> CPU CMD: Exec 0281: 00 60 0000 0000 0366   goto 0366   
DBG(48601907)> CPU DETAIL: Transfer to T 
DBG(48601909)> CPU CMD: Exec 0366: 00 80 1629 0001 0000   print (1629 output tape label with week info)   
DBG(48601910)> CPU DETAIL: Read R 1629: 3907000000000000 
DBG(48601911)> CPU DETAIL: Write 0001: 3907000000000000 
DBG(48601913)> CPU CMD: Exec 0367: 00 80 1640 0002 0000   print zero   
DBG(48601914)> CPU DETAIL: Read R 1640: 0000000000000000 
DBG(48601915)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(48601917)> CPU CMD: Exec 0368: 00 80 0000 0003 0000   print zero   
DBG(48601918)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(48601920)> CPU CMD: Exec 0369: 00 80 0000 0004 0000   print zero   
DBG(48601921)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(48601923)> CPU CMD: Exec 0370: 00 80 0000 0005 0000   print zero   
DBG(48601924)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(48601926)> CPU CMD: Exec 0371: 00 80 0000 0006 0000   print zero   
DBG(48601927)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(48601929)> CPU CMD: Exec 0372: 00 83 1612 0007 0349   print (1612 num of events on result tape 3), goto 0349   
DBG(48601930)> CPU DETAIL: Read R 1612: 0000000000000017 
DBG(48601931)> CPU DETAIL: Transfer to T 
DBG(48601931)> CPU DETAIL: Write 0007: 0000000000000017 
DBG(48601931)> LP CMD: Printer LP1: init cycle special
DBG(48601931)> LP CMD:      0001: 3907000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(48601931)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000017 
DBG(48601931)> LP CMD: Printer 1: ready (fast mode)
DBG(48601933)> CPU CMD: Exec 0349: 03 91 0000 0000 0000   write end of file on tape 3   
DBG(48601934)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(48601934)> MT CMD: Tape unit 3: init write
DBG(48601934)> MT EXP: End Of File mark: 02d 03 0091 0000 0000
DBG(48601934)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 3
DBG(48601934)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.09% of medium (15.62 inches)
DBG(48601937)> CPU CMD: Exec 0350: 01 98 0000 0000 0000   rewind tape 1   
DBG(48601938)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(48601938)> MT CMD: Tape unit 1: init rewind (current medium used 18.82 inches)
DBG(48601938)> MT CMD: Tape unit 1: rewind time (0 sec)
DBG(48601938)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601940)> CPU CMD: Exec 0351: 02 98 0000 0000 0000   rewind tape 2      
DBG(48601941)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(48601941)> MT CMD: Tape unit 2: already at BOT
DBG(48601943)> CPU CMD: Exec 0352: 03 98 0000 0000 0000   rewind tape 3   
DBG(48601944)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(48601944)> MT CMD: Tape unit 3: init rewind (current medium used 15.62 inches)
DBG(48601944)> MT CMD: Tape unit 3: rewind time (0 sec)
DBG(48601944)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601946)> CPU CMD: Exec 0353: 04 98 0000 0000 0000   rewind tape 4      
DBG(48601947)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(48601947)> MT CMD: Tape unit 4: init rewind (current medium used 1.54 inches)
DBG(48601947)> MT CMD: Tape unit 4: rewind time (0 sec)
DBG(48601947)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601949)> CPU CMD: Exec 0354: 05 98 0000 0000 0000   rewind tape 5   
DBG(48601950)> CPU DETAIL: Tape operation on MT5, Addr 0000->0000, Block Number 0000
DBG(48601950)> MT CMD: Tape unit 5: init rewind (current medium used 2.60 inches)
DBG(48601950)> MT CMD: Tape unit 5: rewind time (0 sec)
DBG(48601950)> CPU DETAIL: ... Tape 5 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(48601952)> CPU CMD: Exec 0355: 06 98 0000 0000 0000   rewind tape 6      
DBG(48601953)> CPU DETAIL: Tape operation on MT6, Addr 0000->0000, Block Number 0000
DBG(48601953)> MT CMD: Tape unit 6: already at BOT
DBG(48601955)> CPU CMD: Exec 0356: 09 98 0000 0000 0000   rewind tape 9 program    
DBG(48601956)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(48601956)> MT CMD: Tape unit 3: already at BOT
DBG(48601958)> CPU CMD: Exec 0357: 00 60 0013 0001 0001   set stop instr on addr 0001, goto 0001: run finished ok, no errors   
DBG(48601959)> CPU DETAIL: Read R 0013: 0061000000000000 
DBG(48601960)> CPU DETAIL: Transfer to T 
DBG(48601960)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(48601962)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(48601963)> CPU DETAIL: Programmed STOP 
DBG(48601963)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(49378692)> CPU DETAIL: End Wait for TAPE animation (142 msec)
DBG(49378692)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(49378692)> CPU DETAIL: Measured speed: 3692005 Ticks per second
DBG(49378692)> CPU DETAIL: Measured speed: Clock at 3.69 MHz
DBG(49378692)> CPU DETAIL: Speed is x3.7 relative to original hardware
DBG(49378692)> CPU DETAIL: Instructions executed: 7558
DBG(49378692)> CPU DETAIL: Measured speed: 13306 Instructions per second (IPS) achieved
DBG(49378692)> CPU DETAIL: Run elapsed 568 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)

*** print out of sequenced events in tape

loaded ../PERT_Run06/print_ev_prog.txt from 0008 to 1996 address

*** print events in tape in printer_EV.txt

DBG(49378692)> MT EXP: Tape unit 1: attach file mt_EV_Seq.tap
DBG(49378692)> MT EXP: Tape unit 2: attach file mt_EV_prt.tap
DBG(49378692)> CPU DETAIL: Measured speed: init because start of run
DBG(49378694)> CPU CMD: Exec 0008: 00 57 0000 0000 0000   0008        57                                           Clear M4 M6 M8   
DBG(49378695)> CPU DETAIL: Clear M4
DBG(49378695)> CPU DETAIL: M4: 0000 
DBG(49378696)> CPU DETAIL: Clear M6
DBG(49378696)> CPU DETAIL: M6: 0000 
DBG(49378697)> CPU DETAIL: Clear M8
DBG(49378697)> CPU DETAIL: M8: 0000 
DBG(49378700)> CPU CMD: Exec 0009: 09 98 0000 0000 0000            09 98                                           rewind tape 09 prog 
DBG(49378701)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(49378701)> MT EXP: Tape 3: command 98 attempted on tape without file attached
DBG(49378701)> CPU DETAIL: Tape Check signaled
DBG(49378701)> CPU DETAIL: Continue because switch TAPE CHECK set to proceed
DBG(49378703)> CPU CMD: Exec 0010: 00 60 1221 1211 0000               TR       ZERO        EVCOUNT   
DBG(49378704)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378705)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(49378707)> CPU CMD: Exec 0011: 01 94 1219 1219 0000            01 94       TEMP1       TEMP1       0000        read tape 01 label  
DBG(49378708)> CPU DETAIL: Tape operation on MT1, Addr 1219->1219, Block Number 0000
DBG(49378708)> MT DATA: Tape unit 1: init read
DBG(49378708)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 1
DBG(49378708)> MT DETAIL: Tape record contents: D*0391162916290000C*3907000000000000C*0391162916290000CD
DBG(49378708)> MT EXP: Start Of Block Word: 0391162916290000
DBG(49378708)> MT EXP: Read Tape Block number 0000
DBG(49378708)> MT EXP: Read forward addr 1219 to 1219
DBG(49378708)> MT EXP: Tape to CRT 1219: 3907000000000000 
DBG(49378708)> MT EXP: End Of Block Word: 0391162916290000, data words in block: 1
DBG(49378708)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(49378711)> CPU CMD: Exec 0012: 00 68 0012 0000 1991               68       *                       REREAD      if tape check Call  
DBG(49378712)> CPU DETAIL: Condition not present 
DBG(49378714)> CPU CMD: Exec 0013: 00 80 1219 0001 0000               80       TEMP1       0001                    print label for tap 
DBG(49378715)> CPU DETAIL: Read R 1219: 3907000000000000 
DBG(49378716)> CPU DETAIL: Write 0001: 3907000000000000 
DBG(49378718)> CPU CMD: Exec 0014: 00 80 1221 0002 0000               80       ZERO        0002   
DBG(49378719)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378720)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(49378722)> CPU CMD: Exec 0015: 00 80 0000 0003 0000               80                   0003   
DBG(49378723)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49378725)> CPU CMD: Exec 0016: 00 80 0000 0004 0000               80                   0004   
DBG(49378726)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49378728)> CPU CMD: Exec 0017: 00 80 0000 0005 0000               80                   0005   
DBG(49378729)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49378731)> CPU CMD: Exec 0018: 00 80 0000 0006 0000               80                   0006   
DBG(49378732)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49378734)> CPU CMD: Exec 0019: 00 81 1221 0007 0000               81       ZERO        0007                    print   
DBG(49378735)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378736)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(49378736)> LP CMD: Printer LP1: init cycle 
DBG(49378736)> LP CMD:      0001: 3907000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(49378736)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(49378736)> LP CMD: Printer 1: ready (fast mode)
DBG(49378738)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(49378739)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(49378739)> MT DATA: Tape unit 1: init read
DBG(49378739)> MT DETAIL: Read tape record (4268 chars, used 9.87 inches, needs 67 msec) from tape 1
DBG(49378739)> MT DETAIL: Tape record contents: D*0391140115921000C*0100000000111111C*0000000201000003C*00000000000000...
DBG(49378739)> MT EXP: Start Of Block Word: 0391140115921000
DBG(49378739)> MT EXP: Read Tape Block number 1000
DBG(49378739)> MT EXP: Read forward addr 1001 to 0000
DBG(49378739)> MT EXP: Tape to CRT 1001: 0100000000111111 
DBG(49378739)> MT EXP: Tape to CRT 1002: 0000000201000003 
DBG(49378739)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1005: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1006: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1007: 2222444455660001 
DBG(49378739)> MT EXP: Tape to CRT 1008: 0000000209999990 
DBG(49378739)> MT EXP: Tape to CRT 1009: 0104110000000000 
DBG(49378739)> MT EXP: Tape to CRT 1010: 0001209999999997 
DBG(49378739)> MT EXP: Tape to CRT 1011: 0130000000121111 
DBG(49378739)> MT EXP: Tape to CRT 1012: 0000000231000000 
DBG(49378739)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1014: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1017: 3333444455660002 
DBG(49378739)> MT EXP: Tape to CRT 1018: 0000000231010000 
DBG(49378739)> MT EXP: Tape to CRT 1019: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1021: 0000000231020000 
DBG(49378739)> MT EXP: Tape to CRT 1022: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1023: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1024: 0130000000131111 
DBG(49378739)> MT EXP: Tape to CRT 1025: 0000000232000000 
DBG(49378739)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1027: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1030: 3333444455660002 
DBG(49378739)> MT EXP: Tape to CRT 1031: 0000000232010000 
DBG(49378739)> MT EXP: Tape to CRT 1032: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1033: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1034: 0000000232090000 
DBG(49378739)> MT EXP: Tape to CRT 1035: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1036: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1037: 0130000000141111 
DBG(49378739)> MT EXP: Tape to CRT 1038: 0000000233000000 
DBG(49378739)> MT EXP: Tape to CRT 1039: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1040: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1041: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1042: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1043: 3333444455660002 
DBG(49378739)> MT EXP: Tape to CRT 1044: 0000000233010000 
DBG(49378739)> MT EXP: Tape to CRT 1045: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1046: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1047: 0000000233020000 
DBG(49378739)> MT EXP: Tape to CRT 1048: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1049: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1050: 0100000000151111 
DBG(49378739)> MT EXP: Tape to CRT 1051: 0000000241000003 
DBG(49378739)> MT EXP: Tape to CRT 1052: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1053: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1054: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1055: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1056: 2222444455660001 
DBG(49378739)> MT EXP: Tape to CRT 1057: 0000000242009990 
DBG(49378739)> MT EXP: Tape to CRT 1058: 0104110000000000 
DBG(49378739)> MT EXP: Tape to CRT 1059: 0001209999999997 
DBG(49378739)> MT EXP: Tape to CRT 1060: 0100000000111112 
DBG(49378739)> MT EXP: Tape to CRT 1061: 0000000209999990 
DBG(49378739)> MT EXP: Tape to CRT 1062: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1063: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1064: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1065: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1066: 0000000000000100 
DBG(49378739)> MT EXP: Tape to CRT 1067: 0000000201000000 
DBG(49378739)> MT EXP: Tape to CRT 1068: 0000000000033555 
DBG(49378739)> MT EXP: Tape to CRT 1069: 0000000000033666 
DBG(49378739)> MT EXP: Tape to CRT 1070: 0130000000121112 
DBG(49378739)> MT EXP: Tape to CRT 1071: 0000000231010000 
DBG(49378739)> MT EXP: Tape to CRT 1072: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1073: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1074: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1075: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1076: 3334444455660101 
DBG(49378739)> MT EXP: Tape to CRT 1077: 0000000231000000 
DBG(49378739)> MT EXP: Tape to CRT 1078: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1079: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1080: 0000000231030000 
DBG(49378739)> MT EXP: Tape to CRT 1081: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1082: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1083: 0130000000121113 
DBG(49378739)> MT EXP: Tape to CRT 1084: 0000000231020003 
DBG(49378739)> MT EXP: Tape to CRT 1085: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1086: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1087: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1088: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1089: 3335444455660101 
DBG(49378739)> MT EXP: Tape to CRT 1090: 0000000231000000 
DBG(49378739)> MT EXP: Tape to CRT 1091: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1092: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1093: 0000000231030000 
DBG(49378739)> MT EXP: Tape to CRT 1094: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1095: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1096: 0130000000131112 
DBG(49378739)> MT EXP: Tape to CRT 1097: 0000000232010000 
DBG(49378739)> MT EXP: Tape to CRT 1098: 0000000000000000 
DBG(49378739)> MT EXP: Tape spacing word 1 (ignored) 
DBG(49378739)> MT EXP: Tape spacing word 43 (ignored) 
DBG(49378739)> MT EXP: Tape to CRT 1099: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1100: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1101: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1102: 3334444455660101 
DBG(49378739)> MT EXP: Tape to CRT 1103: 0000000232000000 
DBG(49378739)> MT EXP: Tape to CRT 1104: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1105: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1106: 0000000232090000 
DBG(49378739)> MT EXP: Tape to CRT 1107: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1108: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1109: 0190000000141112 
DBG(49378739)> MT EXP: Tape to CRT 1110: 0000000233010000 
DBG(49378739)> MT EXP: Tape to CRT 1111: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1112: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1113: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1114: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1115: 3334444455660103 
DBG(49378739)> MT EXP: Tape to CRT 1116: 0000000233000000 
DBG(49378739)> MT EXP: Tape to CRT 1117: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1118: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1119: 0000000233020000 
DBG(49378739)> MT EXP: Tape to CRT 1120: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1121: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1122: 0000000233030000 
DBG(49378739)> MT EXP: Tape to CRT 1123: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1124: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1125: 0000000233090000 
DBG(49378739)> MT EXP: Tape to CRT 1126: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1127: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1128: 0130000000151113 
DBG(49378739)> MT EXP: Tape to CRT 1129: 0000000242009990 
DBG(49378739)> MT EXP: Tape to CRT 1130: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1131: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1132: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1133: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1134: 0000000000000101 
DBG(49378739)> MT EXP: Tape to CRT 1135: 0000000241000000 
DBG(49378739)> MT EXP: Tape to CRT 1136: 0000000000033555 
DBG(49378739)> MT EXP: Tape to CRT 1137: 0000000000033666 
DBG(49378739)> MT EXP: Tape to CRT 1138: 0000000249999990 
DBG(49378739)> MT EXP: Tape to CRT 1139: 0000000000033555 
DBG(49378739)> MT EXP: Tape to CRT 1140: 0000000000033666 
DBG(49378739)> MT EXP: Tape to CRT 1141: 0130000000121114 
DBG(49378739)> MT EXP: Tape to CRT 1142: 0000000231030000 
DBG(49378739)> MT EXP: Tape to CRT 1143: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1144: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1145: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1146: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1147: 3336000000000200 
DBG(49378739)> MT EXP: Tape to CRT 1148: 0000000231010000 
DBG(49378739)> MT EXP: Tape to CRT 1149: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1150: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1151: 0000000231020000 
DBG(49378739)> MT EXP: Tape to CRT 1152: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1153: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1154: 0130000000131113 
DBG(49378739)> MT EXP: Tape to CRT 1155: 0000000232090000 
DBG(49378739)> MT EXP: Tape to CRT 1156: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1157: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1158: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1159: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1160: 3336000000000200 
DBG(49378739)> MT EXP: Tape to CRT 1161: 0000000232000000 
DBG(49378739)> MT EXP: Tape to CRT 1162: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1163: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1164: 0000000232010000 
DBG(49378739)> MT EXP: Tape to CRT 1165: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1166: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1167: 0160000000141013 
DBG(49378739)> MT EXP: Tape to CRT 1168: 0000000233020003 
DBG(49378739)> MT EXP: Tape to CRT 1169: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1170: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1171: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1172: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1173: 3335444455660201 
DBG(49378739)> MT EXP: Tape to CRT 1174: 0000000233000000 
DBG(49378739)> MT EXP: Tape to CRT 1175: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1176: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1177: 0000000233010000 
DBG(49378739)> MT EXP: Tape to CRT 1178: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1179: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1180: 0000000233030000 
DBG(49378739)> MT EXP: Tape to CRT 1181: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1182: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1183: 0100000000151113 
DBG(49378739)> MT EXP: Tape to CRT 1184: 0000000249999990 
DBG(49378739)> MT EXP: Tape to CRT 1185: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1186: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1187: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1188: 0000000000000000 
DBG(49378739)> MT EXP: Tape to CRT 1189: 0000000000000100 
DBG(49378739)> MT EXP: Tape to CRT 1190: 0000000242009990 
DBG(49378739)> MT EXP: Tape to CRT 1191: 0000000000033555 
DBG(49378739)> MT EXP: Tape to CRT 1192: 0000000000033666 
DBG(49378739)> MT EXP: End Of Block Word: 0391140115921000, data words in block: 192
DBG(49378739)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.07% of medium (11.48 inches)
DBG(49378742)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(49378743)> CPU DETAIL: Condition not present 
DBG(49378745)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(49378746)> CPU DETAIL: Condition not present 
DBG(49378748)> CPU CMD: Exec 0023: 00 60 0000 1219 0000               TR                   TEMP1                   Temp1=start of bloc 
DBG(49378749)> CPU DETAIL: Write 1219: 0391140115921000 
DBG(49378751)> CPU CMD: Exec 0024: 04 42 0000 1228 1220            04 MASK                 FIELD-S     TEMP2       Temp2=bbbb=02 90 aa 
DBG(49378752)> CPU DETAIL: Read S 1228: 0000000011110000 
DBG(49378753)> CPU DETAIL: Result: 0000000015920000 
DBG(49378754)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001592 
DBG(49378755)> CPU DETAIL: Write 1220: 0000000000001592 
DBG(49378757)> CPU CMD: Exec 0025: 08 42 1219 1227 0000            08 MASK     TEMP1       FIELD-R                 REG1=02 90 aaaa bbb 
DBG(49378758)> CPU DETAIL: Read R 1219: 0391140115921000 
DBG(49378759)> CPU DETAIL: Read S 1227: 0000111100000000 
DBG(49378760)> CPU DETAIL: Result: 0000140100000000 
DBG(49378761)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001401 
DBG(49378764)> CPU CMD: Exec 0026: 00 41 1220 0000 0000               SUB      TEMP2                
DBG(49378765)> CPU DETAIL: Read R 1220: 0000000000001592 
DBG(49378766)> CPU DETAIL: Result: 0000000000000191 
DBG(49378769)> CPU CMD: Exec 0027: 00 40 0000 1222 1203               ADD                  ONE         BL-INBUF    BL-INBUF=Block Len  
DBG(49378770)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49378771)> CPU DETAIL: Result: 0000000000000192 
DBG(49378772)> CPU DETAIL: Write 1203: 0000000000000192 
DBG(49378774)> CPU CMD: Exec 0028: 00 41 1226 0000 0000               SUB      N200                                check Block Len fro 
DBG(49378775)> CPU DETAIL: Read R 1226: 0000000000000200 
DBG(49378776)> CPU DETAIL: Result: 0000000000000008 
DBG(49378779)> CPU CMD: Exec 0029: 00 63 0031 0031 0000               TR SGN   LSPL3       LSPL3                   transfer if 200 or  
DBG(49378780)> CPU DETAIL: REG1: 0000000000000008
DBG(49378780)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49378782)> CPU CMD: Exec 0031: 00 60 1221 1204 0000   LSPL3       TR       ZERO        NW-INBUF                NW-INBUF=Number of  
DBG(49378783)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378784)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(49378786)> CPU CMD: Exec 0032: 00 60 0000 0000 0033               TR                               RR-INBUF    goto process first  
DBG(49378787)> CPU DETAIL: Transfer to T 
DBG(49378789)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49378790)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49378791)> CPU DETAIL: Read S 1204: 0000000000000000 
DBG(49378792)> CPU DETAIL: Result: 0000000000000192 
DBG(49378795)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49378796)> CPU DETAIL: REG1: 0000000000000192
DBG(49378796)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49378798)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49378799)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(49378800)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(49378803)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49378804)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49378805)> CPU DETAIL: Result: 0057000000000000 
DBG(49378806)> CPU DETAIL: Write 0038: 0057000000000000 
DBG(49378808)> CPU CMD: Exec 0038: 00 57 0000 0000 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49378809)> CPU DETAIL: Clear M4
DBG(49378809)> CPU DETAIL: M4: 0000 
DBG(49378810)> CPU DETAIL: Clear M6
DBG(49378810)> CPU DETAIL: M6: 0000 
DBG(49378811)> CPU DETAIL: Clear M8
DBG(49378811)> CPU DETAIL: M8: 0000 
DBG(49378814)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378815)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(49378815)> CPU DETAIL: Read R 1001: 0100000000111111 
DBG(49378816)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49378816)> CPU DETAIL: Write 1212: 0100000000111111 
DBG(49378818)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378819)> CPU DETAIL: M4: 0000 
DBG(49378820)> CPU DETAIL: M6: 0001 
DBG(49378821)> CPU DETAIL: M8: 0000 
DBG(49378824)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378825)> CPU DETAIL: M4: 0001 
DBG(49378826)> CPU DETAIL: Transfer to T 
DBG(49378828)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378829)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(49378829)> CPU DETAIL: Read R 1002: 0000000201000003 
DBG(49378830)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49378830)> CPU DETAIL: Write 1213: 0000000201000003 
DBG(49378832)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378833)> CPU DETAIL: M4: 0001 
DBG(49378834)> CPU DETAIL: M6: 0002 
DBG(49378835)> CPU DETAIL: M8: 0000 
DBG(49378838)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378839)> CPU DETAIL: M4: 0002 
DBG(49378840)> CPU DETAIL: Transfer to T 
DBG(49378842)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378843)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(49378843)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(49378844)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49378844)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49378846)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378847)> CPU DETAIL: M4: 0002 
DBG(49378848)> CPU DETAIL: M6: 0003 
DBG(49378849)> CPU DETAIL: M8: 0000 
DBG(49378852)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378853)> CPU DETAIL: M4: 0003 
DBG(49378854)> CPU DETAIL: Transfer to T 
DBG(49378856)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378857)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(49378857)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(49378858)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49378858)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49378860)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378861)> CPU DETAIL: M4: 0003 
DBG(49378862)> CPU DETAIL: M6: 0004 
DBG(49378863)> CPU DETAIL: M8: 0000 
DBG(49378866)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378867)> CPU DETAIL: M4: 0004 
DBG(49378868)> CPU DETAIL: Transfer to T 
DBG(49378870)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378871)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(49378871)> CPU DETAIL: Read R 1005: 0000000000000000 
DBG(49378872)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49378872)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49378874)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378875)> CPU DETAIL: M4: 0004 
DBG(49378876)> CPU DETAIL: M6: 0005 
DBG(49378877)> CPU DETAIL: M8: 0000 
DBG(49378880)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378881)> CPU DETAIL: M4: 0005 
DBG(49378882)> CPU DETAIL: Transfer to T 
DBG(49378884)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378885)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(49378885)> CPU DETAIL: Read R 1006: 0000000000000000 
DBG(49378886)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49378886)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49378888)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378889)> CPU DETAIL: M4: 0005 
DBG(49378890)> CPU DETAIL: M6: 0006 
DBG(49378891)> CPU DETAIL: M8: 0000 
DBG(49378894)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378895)> CPU DETAIL: M4: 0006 
DBG(49378896)> CPU DETAIL: Transfer to T 
DBG(49378898)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49378899)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(49378899)> CPU DETAIL: Read R 1007: 2222444455660001 
DBG(49378900)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49378900)> CPU DETAIL: Write 1218: 2222444455660001 
DBG(49378902)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49378903)> CPU DETAIL: M4: 0006 
DBG(49378904)> CPU DETAIL: M6: 0007 
DBG(49378905)> CPU DETAIL: M8: 0000 
DBG(49378908)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49378909)> CPU DETAIL: M4: 0007 
DBG(49378912)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49378913)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(49378914)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49378915)> CPU DETAIL: Result: 0000000000000007 
DBG(49378916)> CPU DETAIL: Write 1204: 0000000000000007 
DBG(49378918)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49378919)> CPU DETAIL: Read R 1211: 0000000000000000 
DBG(49378920)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49378921)> CPU DETAIL: Result: 0000000000000001 
DBG(49378922)> CPU DETAIL: Write 1211: 0000000000000001 
DBG(49378924)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49378925)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378926)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49378928)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49378929)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378930)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49378932)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49378933)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378934)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49378936)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49378937)> CPU DETAIL: Read R 1212: 0100000000111111 
DBG(49378938)> CPU DETAIL: Write 1206: 0100000000111111 
DBG(49378940)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49378941)> CPU DETAIL: Read R 1213: 0000000201000003 
DBG(49378942)> CPU DETAIL: Write 1207: 0000000201000003 
DBG(49378944)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49378945)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49378946)> CPU DETAIL: Write 1208: 2222444455660001 
DBG(49378948)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49378949)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(49378950)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(49378951)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(49378953)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49378954)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49378955)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49378956)> CPU DETAIL: Transfer to T 
DBG(49378958)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49378959)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49378960)> CPU DETAIL: Result: 0060000000000052 
DBG(49378961)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49378963)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49378964)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(49378965)> CPU DETAIL: Write 0001: 0001000000000000 
DBG(49378967)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49378968)> CPU DETAIL: Read R 1206: 0100000000111111 
DBG(49378969)> CPU DETAIL: Write 0002: 0100000000111111 
DBG(49378971)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49378972)> CPU DETAIL: Read R 1207: 0000000201000003 
DBG(49378973)> CPU DETAIL: Write 0003: 0000000201000003 
DBG(49378975)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49378976)> CPU DETAIL: Read R 1208: 2222444455660001 
DBG(49378977)> CPU DETAIL: Write 0004: 2222444455660001 
DBG(49378979)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49378980)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49378981)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49378983)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49378984)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49378986)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49378987)> CPU DETAIL: Reset condition present 
DBG(49378987)> same as above (3 times)
DBG(49378987)> CPU DETAIL: Transfer to T 
DBG(49378989)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49378990)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49378990)> MT CMD: Tape unit 2: init write
DBG(49378990)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49378990)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49378990)> MT EXP: CRT 0001 to Tape: 0001000000000000 
DBG(49378990)> MT EXP: CRT 0002 to Tape: 0100000000111111 
DBG(49378990)> MT EXP: CRT 0003 to Tape: 0000000201000003 
DBG(49378990)> MT EXP: CRT 0004 to Tape: 2222444455660001 
DBG(49378990)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49378990)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49378990)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.72 inches)
DBG(49378993)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49378994)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49378995)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49378996)> CPU DETAIL: Transfer to T 
DBG(49378998)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49378999)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379000)> CPU DETAIL: Result: 0060000000000094 
DBG(49379001)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379003)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379004)> CPU DETAIL: Condition not present 
DBG(49379006)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379007)> CPU DETAIL: Transfer to T 
DBG(49379009)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379010)> CPU DETAIL: Transfer to T 
DBG(49379012)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49379013)> CPU DETAIL: Transfer to T 
DBG(49379015)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49379016)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49379017)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49379018)> CPU DETAIL: Result: 0000000000000000 
DBG(49379019)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(49379020)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49379022)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49379023)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379024)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49379025)> CPU DETAIL: Transfer to T 
DBG(49379027)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49379028)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(49379029)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49379030)> CPU DETAIL: Result: 0001000000000000 
DBG(49379031)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(49379033)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49379034)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49379035)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49379036)> CPU DETAIL: Result: 0000000000000001 
DBG(49379037)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49379039)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379040)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379041)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49379044)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49379045)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49379045)> CPU DETAIL: Read R 1008: 0000000209999990 
DBG(49379046)> CPU DETAIL: Write 1206: 0000000209999990 
DBG(49379048)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49379049)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49379049)> CPU DETAIL: Read R 1009: 0104110000000000 
DBG(49379050)> CPU DETAIL: Write 1207: 0104110000000000 
DBG(49379052)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49379053)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49379053)> CPU DETAIL: Read R 1010: 0001209999999997 
DBG(49379054)> CPU DETAIL: Write 1208: 0001209999999997 
DBG(49379056)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49379057)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(49379058)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379059)> CPU DETAIL: Result: 0001000000000001 
DBG(49379060)> CPU DETAIL: Write 1205: 0001000000000001 
DBG(49379062)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49379063)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49379064)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49379065)> CPU DETAIL: Transfer to T 
DBG(49379067)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379068)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379069)> CPU DETAIL: Result: 0060000000000071 
DBG(49379070)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49379072)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379073)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(49379074)> CPU DETAIL: Write 0001: 0001000000000001 
DBG(49379076)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379077)> CPU DETAIL: Read R 1206: 0000000209999990 
DBG(49379078)> CPU DETAIL: Write 0002: 0000000209999990 
DBG(49379080)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379081)> CPU DETAIL: Read R 1207: 0104110000000000 
DBG(49379082)> CPU DETAIL: Write 0003: 0104110000000000 
DBG(49379084)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379085)> CPU DETAIL: Read R 1208: 0001209999999997 
DBG(49379086)> CPU DETAIL: Write 0004: 0001209999999997 
DBG(49379088)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379089)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379090)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379092)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379093)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379095)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379096)> CPU DETAIL: Reset condition present 
DBG(49379096)> same as above (3 times)
DBG(49379096)> CPU DETAIL: Transfer to T 
DBG(49379098)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379099)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379099)> MT CMD: Tape unit 2: init write
DBG(49379099)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379099)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379099)> MT EXP: CRT 0001 to Tape: 0001000000000001 
DBG(49379099)> MT EXP: CRT 0002 to Tape: 0000000209999990 
DBG(49379099)> MT EXP: CRT 0003 to Tape: 0104110000000000 
DBG(49379099)> MT EXP: CRT 0004 to Tape: 0001209999999997 
DBG(49379099)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379099)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379099)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.43 inches)
DBG(49379102)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379103)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379104)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379105)> CPU DETAIL: Transfer to T 
DBG(49379107)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379108)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379109)> CPU DETAIL: Result: 0060000000000094 
DBG(49379110)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379112)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379113)> CPU DETAIL: Condition not present 
DBG(49379115)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379116)> CPU DETAIL: Transfer to T 
DBG(49379118)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379119)> CPU DETAIL: Transfer to T 
DBG(49379121)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49379122)> CPU DETAIL: Transfer to T 
DBG(49379124)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49379125)> CPU DETAIL: Read R 1204: 0000000000000007 
DBG(49379126)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49379127)> CPU DETAIL: Result: 0000000000000010 
DBG(49379128)> CPU DETAIL: Write 1204: 0000000000000010 
DBG(49379130)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49379131)> CPU DETAIL: M4: 0007 
DBG(49379132)> CPU DETAIL: M6: 0010 
DBG(49379133)> CPU DETAIL: M8: 0000 
DBG(49379136)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49379137)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49379138)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379139)> CPU DETAIL: Result: 0000000000000000 
DBG(49379140)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49379142)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49379143)> CPU DETAIL: Transfer to T 
DBG(49379145)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379146)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379147)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49379148)> CPU DETAIL: Transfer to T 
DBG(49379150)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49379151)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(49379152)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49379153)> CPU DETAIL: Result: 0001000000000000 
DBG(49379154)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(49379156)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49379157)> CPU DETAIL: Transfer to T 
DBG(49379159)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49379160)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49379161)> CPU DETAIL: Read S 1204: 0000000000000010 
DBG(49379162)> CPU DETAIL: Result: 0000000000000182 
DBG(49379165)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49379166)> CPU DETAIL: REG1: 0000000000000182
DBG(49379166)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49379168)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49379169)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(49379170)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(49379173)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49379174)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49379175)> CPU DETAIL: Result: 0057000000100000 
DBG(49379176)> CPU DETAIL: Write 0038: 0057000000100000 
DBG(49379178)> CPU CMD: Exec 0038: 00 57 0000 0010 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49379179)> CPU DETAIL: Clear M4
DBG(49379179)> CPU DETAIL: M4: 0000 
DBG(49379180)> CPU DETAIL: Clear M6
DBG(49379180)> CPU DETAIL: M6: 0010 
DBG(49379181)> CPU DETAIL: Clear M8
DBG(49379181)> CPU DETAIL: M8: 0000 
DBG(49379184)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379185)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(49379185)> CPU DETAIL: Read R 1011: 0130000000121111 
DBG(49379186)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49379186)> CPU DETAIL: Write 1212: 0130000000121111 
DBG(49379188)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379189)> CPU DETAIL: M4: 0000 
DBG(49379190)> CPU DETAIL: M6: 0011 
DBG(49379191)> CPU DETAIL: M8: 0000 
DBG(49379194)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379195)> CPU DETAIL: M4: 0001 
DBG(49379196)> CPU DETAIL: Transfer to T 
DBG(49379198)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379199)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(49379199)> CPU DETAIL: Read R 1012: 0000000231000000 
DBG(49379200)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49379200)> CPU DETAIL: Write 1213: 0000000231000000 
DBG(49379202)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379203)> CPU DETAIL: M4: 0001 
DBG(49379204)> CPU DETAIL: M6: 0012 
DBG(49379205)> CPU DETAIL: M8: 0000 
DBG(49379208)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379209)> CPU DETAIL: M4: 0002 
DBG(49379210)> CPU DETAIL: Transfer to T 
DBG(49379212)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379213)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(49379213)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(49379214)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49379214)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49379216)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379217)> CPU DETAIL: M4: 0002 
DBG(49379218)> CPU DETAIL: M6: 0013 
DBG(49379219)> CPU DETAIL: M8: 0000 
DBG(49379222)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379223)> CPU DETAIL: M4: 0003 
DBG(49379224)> CPU DETAIL: Transfer to T 
DBG(49379226)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379227)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(49379227)> CPU DETAIL: Read R 1014: 0000000000000000 
DBG(49379228)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49379228)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49379230)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379231)> CPU DETAIL: M4: 0003 
DBG(49379232)> CPU DETAIL: M6: 0014 
DBG(49379233)> CPU DETAIL: M8: 0000 
DBG(49379236)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379237)> CPU DETAIL: M4: 0004 
DBG(49379238)> CPU DETAIL: Transfer to T 
DBG(49379240)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379241)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(49379241)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(49379242)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49379242)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49379244)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379245)> CPU DETAIL: M4: 0004 
DBG(49379246)> CPU DETAIL: M6: 0015 
DBG(49379247)> CPU DETAIL: M8: 0000 
DBG(49379250)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379251)> CPU DETAIL: M4: 0005 
DBG(49379252)> CPU DETAIL: Transfer to T 
DBG(49379254)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379255)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(49379255)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(49379256)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49379256)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49379258)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379259)> CPU DETAIL: M4: 0005 
DBG(49379260)> CPU DETAIL: M6: 0016 
DBG(49379261)> CPU DETAIL: M8: 0000 
DBG(49379264)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379265)> CPU DETAIL: M4: 0006 
DBG(49379266)> CPU DETAIL: Transfer to T 
DBG(49379268)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379269)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(49379269)> CPU DETAIL: Read R 1017: 3333444455660002 
DBG(49379270)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49379270)> CPU DETAIL: Write 1218: 3333444455660002 
DBG(49379272)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379273)> CPU DETAIL: M4: 0006 
DBG(49379274)> CPU DETAIL: M6: 0017 
DBG(49379275)> CPU DETAIL: M8: 0000 
DBG(49379278)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379279)> CPU DETAIL: M4: 0007 
DBG(49379282)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49379283)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(49379284)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49379285)> CPU DETAIL: Result: 0000000000000017 
DBG(49379286)> CPU DETAIL: Write 1204: 0000000000000017 
DBG(49379288)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49379289)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(49379290)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379291)> CPU DETAIL: Result: 0000000000000002 
DBG(49379292)> CPU DETAIL: Write 1211: 0000000000000002 
DBG(49379294)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49379295)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379296)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49379298)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49379299)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379300)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49379302)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49379303)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379304)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49379306)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49379307)> CPU DETAIL: Read R 1212: 0130000000121111 
DBG(49379308)> CPU DETAIL: Write 1206: 0130000000121111 
DBG(49379310)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49379311)> CPU DETAIL: Read R 1213: 0000000231000000 
DBG(49379312)> CPU DETAIL: Write 1207: 0000000231000000 
DBG(49379314)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49379315)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379316)> CPU DETAIL: Write 1208: 3333444455660002 
DBG(49379318)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49379319)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(49379320)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(49379321)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(49379323)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49379324)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49379325)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49379326)> CPU DETAIL: Transfer to T 
DBG(49379328)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379329)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379330)> CPU DETAIL: Result: 0060000000000052 
DBG(49379331)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49379333)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379334)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(49379335)> CPU DETAIL: Write 0001: 0002000000000000 
DBG(49379337)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379338)> CPU DETAIL: Read R 1206: 0130000000121111 
DBG(49379339)> CPU DETAIL: Write 0002: 0130000000121111 
DBG(49379341)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379342)> CPU DETAIL: Read R 1207: 0000000231000000 
DBG(49379343)> CPU DETAIL: Write 0003: 0000000231000000 
DBG(49379345)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379346)> CPU DETAIL: Read R 1208: 3333444455660002 
DBG(49379347)> CPU DETAIL: Write 0004: 3333444455660002 
DBG(49379349)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379350)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379351)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379353)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379354)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379356)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379357)> CPU DETAIL: Reset condition present 
DBG(49379357)> same as above (3 times)
DBG(49379357)> CPU DETAIL: Transfer to T 
DBG(49379359)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379360)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379360)> MT CMD: Tape unit 2: init write
DBG(49379360)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379360)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379360)> MT EXP: CRT 0001 to Tape: 0002000000000000 
DBG(49379360)> MT EXP: CRT 0002 to Tape: 0130000000121111 
DBG(49379360)> MT EXP: CRT 0003 to Tape: 0000000231000000 
DBG(49379360)> MT EXP: CRT 0004 to Tape: 3333444455660002 
DBG(49379360)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379360)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379360)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (5.14 inches)
DBG(49379363)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379364)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379365)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379366)> CPU DETAIL: Transfer to T 
DBG(49379368)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379369)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379370)> CPU DETAIL: Result: 0060000000000094 
DBG(49379371)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379373)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379374)> CPU DETAIL: Condition not present 
DBG(49379376)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379377)> CPU DETAIL: Transfer to T 
DBG(49379379)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379380)> CPU DETAIL: Transfer to T 
DBG(49379382)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49379383)> CPU DETAIL: Transfer to T 
DBG(49379385)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49379386)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379387)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49379388)> CPU DETAIL: Result: 0000000000000000 
DBG(49379389)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(49379390)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49379392)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49379393)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379394)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49379395)> CPU DETAIL: Transfer to T 
DBG(49379397)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49379398)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(49379399)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49379400)> CPU DETAIL: Result: 0002000000000000 
DBG(49379401)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(49379403)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49379404)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379405)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49379406)> CPU DETAIL: Result: 0000000000000002 
DBG(49379407)> CPU DETAIL: Write 1210: 0000000000000002 
DBG(49379409)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379410)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379411)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49379414)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49379415)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(49379415)> CPU DETAIL: Read R 1018: 0000000231010000 
DBG(49379416)> CPU DETAIL: Write 1206: 0000000231010000 
DBG(49379418)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49379419)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(49379419)> CPU DETAIL: Read R 1019: 0000000000000000 
DBG(49379420)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49379422)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49379423)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(49379423)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(49379424)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49379426)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49379427)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(49379428)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379429)> CPU DETAIL: Result: 0002000000000001 
DBG(49379430)> CPU DETAIL: Write 1205: 0002000000000001 
DBG(49379432)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49379433)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49379434)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49379435)> CPU DETAIL: Transfer to T 
DBG(49379437)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379438)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379439)> CPU DETAIL: Result: 0060000000000071 
DBG(49379440)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49379442)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379443)> CPU DETAIL: Read R 1205: 0002000000000001 
DBG(49379444)> CPU DETAIL: Write 0001: 0002000000000001 
DBG(49379446)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379447)> CPU DETAIL: Read R 1206: 0000000231010000 
DBG(49379448)> CPU DETAIL: Write 0002: 0000000231010000 
DBG(49379450)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379451)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49379452)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49379454)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379455)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49379456)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49379458)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379459)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379460)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379462)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379463)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379465)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379466)> CPU DETAIL: Reset condition present 
DBG(49379466)> same as above (3 times)
DBG(49379466)> CPU DETAIL: Transfer to T 
DBG(49379468)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379469)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379469)> MT CMD: Tape unit 2: init write
DBG(49379469)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379469)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379469)> MT EXP: CRT 0001 to Tape: 0002000000000001 
DBG(49379469)> MT EXP: CRT 0002 to Tape: 0000000231010000 
DBG(49379469)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49379469)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49379469)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379469)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379469)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.04% of medium (6.86 inches)
DBG(49379472)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379473)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379474)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379475)> CPU DETAIL: Transfer to T 
DBG(49379477)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379478)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379479)> CPU DETAIL: Result: 0060000000000094 
DBG(49379480)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379482)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379483)> CPU DETAIL: Condition not present 
DBG(49379485)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379486)> CPU DETAIL: Transfer to T 
DBG(49379488)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379489)> CPU DETAIL: Transfer to T 
DBG(49379491)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49379492)> CPU DETAIL: Transfer to T 
DBG(49379494)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49379495)> CPU DETAIL: Read R 1204: 0000000000000017 
DBG(49379496)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49379497)> CPU DETAIL: Result: 0000000000000020 
DBG(49379498)> CPU DETAIL: Write 1204: 0000000000000020 
DBG(49379500)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49379501)> CPU DETAIL: M4: 0007 
DBG(49379502)> CPU DETAIL: M6: 0020 
DBG(49379503)> CPU DETAIL: M8: 0000 
DBG(49379506)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49379507)> CPU DETAIL: Read R 1210: 0000000000000002 
DBG(49379508)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379509)> CPU DETAIL: Result: 0000000000000001 
DBG(49379510)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49379512)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49379513)> CPU DETAIL: Transfer to T 
DBG(49379515)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379516)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379517)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49379520)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49379521)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(49379521)> CPU DETAIL: Read R 1021: 0000000231020000 
DBG(49379522)> CPU DETAIL: Write 1206: 0000000231020000 
DBG(49379524)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49379525)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(49379525)> CPU DETAIL: Read R 1022: 0000000000000000 
DBG(49379526)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49379528)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49379529)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(49379529)> CPU DETAIL: Read R 1023: 0000000000000000 
DBG(49379530)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49379532)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49379533)> CPU DETAIL: Read R 1205: 0002000000000001 
DBG(49379534)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379535)> CPU DETAIL: Result: 0002000000000002 
DBG(49379536)> CPU DETAIL: Write 1205: 0002000000000002 
DBG(49379538)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49379539)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49379540)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49379541)> CPU DETAIL: Transfer to T 
DBG(49379543)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379544)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379545)> CPU DETAIL: Result: 0060000000000071 
DBG(49379546)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49379548)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379549)> CPU DETAIL: Read R 1205: 0002000000000002 
DBG(49379550)> CPU DETAIL: Write 0001: 0002000000000002 
DBG(49379552)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379553)> CPU DETAIL: Read R 1206: 0000000231020000 
DBG(49379554)> CPU DETAIL: Write 0002: 0000000231020000 
DBG(49379556)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379557)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49379558)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49379560)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379561)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49379562)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49379564)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379565)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379566)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379568)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379569)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379571)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379572)> CPU DETAIL: Reset condition present 
DBG(49379572)> same as above (3 times)
DBG(49379572)> CPU DETAIL: Transfer to T 
DBG(49379574)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379575)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379575)> MT CMD: Tape unit 2: init write
DBG(49379575)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379575)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379575)> MT EXP: CRT 0001 to Tape: 0002000000000002 
DBG(49379575)> MT EXP: CRT 0002 to Tape: 0000000231020000 
DBG(49379575)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49379575)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49379575)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379575)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379575)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.05% of medium (8.57 inches)
DBG(49379578)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379579)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379580)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379581)> CPU DETAIL: Transfer to T 
DBG(49379583)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379584)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379585)> CPU DETAIL: Result: 0060000000000094 
DBG(49379586)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379588)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379589)> CPU DETAIL: Condition not present 
DBG(49379591)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379592)> CPU DETAIL: Transfer to T 
DBG(49379594)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379595)> CPU DETAIL: Transfer to T 
DBG(49379597)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49379598)> CPU DETAIL: Transfer to T 
DBG(49379600)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49379601)> CPU DETAIL: Read R 1204: 0000000000000020 
DBG(49379602)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49379603)> CPU DETAIL: Result: 0000000000000023 
DBG(49379604)> CPU DETAIL: Write 1204: 0000000000000023 
DBG(49379606)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49379607)> CPU DETAIL: M4: 0007 
DBG(49379608)> CPU DETAIL: M6: 0023 
DBG(49379609)> CPU DETAIL: M8: 0000 
DBG(49379612)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49379613)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49379614)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379615)> CPU DETAIL: Result: 0000000000000000 
DBG(49379616)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49379618)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49379619)> CPU DETAIL: Transfer to T 
DBG(49379621)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379622)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379623)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49379624)> CPU DETAIL: Transfer to T 
DBG(49379626)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49379627)> CPU DETAIL: Read R 1205: 0002000000000002 
DBG(49379628)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49379629)> CPU DETAIL: Result: 0002000000000000 
DBG(49379630)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(49379632)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49379633)> CPU DETAIL: Transfer to T 
DBG(49379635)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49379636)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49379637)> CPU DETAIL: Read S 1204: 0000000000000023 
DBG(49379638)> CPU DETAIL: Result: 0000000000000169 
DBG(49379641)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49379642)> CPU DETAIL: REG1: 0000000000000169
DBG(49379642)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49379644)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49379645)> CPU DETAIL: Read R 1204: 0000000000000023 
DBG(49379646)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000230000 
DBG(49379649)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49379650)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49379651)> CPU DETAIL: Result: 0057000000230000 
DBG(49379652)> CPU DETAIL: Write 0038: 0057000000230000 
DBG(49379654)> CPU CMD: Exec 0038: 00 57 0000 0023 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49379655)> CPU DETAIL: Clear M4
DBG(49379655)> CPU DETAIL: M4: 0000 
DBG(49379656)> CPU DETAIL: Clear M6
DBG(49379656)> CPU DETAIL: M6: 0023 
DBG(49379657)> CPU DETAIL: Clear M8
DBG(49379657)> CPU DETAIL: M8: 0000 
DBG(49379660)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379661)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(49379661)> CPU DETAIL: Read R 1024: 0130000000131111 
DBG(49379662)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49379662)> CPU DETAIL: Write 1212: 0130000000131111 
DBG(49379664)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379665)> CPU DETAIL: M4: 0000 
DBG(49379666)> CPU DETAIL: M6: 0024 
DBG(49379667)> CPU DETAIL: M8: 0000 
DBG(49379670)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379671)> CPU DETAIL: M4: 0001 
DBG(49379672)> CPU DETAIL: Transfer to T 
DBG(49379674)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379675)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(49379675)> CPU DETAIL: Read R 1025: 0000000232000000 
DBG(49379676)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49379676)> CPU DETAIL: Write 1213: 0000000232000000 
DBG(49379678)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379679)> CPU DETAIL: M4: 0001 
DBG(49379680)> CPU DETAIL: M6: 0025 
DBG(49379681)> CPU DETAIL: M8: 0000 
DBG(49379684)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379685)> CPU DETAIL: M4: 0002 
DBG(49379686)> CPU DETAIL: Transfer to T 
DBG(49379688)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379689)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(49379689)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(49379690)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49379690)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49379692)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379693)> CPU DETAIL: M4: 0002 
DBG(49379694)> CPU DETAIL: M6: 0026 
DBG(49379695)> CPU DETAIL: M8: 0000 
DBG(49379698)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379699)> CPU DETAIL: M4: 0003 
DBG(49379700)> CPU DETAIL: Transfer to T 
DBG(49379702)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379703)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(49379703)> CPU DETAIL: Read R 1027: 0000000000000000 
DBG(49379704)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49379704)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49379706)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379707)> CPU DETAIL: M4: 0003 
DBG(49379708)> CPU DETAIL: M6: 0027 
DBG(49379709)> CPU DETAIL: M8: 0000 
DBG(49379712)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379713)> CPU DETAIL: M4: 0004 
DBG(49379714)> CPU DETAIL: Transfer to T 
DBG(49379716)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379717)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(49379717)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(49379718)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49379718)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49379720)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379721)> CPU DETAIL: M4: 0004 
DBG(49379722)> CPU DETAIL: M6: 0028 
DBG(49379723)> CPU DETAIL: M8: 0000 
DBG(49379726)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379727)> CPU DETAIL: M4: 0005 
DBG(49379728)> CPU DETAIL: Transfer to T 
DBG(49379730)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379731)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(49379731)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(49379732)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49379732)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49379734)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379735)> CPU DETAIL: M4: 0005 
DBG(49379736)> CPU DETAIL: M6: 0029 
DBG(49379737)> CPU DETAIL: M8: 0000 
DBG(49379740)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379741)> CPU DETAIL: M4: 0006 
DBG(49379742)> CPU DETAIL: Transfer to T 
DBG(49379744)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49379745)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(49379745)> CPU DETAIL: Read R 1030: 3333444455660002 
DBG(49379746)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49379746)> CPU DETAIL: Write 1218: 3333444455660002 
DBG(49379748)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49379749)> CPU DETAIL: M4: 0006 
DBG(49379750)> CPU DETAIL: M6: 0030 
DBG(49379751)> CPU DETAIL: M8: 0000 
DBG(49379754)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49379755)> CPU DETAIL: M4: 0007 
DBG(49379758)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49379759)> CPU DETAIL: Read R 1204: 0000000000000023 
DBG(49379760)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49379761)> CPU DETAIL: Result: 0000000000000030 
DBG(49379762)> CPU DETAIL: Write 1204: 0000000000000030 
DBG(49379764)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49379765)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(49379766)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379767)> CPU DETAIL: Result: 0000000000000003 
DBG(49379768)> CPU DETAIL: Write 1211: 0000000000000003 
DBG(49379770)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49379771)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379772)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49379774)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49379775)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379776)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49379778)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49379779)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379780)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49379782)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49379783)> CPU DETAIL: Read R 1212: 0130000000131111 
DBG(49379784)> CPU DETAIL: Write 1206: 0130000000131111 
DBG(49379786)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49379787)> CPU DETAIL: Read R 1213: 0000000232000000 
DBG(49379788)> CPU DETAIL: Write 1207: 0000000232000000 
DBG(49379790)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49379791)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379792)> CPU DETAIL: Write 1208: 3333444455660002 
DBG(49379794)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49379795)> CPU DETAIL: Read R 1211: 0000000000000003 
DBG(49379796)> CPU DETAIL: Word Shift 12 digits left: REG1: 0003000000000000 
DBG(49379797)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(49379799)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49379800)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49379801)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49379802)> CPU DETAIL: Transfer to T 
DBG(49379804)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379805)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379806)> CPU DETAIL: Result: 0060000000000052 
DBG(49379807)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49379809)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379810)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(49379811)> CPU DETAIL: Write 0001: 0003000000000000 
DBG(49379813)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379814)> CPU DETAIL: Read R 1206: 0130000000131111 
DBG(49379815)> CPU DETAIL: Write 0002: 0130000000131111 
DBG(49379817)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379818)> CPU DETAIL: Read R 1207: 0000000232000000 
DBG(49379819)> CPU DETAIL: Write 0003: 0000000232000000 
DBG(49379821)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379822)> CPU DETAIL: Read R 1208: 3333444455660002 
DBG(49379823)> CPU DETAIL: Write 0004: 3333444455660002 
DBG(49379825)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379826)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379827)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379829)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379830)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379832)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379833)> CPU DETAIL: Reset condition present 
DBG(49379833)> same as above (3 times)
DBG(49379833)> CPU DETAIL: Transfer to T 
DBG(49379835)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379836)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379836)> MT CMD: Tape unit 2: init write
DBG(49379836)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379836)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379836)> MT EXP: CRT 0001 to Tape: 0003000000000000 
DBG(49379836)> MT EXP: CRT 0002 to Tape: 0130000000131111 
DBG(49379836)> MT EXP: CRT 0003 to Tape: 0000000232000000 
DBG(49379836)> MT EXP: CRT 0004 to Tape: 3333444455660002 
DBG(49379836)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379836)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379836)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.06% of medium (10.29 inches)
DBG(49379839)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379840)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379841)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379842)> CPU DETAIL: Transfer to T 
DBG(49379844)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379845)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379846)> CPU DETAIL: Result: 0060000000000094 
DBG(49379847)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379849)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379850)> CPU DETAIL: Condition not present 
DBG(49379852)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379853)> CPU DETAIL: Transfer to T 
DBG(49379855)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379856)> CPU DETAIL: Transfer to T 
DBG(49379858)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49379859)> CPU DETAIL: Transfer to T 
DBG(49379861)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49379862)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379863)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49379864)> CPU DETAIL: Result: 0000000000000000 
DBG(49379865)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(49379866)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49379868)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49379869)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379870)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49379871)> CPU DETAIL: Transfer to T 
DBG(49379873)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49379874)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(49379875)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49379876)> CPU DETAIL: Result: 0003000000000000 
DBG(49379877)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(49379879)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49379880)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49379881)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49379882)> CPU DETAIL: Result: 0000000000000002 
DBG(49379883)> CPU DETAIL: Write 1210: 0000000000000002 
DBG(49379885)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379886)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379887)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49379890)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49379891)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(49379891)> CPU DETAIL: Read R 1031: 0000000232010000 
DBG(49379892)> CPU DETAIL: Write 1206: 0000000232010000 
DBG(49379894)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49379895)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(49379895)> CPU DETAIL: Read R 1032: 0000000000000000 
DBG(49379896)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49379898)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49379899)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(49379899)> CPU DETAIL: Read R 1033: 0000000000000000 
DBG(49379900)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49379902)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49379903)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(49379904)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379905)> CPU DETAIL: Result: 0003000000000001 
DBG(49379906)> CPU DETAIL: Write 1205: 0003000000000001 
DBG(49379908)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49379909)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49379910)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49379911)> CPU DETAIL: Transfer to T 
DBG(49379913)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49379914)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379915)> CPU DETAIL: Result: 0060000000000071 
DBG(49379916)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49379918)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49379919)> CPU DETAIL: Read R 1205: 0003000000000001 
DBG(49379920)> CPU DETAIL: Write 0001: 0003000000000001 
DBG(49379922)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49379923)> CPU DETAIL: Read R 1206: 0000000232010000 
DBG(49379924)> CPU DETAIL: Write 0002: 0000000232010000 
DBG(49379926)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49379927)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49379928)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49379930)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49379931)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49379932)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49379934)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49379935)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49379936)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49379938)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49379939)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49379941)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49379942)> CPU DETAIL: Reset condition present 
DBG(49379942)> same as above (3 times)
DBG(49379942)> CPU DETAIL: Transfer to T 
DBG(49379944)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49379945)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49379945)> MT CMD: Tape unit 2: init write
DBG(49379945)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49379945)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49379945)> MT EXP: CRT 0001 to Tape: 0003000000000001 
DBG(49379945)> MT EXP: CRT 0002 to Tape: 0000000232010000 
DBG(49379945)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49379945)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49379945)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49379945)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49379945)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.07% of medium (12.01 inches)
DBG(49379948)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49379949)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49379950)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49379951)> CPU DETAIL: Transfer to T 
DBG(49379953)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49379954)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49379955)> CPU DETAIL: Result: 0060000000000094 
DBG(49379956)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49379958)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49379959)> CPU DETAIL: Condition not present 
DBG(49379961)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49379962)> CPU DETAIL: Transfer to T 
DBG(49379964)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49379965)> CPU DETAIL: Transfer to T 
DBG(49379967)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49379968)> CPU DETAIL: Transfer to T 
DBG(49379970)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49379971)> CPU DETAIL: Read R 1204: 0000000000000030 
DBG(49379972)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49379973)> CPU DETAIL: Result: 0000000000000033 
DBG(49379974)> CPU DETAIL: Write 1204: 0000000000000033 
DBG(49379976)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49379977)> CPU DETAIL: M4: 0007 
DBG(49379978)> CPU DETAIL: M6: 0033 
DBG(49379979)> CPU DETAIL: M8: 0000 
DBG(49379982)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49379983)> CPU DETAIL: Read R 1210: 0000000000000002 
DBG(49379984)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49379985)> CPU DETAIL: Result: 0000000000000001 
DBG(49379986)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49379988)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49379989)> CPU DETAIL: Transfer to T 
DBG(49379991)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49379992)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49379993)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49379996)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49379997)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(49379997)> CPU DETAIL: Read R 1034: 0000000232090000 
DBG(49379998)> CPU DETAIL: Write 1206: 0000000232090000 
DBG(49380000)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49380001)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(49380001)> CPU DETAIL: Read R 1035: 0000000000000000 
DBG(49380002)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49380004)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49380005)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(49380005)> CPU DETAIL: Read R 1036: 0000000000000000 
DBG(49380006)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49380008)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49380009)> CPU DETAIL: Read R 1205: 0003000000000001 
DBG(49380010)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380011)> CPU DETAIL: Result: 0003000000000002 
DBG(49380012)> CPU DETAIL: Write 1205: 0003000000000002 
DBG(49380014)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49380015)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49380016)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49380017)> CPU DETAIL: Transfer to T 
DBG(49380019)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380020)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380021)> CPU DETAIL: Result: 0060000000000071 
DBG(49380022)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49380024)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380025)> CPU DETAIL: Read R 1205: 0003000000000002 
DBG(49380026)> CPU DETAIL: Write 0001: 0003000000000002 
DBG(49380028)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380029)> CPU DETAIL: Read R 1206: 0000000232090000 
DBG(49380030)> CPU DETAIL: Write 0002: 0000000232090000 
DBG(49380032)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380033)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49380034)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49380036)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380037)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49380038)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49380040)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380041)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380042)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380044)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380045)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380047)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380048)> CPU DETAIL: Reset condition present 
DBG(49380048)> same as above (3 times)
DBG(49380048)> CPU DETAIL: Transfer to T 
DBG(49380050)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380051)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380051)> MT CMD: Tape unit 2: init write
DBG(49380051)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380051)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380051)> MT EXP: CRT 0001 to Tape: 0003000000000002 
DBG(49380051)> MT EXP: CRT 0002 to Tape: 0000000232090000 
DBG(49380051)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49380051)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49380051)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380051)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380051)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.08% of medium (13.72 inches)
DBG(49380054)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380055)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380056)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380057)> CPU DETAIL: Transfer to T 
DBG(49380059)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380060)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380061)> CPU DETAIL: Result: 0060000000000094 
DBG(49380062)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380064)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380065)> CPU DETAIL: Condition not present 
DBG(49380067)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380068)> CPU DETAIL: Transfer to T 
DBG(49380070)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380071)> CPU DETAIL: Transfer to T 
DBG(49380073)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49380074)> CPU DETAIL: Transfer to T 
DBG(49380076)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49380077)> CPU DETAIL: Read R 1204: 0000000000000033 
DBG(49380078)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49380079)> CPU DETAIL: Result: 0000000000000036 
DBG(49380080)> CPU DETAIL: Write 1204: 0000000000000036 
DBG(49380082)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49380083)> CPU DETAIL: M4: 0007 
DBG(49380084)> CPU DETAIL: M6: 0036 
DBG(49380085)> CPU DETAIL: M8: 0000 
DBG(49380088)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49380089)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49380090)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380091)> CPU DETAIL: Result: 0000000000000000 
DBG(49380092)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49380094)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49380095)> CPU DETAIL: Transfer to T 
DBG(49380097)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380098)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380099)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49380100)> CPU DETAIL: Transfer to T 
DBG(49380102)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49380103)> CPU DETAIL: Read R 1205: 0003000000000002 
DBG(49380104)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49380105)> CPU DETAIL: Result: 0003000000000000 
DBG(49380106)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(49380108)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49380109)> CPU DETAIL: Transfer to T 
DBG(49380111)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49380112)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49380113)> CPU DETAIL: Read S 1204: 0000000000000036 
DBG(49380114)> CPU DETAIL: Result: 0000000000000156 
DBG(49380117)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49380118)> CPU DETAIL: REG1: 0000000000000156
DBG(49380118)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49380120)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49380121)> CPU DETAIL: Read R 1204: 0000000000000036 
DBG(49380122)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000360000 
DBG(49380125)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49380126)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49380127)> CPU DETAIL: Result: 0057000000360000 
DBG(49380128)> CPU DETAIL: Write 0038: 0057000000360000 
DBG(49380130)> CPU CMD: Exec 0038: 00 57 0000 0036 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49380131)> CPU DETAIL: Clear M4
DBG(49380131)> CPU DETAIL: M4: 0000 
DBG(49380132)> CPU DETAIL: Clear M6
DBG(49380132)> CPU DETAIL: M6: 0036 
DBG(49380133)> CPU DETAIL: Clear M8
DBG(49380133)> CPU DETAIL: M8: 0000 
DBG(49380136)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380137)> CPU DETAIL: M6 Address Modifier: 0036 
DBG(49380137)> CPU DETAIL: Read R 1037: 0130000000141111 
DBG(49380138)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49380138)> CPU DETAIL: Write 1212: 0130000000141111 
DBG(49380140)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380141)> CPU DETAIL: M4: 0000 
DBG(49380142)> CPU DETAIL: M6: 0037 
DBG(49380143)> CPU DETAIL: M8: 0000 
DBG(49380146)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380147)> CPU DETAIL: M4: 0001 
DBG(49380148)> CPU DETAIL: Transfer to T 
DBG(49380150)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380151)> CPU DETAIL: M6 Address Modifier: 0037 
DBG(49380151)> CPU DETAIL: Read R 1038: 0000000233000000 
DBG(49380152)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49380152)> CPU DETAIL: Write 1213: 0000000233000000 
DBG(49380154)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380155)> CPU DETAIL: M4: 0001 
DBG(49380156)> CPU DETAIL: M6: 0038 
DBG(49380157)> CPU DETAIL: M8: 0000 
DBG(49380160)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380161)> CPU DETAIL: M4: 0002 
DBG(49380162)> CPU DETAIL: Transfer to T 
DBG(49380164)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380165)> CPU DETAIL: M6 Address Modifier: 0038 
DBG(49380165)> CPU DETAIL: Read R 1039: 0000000000000000 
DBG(49380166)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49380166)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49380168)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380169)> CPU DETAIL: M4: 0002 
DBG(49380170)> CPU DETAIL: M6: 0039 
DBG(49380171)> CPU DETAIL: M8: 0000 
DBG(49380174)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380175)> CPU DETAIL: M4: 0003 
DBG(49380176)> CPU DETAIL: Transfer to T 
DBG(49380178)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380179)> CPU DETAIL: M6 Address Modifier: 0039 
DBG(49380179)> CPU DETAIL: Read R 1040: 0000000000000000 
DBG(49380180)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49380180)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49380182)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380183)> CPU DETAIL: M4: 0003 
DBG(49380184)> CPU DETAIL: M6: 0040 
DBG(49380185)> CPU DETAIL: M8: 0000 
DBG(49380188)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380189)> CPU DETAIL: M4: 0004 
DBG(49380190)> CPU DETAIL: Transfer to T 
DBG(49380192)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380193)> CPU DETAIL: M6 Address Modifier: 0040 
DBG(49380193)> CPU DETAIL: Read R 1041: 0000000000000000 
DBG(49380194)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49380194)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49380196)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380197)> CPU DETAIL: M4: 0004 
DBG(49380198)> CPU DETAIL: M6: 0041 
DBG(49380199)> CPU DETAIL: M8: 0000 
DBG(49380202)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380203)> CPU DETAIL: M4: 0005 
DBG(49380204)> CPU DETAIL: Transfer to T 
DBG(49380206)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380207)> CPU DETAIL: M6 Address Modifier: 0041 
DBG(49380207)> CPU DETAIL: Read R 1042: 0000000000000000 
DBG(49380208)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49380208)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49380210)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380211)> CPU DETAIL: M4: 0005 
DBG(49380212)> CPU DETAIL: M6: 0042 
DBG(49380213)> CPU DETAIL: M8: 0000 
DBG(49380216)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380217)> CPU DETAIL: M4: 0006 
DBG(49380218)> CPU DETAIL: Transfer to T 
DBG(49380220)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380221)> CPU DETAIL: M6 Address Modifier: 0042 
DBG(49380221)> CPU DETAIL: Read R 1043: 3333444455660002 
DBG(49380222)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49380222)> CPU DETAIL: Write 1218: 3333444455660002 
DBG(49380224)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380225)> CPU DETAIL: M4: 0006 
DBG(49380226)> CPU DETAIL: M6: 0043 
DBG(49380227)> CPU DETAIL: M8: 0000 
DBG(49380230)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380231)> CPU DETAIL: M4: 0007 
DBG(49380234)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49380235)> CPU DETAIL: Read R 1204: 0000000000000036 
DBG(49380236)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49380237)> CPU DETAIL: Result: 0000000000000043 
DBG(49380238)> CPU DETAIL: Write 1204: 0000000000000043 
DBG(49380240)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49380241)> CPU DETAIL: Read R 1211: 0000000000000003 
DBG(49380242)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380243)> CPU DETAIL: Result: 0000000000000004 
DBG(49380244)> CPU DETAIL: Write 1211: 0000000000000004 
DBG(49380246)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49380247)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380248)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49380250)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49380251)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380252)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49380254)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49380255)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380256)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49380258)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49380259)> CPU DETAIL: Read R 1212: 0130000000141111 
DBG(49380260)> CPU DETAIL: Write 1206: 0130000000141111 
DBG(49380262)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49380263)> CPU DETAIL: Read R 1213: 0000000233000000 
DBG(49380264)> CPU DETAIL: Write 1207: 0000000233000000 
DBG(49380266)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49380267)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49380268)> CPU DETAIL: Write 1208: 3333444455660002 
DBG(49380270)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49380271)> CPU DETAIL: Read R 1211: 0000000000000004 
DBG(49380272)> CPU DETAIL: Word Shift 12 digits left: REG1: 0004000000000000 
DBG(49380273)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(49380275)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49380276)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49380277)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49380278)> CPU DETAIL: Transfer to T 
DBG(49380280)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380281)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380282)> CPU DETAIL: Result: 0060000000000052 
DBG(49380283)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49380285)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380286)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(49380287)> CPU DETAIL: Write 0001: 0004000000000000 
DBG(49380289)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380290)> CPU DETAIL: Read R 1206: 0130000000141111 
DBG(49380291)> CPU DETAIL: Write 0002: 0130000000141111 
DBG(49380293)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380294)> CPU DETAIL: Read R 1207: 0000000233000000 
DBG(49380295)> CPU DETAIL: Write 0003: 0000000233000000 
DBG(49380297)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380298)> CPU DETAIL: Read R 1208: 3333444455660002 
DBG(49380299)> CPU DETAIL: Write 0004: 3333444455660002 
DBG(49380301)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380302)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380303)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380305)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380306)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380308)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380309)> CPU DETAIL: Reset condition present 
DBG(49380309)> same as above (3 times)
DBG(49380309)> CPU DETAIL: Transfer to T 
DBG(49380311)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380312)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380312)> MT CMD: Tape unit 2: init write
DBG(49380312)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380312)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380312)> MT EXP: CRT 0001 to Tape: 0004000000000000 
DBG(49380312)> MT EXP: CRT 0002 to Tape: 0130000000141111 
DBG(49380312)> MT EXP: CRT 0003 to Tape: 0000000233000000 
DBG(49380312)> MT EXP: CRT 0004 to Tape: 3333444455660002 
DBG(49380312)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380312)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380312)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.09% of medium (15.44 inches)
DBG(49380315)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380316)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380317)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380318)> CPU DETAIL: Transfer to T 
DBG(49380320)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380321)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380322)> CPU DETAIL: Result: 0060000000000094 
DBG(49380323)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380325)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380326)> CPU DETAIL: Condition not present 
DBG(49380328)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380329)> CPU DETAIL: Transfer to T 
DBG(49380331)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380332)> CPU DETAIL: Transfer to T 
DBG(49380334)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49380335)> CPU DETAIL: Transfer to T 
DBG(49380337)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49380338)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49380339)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49380340)> CPU DETAIL: Result: 0000000000000000 
DBG(49380341)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(49380342)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49380344)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49380345)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380346)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49380347)> CPU DETAIL: Transfer to T 
DBG(49380349)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49380350)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(49380351)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49380352)> CPU DETAIL: Result: 0004000000000000 
DBG(49380353)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(49380355)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49380356)> CPU DETAIL: Read R 1218: 3333444455660002 
DBG(49380357)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49380358)> CPU DETAIL: Result: 0000000000000002 
DBG(49380359)> CPU DETAIL: Write 1210: 0000000000000002 
DBG(49380361)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380362)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380363)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49380366)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49380367)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(49380367)> CPU DETAIL: Read R 1044: 0000000233010000 
DBG(49380368)> CPU DETAIL: Write 1206: 0000000233010000 
DBG(49380370)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49380371)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(49380371)> CPU DETAIL: Read R 1045: 0000000000000000 
DBG(49380372)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49380374)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49380375)> CPU DETAIL: M6 Address Modifier: 0043 
DBG(49380375)> CPU DETAIL: Read R 1046: 0000000000000000 
DBG(49380376)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49380378)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49380379)> CPU DETAIL: Read R 1205: 0004000000000000 
DBG(49380380)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380381)> CPU DETAIL: Result: 0004000000000001 
DBG(49380382)> CPU DETAIL: Write 1205: 0004000000000001 
DBG(49380384)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49380385)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49380386)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49380387)> CPU DETAIL: Transfer to T 
DBG(49380389)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380390)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380391)> CPU DETAIL: Result: 0060000000000071 
DBG(49380392)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49380394)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380395)> CPU DETAIL: Read R 1205: 0004000000000001 
DBG(49380396)> CPU DETAIL: Write 0001: 0004000000000001 
DBG(49380398)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380399)> CPU DETAIL: Read R 1206: 0000000233010000 
DBG(49380400)> CPU DETAIL: Write 0002: 0000000233010000 
DBG(49380402)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380403)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49380404)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49380406)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380407)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49380408)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49380410)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380411)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380412)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380414)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380415)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380417)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380418)> CPU DETAIL: Reset condition present 
DBG(49380418)> same as above (3 times)
DBG(49380418)> CPU DETAIL: Transfer to T 
DBG(49380420)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380421)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380421)> MT CMD: Tape unit 2: init write
DBG(49380421)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380421)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380421)> MT EXP: CRT 0001 to Tape: 0004000000000001 
DBG(49380421)> MT EXP: CRT 0002 to Tape: 0000000233010000 
DBG(49380421)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49380421)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49380421)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380421)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380421)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.10% of medium (17.15 inches)
DBG(49380424)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380425)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380426)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380427)> CPU DETAIL: Transfer to T 
DBG(49380429)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380430)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380431)> CPU DETAIL: Result: 0060000000000094 
DBG(49380432)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380434)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380435)> CPU DETAIL: Condition not present 
DBG(49380437)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380438)> CPU DETAIL: Transfer to T 
DBG(49380440)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380441)> CPU DETAIL: Transfer to T 
DBG(49380443)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49380444)> CPU DETAIL: Transfer to T 
DBG(49380446)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49380447)> CPU DETAIL: Read R 1204: 0000000000000043 
DBG(49380448)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49380449)> CPU DETAIL: Result: 0000000000000046 
DBG(49380450)> CPU DETAIL: Write 1204: 0000000000000046 
DBG(49380452)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49380453)> CPU DETAIL: M4: 0007 
DBG(49380454)> CPU DETAIL: M6: 0046 
DBG(49380455)> CPU DETAIL: M8: 0000 
DBG(49380458)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49380459)> CPU DETAIL: Read R 1210: 0000000000000002 
DBG(49380460)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380461)> CPU DETAIL: Result: 0000000000000001 
DBG(49380462)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49380464)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49380465)> CPU DETAIL: Transfer to T 
DBG(49380467)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380468)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380469)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49380472)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49380473)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(49380473)> CPU DETAIL: Read R 1047: 0000000233020000 
DBG(49380474)> CPU DETAIL: Write 1206: 0000000233020000 
DBG(49380476)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49380477)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(49380477)> CPU DETAIL: Read R 1048: 0000000000000000 
DBG(49380478)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49380480)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49380481)> CPU DETAIL: M6 Address Modifier: 0046 
DBG(49380481)> CPU DETAIL: Read R 1049: 0000000000000000 
DBG(49380482)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49380484)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49380485)> CPU DETAIL: Read R 1205: 0004000000000001 
DBG(49380486)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380487)> CPU DETAIL: Result: 0004000000000002 
DBG(49380488)> CPU DETAIL: Write 1205: 0004000000000002 
DBG(49380490)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49380491)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49380492)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49380493)> CPU DETAIL: Transfer to T 
DBG(49380495)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380496)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380497)> CPU DETAIL: Result: 0060000000000071 
DBG(49380498)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49380500)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380501)> CPU DETAIL: Read R 1205: 0004000000000002 
DBG(49380502)> CPU DETAIL: Write 0001: 0004000000000002 
DBG(49380504)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380505)> CPU DETAIL: Read R 1206: 0000000233020000 
DBG(49380506)> CPU DETAIL: Write 0002: 0000000233020000 
DBG(49380508)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380509)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49380510)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49380512)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380513)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49380514)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49380516)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380517)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380518)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380520)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380521)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380523)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380524)> CPU DETAIL: Reset condition present 
DBG(49380524)> same as above (3 times)
DBG(49380524)> CPU DETAIL: Transfer to T 
DBG(49380526)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380527)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380527)> MT CMD: Tape unit 2: init write
DBG(49380527)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380527)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380527)> MT EXP: CRT 0001 to Tape: 0004000000000002 
DBG(49380527)> MT EXP: CRT 0002 to Tape: 0000000233020000 
DBG(49380527)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49380527)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49380527)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380527)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380527)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.11% of medium (18.86 inches)
DBG(49380530)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380531)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380532)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380533)> CPU DETAIL: Transfer to T 
DBG(49380535)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380536)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380537)> CPU DETAIL: Result: 0060000000000094 
DBG(49380538)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380540)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380541)> CPU DETAIL: Condition not present 
DBG(49380543)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380544)> CPU DETAIL: Transfer to T 
DBG(49380546)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380547)> CPU DETAIL: Transfer to T 
DBG(49380549)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49380550)> CPU DETAIL: Transfer to T 
DBG(49380552)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49380553)> CPU DETAIL: Read R 1204: 0000000000000046 
DBG(49380554)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49380555)> CPU DETAIL: Result: 0000000000000049 
DBG(49380556)> CPU DETAIL: Write 1204: 0000000000000049 
DBG(49380558)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49380559)> CPU DETAIL: M4: 0007 
DBG(49380560)> CPU DETAIL: M6: 0049 
DBG(49380561)> CPU DETAIL: M8: 0000 
DBG(49380564)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49380565)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49380566)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380567)> CPU DETAIL: Result: 0000000000000000 
DBG(49380568)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49380570)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49380571)> CPU DETAIL: Transfer to T 
DBG(49380573)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380574)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380575)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49380576)> CPU DETAIL: Transfer to T 
DBG(49380578)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49380579)> CPU DETAIL: Read R 1205: 0004000000000002 
DBG(49380580)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49380581)> CPU DETAIL: Result: 0004000000000000 
DBG(49380582)> CPU DETAIL: Write 1205: 0004000000000000 
DBG(49380584)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49380585)> CPU DETAIL: Transfer to T 
DBG(49380587)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49380588)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49380589)> CPU DETAIL: Read S 1204: 0000000000000049 
DBG(49380590)> CPU DETAIL: Result: 0000000000000143 
DBG(49380593)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49380594)> CPU DETAIL: REG1: 0000000000000143
DBG(49380594)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49380596)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49380597)> CPU DETAIL: Read R 1204: 0000000000000049 
DBG(49380598)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000490000 
DBG(49380601)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49380602)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49380603)> CPU DETAIL: Result: 0057000000490000 
DBG(49380604)> CPU DETAIL: Write 0038: 0057000000490000 
DBG(49380606)> CPU CMD: Exec 0038: 00 57 0000 0049 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49380607)> CPU DETAIL: Clear M4
DBG(49380607)> CPU DETAIL: M4: 0000 
DBG(49380608)> CPU DETAIL: Clear M6
DBG(49380608)> CPU DETAIL: M6: 0049 
DBG(49380609)> CPU DETAIL: Clear M8
DBG(49380609)> CPU DETAIL: M8: 0000 
DBG(49380612)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380613)> CPU DETAIL: M6 Address Modifier: 0049 
DBG(49380613)> CPU DETAIL: Read R 1050: 0100000000151111 
DBG(49380614)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49380614)> CPU DETAIL: Write 1212: 0100000000151111 
DBG(49380616)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380617)> CPU DETAIL: M4: 0000 
DBG(49380618)> CPU DETAIL: M6: 0050 
DBG(49380619)> CPU DETAIL: M8: 0000 
DBG(49380622)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380623)> CPU DETAIL: M4: 0001 
DBG(49380624)> CPU DETAIL: Transfer to T 
DBG(49380626)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380627)> CPU DETAIL: M6 Address Modifier: 0050 
DBG(49380627)> CPU DETAIL: Read R 1051: 0000000241000003 
DBG(49380628)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49380628)> CPU DETAIL: Write 1213: 0000000241000003 
DBG(49380630)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380631)> CPU DETAIL: M4: 0001 
DBG(49380632)> CPU DETAIL: M6: 0051 
DBG(49380633)> CPU DETAIL: M8: 0000 
DBG(49380636)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380637)> CPU DETAIL: M4: 0002 
DBG(49380638)> CPU DETAIL: Transfer to T 
DBG(49380640)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380641)> CPU DETAIL: M6 Address Modifier: 0051 
DBG(49380641)> CPU DETAIL: Read R 1052: 0000000000000000 
DBG(49380642)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49380642)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49380644)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380645)> CPU DETAIL: M4: 0002 
DBG(49380646)> CPU DETAIL: M6: 0052 
DBG(49380647)> CPU DETAIL: M8: 0000 
DBG(49380650)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380651)> CPU DETAIL: M4: 0003 
DBG(49380652)> CPU DETAIL: Transfer to T 
DBG(49380654)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380655)> CPU DETAIL: M6 Address Modifier: 0052 
DBG(49380655)> CPU DETAIL: Read R 1053: 0000000000000000 
DBG(49380656)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49380656)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49380658)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380659)> CPU DETAIL: M4: 0003 
DBG(49380660)> CPU DETAIL: M6: 0053 
DBG(49380661)> CPU DETAIL: M8: 0000 
DBG(49380664)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380665)> CPU DETAIL: M4: 0004 
DBG(49380666)> CPU DETAIL: Transfer to T 
DBG(49380668)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380669)> CPU DETAIL: M6 Address Modifier: 0053 
DBG(49380669)> CPU DETAIL: Read R 1054: 0000000000000000 
DBG(49380670)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49380670)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49380672)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380673)> CPU DETAIL: M4: 0004 
DBG(49380674)> CPU DETAIL: M6: 0054 
DBG(49380675)> CPU DETAIL: M8: 0000 
DBG(49380678)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380679)> CPU DETAIL: M4: 0005 
DBG(49380680)> CPU DETAIL: Transfer to T 
DBG(49380682)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380683)> CPU DETAIL: M6 Address Modifier: 0054 
DBG(49380683)> CPU DETAIL: Read R 1055: 0000000000000000 
DBG(49380684)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49380684)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49380686)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380687)> CPU DETAIL: M4: 0005 
DBG(49380688)> CPU DETAIL: M6: 0055 
DBG(49380689)> CPU DETAIL: M8: 0000 
DBG(49380692)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380693)> CPU DETAIL: M4: 0006 
DBG(49380694)> CPU DETAIL: Transfer to T 
DBG(49380696)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380697)> CPU DETAIL: M6 Address Modifier: 0055 
DBG(49380697)> CPU DETAIL: Read R 1056: 2222444455660001 
DBG(49380698)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49380698)> CPU DETAIL: Write 1218: 2222444455660001 
DBG(49380700)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380701)> CPU DETAIL: M4: 0006 
DBG(49380702)> CPU DETAIL: M6: 0056 
DBG(49380703)> CPU DETAIL: M8: 0000 
DBG(49380706)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380707)> CPU DETAIL: M4: 0007 
DBG(49380710)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49380711)> CPU DETAIL: Read R 1204: 0000000000000049 
DBG(49380712)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49380713)> CPU DETAIL: Result: 0000000000000056 
DBG(49380714)> CPU DETAIL: Write 1204: 0000000000000056 
DBG(49380716)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49380717)> CPU DETAIL: Read R 1211: 0000000000000004 
DBG(49380718)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380719)> CPU DETAIL: Result: 0000000000000005 
DBG(49380720)> CPU DETAIL: Write 1211: 0000000000000005 
DBG(49380722)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49380723)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380724)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49380726)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49380727)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380728)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49380730)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49380731)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380732)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49380734)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49380735)> CPU DETAIL: Read R 1212: 0100000000151111 
DBG(49380736)> CPU DETAIL: Write 1206: 0100000000151111 
DBG(49380738)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49380739)> CPU DETAIL: Read R 1213: 0000000241000003 
DBG(49380740)> CPU DETAIL: Write 1207: 0000000241000003 
DBG(49380742)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49380743)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49380744)> CPU DETAIL: Write 1208: 2222444455660001 
DBG(49380746)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49380747)> CPU DETAIL: Read R 1211: 0000000000000005 
DBG(49380748)> CPU DETAIL: Word Shift 12 digits left: REG1: 0005000000000000 
DBG(49380749)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(49380751)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49380752)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49380753)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49380754)> CPU DETAIL: Transfer to T 
DBG(49380756)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380757)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380758)> CPU DETAIL: Result: 0060000000000052 
DBG(49380759)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49380761)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380762)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(49380763)> CPU DETAIL: Write 0001: 0005000000000000 
DBG(49380765)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380766)> CPU DETAIL: Read R 1206: 0100000000151111 
DBG(49380767)> CPU DETAIL: Write 0002: 0100000000151111 
DBG(49380769)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380770)> CPU DETAIL: Read R 1207: 0000000241000003 
DBG(49380771)> CPU DETAIL: Write 0003: 0000000241000003 
DBG(49380773)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380774)> CPU DETAIL: Read R 1208: 2222444455660001 
DBG(49380775)> CPU DETAIL: Write 0004: 2222444455660001 
DBG(49380777)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380778)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380779)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380781)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380782)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380784)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380785)> CPU DETAIL: Reset condition present 
DBG(49380785)> same as above (3 times)
DBG(49380785)> CPU DETAIL: Transfer to T 
DBG(49380787)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380788)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380788)> MT CMD: Tape unit 2: init write
DBG(49380788)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380788)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380788)> MT EXP: CRT 0001 to Tape: 0005000000000000 
DBG(49380788)> MT EXP: CRT 0002 to Tape: 0100000000151111 
DBG(49380788)> MT EXP: CRT 0003 to Tape: 0000000241000003 
DBG(49380788)> MT EXP: CRT 0004 to Tape: 2222444455660001 
DBG(49380788)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380788)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380788)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.12% of medium (20.58 inches)
DBG(49380791)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380792)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380793)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380794)> CPU DETAIL: Transfer to T 
DBG(49380796)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380797)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380798)> CPU DETAIL: Result: 0060000000000094 
DBG(49380799)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380801)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380802)> CPU DETAIL: Condition not present 
DBG(49380804)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380805)> CPU DETAIL: Transfer to T 
DBG(49380807)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380808)> CPU DETAIL: Transfer to T 
DBG(49380810)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49380811)> CPU DETAIL: Transfer to T 
DBG(49380813)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49380814)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49380815)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49380816)> CPU DETAIL: Result: 0000000000000000 
DBG(49380817)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(49380818)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49380820)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49380821)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380822)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49380823)> CPU DETAIL: Transfer to T 
DBG(49380825)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49380826)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(49380827)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49380828)> CPU DETAIL: Result: 0005000000000000 
DBG(49380829)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(49380831)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49380832)> CPU DETAIL: Read R 1218: 2222444455660001 
DBG(49380833)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49380834)> CPU DETAIL: Result: 0000000000000001 
DBG(49380835)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49380837)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380838)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380839)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49380842)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49380843)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(49380843)> CPU DETAIL: Read R 1057: 0000000242009990 
DBG(49380844)> CPU DETAIL: Write 1206: 0000000242009990 
DBG(49380846)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49380847)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(49380847)> CPU DETAIL: Read R 1058: 0104110000000000 
DBG(49380848)> CPU DETAIL: Write 1207: 0104110000000000 
DBG(49380850)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49380851)> CPU DETAIL: M6 Address Modifier: 0056 
DBG(49380851)> CPU DETAIL: Read R 1059: 0001209999999997 
DBG(49380852)> CPU DETAIL: Write 1208: 0001209999999997 
DBG(49380854)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49380855)> CPU DETAIL: Read R 1205: 0005000000000000 
DBG(49380856)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380857)> CPU DETAIL: Result: 0005000000000001 
DBG(49380858)> CPU DETAIL: Write 1205: 0005000000000001 
DBG(49380860)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49380861)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49380862)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49380863)> CPU DETAIL: Transfer to T 
DBG(49380865)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49380866)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380867)> CPU DETAIL: Result: 0060000000000071 
DBG(49380868)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49380870)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49380871)> CPU DETAIL: Read R 1205: 0005000000000001 
DBG(49380872)> CPU DETAIL: Write 0001: 0005000000000001 
DBG(49380874)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49380875)> CPU DETAIL: Read R 1206: 0000000242009990 
DBG(49380876)> CPU DETAIL: Write 0002: 0000000242009990 
DBG(49380878)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49380879)> CPU DETAIL: Read R 1207: 0104110000000000 
DBG(49380880)> CPU DETAIL: Write 0003: 0104110000000000 
DBG(49380882)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49380883)> CPU DETAIL: Read R 1208: 0001209999999997 
DBG(49380884)> CPU DETAIL: Write 0004: 0001209999999997 
DBG(49380886)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49380887)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49380888)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49380890)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49380891)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49380893)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49380894)> CPU DETAIL: Reset condition present 
DBG(49380894)> same as above (3 times)
DBG(49380894)> CPU DETAIL: Transfer to T 
DBG(49380896)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49380897)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49380897)> MT CMD: Tape unit 2: init write
DBG(49380897)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49380897)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49380897)> MT EXP: CRT 0001 to Tape: 0005000000000001 
DBG(49380897)> MT EXP: CRT 0002 to Tape: 0000000242009990 
DBG(49380897)> MT EXP: CRT 0003 to Tape: 0104110000000000 
DBG(49380897)> MT EXP: CRT 0004 to Tape: 0001209999999997 
DBG(49380897)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49380897)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49380897)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.13% of medium (22.30 inches)
DBG(49380900)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49380901)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49380902)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49380903)> CPU DETAIL: Transfer to T 
DBG(49380905)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49380906)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49380907)> CPU DETAIL: Result: 0060000000000094 
DBG(49380908)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49380910)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49380911)> CPU DETAIL: Condition not present 
DBG(49380913)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49380914)> CPU DETAIL: Transfer to T 
DBG(49380916)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49380917)> CPU DETAIL: Transfer to T 
DBG(49380919)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49380920)> CPU DETAIL: Transfer to T 
DBG(49380922)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49380923)> CPU DETAIL: Read R 1204: 0000000000000056 
DBG(49380924)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49380925)> CPU DETAIL: Result: 0000000000000059 
DBG(49380926)> CPU DETAIL: Write 1204: 0000000000000059 
DBG(49380928)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49380929)> CPU DETAIL: M4: 0007 
DBG(49380930)> CPU DETAIL: M6: 0059 
DBG(49380931)> CPU DETAIL: M8: 0000 
DBG(49380934)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49380935)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49380936)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49380937)> CPU DETAIL: Result: 0000000000000000 
DBG(49380938)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49380940)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49380941)> CPU DETAIL: Transfer to T 
DBG(49380943)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49380944)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49380945)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49380946)> CPU DETAIL: Transfer to T 
DBG(49380948)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49380949)> CPU DETAIL: Read R 1205: 0005000000000001 
DBG(49380950)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49380951)> CPU DETAIL: Result: 0005000000000000 
DBG(49380952)> CPU DETAIL: Write 1205: 0005000000000000 
DBG(49380954)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49380955)> CPU DETAIL: Transfer to T 
DBG(49380957)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49380958)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49380959)> CPU DETAIL: Read S 1204: 0000000000000059 
DBG(49380960)> CPU DETAIL: Result: 0000000000000133 
DBG(49380963)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49380964)> CPU DETAIL: REG1: 0000000000000133
DBG(49380964)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49380966)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49380967)> CPU DETAIL: Read R 1204: 0000000000000059 
DBG(49380968)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000590000 
DBG(49380971)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49380972)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49380973)> CPU DETAIL: Result: 0057000000590000 
DBG(49380974)> CPU DETAIL: Write 0038: 0057000000590000 
DBG(49380976)> CPU CMD: Exec 0038: 00 57 0000 0059 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49380977)> CPU DETAIL: Clear M4
DBG(49380977)> CPU DETAIL: M4: 0000 
DBG(49380978)> CPU DETAIL: Clear M6
DBG(49380978)> CPU DETAIL: M6: 0059 
DBG(49380979)> CPU DETAIL: Clear M8
DBG(49380979)> CPU DETAIL: M8: 0000 
DBG(49380982)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380983)> CPU DETAIL: M6 Address Modifier: 0059 
DBG(49380983)> CPU DETAIL: Read R 1060: 0100000000111112 
DBG(49380984)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49380984)> CPU DETAIL: Write 1212: 0100000000111112 
DBG(49380986)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49380987)> CPU DETAIL: M4: 0000 
DBG(49380988)> CPU DETAIL: M6: 0060 
DBG(49380989)> CPU DETAIL: M8: 0000 
DBG(49380992)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49380993)> CPU DETAIL: M4: 0001 
DBG(49380994)> CPU DETAIL: Transfer to T 
DBG(49380996)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49380997)> CPU DETAIL: M6 Address Modifier: 0060 
DBG(49380997)> CPU DETAIL: Read R 1061: 0000000209999990 
DBG(49380998)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49380998)> CPU DETAIL: Write 1213: 0000000209999990 
DBG(49381000)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381001)> CPU DETAIL: M4: 0001 
DBG(49381002)> CPU DETAIL: M6: 0061 
DBG(49381003)> CPU DETAIL: M8: 0000 
DBG(49381006)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381007)> CPU DETAIL: M4: 0002 
DBG(49381008)> CPU DETAIL: Transfer to T 
DBG(49381010)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381011)> CPU DETAIL: M6 Address Modifier: 0061 
DBG(49381011)> CPU DETAIL: Read R 1062: 0000000000000000 
DBG(49381012)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49381012)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49381014)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381015)> CPU DETAIL: M4: 0002 
DBG(49381016)> CPU DETAIL: M6: 0062 
DBG(49381017)> CPU DETAIL: M8: 0000 
DBG(49381020)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381021)> CPU DETAIL: M4: 0003 
DBG(49381022)> CPU DETAIL: Transfer to T 
DBG(49381024)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381025)> CPU DETAIL: M6 Address Modifier: 0062 
DBG(49381025)> CPU DETAIL: Read R 1063: 0000000000000000 
DBG(49381026)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49381026)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49381028)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381029)> CPU DETAIL: M4: 0003 
DBG(49381030)> CPU DETAIL: M6: 0063 
DBG(49381031)> CPU DETAIL: M8: 0000 
DBG(49381034)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381035)> CPU DETAIL: M4: 0004 
DBG(49381036)> CPU DETAIL: Transfer to T 
DBG(49381038)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381039)> CPU DETAIL: M6 Address Modifier: 0063 
DBG(49381039)> CPU DETAIL: Read R 1064: 0000000000000000 
DBG(49381040)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49381040)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49381042)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381043)> CPU DETAIL: M4: 0004 
DBG(49381044)> CPU DETAIL: M6: 0064 
DBG(49381045)> CPU DETAIL: M8: 0000 
DBG(49381048)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381049)> CPU DETAIL: M4: 0005 
DBG(49381050)> CPU DETAIL: Transfer to T 
DBG(49381052)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381053)> CPU DETAIL: M6 Address Modifier: 0064 
DBG(49381053)> CPU DETAIL: Read R 1065: 0000000000000000 
DBG(49381054)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49381054)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49381056)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381057)> CPU DETAIL: M4: 0005 
DBG(49381058)> CPU DETAIL: M6: 0065 
DBG(49381059)> CPU DETAIL: M8: 0000 
DBG(49381062)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381063)> CPU DETAIL: M4: 0006 
DBG(49381064)> CPU DETAIL: Transfer to T 
DBG(49381066)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381067)> CPU DETAIL: M6 Address Modifier: 0065 
DBG(49381067)> CPU DETAIL: Read R 1066: 0000000000000100 
DBG(49381068)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49381068)> CPU DETAIL: Write 1218: 0000000000000100 
DBG(49381070)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381071)> CPU DETAIL: M4: 0006 
DBG(49381072)> CPU DETAIL: M6: 0066 
DBG(49381073)> CPU DETAIL: M8: 0000 
DBG(49381076)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381077)> CPU DETAIL: M4: 0007 
DBG(49381080)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49381081)> CPU DETAIL: Read R 1204: 0000000000000059 
DBG(49381082)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49381083)> CPU DETAIL: Result: 0000000000000066 
DBG(49381084)> CPU DETAIL: Write 1204: 0000000000000066 
DBG(49381086)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49381087)> CPU DETAIL: Read R 1211: 0000000000000005 
DBG(49381088)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381089)> CPU DETAIL: Result: 0000000000000006 
DBG(49381090)> CPU DETAIL: Write 1211: 0000000000000006 
DBG(49381092)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49381093)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381094)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49381096)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49381097)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381098)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49381100)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49381101)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381102)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49381104)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49381105)> CPU DETAIL: Read R 1212: 0100000000111112 
DBG(49381106)> CPU DETAIL: Write 1206: 0100000000111112 
DBG(49381108)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49381109)> CPU DETAIL: Read R 1213: 0000000209999990 
DBG(49381110)> CPU DETAIL: Write 1207: 0000000209999990 
DBG(49381112)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49381113)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49381114)> CPU DETAIL: Write 1208: 0000000000000100 
DBG(49381116)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49381117)> CPU DETAIL: Read R 1211: 0000000000000006 
DBG(49381118)> CPU DETAIL: Word Shift 12 digits left: REG1: 0006000000000000 
DBG(49381119)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(49381121)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49381122)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49381123)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49381124)> CPU DETAIL: Transfer to T 
DBG(49381126)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381127)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381128)> CPU DETAIL: Result: 0060000000000052 
DBG(49381129)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49381131)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381132)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(49381133)> CPU DETAIL: Write 0001: 0006000000000000 
DBG(49381135)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381136)> CPU DETAIL: Read R 1206: 0100000000111112 
DBG(49381137)> CPU DETAIL: Write 0002: 0100000000111112 
DBG(49381139)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381140)> CPU DETAIL: Read R 1207: 0000000209999990 
DBG(49381141)> CPU DETAIL: Write 0003: 0000000209999990 
DBG(49381143)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381144)> CPU DETAIL: Read R 1208: 0000000000000100 
DBG(49381145)> CPU DETAIL: Write 0004: 0000000000000100 
DBG(49381147)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381148)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381149)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381151)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381152)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49381154)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49381155)> CPU DETAIL: Reset condition present 
DBG(49381155)> same as above (3 times)
DBG(49381155)> CPU DETAIL: Transfer to T 
DBG(49381157)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49381158)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49381158)> MT CMD: Tape unit 2: init write
DBG(49381158)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49381158)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49381158)> MT EXP: CRT 0001 to Tape: 0006000000000000 
DBG(49381158)> MT EXP: CRT 0002 to Tape: 0100000000111112 
DBG(49381158)> MT EXP: CRT 0003 to Tape: 0000000209999990 
DBG(49381158)> MT EXP: CRT 0004 to Tape: 0000000000000100 
DBG(49381158)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49381158)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49381158)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.14% of medium (24.01 inches)
DBG(49381161)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49381162)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49381163)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49381164)> CPU DETAIL: Transfer to T 
DBG(49381166)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49381167)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381168)> CPU DETAIL: Result: 0060000000000094 
DBG(49381169)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49381171)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49381172)> CPU DETAIL: Condition not present 
DBG(49381174)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49381175)> CPU DETAIL: Transfer to T 
DBG(49381177)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49381178)> CPU DETAIL: Transfer to T 
DBG(49381180)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49381181)> CPU DETAIL: Transfer to T 
DBG(49381183)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49381184)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49381185)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49381186)> CPU DETAIL: Result: 0000000000000100 
DBG(49381187)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49381188)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49381190)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49381191)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381192)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49381195)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49381196)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(49381196)> CPU DETAIL: Read R 1067: 0000000201000000 
DBG(49381197)> CPU DETAIL: Write 1206: 0000000201000000 
DBG(49381199)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49381200)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(49381200)> CPU DETAIL: Read R 1068: 0000000000033555 
DBG(49381201)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(49381203)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49381204)> CPU DETAIL: M6 Address Modifier: 0066 
DBG(49381204)> CPU DETAIL: Read R 1069: 0000000000033666 
DBG(49381205)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(49381207)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49381208)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(49381209)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49381210)> CPU DETAIL: Result: 0006000000000100 
DBG(49381211)> CPU DETAIL: Write 1205: 0006000000000100 
DBG(49381213)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49381214)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49381215)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49381216)> CPU DETAIL: Transfer to T 
DBG(49381218)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381219)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381220)> CPU DETAIL: Result: 0060000000000059 
DBG(49381221)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49381223)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381224)> CPU DETAIL: Read R 1205: 0006000000000100 
DBG(49381225)> CPU DETAIL: Write 0001: 0006000000000100 
DBG(49381227)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381228)> CPU DETAIL: Read R 1206: 0000000201000000 
DBG(49381229)> CPU DETAIL: Write 0002: 0000000201000000 
DBG(49381231)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381232)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(49381233)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(49381235)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381236)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(49381237)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(49381239)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381240)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381241)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381243)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381244)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49381246)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49381247)> CPU DETAIL: Reset condition present 
DBG(49381247)> same as above (3 times)
DBG(49381247)> CPU DETAIL: Transfer to T 
DBG(49381249)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49381250)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49381250)> MT CMD: Tape unit 2: init write
DBG(49381250)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49381250)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49381250)> MT EXP: CRT 0001 to Tape: 0006000000000100 
DBG(49381250)> MT EXP: CRT 0002 to Tape: 0000000201000000 
DBG(49381250)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(49381250)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(49381250)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49381250)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49381250)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.15% of medium (25.73 inches)
DBG(49381253)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49381254)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49381255)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49381256)> CPU DETAIL: Transfer to T 
DBG(49381258)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49381259)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381260)> CPU DETAIL: Result: 0060000000000094 
DBG(49381261)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49381263)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49381264)> CPU DETAIL: Condition not present 
DBG(49381266)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49381267)> CPU DETAIL: Transfer to T 
DBG(49381269)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49381270)> CPU DETAIL: Transfer to T 
DBG(49381272)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49381273)> CPU DETAIL: Transfer to T 
DBG(49381275)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49381276)> CPU DETAIL: Read R 1204: 0000000000000066 
DBG(49381277)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49381278)> CPU DETAIL: Result: 0000000000000069 
DBG(49381279)> CPU DETAIL: Write 1204: 0000000000000069 
DBG(49381281)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49381282)> CPU DETAIL: M4: 0007 
DBG(49381283)> CPU DETAIL: M6: 0069 
DBG(49381284)> CPU DETAIL: M8: 0000 
DBG(49381287)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49381288)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49381289)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381290)> CPU DETAIL: Result: 0000000000000000 
DBG(49381291)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49381293)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49381294)> CPU DETAIL: Transfer to T 
DBG(49381296)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49381297)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381298)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49381299)> CPU DETAIL: Transfer to T 
DBG(49381301)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49381302)> CPU DETAIL: Read R 1205: 0006000000000100 
DBG(49381303)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49381304)> CPU DETAIL: Result: 0006000000000000 
DBG(49381305)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(49381307)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49381308)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49381309)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49381310)> CPU DETAIL: Result: 0000000000000000 
DBG(49381311)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49381313)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49381314)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381315)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49381316)> CPU DETAIL: Transfer to T 
DBG(49381318)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49381319)> CPU DETAIL: Read R 1205: 0006000000000000 
DBG(49381320)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49381321)> CPU DETAIL: Result: 0006000000000000 
DBG(49381322)> CPU DETAIL: Write 1205: 0006000000000000 
DBG(49381324)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49381325)> CPU DETAIL: Transfer to T 
DBG(49381327)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49381328)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49381329)> CPU DETAIL: Read S 1204: 0000000000000069 
DBG(49381330)> CPU DETAIL: Result: 0000000000000123 
DBG(49381333)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49381334)> CPU DETAIL: REG1: 0000000000000123
DBG(49381334)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49381336)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49381337)> CPU DETAIL: Read R 1204: 0000000000000069 
DBG(49381338)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000690000 
DBG(49381341)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49381342)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49381343)> CPU DETAIL: Result: 0057000000690000 
DBG(49381344)> CPU DETAIL: Write 0038: 0057000000690000 
DBG(49381346)> CPU CMD: Exec 0038: 00 57 0000 0069 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49381347)> CPU DETAIL: Clear M4
DBG(49381347)> CPU DETAIL: M4: 0000 
DBG(49381348)> CPU DETAIL: Clear M6
DBG(49381348)> CPU DETAIL: M6: 0069 
DBG(49381349)> CPU DETAIL: Clear M8
DBG(49381349)> CPU DETAIL: M8: 0000 
DBG(49381352)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381353)> CPU DETAIL: M6 Address Modifier: 0069 
DBG(49381353)> CPU DETAIL: Read R 1070: 0130000000121112 
DBG(49381354)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49381354)> CPU DETAIL: Write 1212: 0130000000121112 
DBG(49381356)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381357)> CPU DETAIL: M4: 0000 
DBG(49381358)> CPU DETAIL: M6: 0070 
DBG(49381359)> CPU DETAIL: M8: 0000 
DBG(49381362)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381363)> CPU DETAIL: M4: 0001 
DBG(49381364)> CPU DETAIL: Transfer to T 
DBG(49381366)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381367)> CPU DETAIL: M6 Address Modifier: 0070 
DBG(49381367)> CPU DETAIL: Read R 1071: 0000000231010000 
DBG(49381368)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49381368)> CPU DETAIL: Write 1213: 0000000231010000 
DBG(49381370)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381371)> CPU DETAIL: M4: 0001 
DBG(49381372)> CPU DETAIL: M6: 0071 
DBG(49381373)> CPU DETAIL: M8: 0000 
DBG(49381376)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381377)> CPU DETAIL: M4: 0002 
DBG(49381378)> CPU DETAIL: Transfer to T 
DBG(49381380)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381381)> CPU DETAIL: M6 Address Modifier: 0071 
DBG(49381381)> CPU DETAIL: Read R 1072: 0000000000000000 
DBG(49381382)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49381382)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49381384)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381385)> CPU DETAIL: M4: 0002 
DBG(49381386)> CPU DETAIL: M6: 0072 
DBG(49381387)> CPU DETAIL: M8: 0000 
DBG(49381390)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381391)> CPU DETAIL: M4: 0003 
DBG(49381392)> CPU DETAIL: Transfer to T 
DBG(49381394)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381395)> CPU DETAIL: M6 Address Modifier: 0072 
DBG(49381395)> CPU DETAIL: Read R 1073: 0000000000000000 
DBG(49381396)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49381396)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49381398)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381399)> CPU DETAIL: M4: 0003 
DBG(49381400)> CPU DETAIL: M6: 0073 
DBG(49381401)> CPU DETAIL: M8: 0000 
DBG(49381404)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381405)> CPU DETAIL: M4: 0004 
DBG(49381406)> CPU DETAIL: Transfer to T 
DBG(49381408)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381409)> CPU DETAIL: M6 Address Modifier: 0073 
DBG(49381409)> CPU DETAIL: Read R 1074: 0000000000000000 
DBG(49381410)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49381410)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49381412)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381413)> CPU DETAIL: M4: 0004 
DBG(49381414)> CPU DETAIL: M6: 0074 
DBG(49381415)> CPU DETAIL: M8: 0000 
DBG(49381418)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381419)> CPU DETAIL: M4: 0005 
DBG(49381420)> CPU DETAIL: Transfer to T 
DBG(49381422)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381423)> CPU DETAIL: M6 Address Modifier: 0074 
DBG(49381423)> CPU DETAIL: Read R 1075: 0000000000000000 
DBG(49381424)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49381424)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49381426)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381427)> CPU DETAIL: M4: 0005 
DBG(49381428)> CPU DETAIL: M6: 0075 
DBG(49381429)> CPU DETAIL: M8: 0000 
DBG(49381432)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381433)> CPU DETAIL: M4: 0006 
DBG(49381434)> CPU DETAIL: Transfer to T 
DBG(49381436)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381437)> CPU DETAIL: M6 Address Modifier: 0075 
DBG(49381437)> CPU DETAIL: Read R 1076: 3334444455660101 
DBG(49381438)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49381438)> CPU DETAIL: Write 1218: 3334444455660101 
DBG(49381440)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381441)> CPU DETAIL: M4: 0006 
DBG(49381442)> CPU DETAIL: M6: 0076 
DBG(49381443)> CPU DETAIL: M8: 0000 
DBG(49381446)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381447)> CPU DETAIL: M4: 0007 
DBG(49381450)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49381451)> CPU DETAIL: Read R 1204: 0000000000000069 
DBG(49381452)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49381453)> CPU DETAIL: Result: 0000000000000076 
DBG(49381454)> CPU DETAIL: Write 1204: 0000000000000076 
DBG(49381456)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49381457)> CPU DETAIL: Read R 1211: 0000000000000006 
DBG(49381458)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381459)> CPU DETAIL: Result: 0000000000000007 
DBG(49381460)> CPU DETAIL: Write 1211: 0000000000000007 
DBG(49381462)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49381463)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381464)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49381466)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49381467)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381468)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49381470)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49381471)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381472)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49381474)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49381475)> CPU DETAIL: Read R 1212: 0130000000121112 
DBG(49381476)> CPU DETAIL: Write 1206: 0130000000121112 
DBG(49381478)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49381479)> CPU DETAIL: Read R 1213: 0000000231010000 
DBG(49381480)> CPU DETAIL: Write 1207: 0000000231010000 
DBG(49381482)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49381483)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49381484)> CPU DETAIL: Write 1208: 3334444455660101 
DBG(49381486)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49381487)> CPU DETAIL: Read R 1211: 0000000000000007 
DBG(49381488)> CPU DETAIL: Word Shift 12 digits left: REG1: 0007000000000000 
DBG(49381489)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(49381491)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49381492)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49381493)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49381494)> CPU DETAIL: Transfer to T 
DBG(49381496)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381497)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381498)> CPU DETAIL: Result: 0060000000000052 
DBG(49381499)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49381501)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381502)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(49381503)> CPU DETAIL: Write 0001: 0007000000000000 
DBG(49381505)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381506)> CPU DETAIL: Read R 1206: 0130000000121112 
DBG(49381507)> CPU DETAIL: Write 0002: 0130000000121112 
DBG(49381509)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381510)> CPU DETAIL: Read R 1207: 0000000231010000 
DBG(49381511)> CPU DETAIL: Write 0003: 0000000231010000 
DBG(49381513)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381514)> CPU DETAIL: Read R 1208: 3334444455660101 
DBG(49381515)> CPU DETAIL: Write 0004: 3334444455660101 
DBG(49381517)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381518)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381519)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381521)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381522)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49381524)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49381525)> CPU DETAIL: Reset condition present 
DBG(49381525)> same as above (3 times)
DBG(49381525)> CPU DETAIL: Transfer to T 
DBG(49381527)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49381528)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49381528)> MT CMD: Tape unit 2: init write
DBG(49381528)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49381528)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49381528)> MT EXP: CRT 0001 to Tape: 0007000000000000 
DBG(49381528)> MT EXP: CRT 0002 to Tape: 0130000000121112 
DBG(49381528)> MT EXP: CRT 0003 to Tape: 0000000231010000 
DBG(49381528)> MT EXP: CRT 0004 to Tape: 3334444455660101 
DBG(49381528)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49381528)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49381528)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.16% of medium (27.44 inches)
DBG(49381531)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49381532)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49381533)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49381534)> CPU DETAIL: Transfer to T 
DBG(49381536)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49381537)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381538)> CPU DETAIL: Result: 0060000000000094 
DBG(49381539)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49381541)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49381542)> CPU DETAIL: Condition not present 
DBG(49381544)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49381545)> CPU DETAIL: Transfer to T 
DBG(49381547)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49381548)> CPU DETAIL: Transfer to T 
DBG(49381550)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49381551)> CPU DETAIL: Transfer to T 
DBG(49381553)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49381554)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49381555)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49381556)> CPU DETAIL: Result: 0000000000000100 
DBG(49381557)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49381558)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49381560)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49381561)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381562)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49381565)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49381566)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(49381566)> CPU DETAIL: Read R 1077: 0000000231000000 
DBG(49381567)> CPU DETAIL: Write 1206: 0000000231000000 
DBG(49381569)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49381570)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(49381570)> CPU DETAIL: Read R 1078: 0000000000000000 
DBG(49381571)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49381573)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49381574)> CPU DETAIL: M6 Address Modifier: 0076 
DBG(49381574)> CPU DETAIL: Read R 1079: 0000000000000000 
DBG(49381575)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49381577)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49381578)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(49381579)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49381580)> CPU DETAIL: Result: 0007000000000100 
DBG(49381581)> CPU DETAIL: Write 1205: 0007000000000100 
DBG(49381583)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49381584)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49381585)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49381586)> CPU DETAIL: Transfer to T 
DBG(49381588)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381589)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381590)> CPU DETAIL: Result: 0060000000000059 
DBG(49381591)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49381593)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381594)> CPU DETAIL: Read R 1205: 0007000000000100 
DBG(49381595)> CPU DETAIL: Write 0001: 0007000000000100 
DBG(49381597)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381598)> CPU DETAIL: Read R 1206: 0000000231000000 
DBG(49381599)> CPU DETAIL: Write 0002: 0000000231000000 
DBG(49381601)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381602)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49381603)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49381605)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381606)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49381607)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49381609)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381610)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381611)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381613)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381614)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49381616)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49381617)> CPU DETAIL: Reset condition present 
DBG(49381617)> same as above (3 times)
DBG(49381617)> CPU DETAIL: Transfer to T 
DBG(49381619)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49381620)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49381620)> MT CMD: Tape unit 2: init write
DBG(49381620)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49381620)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49381620)> MT EXP: CRT 0001 to Tape: 0007000000000100 
DBG(49381620)> MT EXP: CRT 0002 to Tape: 0000000231000000 
DBG(49381620)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49381620)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49381620)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49381620)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49381620)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.17% of medium (29.16 inches)
DBG(49381623)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49381624)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49381625)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49381626)> CPU DETAIL: Transfer to T 
DBG(49381628)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49381629)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381630)> CPU DETAIL: Result: 0060000000000094 
DBG(49381631)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49381633)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49381634)> CPU DETAIL: Condition not present 
DBG(49381636)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49381637)> CPU DETAIL: Transfer to T 
DBG(49381639)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49381640)> CPU DETAIL: Transfer to T 
DBG(49381642)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49381643)> CPU DETAIL: Transfer to T 
DBG(49381645)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49381646)> CPU DETAIL: Read R 1204: 0000000000000076 
DBG(49381647)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49381648)> CPU DETAIL: Result: 0000000000000079 
DBG(49381649)> CPU DETAIL: Write 1204: 0000000000000079 
DBG(49381651)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49381652)> CPU DETAIL: M4: 0007 
DBG(49381653)> CPU DETAIL: M6: 0079 
DBG(49381654)> CPU DETAIL: M8: 0000 
DBG(49381657)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49381658)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49381659)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381660)> CPU DETAIL: Result: 0000000000000000 
DBG(49381661)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49381663)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49381664)> CPU DETAIL: Transfer to T 
DBG(49381666)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49381667)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381668)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49381669)> CPU DETAIL: Transfer to T 
DBG(49381671)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49381672)> CPU DETAIL: Read R 1205: 0007000000000100 
DBG(49381673)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49381674)> CPU DETAIL: Result: 0007000000000000 
DBG(49381675)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(49381677)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49381678)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49381679)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49381680)> CPU DETAIL: Result: 0000000000000001 
DBG(49381681)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49381683)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49381684)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381685)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49381688)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49381689)> CPU DETAIL: M6 Address Modifier: 0079 
DBG(49381689)> CPU DETAIL: Read R 1080: 0000000231030000 
DBG(49381690)> CPU DETAIL: Write 1206: 0000000231030000 
DBG(49381692)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49381693)> CPU DETAIL: M6 Address Modifier: 0079 
DBG(49381693)> CPU DETAIL: Read R 1081: 0000000000000000 
DBG(49381694)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49381696)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49381697)> CPU DETAIL: M6 Address Modifier: 0079 
DBG(49381697)> CPU DETAIL: Read R 1082: 0000000000000000 
DBG(49381698)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49381700)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49381701)> CPU DETAIL: Read R 1205: 0007000000000000 
DBG(49381702)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381703)> CPU DETAIL: Result: 0007000000000001 
DBG(49381704)> CPU DETAIL: Write 1205: 0007000000000001 
DBG(49381706)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49381707)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49381708)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49381709)> CPU DETAIL: Transfer to T 
DBG(49381711)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381712)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381713)> CPU DETAIL: Result: 0060000000000071 
DBG(49381714)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49381716)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381717)> CPU DETAIL: Read R 1205: 0007000000000001 
DBG(49381718)> CPU DETAIL: Write 0001: 0007000000000001 
DBG(49381720)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381721)> CPU DETAIL: Read R 1206: 0000000231030000 
DBG(49381722)> CPU DETAIL: Write 0002: 0000000231030000 
DBG(49381724)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381725)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49381726)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49381728)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381729)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49381730)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49381732)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381733)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381734)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381736)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381737)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49381739)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49381740)> CPU DETAIL: Reset condition present 
DBG(49381740)> same as above (3 times)
DBG(49381740)> CPU DETAIL: Transfer to T 
DBG(49381742)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49381743)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49381743)> MT CMD: Tape unit 2: init write
DBG(49381743)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49381743)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49381743)> MT EXP: CRT 0001 to Tape: 0007000000000001 
DBG(49381743)> MT EXP: CRT 0002 to Tape: 0000000231030000 
DBG(49381743)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49381743)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49381743)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49381743)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49381743)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.18% of medium (30.87 inches)
DBG(49381746)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49381747)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49381748)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49381749)> CPU DETAIL: Transfer to T 
DBG(49381751)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49381752)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381753)> CPU DETAIL: Result: 0060000000000094 
DBG(49381754)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49381756)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49381757)> CPU DETAIL: Condition not present 
DBG(49381759)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49381760)> CPU DETAIL: Transfer to T 
DBG(49381762)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49381763)> CPU DETAIL: Transfer to T 
DBG(49381765)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49381766)> CPU DETAIL: Transfer to T 
DBG(49381768)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49381769)> CPU DETAIL: Read R 1204: 0000000000000079 
DBG(49381770)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49381771)> CPU DETAIL: Result: 0000000000000082 
DBG(49381772)> CPU DETAIL: Write 1204: 0000000000000082 
DBG(49381774)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49381775)> CPU DETAIL: M4: 0007 
DBG(49381776)> CPU DETAIL: M6: 0082 
DBG(49381777)> CPU DETAIL: M8: 0000 
DBG(49381780)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49381781)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49381782)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381783)> CPU DETAIL: Result: 0000000000000000 
DBG(49381784)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49381786)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49381787)> CPU DETAIL: Transfer to T 
DBG(49381789)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49381790)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49381791)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49381792)> CPU DETAIL: Transfer to T 
DBG(49381794)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49381795)> CPU DETAIL: Read R 1205: 0007000000000001 
DBG(49381796)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49381797)> CPU DETAIL: Result: 0007000000000000 
DBG(49381798)> CPU DETAIL: Write 1205: 0007000000000000 
DBG(49381800)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49381801)> CPU DETAIL: Transfer to T 
DBG(49381803)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49381804)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49381805)> CPU DETAIL: Read S 1204: 0000000000000082 
DBG(49381806)> CPU DETAIL: Result: 0000000000000110 
DBG(49381809)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49381810)> CPU DETAIL: REG1: 0000000000000110
DBG(49381810)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49381812)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49381813)> CPU DETAIL: Read R 1204: 0000000000000082 
DBG(49381814)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000820000 
DBG(49381817)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49381818)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49381819)> CPU DETAIL: Result: 0057000000820000 
DBG(49381820)> CPU DETAIL: Write 0038: 0057000000820000 
DBG(49381822)> CPU CMD: Exec 0038: 00 57 0000 0082 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49381823)> CPU DETAIL: Clear M4
DBG(49381823)> CPU DETAIL: M4: 0000 
DBG(49381824)> CPU DETAIL: Clear M6
DBG(49381824)> CPU DETAIL: M6: 0082 
DBG(49381825)> CPU DETAIL: Clear M8
DBG(49381825)> CPU DETAIL: M8: 0000 
DBG(49381828)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381829)> CPU DETAIL: M6 Address Modifier: 0082 
DBG(49381829)> CPU DETAIL: Read R 1083: 0130000000121113 
DBG(49381830)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49381830)> CPU DETAIL: Write 1212: 0130000000121113 
DBG(49381832)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381833)> CPU DETAIL: M4: 0000 
DBG(49381834)> CPU DETAIL: M6: 0083 
DBG(49381835)> CPU DETAIL: M8: 0000 
DBG(49381838)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381839)> CPU DETAIL: M4: 0001 
DBG(49381840)> CPU DETAIL: Transfer to T 
DBG(49381842)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381843)> CPU DETAIL: M6 Address Modifier: 0083 
DBG(49381843)> CPU DETAIL: Read R 1084: 0000000231020003 
DBG(49381844)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49381844)> CPU DETAIL: Write 1213: 0000000231020003 
DBG(49381846)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381847)> CPU DETAIL: M4: 0001 
DBG(49381848)> CPU DETAIL: M6: 0084 
DBG(49381849)> CPU DETAIL: M8: 0000 
DBG(49381852)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381853)> CPU DETAIL: M4: 0002 
DBG(49381854)> CPU DETAIL: Transfer to T 
DBG(49381856)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381857)> CPU DETAIL: M6 Address Modifier: 0084 
DBG(49381857)> CPU DETAIL: Read R 1085: 0000000000000000 
DBG(49381858)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49381858)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49381860)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381861)> CPU DETAIL: M4: 0002 
DBG(49381862)> CPU DETAIL: M6: 0085 
DBG(49381863)> CPU DETAIL: M8: 0000 
DBG(49381866)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381867)> CPU DETAIL: M4: 0003 
DBG(49381868)> CPU DETAIL: Transfer to T 
DBG(49381870)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381871)> CPU DETAIL: M6 Address Modifier: 0085 
DBG(49381871)> CPU DETAIL: Read R 1086: 0000000000000000 
DBG(49381872)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49381872)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49381874)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381875)> CPU DETAIL: M4: 0003 
DBG(49381876)> CPU DETAIL: M6: 0086 
DBG(49381877)> CPU DETAIL: M8: 0000 
DBG(49381880)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381881)> CPU DETAIL: M4: 0004 
DBG(49381882)> CPU DETAIL: Transfer to T 
DBG(49381884)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381885)> CPU DETAIL: M6 Address Modifier: 0086 
DBG(49381885)> CPU DETAIL: Read R 1087: 0000000000000000 
DBG(49381886)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49381886)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49381888)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381889)> CPU DETAIL: M4: 0004 
DBG(49381890)> CPU DETAIL: M6: 0087 
DBG(49381891)> CPU DETAIL: M8: 0000 
DBG(49381894)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381895)> CPU DETAIL: M4: 0005 
DBG(49381896)> CPU DETAIL: Transfer to T 
DBG(49381898)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381899)> CPU DETAIL: M6 Address Modifier: 0087 
DBG(49381899)> CPU DETAIL: Read R 1088: 0000000000000000 
DBG(49381900)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49381900)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49381902)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381903)> CPU DETAIL: M4: 0005 
DBG(49381904)> CPU DETAIL: M6: 0088 
DBG(49381905)> CPU DETAIL: M8: 0000 
DBG(49381908)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381909)> CPU DETAIL: M4: 0006 
DBG(49381910)> CPU DETAIL: Transfer to T 
DBG(49381912)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49381913)> CPU DETAIL: M6 Address Modifier: 0088 
DBG(49381913)> CPU DETAIL: Read R 1089: 3335444455660101 
DBG(49381914)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49381914)> CPU DETAIL: Write 1218: 3335444455660101 
DBG(49381916)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49381917)> CPU DETAIL: M4: 0006 
DBG(49381918)> CPU DETAIL: M6: 0089 
DBG(49381919)> CPU DETAIL: M8: 0000 
DBG(49381922)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49381923)> CPU DETAIL: M4: 0007 
DBG(49381926)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49381927)> CPU DETAIL: Read R 1204: 0000000000000082 
DBG(49381928)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49381929)> CPU DETAIL: Result: 0000000000000089 
DBG(49381930)> CPU DETAIL: Write 1204: 0000000000000089 
DBG(49381932)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49381933)> CPU DETAIL: Read R 1211: 0000000000000007 
DBG(49381934)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49381935)> CPU DETAIL: Result: 0000000000000008 
DBG(49381936)> CPU DETAIL: Write 1211: 0000000000000008 
DBG(49381938)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49381939)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381940)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49381942)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49381943)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381944)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49381946)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49381947)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381948)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49381950)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49381951)> CPU DETAIL: Read R 1212: 0130000000121113 
DBG(49381952)> CPU DETAIL: Write 1206: 0130000000121113 
DBG(49381954)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49381955)> CPU DETAIL: Read R 1213: 0000000231020003 
DBG(49381956)> CPU DETAIL: Write 1207: 0000000231020003 
DBG(49381958)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49381959)> CPU DETAIL: Read R 1218: 3335444455660101 
DBG(49381960)> CPU DETAIL: Write 1208: 3335444455660101 
DBG(49381962)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49381963)> CPU DETAIL: Read R 1211: 0000000000000008 
DBG(49381964)> CPU DETAIL: Word Shift 12 digits left: REG1: 0008000000000000 
DBG(49381965)> CPU DETAIL: Write 1205: 0008000000000000 
DBG(49381967)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49381968)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49381969)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49381970)> CPU DETAIL: Transfer to T 
DBG(49381972)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49381973)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49381974)> CPU DETAIL: Result: 0060000000000052 
DBG(49381975)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49381977)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49381978)> CPU DETAIL: Read R 1205: 0008000000000000 
DBG(49381979)> CPU DETAIL: Write 0001: 0008000000000000 
DBG(49381981)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49381982)> CPU DETAIL: Read R 1206: 0130000000121113 
DBG(49381983)> CPU DETAIL: Write 0002: 0130000000121113 
DBG(49381985)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49381986)> CPU DETAIL: Read R 1207: 0000000231020003 
DBG(49381987)> CPU DETAIL: Write 0003: 0000000231020003 
DBG(49381989)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49381990)> CPU DETAIL: Read R 1208: 3335444455660101 
DBG(49381991)> CPU DETAIL: Write 0004: 3335444455660101 
DBG(49381993)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49381994)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49381995)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49381997)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49381998)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382000)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382001)> CPU DETAIL: Reset condition present 
DBG(49382001)> same as above (3 times)
DBG(49382001)> CPU DETAIL: Transfer to T 
DBG(49382003)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382004)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382004)> MT CMD: Tape unit 2: init write
DBG(49382004)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382004)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382004)> MT EXP: CRT 0001 to Tape: 0008000000000000 
DBG(49382004)> MT EXP: CRT 0002 to Tape: 0130000000121113 
DBG(49382004)> MT EXP: CRT 0003 to Tape: 0000000231020003 
DBG(49382004)> MT EXP: CRT 0004 to Tape: 3335444455660101 
DBG(49382004)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382004)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382004)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.19% of medium (32.59 inches)
DBG(49382007)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382008)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382009)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382010)> CPU DETAIL: Transfer to T 
DBG(49382012)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382013)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382014)> CPU DETAIL: Result: 0060000000000094 
DBG(49382015)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382017)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382018)> CPU DETAIL: Condition not present 
DBG(49382020)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382021)> CPU DETAIL: Transfer to T 
DBG(49382023)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382024)> CPU DETAIL: Transfer to T 
DBG(49382026)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49382027)> CPU DETAIL: Transfer to T 
DBG(49382029)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49382030)> CPU DETAIL: Read R 1218: 3335444455660101 
DBG(49382031)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49382032)> CPU DETAIL: Result: 0000000000000100 
DBG(49382033)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49382034)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49382036)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49382037)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382038)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49382041)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49382042)> CPU DETAIL: M6 Address Modifier: 0089 
DBG(49382042)> CPU DETAIL: Read R 1090: 0000000231000000 
DBG(49382043)> CPU DETAIL: Write 1206: 0000000231000000 
DBG(49382045)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49382046)> CPU DETAIL: M6 Address Modifier: 0089 
DBG(49382046)> CPU DETAIL: Read R 1091: 0000000000000000 
DBG(49382047)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382049)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49382050)> CPU DETAIL: M6 Address Modifier: 0089 
DBG(49382050)> CPU DETAIL: Read R 1092: 0000000000000000 
DBG(49382051)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382053)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49382054)> CPU DETAIL: Read R 1205: 0008000000000000 
DBG(49382055)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49382056)> CPU DETAIL: Result: 0008000000000100 
DBG(49382057)> CPU DETAIL: Write 1205: 0008000000000100 
DBG(49382059)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49382060)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49382061)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49382062)> CPU DETAIL: Transfer to T 
DBG(49382064)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382065)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382066)> CPU DETAIL: Result: 0060000000000059 
DBG(49382067)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49382069)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382070)> CPU DETAIL: Read R 1205: 0008000000000100 
DBG(49382071)> CPU DETAIL: Write 0001: 0008000000000100 
DBG(49382073)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382074)> CPU DETAIL: Read R 1206: 0000000231000000 
DBG(49382075)> CPU DETAIL: Write 0002: 0000000231000000 
DBG(49382077)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382078)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49382079)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49382081)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382082)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49382083)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49382085)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382086)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382087)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382089)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382090)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382092)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382093)> CPU DETAIL: Reset condition present 
DBG(49382093)> same as above (3 times)
DBG(49382093)> CPU DETAIL: Transfer to T 
DBG(49382095)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382096)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382096)> MT CMD: Tape unit 2: init write
DBG(49382096)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382096)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382096)> MT EXP: CRT 0001 to Tape: 0008000000000100 
DBG(49382096)> MT EXP: CRT 0002 to Tape: 0000000231000000 
DBG(49382096)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49382096)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49382096)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382096)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382096)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.20% of medium (34.30 inches)
DBG(49382099)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382100)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382101)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382102)> CPU DETAIL: Transfer to T 
DBG(49382104)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382105)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382106)> CPU DETAIL: Result: 0060000000000094 
DBG(49382107)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382109)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382110)> CPU DETAIL: Condition not present 
DBG(49382112)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382113)> CPU DETAIL: Transfer to T 
DBG(49382115)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382116)> CPU DETAIL: Transfer to T 
DBG(49382118)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49382119)> CPU DETAIL: Transfer to T 
DBG(49382121)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49382122)> CPU DETAIL: Read R 1204: 0000000000000089 
DBG(49382123)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49382124)> CPU DETAIL: Result: 0000000000000092 
DBG(49382125)> CPU DETAIL: Write 1204: 0000000000000092 
DBG(49382127)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49382128)> CPU DETAIL: M4: 0007 
DBG(49382129)> CPU DETAIL: M6: 0092 
DBG(49382130)> CPU DETAIL: M8: 0000 
DBG(49382133)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49382134)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49382135)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382136)> CPU DETAIL: Result: 0000000000000000 
DBG(49382137)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49382139)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49382140)> CPU DETAIL: Transfer to T 
DBG(49382142)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49382143)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382144)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49382145)> CPU DETAIL: Transfer to T 
DBG(49382147)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49382148)> CPU DETAIL: Read R 1205: 0008000000000100 
DBG(49382149)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49382150)> CPU DETAIL: Result: 0008000000000000 
DBG(49382151)> CPU DETAIL: Write 1205: 0008000000000000 
DBG(49382153)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49382154)> CPU DETAIL: Read R 1218: 3335444455660101 
DBG(49382155)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49382156)> CPU DETAIL: Result: 0000000000000001 
DBG(49382157)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49382159)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49382160)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382161)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49382164)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49382165)> CPU DETAIL: M6 Address Modifier: 0092 
DBG(49382165)> CPU DETAIL: Read R 1093: 0000000231030000 
DBG(49382166)> CPU DETAIL: Write 1206: 0000000231030000 
DBG(49382168)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49382169)> CPU DETAIL: M6 Address Modifier: 0092 
DBG(49382169)> CPU DETAIL: Read R 1094: 0000000000000000 
DBG(49382170)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382172)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49382173)> CPU DETAIL: M6 Address Modifier: 0092 
DBG(49382173)> CPU DETAIL: Read R 1095: 0000000000000000 
DBG(49382174)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382176)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49382177)> CPU DETAIL: Read R 1205: 0008000000000000 
DBG(49382178)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382179)> CPU DETAIL: Result: 0008000000000001 
DBG(49382180)> CPU DETAIL: Write 1205: 0008000000000001 
DBG(49382182)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49382183)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49382184)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49382185)> CPU DETAIL: Transfer to T 
DBG(49382187)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382188)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382189)> CPU DETAIL: Result: 0060000000000071 
DBG(49382190)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49382192)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382193)> CPU DETAIL: Read R 1205: 0008000000000001 
DBG(49382194)> CPU DETAIL: Write 0001: 0008000000000001 
DBG(49382196)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382197)> CPU DETAIL: Read R 1206: 0000000231030000 
DBG(49382198)> CPU DETAIL: Write 0002: 0000000231030000 
DBG(49382200)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382201)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49382202)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49382204)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382205)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49382206)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49382208)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382209)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382210)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382212)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382213)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382215)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382216)> CPU DETAIL: Reset condition present 
DBG(49382216)> same as above (3 times)
DBG(49382216)> CPU DETAIL: Transfer to T 
DBG(49382218)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382219)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382219)> MT CMD: Tape unit 2: init write
DBG(49382219)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382219)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382219)> MT EXP: CRT 0001 to Tape: 0008000000000001 
DBG(49382219)> MT EXP: CRT 0002 to Tape: 0000000231030000 
DBG(49382219)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49382219)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49382219)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382219)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382219)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.21% of medium (36.02 inches)
DBG(49382222)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382223)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382224)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382225)> CPU DETAIL: Transfer to T 
DBG(49382227)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382228)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382229)> CPU DETAIL: Result: 0060000000000094 
DBG(49382230)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382232)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382233)> CPU DETAIL: Condition not present 
DBG(49382235)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382236)> CPU DETAIL: Transfer to T 
DBG(49382238)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382239)> CPU DETAIL: Transfer to T 
DBG(49382241)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49382242)> CPU DETAIL: Transfer to T 
DBG(49382244)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49382245)> CPU DETAIL: Read R 1204: 0000000000000092 
DBG(49382246)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49382247)> CPU DETAIL: Result: 0000000000000095 
DBG(49382248)> CPU DETAIL: Write 1204: 0000000000000095 
DBG(49382250)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49382251)> CPU DETAIL: M4: 0007 
DBG(49382252)> CPU DETAIL: M6: 0095 
DBG(49382253)> CPU DETAIL: M8: 0000 
DBG(49382256)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49382257)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49382258)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382259)> CPU DETAIL: Result: 0000000000000000 
DBG(49382260)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49382262)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49382263)> CPU DETAIL: Transfer to T 
DBG(49382265)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49382266)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382267)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49382268)> CPU DETAIL: Transfer to T 
DBG(49382270)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49382271)> CPU DETAIL: Read R 1205: 0008000000000001 
DBG(49382272)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49382273)> CPU DETAIL: Result: 0008000000000000 
DBG(49382274)> CPU DETAIL: Write 1205: 0008000000000000 
DBG(49382276)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49382277)> CPU DETAIL: Transfer to T 
DBG(49382279)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49382280)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49382281)> CPU DETAIL: Read S 1204: 0000000000000095 
DBG(49382282)> CPU DETAIL: Result: 0000000000000097 
DBG(49382285)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49382286)> CPU DETAIL: REG1: 0000000000000097
DBG(49382286)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49382288)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49382289)> CPU DETAIL: Read R 1204: 0000000000000095 
DBG(49382290)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000950000 
DBG(49382293)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49382294)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49382295)> CPU DETAIL: Result: 0057000000950000 
DBG(49382296)> CPU DETAIL: Write 0038: 0057000000950000 
DBG(49382298)> CPU CMD: Exec 0038: 00 57 0000 0095 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49382299)> CPU DETAIL: Clear M4
DBG(49382299)> CPU DETAIL: M4: 0000 
DBG(49382300)> CPU DETAIL: Clear M6
DBG(49382300)> CPU DETAIL: M6: 0095 
DBG(49382301)> CPU DETAIL: Clear M8
DBG(49382301)> CPU DETAIL: M8: 0000 
DBG(49382304)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382305)> CPU DETAIL: M6 Address Modifier: 0095 
DBG(49382305)> CPU DETAIL: Read R 1096: 0130000000131112 
DBG(49382306)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49382306)> CPU DETAIL: Write 1212: 0130000000131112 
DBG(49382308)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382309)> CPU DETAIL: M4: 0000 
DBG(49382310)> CPU DETAIL: M6: 0096 
DBG(49382311)> CPU DETAIL: M8: 0000 
DBG(49382314)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382315)> CPU DETAIL: M4: 0001 
DBG(49382316)> CPU DETAIL: Transfer to T 
DBG(49382318)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382319)> CPU DETAIL: M6 Address Modifier: 0096 
DBG(49382319)> CPU DETAIL: Read R 1097: 0000000232010000 
DBG(49382320)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49382320)> CPU DETAIL: Write 1213: 0000000232010000 
DBG(49382322)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382323)> CPU DETAIL: M4: 0001 
DBG(49382324)> CPU DETAIL: M6: 0097 
DBG(49382325)> CPU DETAIL: M8: 0000 
DBG(49382328)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382329)> CPU DETAIL: M4: 0002 
DBG(49382330)> CPU DETAIL: Transfer to T 
DBG(49382332)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382333)> CPU DETAIL: M6 Address Modifier: 0097 
DBG(49382333)> CPU DETAIL: Read R 1098: 0000000000000000 
DBG(49382334)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49382334)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49382336)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382337)> CPU DETAIL: M4: 0002 
DBG(49382338)> CPU DETAIL: M6: 0098 
DBG(49382339)> CPU DETAIL: M8: 0000 
DBG(49382342)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382343)> CPU DETAIL: M4: 0003 
DBG(49382344)> CPU DETAIL: Transfer to T 
DBG(49382346)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382347)> CPU DETAIL: M6 Address Modifier: 0098 
DBG(49382347)> CPU DETAIL: Read R 1099: 0000000000000000 
DBG(49382348)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49382348)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49382350)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382351)> CPU DETAIL: M4: 0003 
DBG(49382352)> CPU DETAIL: M6: 0099 
DBG(49382353)> CPU DETAIL: M8: 0000 
DBG(49382356)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382357)> CPU DETAIL: M4: 0004 
DBG(49382358)> CPU DETAIL: Transfer to T 
DBG(49382360)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382361)> CPU DETAIL: M6 Address Modifier: 0099 
DBG(49382361)> CPU DETAIL: Read R 1100: 0000000000000000 
DBG(49382362)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49382362)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49382364)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382365)> CPU DETAIL: M4: 0004 
DBG(49382366)> CPU DETAIL: M6: 0100 
DBG(49382367)> CPU DETAIL: M8: 0000 
DBG(49382370)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382371)> CPU DETAIL: M4: 0005 
DBG(49382372)> CPU DETAIL: Transfer to T 
DBG(49382374)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382375)> CPU DETAIL: M6 Address Modifier: 0100 
DBG(49382375)> CPU DETAIL: Read R 1101: 0000000000000000 
DBG(49382376)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49382376)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49382378)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382379)> CPU DETAIL: M4: 0005 
DBG(49382380)> CPU DETAIL: M6: 0101 
DBG(49382381)> CPU DETAIL: M8: 0000 
DBG(49382384)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382385)> CPU DETAIL: M4: 0006 
DBG(49382386)> CPU DETAIL: Transfer to T 
DBG(49382388)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382389)> CPU DETAIL: M6 Address Modifier: 0101 
DBG(49382389)> CPU DETAIL: Read R 1102: 3334444455660101 
DBG(49382390)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49382390)> CPU DETAIL: Write 1218: 3334444455660101 
DBG(49382392)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382393)> CPU DETAIL: M4: 0006 
DBG(49382394)> CPU DETAIL: M6: 0102 
DBG(49382395)> CPU DETAIL: M8: 0000 
DBG(49382398)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382399)> CPU DETAIL: M4: 0007 
DBG(49382402)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49382403)> CPU DETAIL: Read R 1204: 0000000000000095 
DBG(49382404)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49382405)> CPU DETAIL: Result: 0000000000000102 
DBG(49382406)> CPU DETAIL: Write 1204: 0000000000000102 
DBG(49382408)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49382409)> CPU DETAIL: Read R 1211: 0000000000000008 
DBG(49382410)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382411)> CPU DETAIL: Result: 0000000000000009 
DBG(49382412)> CPU DETAIL: Write 1211: 0000000000000009 
DBG(49382414)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49382415)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382416)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49382418)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49382419)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382420)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382422)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49382423)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382424)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382426)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49382427)> CPU DETAIL: Read R 1212: 0130000000131112 
DBG(49382428)> CPU DETAIL: Write 1206: 0130000000131112 
DBG(49382430)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49382431)> CPU DETAIL: Read R 1213: 0000000232010000 
DBG(49382432)> CPU DETAIL: Write 1207: 0000000232010000 
DBG(49382434)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49382435)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49382436)> CPU DETAIL: Write 1208: 3334444455660101 
DBG(49382438)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49382439)> CPU DETAIL: Read R 1211: 0000000000000009 
DBG(49382440)> CPU DETAIL: Word Shift 12 digits left: REG1: 0009000000000000 
DBG(49382441)> CPU DETAIL: Write 1205: 0009000000000000 
DBG(49382443)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49382444)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49382445)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49382446)> CPU DETAIL: Transfer to T 
DBG(49382448)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382449)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382450)> CPU DETAIL: Result: 0060000000000052 
DBG(49382451)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49382453)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382454)> CPU DETAIL: Read R 1205: 0009000000000000 
DBG(49382455)> CPU DETAIL: Write 0001: 0009000000000000 
DBG(49382457)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382458)> CPU DETAIL: Read R 1206: 0130000000131112 
DBG(49382459)> CPU DETAIL: Write 0002: 0130000000131112 
DBG(49382461)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382462)> CPU DETAIL: Read R 1207: 0000000232010000 
DBG(49382463)> CPU DETAIL: Write 0003: 0000000232010000 
DBG(49382465)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382466)> CPU DETAIL: Read R 1208: 3334444455660101 
DBG(49382467)> CPU DETAIL: Write 0004: 3334444455660101 
DBG(49382469)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382470)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382471)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382473)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382474)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382476)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382477)> CPU DETAIL: Reset condition present 
DBG(49382477)> same as above (3 times)
DBG(49382477)> CPU DETAIL: Transfer to T 
DBG(49382479)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382480)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382480)> MT CMD: Tape unit 2: init write
DBG(49382480)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382480)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382480)> MT EXP: CRT 0001 to Tape: 0009000000000000 
DBG(49382480)> MT EXP: CRT 0002 to Tape: 0130000000131112 
DBG(49382480)> MT EXP: CRT 0003 to Tape: 0000000232010000 
DBG(49382480)> MT EXP: CRT 0004 to Tape: 3334444455660101 
DBG(49382480)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382480)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382480)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.22% of medium (37.73 inches)
DBG(49382483)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382484)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382485)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382486)> CPU DETAIL: Transfer to T 
DBG(49382488)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382489)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382490)> CPU DETAIL: Result: 0060000000000094 
DBG(49382491)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382493)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382494)> CPU DETAIL: Condition not present 
DBG(49382496)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382497)> CPU DETAIL: Transfer to T 
DBG(49382499)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382500)> CPU DETAIL: Transfer to T 
DBG(49382502)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49382503)> CPU DETAIL: Transfer to T 
DBG(49382505)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49382506)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49382507)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49382508)> CPU DETAIL: Result: 0000000000000100 
DBG(49382509)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49382510)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49382512)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49382513)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382514)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49382517)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49382518)> CPU DETAIL: M6 Address Modifier: 0102 
DBG(49382518)> CPU DETAIL: Read R 1103: 0000000232000000 
DBG(49382519)> CPU DETAIL: Write 1206: 0000000232000000 
DBG(49382521)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49382522)> CPU DETAIL: M6 Address Modifier: 0102 
DBG(49382522)> CPU DETAIL: Read R 1104: 0000000000000000 
DBG(49382523)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382525)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49382526)> CPU DETAIL: M6 Address Modifier: 0102 
DBG(49382526)> CPU DETAIL: Read R 1105: 0000000000000000 
DBG(49382527)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382529)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49382530)> CPU DETAIL: Read R 1205: 0009000000000000 
DBG(49382531)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49382532)> CPU DETAIL: Result: 0009000000000100 
DBG(49382533)> CPU DETAIL: Write 1205: 0009000000000100 
DBG(49382535)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49382536)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49382537)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49382538)> CPU DETAIL: Transfer to T 
DBG(49382540)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382541)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382542)> CPU DETAIL: Result: 0060000000000059 
DBG(49382543)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49382545)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382546)> CPU DETAIL: Read R 1205: 0009000000000100 
DBG(49382547)> CPU DETAIL: Write 0001: 0009000000000100 
DBG(49382549)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382550)> CPU DETAIL: Read R 1206: 0000000232000000 
DBG(49382551)> CPU DETAIL: Write 0002: 0000000232000000 
DBG(49382553)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382554)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49382555)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49382557)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382558)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49382559)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49382561)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382562)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382563)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382565)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382566)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382568)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382569)> CPU DETAIL: Reset condition present 
DBG(49382569)> same as above (3 times)
DBG(49382569)> CPU DETAIL: Transfer to T 
DBG(49382571)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382572)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382572)> MT CMD: Tape unit 2: init write
DBG(49382572)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382572)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382572)> MT EXP: CRT 0001 to Tape: 0009000000000100 
DBG(49382572)> MT EXP: CRT 0002 to Tape: 0000000232000000 
DBG(49382572)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49382572)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49382572)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382572)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382572)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.23% of medium (39.45 inches)
DBG(49382575)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382576)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382577)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382578)> CPU DETAIL: Transfer to T 
DBG(49382580)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382581)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382582)> CPU DETAIL: Result: 0060000000000094 
DBG(49382583)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382585)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382586)> CPU DETAIL: Condition not present 
DBG(49382588)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382589)> CPU DETAIL: Transfer to T 
DBG(49382591)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382592)> CPU DETAIL: Transfer to T 
DBG(49382594)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49382595)> CPU DETAIL: Transfer to T 
DBG(49382597)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49382598)> CPU DETAIL: Read R 1204: 0000000000000102 
DBG(49382599)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49382600)> CPU DETAIL: Result: 0000000000000105 
DBG(49382601)> CPU DETAIL: Write 1204: 0000000000000105 
DBG(49382603)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49382604)> CPU DETAIL: M4: 0007 
DBG(49382605)> CPU DETAIL: M6: 0105 
DBG(49382606)> CPU DETAIL: M8: 0000 
DBG(49382609)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49382610)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49382611)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382612)> CPU DETAIL: Result: 0000000000000000 
DBG(49382613)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49382615)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49382616)> CPU DETAIL: Transfer to T 
DBG(49382618)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49382619)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382620)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49382621)> CPU DETAIL: Transfer to T 
DBG(49382623)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49382624)> CPU DETAIL: Read R 1205: 0009000000000100 
DBG(49382625)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49382626)> CPU DETAIL: Result: 0009000000000000 
DBG(49382627)> CPU DETAIL: Write 1205: 0009000000000000 
DBG(49382629)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49382630)> CPU DETAIL: Read R 1218: 3334444455660101 
DBG(49382631)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49382632)> CPU DETAIL: Result: 0000000000000001 
DBG(49382633)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49382635)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49382636)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382637)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49382640)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49382641)> CPU DETAIL: M6 Address Modifier: 0105 
DBG(49382641)> CPU DETAIL: Read R 1106: 0000000232090000 
DBG(49382642)> CPU DETAIL: Write 1206: 0000000232090000 
DBG(49382644)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49382645)> CPU DETAIL: M6 Address Modifier: 0105 
DBG(49382645)> CPU DETAIL: Read R 1107: 0000000000000000 
DBG(49382646)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382648)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49382649)> CPU DETAIL: M6 Address Modifier: 0105 
DBG(49382649)> CPU DETAIL: Read R 1108: 0000000000000000 
DBG(49382650)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382652)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49382653)> CPU DETAIL: Read R 1205: 0009000000000000 
DBG(49382654)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382655)> CPU DETAIL: Result: 0009000000000001 
DBG(49382656)> CPU DETAIL: Write 1205: 0009000000000001 
DBG(49382658)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49382659)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49382660)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49382661)> CPU DETAIL: Transfer to T 
DBG(49382663)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382664)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382665)> CPU DETAIL: Result: 0060000000000071 
DBG(49382666)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49382668)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382669)> CPU DETAIL: Read R 1205: 0009000000000001 
DBG(49382670)> CPU DETAIL: Write 0001: 0009000000000001 
DBG(49382672)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382673)> CPU DETAIL: Read R 1206: 0000000232090000 
DBG(49382674)> CPU DETAIL: Write 0002: 0000000232090000 
DBG(49382676)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382677)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49382678)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49382680)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382681)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49382682)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49382684)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382685)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382686)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382688)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382689)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382691)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382692)> CPU DETAIL: Reset condition present 
DBG(49382692)> same as above (3 times)
DBG(49382692)> CPU DETAIL: Transfer to T 
DBG(49382694)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382695)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382695)> MT CMD: Tape unit 2: init write
DBG(49382695)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382695)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382695)> MT EXP: CRT 0001 to Tape: 0009000000000001 
DBG(49382695)> MT EXP: CRT 0002 to Tape: 0000000232090000 
DBG(49382695)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49382695)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49382695)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382695)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382695)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.25% of medium (41.16 inches)
DBG(49382698)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382699)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382700)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382701)> CPU DETAIL: Transfer to T 
DBG(49382703)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382704)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382705)> CPU DETAIL: Result: 0060000000000094 
DBG(49382706)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382708)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382709)> CPU DETAIL: Condition not present 
DBG(49382711)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382712)> CPU DETAIL: Transfer to T 
DBG(49382714)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382715)> CPU DETAIL: Transfer to T 
DBG(49382717)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49382718)> CPU DETAIL: Transfer to T 
DBG(49382720)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49382721)> CPU DETAIL: Read R 1204: 0000000000000105 
DBG(49382722)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49382723)> CPU DETAIL: Result: 0000000000000108 
DBG(49382724)> CPU DETAIL: Write 1204: 0000000000000108 
DBG(49382726)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49382727)> CPU DETAIL: M4: 0007 
DBG(49382728)> CPU DETAIL: M6: 0108 
DBG(49382729)> CPU DETAIL: M8: 0000 
DBG(49382732)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49382733)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49382734)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382735)> CPU DETAIL: Result: 0000000000000000 
DBG(49382736)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49382738)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49382739)> CPU DETAIL: Transfer to T 
DBG(49382741)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49382742)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382743)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49382744)> CPU DETAIL: Transfer to T 
DBG(49382746)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49382747)> CPU DETAIL: Read R 1205: 0009000000000001 
DBG(49382748)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49382749)> CPU DETAIL: Result: 0009000000000000 
DBG(49382750)> CPU DETAIL: Write 1205: 0009000000000000 
DBG(49382752)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49382753)> CPU DETAIL: Transfer to T 
DBG(49382755)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49382756)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49382757)> CPU DETAIL: Read S 1204: 0000000000000108 
DBG(49382758)> CPU DETAIL: Result: 0000000000000084 
DBG(49382761)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49382762)> CPU DETAIL: REG1: 0000000000000084
DBG(49382762)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49382764)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49382765)> CPU DETAIL: Read R 1204: 0000000000000108 
DBG(49382766)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001080000 
DBG(49382769)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49382770)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49382771)> CPU DETAIL: Result: 0057000001080000 
DBG(49382772)> CPU DETAIL: Write 0038: 0057000001080000 
DBG(49382774)> CPU CMD: Exec 0038: 00 57 0000 0108 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49382775)> CPU DETAIL: Clear M4
DBG(49382775)> CPU DETAIL: M4: 0000 
DBG(49382776)> CPU DETAIL: Clear M6
DBG(49382776)> CPU DETAIL: M6: 0108 
DBG(49382777)> CPU DETAIL: Clear M8
DBG(49382777)> CPU DETAIL: M8: 0000 
DBG(49382780)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382781)> CPU DETAIL: M6 Address Modifier: 0108 
DBG(49382781)> CPU DETAIL: Read R 1109: 0190000000141112 
DBG(49382782)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49382782)> CPU DETAIL: Write 1212: 0190000000141112 
DBG(49382784)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382785)> CPU DETAIL: M4: 0000 
DBG(49382786)> CPU DETAIL: M6: 0109 
DBG(49382787)> CPU DETAIL: M8: 0000 
DBG(49382790)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382791)> CPU DETAIL: M4: 0001 
DBG(49382792)> CPU DETAIL: Transfer to T 
DBG(49382794)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382795)> CPU DETAIL: M6 Address Modifier: 0109 
DBG(49382795)> CPU DETAIL: Read R 1110: 0000000233010000 
DBG(49382796)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49382796)> CPU DETAIL: Write 1213: 0000000233010000 
DBG(49382798)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382799)> CPU DETAIL: M4: 0001 
DBG(49382800)> CPU DETAIL: M6: 0110 
DBG(49382801)> CPU DETAIL: M8: 0000 
DBG(49382804)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382805)> CPU DETAIL: M4: 0002 
DBG(49382806)> CPU DETAIL: Transfer to T 
DBG(49382808)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382809)> CPU DETAIL: M6 Address Modifier: 0110 
DBG(49382809)> CPU DETAIL: Read R 1111: 0000000000000000 
DBG(49382810)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49382810)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49382812)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382813)> CPU DETAIL: M4: 0002 
DBG(49382814)> CPU DETAIL: M6: 0111 
DBG(49382815)> CPU DETAIL: M8: 0000 
DBG(49382818)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382819)> CPU DETAIL: M4: 0003 
DBG(49382820)> CPU DETAIL: Transfer to T 
DBG(49382822)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382823)> CPU DETAIL: M6 Address Modifier: 0111 
DBG(49382823)> CPU DETAIL: Read R 1112: 0000000000000000 
DBG(49382824)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49382824)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49382826)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382827)> CPU DETAIL: M4: 0003 
DBG(49382828)> CPU DETAIL: M6: 0112 
DBG(49382829)> CPU DETAIL: M8: 0000 
DBG(49382832)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382833)> CPU DETAIL: M4: 0004 
DBG(49382834)> CPU DETAIL: Transfer to T 
DBG(49382836)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382837)> CPU DETAIL: M6 Address Modifier: 0112 
DBG(49382837)> CPU DETAIL: Read R 1113: 0000000000000000 
DBG(49382838)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49382838)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49382840)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382841)> CPU DETAIL: M4: 0004 
DBG(49382842)> CPU DETAIL: M6: 0113 
DBG(49382843)> CPU DETAIL: M8: 0000 
DBG(49382846)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382847)> CPU DETAIL: M4: 0005 
DBG(49382848)> CPU DETAIL: Transfer to T 
DBG(49382850)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382851)> CPU DETAIL: M6 Address Modifier: 0113 
DBG(49382851)> CPU DETAIL: Read R 1114: 0000000000000000 
DBG(49382852)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49382852)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49382854)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382855)> CPU DETAIL: M4: 0005 
DBG(49382856)> CPU DETAIL: M6: 0114 
DBG(49382857)> CPU DETAIL: M8: 0000 
DBG(49382860)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382861)> CPU DETAIL: M4: 0006 
DBG(49382862)> CPU DETAIL: Transfer to T 
DBG(49382864)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49382865)> CPU DETAIL: M6 Address Modifier: 0114 
DBG(49382865)> CPU DETAIL: Read R 1115: 3334444455660103 
DBG(49382866)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49382866)> CPU DETAIL: Write 1218: 3334444455660103 
DBG(49382868)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49382869)> CPU DETAIL: M4: 0006 
DBG(49382870)> CPU DETAIL: M6: 0115 
DBG(49382871)> CPU DETAIL: M8: 0000 
DBG(49382874)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49382875)> CPU DETAIL: M4: 0007 
DBG(49382878)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49382879)> CPU DETAIL: Read R 1204: 0000000000000108 
DBG(49382880)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49382881)> CPU DETAIL: Result: 0000000000000115 
DBG(49382882)> CPU DETAIL: Write 1204: 0000000000000115 
DBG(49382884)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49382885)> CPU DETAIL: Read R 1211: 0000000000000009 
DBG(49382886)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49382887)> CPU DETAIL: Result: 0000000000000010 
DBG(49382888)> CPU DETAIL: Write 1211: 0000000000000010 
DBG(49382890)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49382891)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382892)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49382894)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49382895)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382896)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49382898)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49382899)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382900)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49382902)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49382903)> CPU DETAIL: Read R 1212: 0190000000141112 
DBG(49382904)> CPU DETAIL: Write 1206: 0190000000141112 
DBG(49382906)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49382907)> CPU DETAIL: Read R 1213: 0000000233010000 
DBG(49382908)> CPU DETAIL: Write 1207: 0000000233010000 
DBG(49382910)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49382911)> CPU DETAIL: Read R 1218: 3334444455660103 
DBG(49382912)> CPU DETAIL: Write 1208: 3334444455660103 
DBG(49382914)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49382915)> CPU DETAIL: Read R 1211: 0000000000000010 
DBG(49382916)> CPU DETAIL: Word Shift 12 digits left: REG1: 0010000000000000 
DBG(49382917)> CPU DETAIL: Write 1205: 0010000000000000 
DBG(49382919)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49382920)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49382921)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49382922)> CPU DETAIL: Transfer to T 
DBG(49382924)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49382925)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382926)> CPU DETAIL: Result: 0060000000000052 
DBG(49382927)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49382929)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49382930)> CPU DETAIL: Read R 1205: 0010000000000000 
DBG(49382931)> CPU DETAIL: Write 0001: 0010000000000000 
DBG(49382933)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49382934)> CPU DETAIL: Read R 1206: 0190000000141112 
DBG(49382935)> CPU DETAIL: Write 0002: 0190000000141112 
DBG(49382937)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49382938)> CPU DETAIL: Read R 1207: 0000000233010000 
DBG(49382939)> CPU DETAIL: Write 0003: 0000000233010000 
DBG(49382941)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49382942)> CPU DETAIL: Read R 1208: 3334444455660103 
DBG(49382943)> CPU DETAIL: Write 0004: 3334444455660103 
DBG(49382945)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49382946)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49382947)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49382949)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49382950)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49382952)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49382953)> CPU DETAIL: Reset condition present 
DBG(49382953)> same as above (3 times)
DBG(49382953)> CPU DETAIL: Transfer to T 
DBG(49382955)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49382956)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49382956)> MT CMD: Tape unit 2: init write
DBG(49382956)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49382956)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49382956)> MT EXP: CRT 0001 to Tape: 0010000000000000 
DBG(49382956)> MT EXP: CRT 0002 to Tape: 0190000000141112 
DBG(49382956)> MT EXP: CRT 0003 to Tape: 0000000233010000 
DBG(49382956)> MT EXP: CRT 0004 to Tape: 3334444455660103 
DBG(49382956)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49382956)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49382956)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.26% of medium (42.88 inches)
DBG(49382959)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49382960)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49382961)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49382962)> CPU DETAIL: Transfer to T 
DBG(49382964)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49382965)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49382966)> CPU DETAIL: Result: 0060000000000094 
DBG(49382967)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49382969)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49382970)> CPU DETAIL: Condition not present 
DBG(49382972)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49382973)> CPU DETAIL: Transfer to T 
DBG(49382975)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49382976)> CPU DETAIL: Transfer to T 
DBG(49382978)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49382979)> CPU DETAIL: Transfer to T 
DBG(49382981)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49382982)> CPU DETAIL: Read R 1218: 3334444455660103 
DBG(49382983)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49382984)> CPU DETAIL: Result: 0000000000000100 
DBG(49382985)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49382986)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49382988)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49382989)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49382990)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49382993)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49382994)> CPU DETAIL: M6 Address Modifier: 0115 
DBG(49382994)> CPU DETAIL: Read R 1116: 0000000233000000 
DBG(49382995)> CPU DETAIL: Write 1206: 0000000233000000 
DBG(49382997)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49382998)> CPU DETAIL: M6 Address Modifier: 0115 
DBG(49382998)> CPU DETAIL: Read R 1117: 0000000000000000 
DBG(49382999)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49383001)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383002)> CPU DETAIL: M6 Address Modifier: 0115 
DBG(49383002)> CPU DETAIL: Read R 1118: 0000000000000000 
DBG(49383003)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49383005)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49383006)> CPU DETAIL: Read R 1205: 0010000000000000 
DBG(49383007)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49383008)> CPU DETAIL: Result: 0010000000000100 
DBG(49383009)> CPU DETAIL: Write 1205: 0010000000000100 
DBG(49383011)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49383012)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49383013)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49383014)> CPU DETAIL: Transfer to T 
DBG(49383016)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383017)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383018)> CPU DETAIL: Result: 0060000000000059 
DBG(49383019)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49383021)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383022)> CPU DETAIL: Read R 1205: 0010000000000100 
DBG(49383023)> CPU DETAIL: Write 0001: 0010000000000100 
DBG(49383025)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383026)> CPU DETAIL: Read R 1206: 0000000233000000 
DBG(49383027)> CPU DETAIL: Write 0002: 0000000233000000 
DBG(49383029)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383030)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49383031)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49383033)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383034)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49383035)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49383037)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383038)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383039)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383041)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383042)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383044)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383045)> CPU DETAIL: Reset condition present 
DBG(49383045)> same as above (3 times)
DBG(49383045)> CPU DETAIL: Transfer to T 
DBG(49383047)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383048)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383048)> MT CMD: Tape unit 2: init write
DBG(49383048)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383048)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383048)> MT EXP: CRT 0001 to Tape: 0010000000000100 
DBG(49383048)> MT EXP: CRT 0002 to Tape: 0000000233000000 
DBG(49383048)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49383048)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49383048)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383048)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383048)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.27% of medium (44.59 inches)
DBG(49383051)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383052)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383053)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383054)> CPU DETAIL: Transfer to T 
DBG(49383056)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383057)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383058)> CPU DETAIL: Result: 0060000000000094 
DBG(49383059)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383061)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383062)> CPU DETAIL: Condition not present 
DBG(49383064)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383065)> CPU DETAIL: Transfer to T 
DBG(49383067)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383068)> CPU DETAIL: Transfer to T 
DBG(49383070)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49383071)> CPU DETAIL: Transfer to T 
DBG(49383073)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383074)> CPU DETAIL: Read R 1204: 0000000000000115 
DBG(49383075)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383076)> CPU DETAIL: Result: 0000000000000118 
DBG(49383077)> CPU DETAIL: Write 1204: 0000000000000118 
DBG(49383079)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383080)> CPU DETAIL: M4: 0007 
DBG(49383081)> CPU DETAIL: M6: 0118 
DBG(49383082)> CPU DETAIL: M8: 0000 
DBG(49383085)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49383086)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49383087)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383088)> CPU DETAIL: Result: 0000000000000000 
DBG(49383089)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49383091)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49383092)> CPU DETAIL: Transfer to T 
DBG(49383094)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49383095)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383096)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49383097)> CPU DETAIL: Transfer to T 
DBG(49383099)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49383100)> CPU DETAIL: Read R 1205: 0010000000000100 
DBG(49383101)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49383102)> CPU DETAIL: Result: 0010000000000000 
DBG(49383103)> CPU DETAIL: Write 1205: 0010000000000000 
DBG(49383105)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49383106)> CPU DETAIL: Read R 1218: 3334444455660103 
DBG(49383107)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49383108)> CPU DETAIL: Result: 0000000000000003 
DBG(49383109)> CPU DETAIL: Write 1210: 0000000000000003 
DBG(49383111)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383112)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383113)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(49383116)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49383117)> CPU DETAIL: M6 Address Modifier: 0118 
DBG(49383117)> CPU DETAIL: Read R 1119: 0000000233020000 
DBG(49383118)> CPU DETAIL: Write 1206: 0000000233020000 
DBG(49383120)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49383121)> CPU DETAIL: M6 Address Modifier: 0118 
DBG(49383121)> CPU DETAIL: Read R 1120: 0000000000000000 
DBG(49383122)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49383124)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383125)> CPU DETAIL: M6 Address Modifier: 0118 
DBG(49383125)> CPU DETAIL: Read R 1121: 0000000000000000 
DBG(49383126)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49383128)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49383129)> CPU DETAIL: Read R 1205: 0010000000000000 
DBG(49383130)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383131)> CPU DETAIL: Result: 0010000000000001 
DBG(49383132)> CPU DETAIL: Write 1205: 0010000000000001 
DBG(49383134)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49383135)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49383136)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49383137)> CPU DETAIL: Transfer to T 
DBG(49383139)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383140)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383141)> CPU DETAIL: Result: 0060000000000071 
DBG(49383142)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49383144)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383145)> CPU DETAIL: Read R 1205: 0010000000000001 
DBG(49383146)> CPU DETAIL: Write 0001: 0010000000000001 
DBG(49383148)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383149)> CPU DETAIL: Read R 1206: 0000000233020000 
DBG(49383150)> CPU DETAIL: Write 0002: 0000000233020000 
DBG(49383152)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383153)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49383154)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49383156)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383157)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49383158)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49383160)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383161)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383162)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383164)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383165)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383167)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383168)> CPU DETAIL: Reset condition present 
DBG(49383168)> same as above (3 times)
DBG(49383168)> CPU DETAIL: Transfer to T 
DBG(49383170)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383171)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383171)> MT CMD: Tape unit 2: init write
DBG(49383171)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383171)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383171)> MT EXP: CRT 0001 to Tape: 0010000000000001 
DBG(49383171)> MT EXP: CRT 0002 to Tape: 0000000233020000 
DBG(49383171)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49383171)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49383171)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383171)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383171)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.28% of medium (46.31 inches)
DBG(49383174)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383175)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383176)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383177)> CPU DETAIL: Transfer to T 
DBG(49383179)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383180)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383181)> CPU DETAIL: Result: 0060000000000094 
DBG(49383182)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383184)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383185)> CPU DETAIL: Condition not present 
DBG(49383187)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383188)> CPU DETAIL: Transfer to T 
DBG(49383190)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383191)> CPU DETAIL: Transfer to T 
DBG(49383193)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49383194)> CPU DETAIL: Transfer to T 
DBG(49383196)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383197)> CPU DETAIL: Read R 1204: 0000000000000118 
DBG(49383198)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383199)> CPU DETAIL: Result: 0000000000000121 
DBG(49383200)> CPU DETAIL: Write 1204: 0000000000000121 
DBG(49383202)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383203)> CPU DETAIL: M4: 0007 
DBG(49383204)> CPU DETAIL: M6: 0121 
DBG(49383205)> CPU DETAIL: M8: 0000 
DBG(49383208)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49383209)> CPU DETAIL: Read R 1210: 0000000000000003 
DBG(49383210)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383211)> CPU DETAIL: Result: 0000000000000002 
DBG(49383212)> CPU DETAIL: Write 1210: 0000000000000002 
DBG(49383214)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49383215)> CPU DETAIL: Transfer to T 
DBG(49383217)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383218)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383219)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49383222)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49383223)> CPU DETAIL: M6 Address Modifier: 0121 
DBG(49383223)> CPU DETAIL: Read R 1122: 0000000233030000 
DBG(49383224)> CPU DETAIL: Write 1206: 0000000233030000 
DBG(49383226)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49383227)> CPU DETAIL: M6 Address Modifier: 0121 
DBG(49383227)> CPU DETAIL: Read R 1123: 0000000000000000 
DBG(49383228)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49383230)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383231)> CPU DETAIL: M6 Address Modifier: 0121 
DBG(49383231)> CPU DETAIL: Read R 1124: 0000000000000000 
DBG(49383232)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49383234)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49383235)> CPU DETAIL: Read R 1205: 0010000000000001 
DBG(49383236)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383237)> CPU DETAIL: Result: 0010000000000002 
DBG(49383238)> CPU DETAIL: Write 1205: 0010000000000002 
DBG(49383240)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49383241)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49383242)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49383243)> CPU DETAIL: Transfer to T 
DBG(49383245)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383246)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383247)> CPU DETAIL: Result: 0060000000000071 
DBG(49383248)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49383250)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383251)> CPU DETAIL: Read R 1205: 0010000000000002 
DBG(49383252)> CPU DETAIL: Write 0001: 0010000000000002 
DBG(49383254)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383255)> CPU DETAIL: Read R 1206: 0000000233030000 
DBG(49383256)> CPU DETAIL: Write 0002: 0000000233030000 
DBG(49383258)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383259)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49383260)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49383262)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383263)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49383264)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49383266)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383267)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383268)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383270)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383271)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383273)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383274)> CPU DETAIL: Reset condition present 
DBG(49383274)> same as above (3 times)
DBG(49383274)> CPU DETAIL: Transfer to T 
DBG(49383276)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383277)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383277)> MT CMD: Tape unit 2: init write
DBG(49383277)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383277)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383277)> MT EXP: CRT 0001 to Tape: 0010000000000002 
DBG(49383277)> MT EXP: CRT 0002 to Tape: 0000000233030000 
DBG(49383277)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49383277)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49383277)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383277)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383277)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.29% of medium (48.02 inches)
DBG(49383280)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383281)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383282)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383283)> CPU DETAIL: Transfer to T 
DBG(49383285)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383286)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383287)> CPU DETAIL: Result: 0060000000000094 
DBG(49383288)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383290)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383291)> CPU DETAIL: Condition not present 
DBG(49383293)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383294)> CPU DETAIL: Transfer to T 
DBG(49383296)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383297)> CPU DETAIL: Transfer to T 
DBG(49383299)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49383300)> CPU DETAIL: Transfer to T 
DBG(49383302)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383303)> CPU DETAIL: Read R 1204: 0000000000000121 
DBG(49383304)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383305)> CPU DETAIL: Result: 0000000000000124 
DBG(49383306)> CPU DETAIL: Write 1204: 0000000000000124 
DBG(49383308)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383309)> CPU DETAIL: M4: 0007 
DBG(49383310)> CPU DETAIL: M6: 0124 
DBG(49383311)> CPU DETAIL: M8: 0000 
DBG(49383314)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49383315)> CPU DETAIL: Read R 1210: 0000000000000002 
DBG(49383316)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383317)> CPU DETAIL: Result: 0000000000000001 
DBG(49383318)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49383320)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49383321)> CPU DETAIL: Transfer to T 
DBG(49383323)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383324)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383325)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49383328)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49383329)> CPU DETAIL: M6 Address Modifier: 0124 
DBG(49383329)> CPU DETAIL: Read R 1125: 0000000233090000 
DBG(49383330)> CPU DETAIL: Write 1206: 0000000233090000 
DBG(49383332)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49383333)> CPU DETAIL: M6 Address Modifier: 0124 
DBG(49383333)> CPU DETAIL: Read R 1126: 0000000000000000 
DBG(49383334)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49383336)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383337)> CPU DETAIL: M6 Address Modifier: 0124 
DBG(49383337)> CPU DETAIL: Read R 1127: 0000000000000000 
DBG(49383338)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49383340)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49383341)> CPU DETAIL: Read R 1205: 0010000000000002 
DBG(49383342)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383343)> CPU DETAIL: Result: 0010000000000003 
DBG(49383344)> CPU DETAIL: Write 1205: 0010000000000003 
DBG(49383346)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49383347)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49383348)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49383349)> CPU DETAIL: Transfer to T 
DBG(49383351)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383352)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383353)> CPU DETAIL: Result: 0060000000000071 
DBG(49383354)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49383356)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383357)> CPU DETAIL: Read R 1205: 0010000000000003 
DBG(49383358)> CPU DETAIL: Write 0001: 0010000000000003 
DBG(49383360)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383361)> CPU DETAIL: Read R 1206: 0000000233090000 
DBG(49383362)> CPU DETAIL: Write 0002: 0000000233090000 
DBG(49383364)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383365)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49383366)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49383368)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383369)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49383370)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49383372)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383373)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383374)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383376)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383377)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383379)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383380)> CPU DETAIL: Reset condition present 
DBG(49383380)> same as above (3 times)
DBG(49383380)> CPU DETAIL: Transfer to T 
DBG(49383382)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383383)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383383)> MT CMD: Tape unit 2: init write
DBG(49383383)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383383)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383383)> MT EXP: CRT 0001 to Tape: 0010000000000003 
DBG(49383383)> MT EXP: CRT 0002 to Tape: 0000000233090000 
DBG(49383383)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49383383)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49383383)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383383)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383383)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.30% of medium (49.73 inches)
DBG(49383386)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383387)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383388)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383389)> CPU DETAIL: Transfer to T 
DBG(49383391)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383392)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383393)> CPU DETAIL: Result: 0060000000000094 
DBG(49383394)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383396)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383397)> CPU DETAIL: Condition not present 
DBG(49383399)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383400)> CPU DETAIL: Transfer to T 
DBG(49383402)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383403)> CPU DETAIL: Transfer to T 
DBG(49383405)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49383406)> CPU DETAIL: Transfer to T 
DBG(49383408)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383409)> CPU DETAIL: Read R 1204: 0000000000000124 
DBG(49383410)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383411)> CPU DETAIL: Result: 0000000000000127 
DBG(49383412)> CPU DETAIL: Write 1204: 0000000000000127 
DBG(49383414)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383415)> CPU DETAIL: M4: 0007 
DBG(49383416)> CPU DETAIL: M6: 0127 
DBG(49383417)> CPU DETAIL: M8: 0000 
DBG(49383420)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49383421)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49383422)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383423)> CPU DETAIL: Result: 0000000000000000 
DBG(49383424)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49383426)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49383427)> CPU DETAIL: Transfer to T 
DBG(49383429)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383430)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383431)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49383432)> CPU DETAIL: Transfer to T 
DBG(49383434)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49383435)> CPU DETAIL: Read R 1205: 0010000000000003 
DBG(49383436)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49383437)> CPU DETAIL: Result: 0010000000000000 
DBG(49383438)> CPU DETAIL: Write 1205: 0010000000000000 
DBG(49383440)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49383441)> CPU DETAIL: Transfer to T 
DBG(49383443)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49383444)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49383445)> CPU DETAIL: Read S 1204: 0000000000000127 
DBG(49383446)> CPU DETAIL: Result: 0000000000000065 
DBG(49383449)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49383450)> CPU DETAIL: REG1: 0000000000000065
DBG(49383450)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49383452)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49383453)> CPU DETAIL: Read R 1204: 0000000000000127 
DBG(49383454)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001270000 
DBG(49383457)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49383458)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49383459)> CPU DETAIL: Result: 0057000001270000 
DBG(49383460)> CPU DETAIL: Write 0038: 0057000001270000 
DBG(49383462)> CPU CMD: Exec 0038: 00 57 0000 0127 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49383463)> CPU DETAIL: Clear M4
DBG(49383463)> CPU DETAIL: M4: 0000 
DBG(49383464)> CPU DETAIL: Clear M6
DBG(49383464)> CPU DETAIL: M6: 0127 
DBG(49383465)> CPU DETAIL: Clear M8
DBG(49383465)> CPU DETAIL: M8: 0000 
DBG(49383468)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383469)> CPU DETAIL: M6 Address Modifier: 0127 
DBG(49383469)> CPU DETAIL: Read R 1128: 0130000000151113 
DBG(49383470)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49383470)> CPU DETAIL: Write 1212: 0130000000151113 
DBG(49383472)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383473)> CPU DETAIL: M4: 0000 
DBG(49383474)> CPU DETAIL: M6: 0128 
DBG(49383475)> CPU DETAIL: M8: 0000 
DBG(49383478)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383479)> CPU DETAIL: M4: 0001 
DBG(49383480)> CPU DETAIL: Transfer to T 
DBG(49383482)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383483)> CPU DETAIL: M6 Address Modifier: 0128 
DBG(49383483)> CPU DETAIL: Read R 1129: 0000000242009990 
DBG(49383484)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49383484)> CPU DETAIL: Write 1213: 0000000242009990 
DBG(49383486)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383487)> CPU DETAIL: M4: 0001 
DBG(49383488)> CPU DETAIL: M6: 0129 
DBG(49383489)> CPU DETAIL: M8: 0000 
DBG(49383492)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383493)> CPU DETAIL: M4: 0002 
DBG(49383494)> CPU DETAIL: Transfer to T 
DBG(49383496)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383497)> CPU DETAIL: M6 Address Modifier: 0129 
DBG(49383497)> CPU DETAIL: Read R 1130: 0000000000000000 
DBG(49383498)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49383498)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49383500)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383501)> CPU DETAIL: M4: 0002 
DBG(49383502)> CPU DETAIL: M6: 0130 
DBG(49383503)> CPU DETAIL: M8: 0000 
DBG(49383506)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383507)> CPU DETAIL: M4: 0003 
DBG(49383508)> CPU DETAIL: Transfer to T 
DBG(49383510)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383511)> CPU DETAIL: M6 Address Modifier: 0130 
DBG(49383511)> CPU DETAIL: Read R 1131: 0000000000000000 
DBG(49383512)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49383512)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49383514)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383515)> CPU DETAIL: M4: 0003 
DBG(49383516)> CPU DETAIL: M6: 0131 
DBG(49383517)> CPU DETAIL: M8: 0000 
DBG(49383520)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383521)> CPU DETAIL: M4: 0004 
DBG(49383522)> CPU DETAIL: Transfer to T 
DBG(49383524)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383525)> CPU DETAIL: M6 Address Modifier: 0131 
DBG(49383525)> CPU DETAIL: Read R 1132: 0000000000000000 
DBG(49383526)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49383526)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49383528)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383529)> CPU DETAIL: M4: 0004 
DBG(49383530)> CPU DETAIL: M6: 0132 
DBG(49383531)> CPU DETAIL: M8: 0000 
DBG(49383534)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383535)> CPU DETAIL: M4: 0005 
DBG(49383536)> CPU DETAIL: Transfer to T 
DBG(49383538)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383539)> CPU DETAIL: M6 Address Modifier: 0132 
DBG(49383539)> CPU DETAIL: Read R 1133: 0000000000000000 
DBG(49383540)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49383540)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49383542)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383543)> CPU DETAIL: M4: 0005 
DBG(49383544)> CPU DETAIL: M6: 0133 
DBG(49383545)> CPU DETAIL: M8: 0000 
DBG(49383548)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383549)> CPU DETAIL: M4: 0006 
DBG(49383550)> CPU DETAIL: Transfer to T 
DBG(49383552)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383553)> CPU DETAIL: M6 Address Modifier: 0133 
DBG(49383553)> CPU DETAIL: Read R 1134: 0000000000000101 
DBG(49383554)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49383554)> CPU DETAIL: Write 1218: 0000000000000101 
DBG(49383556)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383557)> CPU DETAIL: M4: 0006 
DBG(49383558)> CPU DETAIL: M6: 0134 
DBG(49383559)> CPU DETAIL: M8: 0000 
DBG(49383562)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383563)> CPU DETAIL: M4: 0007 
DBG(49383566)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49383567)> CPU DETAIL: Read R 1204: 0000000000000127 
DBG(49383568)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49383569)> CPU DETAIL: Result: 0000000000000134 
DBG(49383570)> CPU DETAIL: Write 1204: 0000000000000134 
DBG(49383572)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49383573)> CPU DETAIL: Read R 1211: 0000000000000010 
DBG(49383574)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383575)> CPU DETAIL: Result: 0000000000000011 
DBG(49383576)> CPU DETAIL: Write 1211: 0000000000000011 
DBG(49383578)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49383579)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383580)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49383582)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49383583)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383584)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49383586)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49383587)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383588)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49383590)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49383591)> CPU DETAIL: Read R 1212: 0130000000151113 
DBG(49383592)> CPU DETAIL: Write 1206: 0130000000151113 
DBG(49383594)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49383595)> CPU DETAIL: Read R 1213: 0000000242009990 
DBG(49383596)> CPU DETAIL: Write 1207: 0000000242009990 
DBG(49383598)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49383599)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(49383600)> CPU DETAIL: Write 1208: 0000000000000101 
DBG(49383602)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49383603)> CPU DETAIL: Read R 1211: 0000000000000011 
DBG(49383604)> CPU DETAIL: Word Shift 12 digits left: REG1: 0011000000000000 
DBG(49383605)> CPU DETAIL: Write 1205: 0011000000000000 
DBG(49383607)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49383608)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49383609)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49383610)> CPU DETAIL: Transfer to T 
DBG(49383612)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383613)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383614)> CPU DETAIL: Result: 0060000000000052 
DBG(49383615)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49383617)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383618)> CPU DETAIL: Read R 1205: 0011000000000000 
DBG(49383619)> CPU DETAIL: Write 0001: 0011000000000000 
DBG(49383621)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383622)> CPU DETAIL: Read R 1206: 0130000000151113 
DBG(49383623)> CPU DETAIL: Write 0002: 0130000000151113 
DBG(49383625)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383626)> CPU DETAIL: Read R 1207: 0000000242009990 
DBG(49383627)> CPU DETAIL: Write 0003: 0000000242009990 
DBG(49383629)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383630)> CPU DETAIL: Read R 1208: 0000000000000101 
DBG(49383631)> CPU DETAIL: Write 0004: 0000000000000101 
DBG(49383633)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383634)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383635)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383637)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383638)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383640)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383641)> CPU DETAIL: Reset condition present 
DBG(49383641)> same as above (3 times)
DBG(49383641)> CPU DETAIL: Transfer to T 
DBG(49383643)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383644)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383644)> MT CMD: Tape unit 2: init write
DBG(49383644)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383644)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383644)> MT EXP: CRT 0001 to Tape: 0011000000000000 
DBG(49383644)> MT EXP: CRT 0002 to Tape: 0130000000151113 
DBG(49383644)> MT EXP: CRT 0003 to Tape: 0000000242009990 
DBG(49383644)> MT EXP: CRT 0004 to Tape: 0000000000000101 
DBG(49383644)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383644)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383644)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.31% of medium (51.45 inches)
DBG(49383647)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383648)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383649)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383650)> CPU DETAIL: Transfer to T 
DBG(49383652)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383653)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383654)> CPU DETAIL: Result: 0060000000000094 
DBG(49383655)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383657)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383658)> CPU DETAIL: Condition not present 
DBG(49383660)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383661)> CPU DETAIL: Transfer to T 
DBG(49383663)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383664)> CPU DETAIL: Transfer to T 
DBG(49383666)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49383667)> CPU DETAIL: Transfer to T 
DBG(49383669)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49383670)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(49383671)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49383672)> CPU DETAIL: Result: 0000000000000100 
DBG(49383673)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49383674)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49383676)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49383677)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383678)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49383681)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49383682)> CPU DETAIL: M6 Address Modifier: 0134 
DBG(49383682)> CPU DETAIL: Read R 1135: 0000000241000000 
DBG(49383683)> CPU DETAIL: Write 1206: 0000000241000000 
DBG(49383685)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49383686)> CPU DETAIL: M6 Address Modifier: 0134 
DBG(49383686)> CPU DETAIL: Read R 1136: 0000000000033555 
DBG(49383687)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(49383689)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383690)> CPU DETAIL: M6 Address Modifier: 0134 
DBG(49383690)> CPU DETAIL: Read R 1137: 0000000000033666 
DBG(49383691)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(49383693)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49383694)> CPU DETAIL: Read R 1205: 0011000000000000 
DBG(49383695)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49383696)> CPU DETAIL: Result: 0011000000000100 
DBG(49383697)> CPU DETAIL: Write 1205: 0011000000000100 
DBG(49383699)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49383700)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49383701)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49383702)> CPU DETAIL: Transfer to T 
DBG(49383704)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383705)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383706)> CPU DETAIL: Result: 0060000000000059 
DBG(49383707)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49383709)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383710)> CPU DETAIL: Read R 1205: 0011000000000100 
DBG(49383711)> CPU DETAIL: Write 0001: 0011000000000100 
DBG(49383713)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383714)> CPU DETAIL: Read R 1206: 0000000241000000 
DBG(49383715)> CPU DETAIL: Write 0002: 0000000241000000 
DBG(49383717)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383718)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(49383719)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(49383721)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383722)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(49383723)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(49383725)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383726)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383727)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383729)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383730)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383732)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383733)> CPU DETAIL: Reset condition present 
DBG(49383733)> same as above (3 times)
DBG(49383733)> CPU DETAIL: Transfer to T 
DBG(49383735)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383736)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383736)> MT CMD: Tape unit 2: init write
DBG(49383736)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383736)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383736)> MT EXP: CRT 0001 to Tape: 0011000000000100 
DBG(49383736)> MT EXP: CRT 0002 to Tape: 0000000241000000 
DBG(49383736)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(49383736)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(49383736)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383736)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383736)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.32% of medium (53.16 inches)
DBG(49383739)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383740)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383741)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383742)> CPU DETAIL: Transfer to T 
DBG(49383744)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383745)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383746)> CPU DETAIL: Result: 0060000000000094 
DBG(49383747)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383749)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383750)> CPU DETAIL: Condition not present 
DBG(49383752)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383753)> CPU DETAIL: Transfer to T 
DBG(49383755)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383756)> CPU DETAIL: Transfer to T 
DBG(49383758)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49383759)> CPU DETAIL: Transfer to T 
DBG(49383761)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383762)> CPU DETAIL: Read R 1204: 0000000000000134 
DBG(49383763)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383764)> CPU DETAIL: Result: 0000000000000137 
DBG(49383765)> CPU DETAIL: Write 1204: 0000000000000137 
DBG(49383767)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383768)> CPU DETAIL: M4: 0007 
DBG(49383769)> CPU DETAIL: M6: 0137 
DBG(49383770)> CPU DETAIL: M8: 0000 
DBG(49383773)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49383774)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49383775)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383776)> CPU DETAIL: Result: 0000000000000000 
DBG(49383777)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49383779)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49383780)> CPU DETAIL: Transfer to T 
DBG(49383782)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49383783)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383784)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49383785)> CPU DETAIL: Transfer to T 
DBG(49383787)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49383788)> CPU DETAIL: Read R 1205: 0011000000000100 
DBG(49383789)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49383790)> CPU DETAIL: Result: 0011000000000000 
DBG(49383791)> CPU DETAIL: Write 1205: 0011000000000000 
DBG(49383793)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49383794)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(49383795)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49383796)> CPU DETAIL: Result: 0000000000000001 
DBG(49383797)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49383799)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383800)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383801)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49383804)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49383805)> CPU DETAIL: M6 Address Modifier: 0137 
DBG(49383805)> CPU DETAIL: Read R 1138: 0000000249999990 
DBG(49383806)> CPU DETAIL: Write 1206: 0000000249999990 
DBG(49383808)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49383809)> CPU DETAIL: M6 Address Modifier: 0137 
DBG(49383809)> CPU DETAIL: Read R 1139: 0000000000033555 
DBG(49383810)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(49383812)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49383813)> CPU DETAIL: M6 Address Modifier: 0137 
DBG(49383813)> CPU DETAIL: Read R 1140: 0000000000033666 
DBG(49383814)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(49383816)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49383817)> CPU DETAIL: Read R 1205: 0011000000000000 
DBG(49383818)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383819)> CPU DETAIL: Result: 0011000000000001 
DBG(49383820)> CPU DETAIL: Write 1205: 0011000000000001 
DBG(49383822)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49383823)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49383824)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49383825)> CPU DETAIL: Transfer to T 
DBG(49383827)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49383828)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383829)> CPU DETAIL: Result: 0060000000000071 
DBG(49383830)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49383832)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49383833)> CPU DETAIL: Read R 1205: 0011000000000001 
DBG(49383834)> CPU DETAIL: Write 0001: 0011000000000001 
DBG(49383836)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49383837)> CPU DETAIL: Read R 1206: 0000000249999990 
DBG(49383838)> CPU DETAIL: Write 0002: 0000000249999990 
DBG(49383840)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49383841)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(49383842)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(49383844)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49383845)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(49383846)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(49383848)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49383849)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49383850)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49383852)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49383853)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49383855)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49383856)> CPU DETAIL: Reset condition present 
DBG(49383856)> same as above (3 times)
DBG(49383856)> CPU DETAIL: Transfer to T 
DBG(49383858)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49383859)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49383859)> MT CMD: Tape unit 2: init write
DBG(49383859)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49383859)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49383859)> MT EXP: CRT 0001 to Tape: 0011000000000001 
DBG(49383859)> MT EXP: CRT 0002 to Tape: 0000000249999990 
DBG(49383859)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(49383859)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(49383859)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49383859)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49383859)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.33% of medium (54.88 inches)
DBG(49383862)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49383863)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49383864)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49383865)> CPU DETAIL: Transfer to T 
DBG(49383867)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49383868)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49383869)> CPU DETAIL: Result: 0060000000000094 
DBG(49383870)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49383872)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49383873)> CPU DETAIL: Condition not present 
DBG(49383875)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49383876)> CPU DETAIL: Transfer to T 
DBG(49383878)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49383879)> CPU DETAIL: Transfer to T 
DBG(49383881)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49383882)> CPU DETAIL: Transfer to T 
DBG(49383884)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49383885)> CPU DETAIL: Read R 1204: 0000000000000137 
DBG(49383886)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49383887)> CPU DETAIL: Result: 0000000000000140 
DBG(49383888)> CPU DETAIL: Write 1204: 0000000000000140 
DBG(49383890)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49383891)> CPU DETAIL: M4: 0007 
DBG(49383892)> CPU DETAIL: M6: 0140 
DBG(49383893)> CPU DETAIL: M8: 0000 
DBG(49383896)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49383897)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49383898)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49383899)> CPU DETAIL: Result: 0000000000000000 
DBG(49383900)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49383902)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49383903)> CPU DETAIL: Transfer to T 
DBG(49383905)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49383906)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49383907)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49383908)> CPU DETAIL: Transfer to T 
DBG(49383910)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49383911)> CPU DETAIL: Read R 1205: 0011000000000001 
DBG(49383912)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49383913)> CPU DETAIL: Result: 0011000000000000 
DBG(49383914)> CPU DETAIL: Write 1205: 0011000000000000 
DBG(49383916)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49383917)> CPU DETAIL: Transfer to T 
DBG(49383919)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49383920)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49383921)> CPU DETAIL: Read S 1204: 0000000000000140 
DBG(49383922)> CPU DETAIL: Result: 0000000000000052 
DBG(49383925)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49383926)> CPU DETAIL: REG1: 0000000000000052
DBG(49383926)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49383928)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49383929)> CPU DETAIL: Read R 1204: 0000000000000140 
DBG(49383930)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001400000 
DBG(49383933)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49383934)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49383935)> CPU DETAIL: Result: 0057000001400000 
DBG(49383936)> CPU DETAIL: Write 0038: 0057000001400000 
DBG(49383938)> CPU CMD: Exec 0038: 00 57 0000 0140 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49383939)> CPU DETAIL: Clear M4
DBG(49383939)> CPU DETAIL: M4: 0000 
DBG(49383940)> CPU DETAIL: Clear M6
DBG(49383940)> CPU DETAIL: M6: 0140 
DBG(49383941)> CPU DETAIL: Clear M8
DBG(49383941)> CPU DETAIL: M8: 0000 
DBG(49383944)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383945)> CPU DETAIL: M6 Address Modifier: 0140 
DBG(49383945)> CPU DETAIL: Read R 1141: 0130000000121114 
DBG(49383946)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49383946)> CPU DETAIL: Write 1212: 0130000000121114 
DBG(49383948)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383949)> CPU DETAIL: M4: 0000 
DBG(49383950)> CPU DETAIL: M6: 0141 
DBG(49383951)> CPU DETAIL: M8: 0000 
DBG(49383954)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383955)> CPU DETAIL: M4: 0001 
DBG(49383956)> CPU DETAIL: Transfer to T 
DBG(49383958)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383959)> CPU DETAIL: M6 Address Modifier: 0141 
DBG(49383959)> CPU DETAIL: Read R 1142: 0000000231030000 
DBG(49383960)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49383960)> CPU DETAIL: Write 1213: 0000000231030000 
DBG(49383962)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383963)> CPU DETAIL: M4: 0001 
DBG(49383964)> CPU DETAIL: M6: 0142 
DBG(49383965)> CPU DETAIL: M8: 0000 
DBG(49383968)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383969)> CPU DETAIL: M4: 0002 
DBG(49383970)> CPU DETAIL: Transfer to T 
DBG(49383972)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383973)> CPU DETAIL: M6 Address Modifier: 0142 
DBG(49383973)> CPU DETAIL: Read R 1143: 0000000000000000 
DBG(49383974)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49383974)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49383976)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383977)> CPU DETAIL: M4: 0002 
DBG(49383978)> CPU DETAIL: M6: 0143 
DBG(49383979)> CPU DETAIL: M8: 0000 
DBG(49383982)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383983)> CPU DETAIL: M4: 0003 
DBG(49383984)> CPU DETAIL: Transfer to T 
DBG(49383986)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49383987)> CPU DETAIL: M6 Address Modifier: 0143 
DBG(49383987)> CPU DETAIL: Read R 1144: 0000000000000000 
DBG(49383988)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49383988)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49383990)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49383991)> CPU DETAIL: M4: 0003 
DBG(49383992)> CPU DETAIL: M6: 0144 
DBG(49383993)> CPU DETAIL: M8: 0000 
DBG(49383996)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49383997)> CPU DETAIL: M4: 0004 
DBG(49383998)> CPU DETAIL: Transfer to T 
DBG(49384000)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384001)> CPU DETAIL: M6 Address Modifier: 0144 
DBG(49384001)> CPU DETAIL: Read R 1145: 0000000000000000 
DBG(49384002)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49384002)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49384004)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384005)> CPU DETAIL: M4: 0004 
DBG(49384006)> CPU DETAIL: M6: 0145 
DBG(49384007)> CPU DETAIL: M8: 0000 
DBG(49384010)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384011)> CPU DETAIL: M4: 0005 
DBG(49384012)> CPU DETAIL: Transfer to T 
DBG(49384014)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384015)> CPU DETAIL: M6 Address Modifier: 0145 
DBG(49384015)> CPU DETAIL: Read R 1146: 0000000000000000 
DBG(49384016)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49384016)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49384018)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384019)> CPU DETAIL: M4: 0005 
DBG(49384020)> CPU DETAIL: M6: 0146 
DBG(49384021)> CPU DETAIL: M8: 0000 
DBG(49384024)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384025)> CPU DETAIL: M4: 0006 
DBG(49384026)> CPU DETAIL: Transfer to T 
DBG(49384028)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384029)> CPU DETAIL: M6 Address Modifier: 0146 
DBG(49384029)> CPU DETAIL: Read R 1147: 3336000000000200 
DBG(49384030)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49384030)> CPU DETAIL: Write 1218: 3336000000000200 
DBG(49384032)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384033)> CPU DETAIL: M4: 0006 
DBG(49384034)> CPU DETAIL: M6: 0147 
DBG(49384035)> CPU DETAIL: M8: 0000 
DBG(49384038)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384039)> CPU DETAIL: M4: 0007 
DBG(49384042)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49384043)> CPU DETAIL: Read R 1204: 0000000000000140 
DBG(49384044)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49384045)> CPU DETAIL: Result: 0000000000000147 
DBG(49384046)> CPU DETAIL: Write 1204: 0000000000000147 
DBG(49384048)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49384049)> CPU DETAIL: Read R 1211: 0000000000000011 
DBG(49384050)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384051)> CPU DETAIL: Result: 0000000000000012 
DBG(49384052)> CPU DETAIL: Write 1211: 0000000000000012 
DBG(49384054)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49384055)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384056)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49384058)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49384059)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384060)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384062)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49384063)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384064)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384066)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49384067)> CPU DETAIL: Read R 1212: 0130000000121114 
DBG(49384068)> CPU DETAIL: Write 1206: 0130000000121114 
DBG(49384070)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49384071)> CPU DETAIL: Read R 1213: 0000000231030000 
DBG(49384072)> CPU DETAIL: Write 1207: 0000000231030000 
DBG(49384074)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49384075)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384076)> CPU DETAIL: Write 1208: 3336000000000200 
DBG(49384078)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49384079)> CPU DETAIL: Read R 1211: 0000000000000012 
DBG(49384080)> CPU DETAIL: Word Shift 12 digits left: REG1: 0012000000000000 
DBG(49384081)> CPU DETAIL: Write 1205: 0012000000000000 
DBG(49384083)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49384084)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49384085)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49384086)> CPU DETAIL: Transfer to T 
DBG(49384088)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384089)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384090)> CPU DETAIL: Result: 0060000000000052 
DBG(49384091)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49384093)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384094)> CPU DETAIL: Read R 1205: 0012000000000000 
DBG(49384095)> CPU DETAIL: Write 0001: 0012000000000000 
DBG(49384097)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384098)> CPU DETAIL: Read R 1206: 0130000000121114 
DBG(49384099)> CPU DETAIL: Write 0002: 0130000000121114 
DBG(49384101)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384102)> CPU DETAIL: Read R 1207: 0000000231030000 
DBG(49384103)> CPU DETAIL: Write 0003: 0000000231030000 
DBG(49384105)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384106)> CPU DETAIL: Read R 1208: 3336000000000200 
DBG(49384107)> CPU DETAIL: Write 0004: 3336000000000200 
DBG(49384109)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384110)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384111)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384113)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384114)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384116)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384117)> CPU DETAIL: Reset condition present 
DBG(49384117)> same as above (3 times)
DBG(49384117)> CPU DETAIL: Transfer to T 
DBG(49384119)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384120)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384120)> MT CMD: Tape unit 2: init write
DBG(49384120)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384120)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384120)> MT EXP: CRT 0001 to Tape: 0012000000000000 
DBG(49384120)> MT EXP: CRT 0002 to Tape: 0130000000121114 
DBG(49384120)> MT EXP: CRT 0003 to Tape: 0000000231030000 
DBG(49384120)> MT EXP: CRT 0004 to Tape: 3336000000000200 
DBG(49384120)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384120)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384120)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.34% of medium (56.59 inches)
DBG(49384123)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384124)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384125)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384126)> CPU DETAIL: Transfer to T 
DBG(49384128)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384129)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384130)> CPU DETAIL: Result: 0060000000000094 
DBG(49384131)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384133)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384134)> CPU DETAIL: Condition not present 
DBG(49384136)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384137)> CPU DETAIL: Transfer to T 
DBG(49384139)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384140)> CPU DETAIL: Transfer to T 
DBG(49384142)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49384143)> CPU DETAIL: Transfer to T 
DBG(49384145)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49384146)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384147)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49384148)> CPU DETAIL: Result: 0000000000000200 
DBG(49384149)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(49384150)> CPU DETAIL: Write 1209: 0000000000000002 
DBG(49384152)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384153)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384154)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49384157)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49384158)> CPU DETAIL: M6 Address Modifier: 0147 
DBG(49384158)> CPU DETAIL: Read R 1148: 0000000231010000 
DBG(49384159)> CPU DETAIL: Write 1206: 0000000231010000 
DBG(49384161)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49384162)> CPU DETAIL: M6 Address Modifier: 0147 
DBG(49384162)> CPU DETAIL: Read R 1149: 0000000000000000 
DBG(49384163)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384165)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49384166)> CPU DETAIL: M6 Address Modifier: 0147 
DBG(49384166)> CPU DETAIL: Read R 1150: 0000000000000000 
DBG(49384167)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384169)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49384170)> CPU DETAIL: Read R 1205: 0012000000000000 
DBG(49384171)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49384172)> CPU DETAIL: Result: 0012000000000100 
DBG(49384173)> CPU DETAIL: Write 1205: 0012000000000100 
DBG(49384175)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49384176)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49384177)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49384178)> CPU DETAIL: Transfer to T 
DBG(49384180)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384181)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384182)> CPU DETAIL: Result: 0060000000000059 
DBG(49384183)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49384185)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384186)> CPU DETAIL: Read R 1205: 0012000000000100 
DBG(49384187)> CPU DETAIL: Write 0001: 0012000000000100 
DBG(49384189)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384190)> CPU DETAIL: Read R 1206: 0000000231010000 
DBG(49384191)> CPU DETAIL: Write 0002: 0000000231010000 
DBG(49384193)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384194)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49384195)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49384197)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384198)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49384199)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49384201)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384202)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384203)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384205)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384206)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384208)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384209)> CPU DETAIL: Reset condition present 
DBG(49384209)> same as above (3 times)
DBG(49384209)> CPU DETAIL: Transfer to T 
DBG(49384211)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384212)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384212)> MT CMD: Tape unit 2: init write
DBG(49384212)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384212)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384212)> MT EXP: CRT 0001 to Tape: 0012000000000100 
DBG(49384212)> MT EXP: CRT 0002 to Tape: 0000000231010000 
DBG(49384212)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49384212)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49384212)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384212)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384212)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.35% of medium (58.31 inches)
DBG(49384215)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384216)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384217)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384218)> CPU DETAIL: Transfer to T 
DBG(49384220)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384221)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384222)> CPU DETAIL: Result: 0060000000000094 
DBG(49384223)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384225)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384226)> CPU DETAIL: Condition not present 
DBG(49384228)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384229)> CPU DETAIL: Transfer to T 
DBG(49384231)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384232)> CPU DETAIL: Transfer to T 
DBG(49384234)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49384235)> CPU DETAIL: Transfer to T 
DBG(49384237)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49384238)> CPU DETAIL: Read R 1204: 0000000000000147 
DBG(49384239)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49384240)> CPU DETAIL: Result: 0000000000000150 
DBG(49384241)> CPU DETAIL: Write 1204: 0000000000000150 
DBG(49384243)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49384244)> CPU DETAIL: M4: 0007 
DBG(49384245)> CPU DETAIL: M6: 0150 
DBG(49384246)> CPU DETAIL: M8: 0000 
DBG(49384249)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49384250)> CPU DETAIL: Read R 1209: 0000000000000002 
DBG(49384251)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384252)> CPU DETAIL: Result: 0000000000000001 
DBG(49384253)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49384255)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49384256)> CPU DETAIL: Transfer to T 
DBG(49384258)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384259)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384260)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49384263)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49384264)> CPU DETAIL: M6 Address Modifier: 0150 
DBG(49384264)> CPU DETAIL: Read R 1151: 0000000231020000 
DBG(49384265)> CPU DETAIL: Write 1206: 0000000231020000 
DBG(49384267)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49384268)> CPU DETAIL: M6 Address Modifier: 0150 
DBG(49384268)> CPU DETAIL: Read R 1152: 0000000000000000 
DBG(49384269)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384271)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49384272)> CPU DETAIL: M6 Address Modifier: 0150 
DBG(49384272)> CPU DETAIL: Read R 1153: 0000000000000000 
DBG(49384273)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384275)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49384276)> CPU DETAIL: Read R 1205: 0012000000000100 
DBG(49384277)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49384278)> CPU DETAIL: Result: 0012000000000200 
DBG(49384279)> CPU DETAIL: Write 1205: 0012000000000200 
DBG(49384281)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49384282)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49384283)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49384284)> CPU DETAIL: Transfer to T 
DBG(49384286)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384287)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384288)> CPU DETAIL: Result: 0060000000000059 
DBG(49384289)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49384291)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384292)> CPU DETAIL: Read R 1205: 0012000000000200 
DBG(49384293)> CPU DETAIL: Write 0001: 0012000000000200 
DBG(49384295)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384296)> CPU DETAIL: Read R 1206: 0000000231020000 
DBG(49384297)> CPU DETAIL: Write 0002: 0000000231020000 
DBG(49384299)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384300)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49384301)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49384303)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384304)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49384305)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49384307)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384308)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384309)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384311)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384312)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384314)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384315)> CPU DETAIL: Reset condition present 
DBG(49384315)> same as above (3 times)
DBG(49384315)> CPU DETAIL: Transfer to T 
DBG(49384317)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384318)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384318)> MT CMD: Tape unit 2: init write
DBG(49384318)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384318)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384318)> MT EXP: CRT 0001 to Tape: 0012000000000200 
DBG(49384318)> MT EXP: CRT 0002 to Tape: 0000000231020000 
DBG(49384318)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49384318)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49384318)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384318)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384318)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.36% of medium (60.02 inches)
DBG(49384321)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384322)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384323)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384324)> CPU DETAIL: Transfer to T 
DBG(49384326)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384327)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384328)> CPU DETAIL: Result: 0060000000000094 
DBG(49384329)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384331)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384332)> CPU DETAIL: Condition not present 
DBG(49384334)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384335)> CPU DETAIL: Transfer to T 
DBG(49384337)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384338)> CPU DETAIL: Transfer to T 
DBG(49384340)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49384341)> CPU DETAIL: Transfer to T 
DBG(49384343)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49384344)> CPU DETAIL: Read R 1204: 0000000000000150 
DBG(49384345)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49384346)> CPU DETAIL: Result: 0000000000000153 
DBG(49384347)> CPU DETAIL: Write 1204: 0000000000000153 
DBG(49384349)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49384350)> CPU DETAIL: M4: 0007 
DBG(49384351)> CPU DETAIL: M6: 0153 
DBG(49384352)> CPU DETAIL: M8: 0000 
DBG(49384355)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49384356)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49384357)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384358)> CPU DETAIL: Result: 0000000000000000 
DBG(49384359)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49384361)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49384362)> CPU DETAIL: Transfer to T 
DBG(49384364)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384365)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384366)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49384367)> CPU DETAIL: Transfer to T 
DBG(49384369)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49384370)> CPU DETAIL: Read R 1205: 0012000000000200 
DBG(49384371)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49384372)> CPU DETAIL: Result: 0012000000000000 
DBG(49384373)> CPU DETAIL: Write 1205: 0012000000000000 
DBG(49384375)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49384376)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384377)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49384378)> CPU DETAIL: Result: 0000000000000000 
DBG(49384379)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49384381)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49384382)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384383)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49384384)> CPU DETAIL: Transfer to T 
DBG(49384386)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49384387)> CPU DETAIL: Read R 1205: 0012000000000000 
DBG(49384388)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49384389)> CPU DETAIL: Result: 0012000000000000 
DBG(49384390)> CPU DETAIL: Write 1205: 0012000000000000 
DBG(49384392)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49384393)> CPU DETAIL: Transfer to T 
DBG(49384395)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49384396)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49384397)> CPU DETAIL: Read S 1204: 0000000000000153 
DBG(49384398)> CPU DETAIL: Result: 0000000000000039 
DBG(49384401)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49384402)> CPU DETAIL: REG1: 0000000000000039
DBG(49384402)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49384404)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49384405)> CPU DETAIL: Read R 1204: 0000000000000153 
DBG(49384406)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001530000 
DBG(49384409)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49384410)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49384411)> CPU DETAIL: Result: 0057000001530000 
DBG(49384412)> CPU DETAIL: Write 0038: 0057000001530000 
DBG(49384414)> CPU CMD: Exec 0038: 00 57 0000 0153 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49384415)> CPU DETAIL: Clear M4
DBG(49384415)> CPU DETAIL: M4: 0000 
DBG(49384416)> CPU DETAIL: Clear M6
DBG(49384416)> CPU DETAIL: M6: 0153 
DBG(49384417)> CPU DETAIL: Clear M8
DBG(49384417)> CPU DETAIL: M8: 0000 
DBG(49384420)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384421)> CPU DETAIL: M6 Address Modifier: 0153 
DBG(49384421)> CPU DETAIL: Read R 1154: 0130000000131113 
DBG(49384422)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49384422)> CPU DETAIL: Write 1212: 0130000000131113 
DBG(49384424)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384425)> CPU DETAIL: M4: 0000 
DBG(49384426)> CPU DETAIL: M6: 0154 
DBG(49384427)> CPU DETAIL: M8: 0000 
DBG(49384430)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384431)> CPU DETAIL: M4: 0001 
DBG(49384432)> CPU DETAIL: Transfer to T 
DBG(49384434)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384435)> CPU DETAIL: M6 Address Modifier: 0154 
DBG(49384435)> CPU DETAIL: Read R 1155: 0000000232090000 
DBG(49384436)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49384436)> CPU DETAIL: Write 1213: 0000000232090000 
DBG(49384438)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384439)> CPU DETAIL: M4: 0001 
DBG(49384440)> CPU DETAIL: M6: 0155 
DBG(49384441)> CPU DETAIL: M8: 0000 
DBG(49384444)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384445)> CPU DETAIL: M4: 0002 
DBG(49384446)> CPU DETAIL: Transfer to T 
DBG(49384448)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384449)> CPU DETAIL: M6 Address Modifier: 0155 
DBG(49384449)> CPU DETAIL: Read R 1156: 0000000000000000 
DBG(49384450)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49384450)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49384452)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384453)> CPU DETAIL: M4: 0002 
DBG(49384454)> CPU DETAIL: M6: 0156 
DBG(49384455)> CPU DETAIL: M8: 0000 
DBG(49384458)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384459)> CPU DETAIL: M4: 0003 
DBG(49384460)> CPU DETAIL: Transfer to T 
DBG(49384462)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384463)> CPU DETAIL: M6 Address Modifier: 0156 
DBG(49384463)> CPU DETAIL: Read R 1157: 0000000000000000 
DBG(49384464)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49384464)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49384466)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384467)> CPU DETAIL: M4: 0003 
DBG(49384468)> CPU DETAIL: M6: 0157 
DBG(49384469)> CPU DETAIL: M8: 0000 
DBG(49384472)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384473)> CPU DETAIL: M4: 0004 
DBG(49384474)> CPU DETAIL: Transfer to T 
DBG(49384476)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384477)> CPU DETAIL: M6 Address Modifier: 0157 
DBG(49384477)> CPU DETAIL: Read R 1158: 0000000000000000 
DBG(49384478)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49384478)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49384480)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384481)> CPU DETAIL: M4: 0004 
DBG(49384482)> CPU DETAIL: M6: 0158 
DBG(49384483)> CPU DETAIL: M8: 0000 
DBG(49384486)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384487)> CPU DETAIL: M4: 0005 
DBG(49384488)> CPU DETAIL: Transfer to T 
DBG(49384490)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384491)> CPU DETAIL: M6 Address Modifier: 0158 
DBG(49384491)> CPU DETAIL: Read R 1159: 0000000000000000 
DBG(49384492)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49384492)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49384494)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384495)> CPU DETAIL: M4: 0005 
DBG(49384496)> CPU DETAIL: M6: 0159 
DBG(49384497)> CPU DETAIL: M8: 0000 
DBG(49384500)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384501)> CPU DETAIL: M4: 0006 
DBG(49384502)> CPU DETAIL: Transfer to T 
DBG(49384504)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384505)> CPU DETAIL: M6 Address Modifier: 0159 
DBG(49384505)> CPU DETAIL: Read R 1160: 3336000000000200 
DBG(49384506)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49384506)> CPU DETAIL: Write 1218: 3336000000000200 
DBG(49384508)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384509)> CPU DETAIL: M4: 0006 
DBG(49384510)> CPU DETAIL: M6: 0160 
DBG(49384511)> CPU DETAIL: M8: 0000 
DBG(49384514)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384515)> CPU DETAIL: M4: 0007 
DBG(49384518)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49384519)> CPU DETAIL: Read R 1204: 0000000000000153 
DBG(49384520)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49384521)> CPU DETAIL: Result: 0000000000000160 
DBG(49384522)> CPU DETAIL: Write 1204: 0000000000000160 
DBG(49384524)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49384525)> CPU DETAIL: Read R 1211: 0000000000000012 
DBG(49384526)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384527)> CPU DETAIL: Result: 0000000000000013 
DBG(49384528)> CPU DETAIL: Write 1211: 0000000000000013 
DBG(49384530)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49384531)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384532)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49384534)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49384535)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384536)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384538)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49384539)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384540)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384542)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49384543)> CPU DETAIL: Read R 1212: 0130000000131113 
DBG(49384544)> CPU DETAIL: Write 1206: 0130000000131113 
DBG(49384546)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49384547)> CPU DETAIL: Read R 1213: 0000000232090000 
DBG(49384548)> CPU DETAIL: Write 1207: 0000000232090000 
DBG(49384550)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49384551)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384552)> CPU DETAIL: Write 1208: 3336000000000200 
DBG(49384554)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49384555)> CPU DETAIL: Read R 1211: 0000000000000013 
DBG(49384556)> CPU DETAIL: Word Shift 12 digits left: REG1: 0013000000000000 
DBG(49384557)> CPU DETAIL: Write 1205: 0013000000000000 
DBG(49384559)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49384560)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49384561)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49384562)> CPU DETAIL: Transfer to T 
DBG(49384564)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384565)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384566)> CPU DETAIL: Result: 0060000000000052 
DBG(49384567)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49384569)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384570)> CPU DETAIL: Read R 1205: 0013000000000000 
DBG(49384571)> CPU DETAIL: Write 0001: 0013000000000000 
DBG(49384573)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384574)> CPU DETAIL: Read R 1206: 0130000000131113 
DBG(49384575)> CPU DETAIL: Write 0002: 0130000000131113 
DBG(49384577)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384578)> CPU DETAIL: Read R 1207: 0000000232090000 
DBG(49384579)> CPU DETAIL: Write 0003: 0000000232090000 
DBG(49384581)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384582)> CPU DETAIL: Read R 1208: 3336000000000200 
DBG(49384583)> CPU DETAIL: Write 0004: 3336000000000200 
DBG(49384585)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384586)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384587)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384589)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384590)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384592)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384593)> CPU DETAIL: Reset condition present 
DBG(49384593)> same as above (3 times)
DBG(49384593)> CPU DETAIL: Transfer to T 
DBG(49384595)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384596)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384596)> MT CMD: Tape unit 2: init write
DBG(49384596)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384596)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384596)> MT EXP: CRT 0001 to Tape: 0013000000000000 
DBG(49384596)> MT EXP: CRT 0002 to Tape: 0130000000131113 
DBG(49384596)> MT EXP: CRT 0003 to Tape: 0000000232090000 
DBG(49384596)> MT EXP: CRT 0004 to Tape: 3336000000000200 
DBG(49384596)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384596)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384596)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.37% of medium (61.74 inches)
DBG(49384599)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384600)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384601)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384602)> CPU DETAIL: Transfer to T 
DBG(49384604)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384605)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384606)> CPU DETAIL: Result: 0060000000000094 
DBG(49384607)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384609)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384610)> CPU DETAIL: Condition not present 
DBG(49384612)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384613)> CPU DETAIL: Transfer to T 
DBG(49384615)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384616)> CPU DETAIL: Transfer to T 
DBG(49384618)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49384619)> CPU DETAIL: Transfer to T 
DBG(49384621)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49384622)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384623)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49384624)> CPU DETAIL: Result: 0000000000000200 
DBG(49384625)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(49384626)> CPU DETAIL: Write 1209: 0000000000000002 
DBG(49384628)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384629)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384630)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49384633)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49384634)> CPU DETAIL: M6 Address Modifier: 0160 
DBG(49384634)> CPU DETAIL: Read R 1161: 0000000232000000 
DBG(49384635)> CPU DETAIL: Write 1206: 0000000232000000 
DBG(49384637)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49384638)> CPU DETAIL: M6 Address Modifier: 0160 
DBG(49384638)> CPU DETAIL: Read R 1162: 0000000000000000 
DBG(49384639)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384641)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49384642)> CPU DETAIL: M6 Address Modifier: 0160 
DBG(49384642)> CPU DETAIL: Read R 1163: 0000000000000000 
DBG(49384643)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384645)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49384646)> CPU DETAIL: Read R 1205: 0013000000000000 
DBG(49384647)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49384648)> CPU DETAIL: Result: 0013000000000100 
DBG(49384649)> CPU DETAIL: Write 1205: 0013000000000100 
DBG(49384651)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49384652)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49384653)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49384654)> CPU DETAIL: Transfer to T 
DBG(49384656)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384657)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384658)> CPU DETAIL: Result: 0060000000000059 
DBG(49384659)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49384661)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384662)> CPU DETAIL: Read R 1205: 0013000000000100 
DBG(49384663)> CPU DETAIL: Write 0001: 0013000000000100 
DBG(49384665)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384666)> CPU DETAIL: Read R 1206: 0000000232000000 
DBG(49384667)> CPU DETAIL: Write 0002: 0000000232000000 
DBG(49384669)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384670)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49384671)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49384673)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384674)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49384675)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49384677)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384678)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384679)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384681)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384682)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384684)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384685)> CPU DETAIL: Reset condition present 
DBG(49384685)> same as above (3 times)
DBG(49384685)> CPU DETAIL: Transfer to T 
DBG(49384687)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384688)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384688)> MT CMD: Tape unit 2: init write
DBG(49384688)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384688)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384688)> MT EXP: CRT 0001 to Tape: 0013000000000100 
DBG(49384688)> MT EXP: CRT 0002 to Tape: 0000000232000000 
DBG(49384688)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49384688)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49384688)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384688)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384688)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.38% of medium (63.45 inches)
DBG(49384691)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384692)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384693)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384694)> CPU DETAIL: Transfer to T 
DBG(49384696)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384697)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384698)> CPU DETAIL: Result: 0060000000000094 
DBG(49384699)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384701)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384702)> CPU DETAIL: Condition not present 
DBG(49384704)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384705)> CPU DETAIL: Transfer to T 
DBG(49384707)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384708)> CPU DETAIL: Transfer to T 
DBG(49384710)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49384711)> CPU DETAIL: Transfer to T 
DBG(49384713)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49384714)> CPU DETAIL: Read R 1204: 0000000000000160 
DBG(49384715)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49384716)> CPU DETAIL: Result: 0000000000000163 
DBG(49384717)> CPU DETAIL: Write 1204: 0000000000000163 
DBG(49384719)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49384720)> CPU DETAIL: M4: 0007 
DBG(49384721)> CPU DETAIL: M6: 0163 
DBG(49384722)> CPU DETAIL: M8: 0000 
DBG(49384725)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49384726)> CPU DETAIL: Read R 1209: 0000000000000002 
DBG(49384727)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384728)> CPU DETAIL: Result: 0000000000000001 
DBG(49384729)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49384731)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49384732)> CPU DETAIL: Transfer to T 
DBG(49384734)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384735)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384736)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49384739)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49384740)> CPU DETAIL: M6 Address Modifier: 0163 
DBG(49384740)> CPU DETAIL: Read R 1164: 0000000232010000 
DBG(49384741)> CPU DETAIL: Write 1206: 0000000232010000 
DBG(49384743)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49384744)> CPU DETAIL: M6 Address Modifier: 0163 
DBG(49384744)> CPU DETAIL: Read R 1165: 0000000000000000 
DBG(49384745)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49384747)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49384748)> CPU DETAIL: M6 Address Modifier: 0163 
DBG(49384748)> CPU DETAIL: Read R 1166: 0000000000000000 
DBG(49384749)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49384751)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49384752)> CPU DETAIL: Read R 1205: 0013000000000100 
DBG(49384753)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49384754)> CPU DETAIL: Result: 0013000000000200 
DBG(49384755)> CPU DETAIL: Write 1205: 0013000000000200 
DBG(49384757)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49384758)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49384759)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49384760)> CPU DETAIL: Transfer to T 
DBG(49384762)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49384763)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384764)> CPU DETAIL: Result: 0060000000000059 
DBG(49384765)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49384767)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49384768)> CPU DETAIL: Read R 1205: 0013000000000200 
DBG(49384769)> CPU DETAIL: Write 0001: 0013000000000200 
DBG(49384771)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49384772)> CPU DETAIL: Read R 1206: 0000000232010000 
DBG(49384773)> CPU DETAIL: Write 0002: 0000000232010000 
DBG(49384775)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49384776)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49384777)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49384779)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49384780)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49384781)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49384783)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49384784)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49384785)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49384787)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49384788)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49384790)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49384791)> CPU DETAIL: Reset condition present 
DBG(49384791)> same as above (3 times)
DBG(49384791)> CPU DETAIL: Transfer to T 
DBG(49384793)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49384794)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49384794)> MT CMD: Tape unit 2: init write
DBG(49384794)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49384794)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49384794)> MT EXP: CRT 0001 to Tape: 0013000000000200 
DBG(49384794)> MT EXP: CRT 0002 to Tape: 0000000232010000 
DBG(49384794)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49384794)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49384794)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49384794)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49384794)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.39% of medium (65.17 inches)
DBG(49384797)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49384798)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49384799)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49384800)> CPU DETAIL: Transfer to T 
DBG(49384802)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49384803)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49384804)> CPU DETAIL: Result: 0060000000000094 
DBG(49384805)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49384807)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49384808)> CPU DETAIL: Condition not present 
DBG(49384810)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49384811)> CPU DETAIL: Transfer to T 
DBG(49384813)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49384814)> CPU DETAIL: Transfer to T 
DBG(49384816)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49384817)> CPU DETAIL: Transfer to T 
DBG(49384819)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49384820)> CPU DETAIL: Read R 1204: 0000000000000163 
DBG(49384821)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49384822)> CPU DETAIL: Result: 0000000000000166 
DBG(49384823)> CPU DETAIL: Write 1204: 0000000000000166 
DBG(49384825)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49384826)> CPU DETAIL: M4: 0007 
DBG(49384827)> CPU DETAIL: M6: 0166 
DBG(49384828)> CPU DETAIL: M8: 0000 
DBG(49384831)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49384832)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49384833)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49384834)> CPU DETAIL: Result: 0000000000000000 
DBG(49384835)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49384837)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49384838)> CPU DETAIL: Transfer to T 
DBG(49384840)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49384841)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384842)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49384843)> CPU DETAIL: Transfer to T 
DBG(49384845)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49384846)> CPU DETAIL: Read R 1205: 0013000000000200 
DBG(49384847)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49384848)> CPU DETAIL: Result: 0013000000000000 
DBG(49384849)> CPU DETAIL: Write 1205: 0013000000000000 
DBG(49384851)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49384852)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49384853)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49384854)> CPU DETAIL: Result: 0000000000000000 
DBG(49384855)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49384857)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49384858)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49384859)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49384860)> CPU DETAIL: Transfer to T 
DBG(49384862)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49384863)> CPU DETAIL: Read R 1205: 0013000000000000 
DBG(49384864)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49384865)> CPU DETAIL: Result: 0013000000000000 
DBG(49384866)> CPU DETAIL: Write 1205: 0013000000000000 
DBG(49384868)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49384869)> CPU DETAIL: Transfer to T 
DBG(49384871)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49384872)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49384873)> CPU DETAIL: Read S 1204: 0000000000000166 
DBG(49384874)> CPU DETAIL: Result: 0000000000000026 
DBG(49384877)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49384878)> CPU DETAIL: REG1: 0000000000000026
DBG(49384878)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49384880)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49384881)> CPU DETAIL: Read R 1204: 0000000000000166 
DBG(49384882)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001660000 
DBG(49384885)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49384886)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49384887)> CPU DETAIL: Result: 0057000001660000 
DBG(49384888)> CPU DETAIL: Write 0038: 0057000001660000 
DBG(49384890)> CPU CMD: Exec 0038: 00 57 0000 0166 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49384891)> CPU DETAIL: Clear M4
DBG(49384891)> CPU DETAIL: M4: 0000 
DBG(49384892)> CPU DETAIL: Clear M6
DBG(49384892)> CPU DETAIL: M6: 0166 
DBG(49384893)> CPU DETAIL: Clear M8
DBG(49384893)> CPU DETAIL: M8: 0000 
DBG(49384896)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384897)> CPU DETAIL: M6 Address Modifier: 0166 
DBG(49384897)> CPU DETAIL: Read R 1167: 0160000000141013 
DBG(49384898)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49384898)> CPU DETAIL: Write 1212: 0160000000141013 
DBG(49384900)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384901)> CPU DETAIL: M4: 0000 
DBG(49384902)> CPU DETAIL: M6: 0167 
DBG(49384903)> CPU DETAIL: M8: 0000 
DBG(49384906)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384907)> CPU DETAIL: M4: 0001 
DBG(49384908)> CPU DETAIL: Transfer to T 
DBG(49384910)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384911)> CPU DETAIL: M6 Address Modifier: 0167 
DBG(49384911)> CPU DETAIL: Read R 1168: 0000000233020003 
DBG(49384912)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49384912)> CPU DETAIL: Write 1213: 0000000233020003 
DBG(49384914)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384915)> CPU DETAIL: M4: 0001 
DBG(49384916)> CPU DETAIL: M6: 0168 
DBG(49384917)> CPU DETAIL: M8: 0000 
DBG(49384920)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384921)> CPU DETAIL: M4: 0002 
DBG(49384922)> CPU DETAIL: Transfer to T 
DBG(49384924)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384925)> CPU DETAIL: M6 Address Modifier: 0168 
DBG(49384925)> CPU DETAIL: Read R 1169: 0000000000000000 
DBG(49384926)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49384926)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49384928)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384929)> CPU DETAIL: M4: 0002 
DBG(49384930)> CPU DETAIL: M6: 0169 
DBG(49384931)> CPU DETAIL: M8: 0000 
DBG(49384934)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384935)> CPU DETAIL: M4: 0003 
DBG(49384936)> CPU DETAIL: Transfer to T 
DBG(49384938)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384939)> CPU DETAIL: M6 Address Modifier: 0169 
DBG(49384939)> CPU DETAIL: Read R 1170: 0000000000000000 
DBG(49384940)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49384940)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49384942)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384943)> CPU DETAIL: M4: 0003 
DBG(49384944)> CPU DETAIL: M6: 0170 
DBG(49384945)> CPU DETAIL: M8: 0000 
DBG(49384948)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384949)> CPU DETAIL: M4: 0004 
DBG(49384950)> CPU DETAIL: Transfer to T 
DBG(49384952)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384953)> CPU DETAIL: M6 Address Modifier: 0170 
DBG(49384953)> CPU DETAIL: Read R 1171: 0000000000000000 
DBG(49384954)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49384954)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49384956)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384957)> CPU DETAIL: M4: 0004 
DBG(49384958)> CPU DETAIL: M6: 0171 
DBG(49384959)> CPU DETAIL: M8: 0000 
DBG(49384962)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384963)> CPU DETAIL: M4: 0005 
DBG(49384964)> CPU DETAIL: Transfer to T 
DBG(49384966)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384967)> CPU DETAIL: M6 Address Modifier: 0171 
DBG(49384967)> CPU DETAIL: Read R 1172: 0000000000000000 
DBG(49384968)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49384968)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49384970)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384971)> CPU DETAIL: M4: 0005 
DBG(49384972)> CPU DETAIL: M6: 0172 
DBG(49384973)> CPU DETAIL: M8: 0000 
DBG(49384976)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384977)> CPU DETAIL: M4: 0006 
DBG(49384978)> CPU DETAIL: Transfer to T 
DBG(49384980)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49384981)> CPU DETAIL: M6 Address Modifier: 0172 
DBG(49384981)> CPU DETAIL: Read R 1173: 3335444455660201 
DBG(49384982)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49384982)> CPU DETAIL: Write 1218: 3335444455660201 
DBG(49384984)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49384985)> CPU DETAIL: M4: 0006 
DBG(49384986)> CPU DETAIL: M6: 0173 
DBG(49384987)> CPU DETAIL: M8: 0000 
DBG(49384990)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49384991)> CPU DETAIL: M4: 0007 
DBG(49384994)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49384995)> CPU DETAIL: Read R 1204: 0000000000000166 
DBG(49384996)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49384997)> CPU DETAIL: Result: 0000000000000173 
DBG(49384998)> CPU DETAIL: Write 1204: 0000000000000173 
DBG(49385000)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49385001)> CPU DETAIL: Read R 1211: 0000000000000013 
DBG(49385002)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385003)> CPU DETAIL: Result: 0000000000000014 
DBG(49385004)> CPU DETAIL: Write 1211: 0000000000000014 
DBG(49385006)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49385007)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385008)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49385010)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49385011)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385012)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49385014)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49385015)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385016)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49385018)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49385019)> CPU DETAIL: Read R 1212: 0160000000141013 
DBG(49385020)> CPU DETAIL: Write 1206: 0160000000141013 
DBG(49385022)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49385023)> CPU DETAIL: Read R 1213: 0000000233020003 
DBG(49385024)> CPU DETAIL: Write 1207: 0000000233020003 
DBG(49385026)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49385027)> CPU DETAIL: Read R 1218: 3335444455660201 
DBG(49385028)> CPU DETAIL: Write 1208: 3335444455660201 
DBG(49385030)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49385031)> CPU DETAIL: Read R 1211: 0000000000000014 
DBG(49385032)> CPU DETAIL: Word Shift 12 digits left: REG1: 0014000000000000 
DBG(49385033)> CPU DETAIL: Write 1205: 0014000000000000 
DBG(49385035)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49385036)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49385037)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49385038)> CPU DETAIL: Transfer to T 
DBG(49385040)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385041)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385042)> CPU DETAIL: Result: 0060000000000052 
DBG(49385043)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49385045)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385046)> CPU DETAIL: Read R 1205: 0014000000000000 
DBG(49385047)> CPU DETAIL: Write 0001: 0014000000000000 
DBG(49385049)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385050)> CPU DETAIL: Read R 1206: 0160000000141013 
DBG(49385051)> CPU DETAIL: Write 0002: 0160000000141013 
DBG(49385053)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385054)> CPU DETAIL: Read R 1207: 0000000233020003 
DBG(49385055)> CPU DETAIL: Write 0003: 0000000233020003 
DBG(49385057)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385058)> CPU DETAIL: Read R 1208: 3335444455660201 
DBG(49385059)> CPU DETAIL: Write 0004: 3335444455660201 
DBG(49385061)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385062)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385063)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385065)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385066)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385068)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385069)> CPU DETAIL: Reset condition present 
DBG(49385069)> same as above (3 times)
DBG(49385069)> CPU DETAIL: Transfer to T 
DBG(49385071)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385072)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385072)> MT CMD: Tape unit 2: init write
DBG(49385072)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385072)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385072)> MT EXP: CRT 0001 to Tape: 0014000000000000 
DBG(49385072)> MT EXP: CRT 0002 to Tape: 0160000000141013 
DBG(49385072)> MT EXP: CRT 0003 to Tape: 0000000233020003 
DBG(49385072)> MT EXP: CRT 0004 to Tape: 3335444455660201 
DBG(49385072)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385072)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385072)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.40% of medium (66.89 inches)
DBG(49385075)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385076)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385077)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385078)> CPU DETAIL: Transfer to T 
DBG(49385080)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385081)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385082)> CPU DETAIL: Result: 0060000000000094 
DBG(49385083)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385085)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385086)> CPU DETAIL: Condition not present 
DBG(49385088)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385089)> CPU DETAIL: Transfer to T 
DBG(49385091)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385092)> CPU DETAIL: Transfer to T 
DBG(49385094)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49385095)> CPU DETAIL: Transfer to T 
DBG(49385097)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49385098)> CPU DETAIL: Read R 1218: 3335444455660201 
DBG(49385099)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49385100)> CPU DETAIL: Result: 0000000000000200 
DBG(49385101)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(49385102)> CPU DETAIL: Write 1209: 0000000000000002 
DBG(49385104)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49385105)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385106)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49385109)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49385110)> CPU DETAIL: M6 Address Modifier: 0173 
DBG(49385110)> CPU DETAIL: Read R 1174: 0000000233000000 
DBG(49385111)> CPU DETAIL: Write 1206: 0000000233000000 
DBG(49385113)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49385114)> CPU DETAIL: M6 Address Modifier: 0173 
DBG(49385114)> CPU DETAIL: Read R 1175: 0000000000000000 
DBG(49385115)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49385117)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49385118)> CPU DETAIL: M6 Address Modifier: 0173 
DBG(49385118)> CPU DETAIL: Read R 1176: 0000000000000000 
DBG(49385119)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49385121)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49385122)> CPU DETAIL: Read R 1205: 0014000000000000 
DBG(49385123)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49385124)> CPU DETAIL: Result: 0014000000000100 
DBG(49385125)> CPU DETAIL: Write 1205: 0014000000000100 
DBG(49385127)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49385128)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49385129)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49385130)> CPU DETAIL: Transfer to T 
DBG(49385132)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385133)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385134)> CPU DETAIL: Result: 0060000000000059 
DBG(49385135)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49385137)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385138)> CPU DETAIL: Read R 1205: 0014000000000100 
DBG(49385139)> CPU DETAIL: Write 0001: 0014000000000100 
DBG(49385141)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385142)> CPU DETAIL: Read R 1206: 0000000233000000 
DBG(49385143)> CPU DETAIL: Write 0002: 0000000233000000 
DBG(49385145)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385146)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49385147)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49385149)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385150)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49385151)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49385153)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385154)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385155)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385157)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385158)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385160)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385161)> CPU DETAIL: Reset condition present 
DBG(49385161)> same as above (3 times)
DBG(49385161)> CPU DETAIL: Transfer to T 
DBG(49385163)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385164)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385164)> MT CMD: Tape unit 2: init write
DBG(49385164)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385164)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385164)> MT EXP: CRT 0001 to Tape: 0014000000000100 
DBG(49385164)> MT EXP: CRT 0002 to Tape: 0000000233000000 
DBG(49385164)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49385164)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49385164)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385164)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385164)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.41% of medium (68.60 inches)
DBG(49385167)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385168)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385169)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385170)> CPU DETAIL: Transfer to T 
DBG(49385172)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385173)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385174)> CPU DETAIL: Result: 0060000000000094 
DBG(49385175)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385177)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385178)> CPU DETAIL: Condition not present 
DBG(49385180)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385181)> CPU DETAIL: Transfer to T 
DBG(49385183)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385184)> CPU DETAIL: Transfer to T 
DBG(49385186)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49385187)> CPU DETAIL: Transfer to T 
DBG(49385189)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49385190)> CPU DETAIL: Read R 1204: 0000000000000173 
DBG(49385191)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49385192)> CPU DETAIL: Result: 0000000000000176 
DBG(49385193)> CPU DETAIL: Write 1204: 0000000000000176 
DBG(49385195)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49385196)> CPU DETAIL: M4: 0007 
DBG(49385197)> CPU DETAIL: M6: 0176 
DBG(49385198)> CPU DETAIL: M8: 0000 
DBG(49385201)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49385202)> CPU DETAIL: Read R 1209: 0000000000000002 
DBG(49385203)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385204)> CPU DETAIL: Result: 0000000000000001 
DBG(49385205)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49385207)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49385208)> CPU DETAIL: Transfer to T 
DBG(49385210)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49385211)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385212)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49385215)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49385216)> CPU DETAIL: M6 Address Modifier: 0176 
DBG(49385216)> CPU DETAIL: Read R 1177: 0000000233010000 
DBG(49385217)> CPU DETAIL: Write 1206: 0000000233010000 
DBG(49385219)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49385220)> CPU DETAIL: M6 Address Modifier: 0176 
DBG(49385220)> CPU DETAIL: Read R 1178: 0000000000000000 
DBG(49385221)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49385223)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49385224)> CPU DETAIL: M6 Address Modifier: 0176 
DBG(49385224)> CPU DETAIL: Read R 1179: 0000000000000000 
DBG(49385225)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49385227)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49385228)> CPU DETAIL: Read R 1205: 0014000000000100 
DBG(49385229)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49385230)> CPU DETAIL: Result: 0014000000000200 
DBG(49385231)> CPU DETAIL: Write 1205: 0014000000000200 
DBG(49385233)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49385234)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49385235)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49385236)> CPU DETAIL: Transfer to T 
DBG(49385238)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385239)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385240)> CPU DETAIL: Result: 0060000000000059 
DBG(49385241)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49385243)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385244)> CPU DETAIL: Read R 1205: 0014000000000200 
DBG(49385245)> CPU DETAIL: Write 0001: 0014000000000200 
DBG(49385247)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385248)> CPU DETAIL: Read R 1206: 0000000233010000 
DBG(49385249)> CPU DETAIL: Write 0002: 0000000233010000 
DBG(49385251)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385252)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49385253)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49385255)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385256)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49385257)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49385259)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385260)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385261)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385263)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385264)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385266)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385267)> CPU DETAIL: Reset condition present 
DBG(49385267)> same as above (3 times)
DBG(49385267)> CPU DETAIL: Transfer to T 
DBG(49385269)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385270)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385270)> MT CMD: Tape unit 2: init write
DBG(49385270)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385270)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385270)> MT EXP: CRT 0001 to Tape: 0014000000000200 
DBG(49385270)> MT EXP: CRT 0002 to Tape: 0000000233010000 
DBG(49385270)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49385270)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49385270)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385270)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385270)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.42% of medium (70.31 inches)
DBG(49385273)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385274)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385275)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385276)> CPU DETAIL: Transfer to T 
DBG(49385278)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385279)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385280)> CPU DETAIL: Result: 0060000000000094 
DBG(49385281)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385283)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385284)> CPU DETAIL: Condition not present 
DBG(49385286)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385287)> CPU DETAIL: Transfer to T 
DBG(49385289)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385290)> CPU DETAIL: Transfer to T 
DBG(49385292)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49385293)> CPU DETAIL: Transfer to T 
DBG(49385295)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49385296)> CPU DETAIL: Read R 1204: 0000000000000176 
DBG(49385297)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49385298)> CPU DETAIL: Result: 0000000000000179 
DBG(49385299)> CPU DETAIL: Write 1204: 0000000000000179 
DBG(49385301)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49385302)> CPU DETAIL: M4: 0007 
DBG(49385303)> CPU DETAIL: M6: 0179 
DBG(49385304)> CPU DETAIL: M8: 0000 
DBG(49385307)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49385308)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49385309)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385310)> CPU DETAIL: Result: 0000000000000000 
DBG(49385311)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49385313)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49385314)> CPU DETAIL: Transfer to T 
DBG(49385316)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49385317)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385318)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49385319)> CPU DETAIL: Transfer to T 
DBG(49385321)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49385322)> CPU DETAIL: Read R 1205: 0014000000000200 
DBG(49385323)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49385324)> CPU DETAIL: Result: 0014000000000000 
DBG(49385325)> CPU DETAIL: Write 1205: 0014000000000000 
DBG(49385327)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49385328)> CPU DETAIL: Read R 1218: 3335444455660201 
DBG(49385329)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49385330)> CPU DETAIL: Result: 0000000000000001 
DBG(49385331)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49385333)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49385334)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385335)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49385338)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49385339)> CPU DETAIL: M6 Address Modifier: 0179 
DBG(49385339)> CPU DETAIL: Read R 1180: 0000000233030000 
DBG(49385340)> CPU DETAIL: Write 1206: 0000000233030000 
DBG(49385342)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49385343)> CPU DETAIL: M6 Address Modifier: 0179 
DBG(49385343)> CPU DETAIL: Read R 1181: 0000000000000000 
DBG(49385344)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49385346)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49385347)> CPU DETAIL: M6 Address Modifier: 0179 
DBG(49385347)> CPU DETAIL: Read R 1182: 0000000000000000 
DBG(49385348)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49385350)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49385351)> CPU DETAIL: Read R 1205: 0014000000000000 
DBG(49385352)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385353)> CPU DETAIL: Result: 0014000000000001 
DBG(49385354)> CPU DETAIL: Write 1205: 0014000000000001 
DBG(49385356)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49385357)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49385358)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49385359)> CPU DETAIL: Transfer to T 
DBG(49385361)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385362)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385363)> CPU DETAIL: Result: 0060000000000071 
DBG(49385364)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49385366)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385367)> CPU DETAIL: Read R 1205: 0014000000000001 
DBG(49385368)> CPU DETAIL: Write 0001: 0014000000000001 
DBG(49385370)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385371)> CPU DETAIL: Read R 1206: 0000000233030000 
DBG(49385372)> CPU DETAIL: Write 0002: 0000000233030000 
DBG(49385374)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385375)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49385376)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49385378)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385379)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49385380)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49385382)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385383)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385384)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385386)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385387)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385389)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385390)> CPU DETAIL: Reset condition present 
DBG(49385390)> same as above (3 times)
DBG(49385390)> CPU DETAIL: Transfer to T 
DBG(49385392)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385393)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385393)> MT CMD: Tape unit 2: init write
DBG(49385393)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385393)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385393)> MT EXP: CRT 0001 to Tape: 0014000000000001 
DBG(49385393)> MT EXP: CRT 0002 to Tape: 0000000233030000 
DBG(49385393)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49385393)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49385393)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385393)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385393)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.43% of medium (72.03 inches)
DBG(49385396)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385397)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385398)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385399)> CPU DETAIL: Transfer to T 
DBG(49385401)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385402)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385403)> CPU DETAIL: Result: 0060000000000094 
DBG(49385404)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385406)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385407)> CPU DETAIL: Condition not present 
DBG(49385409)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385410)> CPU DETAIL: Transfer to T 
DBG(49385412)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385413)> CPU DETAIL: Transfer to T 
DBG(49385415)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49385416)> CPU DETAIL: Transfer to T 
DBG(49385418)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49385419)> CPU DETAIL: Read R 1204: 0000000000000179 
DBG(49385420)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49385421)> CPU DETAIL: Result: 0000000000000182 
DBG(49385422)> CPU DETAIL: Write 1204: 0000000000000182 
DBG(49385424)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49385425)> CPU DETAIL: M4: 0007 
DBG(49385426)> CPU DETAIL: M6: 0182 
DBG(49385427)> CPU DETAIL: M8: 0000 
DBG(49385430)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49385431)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49385432)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385433)> CPU DETAIL: Result: 0000000000000000 
DBG(49385434)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49385436)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49385437)> CPU DETAIL: Transfer to T 
DBG(49385439)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49385440)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385441)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49385442)> CPU DETAIL: Transfer to T 
DBG(49385444)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49385445)> CPU DETAIL: Read R 1205: 0014000000000001 
DBG(49385446)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49385447)> CPU DETAIL: Result: 0014000000000000 
DBG(49385448)> CPU DETAIL: Write 1205: 0014000000000000 
DBG(49385450)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49385451)> CPU DETAIL: Transfer to T 
DBG(49385453)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49385454)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49385455)> CPU DETAIL: Read S 1204: 0000000000000182 
DBG(49385456)> CPU DETAIL: Result: 0000000000000010 
DBG(49385459)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49385460)> CPU DETAIL: REG1: 0000000000000010
DBG(49385460)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49385462)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49385463)> CPU DETAIL: Read R 1204: 0000000000000182 
DBG(49385464)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000001820000 
DBG(49385467)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49385468)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49385469)> CPU DETAIL: Result: 0057000001820000 
DBG(49385470)> CPU DETAIL: Write 0038: 0057000001820000 
DBG(49385472)> CPU CMD: Exec 0038: 00 57 0000 0182 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49385473)> CPU DETAIL: Clear M4
DBG(49385473)> CPU DETAIL: M4: 0000 
DBG(49385474)> CPU DETAIL: Clear M6
DBG(49385474)> CPU DETAIL: M6: 0182 
DBG(49385475)> CPU DETAIL: Clear M8
DBG(49385475)> CPU DETAIL: M8: 0000 
DBG(49385478)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385479)> CPU DETAIL: M6 Address Modifier: 0182 
DBG(49385479)> CPU DETAIL: Read R 1183: 0100000000151113 
DBG(49385480)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49385480)> CPU DETAIL: Write 1212: 0100000000151113 
DBG(49385482)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385483)> CPU DETAIL: M4: 0000 
DBG(49385484)> CPU DETAIL: M6: 0183 
DBG(49385485)> CPU DETAIL: M8: 0000 
DBG(49385488)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385489)> CPU DETAIL: M4: 0001 
DBG(49385490)> CPU DETAIL: Transfer to T 
DBG(49385492)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385493)> CPU DETAIL: M6 Address Modifier: 0183 
DBG(49385493)> CPU DETAIL: Read R 1184: 0000000249999990 
DBG(49385494)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49385494)> CPU DETAIL: Write 1213: 0000000249999990 
DBG(49385496)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385497)> CPU DETAIL: M4: 0001 
DBG(49385498)> CPU DETAIL: M6: 0184 
DBG(49385499)> CPU DETAIL: M8: 0000 
DBG(49385502)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385503)> CPU DETAIL: M4: 0002 
DBG(49385504)> CPU DETAIL: Transfer to T 
DBG(49385506)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385507)> CPU DETAIL: M6 Address Modifier: 0184 
DBG(49385507)> CPU DETAIL: Read R 1185: 0000000000000000 
DBG(49385508)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49385508)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49385510)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385511)> CPU DETAIL: M4: 0002 
DBG(49385512)> CPU DETAIL: M6: 0185 
DBG(49385513)> CPU DETAIL: M8: 0000 
DBG(49385516)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385517)> CPU DETAIL: M4: 0003 
DBG(49385518)> CPU DETAIL: Transfer to T 
DBG(49385520)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385521)> CPU DETAIL: M6 Address Modifier: 0185 
DBG(49385521)> CPU DETAIL: Read R 1186: 0000000000000000 
DBG(49385522)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49385522)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49385524)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385525)> CPU DETAIL: M4: 0003 
DBG(49385526)> CPU DETAIL: M6: 0186 
DBG(49385527)> CPU DETAIL: M8: 0000 
DBG(49385530)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385531)> CPU DETAIL: M4: 0004 
DBG(49385532)> CPU DETAIL: Transfer to T 
DBG(49385534)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385535)> CPU DETAIL: M6 Address Modifier: 0186 
DBG(49385535)> CPU DETAIL: Read R 1187: 0000000000000000 
DBG(49385536)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49385536)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49385538)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385539)> CPU DETAIL: M4: 0004 
DBG(49385540)> CPU DETAIL: M6: 0187 
DBG(49385541)> CPU DETAIL: M8: 0000 
DBG(49385544)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385545)> CPU DETAIL: M4: 0005 
DBG(49385546)> CPU DETAIL: Transfer to T 
DBG(49385548)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385549)> CPU DETAIL: M6 Address Modifier: 0187 
DBG(49385549)> CPU DETAIL: Read R 1188: 0000000000000000 
DBG(49385550)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49385550)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49385552)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385553)> CPU DETAIL: M4: 0005 
DBG(49385554)> CPU DETAIL: M6: 0188 
DBG(49385555)> CPU DETAIL: M8: 0000 
DBG(49385558)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385559)> CPU DETAIL: M4: 0006 
DBG(49385560)> CPU DETAIL: Transfer to T 
DBG(49385562)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385563)> CPU DETAIL: M6 Address Modifier: 0188 
DBG(49385563)> CPU DETAIL: Read R 1189: 0000000000000100 
DBG(49385564)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49385564)> CPU DETAIL: Write 1218: 0000000000000100 
DBG(49385566)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385567)> CPU DETAIL: M4: 0006 
DBG(49385568)> CPU DETAIL: M6: 0189 
DBG(49385569)> CPU DETAIL: M8: 0000 
DBG(49385572)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385573)> CPU DETAIL: M4: 0007 
DBG(49385576)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49385577)> CPU DETAIL: Read R 1204: 0000000000000182 
DBG(49385578)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49385579)> CPU DETAIL: Result: 0000000000000189 
DBG(49385580)> CPU DETAIL: Write 1204: 0000000000000189 
DBG(49385582)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49385583)> CPU DETAIL: Read R 1211: 0000000000000014 
DBG(49385584)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385585)> CPU DETAIL: Result: 0000000000000015 
DBG(49385586)> CPU DETAIL: Write 1211: 0000000000000015 
DBG(49385588)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49385589)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385590)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49385592)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49385593)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385594)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49385596)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49385597)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385598)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49385600)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49385601)> CPU DETAIL: Read R 1212: 0100000000151113 
DBG(49385602)> CPU DETAIL: Write 1206: 0100000000151113 
DBG(49385604)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49385605)> CPU DETAIL: Read R 1213: 0000000249999990 
DBG(49385606)> CPU DETAIL: Write 1207: 0000000249999990 
DBG(49385608)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49385609)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49385610)> CPU DETAIL: Write 1208: 0000000000000100 
DBG(49385612)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49385613)> CPU DETAIL: Read R 1211: 0000000000000015 
DBG(49385614)> CPU DETAIL: Word Shift 12 digits left: REG1: 0015000000000000 
DBG(49385615)> CPU DETAIL: Write 1205: 0015000000000000 
DBG(49385617)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49385618)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49385619)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49385620)> CPU DETAIL: Transfer to T 
DBG(49385622)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385623)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385624)> CPU DETAIL: Result: 0060000000000052 
DBG(49385625)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49385627)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385628)> CPU DETAIL: Read R 1205: 0015000000000000 
DBG(49385629)> CPU DETAIL: Write 0001: 0015000000000000 
DBG(49385631)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385632)> CPU DETAIL: Read R 1206: 0100000000151113 
DBG(49385633)> CPU DETAIL: Write 0002: 0100000000151113 
DBG(49385635)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385636)> CPU DETAIL: Read R 1207: 0000000249999990 
DBG(49385637)> CPU DETAIL: Write 0003: 0000000249999990 
DBG(49385639)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385640)> CPU DETAIL: Read R 1208: 0000000000000100 
DBG(49385641)> CPU DETAIL: Write 0004: 0000000000000100 
DBG(49385643)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385644)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385645)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385647)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385648)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385650)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385651)> CPU DETAIL: Reset condition present 
DBG(49385651)> same as above (3 times)
DBG(49385651)> CPU DETAIL: Transfer to T 
DBG(49385653)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385654)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385654)> MT CMD: Tape unit 2: init write
DBG(49385654)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385654)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385654)> MT EXP: CRT 0001 to Tape: 0015000000000000 
DBG(49385654)> MT EXP: CRT 0002 to Tape: 0100000000151113 
DBG(49385654)> MT EXP: CRT 0003 to Tape: 0000000249999990 
DBG(49385654)> MT EXP: CRT 0004 to Tape: 0000000000000100 
DBG(49385654)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385654)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385654)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.44% of medium (73.75 inches)
DBG(49385657)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385658)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385659)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385660)> CPU DETAIL: Transfer to T 
DBG(49385662)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385663)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385664)> CPU DETAIL: Result: 0060000000000094 
DBG(49385665)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385667)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385668)> CPU DETAIL: Condition not present 
DBG(49385670)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385671)> CPU DETAIL: Transfer to T 
DBG(49385673)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385674)> CPU DETAIL: Transfer to T 
DBG(49385676)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49385677)> CPU DETAIL: Transfer to T 
DBG(49385679)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49385680)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49385681)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49385682)> CPU DETAIL: Result: 0000000000000100 
DBG(49385683)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(49385684)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49385686)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49385687)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385688)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49385691)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49385692)> CPU DETAIL: M6 Address Modifier: 0189 
DBG(49385692)> CPU DETAIL: Read R 1190: 0000000242009990 
DBG(49385693)> CPU DETAIL: Write 1206: 0000000242009990 
DBG(49385695)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49385696)> CPU DETAIL: M6 Address Modifier: 0189 
DBG(49385696)> CPU DETAIL: Read R 1191: 0000000000033555 
DBG(49385697)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(49385699)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49385700)> CPU DETAIL: M6 Address Modifier: 0189 
DBG(49385700)> CPU DETAIL: Read R 1192: 0000000000033666 
DBG(49385701)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(49385703)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49385704)> CPU DETAIL: Read R 1205: 0015000000000000 
DBG(49385705)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49385706)> CPU DETAIL: Result: 0015000000000100 
DBG(49385707)> CPU DETAIL: Write 1205: 0015000000000100 
DBG(49385709)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49385710)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49385711)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49385712)> CPU DETAIL: Transfer to T 
DBG(49385714)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49385715)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385716)> CPU DETAIL: Result: 0060000000000059 
DBG(49385717)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49385719)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49385720)> CPU DETAIL: Read R 1205: 0015000000000100 
DBG(49385721)> CPU DETAIL: Write 0001: 0015000000000100 
DBG(49385723)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49385724)> CPU DETAIL: Read R 1206: 0000000242009990 
DBG(49385725)> CPU DETAIL: Write 0002: 0000000242009990 
DBG(49385727)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49385728)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(49385729)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(49385731)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49385732)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(49385733)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(49385735)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49385736)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385737)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49385739)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49385740)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49385742)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49385743)> CPU DETAIL: Reset condition present 
DBG(49385743)> same as above (3 times)
DBG(49385743)> CPU DETAIL: Transfer to T 
DBG(49385745)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49385746)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49385746)> MT CMD: Tape unit 2: init write
DBG(49385746)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49385746)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49385746)> MT EXP: CRT 0001 to Tape: 0015000000000100 
DBG(49385746)> MT EXP: CRT 0002 to Tape: 0000000242009990 
DBG(49385746)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(49385746)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(49385746)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49385746)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49385746)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.45% of medium (75.46 inches)
DBG(49385749)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49385750)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49385751)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49385752)> CPU DETAIL: Transfer to T 
DBG(49385754)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49385755)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49385756)> CPU DETAIL: Result: 0060000000000094 
DBG(49385757)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49385759)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49385760)> CPU DETAIL: Condition not present 
DBG(49385762)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49385763)> CPU DETAIL: Transfer to T 
DBG(49385765)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49385766)> CPU DETAIL: Transfer to T 
DBG(49385768)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49385769)> CPU DETAIL: Transfer to T 
DBG(49385771)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49385772)> CPU DETAIL: Read R 1204: 0000000000000189 
DBG(49385773)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49385774)> CPU DETAIL: Result: 0000000000000192 
DBG(49385775)> CPU DETAIL: Write 1204: 0000000000000192 
DBG(49385777)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49385778)> CPU DETAIL: M4: 0007 
DBG(49385779)> CPU DETAIL: M6: 0192 
DBG(49385780)> CPU DETAIL: M8: 0000 
DBG(49385783)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49385784)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49385785)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385786)> CPU DETAIL: Result: 0000000000000000 
DBG(49385787)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49385789)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49385790)> CPU DETAIL: Transfer to T 
DBG(49385792)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49385793)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385794)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49385795)> CPU DETAIL: Transfer to T 
DBG(49385797)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49385798)> CPU DETAIL: Read R 1205: 0015000000000100 
DBG(49385799)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49385800)> CPU DETAIL: Result: 0015000000000000 
DBG(49385801)> CPU DETAIL: Write 1205: 0015000000000000 
DBG(49385803)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49385804)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(49385805)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49385806)> CPU DETAIL: Result: 0000000000000000 
DBG(49385807)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49385809)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49385810)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49385811)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49385812)> CPU DETAIL: Transfer to T 
DBG(49385814)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49385815)> CPU DETAIL: Read R 1205: 0015000000000000 
DBG(49385816)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49385817)> CPU DETAIL: Result: 0015000000000000 
DBG(49385818)> CPU DETAIL: Write 1205: 0015000000000000 
DBG(49385820)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49385821)> CPU DETAIL: Transfer to T 
DBG(49385823)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49385824)> CPU DETAIL: Read R 1203: 0000000000000192 
DBG(49385825)> CPU DETAIL: Read S 1204: 0000000000000192 
DBG(49385826)> CPU DETAIL: Result: 0000000000000000 
DBG(49385829)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49385830)> CPU DETAIL: REG1: 0000000000000000
DBG(49385830)> CPU DETAIL: Transfer to S (REG1=0)
DBG(49385832)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(49385833)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(49385833)> MT DATA: Tape unit 1: init read
DBG(49385833)> MT DETAIL: Read tape record (560 chars, used 2.60 inches, needs 15 msec) from tape 1
DBG(49385833)> MT DETAIL: Tape record contents: D*0391140114291001C*0160000000141014C*0000000233030000C*00000000000000...
DBG(49385833)> MT EXP: Start Of Block Word: 0391140114291001
DBG(49385833)> MT EXP: Read Tape Block number 1001
DBG(49385833)> MT EXP: Read forward addr 1001 to 0000
DBG(49385833)> MT EXP: Tape to CRT 1001: 0160000000141014 
DBG(49385833)> MT EXP: Tape to CRT 1002: 0000000233030000 
DBG(49385833)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1005: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1006: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1007: 3336000000000201 
DBG(49385833)> MT EXP: Tape to CRT 1008: 0000000233010000 
DBG(49385833)> MT EXP: Tape to CRT 1009: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1010: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1011: 0000000233020000 
DBG(49385833)> MT EXP: Tape to CRT 1012: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1013: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1014: 0000000233090000 
DBG(49385833)> MT EXP: Tape to CRT 1015: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1016: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1017: 0130000000141015 
DBG(49385833)> MT EXP: Tape to CRT 1018: 0000000233090000 
DBG(49385833)> MT EXP: Tape to CRT 1019: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1020: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1021: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1022: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1023: 3336000000000200 
DBG(49385833)> MT EXP: Tape to CRT 1024: 0000000233010000 
DBG(49385833)> MT EXP: Tape to CRT 1025: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1026: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1027: 0000000233030000 
DBG(49385833)> MT EXP: Tape to CRT 1028: 0000000000000000 
DBG(49385833)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(49385833)> MT EXP: End Of Block Word: 0391140114291001, data words in block: 29
DBG(49385833)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.08% of medium (14.08 inches)
DBG(49385836)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(49385837)> CPU DETAIL: Condition not present 
DBG(49385839)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(49385840)> CPU DETAIL: Condition not present 
DBG(49385842)> CPU CMD: Exec 0023: 00 60 0000 1219 0000               TR                   TEMP1                   Temp1=start of bloc 
DBG(49385843)> CPU DETAIL: Write 1219: 0391140114291001 
DBG(49385845)> CPU CMD: Exec 0024: 04 42 0000 1228 1220            04 MASK                 FIELD-S     TEMP2       Temp2=bbbb=02 90 aa 
DBG(49385846)> CPU DETAIL: Read S 1228: 0000000011110000 
DBG(49385847)> CPU DETAIL: Result: 0000000014290000 
DBG(49385848)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000001429 
DBG(49385849)> CPU DETAIL: Write 1220: 0000000000001429 
DBG(49385851)> CPU CMD: Exec 0025: 08 42 1219 1227 0000            08 MASK     TEMP1       FIELD-R                 REG1=02 90 aaaa bbb 
DBG(49385852)> CPU DETAIL: Read R 1219: 0391140114291001 
DBG(49385853)> CPU DETAIL: Read S 1227: 0000111100000000 
DBG(49385854)> CPU DETAIL: Result: 0000140100000000 
DBG(49385855)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000001401 
DBG(49385858)> CPU CMD: Exec 0026: 00 41 1220 0000 0000               SUB      TEMP2                
DBG(49385859)> CPU DETAIL: Read R 1220: 0000000000001429 
DBG(49385860)> CPU DETAIL: Result: 0000000000000028 
DBG(49385863)> CPU CMD: Exec 0027: 00 40 0000 1222 1203               ADD                  ONE         BL-INBUF    BL-INBUF=Block Len  
DBG(49385864)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49385865)> CPU DETAIL: Result: 0000000000000029 
DBG(49385866)> CPU DETAIL: Write 1203: 0000000000000029 
DBG(49385868)> CPU CMD: Exec 0028: 00 41 1226 0000 0000               SUB      N200                                check Block Len fro 
DBG(49385869)> CPU DETAIL: Read R 1226: 0000000000000200 
DBG(49385870)> CPU DETAIL: Result: 0000000000000171 
DBG(49385873)> CPU CMD: Exec 0029: 00 63 0031 0031 0000               TR SGN   LSPL3       LSPL3                   transfer if 200 or  
DBG(49385874)> CPU DETAIL: REG1: 0000000000000171
DBG(49385874)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49385876)> CPU CMD: Exec 0031: 00 60 1221 1204 0000   LSPL3       TR       ZERO        NW-INBUF                NW-INBUF=Number of  
DBG(49385877)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49385878)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(49385880)> CPU CMD: Exec 0032: 00 60 0000 0000 0033               TR                               RR-INBUF    goto process first  
DBG(49385881)> CPU DETAIL: Transfer to T 
DBG(49385883)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49385884)> CPU DETAIL: Read R 1203: 0000000000000029 
DBG(49385885)> CPU DETAIL: Read S 1204: 0000000000000000 
DBG(49385886)> CPU DETAIL: Result: 0000000000000029 
DBG(49385889)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49385890)> CPU DETAIL: REG1: 0000000000000029
DBG(49385890)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49385892)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49385893)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(49385894)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(49385897)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49385898)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49385899)> CPU DETAIL: Result: 0057000000000000 
DBG(49385900)> CPU DETAIL: Write 0038: 0057000000000000 
DBG(49385902)> CPU CMD: Exec 0038: 00 57 0000 0000 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49385903)> CPU DETAIL: Clear M4
DBG(49385903)> CPU DETAIL: M4: 0000 
DBG(49385904)> CPU DETAIL: Clear M6
DBG(49385904)> CPU DETAIL: M6: 0000 
DBG(49385905)> CPU DETAIL: Clear M8
DBG(49385905)> CPU DETAIL: M8: 0000 
DBG(49385908)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385909)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(49385909)> CPU DETAIL: Read R 1001: 0160000000141014 
DBG(49385910)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49385910)> CPU DETAIL: Write 1212: 0160000000141014 
DBG(49385912)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385913)> CPU DETAIL: M4: 0000 
DBG(49385914)> CPU DETAIL: M6: 0001 
DBG(49385915)> CPU DETAIL: M8: 0000 
DBG(49385918)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385919)> CPU DETAIL: M4: 0001 
DBG(49385920)> CPU DETAIL: Transfer to T 
DBG(49385922)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385923)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(49385923)> CPU DETAIL: Read R 1002: 0000000233030000 
DBG(49385924)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49385924)> CPU DETAIL: Write 1213: 0000000233030000 
DBG(49385926)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385927)> CPU DETAIL: M4: 0001 
DBG(49385928)> CPU DETAIL: M6: 0002 
DBG(49385929)> CPU DETAIL: M8: 0000 
DBG(49385932)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385933)> CPU DETAIL: M4: 0002 
DBG(49385934)> CPU DETAIL: Transfer to T 
DBG(49385936)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385937)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(49385937)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(49385938)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49385938)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49385940)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385941)> CPU DETAIL: M4: 0002 
DBG(49385942)> CPU DETAIL: M6: 0003 
DBG(49385943)> CPU DETAIL: M8: 0000 
DBG(49385946)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385947)> CPU DETAIL: M4: 0003 
DBG(49385948)> CPU DETAIL: Transfer to T 
DBG(49385950)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385951)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(49385951)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(49385952)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49385952)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49385954)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385955)> CPU DETAIL: M4: 0003 
DBG(49385956)> CPU DETAIL: M6: 0004 
DBG(49385957)> CPU DETAIL: M8: 0000 
DBG(49385960)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385961)> CPU DETAIL: M4: 0004 
DBG(49385962)> CPU DETAIL: Transfer to T 
DBG(49385964)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385965)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(49385965)> CPU DETAIL: Read R 1005: 0000000000000000 
DBG(49385966)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49385966)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49385968)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385969)> CPU DETAIL: M4: 0004 
DBG(49385970)> CPU DETAIL: M6: 0005 
DBG(49385971)> CPU DETAIL: M8: 0000 
DBG(49385974)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385975)> CPU DETAIL: M4: 0005 
DBG(49385976)> CPU DETAIL: Transfer to T 
DBG(49385978)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385979)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(49385979)> CPU DETAIL: Read R 1006: 0000000000000000 
DBG(49385980)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49385980)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49385982)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385983)> CPU DETAIL: M4: 0005 
DBG(49385984)> CPU DETAIL: M6: 0006 
DBG(49385985)> CPU DETAIL: M8: 0000 
DBG(49385988)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49385989)> CPU DETAIL: M4: 0006 
DBG(49385990)> CPU DETAIL: Transfer to T 
DBG(49385992)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49385993)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(49385993)> CPU DETAIL: Read R 1007: 3336000000000201 
DBG(49385994)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49385994)> CPU DETAIL: Write 1218: 3336000000000201 
DBG(49385996)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49385997)> CPU DETAIL: M4: 0006 
DBG(49385998)> CPU DETAIL: M6: 0007 
DBG(49385999)> CPU DETAIL: M8: 0000 
DBG(49386002)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386003)> CPU DETAIL: M4: 0007 
DBG(49386006)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49386007)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(49386008)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49386009)> CPU DETAIL: Result: 0000000000000007 
DBG(49386010)> CPU DETAIL: Write 1204: 0000000000000007 
DBG(49386012)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49386013)> CPU DETAIL: Read R 1211: 0000000000000015 
DBG(49386014)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386015)> CPU DETAIL: Result: 0000000000000016 
DBG(49386016)> CPU DETAIL: Write 1211: 0000000000000016 
DBG(49386018)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49386019)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386020)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49386022)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49386023)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386024)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386026)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49386027)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386028)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386030)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49386031)> CPU DETAIL: Read R 1212: 0160000000141014 
DBG(49386032)> CPU DETAIL: Write 1206: 0160000000141014 
DBG(49386034)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49386035)> CPU DETAIL: Read R 1213: 0000000233030000 
DBG(49386036)> CPU DETAIL: Write 1207: 0000000233030000 
DBG(49386038)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49386039)> CPU DETAIL: Read R 1218: 3336000000000201 
DBG(49386040)> CPU DETAIL: Write 1208: 3336000000000201 
DBG(49386042)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49386043)> CPU DETAIL: Read R 1211: 0000000000000016 
DBG(49386044)> CPU DETAIL: Word Shift 12 digits left: REG1: 0016000000000000 
DBG(49386045)> CPU DETAIL: Write 1205: 0016000000000000 
DBG(49386047)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49386048)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49386049)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49386050)> CPU DETAIL: Transfer to T 
DBG(49386052)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386053)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386054)> CPU DETAIL: Result: 0060000000000052 
DBG(49386055)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49386057)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386058)> CPU DETAIL: Read R 1205: 0016000000000000 
DBG(49386059)> CPU DETAIL: Write 0001: 0016000000000000 
DBG(49386061)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386062)> CPU DETAIL: Read R 1206: 0160000000141014 
DBG(49386063)> CPU DETAIL: Write 0002: 0160000000141014 
DBG(49386065)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386066)> CPU DETAIL: Read R 1207: 0000000233030000 
DBG(49386067)> CPU DETAIL: Write 0003: 0000000233030000 
DBG(49386069)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386070)> CPU DETAIL: Read R 1208: 3336000000000201 
DBG(49386071)> CPU DETAIL: Write 0004: 3336000000000201 
DBG(49386073)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386074)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386075)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386077)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386078)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386080)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386081)> CPU DETAIL: Reset condition present 
DBG(49386081)> same as above (3 times)
DBG(49386081)> CPU DETAIL: Transfer to T 
DBG(49386083)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386084)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386084)> MT CMD: Tape unit 2: init write
DBG(49386084)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386084)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386084)> MT EXP: CRT 0001 to Tape: 0016000000000000 
DBG(49386084)> MT EXP: CRT 0002 to Tape: 0160000000141014 
DBG(49386084)> MT EXP: CRT 0003 to Tape: 0000000233030000 
DBG(49386084)> MT EXP: CRT 0004 to Tape: 3336000000000201 
DBG(49386084)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386084)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386084)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.46% of medium (77.17 inches)
DBG(49386087)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386088)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386089)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386090)> CPU DETAIL: Transfer to T 
DBG(49386092)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386093)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386094)> CPU DETAIL: Result: 0060000000000094 
DBG(49386095)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386097)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386098)> CPU DETAIL: Condition not present 
DBG(49386100)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386101)> CPU DETAIL: Transfer to T 
DBG(49386103)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386104)> CPU DETAIL: Transfer to T 
DBG(49386106)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49386107)> CPU DETAIL: Transfer to T 
DBG(49386109)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49386110)> CPU DETAIL: Read R 1218: 3336000000000201 
DBG(49386111)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49386112)> CPU DETAIL: Result: 0000000000000200 
DBG(49386113)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(49386114)> CPU DETAIL: Write 1209: 0000000000000002 
DBG(49386116)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386117)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386118)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49386121)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49386122)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49386122)> CPU DETAIL: Read R 1008: 0000000233010000 
DBG(49386123)> CPU DETAIL: Write 1206: 0000000233010000 
DBG(49386125)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49386126)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49386126)> CPU DETAIL: Read R 1009: 0000000000000000 
DBG(49386127)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386129)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49386130)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(49386130)> CPU DETAIL: Read R 1010: 0000000000000000 
DBG(49386131)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386133)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49386134)> CPU DETAIL: Read R 1205: 0016000000000000 
DBG(49386135)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49386136)> CPU DETAIL: Result: 0016000000000100 
DBG(49386137)> CPU DETAIL: Write 1205: 0016000000000100 
DBG(49386139)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49386140)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49386141)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49386142)> CPU DETAIL: Transfer to T 
DBG(49386144)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386145)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386146)> CPU DETAIL: Result: 0060000000000059 
DBG(49386147)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49386149)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386150)> CPU DETAIL: Read R 1205: 0016000000000100 
DBG(49386151)> CPU DETAIL: Write 0001: 0016000000000100 
DBG(49386153)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386154)> CPU DETAIL: Read R 1206: 0000000233010000 
DBG(49386155)> CPU DETAIL: Write 0002: 0000000233010000 
DBG(49386157)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386158)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49386159)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49386161)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386162)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49386163)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49386165)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386166)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386167)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386169)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386170)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386172)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386173)> CPU DETAIL: Reset condition present 
DBG(49386173)> same as above (3 times)
DBG(49386173)> CPU DETAIL: Transfer to T 
DBG(49386175)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386176)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386176)> MT CMD: Tape unit 2: init write
DBG(49386176)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386176)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386176)> MT EXP: CRT 0001 to Tape: 0016000000000100 
DBG(49386176)> MT EXP: CRT 0002 to Tape: 0000000233010000 
DBG(49386176)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49386176)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49386176)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386176)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386176)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.47% of medium (78.89 inches)
DBG(49386179)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386180)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386181)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386182)> CPU DETAIL: Transfer to T 
DBG(49386184)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386185)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386186)> CPU DETAIL: Result: 0060000000000094 
DBG(49386187)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386189)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386190)> CPU DETAIL: Condition not present 
DBG(49386192)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386193)> CPU DETAIL: Transfer to T 
DBG(49386195)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386196)> CPU DETAIL: Transfer to T 
DBG(49386198)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49386199)> CPU DETAIL: Transfer to T 
DBG(49386201)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49386202)> CPU DETAIL: Read R 1204: 0000000000000007 
DBG(49386203)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49386204)> CPU DETAIL: Result: 0000000000000010 
DBG(49386205)> CPU DETAIL: Write 1204: 0000000000000010 
DBG(49386207)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49386208)> CPU DETAIL: M4: 0007 
DBG(49386209)> CPU DETAIL: M6: 0010 
DBG(49386210)> CPU DETAIL: M8: 0000 
DBG(49386213)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49386214)> CPU DETAIL: Read R 1209: 0000000000000002 
DBG(49386215)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386216)> CPU DETAIL: Result: 0000000000000001 
DBG(49386217)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49386219)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49386220)> CPU DETAIL: Transfer to T 
DBG(49386222)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386223)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386224)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49386227)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49386228)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(49386228)> CPU DETAIL: Read R 1011: 0000000233020000 
DBG(49386229)> CPU DETAIL: Write 1206: 0000000233020000 
DBG(49386231)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49386232)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(49386232)> CPU DETAIL: Read R 1012: 0000000000000000 
DBG(49386233)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386235)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49386236)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(49386236)> CPU DETAIL: Read R 1013: 0000000000000000 
DBG(49386237)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386239)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49386240)> CPU DETAIL: Read R 1205: 0016000000000100 
DBG(49386241)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49386242)> CPU DETAIL: Result: 0016000000000200 
DBG(49386243)> CPU DETAIL: Write 1205: 0016000000000200 
DBG(49386245)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49386246)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49386247)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49386248)> CPU DETAIL: Transfer to T 
DBG(49386250)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386251)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386252)> CPU DETAIL: Result: 0060000000000059 
DBG(49386253)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49386255)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386256)> CPU DETAIL: Read R 1205: 0016000000000200 
DBG(49386257)> CPU DETAIL: Write 0001: 0016000000000200 
DBG(49386259)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386260)> CPU DETAIL: Read R 1206: 0000000233020000 
DBG(49386261)> CPU DETAIL: Write 0002: 0000000233020000 
DBG(49386263)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386264)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49386265)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49386267)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386268)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49386269)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49386271)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386272)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386273)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386275)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386276)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386278)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386279)> CPU DETAIL: Reset condition present 
DBG(49386279)> same as above (3 times)
DBG(49386279)> CPU DETAIL: Transfer to T 
DBG(49386281)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386282)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386282)> MT CMD: Tape unit 2: init write
DBG(49386282)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386282)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386282)> MT EXP: CRT 0001 to Tape: 0016000000000200 
DBG(49386282)> MT EXP: CRT 0002 to Tape: 0000000233020000 
DBG(49386282)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49386282)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49386282)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386282)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386282)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.48% of medium (80.61 inches)
DBG(49386285)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386286)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386287)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386288)> CPU DETAIL: Transfer to T 
DBG(49386290)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386291)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386292)> CPU DETAIL: Result: 0060000000000094 
DBG(49386293)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386295)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386296)> CPU DETAIL: Condition not present 
DBG(49386298)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386299)> CPU DETAIL: Transfer to T 
DBG(49386301)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386302)> CPU DETAIL: Transfer to T 
DBG(49386304)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49386305)> CPU DETAIL: Transfer to T 
DBG(49386307)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49386308)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(49386309)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49386310)> CPU DETAIL: Result: 0000000000000013 
DBG(49386311)> CPU DETAIL: Write 1204: 0000000000000013 
DBG(49386313)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49386314)> CPU DETAIL: M4: 0007 
DBG(49386315)> CPU DETAIL: M6: 0013 
DBG(49386316)> CPU DETAIL: M8: 0000 
DBG(49386319)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49386320)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49386321)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386322)> CPU DETAIL: Result: 0000000000000000 
DBG(49386323)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49386325)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49386326)> CPU DETAIL: Transfer to T 
DBG(49386328)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386329)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386330)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49386331)> CPU DETAIL: Transfer to T 
DBG(49386333)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49386334)> CPU DETAIL: Read R 1205: 0016000000000200 
DBG(49386335)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49386336)> CPU DETAIL: Result: 0016000000000000 
DBG(49386337)> CPU DETAIL: Write 1205: 0016000000000000 
DBG(49386339)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49386340)> CPU DETAIL: Read R 1218: 3336000000000201 
DBG(49386341)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49386342)> CPU DETAIL: Result: 0000000000000001 
DBG(49386343)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(49386345)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49386346)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386347)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49386350)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(49386351)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(49386351)> CPU DETAIL: Read R 1014: 0000000233090000 
DBG(49386352)> CPU DETAIL: Write 1206: 0000000233090000 
DBG(49386354)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49386355)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(49386355)> CPU DETAIL: Read R 1015: 0000000000000000 
DBG(49386356)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386358)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49386359)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(49386359)> CPU DETAIL: Read R 1016: 0000000000000000 
DBG(49386360)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386362)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(49386363)> CPU DETAIL: Read R 1205: 0016000000000000 
DBG(49386364)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386365)> CPU DETAIL: Result: 0016000000000001 
DBG(49386366)> CPU DETAIL: Write 1205: 0016000000000001 
DBG(49386368)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(49386369)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(49386370)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(49386371)> CPU DETAIL: Transfer to T 
DBG(49386373)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386374)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386375)> CPU DETAIL: Result: 0060000000000071 
DBG(49386376)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(49386378)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386379)> CPU DETAIL: Read R 1205: 0016000000000001 
DBG(49386380)> CPU DETAIL: Write 0001: 0016000000000001 
DBG(49386382)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386383)> CPU DETAIL: Read R 1206: 0000000233090000 
DBG(49386384)> CPU DETAIL: Write 0002: 0000000233090000 
DBG(49386386)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386387)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49386388)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49386390)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386391)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49386392)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49386394)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386395)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386396)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386398)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386399)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386401)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386402)> CPU DETAIL: Reset condition present 
DBG(49386402)> same as above (3 times)
DBG(49386402)> CPU DETAIL: Transfer to T 
DBG(49386404)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386405)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386405)> MT CMD: Tape unit 2: init write
DBG(49386405)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386405)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386405)> MT EXP: CRT 0001 to Tape: 0016000000000001 
DBG(49386405)> MT EXP: CRT 0002 to Tape: 0000000233090000 
DBG(49386405)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49386405)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49386405)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386405)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386405)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.49% of medium (82.32 inches)
DBG(49386408)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386409)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386410)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386411)> CPU DETAIL: Transfer to T 
DBG(49386413)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386414)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386415)> CPU DETAIL: Result: 0060000000000094 
DBG(49386416)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386418)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386419)> CPU DETAIL: Condition not present 
DBG(49386421)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386422)> CPU DETAIL: Transfer to T 
DBG(49386424)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386425)> CPU DETAIL: Transfer to T 
DBG(49386427)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(49386428)> CPU DETAIL: Transfer to T 
DBG(49386430)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49386431)> CPU DETAIL: Read R 1204: 0000000000000013 
DBG(49386432)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49386433)> CPU DETAIL: Result: 0000000000000016 
DBG(49386434)> CPU DETAIL: Write 1204: 0000000000000016 
DBG(49386436)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49386437)> CPU DETAIL: M4: 0007 
DBG(49386438)> CPU DETAIL: M6: 0016 
DBG(49386439)> CPU DETAIL: M8: 0000 
DBG(49386442)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(49386443)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(49386444)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386445)> CPU DETAIL: Result: 0000000000000000 
DBG(49386446)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49386448)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(49386449)> CPU DETAIL: Transfer to T 
DBG(49386451)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49386452)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386453)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49386454)> CPU DETAIL: Transfer to T 
DBG(49386456)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49386457)> CPU DETAIL: Read R 1205: 0016000000000001 
DBG(49386458)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49386459)> CPU DETAIL: Result: 0016000000000000 
DBG(49386460)> CPU DETAIL: Write 1205: 0016000000000000 
DBG(49386462)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49386463)> CPU DETAIL: Transfer to T 
DBG(49386465)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49386466)> CPU DETAIL: Read R 1203: 0000000000000029 
DBG(49386467)> CPU DETAIL: Read S 1204: 0000000000000016 
DBG(49386468)> CPU DETAIL: Result: 0000000000000013 
DBG(49386471)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49386472)> CPU DETAIL: REG1: 0000000000000013
DBG(49386472)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(49386474)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(49386475)> CPU DETAIL: Read R 1204: 0000000000000016 
DBG(49386476)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000160000 
DBG(49386479)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(49386480)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(49386481)> CPU DETAIL: Result: 0057000000160000 
DBG(49386482)> CPU DETAIL: Write 0038: 0057000000160000 
DBG(49386484)> CPU CMD: Exec 0038: 00 57 0000 0016 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(49386485)> CPU DETAIL: Clear M4
DBG(49386485)> CPU DETAIL: M4: 0000 
DBG(49386486)> CPU DETAIL: Clear M6
DBG(49386486)> CPU DETAIL: M6: 0016 
DBG(49386487)> CPU DETAIL: Clear M8
DBG(49386487)> CPU DETAIL: M8: 0000 
DBG(49386490)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386491)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(49386491)> CPU DETAIL: Read R 1017: 0130000000141015 
DBG(49386492)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(49386492)> CPU DETAIL: Write 1212: 0130000000141015 
DBG(49386494)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386495)> CPU DETAIL: M4: 0000 
DBG(49386496)> CPU DETAIL: M6: 0017 
DBG(49386497)> CPU DETAIL: M8: 0000 
DBG(49386500)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386501)> CPU DETAIL: M4: 0001 
DBG(49386502)> CPU DETAIL: Transfer to T 
DBG(49386504)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386505)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(49386505)> CPU DETAIL: Read R 1018: 0000000233090000 
DBG(49386506)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(49386506)> CPU DETAIL: Write 1213: 0000000233090000 
DBG(49386508)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386509)> CPU DETAIL: M4: 0001 
DBG(49386510)> CPU DETAIL: M6: 0018 
DBG(49386511)> CPU DETAIL: M8: 0000 
DBG(49386514)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386515)> CPU DETAIL: M4: 0002 
DBG(49386516)> CPU DETAIL: Transfer to T 
DBG(49386518)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386519)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(49386519)> CPU DETAIL: Read R 1019: 0000000000000000 
DBG(49386520)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(49386520)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(49386522)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386523)> CPU DETAIL: M4: 0002 
DBG(49386524)> CPU DETAIL: M6: 0019 
DBG(49386525)> CPU DETAIL: M8: 0000 
DBG(49386528)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386529)> CPU DETAIL: M4: 0003 
DBG(49386530)> CPU DETAIL: Transfer to T 
DBG(49386532)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386533)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(49386533)> CPU DETAIL: Read R 1020: 0000000000000000 
DBG(49386534)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(49386534)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(49386536)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386537)> CPU DETAIL: M4: 0003 
DBG(49386538)> CPU DETAIL: M6: 0020 
DBG(49386539)> CPU DETAIL: M8: 0000 
DBG(49386542)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386543)> CPU DETAIL: M4: 0004 
DBG(49386544)> CPU DETAIL: Transfer to T 
DBG(49386546)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386547)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(49386547)> CPU DETAIL: Read R 1021: 0000000000000000 
DBG(49386548)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(49386548)> CPU DETAIL: Write 1216: 0000000000000000 
DBG(49386550)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386551)> CPU DETAIL: M4: 0004 
DBG(49386552)> CPU DETAIL: M6: 0021 
DBG(49386553)> CPU DETAIL: M8: 0000 
DBG(49386556)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386557)> CPU DETAIL: M4: 0005 
DBG(49386558)> CPU DETAIL: Transfer to T 
DBG(49386560)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386561)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(49386561)> CPU DETAIL: Read R 1022: 0000000000000000 
DBG(49386562)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(49386562)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(49386564)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386565)> CPU DETAIL: M4: 0005 
DBG(49386566)> CPU DETAIL: M6: 0022 
DBG(49386567)> CPU DETAIL: M8: 0000 
DBG(49386570)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386571)> CPU DETAIL: M4: 0006 
DBG(49386572)> CPU DETAIL: Transfer to T 
DBG(49386574)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(49386575)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(49386575)> CPU DETAIL: Read R 1023: 3336000000000200 
DBG(49386576)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(49386576)> CPU DETAIL: Write 1218: 3336000000000200 
DBG(49386578)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(49386579)> CPU DETAIL: M4: 0006 
DBG(49386580)> CPU DETAIL: M6: 0023 
DBG(49386581)> CPU DETAIL: M8: 0000 
DBG(49386584)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(49386585)> CPU DETAIL: M4: 0007 
DBG(49386588)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(49386589)> CPU DETAIL: Read R 1204: 0000000000000016 
DBG(49386590)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(49386591)> CPU DETAIL: Result: 0000000000000023 
DBG(49386592)> CPU DETAIL: Write 1204: 0000000000000023 
DBG(49386594)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(49386595)> CPU DETAIL: Read R 1211: 0000000000000016 
DBG(49386596)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386597)> CPU DETAIL: Result: 0000000000000017 
DBG(49386598)> CPU DETAIL: Write 1211: 0000000000000017 
DBG(49386600)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(49386601)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386602)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(49386604)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(49386605)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386606)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386608)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(49386609)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386610)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386612)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(49386613)> CPU DETAIL: Read R 1212: 0130000000141015 
DBG(49386614)> CPU DETAIL: Write 1206: 0130000000141015 
DBG(49386616)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(49386617)> CPU DETAIL: Read R 1213: 0000000233090000 
DBG(49386618)> CPU DETAIL: Write 1207: 0000000233090000 
DBG(49386620)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(49386621)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49386622)> CPU DETAIL: Write 1208: 3336000000000200 
DBG(49386624)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(49386625)> CPU DETAIL: Read R 1211: 0000000000000017 
DBG(49386626)> CPU DETAIL: Word Shift 12 digits left: REG1: 0017000000000000 
DBG(49386627)> CPU DETAIL: Write 1205: 0017000000000000 
DBG(49386629)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(49386630)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(49386631)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(49386632)> CPU DETAIL: Transfer to T 
DBG(49386634)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386635)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386636)> CPU DETAIL: Result: 0060000000000052 
DBG(49386637)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(49386639)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386640)> CPU DETAIL: Read R 1205: 0017000000000000 
DBG(49386641)> CPU DETAIL: Write 0001: 0017000000000000 
DBG(49386643)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386644)> CPU DETAIL: Read R 1206: 0130000000141015 
DBG(49386645)> CPU DETAIL: Write 0002: 0130000000141015 
DBG(49386647)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386648)> CPU DETAIL: Read R 1207: 0000000233090000 
DBG(49386649)> CPU DETAIL: Write 0003: 0000000233090000 
DBG(49386651)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386652)> CPU DETAIL: Read R 1208: 3336000000000200 
DBG(49386653)> CPU DETAIL: Write 0004: 3336000000000200 
DBG(49386655)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386656)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386657)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386659)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386660)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386662)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386663)> CPU DETAIL: Reset condition present 
DBG(49386663)> same as above (3 times)
DBG(49386663)> CPU DETAIL: Transfer to T 
DBG(49386665)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386666)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386666)> MT CMD: Tape unit 2: init write
DBG(49386666)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386666)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386666)> MT EXP: CRT 0001 to Tape: 0017000000000000 
DBG(49386666)> MT EXP: CRT 0002 to Tape: 0130000000141015 
DBG(49386666)> MT EXP: CRT 0003 to Tape: 0000000233090000 
DBG(49386666)> MT EXP: CRT 0004 to Tape: 3336000000000200 
DBG(49386666)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386666)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386666)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.50% of medium (84.03 inches)
DBG(49386669)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386670)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386671)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386672)> CPU DETAIL: Transfer to T 
DBG(49386674)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386675)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386676)> CPU DETAIL: Result: 0060000000000094 
DBG(49386677)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386679)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386680)> CPU DETAIL: Condition not present 
DBG(49386682)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386683)> CPU DETAIL: Transfer to T 
DBG(49386685)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386686)> CPU DETAIL: Transfer to T 
DBG(49386688)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(49386689)> CPU DETAIL: Transfer to T 
DBG(49386691)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(49386692)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49386693)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(49386694)> CPU DETAIL: Result: 0000000000000200 
DBG(49386695)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000002 
DBG(49386696)> CPU DETAIL: Write 1209: 0000000000000002 
DBG(49386698)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386699)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386700)> CPU DETAIL: Diff: REG1: 0000000000000002
DBG(49386703)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49386704)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(49386704)> CPU DETAIL: Read R 1024: 0000000233010000 
DBG(49386705)> CPU DETAIL: Write 1206: 0000000233010000 
DBG(49386707)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49386708)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(49386708)> CPU DETAIL: Read R 1025: 0000000000000000 
DBG(49386709)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386711)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49386712)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(49386712)> CPU DETAIL: Read R 1026: 0000000000000000 
DBG(49386713)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386715)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49386716)> CPU DETAIL: Read R 1205: 0017000000000000 
DBG(49386717)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49386718)> CPU DETAIL: Result: 0017000000000100 
DBG(49386719)> CPU DETAIL: Write 1205: 0017000000000100 
DBG(49386721)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49386722)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49386723)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49386724)> CPU DETAIL: Transfer to T 
DBG(49386726)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386727)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386728)> CPU DETAIL: Result: 0060000000000059 
DBG(49386729)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49386731)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386732)> CPU DETAIL: Read R 1205: 0017000000000100 
DBG(49386733)> CPU DETAIL: Write 0001: 0017000000000100 
DBG(49386735)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386736)> CPU DETAIL: Read R 1206: 0000000233010000 
DBG(49386737)> CPU DETAIL: Write 0002: 0000000233010000 
DBG(49386739)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386740)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49386741)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49386743)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386744)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49386745)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49386747)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386748)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386749)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386751)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386752)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386754)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386755)> CPU DETAIL: Reset condition present 
DBG(49386755)> same as above (3 times)
DBG(49386755)> CPU DETAIL: Transfer to T 
DBG(49386757)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386758)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386758)> MT CMD: Tape unit 2: init write
DBG(49386758)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386758)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386758)> MT EXP: CRT 0001 to Tape: 0017000000000100 
DBG(49386758)> MT EXP: CRT 0002 to Tape: 0000000233010000 
DBG(49386758)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49386758)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49386758)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386758)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386758)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.51% of medium (85.75 inches)
DBG(49386761)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386762)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386763)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386764)> CPU DETAIL: Transfer to T 
DBG(49386766)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386767)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386768)> CPU DETAIL: Result: 0060000000000094 
DBG(49386769)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386771)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386772)> CPU DETAIL: Condition not present 
DBG(49386774)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386775)> CPU DETAIL: Transfer to T 
DBG(49386777)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386778)> CPU DETAIL: Transfer to T 
DBG(49386780)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49386781)> CPU DETAIL: Transfer to T 
DBG(49386783)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49386784)> CPU DETAIL: Read R 1204: 0000000000000023 
DBG(49386785)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49386786)> CPU DETAIL: Result: 0000000000000026 
DBG(49386787)> CPU DETAIL: Write 1204: 0000000000000026 
DBG(49386789)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49386790)> CPU DETAIL: M4: 0007 
DBG(49386791)> CPU DETAIL: M6: 0026 
DBG(49386792)> CPU DETAIL: M8: 0000 
DBG(49386795)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49386796)> CPU DETAIL: Read R 1209: 0000000000000002 
DBG(49386797)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386798)> CPU DETAIL: Result: 0000000000000001 
DBG(49386799)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(49386801)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49386802)> CPU DETAIL: Transfer to T 
DBG(49386804)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386805)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386806)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(49386809)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(49386810)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(49386810)> CPU DETAIL: Read R 1027: 0000000233030000 
DBG(49386811)> CPU DETAIL: Write 1206: 0000000233030000 
DBG(49386813)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(49386814)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(49386814)> CPU DETAIL: Read R 1028: 0000000000000000 
DBG(49386815)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(49386817)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(49386818)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(49386818)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(49386819)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(49386821)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(49386822)> CPU DETAIL: Read R 1205: 0017000000000100 
DBG(49386823)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(49386824)> CPU DETAIL: Result: 0017000000000200 
DBG(49386825)> CPU DETAIL: Write 1205: 0017000000000200 
DBG(49386827)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(49386828)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(49386829)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(49386830)> CPU DETAIL: Transfer to T 
DBG(49386832)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(49386833)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386834)> CPU DETAIL: Result: 0060000000000059 
DBG(49386835)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(49386837)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(49386838)> CPU DETAIL: Read R 1205: 0017000000000200 
DBG(49386839)> CPU DETAIL: Write 0001: 0017000000000200 
DBG(49386841)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(49386842)> CPU DETAIL: Read R 1206: 0000000233030000 
DBG(49386843)> CPU DETAIL: Write 0002: 0000000233030000 
DBG(49386845)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(49386846)> CPU DETAIL: Read R 1207: 0000000000000000 
DBG(49386847)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(49386849)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(49386850)> CPU DETAIL: Read R 1208: 0000000000000000 
DBG(49386851)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(49386853)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(49386854)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(49386855)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(49386857)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(49386858)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(49386860)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(49386861)> CPU DETAIL: Reset condition present 
DBG(49386861)> same as above (3 times)
DBG(49386861)> CPU DETAIL: Transfer to T 
DBG(49386863)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(49386864)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(49386864)> MT CMD: Tape unit 2: init write
DBG(49386864)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(49386864)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(49386864)> MT EXP: CRT 0001 to Tape: 0017000000000200 
DBG(49386864)> MT EXP: CRT 0002 to Tape: 0000000233030000 
DBG(49386864)> MT EXP: CRT 0003 to Tape: 0000000000000000 
DBG(49386864)> MT EXP: CRT 0004 to Tape: 0000000000000000 
DBG(49386864)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(49386864)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(49386864)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.52% of medium (87.47 inches)
DBG(49386867)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386868)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(49386869)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(49386870)> CPU DETAIL: Transfer to T 
DBG(49386872)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386873)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386874)> CPU DETAIL: Result: 0060000000000094 
DBG(49386875)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(49386877)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386878)> CPU DETAIL: Condition not present 
DBG(49386880)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(49386881)> CPU DETAIL: Transfer to T 
DBG(49386883)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(49386884)> CPU DETAIL: Transfer to T 
DBG(49386886)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(49386887)> CPU DETAIL: Transfer to T 
DBG(49386889)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(49386890)> CPU DETAIL: Read R 1204: 0000000000000026 
DBG(49386891)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(49386892)> CPU DETAIL: Result: 0000000000000029 
DBG(49386893)> CPU DETAIL: Write 1204: 0000000000000029 
DBG(49386895)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(49386896)> CPU DETAIL: M4: 0007 
DBG(49386897)> CPU DETAIL: M6: 0029 
DBG(49386898)> CPU DETAIL: M8: 0000 
DBG(49386901)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(49386902)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(49386903)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(49386904)> CPU DETAIL: Result: 0000000000000000 
DBG(49386905)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(49386907)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(49386908)> CPU DETAIL: Transfer to T 
DBG(49386910)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(49386911)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386912)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49386913)> CPU DETAIL: Transfer to T 
DBG(49386915)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49386916)> CPU DETAIL: Read R 1205: 0017000000000200 
DBG(49386917)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49386918)> CPU DETAIL: Result: 0017000000000000 
DBG(49386919)> CPU DETAIL: Write 1205: 0017000000000000 
DBG(49386921)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(49386922)> CPU DETAIL: Read R 1218: 3336000000000200 
DBG(49386923)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(49386924)> CPU DETAIL: Result: 0000000000000000 
DBG(49386925)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(49386927)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(49386928)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(49386929)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(49386930)> CPU DETAIL: Transfer to T 
DBG(49386932)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(49386933)> CPU DETAIL: Read R 1205: 0017000000000000 
DBG(49386934)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(49386935)> CPU DETAIL: Result: 0017000000000000 
DBG(49386936)> CPU DETAIL: Write 1205: 0017000000000000 
DBG(49386938)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(49386939)> CPU DETAIL: Transfer to T 
DBG(49386941)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(49386942)> CPU DETAIL: Read R 1203: 0000000000000029 
DBG(49386943)> CPU DETAIL: Read S 1204: 0000000000000029 
DBG(49386944)> CPU DETAIL: Result: 0000000000000000 
DBG(49386947)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(49386948)> CPU DETAIL: REG1: 0000000000000000
DBG(49386948)> CPU DETAIL: Transfer to S (REG1=0)
DBG(49386950)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(49386951)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(49386951)> MT DATA: Tape unit 1: init read
DBG(49386951)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 1
DBG(49386951)> MT DETAIL: Tape record contents: D*0391000000000000CD
DBG(49386951)> MT EXP: End Of File mark sensed: 0391000000000000 
DBG(49386951)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.09% of medium (15.62 inches)
DBG(49386954)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(49386955)> CPU DETAIL: Condition not present 
DBG(49386957)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(49386958)> CPU DETAIL: Reset condition present 
DBG(49386958)> CPU DETAIL: Transfer to T 
DBG(49386960)> CPU CMD: Exec 0080: 00 74 0000 0000 0077   END         74                               END-TAP     if switch 74 set to 
DBG(49386961)> CPU DETAIL: Reset condition present 
DBG(49386961)> same as above (3 times)
DBG(49386961)> CPU DETAIL: Transfer to T 
DBG(49386963)> CPU CMD: Exec 0077: 02 91 0000 0000 0000   END-TAP  02 91       0000        0000                    write end of tape   
DBG(49386964)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(49386964)> MT CMD: Tape unit 2: init write
DBG(49386964)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(49386964)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(49386964)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.53% of medium (89.00 inches)
DBG(49386967)> CPU CMD: Exec 0078: 08 60 0078 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(49386968)> CPU DETAIL: Read R 0078: 0860007800001992 
DBG(49386969)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600078 
DBG(49386970)> CPU DETAIL: Transfer to T 
DBG(49386972)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(49386973)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(49386974)> CPU DETAIL: Result: 0060000000000079 
DBG(49386975)> CPU DETAIL: Write 1994: 0060000000000079 
DBG(49386977)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(49386978)> CPU DETAIL: Condition not present 
DBG(49386980)> CPU CMD: Exec 1994: 00 60 0000 0000 0079   LCHKEX      00                                           if no tape chek, re 
DBG(49386981)> CPU DETAIL: Transfer to T 
DBG(49386983)> CPU CMD: Exec 0079: 00 60 1235 0001 0001               TR       STOP-OP     0001        0001        set stop in 0001, t 
DBG(49386984)> CPU DETAIL: Read R 1235: 0061000000000000 
DBG(49386985)> CPU DETAIL: Transfer to T 
DBG(49386985)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(49386987)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(49386988)> CPU DETAIL: Programmed STOP 
DBG(49386988)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(49963335)> CPU DETAIL: End Wait for TAPE animation (112 msec)
DBG(49963335)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(49963335)> CPU DETAIL: Measured speed: 5718829 Ticks per second
DBG(49963335)> CPU DETAIL: Measured speed: Clock at 5.72 MHz
DBG(49963335)> CPU DETAIL: Speed is x5.7 relative to original hardware
DBG(49963335)> CPU DETAIL: Instructions executed: 1887
DBG(49963335)> CPU DETAIL: Measured speed: 8461 Instructions per second (IPS) achieved
DBG(49963335)> CPU DETAIL: Run elapsed 223 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)
DBG(49963335)> MT EXP: Tape unit 0: attach file mt_EV_prt.tap
DBG(49963335)> CTC DETAIL: Punch Card:            0001000000000000010000000011111100000002010000032222444455660001
DBG(49963335)> CTC DETAIL: Punch Card:            0001000000000001000000020999999001041100000000000001209999999997
DBG(49963335)> CTC DETAIL: Punch Card:            0002000000000000013000000012111100000002310000003333444455660002
DBG(49963335)> CTC DETAIL: Punch Card:            0002000000000001000000023101000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0002000000000002000000023102000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0003000000000000013000000013111100000002320000003333444455660002
DBG(49963335)> CTC DETAIL: Punch Card:            0003000000000001000000023201000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0003000000000002000000023209000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0004000000000000013000000014111100000002330000003333444455660002
DBG(49963335)> CTC DETAIL: Punch Card:            0004000000000001000000023301000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0004000000000002000000023302000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0005000000000000010000000015111100000002410000032222444455660001
DBG(49963335)> CTC DETAIL: Punch Card:            0005000000000001000000024200999001041100000000000001209999999997
DBG(49963335)> CTC DETAIL: Punch Card:            0006000000000000010000000011111200000002099999900000000000000100
DBG(49963335)> CTC DETAIL: Punch Card:            0006000000000100000000020100000000000000000335550000000000033666
DBG(49963335)> CTC DETAIL: Punch Card:            0007000000000000013000000012111200000002310100003334444455660101
DBG(49963335)> CTC DETAIL: Punch Card:            0007000000000100000000023100000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0007000000000001000000023103000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0008000000000000013000000012111300000002310200033335444455660101
DBG(49963335)> CTC DETAIL: Punch Card:            0008000000000100000000023100000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0008000000000001000000023103000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0009000000000000013000000013111200000002320100003334444455660101
DBG(49963335)> CTC DETAIL: Punch Card:            0009000000000100000000023200000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0009000000000001000000023209000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0010000000000000019000000014111200000002330100003334444455660103
DBG(49963335)> CTC DETAIL: Punch Card:            0010000000000100000000023300000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0010000000000001000000023302000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0010000000000002000000023303000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0010000000000003000000023309000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0011000000000000013000000015111300000002420099900000000000000101
DBG(49963335)> CTC DETAIL: Punch Card:            0011000000000100000000024100000000000000000335550000000000033666
DBG(49963335)> CTC DETAIL: Punch Card:            0011000000000001000000024999999000000000000335550000000000033666
DBG(49963335)> CTC DETAIL: Punch Card:            0012000000000000013000000012111400000002310300003336000000000200
DBG(49963335)> CTC DETAIL: Punch Card:            0012000000000100000000023101000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0012000000000200000000023102000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0013000000000000013000000013111300000002320900003336000000000200
DBG(49963335)> CTC DETAIL: Punch Card:            0013000000000100000000023200000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0013000000000200000000023201000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0014000000000000016000000014101300000002330200033335444455660201
DBG(49963335)> CTC DETAIL: Punch Card:            0014000000000100000000023300000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0014000000000200000000023301000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0014000000000001000000023303000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0015000000000000010000000015111300000002499999900000000000000100
DBG(49963335)> CTC DETAIL: Punch Card:            0015000000000100000000024200999000000000000335550000000000033666
DBG(49963335)> CTC DETAIL: Punch Card:            0016000000000000016000000014101400000002330300003336000000000201
DBG(49963335)> CTC DETAIL: Punch Card:            0016000000000100000000023301000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0016000000000200000000023302000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0016000000000001000000023309000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0017000000000000013000000014101500000002330900003336000000000200
DBG(49963335)> CTC DETAIL: Punch Card:            0017000000000100000000023301000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Punch Card:            0017000000000200000000023303000000000000000000000000000000000000

Exec Ok
******************************


*** use ctc to load sample event tape to compute

Punched 10 cards 
DBG(49963335)> MT EXP: Tape unit 0: attach file sample/mt3.tap
Read 10 cards in CTC 
DBG(49963335)> CTC DETAIL: Read Card:            !3900303030300003907000000000000039003030303000!!390030103331000
DBG(49963335)> CTC DETAIL: Read Card:            0100000000151111000000024100000300000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Read Card:            0000000000000000000000000000000022214444556600010000000242009990
DBG(49963335)> CTC DETAIL: Read Card:            0104110000000000000120999999999701300000001511130000000242009990
DBG(49963335)> CTC DETAIL: Read Card:            0000000000000000000000000000000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Read Card:            0000000000000101000000024100000000000000000335550000000000033666
DBG(49963335)> CTC DETAIL: Read Card:            0000000249999990000000000003355500000000000336660100000000151113
DBG(49963335)> CTC DETAIL: Read Card:            0000000249999990000000000000000000000000000000000000000000000000
DBG(49963335)> CTC DETAIL: Read Card:            0000000000000000000000000000010000000002420099900000000000033555
DBG(49963335)> CTC DETAIL: Read Card:            0000000000033666039003010333100!!39000000000000!
Written 34 words in Tape 
