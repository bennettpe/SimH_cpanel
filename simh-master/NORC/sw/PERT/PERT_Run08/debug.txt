Debug output to "debug.txt" at Sun Feb 07 21:41:03 2021
IBM NORC simulator V4.0-0 Current        git commit id: d0022e93

*********************************
Exec PERT Run08 (compute)


*** load program on computer and prepare prog initial settings

loaded compute_prog.txt from 0008 to 1997 address
DBG(49963335)> MT EXP: Tape unit 1: attach file mt_EV_Comp.tap
DBG(49963335)> MT EXP: Tape unit 2: attach file mt2.tap
DBG(49963335)> MT EXP: Tape unit 3: attach file sample/mt3.tap
DBG(49963335)> MT EXP: Tape unit 4: attach file mt4.tap
DBG(49963335)> CPU DETAIL: Measured speed: init because start of run
DBG(49963337)> CPU CMD: Exec 0008: 03 94 0650 0650 0000   read input tape 03, 1 word in (0650)   
DBG(49963338)> CPU DETAIL: Tape operation on MT3, Addr 0650->0650, Block Number 0000
DBG(49963338)> MT DATA: Tape unit 3: init read
DBG(49963338)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 3
DBG(49963338)> MT DETAIL: Tape record contents: D*0390030303030000C*3907000000000000C*0390030303030000CD
DBG(49963338)> MT EXP: Start Of Block Word: 0390030303030000
DBG(49963338)> MT EXP: Read Tape Block number 0000
DBG(49963338)> MT EXP: Read forward addr 0650 to 0650
DBG(49963338)> MT EXP: Tape to CRT 0650: 3907000000000000 
DBG(49963338)> MT EXP: End Of Block Word: 0390030303030000, data words in block: 1
DBG(49963338)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(49963341)> CPU CMD: Exec 0009: 08 68 0009 0000 1931   if tape check, call 1931 reread   
DBG(49963342)> CPU DETAIL: Condition not present 
DBG(49963344)> CPU CMD: Exec 0010: 00 61 0000 0000 0615   stop, then goto 0615 (print label), then continue to 0011   
DBG(49963345)> CPU DETAIL: Transfer to T 
DBG(49963345)> CPU DETAIL: Programmed STOP 
DBG(49963345)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(50468953)> CPU DETAIL: End Wait for TAPE animation (73 msec)
DBG(50468953)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(50468953)> CPU DETAIL: Measured speed: 7047479 Ticks per second
DBG(50468953)> CPU DETAIL: Measured speed: Clock at 7.05 MHz
DBG(50468953)> CPU DETAIL: Speed is x7.0 relative to original hardware
DBG(50468953)> CPU DETAIL: Instructions executed: 3
DBG(50468953)> CPU DETAIL: Measured speed: 41 Instructions per second (IPS) achieved
DBG(50468953)> CPU DETAIL: Run elapsed 73 msec

Program STOP, IC: 00010 (00 61 0000 0000 0615)
DBG(50468953)> CPU DETAIL: Measured speed: init because start of run
DBG(50468955)> CPU CMD: Exec 0615: 00 80 0650 0001 0000   (0650 input tape 03 label as read from tape) -> (0001)   
DBG(50468956)> CPU DETAIL: Read R 0650: 3907000000000000 
DBG(50468957)> CPU DETAIL: Write 0001: 3907000000000000 
DBG(50468959)> CPU CMD: Exec 0616: 00 80 1687 0002 0000   (1687 input tape label requiered) -> (0002) = 39 07 0000 0000 NNNN   
DBG(50468960)> CPU DETAIL: Read R 1687: 0000000000000000 
DBG(50468961)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(50468963)> CPU CMD: Exec 0617: 00 80 1686 0003 0000   (1686 output tape label with week info) -> (0003)   
DBG(50468964)> CPU DETAIL: Read R 1686: 0000000000000000 
DBG(50468965)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(50468967)> CPU CMD: Exec 0618: 00 80 1688 0004 0000   (in prog load TSTS=Schedulled completition time to be used) -> (0004)   
DBG(50468968)> CPU DETAIL: Read R 1688: 0000000000000000 
DBG(50468969)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(50468971)> CPU CMD: Exec 0619: 00 80 1684 0005 0000   (1684) -> (0005)   
DBG(50468972)> CPU DETAIL: Read R 1684: 0000000000000000 
DBG(50468973)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(50468975)> CPU CMD: Exec 0620: 00 80 1685 0006 0000   (1685) -> (0006)   
DBG(50468976)> CPU DETAIL: Read R 1685: 0000000000000000 
DBG(50468977)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(50468979)> CPU CMD: Exec 0621: 00 83 1733 0007 0011   print special, goto 0011    
DBG(50468980)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50468981)> CPU DETAIL: Transfer to T 
DBG(50468981)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(50468981)> LP CMD: Printer LP1: init cycle special
DBG(50468981)> LP CMD:      0001: 3907000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(50468981)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(50468981)> LP CMD: Printer 1: ready (fast mode)
DBG(50468983)> CPU CMD: Exec 0011: 02 91 0000 0000 0000   write eof in tape 02   
DBG(50468984)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(50468984)> MT CMD: Tape unit 2: init write
DBG(50468984)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(50468984)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(50468984)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(50468987)> CPU CMD: Exec 0012: 08 60 0012 0000 1948   call 1948 check write   
DBG(50468988)> CPU DETAIL: Read R 0012: 0860001200001948 
DBG(50468989)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600012 
DBG(50468990)> CPU DETAIL: Transfer to T 
DBG(50468992)> CPU CMD: Exec 1948: 00 40 1967 0000 1960   Check write routine: save exit transfer in (1960 EXIT_CheckWrite)   
DBG(50468993)> CPU DETAIL: Read R 1967: 0059999991400001 
DBG(50468994)> CPU DETAIL: Result: 0060000000000013 
DBG(50468995)> CPU DETAIL: Write 1960: 0060000000000013 
DBG(50468997)> CPU CMD: Exec 1949: 91 60 0000 0000 0000      
DBG(50468998)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000013000000000 
DBG(50469001)> CPU CMD: Exec 1950: 01 40 1968 0000 1952      
DBG(50469002)> CPU DETAIL: Read R 1968: 0599998196500000 
DBG(50469003)> CPU DETAIL: Result: 0600011196500000 
DBG(50469004)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060001119650000 
DBG(50469005)> CPU DETAIL: Write 1952: 0060001119650000 
DBG(50469007)> CPU CMD: Exec 1951: 00 60 1971 1962 0000      
DBG(50469008)> CPU DETAIL: Read R 1971: 0060195619621962 
DBG(50469009)> CPU DETAIL: Write 1962: 0060195619621962 
DBG(50469011)> CPU CMD: Exec 1952: 00 60 0011 1965 0000      
DBG(50469012)> CPU DETAIL: Read R 0011: 0291000000000000 
DBG(50469013)> CPU DETAIL: Write 1965: 0291000000000000 
DBG(50469015)> CPU CMD: Exec 1953: 00 68 0000 0000 1955   if tape signal on write goto 1955   
DBG(50469016)> CPU DETAIL: Condition not present 
DBG(50469018)> CPU CMD: Exec 1954: 00 60 0000 0000 1960   go to exit word   
DBG(50469019)> CPU DETAIL: Transfer to T 
DBG(50469021)> CPU CMD: Exec 1960: 00 60 0000 0000 0013   EXIT_CheckWrite   
DBG(50469022)> CPU DETAIL: Transfer to T 
DBG(50469024)> CPU CMD: Exec 0013: 00 67 0000 0000 0015   if end of file, goto 0015, check tape is empty   
DBG(50469025)> CPU DETAIL: Reset condition present 
DBG(50469025)> CPU DETAIL: Transfer to T 
DBG(50469027)> CPU CMD: Exec 0015: 00 57 0000 0000 0000   clear M4 M6 M8   
DBG(50469028)> CPU DETAIL: Clear M4
DBG(50469028)> CPU DETAIL: M4: 0000 
DBG(50469029)> CPU DETAIL: Clear M6
DBG(50469029)> CPU DETAIL: M6: 0000 
DBG(50469030)> CPU DETAIL: Clear M8
DBG(50469030)> CPU DETAIL: M8: 0000 
DBG(50469033)> CPU CMD: Exec 0016: 00 40 1729 1687 1687   set (1687 input tape 03 label) = 3907 0..0 + input tape week NNNN = expected 
DBG(50469034)> CPU DETAIL: Read R 1729: 3907000000000000 
DBG(50469035)> CPU DETAIL: Read S 1687: 0000000000000000 
DBG(50469036)> CPU DETAIL: Result: 3907000000000000 
DBG(50469037)> CPU DETAIL: Write 1687: 3907000000000000 
DBG(50469039)> CPU CMD: Exec 0017: 00 70 0650 0000 0019   if (650 tape 03 label read from tape) match goto 0019   
DBG(50469040)> CPU DETAIL: Read R 0650: 3907000000000000 
DBG(50469041)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50469042)> CPU DETAIL: Transfer to T 
DBG(50469044)> CPU CMD: Exec 0019: 00 40 1748 1729 1729   const 00 01 0..0 + const 39 07 0..0 -> 39 08 0..0 new output label   
DBG(50469045)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50469046)> CPU DETAIL: Read S 1729: 3907000000000000 
DBG(50469047)> CPU DETAIL: Result: 3908000000000000 
DBG(50469048)> CPU DETAIL: Write 1729: 3908000000000000 
DBG(50469050)> CPU CMD: Exec 0020: 00 40 1686 0000 1686   add 39 08 0..0 to week now -> (1686 output tape label with week info)   
DBG(50469051)> CPU DETAIL: Read R 1686: 0000000000000000 
DBG(50469052)> CPU DETAIL: Result: 3908000000000000 
DBG(50469053)> CPU DETAIL: Write 1686: 3908000000000000 
DBG(50469055)> CPU CMD: Exec 0021: 01 91 1686 1686 0000   write tape 01 label -> output tape 39 08 0000 0000 NNNN with NNN.N = week no 
DBG(50469056)> CPU DETAIL: Tape operation on MT1, Addr 1686->1686, Block Number 0000
DBG(50469056)> MT CMD: Tape unit 1: init write
DBG(50469056)> MT EXP: Write from 1686 to 1686 as Block number 0000
DBG(50469056)> MT EXP: Start Of Block: 01 91 1686 1686 0000
DBG(50469056)> MT EXP: CRT 1686 to Tape: 3908000000000000 
DBG(50469056)> MT EXP: End Of Block: 01 91 1686 1686 0000 (1 words)
DBG(50469056)> MT DETAIL: Write block (56 chars, used 1.61 inches, needs 8 msec) to tape 1
DBG(50469056)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(50469059)> CPU CMD: Exec 0022: 08 60 0022 0000 1948   call 1948 check write   
DBG(50469060)> CPU DETAIL: Read R 0022: 0860002200001948 
DBG(50469061)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600022 
DBG(50469062)> CPU DETAIL: Transfer to T 
DBG(50469064)> CPU CMD: Exec 1948: 00 40 1967 0000 1960   Check write routine: save exit transfer in (1960 EXIT_CheckWrite)   
DBG(50469065)> CPU DETAIL: Read R 1967: 0059999991400001 
DBG(50469066)> CPU DETAIL: Result: 0060000000000023 
DBG(50469067)> CPU DETAIL: Write 1960: 0060000000000023 
DBG(50469069)> CPU CMD: Exec 1949: 91 60 0000 0000 0000      
DBG(50469070)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000023000000000 
DBG(50469073)> CPU CMD: Exec 1950: 01 40 1968 0000 1952      
DBG(50469074)> CPU DETAIL: Read R 1968: 0599998196500000 
DBG(50469075)> CPU DETAIL: Result: 0600021196500000 
DBG(50469076)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060002119650000 
DBG(50469077)> CPU DETAIL: Write 1952: 0060002119650000 
DBG(50469079)> CPU CMD: Exec 1951: 00 60 1971 1962 0000      
DBG(50469080)> CPU DETAIL: Read R 1971: 0060195619621962 
DBG(50469081)> CPU DETAIL: Write 1962: 0060195619621962 
DBG(50469083)> CPU CMD: Exec 1952: 00 60 0021 1965 0000      
DBG(50469084)> CPU DETAIL: Read R 0021: 0191168616860000 
DBG(50469085)> CPU DETAIL: Write 1965: 0191168616860000 
DBG(50469087)> CPU CMD: Exec 1953: 00 68 0000 0000 1955   if tape signal on write goto 1955   
DBG(50469088)> CPU DETAIL: Condition not present 
DBG(50469090)> CPU CMD: Exec 1954: 00 60 0000 0000 1960   go to exit word   
DBG(50469091)> CPU DETAIL: Transfer to T 
DBG(50469093)> CPU CMD: Exec 1960: 00 60 0000 0000 0023   EXIT_CheckWrite   
DBG(50469094)> CPU DETAIL: Transfer to T 
DBG(50469096)> CPU CMD: Exec 0023: 03 94 0684 0000 1000   read input tape 03 -> (0684) record 1000   
DBG(50469097)> CPU DETAIL: Tape operation on MT3, Addr 0684->0000, Block Number 1000
DBG(50469097)> MT DATA: Tape unit 3: init read
DBG(50469097)> MT DETAIL: Read tape record (632 chars, used 2.74 inches, needs 16 msec) from tape 3
DBG(50469097)> MT DETAIL: Tape record contents: D*0390030103331000C*0100000000151111C*0000000241000003C*00000000000000...
DBG(50469097)> MT EXP: Start Of Block Word: 0390030103331000
DBG(50469097)> MT EXP: Read Tape Block number 1000
DBG(50469097)> MT EXP: Read forward addr 0684 to 0000
DBG(50469097)> MT EXP: Tape to CRT 0684: 0100000000151111 
DBG(50469097)> MT EXP: Tape to CRT 0685: 0000000241000003 
DBG(50469097)> MT EXP: Tape to CRT 0686: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0687: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0688: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0689: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0690: 2221444455660001 
DBG(50469097)> MT EXP: Tape to CRT 0691: 0000000242009990 
DBG(50469097)> MT EXP: Tape to CRT 0692: 0104110000000000 
DBG(50469097)> MT EXP: Tape to CRT 0693: 0001209999999997 
DBG(50469097)> MT EXP: Tape to CRT 0694: 0130000000151113 
DBG(50469097)> MT EXP: Tape to CRT 0695: 0000000242009990 
DBG(50469097)> MT EXP: Tape to CRT 0696: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0697: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0698: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0699: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0700: 0000000000000101 
DBG(50469097)> MT EXP: Tape to CRT 0701: 0000000241000000 
DBG(50469097)> MT EXP: Tape to CRT 0702: 0000000000033555 
DBG(50469097)> MT EXP: Tape to CRT 0703: 0000000000033666 
DBG(50469097)> MT EXP: Tape to CRT 0704: 0000000249999990 
DBG(50469097)> MT EXP: Tape to CRT 0705: 0000000000033555 
DBG(50469097)> MT EXP: Tape to CRT 0706: 0000000000033666 
DBG(50469097)> MT EXP: Tape to CRT 0707: 0100000000151113 
DBG(50469097)> MT EXP: Tape to CRT 0708: 0000000249999990 
DBG(50469097)> MT EXP: Tape to CRT 0709: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0710: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0711: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0712: 0000000000000000 
DBG(50469097)> MT EXP: Tape to CRT 0713: 0000000000000100 
DBG(50469097)> MT EXP: Tape to CRT 0714: 0000000242009990 
DBG(50469097)> MT EXP: Tape to CRT 0715: 0000000000033555 
DBG(50469097)> MT EXP: Tape to CRT 0716: 0000000000033666 
DBG(50469097)> MT EXP: End Of Block Word: 0390030103331000, data words in block: 33
DBG(50469097)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.03% of medium (4.35 inches)
DBG(50469100)> CPU CMD: Exec 0024: 08 68 0024 0000 1931   if tape check, call 1931 reread   
DBG(50469101)> CPU DETAIL: Condition not present 
DBG(50469103)> CPU CMD: Exec 0025: 00 67 0000 0000 0265   if end of file goto 0265   
DBG(50469104)> CPU DETAIL: Condition not present 
DBG(50469106)> CPU CMD: Exec 0026: 00 60 0000 1689 0000   REG1 -> (1689) = Start of block                         
DBG(50469107)> CPU DETAIL: Write 1689: 0390030103331000 
DBG(50469109)> CPU CMD: Exec 0027: 04 42 1689 1730 1690   Mask and shift start of block: bbbb -> (1690)        02 90 aaaa bbbb nnnn ma 
DBG(50469110)> CPU DETAIL: Read R 1689: 0390030103331000 
DBG(50469111)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50469112)> CPU DETAIL: Result: 0000000003330000 
DBG(50469113)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000333 
DBG(50469114)> CPU DETAIL: Write 1690: 0000000000000333 
DBG(50469116)> CPU CMD: Exec 0028: 08 42 1689 1731 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(50469117)> CPU DETAIL: Read R 1689: 0390030103331000 
DBG(50469118)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50469119)> CPU DETAIL: Result: 0000030100000000 
DBG(50469120)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000301 
DBG(50469123)> CPU CMD: Exec 0029: 00 41 1690 0000 1691   (1690) - REG2 -> (1691)   
DBG(50469124)> CPU DETAIL: Read R 1690: 0000000000000333 
DBG(50469125)> CPU DETAIL: Result: 0000000000000032 
DBG(50469126)> CPU DETAIL: Write 1691: 0000000000000032 
DBG(50469128)> CPU CMD: Exec 0030: 00 40 1732 0000 1691          + 1 -> (1691)                                 1691=total number of wo 
DBG(50469129)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50469130)> CPU DETAIL: Result: 0000000000000033 
DBG(50469131)> CPU DETAIL: Write 1691: 0000000000000033 
DBG(50469133)> CPU CMD: Exec 0031: 00 51 0000 0000 0000   clear M4   
DBG(50469134)> CPU DETAIL: Clear M4
DBG(50469134)> CPU DETAIL: M4: 0000 
DBG(50469135)> CPU DETAIL: M6: 0000 
DBG(50469136)> CPU DETAIL: M8: 0000 
DBG(50469139)> CPU CMD: Exec 0032: 00 40 0023 1732 0023   (0023) += incr number of block to read from input tape 03   
DBG(50469140)> CPU DETAIL: Read R 0023: 0394068400001000 
DBG(50469141)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50469142)> CPU DETAIL: Result: 0394068400001001 
DBG(50469143)> CPU DETAIL: Write 0023: 0394068400001001 
DBG(50469145)> CPU CMD: Exec 0033: 00 41 1691 1692 0000   (1691 number of words in block) - (1692 number of words already read) -> REG 
DBG(50469146)> CPU DETAIL: Read R 1691: 0000000000000033 
DBG(50469147)> CPU DETAIL: Read S 1692: 0000000000000000 
DBG(50469148)> CPU DETAIL: Result: 0000000000000033 
DBG(50469151)> CPU CMD: Exec 0034: 00 63 0039 0136 0000   if >0 goto 0039, =0 goto 0136 (if all events from event block processed)   
DBG(50469152)> CPU DETAIL: REG1: 0000000000000033
DBG(50469152)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50469154)> CPU CMD: Exec 0039: 13 60 4684 1696 0000   (M4 + 0684 input event block) -> (1696) = NNN=event len=7+3*num pred+3*num s 
DBG(50469155)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50469155)> CPU DETAIL: Read R 0684: 0100000000151111 
DBG(50469156)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(50469157)> CPU DETAIL: Write 1696: 0000000000000010 
DBG(50469159)> CPU CMD: Exec 0040: 02 42 4690 1734 1694   Mask (event w7) with 0..0 1100 Shift 2 Right         1694=num of predecesors 
DBG(50469160)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50469160)> CPU DETAIL: Read R 0690: 2221444455660001 
DBG(50469161)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50469162)> CPU DETAIL: Result: 0000000000000000 
DBG(50469163)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(50469164)> CPU DETAIL: Write 1694: 0000000000000000 
DBG(50469166)> CPU CMD: Exec 0041: 00 42 4690 1735 1695   Mask (event w7) with 0..0 11                         1695=num of successors  
DBG(50469167)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50469167)> CPU DETAIL: Read R 0690: 2221444455660001 
DBG(50469168)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50469169)> CPU DETAIL: Result: 0000000000000001 
DBG(50469170)> CPU DETAIL: Write 1695: 0000000000000001 
DBG(50469172)> CPU CMD: Exec 0042: 00 70 1694 1733 0044   if (1694 num of predecesors) = zero goto 0044        transfer if no predeces 
DBG(50469173)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469174)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469175)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50469176)> CPU DETAIL: Transfer to T 
DBG(50469178)> CPU CMD: Exec 0044: 00 60 1744 0079 0000   set instr (0079) to nop if no predecessors   
DBG(50469179)> CPU DETAIL: Read R 1744: 0060000000000000 
DBG(50469180)> CPU DETAIL: Write 0079: 0060000000000000 
DBG(50469182)> CPU CMD: Exec 0045: 96 34 1694 1747 1694   mult (1694) x 3   
DBG(50469183)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469184)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469185)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50469185)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50469186)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50469187)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50469188)> CPU DETAIL: Write 1694: 0000000000000000 
DBG(50469190)> CPU CMD: Exec 0046: 96 34 1695 1747 1695   mult (1695) x 3   
DBG(50469191)> CPU DETAIL: Read R 1695: 0000000000000001 
DBG(50469192)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469193)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50469193)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50469194)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50469195)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50469196)> CPU DETAIL: Write 1695: 9600000000000003 
DBG(50469198)> CPU CMD: Exec 0047: 00 42 1694 1746 1694   (1694 = number of words used by predecessors)   
DBG(50469199)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469200)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469201)> CPU DETAIL: Result: 0000000000000000 
DBG(50469202)> CPU DETAIL: Write 1694: 0000000000000000 
DBG(50469204)> CPU CMD: Exec 0048: 00 42 1695 1746 1695   (1695 = number of words used by successors)   
DBG(50469205)> CPU DETAIL: Read R 1695: 9600000000000003 
DBG(50469206)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469207)> CPU DETAIL: Result: 0000000000000003 
DBG(50469208)> CPU DETAIL: Write 1695: 0000000000000003 
DBG(50469210)> CPU CMD: Exec 0049: 00 40 1692 1696 1692   (1692 number of words already read) += (1696 event len)   
DBG(50469211)> CPU DETAIL: Read R 1692: 0000000000000000 
DBG(50469212)> CPU DETAIL: Read S 1696: 0000000000000010 
DBG(50469213)> CPU DETAIL: Result: 0000000000000010 
DBG(50469214)> CPU DETAIL: Write 1692: 0000000000000010 
DBG(50469216)> CPU CMD: Exec 0050: 00 60 4684 0885 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469217)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50469217)> CPU DETAIL: Read R 0684: 0100000000151111 
DBG(50469218)> CPU DETAIL: Write 0885: 0100000000151111 
DBG(50469220)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469221)> CPU DETAIL: Read R 0050: 0060468408850000 
DBG(50469222)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469223)> CPU DETAIL: Result: 0060468408860000 
DBG(50469224)> CPU DETAIL: Write 0050: 0060468408860000 
DBG(50469226)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469227)> CPU DETAIL: M4: 0001 
DBG(50469228)> CPU DETAIL: Transfer to T 
DBG(50469230)> CPU CMD: Exec 0050: 00 60 4684 0886 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469231)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(50469231)> CPU DETAIL: Read R 0685: 0000000241000003 
DBG(50469232)> CPU DETAIL: Write 0886: 0000000241000003 
DBG(50469234)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469235)> CPU DETAIL: Read R 0050: 0060468408860000 
DBG(50469236)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469237)> CPU DETAIL: Result: 0060468408870000 
DBG(50469238)> CPU DETAIL: Write 0050: 0060468408870000 
DBG(50469240)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469241)> CPU DETAIL: M4: 0002 
DBG(50469242)> CPU DETAIL: Transfer to T 
DBG(50469244)> CPU CMD: Exec 0050: 00 60 4684 0887 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469245)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(50469245)> CPU DETAIL: Read R 0686: 0000000000000000 
DBG(50469246)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50469248)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469249)> CPU DETAIL: Read R 0050: 0060468408870000 
DBG(50469250)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469251)> CPU DETAIL: Result: 0060468408880000 
DBG(50469252)> CPU DETAIL: Write 0050: 0060468408880000 
DBG(50469254)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469255)> CPU DETAIL: M4: 0003 
DBG(50469256)> CPU DETAIL: Transfer to T 
DBG(50469258)> CPU CMD: Exec 0050: 00 60 4684 0888 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469259)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(50469259)> CPU DETAIL: Read R 0687: 0000000000000000 
DBG(50469260)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50469262)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469263)> CPU DETAIL: Read R 0050: 0060468408880000 
DBG(50469264)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469265)> CPU DETAIL: Result: 0060468408890000 
DBG(50469266)> CPU DETAIL: Write 0050: 0060468408890000 
DBG(50469268)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469269)> CPU DETAIL: M4: 0004 
DBG(50469270)> CPU DETAIL: Transfer to T 
DBG(50469272)> CPU CMD: Exec 0050: 00 60 4684 0889 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469273)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(50469273)> CPU DETAIL: Read R 0688: 0000000000000000 
DBG(50469274)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50469276)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469277)> CPU DETAIL: Read R 0050: 0060468408890000 
DBG(50469278)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469279)> CPU DETAIL: Result: 0060468408900000 
DBG(50469280)> CPU DETAIL: Write 0050: 0060468408900000 
DBG(50469282)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469283)> CPU DETAIL: M4: 0005 
DBG(50469284)> CPU DETAIL: Transfer to T 
DBG(50469286)> CPU CMD: Exec 0050: 00 60 4684 0890 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469287)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(50469287)> CPU DETAIL: Read R 0689: 0000000000000000 
DBG(50469288)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50469290)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469291)> CPU DETAIL: Read R 0050: 0060468408900000 
DBG(50469292)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469293)> CPU DETAIL: Result: 0060468408910000 
DBG(50469294)> CPU DETAIL: Write 0050: 0060468408910000 
DBG(50469296)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469297)> CPU DETAIL: M4: 0006 
DBG(50469298)> CPU DETAIL: Transfer to T 
DBG(50469300)> CPU CMD: Exec 0050: 00 60 4684 0891 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469301)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(50469301)> CPU DETAIL: Read R 0690: 2221444455660001 
DBG(50469302)> CPU DETAIL: Write 0891: 2221444455660001 
DBG(50469304)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469305)> CPU DETAIL: Read R 0050: 0060468408910000 
DBG(50469306)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469307)> CPU DETAIL: Result: 0060468408920000 
DBG(50469308)> CPU DETAIL: Write 0050: 0060468408920000 
DBG(50469310)> CPU CMD: Exec 0052: 04 58 0001 0007 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469311)> CPU DETAIL: M4: 0007 
DBG(50469314)> CPU CMD: Exec 0053: 00 60 1738 0050 0000   restore instr 0050    
DBG(50469315)> CPU DETAIL: Read R 1738: 0060468408850000 
DBG(50469316)> CPU DETAIL: Write 0050: 0060468408850000 
DBG(50469318)> CPU CMD: Exec 0054: 00 72 1694 1733 0056   if (1694 words used in predecessors) <> zero goto 0056   
DBG(50469319)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469320)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469321)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50469324)> CPU CMD: Exec 0055: 00 60 0000 0000 0064   no predecessors to copy   
DBG(50469325)> CPU DETAIL: Transfer to T 
DBG(50469327)> CPU CMD: Exec 0064: 00 72 1695 1733 0066   if (1695 words used in successors) <> zero goto 0066   
DBG(50469328)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50469329)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469330)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50469331)> CPU DETAIL: Transfer to T 
DBG(50469333)> CPU CMD: Exec 0066: 00 59 0000 0000 0000   get in REG1 value of 00 M4 M6 M8   
DBG(50469334)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0007 0000 0000
DBG(50469336)> CPU CMD: Exec 0067: 04 42 0000 1731 0073   shift M4 to field S   
DBG(50469337)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50469338)> CPU DETAIL: Result: 0000000700000000 
DBG(50469339)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000070000 
DBG(50469340)> CPU DETAIL: Write 0073: 0000000000070000 
DBG(50469342)> CPU CMD: Exec 0068: 96 60 1695 0000 0000   set loop M4 instr ...    
DBG(50469343)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50469344)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50469347)> CPU CMD: Exec 0069: 00 40 0073 0000 0073   ... with end of loop = 7 + words used in predecessors + words used in succes 
DBG(50469348)> CPU DETAIL: Read R 0073: 0000000000070000 
DBG(50469349)> CPU DETAIL: Result: 0000000000100000 
DBG(50469350)> CPU DETAIL: Write 0073: 0000000000100000 
DBG(50469352)> CPU CMD: Exec 0070: 00 40 1741 0000 0073   ...   
DBG(50469353)> CPU DETAIL: Read R 1741: 0458000100000071 
DBG(50469354)> CPU DETAIL: Result: 0458000100100071 
DBG(50469355)> CPU DETAIL: Write 0073: 0458000100100071 
DBG(50469357)> CPU CMD: Exec 0071: 00 60 4684 0988 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50469358)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(50469358)> CPU DETAIL: Read R 0691: 0000000242009990 
DBG(50469359)> CPU DETAIL: Write 0988: 0000000242009990 
DBG(50469361)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50469362)> CPU DETAIL: Read R 0071: 0060468409880000 
DBG(50469363)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469364)> CPU DETAIL: Result: 0060468409890000 
DBG(50469365)> CPU DETAIL: Write 0071: 0060468409890000 
DBG(50469367)> CPU CMD: Exec 0073: 04 58 0001 0010 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50469368)> CPU DETAIL: M4: 0008 
DBG(50469369)> CPU DETAIL: Transfer to T 
DBG(50469371)> CPU CMD: Exec 0071: 00 60 4684 0989 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50469372)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(50469372)> CPU DETAIL: Read R 0692: 0104110000000000 
DBG(50469373)> CPU DETAIL: Write 0989: 0104110000000000 
DBG(50469375)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50469376)> CPU DETAIL: Read R 0071: 0060468409890000 
DBG(50469377)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469378)> CPU DETAIL: Result: 0060468409900000 
DBG(50469379)> CPU DETAIL: Write 0071: 0060468409900000 
DBG(50469381)> CPU CMD: Exec 0073: 04 58 0001 0010 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50469382)> CPU DETAIL: M4: 0009 
DBG(50469383)> CPU DETAIL: Transfer to T 
DBG(50469385)> CPU CMD: Exec 0071: 00 60 4684 0990 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50469386)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(50469386)> CPU DETAIL: Read R 0693: 0001209999999997 
DBG(50469387)> CPU DETAIL: Write 0990: 0001209999999997 
DBG(50469389)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50469390)> CPU DETAIL: Read R 0071: 0060468409900000 
DBG(50469391)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469392)> CPU DETAIL: Result: 0060468409910000 
DBG(50469393)> CPU DETAIL: Write 0071: 0060468409910000 
DBG(50469395)> CPU CMD: Exec 0073: 04 58 0001 0010 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50469396)> CPU DETAIL: M4: 0010 
DBG(50469399)> CPU CMD: Exec 0074: 00 60 1742 0071 0000   restore instr 0071   
DBG(50469400)> CPU DETAIL: Read R 1742: 0060468409880000 
DBG(50469401)> CPU DETAIL: Write 0071: 0060468409880000 
DBG(50469403)> CPU CMD: Exec 0075: 00 60 1733 0887 0000   clear 0887 event w3   
DBG(50469404)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50469405)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50469407)> CPU CMD: Exec 0076: 00 60 1733 0888 0000   clear 0888 event w4   
DBG(50469408)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50469409)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50469411)> CPU CMD: Exec 0077: 96 60 1696 0000 0000   (1696 total event rec len) -> REG1    
DBG(50469412)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50469413)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(50469416)> CPU CMD: Exec 0078: 00 40 0052 0000 0052   add to M4 loop in 0052 so loop will address next event rec in event block   
DBG(50469417)> CPU DETAIL: Read R 0052: 0458000100070050 
DBG(50469418)> CPU DETAIL: Result: 0458000100170050 
DBG(50469419)> CPU DETAIL: Write 0052: 0458000100170050 
DBG(50469421)> CPU CMD: Exec 0079: 00 60 0000 0000 0000   nop (if no predecessors) / goto 0175 (if some predecessors)   
DBG(50469424)> CPU CMD: Exec 0080: 08 42 0891 1731 0000   mask (0891 event rec w7) field R: get TTTT in REG1       w7= TSTS TTTT RS PR 
DBG(50469425)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50469426)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50469427)> CPU DETAIL: Result: 0000444400000000 
DBG(50469428)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000004444 
DBG(50469431)> CPU CMD: Exec 0081: 00 40 1745 0000 1697   add 11 0..0 -> (1697 event TTTT value completition date) -> convert ot float 
DBG(50469432)> CPU DETAIL: Read R 1745: 1100000000000000 
DBG(50469433)> CPU DETAIL: Result: 1100000000004444 
DBG(50469434)> CPU DETAIL: Write 1697: 1100000000004444 
DBG(50469436)> CPU CMD: Exec 0082: 00 42 1686 1746 0000   Mask (1686 output tape label = 39 08 0.. NNNN) with field T -> week number f 
DBG(50469437)> CPU DETAIL: Read R 1686: 3908000000000000 
DBG(50469438)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469439)> CPU DETAIL: Result: 0000000000000000 
DBG(50469442)> CPU CMD: Exec 0083: 00 40 1745 0000 1698   add 11 0..0 -> (1698) convert *now* week number to float   
DBG(50469443)> CPU DETAIL: Read R 1745: 1100000000000000 
DBG(50469444)> CPU DETAIL: Result: 1100000000000000 
DBG(50469445)> CPU DETAIL: Write 1698: 1100000000000000 
DBG(50469447)> CPU CMD: Exec 0084: 50 22 0000 1697 1699   FSUB (REG1) - (1697) -> (1699 Number of weeks *now* - TTTT, float)   
DBG(50469448)> CPU DETAIL: Read S 1697: 1100000000004444 
DBG(50469449)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50469449)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0000 (444.400000)
DBG(50469450)> CPU DETAIL: Result: 02 1 4 4440 0000 0000 00000000 00000000 (-444.400000)
DBG(50469451)> CPU DETAIL: Shift : 02 1 4 4440 0000 0000 00000000 00000000 (-444.400000)
DBG(50469452)> CPU DETAIL: Write 1699: 0214444000000000 
DBG(50469454)> CPU CMD: Exec 0085: 00 60 0989 1700 0000   (0989 first event successor TE value) -> (1700 successor TE value)   
DBG(50469455)> CPU DETAIL: Read R 0989: 0104110000000000 
DBG(50469456)> CPU DETAIL: Write 1700: 0104110000000000 
DBG(50469458)> CPU CMD: Exec 0086: 00 70 1700 1733 0097   if (1700 TE value) = zero goto 0097, if no TE do not update   
DBG(50469459)> CPU DETAIL: Read R 1700: 0104110000000000 
DBG(50469460)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469461)> CPU DETAIL: Diff: REG1: 0104110000000000
DBG(50469464)> CPU CMD: Exec 0087: 50 22 1700 1699 1701   FSUB (1700 TE value) - (1699 Number of week *now* - TTTT) -> (1701)   
DBG(50469465)> CPU DETAIL: Read R 1700: 0104110000000000 
DBG(50469466)> CPU DETAIL: Read S 1699: 0214444000000000 
DBG(50469467)> CPU DETAIL: Float: REG1: 01 0 4 1100 0000 0000 (41.100000)
DBG(50469467)> CPU DETAIL:        REG2: 02 1 4 4440 0000 0000 (-444.400000)
DBG(50469468)> CPU DETAIL: Result: 02 0 4 8550 0000 0000 00000000 00000000 (485.500000)
DBG(50469469)> CPU DETAIL: Shift : 02 0 4 8550 0000 0000 00000000 00000000 (485.500000)
DBG(50469470)> CPU DETAIL: Write 1701: 0204855000000000 
DBG(50469472)> CPU CMD: Exec 0088: 50 22 0000 1748 0000   FSUB (REG1) - 1.0 float                  if (1701) < 1.0 float then    
DBG(50469473)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50469474)> CPU DETAIL: Float: REG1: 02 0 4 8550 0000 0000 (485.500000)
DBG(50469474)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50469475)> CPU DETAIL: Result: 02 0 4 8450 0000 0000 00000000 00000000 (484.500000)
DBG(50469476)> CPU DETAIL: Shift : 02 0 4 8450 0000 0000 00000000 00000000 (484.500000)
DBG(50469479)> CPU CMD: Exec 0089: 00 63 0092 0092 0000   if >=0 goto 0092                            set (1701 = 1.0)      
DBG(50469480)> CPU DETAIL: REG1: 0204845000000000
DBG(50469480)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50469482)> CPU CMD: Exec 0092: 50 26 1701 1700 1702   FDIV (TE-weeks elapsed)/TE -> (1702)   
DBG(50469483)> CPU DETAIL: Read R 1701: 0204855000000000 
DBG(50469484)> CPU DETAIL: Read S 1700: 0104110000000000 
DBG(50469485)> CPU DETAIL: Float: REG1: 02 0 4 8550 0000 0000 (485.500000)
DBG(50469485)> CPU DETAIL:        REG2: 01 0 4 1100 0000 0000 (41.100000)
DBG(50469486)> CPU DETAIL: Result: 01 0 1 1812 6520 6812 65209960 93750000 (11.812652)
DBG(50469487)> CPU DETAIL: Shift : 01 0 1 1812 6520 6813 65209960 93750000 (11.812652)
DBG(50469488)> CPU DETAIL: Write 1702: 0101181265206813 
DBG(50469490)> CPU CMD: Exec 0093: 00 60 1701 0989 0000   (TE-weeks elapsed) -> (0989 first event successor TE value): TE=TE - weeks e 
DBG(50469491)> CPU DETAIL: Read R 1701: 0204855000000000 
DBG(50469492)> CPU DETAIL: Write 0989: 0204855000000000 
DBG(50469494)> CPU CMD: Exec 0094: 00 60 0990 1700 0000   (0990 first event successor SIGMA value) -> (1700)   
DBG(50469495)> CPU DETAIL: Read R 0990: 0001209999999997 
DBG(50469496)> CPU DETAIL: Write 1700: 0001209999999997 
DBG(50469498)> CPU CMD: Exec 0095: 50 24 1702 0000 1701   FMUL (1702) * SIGMA -> (1701)   
DBG(50469499)> CPU DETAIL: Read R 1702: 0101181265206813 
DBG(50469500)> CPU DETAIL: Float: REG1: 01 0 1 1812 6520 6813 (11.812652)
DBG(50469500)> CPU DETAIL:        REG2: 00 0 1 2099 9999 9997 (1.210000)
DBG(50469501)> CPU DETAIL: Result: 01 0 1 4293 3090 0240 18627929 68750000 (14.293309)
DBG(50469502)> CPU DETAIL: Shift : 01 0 1 4293 3090 0241 18627929 68750000 (14.293309)
DBG(50469503)> CPU DETAIL: Write 1701: 0101429330900241 
DBG(50469505)> CPU CMD: Exec 0096: 00 60 0000 0990 0000   REG1 -> (0990 first event successor SIGMA value)   
DBG(50469506)> CPU DETAIL: Write 0990: 0101429330900241 
DBG(50469508)> CPU CMD: Exec 0097: 00 40 0085 1747 0085   (field_S 0085) += 3   incr to process next successor in event   
DBG(50469509)> CPU DETAIL: Read R 0085: 0060098917000000 
DBG(50469510)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469511)> CPU DETAIL: Result: 0060099217000000 
DBG(50469512)> CPU DETAIL: Write 0085: 0060099217000000 
DBG(50469514)> CPU CMD: Exec 0098: 00 40 0093 1749 0093   (field_R 0093) += 3   
DBG(50469515)> CPU DETAIL: Read R 0093: 0060170109890000 
DBG(50469516)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50469517)> CPU DETAIL: Result: 0060170109920000 
DBG(50469518)> CPU DETAIL: Write 0093: 0060170109920000 
DBG(50469520)> CPU CMD: Exec 0099: 00 40 0094 1747 0094   (field_S 0094) += 3   
DBG(50469521)> CPU DETAIL: Read R 0094: 0060099017000000 
DBG(50469522)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469523)> CPU DETAIL: Result: 0060099317000000 
DBG(50469524)> CPU DETAIL: Write 0094: 0060099317000000 
DBG(50469526)> CPU CMD: Exec 0100: 00 40 0096 1749 0096   (field_R 0096) += 3   
DBG(50469527)> CPU DETAIL: Read R 0096: 0060000009900000 
DBG(50469528)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50469529)> CPU DETAIL: Result: 0060000009930000 
DBG(50469530)> CPU DETAIL: Write 0096: 0060000009930000 
DBG(50469532)> CPU CMD: Exec 0101: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50469533)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50469534)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50469537)> CPU CMD: Exec 0102: 00 40 1703 0000 1703   (1703 pointer to current successor in event list) += 3   
DBG(50469538)> CPU DETAIL: Read R 1703: 0000000000000000 
DBG(50469539)> CPU DETAIL: Result: 0000000000000003 
DBG(50469540)> CPU DETAIL: Write 1703: 0000000000000003 
DBG(50469542)> CPU CMD: Exec 0103: 00 41 1695 0000 0000   (1695 = number of words used by successors) - (1703)   
DBG(50469543)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50469544)> CPU DETAIL: Result: 0000000000000000 
DBG(50469547)> CPU CMD: Exec 0104: 00 63 0085 0106 0000   if >0 goto 0085, if =0 goto 0106         goto 0085 to process next successor 
DBG(50469548)> CPU DETAIL: REG1: 0000000000000000
DBG(50469548)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50469550)> CPU CMD: Exec 0106: 00 60 1733 1703 0000   clear (1703 pointer to event list)   
DBG(50469551)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50469552)> CPU DETAIL: Write 1703: 0000000000000000 
DBG(50469554)> CPU CMD: Exec 0107: 00 60 1750 0085 0000   restore instr 0085   
DBG(50469555)> CPU DETAIL: Read R 1750: 0060098917000000 
DBG(50469556)> CPU DETAIL: Write 0085: 0060098917000000 
DBG(50469558)> CPU CMD: Exec 0108: 00 60 1751 0093 0000   restore instr 0093      
DBG(50469559)> CPU DETAIL: Read R 1751: 0060170109890000 
DBG(50469560)> CPU DETAIL: Write 0093: 0060170109890000 
DBG(50469562)> CPU CMD: Exec 0109: 00 60 1752 0094 0000   restore instr 0094   
DBG(50469563)> CPU DETAIL: Read R 1752: 0060099017000000 
DBG(50469564)> CPU DETAIL: Write 0094: 0060099017000000 
DBG(50469566)> CPU CMD: Exec 0110: 00 60 1753 0096 0000   restore instr 0096   
DBG(50469567)> CPU DETAIL: Read R 1753: 0060000009900000 
DBG(50469568)> CPU DETAIL: Write 0096: 0060000009900000 
DBG(50469570)> CPU CMD: Exec 0111: 00 60 1733 1700 0112   clear (1700), goto process event   
DBG(50469571)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50469572)> CPU DETAIL: Transfer to T 
DBG(50469572)> CPU DETAIL: Write 1700: 0000000000000000 
DBG(50469574)> CPU CMD: Exec 0112: 00 54 0000 0000 0000   clear M8   
DBG(50469575)> CPU DETAIL: M4: 0010 
DBG(50469576)> CPU DETAIL: M6: 0000 
DBG(50469577)> CPU DETAIL: Clear M8
DBG(50469577)> CPU DETAIL: M8: 0000 
DBG(50469580)> CPU CMD: Exec 0113: 00 60 1764 6652 0000   (event code mask) -> (M6 + 0652)   
DBG(50469581)> CPU DETAIL: Read R 1764: 0000001111111110 
DBG(50469582)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(50469582)> CPU DETAIL: Write 0652: 0000001111111110 
DBG(50469584)> CPU CMD: Exec 0114: 00 40 1704 1732 1704   incr (1704 number of word in output rec buf)   
DBG(50469585)> CPU DETAIL: Read R 1704: 0000000000000000 
DBG(50469586)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50469587)> CPU DETAIL: Result: 0000000000000001 
DBG(50469588)> CPU DETAIL: Write 1704: 0000000000000001 
DBG(50469590)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469591)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50469591)> CPU DETAIL: Read R 0885: 0100000000151111 
DBG(50469592)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(50469592)> CPU DETAIL: Write 0653: 0100000000151111 
DBG(50469594)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469595)> CPU DETAIL: M4: 0010 
DBG(50469596)> CPU DETAIL: M6: 0001 
DBG(50469597)> CPU DETAIL: M8: 0000 
DBG(50469600)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469601)> CPU DETAIL: M8: 0001 
DBG(50469602)> CPU DETAIL: Transfer to T 
DBG(50469604)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469605)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50469605)> CPU DETAIL: Read R 0886: 0000000241000003 
DBG(50469606)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(50469606)> CPU DETAIL: Write 0654: 0000000241000003 
DBG(50469608)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469609)> CPU DETAIL: M4: 0010 
DBG(50469610)> CPU DETAIL: M6: 0002 
DBG(50469611)> CPU DETAIL: M8: 0001 
DBG(50469614)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469615)> CPU DETAIL: M8: 0002 
DBG(50469616)> CPU DETAIL: Transfer to T 
DBG(50469618)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469619)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50469619)> CPU DETAIL: Read R 0887: 0000000000000000 
DBG(50469620)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(50469620)> CPU DETAIL: Write 0655: 0000000000000000 
DBG(50469622)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469623)> CPU DETAIL: M4: 0010 
DBG(50469624)> CPU DETAIL: M6: 0003 
DBG(50469625)> CPU DETAIL: M8: 0002 
DBG(50469628)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469629)> CPU DETAIL: M8: 0003 
DBG(50469630)> CPU DETAIL: Transfer to T 
DBG(50469632)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469633)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(50469633)> CPU DETAIL: Read R 0888: 0000000000000000 
DBG(50469634)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(50469634)> CPU DETAIL: Write 0656: 0000000000000000 
DBG(50469636)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469637)> CPU DETAIL: M4: 0010 
DBG(50469638)> CPU DETAIL: M6: 0004 
DBG(50469639)> CPU DETAIL: M8: 0003 
DBG(50469642)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469643)> CPU DETAIL: M8: 0004 
DBG(50469644)> CPU DETAIL: Transfer to T 
DBG(50469646)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469647)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(50469647)> CPU DETAIL: Read R 0889: 0000000000000000 
DBG(50469648)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(50469648)> CPU DETAIL: Write 0657: 0000000000000000 
DBG(50469650)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469651)> CPU DETAIL: M4: 0010 
DBG(50469652)> CPU DETAIL: M6: 0005 
DBG(50469653)> CPU DETAIL: M8: 0004 
DBG(50469656)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469657)> CPU DETAIL: M8: 0005 
DBG(50469658)> CPU DETAIL: Transfer to T 
DBG(50469660)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469661)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(50469661)> CPU DETAIL: Read R 0890: 0000000000000000 
DBG(50469662)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(50469662)> CPU DETAIL: Write 0658: 0000000000000000 
DBG(50469664)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469665)> CPU DETAIL: M4: 0010 
DBG(50469666)> CPU DETAIL: M6: 0006 
DBG(50469667)> CPU DETAIL: M8: 0005 
DBG(50469670)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469671)> CPU DETAIL: M8: 0006 
DBG(50469672)> CPU DETAIL: Transfer to T 
DBG(50469674)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50469675)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(50469675)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50469676)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(50469676)> CPU DETAIL: Write 0659: 2221444455660001 
DBG(50469678)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50469679)> CPU DETAIL: M4: 0010 
DBG(50469680)> CPU DETAIL: M6: 0007 
DBG(50469681)> CPU DETAIL: M8: 0006 
DBG(50469684)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50469685)> CPU DETAIL: M8: 0007 
DBG(50469688)> CPU CMD: Exec 0118: 00 54 0000 0000 0000   clear M8   
DBG(50469689)> CPU DETAIL: M4: 0010 
DBG(50469690)> CPU DETAIL: M6: 0007 
DBG(50469691)> CPU DETAIL: Clear M8
DBG(50469691)> CPU DETAIL: M8: 0000 
DBG(50469694)> CPU CMD: Exec 0119: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50469695)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469696)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(50469699)> CPU CMD: Exec 0120: 00 40 1756 0000 0124   set end of loop for M8 at instr 0124   
DBG(50469700)> CPU DETAIL: Read R 1756: 0858000100000122 
DBG(50469701)> CPU DETAIL: Result: 0858000100000122 
DBG(50469702)> CPU DETAIL: Write 0124: 0858000100000122 
DBG(50469704)> CPU CMD: Exec 0121: 00 70 1694 1733 0125   if (1694 num of words in predecessor list in event) = zero goto 0125   
DBG(50469705)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50469706)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469707)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50469708)> CPU DETAIL: Transfer to T 
DBG(50469710)> CPU CMD: Exec 0125: 00 54 0000 0000 0000   clear M8   
DBG(50469711)> CPU DETAIL: M4: 0010 
DBG(50469712)> CPU DETAIL: M6: 0007 
DBG(50469713)> CPU DETAIL: Clear M8
DBG(50469713)> CPU DETAIL: M8: 0000 
DBG(50469716)> CPU CMD: Exec 0126: 96 60 1695 0000 0000   (1695 num of words in successor list in event) -> REG1 field S   
DBG(50469717)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50469718)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50469721)> CPU CMD: Exec 0127: 00 40 1758 0000 0132   set end of loop for M8 at instr 0132   
DBG(50469722)> CPU DETAIL: Read R 1758: 0858000100000130 
DBG(50469723)> CPU DETAIL: Result: 0858000100030130 
DBG(50469724)> CPU DETAIL: Write 0132: 0858000100030130 
DBG(50469726)> CPU CMD: Exec 0128: 00 72 1695 1733 0130   if (1694 num of words in predecessor list in event) <> zero goto 0130   
DBG(50469727)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50469728)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469729)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50469730)> CPU DETAIL: Transfer to T 
DBG(50469732)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50469733)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50469733)> CPU DETAIL: Read R 0988: 0000000242009990 
DBG(50469734)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(50469734)> CPU DETAIL: Write 0660: 0000000242009990 
DBG(50469736)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50469737)> CPU DETAIL: M4: 0010 
DBG(50469738)> CPU DETAIL: M6: 0008 
DBG(50469739)> CPU DETAIL: M8: 0000 
DBG(50469742)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50469743)> CPU DETAIL: M8: 0001 
DBG(50469744)> CPU DETAIL: Transfer to T 
DBG(50469746)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50469747)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50469747)> CPU DETAIL: Read R 0989: 0204855000000000 
DBG(50469748)> CPU DETAIL: M6 Address Modifier: 0008 
DBG(50469748)> CPU DETAIL: Write 0661: 0204855000000000 
DBG(50469750)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50469751)> CPU DETAIL: M4: 0010 
DBG(50469752)> CPU DETAIL: M6: 0009 
DBG(50469753)> CPU DETAIL: M8: 0001 
DBG(50469756)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50469757)> CPU DETAIL: M8: 0002 
DBG(50469758)> CPU DETAIL: Transfer to T 
DBG(50469760)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50469761)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50469761)> CPU DETAIL: Read R 0990: 0101429330900241 
DBG(50469762)> CPU DETAIL: M6 Address Modifier: 0009 
DBG(50469762)> CPU DETAIL: Write 0662: 0101429330900241 
DBG(50469764)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50469765)> CPU DETAIL: M4: 0010 
DBG(50469766)> CPU DETAIL: M6: 0010 
DBG(50469767)> CPU DETAIL: M8: 0002 
DBG(50469770)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50469771)> CPU DETAIL: M8: 0003 
DBG(50469774)> CPU CMD: Exec 0133: 00 50 0000 0001 0000   incr M6   
DBG(50469775)> CPU DETAIL: M4: 0010 
DBG(50469776)> CPU DETAIL: M6: 0011 
DBG(50469777)> CPU DETAIL: M8: 0003 
DBG(50469780)> CPU CMD: Exec 0134: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 = NNN = event msg len)   
DBG(50469781)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50469782)> CPU DETAIL: Read S 1704: 0000000000000001 
DBG(50469783)> CPU DETAIL: Result: 0000000000000011 
DBG(50469784)> CPU DETAIL: Write 1704: 0000000000000011 
DBG(50469786)> CPU CMD: Exec 0135: 00 60 0000 0000 0146   goto 0146   
DBG(50469787)> CPU DETAIL: Transfer to T 
DBG(50469789)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50469790)> CPU DETAIL: Read R 1705: 0000000000000000 
DBG(50469791)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50469792)> CPU DETAIL: Result: 0000000000030000 
DBG(50469793)> CPU DETAIL: Write 1705: 0000000000030000 
DBG(50469795)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50469796)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50469797)> CPU DETAIL: Read S 1705: 0000000000030000 
DBG(50469798)> CPU DETAIL: Result: 0000000005970000 
DBG(50469801)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50469802)> CPU DETAIL: REG1: 0000000005970000
DBG(50469802)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50469804)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50469805)> CPU DETAIL: Read R 1765: 0060000000000033 
DBG(50469806)> CPU DETAIL: Write 0170: 0060000000000033 
DBG(50469808)> CPU CMD: Exec 0157: 00 42 0886 1764 1084   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50469809)> CPU DETAIL: Read R 0886: 0000000241000003 
DBG(50469810)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50469811)> CPU DETAIL: Result: 0000000241000000 
DBG(50469812)> CPU DETAIL: Write 1084: 0000000241000000 
DBG(50469814)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50469815)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50469816)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50469819)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50469820)> CPU DETAIL: Read R 0157: 0042088617641084 
DBG(50469821)> CPU DETAIL: Result: 0042088617641087 
DBG(50469822)> CPU DETAIL: Write 0157: 0042088617641087 
DBG(50469824)> CPU CMD: Exec 0160: 11 34 1699 1748 1699   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50469825)> CPU DETAIL: Read R 1699: 0214444000000000 
DBG(50469826)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50469827)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0000 (-444.400000)
DBG(50469827)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50469828)> CPU DETAIL: Result: 02 1 4 4440 0000 0000 00000000 00000000 (-444.400000)
DBG(50469829)> CPU DETAIL: Shift : 11 1 0 0000 0000 4444 00000000 00000000 (-444.400000)
DBG(50469830)> CPU DETAIL: Write 1699: 1110000000004444 
DBG(50469832)> CPU CMD: Exec 0161: 89 42 0000 1746 1726   mask field T -> (1726 (*now* - TTTT) to now NNN.N fixed format 1 decimal) 0  
DBG(50469833)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469834)> CPU DETAIL: Result: 0000000000004444 
DBG(50469835)> CPU DETAIL: Word Shift 11 digits left: REG1: 0444400000000000 
DBG(50469836)> CPU DETAIL: Write 1726: 0444400000000000 
DBG(50469838)> CPU CMD: Exec 0162: 98 42 1699 1825 0000   Mask (1699 Number of weeks *now* - TTTT) with sign -> REG1   
DBG(50469839)> CPU DETAIL: Read R 1699: 1110000000004444 
DBG(50469840)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50469841)> CPU DETAIL: Result: 0010000000000000 
DBG(50469842)> CPU DETAIL: Word Shift 2 digits left: REG1: 1000000000000000 
DBG(50469845)> CPU CMD: Exec 0163: 00 40 1726 0000 0000   add (1726 weeks elapsed from completition to now NNN.N fixed format 1 decima 
DBG(50469846)> CPU DETAIL: Read R 1726: 0444400000000000 
DBG(50469847)> CPU DETAIL: Result: 1444400000000000 
DBG(50469850)> CPU CMD: Exec 0164: 00 40 1084 0000 1084   add event code -> (1084) ww1=S TTT2 x EEEEEEEEE x   
DBG(50469851)> CPU DETAIL: Read R 1084: 0000000241000000 
DBG(50469852)> CPU DETAIL: Result: 1444400241000000 
DBG(50469853)> CPU DETAIL: Write 1084: 1444400241000000 
DBG(50469855)> CPU CMD: Exec 0165: 00 40 0164 0566 0164   incr instr 0163 addr 1084 field R (not S) and T (incr addr 1084)   
DBG(50469856)> CPU DETAIL: Read R 0164: 0040108400001084 
DBG(50469857)> CPU DETAIL: Read S 0566: 0000000300000003 
DBG(50469858)> CPU DETAIL: Result: 0040108700001087 
DBG(50469859)> CPU DETAIL: Write 0164: 0040108700001087 
DBG(50469861)> CPU CMD: Exec 0166: 00 60 0887 1085 0000   (event rec w3) -> (1085)   
DBG(50469862)> CPU DETAIL: Read R 0887: 0000000000000000 
DBG(50469863)> CPU DETAIL: Write 1085: 0000000000000000 
DBG(50469865)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50469866)> CPU DETAIL: Read R 0166: 0060088710850000 
DBG(50469867)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50469868)> CPU DETAIL: Result: 0060088710880000 
DBG(50469869)> CPU DETAIL: Write 0166: 0060088710880000 
DBG(50469871)> CPU CMD: Exec 0168: 00 60 0888 1086 0000   (event rec w4) -> (1086)   
DBG(50469872)> CPU DETAIL: Read R 0888: 0000000000000000 
DBG(50469873)> CPU DETAIL: Write 1086: 0000000000000000 
DBG(50469875)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50469876)> CPU DETAIL: Read R 0168: 0060088810860000 
DBG(50469877)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50469878)> CPU DETAIL: Result: 0060088810890000 
DBG(50469879)> CPU DETAIL: Write 0168: 0060088810890000 
DBG(50469881)> CPU CMD: Exec 0170: 00 60 0000 0000 0033   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50469882)> CPU DETAIL: Transfer to T 
DBG(50469884)> CPU CMD: Exec 0033: 00 41 1691 1692 0000   (1691 number of words in block) - (1692 number of words already read) -> REG 
DBG(50469885)> CPU DETAIL: Read R 1691: 0000000000000033 
DBG(50469886)> CPU DETAIL: Read S 1692: 0000000000000010 
DBG(50469887)> CPU DETAIL: Result: 0000000000000023 
DBG(50469890)> CPU CMD: Exec 0034: 00 63 0039 0136 0000   if >0 goto 0039, =0 goto 0136 (if all events from event block processed)   
DBG(50469891)> CPU DETAIL: REG1: 0000000000000023
DBG(50469891)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50469893)> CPU CMD: Exec 0039: 13 60 4684 1696 0000   (M4 + 0684 input event block) -> (1696) = NNN=event len=7+3*num pred+3*num s 
DBG(50469894)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(50469894)> CPU DETAIL: Read R 0694: 0130000000151113 
DBG(50469895)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000013 
DBG(50469896)> CPU DETAIL: Write 1696: 0000000000000013 
DBG(50469898)> CPU CMD: Exec 0040: 02 42 4690 1734 1694   Mask (event w7) with 0..0 1100 Shift 2 Right         1694=num of predecesors 
DBG(50469899)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(50469899)> CPU DETAIL: Read R 0700: 0000000000000101 
DBG(50469900)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50469901)> CPU DETAIL: Result: 0000000000000100 
DBG(50469902)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(50469903)> CPU DETAIL: Write 1694: 0000000000000001 
DBG(50469905)> CPU CMD: Exec 0041: 00 42 4690 1735 1695   Mask (event w7) with 0..0 11                         1695=num of successors  
DBG(50469906)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(50469906)> CPU DETAIL: Read R 0700: 0000000000000101 
DBG(50469907)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50469908)> CPU DETAIL: Result: 0000000000000001 
DBG(50469909)> CPU DETAIL: Write 1695: 0000000000000001 
DBG(50469911)> CPU CMD: Exec 0042: 00 70 1694 1733 0044   if (1694 num of predecesors) = zero goto 0044        transfer if no predeces 
DBG(50469912)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50469913)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50469914)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(50469917)> CPU CMD: Exec 0043: 00 60 1770 0079 0045   set instr (0079) to skip if some predecessors   
DBG(50469918)> CPU DETAIL: Read R 1770: 0060000000000175 
DBG(50469919)> CPU DETAIL: Transfer to T 
DBG(50469919)> CPU DETAIL: Write 0079: 0060000000000175 
DBG(50469921)> CPU CMD: Exec 0045: 96 34 1694 1747 1694   mult (1694) x 3   
DBG(50469922)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50469923)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469924)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50469924)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50469925)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50469926)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50469927)> CPU DETAIL: Write 1694: 9600000000000003 
DBG(50469929)> CPU CMD: Exec 0046: 96 34 1695 1747 1695   mult (1695) x 3   
DBG(50469930)> CPU DETAIL: Read R 1695: 0000000000000001 
DBG(50469931)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50469932)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50469932)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50469933)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50469934)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50469935)> CPU DETAIL: Write 1695: 9600000000000003 
DBG(50469937)> CPU CMD: Exec 0047: 00 42 1694 1746 1694   (1694 = number of words used by predecessors)   
DBG(50469938)> CPU DETAIL: Read R 1694: 9600000000000003 
DBG(50469939)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469940)> CPU DETAIL: Result: 0000000000000003 
DBG(50469941)> CPU DETAIL: Write 1694: 0000000000000003 
DBG(50469943)> CPU CMD: Exec 0048: 00 42 1695 1746 1695   (1695 = number of words used by successors)   
DBG(50469944)> CPU DETAIL: Read R 1695: 9600000000000003 
DBG(50469945)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50469946)> CPU DETAIL: Result: 0000000000000003 
DBG(50469947)> CPU DETAIL: Write 1695: 0000000000000003 
DBG(50469949)> CPU CMD: Exec 0049: 00 40 1692 1696 1692   (1692 number of words already read) += (1696 event len)   
DBG(50469950)> CPU DETAIL: Read R 1692: 0000000000000010 
DBG(50469951)> CPU DETAIL: Read S 1696: 0000000000000013 
DBG(50469952)> CPU DETAIL: Result: 0000000000000023 
DBG(50469953)> CPU DETAIL: Write 1692: 0000000000000023 
DBG(50469955)> CPU CMD: Exec 0050: 00 60 4684 0885 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469956)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(50469956)> CPU DETAIL: Read R 0694: 0130000000151113 
DBG(50469957)> CPU DETAIL: Write 0885: 0130000000151113 
DBG(50469959)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469960)> CPU DETAIL: Read R 0050: 0060468408850000 
DBG(50469961)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469962)> CPU DETAIL: Result: 0060468408860000 
DBG(50469963)> CPU DETAIL: Write 0050: 0060468408860000 
DBG(50469965)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469966)> CPU DETAIL: M4: 0011 
DBG(50469967)> CPU DETAIL: Transfer to T 
DBG(50469969)> CPU CMD: Exec 0050: 00 60 4684 0886 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469970)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(50469970)> CPU DETAIL: Read R 0695: 0000000242009990 
DBG(50469971)> CPU DETAIL: Write 0886: 0000000242009990 
DBG(50469973)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469974)> CPU DETAIL: Read R 0050: 0060468408860000 
DBG(50469975)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469976)> CPU DETAIL: Result: 0060468408870000 
DBG(50469977)> CPU DETAIL: Write 0050: 0060468408870000 
DBG(50469979)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469980)> CPU DETAIL: M4: 0012 
DBG(50469981)> CPU DETAIL: Transfer to T 
DBG(50469983)> CPU CMD: Exec 0050: 00 60 4684 0887 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469984)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(50469984)> CPU DETAIL: Read R 0696: 0000000000000000 
DBG(50469985)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50469987)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50469988)> CPU DETAIL: Read R 0050: 0060468408870000 
DBG(50469989)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50469990)> CPU DETAIL: Result: 0060468408880000 
DBG(50469991)> CPU DETAIL: Write 0050: 0060468408880000 
DBG(50469993)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50469994)> CPU DETAIL: M4: 0013 
DBG(50469995)> CPU DETAIL: Transfer to T 
DBG(50469997)> CPU CMD: Exec 0050: 00 60 4684 0888 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50469998)> CPU DETAIL: M4 Address Modifier: 0013 
DBG(50469998)> CPU DETAIL: Read R 0697: 0000000000000000 
DBG(50469999)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50470001)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470002)> CPU DETAIL: Read R 0050: 0060468408880000 
DBG(50470003)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470004)> CPU DETAIL: Result: 0060468408890000 
DBG(50470005)> CPU DETAIL: Write 0050: 0060468408890000 
DBG(50470007)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470008)> CPU DETAIL: M4: 0014 
DBG(50470009)> CPU DETAIL: Transfer to T 
DBG(50470011)> CPU CMD: Exec 0050: 00 60 4684 0889 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470012)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(50470012)> CPU DETAIL: Read R 0698: 0000000000000000 
DBG(50470013)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50470015)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470016)> CPU DETAIL: Read R 0050: 0060468408890000 
DBG(50470017)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470018)> CPU DETAIL: Result: 0060468408900000 
DBG(50470019)> CPU DETAIL: Write 0050: 0060468408900000 
DBG(50470021)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470022)> CPU DETAIL: M4: 0015 
DBG(50470023)> CPU DETAIL: Transfer to T 
DBG(50470025)> CPU CMD: Exec 0050: 00 60 4684 0890 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470026)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(50470026)> CPU DETAIL: Read R 0699: 0000000000000000 
DBG(50470027)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50470029)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470030)> CPU DETAIL: Read R 0050: 0060468408900000 
DBG(50470031)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470032)> CPU DETAIL: Result: 0060468408910000 
DBG(50470033)> CPU DETAIL: Write 0050: 0060468408910000 
DBG(50470035)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470036)> CPU DETAIL: M4: 0016 
DBG(50470037)> CPU DETAIL: Transfer to T 
DBG(50470039)> CPU CMD: Exec 0050: 00 60 4684 0891 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470040)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(50470040)> CPU DETAIL: Read R 0700: 0000000000000101 
DBG(50470041)> CPU DETAIL: Write 0891: 0000000000000101 
DBG(50470043)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470044)> CPU DETAIL: Read R 0050: 0060468408910000 
DBG(50470045)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470046)> CPU DETAIL: Result: 0060468408920000 
DBG(50470047)> CPU DETAIL: Write 0050: 0060468408920000 
DBG(50470049)> CPU CMD: Exec 0052: 04 58 0001 0017 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470050)> CPU DETAIL: M4: 0017 
DBG(50470053)> CPU CMD: Exec 0053: 00 60 1738 0050 0000   restore instr 0050    
DBG(50470054)> CPU DETAIL: Read R 1738: 0060468408850000 
DBG(50470055)> CPU DETAIL: Write 0050: 0060468408850000 
DBG(50470057)> CPU CMD: Exec 0054: 00 72 1694 1733 0056   if (1694 words used in predecessors) <> zero goto 0056   
DBG(50470058)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470059)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470060)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50470061)> CPU DETAIL: Transfer to T 
DBG(50470063)> CPU CMD: Exec 0056: 96 60 1694 0062 0000   set loop M4 instr ...    
DBG(50470064)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470065)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50470066)> CPU DETAIL: Write 0062: 0000000000030000 
DBG(50470068)> CPU CMD: Exec 0057: 00 42 0052 1730 0000   ... with end of loop = 7 + words used in predecessors   
DBG(50470069)> CPU DETAIL: Read R 0052: 0458000100170050 
DBG(50470070)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50470071)> CPU DETAIL: Result: 0000000000170000 
DBG(50470074)> CPU CMD: Exec 0058: 00 40 0062 0000 0062   ...   
DBG(50470075)> CPU DETAIL: Read R 0062: 0000000000030000 
DBG(50470076)> CPU DETAIL: Result: 0000000000200000 
DBG(50470077)> CPU DETAIL: Write 0062: 0000000000200000 
DBG(50470079)> CPU CMD: Exec 0059: 00 40 1739 0000 0062   ...   
DBG(50470080)> CPU DETAIL: Read R 1739: 0458000100000060 
DBG(50470081)> CPU DETAIL: Result: 0458000100200060 
DBG(50470082)> CPU DETAIL: Write 0062: 0458000100200060 
DBG(50470084)> CPU CMD: Exec 0060: 00 60 4684 0892 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50470085)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(50470085)> CPU DETAIL: Read R 0701: 0000000241000000 
DBG(50470086)> CPU DETAIL: Write 0892: 0000000241000000 
DBG(50470088)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50470089)> CPU DETAIL: Read R 0060: 0060468408920000 
DBG(50470090)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470091)> CPU DETAIL: Result: 0060468408930000 
DBG(50470092)> CPU DETAIL: Write 0060: 0060468408930000 
DBG(50470094)> CPU CMD: Exec 0062: 04 58 0001 0020 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50470095)> CPU DETAIL: M4: 0018 
DBG(50470096)> CPU DETAIL: Transfer to T 
DBG(50470098)> CPU CMD: Exec 0060: 00 60 4684 0893 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50470099)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(50470099)> CPU DETAIL: Read R 0702: 0000000000033555 
DBG(50470100)> CPU DETAIL: Write 0893: 0000000000033555 
DBG(50470102)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50470103)> CPU DETAIL: Read R 0060: 0060468408930000 
DBG(50470104)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470105)> CPU DETAIL: Result: 0060468408940000 
DBG(50470106)> CPU DETAIL: Write 0060: 0060468408940000 
DBG(50470108)> CPU CMD: Exec 0062: 04 58 0001 0020 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50470109)> CPU DETAIL: M4: 0019 
DBG(50470110)> CPU DETAIL: Transfer to T 
DBG(50470112)> CPU CMD: Exec 0060: 00 60 4684 0894 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50470113)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(50470113)> CPU DETAIL: Read R 0703: 0000000000033666 
DBG(50470114)> CPU DETAIL: Write 0894: 0000000000033666 
DBG(50470116)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50470117)> CPU DETAIL: Read R 0060: 0060468408940000 
DBG(50470118)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470119)> CPU DETAIL: Result: 0060468408950000 
DBG(50470120)> CPU DETAIL: Write 0060: 0060468408950000 
DBG(50470122)> CPU CMD: Exec 0062: 04 58 0001 0020 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50470123)> CPU DETAIL: M4: 0020 
DBG(50470126)> CPU CMD: Exec 0063: 00 60 1740 0060 0000   restore instr 0060   
DBG(50470127)> CPU DETAIL: Read R 1740: 0060468408920000 
DBG(50470128)> CPU DETAIL: Write 0060: 0060468408920000 
DBG(50470130)> CPU CMD: Exec 0064: 00 72 1695 1733 0066   if (1695 words used in successors) <> zero goto 0066   
DBG(50470131)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50470132)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470133)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50470134)> CPU DETAIL: Transfer to T 
DBG(50470136)> CPU CMD: Exec 0066: 00 59 0000 0000 0000   get in REG1 value of 00 M4 M6 M8   
DBG(50470137)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0020 0011 0003
DBG(50470139)> CPU CMD: Exec 0067: 04 42 0000 1731 0073   shift M4 to field S   
DBG(50470140)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50470141)> CPU DETAIL: Result: 0000002000000000 
DBG(50470142)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000200000 
DBG(50470143)> CPU DETAIL: Write 0073: 0000000000200000 
DBG(50470145)> CPU CMD: Exec 0068: 96 60 1695 0000 0000   set loop M4 instr ...    
DBG(50470146)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50470147)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50470150)> CPU CMD: Exec 0069: 00 40 0073 0000 0073   ... with end of loop = 7 + words used in predecessors + words used in succes 
DBG(50470151)> CPU DETAIL: Read R 0073: 0000000000200000 
DBG(50470152)> CPU DETAIL: Result: 0000000000230000 
DBG(50470153)> CPU DETAIL: Write 0073: 0000000000230000 
DBG(50470155)> CPU CMD: Exec 0070: 00 40 1741 0000 0073   ...   
DBG(50470156)> CPU DETAIL: Read R 1741: 0458000100000071 
DBG(50470157)> CPU DETAIL: Result: 0458000100230071 
DBG(50470158)> CPU DETAIL: Write 0073: 0458000100230071 
DBG(50470160)> CPU CMD: Exec 0071: 00 60 4684 0988 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50470161)> CPU DETAIL: M4 Address Modifier: 0020 
DBG(50470161)> CPU DETAIL: Read R 0704: 0000000249999990 
DBG(50470162)> CPU DETAIL: Write 0988: 0000000249999990 
DBG(50470164)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50470165)> CPU DETAIL: Read R 0071: 0060468409880000 
DBG(50470166)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470167)> CPU DETAIL: Result: 0060468409890000 
DBG(50470168)> CPU DETAIL: Write 0071: 0060468409890000 
DBG(50470170)> CPU CMD: Exec 0073: 04 58 0001 0023 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50470171)> CPU DETAIL: M4: 0021 
DBG(50470172)> CPU DETAIL: Transfer to T 
DBG(50470174)> CPU CMD: Exec 0071: 00 60 4684 0989 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50470175)> CPU DETAIL: M4 Address Modifier: 0021 
DBG(50470175)> CPU DETAIL: Read R 0705: 0000000000033555 
DBG(50470176)> CPU DETAIL: Write 0989: 0000000000033555 
DBG(50470178)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50470179)> CPU DETAIL: Read R 0071: 0060468409890000 
DBG(50470180)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470181)> CPU DETAIL: Result: 0060468409900000 
DBG(50470182)> CPU DETAIL: Write 0071: 0060468409900000 
DBG(50470184)> CPU CMD: Exec 0073: 04 58 0001 0023 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50470185)> CPU DETAIL: M4: 0022 
DBG(50470186)> CPU DETAIL: Transfer to T 
DBG(50470188)> CPU CMD: Exec 0071: 00 60 4684 0990 0000   (M4 + 0684 event block) -> (0988 event rec w1 first successor)   
DBG(50470189)> CPU DETAIL: M4 Address Modifier: 0022 
DBG(50470189)> CPU DETAIL: Read R 0706: 0000000000033666 
DBG(50470190)> CPU DETAIL: Write 0990: 0000000000033666 
DBG(50470192)> CPU CMD: Exec 0072: 00 40 0071 1737 0071   incr_s   
DBG(50470193)> CPU DETAIL: Read R 0071: 0060468409900000 
DBG(50470194)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470195)> CPU DETAIL: Result: 0060468409910000 
DBG(50470196)> CPU DETAIL: Write 0071: 0060468409910000 
DBG(50470198)> CPU CMD: Exec 0073: 04 58 0001 0023 0071   loop, incr M4, if M4<> ... goto 71   
DBG(50470199)> CPU DETAIL: M4: 0023 
DBG(50470202)> CPU CMD: Exec 0074: 00 60 1742 0071 0000   restore instr 0071   
DBG(50470203)> CPU DETAIL: Read R 1742: 0060468409880000 
DBG(50470204)> CPU DETAIL: Write 0071: 0060468409880000 
DBG(50470206)> CPU CMD: Exec 0075: 00 60 1733 0887 0000   clear 0887 event w3   
DBG(50470207)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50470208)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50470210)> CPU CMD: Exec 0076: 00 60 1733 0888 0000   clear 0888 event w4   
DBG(50470211)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50470212)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50470214)> CPU CMD: Exec 0077: 96 60 1696 0000 0000   (1696 total event rec len) -> REG1    
DBG(50470215)> CPU DETAIL: Read R 1696: 0000000000000013 
DBG(50470216)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(50470219)> CPU CMD: Exec 0078: 00 40 0052 0000 0052   add to M4 loop in 0052 so loop will address next event rec in event block   
DBG(50470220)> CPU DETAIL: Read R 0052: 0458000100170050 
DBG(50470221)> CPU DETAIL: Result: 0458000100300050 
DBG(50470222)> CPU DETAIL: Write 0052: 0458000100300050 
DBG(50470224)> CPU CMD: Exec 0079: 00 60 0000 0000 0175   nop (if no predecessors) / goto 0175 (if some predecessors)   
DBG(50470225)> CPU DETAIL: Transfer to T 
DBG(50470227)> CPU CMD: Exec 0175: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50470228)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470229)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50470232)> CPU CMD: Exec 0176: 00 40 1772 0000 0181   set end of loop for M8 at instr 0181         
DBG(50470233)> CPU DETAIL: Read R 1772: 0858000300000179 
DBG(50470234)> CPU DETAIL: Result: 0858000300030179 
DBG(50470235)> CPU DETAIL: Write 0181: 0858000300030179 
DBG(50470237)> CPU CMD: Exec 0177: 00 54 0000 0000 0000   clear M8                                     
DBG(50470238)> CPU DETAIL: M4: 0023 
DBG(50470239)> CPU DETAIL: M6: 0011 
DBG(50470240)> CPU DETAIL: Clear M8
DBG(50470240)> CPU DETAIL: M8: 0000 
DBG(50470243)> CPU CMD: Exec 0178: 00 42 1084 1764 1706   mask (1084) with event_code -> (1706 output rec ww1 event code EEEE)   
DBG(50470244)> CPU DETAIL: Read R 1084: 1444400241000000 
DBG(50470245)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50470246)> CPU DETAIL: Result: 0000000241000000 
DBG(50470247)> CPU DETAIL: Write 1706: 0000000241000000 
DBG(50470249)> CPU CMD: Exec 0179: 00 42 8892 1764 1707   mask (M8+0892 event first predecessor) with event_code -> (1707 current even 
DBG(50470250)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50470250)> CPU DETAIL: Read R 0892: 0000000241000000 
DBG(50470251)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50470252)> CPU DETAIL: Result: 0000000241000000 
DBG(50470253)> CPU DETAIL: Write 1707: 0000000241000000 
DBG(50470255)> CPU CMD: Exec 0180: 00 70 1706 1707 0187   if event codes equal goto 0187 (predecessor found in output event block)   
DBG(50470256)> CPU DETAIL: Read R 1706: 0000000241000000 
DBG(50470257)> CPU DETAIL: Read S 1707: 0000000241000000 
DBG(50470258)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50470259)> CPU DETAIL: Transfer to T 
DBG(50470261)> CPU CMD: Exec 0187: 04 42 0178 1731 0000   mask (0178) with field R -> REG1 = 0..0 NNNN 0000 = addr in output block   
DBG(50470262)> CPU DETAIL: Read R 0178: 0042108417641706 
DBG(50470263)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50470264)> CPU DETAIL: Result: 0000108400000000 
DBG(50470265)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000010840000 
DBG(50470268)> CPU CMD: Exec 0188: 00 40 1737 0000 1699   incr field S -> (1699 addr of precessor found TE)   
DBG(50470269)> CPU DETAIL: Read R 1737: 0000000000010000 
DBG(50470270)> CPU DETAIL: Result: 0000000010850000 
DBG(50470271)> CPU DETAIL: Write 1699: 0000000010850000 
DBG(50470273)> CPU CMD: Exec 0189: 00 59 0000 0000 0000   get M4 M6 M8 to REG1        
DBG(50470274)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0023 0011 0000
DBG(50470276)> CPU CMD: Exec 0190: 92 42 0000 1746 0000   set REG1 = 0000 M8 0..0   
DBG(50470277)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50470278)> CPU DETAIL: Result: 0000000000000000 
DBG(50470279)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(50470282)> CPU CMD: Exec 0191: 00 40 1773 0000 0000   set instr 0218 to ...    
DBG(50470283)> CPU DETAIL: Read R 1773: 5020089300001701 
DBG(50470284)> CPU DETAIL: Result: 5020089300001701 
DBG(50470287)> CPU CMD: Exec 0192: 00 40 1699 0000 0218   ... FADD (M8+0893 predecessor TE) + (addr of predecessor TE) -> (1701)   
DBG(50470288)> CPU DETAIL: Read R 1699: 0000000010850000 
DBG(50470289)> CPU DETAIL: Result: 5020089310851701 
DBG(50470290)> CPU DETAIL: Write 0218: 5020089310851701 
DBG(50470292)> CPU CMD: Exec 0193: 00 42 0178 1731 1726   mask (0178) with field R -> (1726 = 0..0 NNNN 0000 = addr in output block of 
DBG(50470293)> CPU DETAIL: Read R 0178: 0042108417641706 
DBG(50470294)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50470295)> CPU DETAIL: Result: 0000108400000000 
DBG(50470296)> CPU DETAIL: Write 1726: 0000108400000000 
DBG(50470298)> CPU CMD: Exec 0194: 00 40 1837 0000 0195   set instr to ...      
DBG(50470299)> CPU DETAIL: Read R 1837: 1142000018401728 
DBG(50470300)> CPU DETAIL: Result: 1142108418401728 
DBG(50470301)> CPU DETAIL: Write 0195: 1142108418401728 
DBG(50470303)> CPU CMD: Exec 0195: 11 42 1084 1840 1728   ... 11 mask (addr in output block) with 011110..0 -> (1728 TTT2 value, no si 
DBG(50470304)> CPU DETAIL: Read R 1084: 1444400241000000 
DBG(50470305)> CPU DETAIL: Read S 1840: 0111100000000000 
DBG(50470306)> CPU DETAIL: Result: 0444400000000000 
DBG(50470307)> CPU DETAIL: Word Shift 11 digits right: REG1: 0000000000004444 
DBG(50470308)> CPU DETAIL: Write 1728: 0000000000004444 
DBG(50470310)> CPU CMD: Exec 0196: 00 70 1728 1733 0218   if (1728 output rec ww1 event TTT2 value, no sign) = zero goto 0218   
DBG(50470311)> CPU DETAIL: Read R 1728: 0000000000004444 
DBG(50470312)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470313)> CPU DETAIL: Diff: REG1: 0000000000004444
DBG(50470316)> CPU CMD: Exec 0197: 00 40 1745 0000 1728   convert TTT2 to float - > (1728)   
DBG(50470317)> CPU DETAIL: Read R 1745: 1100000000000000 
DBG(50470318)> CPU DETAIL: Result: 1100000000004444 
DBG(50470319)> CPU DETAIL: Write 1728: 1100000000004444 
DBG(50470321)> CPU CMD: Exec 0198: 00 40 1726 1841 0199   set instr to ...   
DBG(50470322)> CPU DETAIL: Read R 1726: 0000108400000000 
DBG(50470323)> CPU DETAIL: Read S 1841: 0242000018180000 
DBG(50470324)> CPU DETAIL: Result: 0242108418180000 
DBG(50470325)> CPU DETAIL: Write 0199: 0242108418180000 
DBG(50470327)> CPU CMD: Exec 0199: 02 42 1084 1818 0000   ... mask (addr in output block of found predecessor (event code)) to get sig 
DBG(50470328)> CPU DETAIL: Read R 1084: 1444400241000000 
DBG(50470329)> CPU DETAIL: Read S 1818: 1000000000000000 
DBG(50470330)> CPU DETAIL: Result: 1000000000000000 
DBG(50470331)> CPU DETAIL: Word Shift 2 digits right: REG1: 0010000000000000 
DBG(50470334)> CPU CMD: Exec 0200: 00 40 1728 0000 1728   add sign to (1728 TTT2 as float)   
DBG(50470335)> CPU DETAIL: Read R 1728: 1100000000004444 
DBG(50470336)> CPU DETAIL: Result: 1110000000004444 
DBG(50470337)> CPU DETAIL: Write 1728: 1110000000004444 
DBG(50470339)> CPU CMD: Exec 0201: 00 42 0218 1731 0091   mask (instr 0218) with field R -> (0091 addr 0893.. of predecessor TE in cur 
DBG(50470340)> CPU DETAIL: Read R 0218: 5020089310851701 
DBG(50470341)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50470342)> CPU DETAIL: Result: 0000089300000000 
DBG(50470343)> CPU DETAIL: Write 0091: 0000089300000000 
DBG(50470345)> CPU CMD: Exec 0202: 00 40 1842 0000 0203   set instr to ...   
DBG(50470346)> CPU DETAIL: Read R 1842: 0070000017330218 
DBG(50470347)> CPU DETAIL: Result: 0070089317330218 
DBG(50470348)> CPU DETAIL: Write 0203: 0070089317330218 
DBG(50470350)> CPU CMD: Exec 0203: 00 70 0893 1733 0218   ... if (predecessor TE) = 0 goto 0218   
DBG(50470351)> CPU DETAIL: Read R 0893: 0000000000033555 
DBG(50470352)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470353)> CPU DETAIL: Diff: REG1: 0000000000033555
DBG(50470356)> CPU CMD: Exec 0204: 00 40 0091 1843 0205   set instr to ...   
DBG(50470357)> CPU DETAIL: Read R 0091: 0000089300000000 
DBG(50470358)> CPU DETAIL: Read S 1843: 5022000017281701 
DBG(50470359)> CPU DETAIL: Result: 5022089317281701 
DBG(50470360)> CPU DETAIL: Write 0205: 5022089317281701 
DBG(50470362)> CPU CMD: Exec 0205: 50 22 0893 1728 1701   ... FSUB (predecessor TE) - (1728 output rec ww1 event TTT2 float with sign) 
DBG(50470363)> CPU DETAIL: Read R 0893: 0000000000033555 
DBG(50470364)> CPU DETAIL: Read S 1728: 1110000000004444 
DBG(50470365)> CPU DETAIL: Float: REG1: 92 0 3 3555 0000 0000 (0.000000)
DBG(50470365)> CPU DETAIL:        REG2: 02 1 4 4440 0000 0000 (-444.400000)
DBG(50470366)> CPU DETAIL: Result: 02 0 4 4440 0000 0335 50000000 00000000 (444.400000)
DBG(50470367)> CPU DETAIL: Shift : 02 0 4 4440 0000 0335 50000000 00000000 (444.400000)
DBG(50470368)> CPU DETAIL: Write 1701: 0204444000000335 
DBG(50470370)> CPU CMD: Exec 0206: 50 22 0000 1748 0000   FSUB - 1.0   
DBG(50470371)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50470372)> CPU DETAIL: Float: REG1: 02 0 4 4440 0000 0335 (444.400000)
DBG(50470372)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50470373)> CPU DETAIL: Result: 02 0 4 4340 0000 0335 00000000 00000000 (443.400000)
DBG(50470374)> CPU DETAIL: Shift : 02 0 4 4340 0000 0335 00000000 00000000 (443.400000)
DBG(50470377)> CPU CMD: Exec 0207: 00 63 0209 0209 0000   if >=0 goto 0209   
DBG(50470378)> CPU DETAIL: REG1: 0204434000000335
DBG(50470378)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50470380)> CPU CMD: Exec 0209: 04 60 0091 0091 0000   (0091 addr 0893.. of predecessor TE in current event predecessor list) in fi 
DBG(50470381)> CPU DETAIL: Read R 0091: 0000089300000000 
DBG(50470382)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000008930000 
DBG(50470383)> CPU DETAIL: Write 0091: 0000000008930000 
DBG(50470385)> CPU CMD: Exec 0210: 00 40 1844 0091 0211   set instr to ...   
DBG(50470386)> CPU DETAIL: Read R 1844: 5026170100001702 
DBG(50470387)> CPU DETAIL: Read S 0091: 0000000008930000 
DBG(50470388)> CPU DETAIL: Result: 5026170108931702 
DBG(50470389)> CPU DETAIL: Write 0211: 5026170108931702 
DBG(50470391)> CPU CMD: Exec 0211: 50 26 1701 0893 1702   ... FDIV (New_TE ) / (addr 0893.. of predecessor TE in current event predece 
DBG(50470392)> CPU DETAIL: Read R 1701: 0204444000000335 
DBG(50470393)> CPU DETAIL: Read S 0893: 0000000000033555 
DBG(50470394)> CPU DETAIL: Float: REG1: 02 0 4 4440 0000 0335 (444.400000)
DBG(50470394)> CPU DETAIL:        REG2: 92 0 3 3555 0000 0000 (0.000000)
DBG(50470395)> CPU DETAIL: Result: 10 0 1 3243 9278 8059 90185546 87500000 (13243927880.590000)
DBG(50470396)> CPU DETAIL: Shift : 10 0 1 3243 9278 8059 90185546 87500000 (13243927880.590000)
DBG(50470397)> CPU DETAIL: Write 1702: 1001324392788059 
DBG(50470399)> CPU CMD: Exec 0212: 00 40 1845 0091 0213   set instr to ...   
DBG(50470400)> CPU DETAIL: Read R 1845: 5024170200011702 
DBG(50470401)> CPU DETAIL: Read S 0091: 0000000008930000 
DBG(50470402)> CPU DETAIL: Result: 5024170208941702 
DBG(50470403)> CPU DETAIL: Write 0213: 5024170208941702 
DBG(50470405)> CPU CMD: Exec 0213: 50 24 1702 0894 1702   ... FMUL (1702) * (addr 0894.. of predecessor SIGMA in current event predece 
DBG(50470406)> CPU DETAIL: Read R 1702: 1001324392788059 
DBG(50470407)> CPU DETAIL: Read S 0894: 0000000000033666 
DBG(50470408)> CPU DETAIL: Float: REG1: 10 0 1 3243 9278 8059 (13243927880.590000)
DBG(50470408)> CPU DETAIL:        REG2: 92 0 3 3666 0000 0000 (0.000000)
DBG(50470409)> CPU DETAIL: Result: 02 0 4 4587 0076 0279 42968750 00000000 (445.870076)
DBG(50470410)> CPU DETAIL: Shift : 02 0 4 4587 0076 0279 42968750 00000000 (445.870076)
DBG(50470411)> CPU DETAIL: Write 1702: 0204458700760279 
DBG(50470413)> CPU CMD: Exec 0214: 00 40 1846 0091 0216   set instr 0216 to ...   
DBG(50470414)> CPU DETAIL: Read R 1846: 0060170100000000 
DBG(50470415)> CPU DETAIL: Read S 0091: 0000000008930000 
DBG(50470416)> CPU DETAIL: Result: 0060170108930000 
DBG(50470417)> CPU DETAIL: Write 0216: 0060170108930000 
DBG(50470419)> CPU CMD: Exec 0215: 00 40 1847 0091 0217   set instr 0217 to ...   
DBG(50470420)> CPU DETAIL: Read R 1847: 0060170200010000 
DBG(50470421)> CPU DETAIL: Read S 0091: 0000000008930000 
DBG(50470422)> CPU DETAIL: Result: 0060170208940000 
DBG(50470423)> CPU DETAIL: Write 0217: 0060170208940000 
DBG(50470425)> CPU CMD: Exec 0216: 00 60 1701 0893 0000   (1701 New_TE) -> (0893.. predecessor TE)   
DBG(50470426)> CPU DETAIL: Read R 1701: 0204444000000335 
DBG(50470427)> CPU DETAIL: Write 0893: 0204444000000335 
DBG(50470429)> CPU CMD: Exec 0217: 00 60 1702 0894 0000   (1702 New_Sigma) -> (0893.. predecessor sigma)   
DBG(50470430)> CPU DETAIL: Read R 1702: 0204458700760279 
DBG(50470431)> CPU DETAIL: Write 0894: 0204458700760279 
DBG(50470433)> CPU CMD: Exec 0218: 50 20 0893 1085 1701   FADD (M8+0893 predecessor TE) + (0893 .. predecessor TE) -> (1701)     
DBG(50470434)> CPU DETAIL: Read R 0893: 0204444000000335 
DBG(50470435)> CPU DETAIL: Read S 1085: 0000000000000000 
DBG(50470436)> CPU DETAIL: Float: REG1: 02 0 4 4440 0000 0335 (444.400000)
DBG(50470436)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50470437)> CPU DETAIL: Result: 02 0 4 4440 0000 0335 00000000 00000000 (444.400000)
DBG(50470438)> CPU DETAIL: Shift : 02 0 4 4440 0000 0335 00000000 00000000 (444.400000)
DBG(50470439)> CPU DETAIL: Write 1701: 0204444000000335 
DBG(50470441)> CPU CMD: Exec 0219: 00 40 0218 1768 0000   incr field R and S in prev instr   
DBG(50470442)> CPU DETAIL: Read R 0218: 5020089310851701 
DBG(50470443)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50470444)> CPU DETAIL: Result: 5020089410861701 
DBG(50470447)> CPU CMD: Exec 0220: 00 40 1732 0000 0221   set instr to ...   
DBG(50470448)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50470449)> CPU DETAIL: Result: 5020089410861702 
DBG(50470450)> CPU DETAIL: Write 0221: 5020089410861702 
DBG(50470452)> CPU CMD: Exec 0221: 50 20 0894 1086 1702   ... FADD (M8+0894 predecessor TE) + (1086 output event ww3 accum sigma) -> ( 
DBG(50470453)> CPU DETAIL: Read R 0894: 0204458700760279 
DBG(50470454)> CPU DETAIL: Read S 1086: 0000000000000000 
DBG(50470455)> CPU DETAIL: Float: REG1: 02 0 4 4587 0076 0279 (445.870076)
DBG(50470455)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50470456)> CPU DETAIL: Result: 02 0 4 4587 0076 0279 00000000 00000000 (445.870076)
DBG(50470457)> CPU DETAIL: Shift : 02 0 4 4587 0076 0279 00000000 00000000 (445.870076)
DBG(50470458)> CPU DETAIL: Write 1702: 0204458700760279 
DBG(50470460)> CPU CMD: Exec 0222: 50 22 1701 1708 0000   FSUB (1701) - (1708) -> REG1   
DBG(50470461)> CPU DETAIL: Read R 1701: 0204444000000335 
DBG(50470462)> CPU DETAIL: Read S 1708: 0000000000000000 
DBG(50470463)> CPU DETAIL: Float: REG1: 02 0 4 4440 0000 0335 (444.400000)
DBG(50470463)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50470464)> CPU DETAIL: Result: 02 0 4 4440 0000 0335 00000000 00000000 (444.400000)
DBG(50470465)> CPU DETAIL: Shift : 02 0 4 4440 0000 0335 00000000 00000000 (444.400000)
DBG(50470468)> CPU CMD: Exec 0223: 00 63 0000 0226 0228   if =0 goto 0226, if <0 goto 0228   
DBG(50470469)> CPU DETAIL: REG1: 0204444000000335
DBG(50470469)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50470471)> CPU CMD: Exec 0224: 00 60 1701 1708 0000   (1701 New_TE) -> (1708 New_Te adjusted)   
DBG(50470472)> CPU DETAIL: Read R 1701: 0204444000000335 
DBG(50470473)> CPU DETAIL: Write 1708: 0204444000000335 
DBG(50470475)> CPU CMD: Exec 0225: 00 60 1702 1709 0228   (1702 New_Sigma) -> (1709 New Sigma adjusted), goto 0228   
DBG(50470476)> CPU DETAIL: Read R 1702: 0204458700760279 
DBG(50470477)> CPU DETAIL: Transfer to T 
DBG(50470477)> CPU DETAIL: Write 1709: 0204458700760279 
DBG(50470479)> CPU CMD: Exec 0228: 00 40 1749 1703 1703   (1703 pointer to current predecessor word in event list. ranges from 0..(169 
DBG(50470480)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50470481)> CPU DETAIL: Read S 1703: 0000000000000000 
DBG(50470482)> CPU DETAIL: Result: 0000000000030000 
DBG(50470483)> CPU DETAIL: Write 1703: 0000000000030000 
DBG(50470485)> CPU CMD: Exec 0229: 04 60 1703 0000 0000   shift right 4 to set pointer as integer -> REG1   
DBG(50470486)> CPU DETAIL: Read R 1703: 0000000000030000 
DBG(50470487)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50470490)> CPU CMD: Exec 0230: 00 41 1694 0000 0000   (1694 num of words in predecessor list in event) -= REG1 -> REG1 = number of 
DBG(50470491)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470492)> CPU DETAIL: Result: 0000000000000000 
DBG(50470495)> CPU CMD: Exec 0231: 00 63 0182 0233 0000   if >0 goto 0182 (process next predecessor), =0 goto 0233 (no more predecesso 
DBG(50470496)> CPU DETAIL: REG1: 0000000000000000
DBG(50470496)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50470498)> CPU CMD: Exec 0233: 00 60 1733 1703 0000   clear (1703 pointer to event list)   
DBG(50470499)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50470500)> CPU DETAIL: Write 1703: 0000000000000000 
DBG(50470502)> CPU CMD: Exec 0234: 00 60 1774 0178 0000   restore instr 0178   
DBG(50470503)> CPU DETAIL: Read R 1774: 0042108417641706 
DBG(50470504)> CPU DETAIL: Write 0178: 0042108417641706 
DBG(50470506)> CPU CMD: Exec 0235: 00 60 1733 1700 0000   clear (1700)   
DBG(50470507)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50470508)> CPU DETAIL: Write 1700: 0000000000000000 
DBG(50470510)> CPU CMD: Exec 0236: 00 60 1708 0887 0000   (1708 New_Te adjusted) -> (0887 event rec w3)   
DBG(50470511)> CPU DETAIL: Read R 1708: 0204444000000335 
DBG(50470512)> CPU DETAIL: Write 0887: 0204444000000335 
DBG(50470514)> CPU CMD: Exec 0237: 00 60 1709 0888 0000   (1709 New Sigma adjusted) -> (0888 event rec w4)   
DBG(50470515)> CPU DETAIL: Read R 1709: 0204458700760279 
DBG(50470516)> CPU DETAIL: Write 0888: 0204458700760279 
DBG(50470518)> CPU CMD: Exec 0238: 00 60 1733 1708 0000   clear (1708)   
DBG(50470519)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50470520)> CPU DETAIL: Write 1708: 0000000000000000 
DBG(50470522)> CPU CMD: Exec 0239: 00 60 0000 1709 0000   clear (1709)   
DBG(50470523)> CPU DETAIL: Write 1709: 0000000000000000 
DBG(50470525)> CPU CMD: Exec 0240: 00 60 0000 0000 0112   goto 0112 process next event   
DBG(50470526)> CPU DETAIL: Transfer to T 
DBG(50470528)> CPU CMD: Exec 0112: 00 54 0000 0000 0000   clear M8   
DBG(50470529)> CPU DETAIL: M4: 0023 
DBG(50470530)> CPU DETAIL: M6: 0011 
DBG(50470531)> CPU DETAIL: Clear M8
DBG(50470531)> CPU DETAIL: M8: 0000 
DBG(50470534)> CPU CMD: Exec 0113: 00 60 1764 6652 0000   (event code mask) -> (M6 + 0652)   
DBG(50470535)> CPU DETAIL: Read R 1764: 0000001111111110 
DBG(50470536)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(50470536)> CPU DETAIL: Write 0663: 0000001111111110 
DBG(50470538)> CPU CMD: Exec 0114: 00 40 1704 1732 1704   incr (1704 number of word in output rec buf)   
DBG(50470539)> CPU DETAIL: Read R 1704: 0000000000000011 
DBG(50470540)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50470541)> CPU DETAIL: Result: 0000000000000012 
DBG(50470542)> CPU DETAIL: Write 1704: 0000000000000012 
DBG(50470544)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470545)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50470545)> CPU DETAIL: Read R 0885: 0130000000151113 
DBG(50470546)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(50470546)> CPU DETAIL: Write 0664: 0130000000151113 
DBG(50470548)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470549)> CPU DETAIL: M4: 0023 
DBG(50470550)> CPU DETAIL: M6: 0012 
DBG(50470551)> CPU DETAIL: M8: 0000 
DBG(50470554)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470555)> CPU DETAIL: M8: 0001 
DBG(50470556)> CPU DETAIL: Transfer to T 
DBG(50470558)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470559)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50470559)> CPU DETAIL: Read R 0886: 0000000242009990 
DBG(50470560)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(50470560)> CPU DETAIL: Write 0665: 0000000242009990 
DBG(50470562)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470563)> CPU DETAIL: M4: 0023 
DBG(50470564)> CPU DETAIL: M6: 0013 
DBG(50470565)> CPU DETAIL: M8: 0001 
DBG(50470568)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470569)> CPU DETAIL: M8: 0002 
DBG(50470570)> CPU DETAIL: Transfer to T 
DBG(50470572)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470573)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50470573)> CPU DETAIL: Read R 0887: 0204444000000335 
DBG(50470574)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(50470574)> CPU DETAIL: Write 0666: 0204444000000335 
DBG(50470576)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470577)> CPU DETAIL: M4: 0023 
DBG(50470578)> CPU DETAIL: M6: 0014 
DBG(50470579)> CPU DETAIL: M8: 0002 
DBG(50470582)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470583)> CPU DETAIL: M8: 0003 
DBG(50470584)> CPU DETAIL: Transfer to T 
DBG(50470586)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470587)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(50470587)> CPU DETAIL: Read R 0888: 0204458700760279 
DBG(50470588)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(50470588)> CPU DETAIL: Write 0667: 0204458700760279 
DBG(50470590)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470591)> CPU DETAIL: M4: 0023 
DBG(50470592)> CPU DETAIL: M6: 0015 
DBG(50470593)> CPU DETAIL: M8: 0003 
DBG(50470596)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470597)> CPU DETAIL: M8: 0004 
DBG(50470598)> CPU DETAIL: Transfer to T 
DBG(50470600)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470601)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(50470601)> CPU DETAIL: Read R 0889: 0000000000000000 
DBG(50470602)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(50470602)> CPU DETAIL: Write 0668: 0000000000000000 
DBG(50470604)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470605)> CPU DETAIL: M4: 0023 
DBG(50470606)> CPU DETAIL: M6: 0016 
DBG(50470607)> CPU DETAIL: M8: 0004 
DBG(50470610)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470611)> CPU DETAIL: M8: 0005 
DBG(50470612)> CPU DETAIL: Transfer to T 
DBG(50470614)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470615)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(50470615)> CPU DETAIL: Read R 0890: 0000000000000000 
DBG(50470616)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(50470616)> CPU DETAIL: Write 0669: 0000000000000000 
DBG(50470618)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470619)> CPU DETAIL: M4: 0023 
DBG(50470620)> CPU DETAIL: M6: 0017 
DBG(50470621)> CPU DETAIL: M8: 0005 
DBG(50470624)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470625)> CPU DETAIL: M8: 0006 
DBG(50470626)> CPU DETAIL: Transfer to T 
DBG(50470628)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50470629)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(50470629)> CPU DETAIL: Read R 0891: 0000000000000101 
DBG(50470630)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(50470630)> CPU DETAIL: Write 0670: 0000000000000101 
DBG(50470632)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50470633)> CPU DETAIL: M4: 0023 
DBG(50470634)> CPU DETAIL: M6: 0018 
DBG(50470635)> CPU DETAIL: M8: 0006 
DBG(50470638)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50470639)> CPU DETAIL: M8: 0007 
DBG(50470642)> CPU CMD: Exec 0118: 00 54 0000 0000 0000   clear M8   
DBG(50470643)> CPU DETAIL: M4: 0023 
DBG(50470644)> CPU DETAIL: M6: 0018 
DBG(50470645)> CPU DETAIL: Clear M8
DBG(50470645)> CPU DETAIL: M8: 0000 
DBG(50470648)> CPU CMD: Exec 0119: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50470649)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470650)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50470653)> CPU CMD: Exec 0120: 00 40 1756 0000 0124   set end of loop for M8 at instr 0124   
DBG(50470654)> CPU DETAIL: Read R 1756: 0858000100000122 
DBG(50470655)> CPU DETAIL: Result: 0858000100030122 
DBG(50470656)> CPU DETAIL: Write 0124: 0858000100030122 
DBG(50470658)> CPU CMD: Exec 0121: 00 70 1694 1733 0125   if (1694 num of words in predecessor list in event) = zero goto 0125   
DBG(50470659)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50470660)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470661)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50470664)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50470665)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50470665)> CPU DETAIL: Read R 0892: 0000000241000000 
DBG(50470666)> CPU DETAIL: M6 Address Modifier: 0018 
DBG(50470666)> CPU DETAIL: Write 0671: 0000000241000000 
DBG(50470668)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50470669)> CPU DETAIL: M4: 0023 
DBG(50470670)> CPU DETAIL: M6: 0019 
DBG(50470671)> CPU DETAIL: M8: 0000 
DBG(50470674)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50470675)> CPU DETAIL: M8: 0001 
DBG(50470676)> CPU DETAIL: Transfer to T 
DBG(50470678)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50470679)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50470679)> CPU DETAIL: Read R 0893: 0204444000000335 
DBG(50470680)> CPU DETAIL: M6 Address Modifier: 0019 
DBG(50470680)> CPU DETAIL: Write 0672: 0204444000000335 
DBG(50470682)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50470683)> CPU DETAIL: M4: 0023 
DBG(50470684)> CPU DETAIL: M6: 0020 
DBG(50470685)> CPU DETAIL: M8: 0001 
DBG(50470688)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50470689)> CPU DETAIL: M8: 0002 
DBG(50470690)> CPU DETAIL: Transfer to T 
DBG(50470692)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50470693)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50470693)> CPU DETAIL: Read R 0894: 0204458700760279 
DBG(50470694)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(50470694)> CPU DETAIL: Write 0673: 0204458700760279 
DBG(50470696)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50470697)> CPU DETAIL: M4: 0023 
DBG(50470698)> CPU DETAIL: M6: 0021 
DBG(50470699)> CPU DETAIL: M8: 0002 
DBG(50470702)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50470703)> CPU DETAIL: M8: 0003 
DBG(50470706)> CPU CMD: Exec 0125: 00 54 0000 0000 0000   clear M8   
DBG(50470707)> CPU DETAIL: M4: 0023 
DBG(50470708)> CPU DETAIL: M6: 0021 
DBG(50470709)> CPU DETAIL: Clear M8
DBG(50470709)> CPU DETAIL: M8: 0000 
DBG(50470712)> CPU CMD: Exec 0126: 96 60 1695 0000 0000   (1695 num of words in successor list in event) -> REG1 field S   
DBG(50470713)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50470714)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50470717)> CPU CMD: Exec 0127: 00 40 1758 0000 0132   set end of loop for M8 at instr 0132   
DBG(50470718)> CPU DETAIL: Read R 1758: 0858000100000130 
DBG(50470719)> CPU DETAIL: Result: 0858000100030130 
DBG(50470720)> CPU DETAIL: Write 0132: 0858000100030130 
DBG(50470722)> CPU CMD: Exec 0128: 00 72 1695 1733 0130   if (1694 num of words in predecessor list in event) <> zero goto 0130   
DBG(50470723)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50470724)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470725)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50470726)> CPU DETAIL: Transfer to T 
DBG(50470728)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50470729)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50470729)> CPU DETAIL: Read R 0988: 0000000249999990 
DBG(50470730)> CPU DETAIL: M6 Address Modifier: 0021 
DBG(50470730)> CPU DETAIL: Write 0674: 0000000249999990 
DBG(50470732)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50470733)> CPU DETAIL: M4: 0023 
DBG(50470734)> CPU DETAIL: M6: 0022 
DBG(50470735)> CPU DETAIL: M8: 0000 
DBG(50470738)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50470739)> CPU DETAIL: M8: 0001 
DBG(50470740)> CPU DETAIL: Transfer to T 
DBG(50470742)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50470743)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50470743)> CPU DETAIL: Read R 0989: 0000000000033555 
DBG(50470744)> CPU DETAIL: M6 Address Modifier: 0022 
DBG(50470744)> CPU DETAIL: Write 0675: 0000000000033555 
DBG(50470746)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50470747)> CPU DETAIL: M4: 0023 
DBG(50470748)> CPU DETAIL: M6: 0023 
DBG(50470749)> CPU DETAIL: M8: 0001 
DBG(50470752)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50470753)> CPU DETAIL: M8: 0002 
DBG(50470754)> CPU DETAIL: Transfer to T 
DBG(50470756)> CPU CMD: Exec 0130: 00 60 8988 6653 0000   (M8+0988 event rec successor list) -> (M6+0653)   
DBG(50470757)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50470757)> CPU DETAIL: Read R 0990: 0000000000033666 
DBG(50470758)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(50470758)> CPU DETAIL: Write 0676: 0000000000033666 
DBG(50470760)> CPU CMD: Exec 0131: 00 50 0000 0001 0000   incr M6   
DBG(50470761)> CPU DETAIL: M4: 0023 
DBG(50470762)> CPU DETAIL: M6: 0024 
DBG(50470763)> CPU DETAIL: M8: 0002 
DBG(50470766)> CPU CMD: Exec 0132: 08 58 0001 0003 0130   incr M8, if M8 <> (1695) goto 0130   
DBG(50470767)> CPU DETAIL: M8: 0003 
DBG(50470770)> CPU CMD: Exec 0133: 00 50 0000 0001 0000   incr M6   
DBG(50470771)> CPU DETAIL: M4: 0023 
DBG(50470772)> CPU DETAIL: M6: 0025 
DBG(50470773)> CPU DETAIL: M8: 0003 
DBG(50470776)> CPU CMD: Exec 0134: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 = NNN = event msg len)   
DBG(50470777)> CPU DETAIL: Read R 1696: 0000000000000013 
DBG(50470778)> CPU DETAIL: Read S 1704: 0000000000000012 
DBG(50470779)> CPU DETAIL: Result: 0000000000000025 
DBG(50470780)> CPU DETAIL: Write 1704: 0000000000000025 
DBG(50470782)> CPU CMD: Exec 0135: 00 60 0000 0000 0146   goto 0146   
DBG(50470783)> CPU DETAIL: Transfer to T 
DBG(50470785)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50470786)> CPU DETAIL: Read R 1705: 0000000000030000 
DBG(50470787)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50470788)> CPU DETAIL: Result: 0000000000060000 
DBG(50470789)> CPU DETAIL: Write 1705: 0000000000060000 
DBG(50470791)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50470792)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50470793)> CPU DETAIL: Read S 1705: 0000000000060000 
DBG(50470794)> CPU DETAIL: Result: 0000000005940000 
DBG(50470797)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50470798)> CPU DETAIL: REG1: 0000000005940000
DBG(50470798)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50470800)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50470801)> CPU DETAIL: Read R 1765: 0060000000000033 
DBG(50470802)> CPU DETAIL: Write 0170: 0060000000000033 
DBG(50470804)> CPU CMD: Exec 0157: 00 42 0886 1764 1087   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50470805)> CPU DETAIL: Read R 0886: 0000000242009990 
DBG(50470806)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50470807)> CPU DETAIL: Result: 0000000242009990 
DBG(50470808)> CPU DETAIL: Write 1087: 0000000242009990 
DBG(50470810)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50470811)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50470812)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50470815)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50470816)> CPU DETAIL: Read R 0157: 0042088617641087 
DBG(50470817)> CPU DETAIL: Result: 0042088617641090 
DBG(50470818)> CPU DETAIL: Write 0157: 0042088617641090 
DBG(50470820)> CPU CMD: Exec 0160: 11 34 1699 1748 1699   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50470821)> CPU DETAIL: Read R 1699: 0000000010850000 
DBG(50470822)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50470823)> CPU DETAIL: Float: REG1: 95 0 1 0850 0000 0000 (0.000011)
DBG(50470823)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50470824)> CPU DETAIL: Result: 95 0 1 0850 0000 0000 00000000 00000000 (0.000011)
DBG(50470825)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00010850 00000000 (0.000000)
DBG(50470826)> CPU DETAIL: Write 1699: 0000000000000000 
DBG(50470828)> CPU CMD: Exec 0161: 89 42 0000 1746 1726   mask field T -> (1726 (*now* - TTTT) to now NNN.N fixed format 1 decimal) 0  
DBG(50470829)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50470830)> CPU DETAIL: Result: 0000000000000000 
DBG(50470831)> CPU DETAIL: Word Shift 11 digits left: REG1: 0000000000000000 
DBG(50470832)> CPU DETAIL: Write 1726: 0000000000000000 
DBG(50470834)> CPU CMD: Exec 0162: 98 42 1699 1825 0000   Mask (1699 Number of weeks *now* - TTTT) with sign -> REG1   
DBG(50470835)> CPU DETAIL: Read R 1699: 0000000000000000 
DBG(50470836)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50470837)> CPU DETAIL: Result: 0000000000000000 
DBG(50470838)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000000 
DBG(50470841)> CPU CMD: Exec 0163: 00 40 1726 0000 0000   add (1726 weeks elapsed from completition to now NNN.N fixed format 1 decima 
DBG(50470842)> CPU DETAIL: Read R 1726: 0000000000000000 
DBG(50470843)> CPU DETAIL: Result: 0000000000000000 
DBG(50470846)> CPU CMD: Exec 0164: 00 40 1087 0000 1087   add event code -> (1084) ww1=S TTT2 x EEEEEEEEE x   
DBG(50470847)> CPU DETAIL: Read R 1087: 0000000242009990 
DBG(50470848)> CPU DETAIL: Result: 0000000242009990 
DBG(50470849)> CPU DETAIL: Write 1087: 0000000242009990 
DBG(50470851)> CPU CMD: Exec 0165: 00 40 0164 0566 0164   incr instr 0163 addr 1084 field R (not S) and T (incr addr 1084)   
DBG(50470852)> CPU DETAIL: Read R 0164: 0040108700001087 
DBG(50470853)> CPU DETAIL: Read S 0566: 0000000300000003 
DBG(50470854)> CPU DETAIL: Result: 0040109000001090 
DBG(50470855)> CPU DETAIL: Write 0164: 0040109000001090 
DBG(50470857)> CPU CMD: Exec 0166: 00 60 0887 1088 0000   (event rec w3) -> (1085)   
DBG(50470858)> CPU DETAIL: Read R 0887: 0204444000000335 
DBG(50470859)> CPU DETAIL: Write 1088: 0204444000000335 
DBG(50470861)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50470862)> CPU DETAIL: Read R 0166: 0060088710880000 
DBG(50470863)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50470864)> CPU DETAIL: Result: 0060088710910000 
DBG(50470865)> CPU DETAIL: Write 0166: 0060088710910000 
DBG(50470867)> CPU CMD: Exec 0168: 00 60 0888 1089 0000   (event rec w4) -> (1086)   
DBG(50470868)> CPU DETAIL: Read R 0888: 0204458700760279 
DBG(50470869)> CPU DETAIL: Write 1089: 0204458700760279 
DBG(50470871)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50470872)> CPU DETAIL: Read R 0168: 0060088810890000 
DBG(50470873)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50470874)> CPU DETAIL: Result: 0060088810920000 
DBG(50470875)> CPU DETAIL: Write 0168: 0060088810920000 
DBG(50470877)> CPU CMD: Exec 0170: 00 60 0000 0000 0033   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50470878)> CPU DETAIL: Transfer to T 
DBG(50470880)> CPU CMD: Exec 0033: 00 41 1691 1692 0000   (1691 number of words in block) - (1692 number of words already read) -> REG 
DBG(50470881)> CPU DETAIL: Read R 1691: 0000000000000033 
DBG(50470882)> CPU DETAIL: Read S 1692: 0000000000000023 
DBG(50470883)> CPU DETAIL: Result: 0000000000000010 
DBG(50470886)> CPU CMD: Exec 0034: 00 63 0039 0136 0000   if >0 goto 0039, =0 goto 0136 (if all events from event block processed)   
DBG(50470887)> CPU DETAIL: REG1: 0000000000000010
DBG(50470887)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50470889)> CPU CMD: Exec 0039: 13 60 4684 1696 0000   (M4 + 0684 input event block) -> (1696) = NNN=event len=7+3*num pred+3*num s 
DBG(50470890)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(50470890)> CPU DETAIL: Read R 0707: 0100000000151113 
DBG(50470891)> CPU DETAIL: Word Shift 13 digits right: REG1: 0000000000000010 
DBG(50470892)> CPU DETAIL: Write 1696: 0000000000000010 
DBG(50470894)> CPU CMD: Exec 0040: 02 42 4690 1734 1694   Mask (event w7) with 0..0 1100 Shift 2 Right         1694=num of predecesors 
DBG(50470895)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(50470895)> CPU DETAIL: Read R 0713: 0000000000000100 
DBG(50470896)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50470897)> CPU DETAIL: Result: 0000000000000100 
DBG(50470898)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(50470899)> CPU DETAIL: Write 1694: 0000000000000001 
DBG(50470901)> CPU CMD: Exec 0041: 00 42 4690 1735 1695   Mask (event w7) with 0..0 11                         1695=num of successors  
DBG(50470902)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(50470902)> CPU DETAIL: Read R 0713: 0000000000000100 
DBG(50470903)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50470904)> CPU DETAIL: Result: 0000000000000000 
DBG(50470905)> CPU DETAIL: Write 1695: 0000000000000000 
DBG(50470907)> CPU CMD: Exec 0042: 00 70 1694 1733 0044   if (1694 num of predecesors) = zero goto 0044        transfer if no predeces 
DBG(50470908)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50470909)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50470910)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(50470913)> CPU CMD: Exec 0043: 00 60 1770 0079 0045   set instr (0079) to skip if some predecessors   
DBG(50470914)> CPU DETAIL: Read R 1770: 0060000000000175 
DBG(50470915)> CPU DETAIL: Transfer to T 
DBG(50470915)> CPU DETAIL: Write 0079: 0060000000000175 
DBG(50470917)> CPU CMD: Exec 0045: 96 34 1694 1747 1694   mult (1694) x 3   
DBG(50470918)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50470919)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50470920)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50470920)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50470921)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50470922)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50470923)> CPU DETAIL: Write 1694: 9600000000000003 
DBG(50470925)> CPU CMD: Exec 0046: 96 34 1695 1747 1695   mult (1695) x 3   
DBG(50470926)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50470927)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50470928)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50470928)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50470929)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50470930)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50470931)> CPU DETAIL: Write 1695: 0000000000000000 
DBG(50470933)> CPU CMD: Exec 0047: 00 42 1694 1746 1694   (1694 = number of words used by predecessors)   
DBG(50470934)> CPU DETAIL: Read R 1694: 9600000000000003 
DBG(50470935)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50470936)> CPU DETAIL: Result: 0000000000000003 
DBG(50470937)> CPU DETAIL: Write 1694: 0000000000000003 
DBG(50470939)> CPU CMD: Exec 0048: 00 42 1695 1746 1695   (1695 = number of words used by successors)   
DBG(50470940)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50470941)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50470942)> CPU DETAIL: Result: 0000000000000000 
DBG(50470943)> CPU DETAIL: Write 1695: 0000000000000000 
DBG(50470945)> CPU CMD: Exec 0049: 00 40 1692 1696 1692   (1692 number of words already read) += (1696 event len)   
DBG(50470946)> CPU DETAIL: Read R 1692: 0000000000000023 
DBG(50470947)> CPU DETAIL: Read S 1696: 0000000000000010 
DBG(50470948)> CPU DETAIL: Result: 0000000000000033 
DBG(50470949)> CPU DETAIL: Write 1692: 0000000000000033 
DBG(50470951)> CPU CMD: Exec 0050: 00 60 4684 0885 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470952)> CPU DETAIL: M4 Address Modifier: 0023 
DBG(50470952)> CPU DETAIL: Read R 0707: 0100000000151113 
DBG(50470953)> CPU DETAIL: Write 0885: 0100000000151113 
DBG(50470955)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470956)> CPU DETAIL: Read R 0050: 0060468408850000 
DBG(50470957)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470958)> CPU DETAIL: Result: 0060468408860000 
DBG(50470959)> CPU DETAIL: Write 0050: 0060468408860000 
DBG(50470961)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470962)> CPU DETAIL: M4: 0024 
DBG(50470963)> CPU DETAIL: Transfer to T 
DBG(50470965)> CPU CMD: Exec 0050: 00 60 4684 0886 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470966)> CPU DETAIL: M4 Address Modifier: 0024 
DBG(50470966)> CPU DETAIL: Read R 0708: 0000000249999990 
DBG(50470967)> CPU DETAIL: Write 0886: 0000000249999990 
DBG(50470969)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470970)> CPU DETAIL: Read R 0050: 0060468408860000 
DBG(50470971)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470972)> CPU DETAIL: Result: 0060468408870000 
DBG(50470973)> CPU DETAIL: Write 0050: 0060468408870000 
DBG(50470975)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470976)> CPU DETAIL: M4: 0025 
DBG(50470977)> CPU DETAIL: Transfer to T 
DBG(50470979)> CPU CMD: Exec 0050: 00 60 4684 0887 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470980)> CPU DETAIL: M4 Address Modifier: 0025 
DBG(50470980)> CPU DETAIL: Read R 0709: 0000000000000000 
DBG(50470981)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50470983)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470984)> CPU DETAIL: Read R 0050: 0060468408870000 
DBG(50470985)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50470986)> CPU DETAIL: Result: 0060468408880000 
DBG(50470987)> CPU DETAIL: Write 0050: 0060468408880000 
DBG(50470989)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50470990)> CPU DETAIL: M4: 0026 
DBG(50470991)> CPU DETAIL: Transfer to T 
DBG(50470993)> CPU CMD: Exec 0050: 00 60 4684 0888 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50470994)> CPU DETAIL: M4 Address Modifier: 0026 
DBG(50470994)> CPU DETAIL: Read R 0710: 0000000000000000 
DBG(50470995)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50470997)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50470998)> CPU DETAIL: Read R 0050: 0060468408880000 
DBG(50470999)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471000)> CPU DETAIL: Result: 0060468408890000 
DBG(50471001)> CPU DETAIL: Write 0050: 0060468408890000 
DBG(50471003)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50471004)> CPU DETAIL: M4: 0027 
DBG(50471005)> CPU DETAIL: Transfer to T 
DBG(50471007)> CPU CMD: Exec 0050: 00 60 4684 0889 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50471008)> CPU DETAIL: M4 Address Modifier: 0027 
DBG(50471008)> CPU DETAIL: Read R 0711: 0000000000000000 
DBG(50471009)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50471011)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50471012)> CPU DETAIL: Read R 0050: 0060468408890000 
DBG(50471013)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471014)> CPU DETAIL: Result: 0060468408900000 
DBG(50471015)> CPU DETAIL: Write 0050: 0060468408900000 
DBG(50471017)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50471018)> CPU DETAIL: M4: 0028 
DBG(50471019)> CPU DETAIL: Transfer to T 
DBG(50471021)> CPU CMD: Exec 0050: 00 60 4684 0890 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50471022)> CPU DETAIL: M4 Address Modifier: 0028 
DBG(50471022)> CPU DETAIL: Read R 0712: 0000000000000000 
DBG(50471023)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50471025)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50471026)> CPU DETAIL: Read R 0050: 0060468408900000 
DBG(50471027)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471028)> CPU DETAIL: Result: 0060468408910000 
DBG(50471029)> CPU DETAIL: Write 0050: 0060468408910000 
DBG(50471031)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50471032)> CPU DETAIL: M4: 0029 
DBG(50471033)> CPU DETAIL: Transfer to T 
DBG(50471035)> CPU CMD: Exec 0050: 00 60 4684 0891 0000   (M4 + 0684 event block) -> (0885 event rec)          copy 7w to event rec   
DBG(50471036)> CPU DETAIL: M4 Address Modifier: 0029 
DBG(50471036)> CPU DETAIL: Read R 0713: 0000000000000100 
DBG(50471037)> CPU DETAIL: Write 0891: 0000000000000100 
DBG(50471039)> CPU CMD: Exec 0051: 00 40 0050 1737 0050   incr_s                                               at 0885..0891   
DBG(50471040)> CPU DETAIL: Read R 0050: 0060468408910000 
DBG(50471041)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471042)> CPU DETAIL: Result: 0060468408920000 
DBG(50471043)> CPU DETAIL: Write 0050: 0060468408920000 
DBG(50471045)> CPU CMD: Exec 0052: 04 58 0001 0030 0050   loop, incr M4, if M4<>7 goto 0050   
DBG(50471046)> CPU DETAIL: M4: 0030 
DBG(50471049)> CPU CMD: Exec 0053: 00 60 1738 0050 0000   restore instr 0050    
DBG(50471050)> CPU DETAIL: Read R 1738: 0060468408850000 
DBG(50471051)> CPU DETAIL: Write 0050: 0060468408850000 
DBG(50471053)> CPU CMD: Exec 0054: 00 72 1694 1733 0056   if (1694 words used in predecessors) <> zero goto 0056   
DBG(50471054)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471055)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50471056)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50471057)> CPU DETAIL: Transfer to T 
DBG(50471059)> CPU CMD: Exec 0056: 96 60 1694 0062 0000   set loop M4 instr ...    
DBG(50471060)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471061)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50471062)> CPU DETAIL: Write 0062: 0000000000030000 
DBG(50471064)> CPU CMD: Exec 0057: 00 42 0052 1730 0000   ... with end of loop = 7 + words used in predecessors   
DBG(50471065)> CPU DETAIL: Read R 0052: 0458000100300050 
DBG(50471066)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50471067)> CPU DETAIL: Result: 0000000000300000 
DBG(50471070)> CPU CMD: Exec 0058: 00 40 0062 0000 0062   ...   
DBG(50471071)> CPU DETAIL: Read R 0062: 0000000000030000 
DBG(50471072)> CPU DETAIL: Result: 0000000000330000 
DBG(50471073)> CPU DETAIL: Write 0062: 0000000000330000 
DBG(50471075)> CPU CMD: Exec 0059: 00 40 1739 0000 0062   ...   
DBG(50471076)> CPU DETAIL: Read R 1739: 0458000100000060 
DBG(50471077)> CPU DETAIL: Result: 0458000100330060 
DBG(50471078)> CPU DETAIL: Write 0062: 0458000100330060 
DBG(50471080)> CPU CMD: Exec 0060: 00 60 4684 0892 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50471081)> CPU DETAIL: M4 Address Modifier: 0030 
DBG(50471081)> CPU DETAIL: Read R 0714: 0000000242009990 
DBG(50471082)> CPU DETAIL: Write 0892: 0000000242009990 
DBG(50471084)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50471085)> CPU DETAIL: Read R 0060: 0060468408920000 
DBG(50471086)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471087)> CPU DETAIL: Result: 0060468408930000 
DBG(50471088)> CPU DETAIL: Write 0060: 0060468408930000 
DBG(50471090)> CPU CMD: Exec 0062: 04 58 0001 0033 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50471091)> CPU DETAIL: M4: 0031 
DBG(50471092)> CPU DETAIL: Transfer to T 
DBG(50471094)> CPU CMD: Exec 0060: 00 60 4684 0893 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50471095)> CPU DETAIL: M4 Address Modifier: 0031 
DBG(50471095)> CPU DETAIL: Read R 0715: 0000000000033555 
DBG(50471096)> CPU DETAIL: Write 0893: 0000000000033555 
DBG(50471098)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50471099)> CPU DETAIL: Read R 0060: 0060468408930000 
DBG(50471100)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471101)> CPU DETAIL: Result: 0060468408940000 
DBG(50471102)> CPU DETAIL: Write 0060: 0060468408940000 
DBG(50471104)> CPU CMD: Exec 0062: 04 58 0001 0033 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50471105)> CPU DETAIL: M4: 0032 
DBG(50471106)> CPU DETAIL: Transfer to T 
DBG(50471108)> CPU CMD: Exec 0060: 00 60 4684 0894 0000   (M4 + 0684 event block) -> (0892 event rec w8 = w1 first predecessor)   
DBG(50471109)> CPU DETAIL: M4 Address Modifier: 0032 
DBG(50471109)> CPU DETAIL: Read R 0716: 0000000000033666 
DBG(50471110)> CPU DETAIL: Write 0894: 0000000000033666 
DBG(50471112)> CPU CMD: Exec 0061: 00 40 0060 1737 0060   incr_s   
DBG(50471113)> CPU DETAIL: Read R 0060: 0060468408940000 
DBG(50471114)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471115)> CPU DETAIL: Result: 0060468408950000 
DBG(50471116)> CPU DETAIL: Write 0060: 0060468408950000 
DBG(50471118)> CPU CMD: Exec 0062: 04 58 0001 0033 0060   loop, incr M4, if M4<>7+words used in predecessors goto 60   
DBG(50471119)> CPU DETAIL: M4: 0033 
DBG(50471122)> CPU CMD: Exec 0063: 00 60 1740 0060 0000   restore instr 0060   
DBG(50471123)> CPU DETAIL: Read R 1740: 0060468408920000 
DBG(50471124)> CPU DETAIL: Write 0060: 0060468408920000 
DBG(50471126)> CPU CMD: Exec 0064: 00 72 1695 1733 0066   if (1695 words used in successors) <> zero goto 0066   
DBG(50471127)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50471128)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50471129)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50471132)> CPU CMD: Exec 0065: 00 60 0000 0000 0077   no successors to copy   
DBG(50471133)> CPU DETAIL: Transfer to T 
DBG(50471135)> CPU CMD: Exec 0077: 96 60 1696 0000 0000   (1696 total event rec len) -> REG1    
DBG(50471136)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50471137)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(50471140)> CPU CMD: Exec 0078: 00 40 0052 0000 0052   add to M4 loop in 0052 so loop will address next event rec in event block   
DBG(50471141)> CPU DETAIL: Read R 0052: 0458000100300050 
DBG(50471142)> CPU DETAIL: Result: 0458000100400050 
DBG(50471143)> CPU DETAIL: Write 0052: 0458000100400050 
DBG(50471145)> CPU CMD: Exec 0079: 00 60 0000 0000 0175   nop (if no predecessors) / goto 0175 (if some predecessors)   
DBG(50471146)> CPU DETAIL: Transfer to T 
DBG(50471148)> CPU CMD: Exec 0175: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50471149)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471150)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50471153)> CPU CMD: Exec 0176: 00 40 1772 0000 0181   set end of loop for M8 at instr 0181         
DBG(50471154)> CPU DETAIL: Read R 1772: 0858000300000179 
DBG(50471155)> CPU DETAIL: Result: 0858000300030179 
DBG(50471156)> CPU DETAIL: Write 0181: 0858000300030179 
DBG(50471158)> CPU CMD: Exec 0177: 00 54 0000 0000 0000   clear M8                                     
DBG(50471159)> CPU DETAIL: M4: 0033 
DBG(50471160)> CPU DETAIL: M6: 0025 
DBG(50471161)> CPU DETAIL: Clear M8
DBG(50471161)> CPU DETAIL: M8: 0000 
DBG(50471164)> CPU CMD: Exec 0178: 00 42 1084 1764 1706   mask (1084) with event_code -> (1706 output rec ww1 event code EEEE)   
DBG(50471165)> CPU DETAIL: Read R 1084: 1444400241000000 
DBG(50471166)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471167)> CPU DETAIL: Result: 0000000241000000 
DBG(50471168)> CPU DETAIL: Write 1706: 0000000241000000 
DBG(50471170)> CPU CMD: Exec 0179: 00 42 8892 1764 1707   mask (M8+0892 event first predecessor) with event_code -> (1707 current even 
DBG(50471171)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50471171)> CPU DETAIL: Read R 0892: 0000000242009990 
DBG(50471172)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471173)> CPU DETAIL: Result: 0000000242009990 
DBG(50471174)> CPU DETAIL: Write 1707: 0000000242009990 
DBG(50471176)> CPU CMD: Exec 0180: 00 70 1706 1707 0187   if event codes equal goto 0187 (predecessor found in output event block)   
DBG(50471177)> CPU DETAIL: Read R 1706: 0000000241000000 
DBG(50471178)> CPU DETAIL: Read S 1707: 0000000242009990 
DBG(50471179)> CPU DETAIL: Diff: REG1: 9999999998990010
DBG(50471182)> CPU CMD: Exec 0181: 08 58 0003 0003 0179   loop, incr M8+3, if M8 <> (1694) goto 0179   
DBG(50471183)> CPU DETAIL: M8: 0003 
DBG(50471186)> CPU CMD: Exec 0182: 00 40 0178 1747 0178   set instr 0178 to read next output event 1084+3   
DBG(50471187)> CPU DETAIL: Read R 0178: 0042108417641706 
DBG(50471188)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50471189)> CPU DETAIL: Result: 0042108717641706 
DBG(50471190)> CPU DETAIL: Write 0178: 0042108717641706 
DBG(50471192)> CPU CMD: Exec 0183: 00 40 1700 1749 1700   (1700 words already scanned in output event block)+=3 -> REG1   
DBG(50471193)> CPU DETAIL: Read R 1700: 0000000000000000 
DBG(50471194)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50471195)> CPU DETAIL: Result: 0000000000030000 
DBG(50471196)> CPU DETAIL: Write 1700: 0000000000030000 
DBG(50471198)> CPU CMD: Exec 0184: 00 41 1763 0000 0000   600 - REG1 -> REG1 = words remaining to be scanned in output event block   
DBG(50471199)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50471200)> CPU DETAIL: Result: 0000000005970000 
DBG(50471203)> CPU CMD: Exec 0185: 00 63 0175 0241 0000   if >0 goto 0175, =0 goto 0241   
DBG(50471204)> CPU DETAIL: REG1: 0000000005970000
DBG(50471204)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50471206)> CPU CMD: Exec 0175: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50471207)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471208)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50471211)> CPU CMD: Exec 0176: 00 40 1772 0000 0181   set end of loop for M8 at instr 0181         
DBG(50471212)> CPU DETAIL: Read R 1772: 0858000300000179 
DBG(50471213)> CPU DETAIL: Result: 0858000300030179 
DBG(50471214)> CPU DETAIL: Write 0181: 0858000300030179 
DBG(50471216)> CPU CMD: Exec 0177: 00 54 0000 0000 0000   clear M8                                     
DBG(50471217)> CPU DETAIL: M4: 0033 
DBG(50471218)> CPU DETAIL: M6: 0025 
DBG(50471219)> CPU DETAIL: Clear M8
DBG(50471219)> CPU DETAIL: M8: 0000 
DBG(50471222)> CPU CMD: Exec 0178: 00 42 1087 1764 1706   mask (1084) with event_code -> (1706 output rec ww1 event code EEEE)   
DBG(50471223)> CPU DETAIL: Read R 1087: 0000000242009990 
DBG(50471224)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471225)> CPU DETAIL: Result: 0000000242009990 
DBG(50471226)> CPU DETAIL: Write 1706: 0000000242009990 
DBG(50471228)> CPU CMD: Exec 0179: 00 42 8892 1764 1707   mask (M8+0892 event first predecessor) with event_code -> (1707 current even 
DBG(50471229)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50471229)> CPU DETAIL: Read R 0892: 0000000242009990 
DBG(50471230)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471231)> CPU DETAIL: Result: 0000000242009990 
DBG(50471232)> CPU DETAIL: Write 1707: 0000000242009990 
DBG(50471234)> CPU CMD: Exec 0180: 00 70 1706 1707 0187   if event codes equal goto 0187 (predecessor found in output event block)   
DBG(50471235)> CPU DETAIL: Read R 1706: 0000000242009990 
DBG(50471236)> CPU DETAIL: Read S 1707: 0000000242009990 
DBG(50471237)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50471238)> CPU DETAIL: Transfer to T 
DBG(50471240)> CPU CMD: Exec 0187: 04 42 0178 1731 0000   mask (0178) with field R -> REG1 = 0..0 NNNN 0000 = addr in output block   
DBG(50471241)> CPU DETAIL: Read R 0178: 0042108717641706 
DBG(50471242)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50471243)> CPU DETAIL: Result: 0000108700000000 
DBG(50471244)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000010870000 
DBG(50471247)> CPU CMD: Exec 0188: 00 40 1737 0000 1699   incr field S -> (1699 addr of precessor found TE)   
DBG(50471248)> CPU DETAIL: Read R 1737: 0000000000010000 
DBG(50471249)> CPU DETAIL: Result: 0000000010880000 
DBG(50471250)> CPU DETAIL: Write 1699: 0000000010880000 
DBG(50471252)> CPU CMD: Exec 0189: 00 59 0000 0000 0000   get M4 M6 M8 to REG1        
DBG(50471253)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0033 0025 0000
DBG(50471255)> CPU CMD: Exec 0190: 92 42 0000 1746 0000   set REG1 = 0000 M8 0..0   
DBG(50471256)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50471257)> CPU DETAIL: Result: 0000000000000000 
DBG(50471258)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000000000000 
DBG(50471261)> CPU CMD: Exec 0191: 00 40 1773 0000 0000   set instr 0218 to ...    
DBG(50471262)> CPU DETAIL: Read R 1773: 5020089300001701 
DBG(50471263)> CPU DETAIL: Result: 5020089300001701 
DBG(50471266)> CPU CMD: Exec 0192: 00 40 1699 0000 0218   ... FADD (M8+0893 predecessor TE) + (addr of predecessor TE) -> (1701)   
DBG(50471267)> CPU DETAIL: Read R 1699: 0000000010880000 
DBG(50471268)> CPU DETAIL: Result: 5020089310881701 
DBG(50471269)> CPU DETAIL: Write 0218: 5020089310881701 
DBG(50471271)> CPU CMD: Exec 0193: 00 42 0178 1731 1726   mask (0178) with field R -> (1726 = 0..0 NNNN 0000 = addr in output block of 
DBG(50471272)> CPU DETAIL: Read R 0178: 0042108717641706 
DBG(50471273)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50471274)> CPU DETAIL: Result: 0000108700000000 
DBG(50471275)> CPU DETAIL: Write 1726: 0000108700000000 
DBG(50471277)> CPU CMD: Exec 0194: 00 40 1837 0000 0195   set instr to ...      
DBG(50471278)> CPU DETAIL: Read R 1837: 1142000018401728 
DBG(50471279)> CPU DETAIL: Result: 1142108718401728 
DBG(50471280)> CPU DETAIL: Write 0195: 1142108718401728 
DBG(50471282)> CPU CMD: Exec 0195: 11 42 1087 1840 1728   ... 11 mask (addr in output block) with 011110..0 -> (1728 TTT2 value, no si 
DBG(50471283)> CPU DETAIL: Read R 1087: 0000000242009990 
DBG(50471284)> CPU DETAIL: Read S 1840: 0111100000000000 
DBG(50471285)> CPU DETAIL: Result: 0000000000000000 
DBG(50471286)> CPU DETAIL: Word Shift 11 digits right: REG1: 0000000000000000 
DBG(50471287)> CPU DETAIL: Write 1728: 0000000000000000 
DBG(50471289)> CPU CMD: Exec 0196: 00 70 1728 1733 0218   if (1728 output rec ww1 event TTT2 value, no sign) = zero goto 0218   
DBG(50471290)> CPU DETAIL: Read R 1728: 0000000000000000 
DBG(50471291)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50471292)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50471293)> CPU DETAIL: Transfer to T 
DBG(50471295)> CPU CMD: Exec 0218: 50 20 0893 1088 1701   FADD (M8+0893 predecessor TE) + (0893 .. predecessor TE) -> (1701)     
DBG(50471296)> CPU DETAIL: Read R 0893: 0000000000033555 
DBG(50471297)> CPU DETAIL: Read S 1088: 0204444000000335 
DBG(50471298)> CPU DETAIL: Float: REG1: 92 0 3 3555 0000 0000 (0.000000)
DBG(50471298)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0335 (444.400000)
DBG(50471299)> CPU DETAIL: Result: 02 0 4 4440 0000 0670 50000000 00000000 (444.400000)
DBG(50471300)> CPU DETAIL: Shift : 02 0 4 4440 0000 0671 50000000 00000000 (444.400000)
DBG(50471301)> CPU DETAIL: Write 1701: 0204444000000671 
DBG(50471303)> CPU CMD: Exec 0219: 00 40 0218 1768 0000   incr field R and S in prev instr   
DBG(50471304)> CPU DETAIL: Read R 0218: 5020089310881701 
DBG(50471305)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50471306)> CPU DETAIL: Result: 5020089410891701 
DBG(50471309)> CPU CMD: Exec 0220: 00 40 1732 0000 0221   set instr to ...   
DBG(50471310)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50471311)> CPU DETAIL: Result: 5020089410891702 
DBG(50471312)> CPU DETAIL: Write 0221: 5020089410891702 
DBG(50471314)> CPU CMD: Exec 0221: 50 20 0894 1089 1702   ... FADD (M8+0894 predecessor TE) + (1086 output event ww3 accum sigma) -> ( 
DBG(50471315)> CPU DETAIL: Read R 0894: 0000000000033666 
DBG(50471316)> CPU DETAIL: Read S 1089: 0204458700760279 
DBG(50471317)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50471317)> CPU DETAIL:        REG2: 02 0 4 4587 0076 0279 (445.870076)
DBG(50471318)> CPU DETAIL: Result: 02 0 4 4587 0076 0615 60000000 00000000 (445.870076)
DBG(50471319)> CPU DETAIL: Shift : 02 0 4 4587 0076 0615 60000000 00000000 (445.870076)
DBG(50471320)> CPU DETAIL: Write 1702: 0204458700760615 
DBG(50471322)> CPU CMD: Exec 0222: 50 22 1701 1708 0000   FSUB (1701) - (1708) -> REG1   
DBG(50471323)> CPU DETAIL: Read R 1701: 0204444000000671 
DBG(50471324)> CPU DETAIL: Read S 1708: 0000000000000000 
DBG(50471325)> CPU DETAIL: Float: REG1: 02 0 4 4440 0000 0671 (444.400000)
DBG(50471325)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50471326)> CPU DETAIL: Result: 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50471327)> CPU DETAIL: Shift : 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50471330)> CPU CMD: Exec 0223: 00 63 0000 0226 0228   if =0 goto 0226, if <0 goto 0228   
DBG(50471331)> CPU DETAIL: REG1: 0204444000000671
DBG(50471331)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50471333)> CPU CMD: Exec 0224: 00 60 1701 1708 0000   (1701 New_TE) -> (1708 New_Te adjusted)   
DBG(50471334)> CPU DETAIL: Read R 1701: 0204444000000671 
DBG(50471335)> CPU DETAIL: Write 1708: 0204444000000671 
DBG(50471337)> CPU CMD: Exec 0225: 00 60 1702 1709 0228   (1702 New_Sigma) -> (1709 New Sigma adjusted), goto 0228   
DBG(50471338)> CPU DETAIL: Read R 1702: 0204458700760615 
DBG(50471339)> CPU DETAIL: Transfer to T 
DBG(50471339)> CPU DETAIL: Write 1709: 0204458700760615 
DBG(50471341)> CPU CMD: Exec 0228: 00 40 1749 1703 1703   (1703 pointer to current predecessor word in event list. ranges from 0..(169 
DBG(50471342)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50471343)> CPU DETAIL: Read S 1703: 0000000000000000 
DBG(50471344)> CPU DETAIL: Result: 0000000000030000 
DBG(50471345)> CPU DETAIL: Write 1703: 0000000000030000 
DBG(50471347)> CPU CMD: Exec 0229: 04 60 1703 0000 0000   shift right 4 to set pointer as integer -> REG1   
DBG(50471348)> CPU DETAIL: Read R 1703: 0000000000030000 
DBG(50471349)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50471352)> CPU CMD: Exec 0230: 00 41 1694 0000 0000   (1694 num of words in predecessor list in event) -= REG1 -> REG1 = number of 
DBG(50471353)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471354)> CPU DETAIL: Result: 0000000000000000 
DBG(50471357)> CPU CMD: Exec 0231: 00 63 0182 0233 0000   if >0 goto 0182 (process next predecessor), =0 goto 0233 (no more predecesso 
DBG(50471358)> CPU DETAIL: REG1: 0000000000000000
DBG(50471358)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50471360)> CPU CMD: Exec 0233: 00 60 1733 1703 0000   clear (1703 pointer to event list)   
DBG(50471361)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471362)> CPU DETAIL: Write 1703: 0000000000000000 
DBG(50471364)> CPU CMD: Exec 0234: 00 60 1774 0178 0000   restore instr 0178   
DBG(50471365)> CPU DETAIL: Read R 1774: 0042108417641706 
DBG(50471366)> CPU DETAIL: Write 0178: 0042108417641706 
DBG(50471368)> CPU CMD: Exec 0235: 00 60 1733 1700 0000   clear (1700)   
DBG(50471369)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471370)> CPU DETAIL: Write 1700: 0000000000000000 
DBG(50471372)> CPU CMD: Exec 0236: 00 60 1708 0887 0000   (1708 New_Te adjusted) -> (0887 event rec w3)   
DBG(50471373)> CPU DETAIL: Read R 1708: 0204444000000671 
DBG(50471374)> CPU DETAIL: Write 0887: 0204444000000671 
DBG(50471376)> CPU CMD: Exec 0237: 00 60 1709 0888 0000   (1709 New Sigma adjusted) -> (0888 event rec w4)   
DBG(50471377)> CPU DETAIL: Read R 1709: 0204458700760615 
DBG(50471378)> CPU DETAIL: Write 0888: 0204458700760615 
DBG(50471380)> CPU CMD: Exec 0238: 00 60 1733 1708 0000   clear (1708)   
DBG(50471381)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471382)> CPU DETAIL: Write 1708: 0000000000000000 
DBG(50471384)> CPU CMD: Exec 0239: 00 60 0000 1709 0000   clear (1709)   
DBG(50471385)> CPU DETAIL: Write 1709: 0000000000000000 
DBG(50471387)> CPU CMD: Exec 0240: 00 60 0000 0000 0112   goto 0112 process next event   
DBG(50471388)> CPU DETAIL: Transfer to T 
DBG(50471390)> CPU CMD: Exec 0112: 00 54 0000 0000 0000   clear M8   
DBG(50471391)> CPU DETAIL: M4: 0033 
DBG(50471392)> CPU DETAIL: M6: 0025 
DBG(50471393)> CPU DETAIL: Clear M8
DBG(50471393)> CPU DETAIL: M8: 0000 
DBG(50471396)> CPU CMD: Exec 0113: 00 60 1764 6652 0000   (event code mask) -> (M6 + 0652)   
DBG(50471397)> CPU DETAIL: Read R 1764: 0000001111111110 
DBG(50471398)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(50471398)> CPU DETAIL: Write 0677: 0000001111111110 
DBG(50471400)> CPU CMD: Exec 0114: 00 40 1704 1732 1704   incr (1704 number of word in output rec buf)   
DBG(50471401)> CPU DETAIL: Read R 1704: 0000000000000025 
DBG(50471402)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50471403)> CPU DETAIL: Result: 0000000000000026 
DBG(50471404)> CPU DETAIL: Write 1704: 0000000000000026 
DBG(50471406)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471407)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50471407)> CPU DETAIL: Read R 0885: 0100000000151113 
DBG(50471408)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(50471408)> CPU DETAIL: Write 0678: 0100000000151113 
DBG(50471410)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471411)> CPU DETAIL: M4: 0033 
DBG(50471412)> CPU DETAIL: M6: 0026 
DBG(50471413)> CPU DETAIL: M8: 0000 
DBG(50471416)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471417)> CPU DETAIL: M8: 0001 
DBG(50471418)> CPU DETAIL: Transfer to T 
DBG(50471420)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471421)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50471421)> CPU DETAIL: Read R 0886: 0000000249999990 
DBG(50471422)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(50471422)> CPU DETAIL: Write 0679: 0000000249999990 
DBG(50471424)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471425)> CPU DETAIL: M4: 0033 
DBG(50471426)> CPU DETAIL: M6: 0027 
DBG(50471427)> CPU DETAIL: M8: 0001 
DBG(50471430)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471431)> CPU DETAIL: M8: 0002 
DBG(50471432)> CPU DETAIL: Transfer to T 
DBG(50471434)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471435)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50471435)> CPU DETAIL: Read R 0887: 0204444000000671 
DBG(50471436)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(50471436)> CPU DETAIL: Write 0680: 0204444000000671 
DBG(50471438)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471439)> CPU DETAIL: M4: 0033 
DBG(50471440)> CPU DETAIL: M6: 0028 
DBG(50471441)> CPU DETAIL: M8: 0002 
DBG(50471444)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471445)> CPU DETAIL: M8: 0003 
DBG(50471446)> CPU DETAIL: Transfer to T 
DBG(50471448)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471449)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(50471449)> CPU DETAIL: Read R 0888: 0204458700760615 
DBG(50471450)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(50471450)> CPU DETAIL: Write 0681: 0204458700760615 
DBG(50471452)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471453)> CPU DETAIL: M4: 0033 
DBG(50471454)> CPU DETAIL: M6: 0029 
DBG(50471455)> CPU DETAIL: M8: 0003 
DBG(50471458)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471459)> CPU DETAIL: M8: 0004 
DBG(50471460)> CPU DETAIL: Transfer to T 
DBG(50471462)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471463)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(50471463)> CPU DETAIL: Read R 0889: 0000000000000000 
DBG(50471464)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(50471464)> CPU DETAIL: Write 0682: 0000000000000000 
DBG(50471466)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471467)> CPU DETAIL: M4: 0033 
DBG(50471468)> CPU DETAIL: M6: 0030 
DBG(50471469)> CPU DETAIL: M8: 0004 
DBG(50471472)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471473)> CPU DETAIL: M8: 0005 
DBG(50471474)> CPU DETAIL: Transfer to T 
DBG(50471476)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471477)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(50471477)> CPU DETAIL: Read R 0890: 0000000000000000 
DBG(50471478)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(50471478)> CPU DETAIL: Write 0683: 0000000000000000 
DBG(50471480)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471481)> CPU DETAIL: M4: 0033 
DBG(50471482)> CPU DETAIL: M6: 0031 
DBG(50471483)> CPU DETAIL: M8: 0005 
DBG(50471486)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471487)> CPU DETAIL: M8: 0006 
DBG(50471488)> CPU DETAIL: Transfer to T 
DBG(50471490)> CPU CMD: Exec 0115: 00 60 8885 6653 0000   (M8 + 0885 event rec) -> (M6 + 0653)     
DBG(50471491)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(50471491)> CPU DETAIL: Read R 0891: 0000000000000100 
DBG(50471492)> CPU DETAIL: M6 Address Modifier: 0031 
DBG(50471492)> CPU DETAIL: Write 0684: 0000000000000100 
DBG(50471494)> CPU CMD: Exec 0116: 00 50 0000 0001 0000   incr M6                                  
DBG(50471495)> CPU DETAIL: M4: 0033 
DBG(50471496)> CPU DETAIL: M6: 0032 
DBG(50471497)> CPU DETAIL: M8: 0006 
DBG(50471500)> CPU CMD: Exec 0117: 08 58 0001 0007 0115   incr M8, if M8<>7 goto 0115   
DBG(50471501)> CPU DETAIL: M8: 0007 
DBG(50471504)> CPU CMD: Exec 0118: 00 54 0000 0000 0000   clear M8   
DBG(50471505)> CPU DETAIL: M4: 0033 
DBG(50471506)> CPU DETAIL: M6: 0032 
DBG(50471507)> CPU DETAIL: Clear M8
DBG(50471507)> CPU DETAIL: M8: 0000 
DBG(50471510)> CPU CMD: Exec 0119: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> REG1 field S   
DBG(50471511)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471512)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50471515)> CPU CMD: Exec 0120: 00 40 1756 0000 0124   set end of loop for M8 at instr 0124   
DBG(50471516)> CPU DETAIL: Read R 1756: 0858000100000122 
DBG(50471517)> CPU DETAIL: Result: 0858000100030122 
DBG(50471518)> CPU DETAIL: Write 0124: 0858000100030122 
DBG(50471520)> CPU CMD: Exec 0121: 00 70 1694 1733 0125   if (1694 num of words in predecessor list in event) = zero goto 0125   
DBG(50471521)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50471522)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50471523)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50471526)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50471527)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(50471527)> CPU DETAIL: Read R 0892: 0000000242009990 
DBG(50471528)> CPU DETAIL: M6 Address Modifier: 0032 
DBG(50471528)> CPU DETAIL: Write 0685: 0000000242009990 
DBG(50471530)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50471531)> CPU DETAIL: M4: 0033 
DBG(50471532)> CPU DETAIL: M6: 0033 
DBG(50471533)> CPU DETAIL: M8: 0000 
DBG(50471536)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50471537)> CPU DETAIL: M8: 0001 
DBG(50471538)> CPU DETAIL: Transfer to T 
DBG(50471540)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50471541)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(50471541)> CPU DETAIL: Read R 0893: 0000000000033555 
DBG(50471542)> CPU DETAIL: M6 Address Modifier: 0033 
DBG(50471542)> CPU DETAIL: Write 0686: 0000000000033555 
DBG(50471544)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50471545)> CPU DETAIL: M4: 0033 
DBG(50471546)> CPU DETAIL: M6: 0034 
DBG(50471547)> CPU DETAIL: M8: 0001 
DBG(50471550)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50471551)> CPU DETAIL: M8: 0002 
DBG(50471552)> CPU DETAIL: Transfer to T 
DBG(50471554)> CPU CMD: Exec 0122: 00 60 8892 6653 0000   (M8 + 0892 event rec predecessor list) -> (M6 + 0653) (M6 has not been reset 
DBG(50471555)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(50471555)> CPU DETAIL: Read R 0894: 0000000000033666 
DBG(50471556)> CPU DETAIL: M6 Address Modifier: 0034 
DBG(50471556)> CPU DETAIL: Write 0687: 0000000000033666 
DBG(50471558)> CPU CMD: Exec 0123: 00 50 0000 0001 0000   incr M6   
DBG(50471559)> CPU DETAIL: M4: 0033 
DBG(50471560)> CPU DETAIL: M6: 0035 
DBG(50471561)> CPU DETAIL: M8: 0002 
DBG(50471564)> CPU CMD: Exec 0124: 08 58 0001 0003 0122   incr M8, if M8 <> (1694) goto 0122   
DBG(50471565)> CPU DETAIL: M8: 0003 
DBG(50471568)> CPU CMD: Exec 0125: 00 54 0000 0000 0000   clear M8   
DBG(50471569)> CPU DETAIL: M4: 0033 
DBG(50471570)> CPU DETAIL: M6: 0035 
DBG(50471571)> CPU DETAIL: Clear M8
DBG(50471571)> CPU DETAIL: M8: 0000 
DBG(50471574)> CPU CMD: Exec 0126: 96 60 1695 0000 0000   (1695 num of words in successor list in event) -> REG1 field S   
DBG(50471575)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50471576)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(50471579)> CPU CMD: Exec 0127: 00 40 1758 0000 0132   set end of loop for M8 at instr 0132   
DBG(50471580)> CPU DETAIL: Read R 1758: 0858000100000130 
DBG(50471581)> CPU DETAIL: Result: 0858000100000130 
DBG(50471582)> CPU DETAIL: Write 0132: 0858000100000130 
DBG(50471584)> CPU CMD: Exec 0128: 00 72 1695 1733 0130   if (1694 num of words in predecessor list in event) <> zero goto 0130   
DBG(50471585)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50471586)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50471587)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50471590)> CPU CMD: Exec 0129: 00 60 0000 0000 0133   goto 0133   
DBG(50471591)> CPU DETAIL: Transfer to T 
DBG(50471593)> CPU CMD: Exec 0133: 00 50 0000 0001 0000   incr M6   
DBG(50471594)> CPU DETAIL: M4: 0033 
DBG(50471595)> CPU DETAIL: M6: 0036 
DBG(50471596)> CPU DETAIL: M8: 0000 
DBG(50471599)> CPU CMD: Exec 0134: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 = NNN = event msg len)   
DBG(50471600)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50471601)> CPU DETAIL: Read S 1704: 0000000000000026 
DBG(50471602)> CPU DETAIL: Result: 0000000000000036 
DBG(50471603)> CPU DETAIL: Write 1704: 0000000000000036 
DBG(50471605)> CPU CMD: Exec 0135: 00 60 0000 0000 0146   goto 0146   
DBG(50471606)> CPU DETAIL: Transfer to T 
DBG(50471608)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50471609)> CPU DETAIL: Read R 1705: 0000000000060000 
DBG(50471610)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50471611)> CPU DETAIL: Result: 0000000000090000 
DBG(50471612)> CPU DETAIL: Write 1705: 0000000000090000 
DBG(50471614)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50471615)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50471616)> CPU DETAIL: Read S 1705: 0000000000090000 
DBG(50471617)> CPU DETAIL: Result: 0000000005910000 
DBG(50471620)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50471621)> CPU DETAIL: REG1: 0000000005910000
DBG(50471621)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50471623)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50471624)> CPU DETAIL: Read R 1765: 0060000000000033 
DBG(50471625)> CPU DETAIL: Write 0170: 0060000000000033 
DBG(50471627)> CPU CMD: Exec 0157: 00 42 0886 1764 1090   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50471628)> CPU DETAIL: Read R 0886: 0000000249999990 
DBG(50471629)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471630)> CPU DETAIL: Result: 0000000249999990 
DBG(50471631)> CPU DETAIL: Write 1090: 0000000249999990 
DBG(50471633)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50471634)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50471635)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50471638)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50471639)> CPU DETAIL: Read R 0157: 0042088617641090 
DBG(50471640)> CPU DETAIL: Result: 0042088617641093 
DBG(50471641)> CPU DETAIL: Write 0157: 0042088617641093 
DBG(50471643)> CPU CMD: Exec 0160: 11 34 1699 1748 1699   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50471644)> CPU DETAIL: Read R 1699: 0000000010880000 
DBG(50471645)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50471646)> CPU DETAIL: Float: REG1: 95 0 1 0880 0000 0000 (0.000011)
DBG(50471646)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50471647)> CPU DETAIL: Result: 95 0 1 0880 0000 0000 00012207 03125000 (0.000011)
DBG(50471648)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00010880 00000000 (0.000000)
DBG(50471649)> CPU DETAIL: Write 1699: 0000000000000000 
DBG(50471651)> CPU CMD: Exec 0161: 89 42 0000 1746 1726   mask field T -> (1726 (*now* - TTTT) to now NNN.N fixed format 1 decimal) 0  
DBG(50471652)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50471653)> CPU DETAIL: Result: 0000000000000000 
DBG(50471654)> CPU DETAIL: Word Shift 11 digits left: REG1: 0000000000000000 
DBG(50471655)> CPU DETAIL: Write 1726: 0000000000000000 
DBG(50471657)> CPU CMD: Exec 0162: 98 42 1699 1825 0000   Mask (1699 Number of weeks *now* - TTTT) with sign -> REG1   
DBG(50471658)> CPU DETAIL: Read R 1699: 0000000000000000 
DBG(50471659)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50471660)> CPU DETAIL: Result: 0000000000000000 
DBG(50471661)> CPU DETAIL: Word Shift 2 digits left: REG1: 0000000000000000 
DBG(50471664)> CPU CMD: Exec 0163: 00 40 1726 0000 0000   add (1726 weeks elapsed from completition to now NNN.N fixed format 1 decima 
DBG(50471665)> CPU DETAIL: Read R 1726: 0000000000000000 
DBG(50471666)> CPU DETAIL: Result: 0000000000000000 
DBG(50471669)> CPU CMD: Exec 0164: 00 40 1090 0000 1090   add event code -> (1084) ww1=S TTT2 x EEEEEEEEE x   
DBG(50471670)> CPU DETAIL: Read R 1090: 0000000249999990 
DBG(50471671)> CPU DETAIL: Result: 0000000249999990 
DBG(50471672)> CPU DETAIL: Write 1090: 0000000249999990 
DBG(50471674)> CPU CMD: Exec 0165: 00 40 0164 0566 0164   incr instr 0163 addr 1084 field R (not S) and T (incr addr 1084)   
DBG(50471675)> CPU DETAIL: Read R 0164: 0040109000001090 
DBG(50471676)> CPU DETAIL: Read S 0566: 0000000300000003 
DBG(50471677)> CPU DETAIL: Result: 0040109300001093 
DBG(50471678)> CPU DETAIL: Write 0164: 0040109300001093 
DBG(50471680)> CPU CMD: Exec 0166: 00 60 0887 1091 0000   (event rec w3) -> (1085)   
DBG(50471681)> CPU DETAIL: Read R 0887: 0204444000000671 
DBG(50471682)> CPU DETAIL: Write 1091: 0204444000000671 
DBG(50471684)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50471685)> CPU DETAIL: Read R 0166: 0060088710910000 
DBG(50471686)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50471687)> CPU DETAIL: Result: 0060088710940000 
DBG(50471688)> CPU DETAIL: Write 0166: 0060088710940000 
DBG(50471690)> CPU CMD: Exec 0168: 00 60 0888 1092 0000   (event rec w4) -> (1086)   
DBG(50471691)> CPU DETAIL: Read R 0888: 0204458700760615 
DBG(50471692)> CPU DETAIL: Write 1092: 0204458700760615 
DBG(50471694)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50471695)> CPU DETAIL: Read R 0168: 0060088810920000 
DBG(50471696)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50471697)> CPU DETAIL: Result: 0060088810950000 
DBG(50471698)> CPU DETAIL: Write 0168: 0060088810950000 
DBG(50471700)> CPU CMD: Exec 0170: 00 60 0000 0000 0033   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50471701)> CPU DETAIL: Transfer to T 
DBG(50471703)> CPU CMD: Exec 0033: 00 41 1691 1692 0000   (1691 number of words in block) - (1692 number of words already read) -> REG 
DBG(50471704)> CPU DETAIL: Read R 1691: 0000000000000033 
DBG(50471705)> CPU DETAIL: Read S 1692: 0000000000000033 
DBG(50471706)> CPU DETAIL: Result: 0000000000000000 
DBG(50471709)> CPU CMD: Exec 0034: 00 63 0039 0136 0000   if >0 goto 0039, =0 goto 0136 (if all events from event block processed)   
DBG(50471710)> CPU DETAIL: REG1: 0000000000000000
DBG(50471710)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50471712)> CPU CMD: Exec 0136: 96 60 1704 0000 0000   (1704 number of word in output rec buf) -> REG1 field S   
DBG(50471713)> CPU DETAIL: Read R 1704: 0000000000000036 
DBG(50471714)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000360000 
DBG(50471717)> CPU CMD: Exec 0137: 00 41 0000 1737 0000   decr 1 field S   
DBG(50471718)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50471719)> CPU DETAIL: Result: 0000000000350000 
DBG(50471722)> CPU CMD: Exec 0138: 00 40 1760 0000 0139   set instr ...   
DBG(50471723)> CPU DETAIL: Read R 1760: 0291065206520001 
DBG(50471724)> CPU DETAIL: Result: 0291065206870001 
DBG(50471725)> CPU DETAIL: Write 0139: 0291065206870001 
DBG(50471727)> CPU CMD: Exec 0139: 02 91 0652 0687 0001   ... to write to tape 02 0652 0652+(1704 number of word in output rec buf)-1  
DBG(50471728)> CPU DETAIL: Tape operation on MT2, Addr 0652->0687, Block Number 0001
DBG(50471728)> MT CMD: Tape unit 2: init write
DBG(50471728)> MT EXP: Write from 0652 to 0687 as Block number 0001
DBG(50471728)> MT EXP: Start Of Block: 02 91 0652 0687 0001
DBG(50471728)> MT EXP: CRT 0652 to Tape: 0000001111111110 
DBG(50471728)> MT EXP: CRT 0653 to Tape: 0100000000151111 
DBG(50471728)> MT EXP: CRT 0654 to Tape: 0000000241000003 
DBG(50471728)> MT EXP: CRT 0655 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0656 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0657 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0658 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0659 to Tape: 2221444455660001 
DBG(50471728)> MT EXP: CRT 0660 to Tape: 0000000242009990 
DBG(50471728)> MT EXP: CRT 0661 to Tape: 0204855000000000 
DBG(50471728)> MT EXP: CRT 0662 to Tape: 0101429330900241 
DBG(50471728)> MT EXP: CRT 0663 to Tape: 0000001111111110 
DBG(50471728)> MT EXP: CRT 0664 to Tape: 0130000000151113 
DBG(50471728)> MT EXP: CRT 0665 to Tape: 0000000242009990 
DBG(50471728)> MT EXP: CRT 0666 to Tape: 0204444000000335 
DBG(50471728)> MT EXP: CRT 0667 to Tape: 0204458700760279 
DBG(50471728)> MT EXP: CRT 0668 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0669 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0670 to Tape: 0000000000000101 
DBG(50471728)> MT EXP: CRT 0671 to Tape: 0000000241000000 
DBG(50471728)> MT EXP: CRT 0672 to Tape: 0204444000000335 
DBG(50471728)> MT EXP: CRT 0673 to Tape: 0204458700760279 
DBG(50471728)> MT EXP: CRT 0674 to Tape: 0000000249999990 
DBG(50471728)> MT EXP: CRT 0675 to Tape: 0000000000033555 
DBG(50471728)> MT EXP: CRT 0676 to Tape: 0000000000033666 
DBG(50471728)> MT EXP: CRT 0677 to Tape: 0000001111111110 
DBG(50471728)> MT EXP: CRT 0678 to Tape: 0100000000151113 
DBG(50471728)> MT EXP: CRT 0679 to Tape: 0000000249999990 
DBG(50471728)> MT EXP: CRT 0680 to Tape: 0204444000000671 
DBG(50471728)> MT EXP: CRT 0681 to Tape: 0204458700760615 
DBG(50471728)> MT EXP: CRT 0682 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0683 to Tape: 0000000000000000 
DBG(50471728)> MT EXP: CRT 0684 to Tape: 0000000000000100 
DBG(50471728)> MT EXP: CRT 0685 to Tape: 0000000242009990 
DBG(50471728)> MT EXP: CRT 0686 to Tape: 0000000000033555 
DBG(50471728)> MT EXP: CRT 0687 to Tape: 0000000000033666 
DBG(50471728)> MT EXP: End Of Block: 02 91 0652 0687 0001 (36 words)
DBG(50471728)> MT DETAIL: Write block (686 chars, used 2.85 inches, needs 17 msec) to tape 2
DBG(50471728)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (4.38 inches)
DBG(50471731)> CPU CMD: Exec 0140: 08 60 0140 0000 1948   call 1948 check write   
DBG(50471732)> CPU DETAIL: Read R 0140: 0860014000001948 
DBG(50471733)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600140 
DBG(50471734)> CPU DETAIL: Transfer to T 
DBG(50471736)> CPU CMD: Exec 1948: 00 40 1967 0000 1960   Check write routine: save exit transfer in (1960 EXIT_CheckWrite)   
DBG(50471737)> CPU DETAIL: Read R 1967: 0059999991400001 
DBG(50471738)> CPU DETAIL: Result: 0060000000000141 
DBG(50471739)> CPU DETAIL: Write 1960: 0060000000000141 
DBG(50471741)> CPU CMD: Exec 1949: 91 60 0000 0000 0000      
DBG(50471742)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000141000000000 
DBG(50471745)> CPU CMD: Exec 1950: 01 40 1968 0000 1952      
DBG(50471746)> CPU DETAIL: Read R 1968: 0599998196500000 
DBG(50471747)> CPU DETAIL: Result: 0600139196500000 
DBG(50471748)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060013919650000 
DBG(50471749)> CPU DETAIL: Write 1952: 0060013919650000 
DBG(50471751)> CPU CMD: Exec 1951: 00 60 1971 1962 0000      
DBG(50471752)> CPU DETAIL: Read R 1971: 0060195619621962 
DBG(50471753)> CPU DETAIL: Write 1962: 0060195619621962 
DBG(50471755)> CPU CMD: Exec 1952: 00 60 0139 1965 0000      
DBG(50471756)> CPU DETAIL: Read R 0139: 0291065206870001 
DBG(50471757)> CPU DETAIL: Write 1965: 0291065206870001 
DBG(50471759)> CPU CMD: Exec 1953: 00 68 0000 0000 1955   if tape signal on write goto 1955   
DBG(50471760)> CPU DETAIL: Condition not present 
DBG(50471762)> CPU CMD: Exec 1954: 00 60 0000 0000 1960   go to exit word   
DBG(50471763)> CPU DETAIL: Transfer to T 
DBG(50471765)> CPU CMD: Exec 1960: 00 60 0000 0000 0141   EXIT_CheckWrite   
DBG(50471766)> CPU DETAIL: Transfer to T 
DBG(50471768)> CPU CMD: Exec 0141: 00 40 1760 1732 1760   incr block number on tape write   
DBG(50471769)> CPU DETAIL: Read R 1760: 0291065206520001 
DBG(50471770)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50471771)> CPU DETAIL: Result: 0291065206520002 
DBG(50471772)> CPU DETAIL: Write 1760: 0291065206520002 
DBG(50471774)> CPU CMD: Exec 0142: 00 60 1733 1704 0000   clear (1704 number of word in output rec buf)   
DBG(50471775)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471776)> CPU DETAIL: Write 1704: 0000000000000000 
DBG(50471778)> CPU CMD: Exec 0143: 00 52 0000 0000 0000   clear M6   
DBG(50471779)> CPU DETAIL: M4: 0033 
DBG(50471780)> CPU DETAIL: Clear M6
DBG(50471780)> CPU DETAIL: M6: 0000 
DBG(50471781)> CPU DETAIL: M8: 0000 
DBG(50471784)> CPU CMD: Exec 0144: 00 60 0000 0000 0036   goto 0036, process next event   
DBG(50471785)> CPU DETAIL: Transfer to T 
DBG(50471787)> CPU CMD: Exec 0036: 00 60 1733 1692 0000   clear 1692 number of words already read   
DBG(50471788)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471789)> CPU DETAIL: Write 1692: 0000000000000000 
DBG(50471791)> CPU CMD: Exec 0037: 00 60 1743 0052 0000   reset inst 0052   
DBG(50471792)> CPU DETAIL: Read R 1743: 0458000100070050 
DBG(50471793)> CPU DETAIL: Write 0052: 0458000100070050 
DBG(50471795)> CPU CMD: Exec 0038: 00 60 0000 0000 0023   goto read input tape 03 block    
DBG(50471796)> CPU DETAIL: Transfer to T 
DBG(50471798)> CPU CMD: Exec 0023: 03 94 0684 0000 1001   read input tape 03 -> (0684) record 1000   
DBG(50471799)> CPU DETAIL: Tape operation on MT3, Addr 0684->0000, Block Number 1001
DBG(50471799)> MT DATA: Tape unit 3: init read
DBG(50471799)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 3
DBG(50471799)> MT DETAIL: Tape record contents: D*0390000000000000CD
DBG(50471799)> MT EXP: End Of File mark sensed: 0390000000000000 
DBG(50471799)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.04% of medium (5.89 inches)
DBG(50471802)> CPU CMD: Exec 0024: 08 68 0024 0000 1931   if tape check, call 1931 reread   
DBG(50471803)> CPU DETAIL: Condition not present 
DBG(50471805)> CPU CMD: Exec 0025: 00 67 0000 0000 0265   if end of file goto 0265   
DBG(50471806)> CPU DETAIL: Reset condition present 
DBG(50471806)> CPU DETAIL: Transfer to T 
DBG(50471808)> CPU CMD: Exec 0265: 00 40 1777 1777 0000   constant 0000 0002 0000 0000 -> REG1   
DBG(50471809)> CPU DETAIL: Read R 1777: 0000000100000000 
DBG(50471810)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50471811)> CPU DETAIL: Result: 0000000200000000 
DBG(50471814)> CPU CMD: Exec 0266: 00 40 1767 0000 1767   set instr 0168 to ...   
DBG(50471815)> CPU DETAIL: Read R 1767: 0060088710850000 
DBG(50471816)> CPU DETAIL: Result: 0060088910850000 
DBG(50471817)> CPU DETAIL: Write 1767: 0060088910850000 
DBG(50471819)> CPU CMD: Exec 0267: 00 40 1767 1768 0168   ... (0890 event rec w6) -> (1086 ww3 sigma)   
DBG(50471820)> CPU DETAIL: Read R 1767: 0060088910850000 
DBG(50471821)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50471822)> CPU DETAIL: Result: 0060089010860000 
DBG(50471823)> CPU DETAIL: Write 0168: 0060089010860000 
DBG(50471825)> CPU CMD: Exec 0268: 00 60 1807 1765 0000   ???   
DBG(50471826)> CPU DETAIL: Read R 1807: 0060000000000297 
DBG(50471827)> CPU DETAIL: Write 1765: 0060000000000297 
DBG(50471829)> CPU CMD: Exec 0269: 00 60 1808 0258 0000   ???   
DBG(50471830)> CPU DETAIL: Read R 1808: 0060179504960000 
DBG(50471831)> CPU DETAIL: Write 0258: 0060179504960000 
DBG(50471833)> CPU CMD: Exec 0270: 00 60 1767 0166 0000   ???   
DBG(50471834)> CPU DETAIL: Read R 1767: 0060088910850000 
DBG(50471835)> CPU DETAIL: Write 0166: 0060088910850000 
DBG(50471837)> CPU CMD: Exec 0271: 00 60 1757 0154 0000   ???   
DBG(50471838)> CPU DETAIL: Read R 1757: 0060176701660297 
DBG(50471839)> CPU DETAIL: Write 0154: 0060176701660297 
DBG(50471841)> CPU CMD: Exec 0272: 00 60 1733 1705 0000   clear (1705)   
DBG(50471842)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50471843)> CPU DETAIL: Write 1705: 0000000000000000 
DBG(50471845)> CPU CMD: Exec 0273: 00 60 1848 0160 0000   ???   
DBG(50471846)> CPU DETAIL: Read R 1848: 0060000000000166 
DBG(50471847)> CPU DETAIL: Write 0160: 0060000000000166 
DBG(50471849)> CPU CMD: Exec 0274: 00 60 1744 0153 0000   ???   
DBG(50471850)> CPU DETAIL: Read R 1744: 0060000000000000 
DBG(50471851)> CPU DETAIL: Write 0153: 0060000000000000 
DBG(50471853)> CPU CMD: Exec 0275: 00 60 1809 0259 0000   ???   
DBG(50471854)> CPU DETAIL: Read R 1809: 0060179602410453 
DBG(50471855)> CPU DETAIL: Write 0259: 0060179602410453 
DBG(50471857)> CPU CMD: Exec 0276: 00 60 1810 0264 0000   ???   
DBG(50471858)> CPU DETAIL: Read R 1810: 0060181104960398 
DBG(50471859)> CPU DETAIL: Write 0264: 0060181104960398 
DBG(50471861)> CPU CMD: Exec 0277: 00 60 1778 0157 0000   ???   
DBG(50471862)> CPU DETAIL: Read R 1778: 0042088617641084 
DBG(50471863)> CPU DETAIL: Write 0157: 0042088617641084 
DBG(50471865)> CPU CMD: Exec 0278: 00 42 0139 1746 0000   Mask (0139 write to 02 tape instr) to get block number   
DBG(50471866)> CPU DETAIL: Read R 0139: 0291065206870001 
DBG(50471867)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50471868)> CPU DETAIL: Result: 0000000000000001 
DBG(50471871)> CPU CMD: Exec 0279: 00 40 0287 0000 0287   add block number to instr 0287 tape 02 read   
DBG(50471872)> CPU DETAIL: Read R 0287: 0295088400000000 
DBG(50471873)> CPU DETAIL: Result: 0295088400000001 
DBG(50471874)> CPU DETAIL: Write 0287: 0295088400000001 
DBG(50471876)> CPU CMD: Exec 0280: 02 91 0000 0000 0000   write end of tape to tape 02   
DBG(50471877)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(50471877)> MT CMD: Tape unit 2: init write
DBG(50471877)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(50471877)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(50471877)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.04% of medium (5.92 inches)
DBG(50471880)> CPU CMD: Exec 0281: 02 95 0000 0000 0000   read tape 02 backwards (read the just written eot)   
DBG(50471881)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(50471881)> MT CMD: Tape unit 2: init backward read
DBG(50471881)> MT DETAIL: Read tape record (20 chars, used -1.54 inches, needs 8 msec) from tape 2
DBG(50471881)> MT DETAIL: Tape record contents: D*0291000000000000CD
DBG(50471881)> MT EXP: End Of File mark sensed: 0291000000000000 
DBG(50471881)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (4.38 inches)
DBG(50471884)> CPU CMD: Exec 0282: 00 67 0000 0000 0284   check eot has been writen   
DBG(50471885)> CPU DETAIL: Reset condition present 
DBG(50471885)> CPU DETAIL: Transfer to T 
DBG(50471887)> CPU CMD: Exec 0284: 03 98 0000 0000 0000   rewind tape 03   
DBG(50471888)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(50471888)> MT CMD: Tape unit 3: init rewind (current medium used 5.89 inches)
DBG(50471888)> MT CMD: Tape unit 3: rewind time (0 sec)
DBG(50471888)> CPU DETAIL: ... Tape 3 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(50471890)> CPU CMD: Exec 0285: 04 98 0000 0000 0000   rewind tape 04   
DBG(50471891)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(50471891)> MT CMD: Tape unit 4: already at BOT
DBG(50471893)> CPU CMD: Exec 0286: 00 57 0000 0000 0000   clear M4 M6 M8   
DBG(50471894)> CPU DETAIL: Clear M4
DBG(50471894)> CPU DETAIL: M4: 0000 
DBG(50471895)> CPU DETAIL: Clear M6
DBG(50471895)> CPU DETAIL: M6: 0000 
DBG(50471896)> CPU DETAIL: Clear M8
DBG(50471896)> CPU DETAIL: M8: 0000 
DBG(50471899)> CPU CMD: Exec 0287: 02 95 0884 0000 0001   read tape 02 backwards xxx ... 0884   
DBG(50471900)> CPU DETAIL: Tape operation on MT2, Addr 0884->0000, Block Number 0001
DBG(50471900)> MT CMD: Tape unit 2: init backward read
DBG(50471900)> MT DETAIL: Read tape record (686 chars, used -2.85 inches, needs 17 msec) from tape 2
DBG(50471900)> MT DETAIL: Tape record contents: D*0291065206870001C*0000001111111110C*0100000000151111C*00000002410000...
DBG(50471900)> MT EXP: Start Of Block Word: 0291065206870001
DBG(50471900)> MT EXP: Read Tape Block number 0001
DBG(50471900)> MT EXP: Read backward addr 0884 to 0000
DBG(50471900)> MT EXP: Tape to CRT 0884: 0000000000033666 
DBG(50471900)> MT EXP: Tape to CRT 0883: 0000000000033555 
DBG(50471900)> MT EXP: Tape to CRT 0882: 0000000242009990 
DBG(50471900)> MT EXP: Tape to CRT 0881: 0000000000000100 
DBG(50471900)> MT EXP: Tape to CRT 0880: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0879: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0878: 0204458700760615 
DBG(50471900)> MT EXP: Tape to CRT 0877: 0204444000000671 
DBG(50471900)> MT EXP: Tape to CRT 0876: 0000000249999990 
DBG(50471900)> MT EXP: Tape to CRT 0875: 0100000000151113 
DBG(50471900)> MT EXP: Tape to CRT 0874: 0000001111111110 
DBG(50471900)> MT EXP: Tape to CRT 0873: 0000000000033666 
DBG(50471900)> MT EXP: Tape to CRT 0872: 0000000000033555 
DBG(50471900)> MT EXP: Tape to CRT 0871: 0000000249999990 
DBG(50471900)> MT EXP: Tape to CRT 0870: 0204458700760279 
DBG(50471900)> MT EXP: Tape to CRT 0869: 0204444000000335 
DBG(50471900)> MT EXP: Tape to CRT 0868: 0000000241000000 
DBG(50471900)> MT EXP: Tape to CRT 0867: 0000000000000101 
DBG(50471900)> MT EXP: Tape to CRT 0866: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0865: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0864: 0204458700760279 
DBG(50471900)> MT EXP: Tape to CRT 0863: 0204444000000335 
DBG(50471900)> MT EXP: Tape to CRT 0862: 0000000242009990 
DBG(50471900)> MT EXP: Tape to CRT 0861: 0130000000151113 
DBG(50471900)> MT EXP: Tape to CRT 0860: 0000001111111110 
DBG(50471900)> MT EXP: Tape to CRT 0859: 0101429330900241 
DBG(50471900)> MT EXP: Tape to CRT 0858: 0204855000000000 
DBG(50471900)> MT EXP: Tape to CRT 0857: 0000000242009990 
DBG(50471900)> MT EXP: Tape to CRT 0856: 2221444455660001 
DBG(50471900)> MT EXP: Tape to CRT 0855: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0854: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0853: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0852: 0000000000000000 
DBG(50471900)> MT EXP: Tape to CRT 0851: 0000000241000003 
DBG(50471900)> MT EXP: Tape to CRT 0850: 0100000000151111 
DBG(50471900)> MT EXP: Tape to CRT 0849: 0000001111111110 
DBG(50471900)> MT EXP: End Of Block Word: 0291065206870001, data words in block: 36
DBG(50471900)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(50471903)> CPU CMD: Exec 0288: 08 68 0288 0000 1931   if tape check, call 1931 reread   
DBG(50471904)> CPU DETAIL: Condition not present 
DBG(50471906)> CPU CMD: Exec 0289: 00 67 0000 0000 0622   if end of file goto 0622   
DBG(50471907)> CPU DETAIL: Condition not present 
DBG(50471909)> CPU CMD: Exec 0290: 00 60 0000 1689 0000   REG1 -> (1689) = Start of block                         
DBG(50471910)> CPU DETAIL: Write 1689: 0291065206870001 
DBG(50471912)> CPU CMD: Exec 0291: 04 42 0000 1730 1690   Mask and shift start of block: bbbb -> (1690)        02 90 aaaa bbbb nnnn ma 
DBG(50471913)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50471914)> CPU DETAIL: Result: 0000000006870000 
DBG(50471915)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000687 
DBG(50471916)> CPU DETAIL: Write 1690: 0000000000000687 
DBG(50471918)> CPU CMD: Exec 0292: 00 41 0287 1732 0287   incr block num of read from tape at addr 0287   
DBG(50471919)> CPU DETAIL: Read R 0287: 0295088400000001 
DBG(50471920)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50471921)> CPU DETAIL: Result: 0295088400000000 
DBG(50471922)> CPU DETAIL: Write 0287: 0295088400000000 
DBG(50471924)> CPU CMD: Exec 0293: 08 42 1689 1731 0000   Mask and shift start of block: aaaa -> (REG1)        02 90 aaaa bbbb nnnn ma 
DBG(50471925)> CPU DETAIL: Read R 1689: 0291065206870001 
DBG(50471926)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50471927)> CPU DETAIL: Result: 0000065200000000 
DBG(50471928)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000652 
DBG(50471931)> CPU CMD: Exec 0294: 00 41 1690 0000 1691   (1690) - REG2 -> (1691)   
DBG(50471932)> CPU DETAIL: Read R 1690: 0000000000000687 
DBG(50471933)> CPU DETAIL: Result: 0000000000000035 
DBG(50471934)> CPU DETAIL: Write 1691: 0000000000000035 
DBG(50471936)> CPU CMD: Exec 0295: 00 40 1691 1732 1691          + 1 -> (1691 total number of words in input tape 02 event block)   
DBG(50471937)> CPU DETAIL: Read R 1691: 0000000000000035 
DBG(50471938)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50471939)> CPU DETAIL: Result: 0000000000000036 
DBG(50471940)> CPU DETAIL: Write 1691: 0000000000000036 
DBG(50471942)> CPU CMD: Exec 0296: 00 60 0000 0000 0000      
DBG(50471945)> CPU CMD: Exec 0297: 00 41 1691 1692 0000   (1691 number of words in input block) - (1692 number of words already read)  
DBG(50471946)> CPU DETAIL: Read R 1691: 0000000000000036 
DBG(50471947)> CPU DETAIL: Read S 1692: 0000000000000000 
DBG(50471948)> CPU DETAIL: Result: 0000000000000036 
DBG(50471951)> CPU CMD: Exec 0298: 00 63 0303 0444 0000   if >0 goto 0303, =0 goto 0444 (if all events from event block processed)    
DBG(50471952)> CPU DETAIL: REG1: 0000000000000036
DBG(50471952)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50471954)> CPU CMD: Exec 0303: 00 54 0000 0000 0000   clear M8   
DBG(50471955)> CPU DETAIL: M4: 0000 
DBG(50471956)> CPU DETAIL: M6: 0000 
DBG(50471957)> CPU DETAIL: Clear M8
DBG(50471957)> CPU DETAIL: M8: 0000 
DBG(50471960)> CPU CMD: Exec 0304: 96 60 1691 0000 0000   (1691 number of words in block) -> REG1   
DBG(50471961)> CPU DETAIL: Read R 1691: 0000000000000036 
DBG(50471962)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000360000 
DBG(50471965)> CPU CMD: Exec 0305: 00 40 1776 0000 0308   set loop M8 instr ... with end of loop = (1691 number of words in block)     
DBG(50471966)> CPU DETAIL: Read R 1776: 0858000100000306 
DBG(50471967)> CPU DETAIL: Result: 0858000100360306 
DBG(50471968)> CPU DETAIL: Write 0308: 0858000100360306 
DBG(50471970)> CPU CMD: Exec 0306: 00 70 0884 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50471971)> CPU DETAIL: Read R 0884: 0000000000033666 
DBG(50471972)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471973)> CPU DETAIL: Diff: REG1: 9999998888922556
DBG(50471976)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50471977)> CPU DETAIL: Read R 0306: 0070088417640310 
DBG(50471978)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50471979)> CPU DETAIL: Result: 0070088317640310 
DBG(50471980)> CPU DETAIL: Write 0306: 0070088317640310 
DBG(50471982)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50471983)> CPU DETAIL: M8: 0001 
DBG(50471984)> CPU DETAIL: Transfer to T 
DBG(50471986)> CPU CMD: Exec 0306: 00 70 0883 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50471987)> CPU DETAIL: Read R 0883: 0000000000033555 
DBG(50471988)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50471989)> CPU DETAIL: Diff: REG1: 9999998888922445
DBG(50471992)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50471993)> CPU DETAIL: Read R 0306: 0070088317640310 
DBG(50471994)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50471995)> CPU DETAIL: Result: 0070088217640310 
DBG(50471996)> CPU DETAIL: Write 0306: 0070088217640310 
DBG(50471998)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50471999)> CPU DETAIL: M8: 0002 
DBG(50472000)> CPU DETAIL: Transfer to T 
DBG(50472002)> CPU CMD: Exec 0306: 00 70 0882 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472003)> CPU DETAIL: Read R 0882: 0000000242009990 
DBG(50472004)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472005)> CPU DETAIL: Diff: REG1: 9999999130898880
DBG(50472008)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472009)> CPU DETAIL: Read R 0306: 0070088217640310 
DBG(50472010)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472011)> CPU DETAIL: Result: 0070088117640310 
DBG(50472012)> CPU DETAIL: Write 0306: 0070088117640310 
DBG(50472014)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472015)> CPU DETAIL: M8: 0003 
DBG(50472016)> CPU DETAIL: Transfer to T 
DBG(50472018)> CPU CMD: Exec 0306: 00 70 0881 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472019)> CPU DETAIL: Read R 0881: 0000000000000100 
DBG(50472020)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472021)> CPU DETAIL: Diff: REG1: 9999998888888990
DBG(50472024)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472025)> CPU DETAIL: Read R 0306: 0070088117640310 
DBG(50472026)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472027)> CPU DETAIL: Result: 0070088017640310 
DBG(50472028)> CPU DETAIL: Write 0306: 0070088017640310 
DBG(50472030)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472031)> CPU DETAIL: M8: 0004 
DBG(50472032)> CPU DETAIL: Transfer to T 
DBG(50472034)> CPU CMD: Exec 0306: 00 70 0880 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472035)> CPU DETAIL: Read R 0880: 0000000000000000 
DBG(50472036)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472037)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50472040)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472041)> CPU DETAIL: Read R 0306: 0070088017640310 
DBG(50472042)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472043)> CPU DETAIL: Result: 0070087917640310 
DBG(50472044)> CPU DETAIL: Write 0306: 0070087917640310 
DBG(50472046)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472047)> CPU DETAIL: M8: 0005 
DBG(50472048)> CPU DETAIL: Transfer to T 
DBG(50472050)> CPU CMD: Exec 0306: 00 70 0879 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472051)> CPU DETAIL: Read R 0879: 0000000000000000 
DBG(50472052)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472053)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50472056)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472057)> CPU DETAIL: Read R 0306: 0070087917640310 
DBG(50472058)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472059)> CPU DETAIL: Result: 0070087817640310 
DBG(50472060)> CPU DETAIL: Write 0306: 0070087817640310 
DBG(50472062)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472063)> CPU DETAIL: M8: 0006 
DBG(50472064)> CPU DETAIL: Transfer to T 
DBG(50472066)> CPU CMD: Exec 0306: 00 70 0878 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472067)> CPU DETAIL: Read R 0878: 0204458700760615 
DBG(50472068)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472069)> CPU DETAIL: Diff: REG1: 0204457589649505
DBG(50472072)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472073)> CPU DETAIL: Read R 0306: 0070087817640310 
DBG(50472074)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472075)> CPU DETAIL: Result: 0070087717640310 
DBG(50472076)> CPU DETAIL: Write 0306: 0070087717640310 
DBG(50472078)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472079)> CPU DETAIL: M8: 0007 
DBG(50472080)> CPU DETAIL: Transfer to T 
DBG(50472082)> CPU CMD: Exec 0306: 00 70 0877 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472083)> CPU DETAIL: Read R 0877: 0204444000000671 
DBG(50472084)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472085)> CPU DETAIL: Diff: REG1: 0204442888889561
DBG(50472088)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472089)> CPU DETAIL: Read R 0306: 0070087717640310 
DBG(50472090)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472091)> CPU DETAIL: Result: 0070087617640310 
DBG(50472092)> CPU DETAIL: Write 0306: 0070087617640310 
DBG(50472094)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472095)> CPU DETAIL: M8: 0008 
DBG(50472096)> CPU DETAIL: Transfer to T 
DBG(50472098)> CPU CMD: Exec 0306: 00 70 0876 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472099)> CPU DETAIL: Read R 0876: 0000000249999990 
DBG(50472100)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472101)> CPU DETAIL: Diff: REG1: 9999999138888880
DBG(50472104)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472105)> CPU DETAIL: Read R 0306: 0070087617640310 
DBG(50472106)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472107)> CPU DETAIL: Result: 0070087517640310 
DBG(50472108)> CPU DETAIL: Write 0306: 0070087517640310 
DBG(50472110)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472111)> CPU DETAIL: M8: 0009 
DBG(50472112)> CPU DETAIL: Transfer to T 
DBG(50472114)> CPU CMD: Exec 0306: 00 70 0875 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472115)> CPU DETAIL: Read R 0875: 0100000000151113 
DBG(50472116)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472117)> CPU DETAIL: Diff: REG1: 0099998889040003
DBG(50472120)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50472121)> CPU DETAIL: Read R 0306: 0070087517640310 
DBG(50472122)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472123)> CPU DETAIL: Result: 0070087417640310 
DBG(50472124)> CPU DETAIL: Write 0306: 0070087417640310 
DBG(50472126)> CPU CMD: Exec 0308: 08 58 0001 0036 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50472127)> CPU DETAIL: M8: 0010 
DBG(50472128)> CPU DETAIL: Transfer to T 
DBG(50472130)> CPU CMD: Exec 0306: 00 70 0874 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50472131)> CPU DETAIL: Read R 0874: 0000001111111110 
DBG(50472132)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472133)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472134)> CPU DETAIL: Transfer to T 
DBG(50472136)> CPU CMD: Exec 0310: 00 42 0306 1731 0000   get in field R the addr of event rec start    
DBG(50472137)> CPU DETAIL: Read R 0306: 0070087417640310 
DBG(50472138)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50472139)> CPU DETAIL: Result: 0000087400000000 
DBG(50472142)> CPU CMD: Exec 0311: 00 40 0000 1777 1711   incr field R -> (1711 addr of event rec word 1)   
DBG(50472143)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472144)> CPU DETAIL: Result: 0000087500000000 
DBG(50472145)> CPU DETAIL: Write 1711: 0000087500000000 
DBG(50472147)> CPU CMD: Exec 0312: 00 41 0306 1777 0306   incr field R in instr 0306, to allow locate next event   
DBG(50472148)> CPU DETAIL: Read R 0306: 0070087417640310 
DBG(50472149)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50472150)> CPU DETAIL: Result: 0070087317640310 
DBG(50472151)> CPU DETAIL: Write 0306: 0070087317640310 
DBG(50472153)> CPU CMD: Exec 0313: 00 60 1761 0304 0000   set inst 0304 to skip loop init in 0305   
DBG(50472154)> CPU DETAIL: Read R 1761: 0060000000000306 
DBG(50472155)> CPU DETAIL: Write 0304: 0060000000000306 
DBG(50472157)> CPU CMD: Exec 0314: 00 60 0000 0000 0000      
DBG(50472160)> CPU CMD: Exec 0315: 00 40 1711 1779 0000   incr field R + 6 -> REG1=addr of event rec word 7   
DBG(50472161)> CPU DETAIL: Read R 1711: 0000087500000000 
DBG(50472162)> CPU DETAIL: Read S 1779: 0000000600000000 
DBG(50472163)> CPU DETAIL: Result: 0000088100000000 
DBG(50472166)> CPU CMD: Exec 0316: 00 40 1780 0000 0317   set instr to ...   
DBG(50472167)> CPU DETAIL: Read R 1780: 0060000016930000 
DBG(50472168)> CPU DETAIL: Result: 0060088116930000 
DBG(50472169)> CPU DETAIL: Write 0317: 0060088116930000 
DBG(50472171)> CPU CMD: Exec 0317: 00 60 0881 1693 0000   ... (addr of event rec word 7) -> (1693 event rec word 7)   
DBG(50472172)> CPU DETAIL: Read R 0881: 0000000000000100 
DBG(50472173)> CPU DETAIL: Write 1693: 0000000000000100 
DBG(50472175)> CPU CMD: Exec 0318: 02 42 1693 1734 1694   mask (1693 event rec word 7) with 0..0 1100 -> (1694 num of predecesors in e 
DBG(50472176)> CPU DETAIL: Read R 1693: 0000000000000100 
DBG(50472177)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50472178)> CPU DETAIL: Result: 0000000000000100 
DBG(50472179)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(50472180)> CPU DETAIL: Write 1694: 0000000000000001 
DBG(50472182)> CPU CMD: Exec 0319: 00 42 1693 1735 1695   mask (1693 event rec word 7) with 0..0 0011 -> (1695 num of successors in ev 
DBG(50472183)> CPU DETAIL: Read R 1693: 0000000000000100 
DBG(50472184)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50472185)> CPU DETAIL: Result: 0000000000000000 
DBG(50472186)> CPU DETAIL: Write 1695: 0000000000000000 
DBG(50472188)> CPU CMD: Exec 0320: 96 34 1694 1747 0000   FMUL x 3   
DBG(50472189)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50472190)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50472191)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50472191)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50472192)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50472193)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50472196)> CPU CMD: Exec 0321: 00 42 0000 1746 1694   (1694 = num of words in predecessor list in event = 3x num of predecesors in 
DBG(50472197)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50472198)> CPU DETAIL: Result: 0000000000000003 
DBG(50472199)> CPU DETAIL: Write 1694: 0000000000000003 
DBG(50472201)> CPU CMD: Exec 0322: 96 34 1695 1747 0000   FMUL x3   
DBG(50472202)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472203)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50472204)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50472204)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50472205)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50472206)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50472209)> CPU CMD: Exec 0323: 00 42 0000 1746 1695   (1695 = num of words in successors list in event = 3x num of successors in e 
DBG(50472210)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50472211)> CPU DETAIL: Result: 0000000000000000 
DBG(50472212)> CPU DETAIL: Write 1695: 0000000000000000 
DBG(50472214)> CPU CMD: Exec 0324: 00 60 1736 1696 0000   7 -> (1696 event rec len)   
DBG(50472215)> CPU DETAIL: Read R 1736: 0000000000000007 
DBG(50472216)> CPU DETAIL: Write 1696: 0000000000000007 
DBG(50472218)> CPU CMD: Exec 0325: 00 40 1694 1695 0000   + words un predecessors + words in successors   
DBG(50472219)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472220)> CPU DETAIL: Read S 1695: 0000000000000000 
DBG(50472221)> CPU DETAIL: Result: 0000000000000003 
DBG(50472224)> CPU CMD: Exec 0326: 00 40 1696 0000 1696   -> (1696 event rec len)   
DBG(50472225)> CPU DETAIL: Read R 1696: 0000000000000007 
DBG(50472226)> CPU DETAIL: Result: 0000000000000010 
DBG(50472227)> CPU DETAIL: Write 1696: 0000000000000010 
DBG(50472229)> CPU CMD: Exec 0327: 00 40 1692 0000 1692   add it to (1692 number of words already processed from block read)   
DBG(50472230)> CPU DETAIL: Read R 1692: 0000000000000000 
DBG(50472231)> CPU DETAIL: Result: 0000000000000010 
DBG(50472232)> CPU DETAIL: Write 1692: 0000000000000010 
DBG(50472234)> CPU CMD: Exec 0328: 00 40 1732 1692 1692   add one to (1692 number of words already processed from block read)   
DBG(50472235)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50472236)> CPU DETAIL: Read S 1692: 0000000000000010 
DBG(50472237)> CPU DETAIL: Result: 0000000000000011 
DBG(50472238)> CPU DETAIL: Write 1692: 0000000000000011 
DBG(50472240)> CPU CMD: Exec 0329: 96 40 1696 1732 0000   REG1 field S = 1 + (1696 event rec len)   
DBG(50472241)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50472242)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50472243)> CPU DETAIL: Result: 0000000000000011 
DBG(50472244)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000110000 
DBG(50472247)> CPU CMD: Exec 0330: 00 41 0308 0000 0308   decr REG1 from loop end value for M8 at 0308   
DBG(50472248)> CPU DETAIL: Read R 0308: 0858000100360306 
DBG(50472249)> CPU DETAIL: Result: 0858000100250306 
DBG(50472250)> CPU DETAIL: Write 0308: 0858000100250306 
DBG(50472252)> CPU CMD: Exec 0331: 00 51 0000 0000 0000   clear M4   
DBG(50472253)> CPU DETAIL: Clear M4
DBG(50472253)> CPU DETAIL: M4: 0000 
DBG(50472254)> CPU DETAIL: M6: 0000 
DBG(50472255)> CPU DETAIL: M8: 0010 
DBG(50472258)> CPU CMD: Exec 0332: 00 40 1782 1711 0333   set instr to ...   
DBG(50472259)> CPU DETAIL: Read R 1782: 0060400008850000 
DBG(50472260)> CPU DETAIL: Read S 1711: 0000087500000000 
DBG(50472261)> CPU DETAIL: Result: 0060487508850000 
DBG(50472262)> CPU DETAIL: Write 0333: 0060487508850000 
DBG(50472264)> CPU CMD: Exec 0333: 00 60 4875 0885 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472265)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50472265)> CPU DETAIL: Read R 0875: 0100000000151113 
DBG(50472266)> CPU DETAIL: Write 0885: 0100000000151113 
DBG(50472268)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472269)> CPU DETAIL: Read R 0333: 0060487508850000 
DBG(50472270)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472271)> CPU DETAIL: Result: 0060487508860000 
DBG(50472272)> CPU DETAIL: Write 0333: 0060487508860000 
DBG(50472274)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472275)> CPU DETAIL: M4: 0001 
DBG(50472276)> CPU DETAIL: Transfer to T 
DBG(50472278)> CPU CMD: Exec 0333: 00 60 4875 0886 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472279)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(50472279)> CPU DETAIL: Read R 0876: 0000000249999990 
DBG(50472280)> CPU DETAIL: Write 0886: 0000000249999990 
DBG(50472282)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472283)> CPU DETAIL: Read R 0333: 0060487508860000 
DBG(50472284)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472285)> CPU DETAIL: Result: 0060487508870000 
DBG(50472286)> CPU DETAIL: Write 0333: 0060487508870000 
DBG(50472288)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472289)> CPU DETAIL: M4: 0002 
DBG(50472290)> CPU DETAIL: Transfer to T 
DBG(50472292)> CPU CMD: Exec 0333: 00 60 4875 0887 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472293)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(50472293)> CPU DETAIL: Read R 0877: 0204444000000671 
DBG(50472294)> CPU DETAIL: Write 0887: 0204444000000671 
DBG(50472296)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472297)> CPU DETAIL: Read R 0333: 0060487508870000 
DBG(50472298)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472299)> CPU DETAIL: Result: 0060487508880000 
DBG(50472300)> CPU DETAIL: Write 0333: 0060487508880000 
DBG(50472302)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472303)> CPU DETAIL: M4: 0003 
DBG(50472304)> CPU DETAIL: Transfer to T 
DBG(50472306)> CPU CMD: Exec 0333: 00 60 4875 0888 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472307)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(50472307)> CPU DETAIL: Read R 0878: 0204458700760615 
DBG(50472308)> CPU DETAIL: Write 0888: 0204458700760615 
DBG(50472310)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472311)> CPU DETAIL: Read R 0333: 0060487508880000 
DBG(50472312)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472313)> CPU DETAIL: Result: 0060487508890000 
DBG(50472314)> CPU DETAIL: Write 0333: 0060487508890000 
DBG(50472316)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472317)> CPU DETAIL: M4: 0004 
DBG(50472318)> CPU DETAIL: Transfer to T 
DBG(50472320)> CPU CMD: Exec 0333: 00 60 4875 0889 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472321)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(50472321)> CPU DETAIL: Read R 0879: 0000000000000000 
DBG(50472322)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50472324)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472325)> CPU DETAIL: Read R 0333: 0060487508890000 
DBG(50472326)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472327)> CPU DETAIL: Result: 0060487508900000 
DBG(50472328)> CPU DETAIL: Write 0333: 0060487508900000 
DBG(50472330)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472331)> CPU DETAIL: M4: 0005 
DBG(50472332)> CPU DETAIL: Transfer to T 
DBG(50472334)> CPU CMD: Exec 0333: 00 60 4875 0890 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472335)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(50472335)> CPU DETAIL: Read R 0880: 0000000000000000 
DBG(50472336)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50472338)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472339)> CPU DETAIL: Read R 0333: 0060487508900000 
DBG(50472340)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472341)> CPU DETAIL: Result: 0060487508910000 
DBG(50472342)> CPU DETAIL: Write 0333: 0060487508910000 
DBG(50472344)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472345)> CPU DETAIL: M4: 0006 
DBG(50472346)> CPU DETAIL: Transfer to T 
DBG(50472348)> CPU CMD: Exec 0333: 00 60 4875 0891 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50472349)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(50472349)> CPU DETAIL: Read R 0881: 0000000000000100 
DBG(50472350)> CPU DETAIL: Write 0891: 0000000000000100 
DBG(50472352)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50472353)> CPU DETAIL: Read R 0333: 0060487508910000 
DBG(50472354)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472355)> CPU DETAIL: Result: 0060487508920000 
DBG(50472356)> CPU DETAIL: Write 0333: 0060487508920000 
DBG(50472358)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50472359)> CPU DETAIL: M4: 0007 
DBG(50472362)> CPU CMD: Exec 0336: 00 42 0333 1731 0000   get field_r from 0333 = last source addr from block rec -> REG1 (in form M4  
DBG(50472363)> CPU DETAIL: Read R 0333: 0060487508920000 
DBG(50472364)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50472365)> CPU DETAIL: Result: 0000487500000000 
DBG(50472368)> CPU CMD: Exec 0337: 00 40 1783 0000 0343   set instr for transfer (M4 + addr in block event buf) -> (0892 event rec pre 
DBG(50472369)> CPU DETAIL: Read R 1783: 0060000008920000 
DBG(50472370)> CPU DETAIL: Result: 0060487508920000 
DBG(50472371)> CPU DETAIL: Write 0343: 0060487508920000 
DBG(50472373)> CPU CMD: Exec 0338: 96 60 1694 0345 0000   (1694 num of words in predecessor list in event) in field s -> (0345)    
DBG(50472374)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472375)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50472376)> CPU DETAIL: Write 0345: 0000000000030000 
DBG(50472378)> CPU CMD: Exec 0339: 00 42 0335 1730 0000   get field s from (0335) -> end loop for M4 in 0335   
DBG(50472379)> CPU DETAIL: Read R 0335: 0458000100070333 
DBG(50472380)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50472381)> CPU DETAIL: Result: 0000000000070000 
DBG(50472384)> CPU CMD: Exec 0340: 00 40 0345 0000 0000   add: (0335) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50472385)> CPU DETAIL: Read R 0345: 0000000000030000 
DBG(50472386)> CPU DETAIL: Result: 0000000000100000 
DBG(50472389)> CPU CMD: Exec 0341: 00 40 1784 0000 0345   set inst loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in 
DBG(50472390)> CPU DETAIL: Read R 1784: 0458000100000342 
DBG(50472391)> CPU DETAIL: Result: 0458000100100342 
DBG(50472392)> CPU DETAIL: Write 0345: 0458000100100342 
DBG(50472394)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50472395)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472396)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472397)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50472400)> CPU CMD: Exec 0343: 00 60 4875 0892 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50472401)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(50472401)> CPU DETAIL: Read R 0882: 0000000242009990 
DBG(50472402)> CPU DETAIL: Write 0892: 0000000242009990 
DBG(50472404)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50472405)> CPU DETAIL: Read R 0343: 0060487508920000 
DBG(50472406)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472407)> CPU DETAIL: Result: 0060487508930000 
DBG(50472408)> CPU DETAIL: Write 0343: 0060487508930000 
DBG(50472410)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50472411)> CPU DETAIL: M4: 0008 
DBG(50472412)> CPU DETAIL: Transfer to T 
DBG(50472414)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50472415)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472416)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472417)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50472420)> CPU CMD: Exec 0343: 00 60 4875 0893 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50472421)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(50472421)> CPU DETAIL: Read R 0883: 0000000000033555 
DBG(50472422)> CPU DETAIL: Write 0893: 0000000000033555 
DBG(50472424)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50472425)> CPU DETAIL: Read R 0343: 0060487508930000 
DBG(50472426)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472427)> CPU DETAIL: Result: 0060487508940000 
DBG(50472428)> CPU DETAIL: Write 0343: 0060487508940000 
DBG(50472430)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50472431)> CPU DETAIL: M4: 0009 
DBG(50472432)> CPU DETAIL: Transfer to T 
DBG(50472434)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50472435)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472436)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472437)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50472440)> CPU CMD: Exec 0343: 00 60 4875 0894 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50472441)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(50472441)> CPU DETAIL: Read R 0884: 0000000000033666 
DBG(50472442)> CPU DETAIL: Write 0894: 0000000000033666 
DBG(50472444)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50472445)> CPU DETAIL: Read R 0343: 0060487508940000 
DBG(50472446)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50472447)> CPU DETAIL: Result: 0060487508950000 
DBG(50472448)> CPU DETAIL: Write 0343: 0060487508950000 
DBG(50472450)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50472451)> CPU DETAIL: M4: 0010 
DBG(50472454)> CPU CMD: Exec 0346: 00 42 0343 1731 0000   get field_r from 0343 = last source addr from block rec -> REG1 (in form M4  
DBG(50472455)> CPU DETAIL: Read R 0343: 0060487508950000 
DBG(50472456)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50472457)> CPU DETAIL: Result: 0000487500000000 
DBG(50472460)> CPU CMD: Exec 0347: 00 40 1786 0000 0353   set instr for transfer (M4 + addr in block event buf) -> (0988 event rec suc 
DBG(50472461)> CPU DETAIL: Read R 1786: 0060000009880000 
DBG(50472462)> CPU DETAIL: Result: 0060487509880000 
DBG(50472463)> CPU DETAIL: Write 0353: 0060487509880000 
DBG(50472465)> CPU CMD: Exec 0348: 96 60 1695 0355 0000   (1695 num of words in successor list in event) in field s -> (0355)    
DBG(50472466)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472467)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(50472468)> CPU DETAIL: Write 0355: 0000000000000000 
DBG(50472470)> CPU CMD: Exec 0349: 00 42 0345 1730 0000   get field s from (0345) -> end loop for M4 in 0345   
DBG(50472471)> CPU DETAIL: Read R 0345: 0458000100100342 
DBG(50472472)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50472473)> CPU DETAIL: Result: 0000000000100000 
DBG(50472476)> CPU CMD: Exec 0350: 00 40 0355 0000 0000   add: (0355) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50472477)> CPU DETAIL: Read R 0355: 0000000000000000 
DBG(50472478)> CPU DETAIL: Result: 0000000000100000 
DBG(50472481)> CPU CMD: Exec 0351: 00 40 1787 0000 0355   set inst loop, incr M4, if M4<>7+(1694 num of words in predecessor list in e 
DBG(50472482)> CPU DETAIL: Read R 1787: 0458000100000352 
DBG(50472483)> CPU DETAIL: Result: 0458000100100352 
DBG(50472484)> CPU DETAIL: Write 0355: 0458000100100352 
DBG(50472486)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50472487)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472488)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472489)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472490)> CPU DETAIL: Transfer to T 
DBG(50472492)> CPU CMD: Exec 0356: 00 72 1695 1733 0453   if (1695 num of words in successors list in event) <> 0 goto 0453   
DBG(50472493)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472494)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472495)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472498)> CPU CMD: Exec 0357: 00 75 0000 0000 0360   if Sw75 transfer to 0360: use TSTS Schedulled completition time from event r 
DBG(50472499)> CPU DETAIL: Reset condition present 
DBG(50472499)> same as above (3 times)
DBG(50472499)> CPU DETAIL: Transfer to T 
DBG(50472501)> CPU CMD: Exec 0360: 00 60 0000 0000 0000   nop   
DBG(50472504)> CPU CMD: Exec 0361: 12 60 0891 0000 0000   (0891 event rec w7 = TSTS TTTT RS PR AA BB): get TSTS in REG1, TSTS=Schedull 
DBG(50472505)> CPU DETAIL: Read R 0891: 0000000000000100 
DBG(50472506)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000000 
DBG(50472509)> CPU CMD: Exec 0362: 00 40 1745 0000 1712   add 11 0..0 -> convert ot float   
DBG(50472510)> CPU DETAIL: Read R 1745: 1100000000000000 
DBG(50472511)> CPU DETAIL: Result: 1100000000000000 
DBG(50472512)> CPU DETAIL: Write 1712: 1100000000000000 
DBG(50472514)> CPU CMD: Exec 0363: 00 60 1788 0360 0368   set 0360 inst to goto 0368, goto 0368: this makes setting (1712) only first  
DBG(50472515)> CPU DETAIL: Read R 1788: 0060000000000368 
DBG(50472516)> CPU DETAIL: Transfer to T 
DBG(50472516)> CPU DETAIL: Write 0360: 0060000000000368 
DBG(50472518)> CPU CMD: Exec 0368: 00 60 0000 0000 0000   nop   
DBG(50472521)> CPU CMD: Exec 0369: 00 60 1712 0889 0000   (1712 TL of last event) -> (0889 event rec w5 TL value)      
DBG(50472522)> CPU DETAIL: Read R 1712: 1100000000000000 
DBG(50472523)> CPU DETAIL: Write 0889: 1100000000000000 
DBG(50472525)> CPU CMD: Exec 0370: 00 60 1733 0890 0000   clear (0890 event rec w6 sigma TL)   
DBG(50472526)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50472527)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50472529)> CPU CMD: Exec 0371: 00 60 1789 0367 0373   set 0367 inst to goto 0372, goto 0373: this makes setting (1712) only first  
DBG(50472530)> CPU DETAIL: Read R 1789: 0060000000000372 
DBG(50472531)> CPU DETAIL: Transfer to T 
DBG(50472531)> CPU DETAIL: Write 0367: 0060000000000372 
DBG(50472533)> CPU CMD: Exec 0373: 02 60 1731 0000 0000   reg1=0000 0011 1100 0000    
DBG(50472534)> CPU DETAIL: Read R 1731: 0000111100000000 
DBG(50472535)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000001111000000 
DBG(50472538)> CPU CMD: Exec 0374: 00 42 0885 0000 0000   Mask (0885 event w1) with reg1    
DBG(50472539)> CPU DETAIL: Read R 0885: 0100000000151113 
DBG(50472540)> CPU DETAIL: Result: 0000000000000000 
DBG(50472543)> CPU CMD: Exec 0375: 00 41 0885 0000 0885   set field TLTE to zero in (0885 event w1)   
DBG(50472544)> CPU DETAIL: Read R 0885: 0100000000151113 
DBG(50472545)> CPU DETAIL: Result: 0100000000151113 
DBG(50472546)> CPU DETAIL: Write 0885: 0100000000151113 
DBG(50472548)> CPU CMD: Exec 0376: 50 22 0889 0887 1697   FSUB (0889 event rec w5 TL) - (0887 event rec w3 TE) -> (1697 TLTE = TL-TE v 
DBG(50472549)> CPU DETAIL: Read R 0889: 1100000000000000 
DBG(50472550)> CPU DETAIL: Read S 0887: 0204444000000671 
DBG(50472551)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50472551)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0671 (444.400000)
DBG(50472552)> CPU DETAIL: Result: 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50472553)> CPU DETAIL: Shift : 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50472554)> CPU DETAIL: Write 1697: 0214444000000671 
DBG(50472556)> CPU CMD: Exec 0377: 50 28 0000 1733 0000   FSUB abs |REG1| - |zero| -> get the absulute value -> REG1   
DBG(50472557)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472558)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50472558)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50472559)> CPU DETAIL: Result: 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50472560)> CPU DETAIL: Shift : 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50472563)> CPU CMD: Exec 0378: 50 22 1790 0000 0000   FSUB  0.05 - REG1   
DBG(50472564)> CPU DETAIL: Read R 1790: 9805000000000000 
DBG(50472565)> CPU DETAIL: Float: REG1: 98 0 5 0000 0000 0000 (0.050000)
DBG(50472565)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0671 (444.400000)
DBG(50472566)> CPU DETAIL: Result: 02 1 4 4435 0000 0671 00000000 00000000 (-444.350000)
DBG(50472567)> CPU DETAIL: Shift : 02 1 4 4435 0000 0671 00000000 00000000 (-444.350000)
DBG(50472570)> CPU CMD: Exec 0379: 00 63 0384 0000 0000   if >0 goto 0384 (set report code to 9 because TL - TE < 0.5)   
DBG(50472571)> CPU DETAIL: REG1: 0214443500000671
DBG(50472571)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50472573)> CPU CMD: Exec 0380: 50 22 1697 1733 0000   FSUB (1697 TLTE) - zero: normalize   
DBG(50472574)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50472575)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472576)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50472576)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50472577)> CPU DETAIL: Result: 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50472578)> CPU DETAIL: Shift : 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50472581)> CPU CMD: Exec 0381: 00 63 0000 0000 0632   if <0 goto 0632   
DBG(50472582)> CPU DETAIL: REG1: 0214444000000671
DBG(50472582)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50472584)> CPU CMD: Exec 0632: 00 42 0886 1732 0000   mask (0886 w2 = xxxxxx  EEEEEEEEE R, EEE=event code, report code) with one - 
DBG(50472585)> CPU DETAIL: Read R 0886: 0000000249999990 
DBG(50472586)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50472587)> CPU DETAIL: Result: 0000000000000000 
DBG(50472590)> CPU CMD: Exec 0633: 00 72 1791 0000 0387   if report code <>9 goto 0387   
DBG(50472591)> CPU DETAIL: Read R 1791: 0000000000000009 
DBG(50472592)> CPU DETAIL: Diff: REG1: 0000000000000009
DBG(50472593)> CPU DETAIL: Transfer to T 
DBG(50472595)> CPU CMD: Exec 0387: 00 60 0000 0000 0389   goto 0389   
DBG(50472596)> CPU DETAIL: Transfer to T 
DBG(50472598)> CPU CMD: Exec 0389: 00 42 1697 1825 0000   mask (1697 TLTE = TL-TE value) sign digit    
DBG(50472599)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50472600)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50472601)> CPU DETAIL: Result: 0010000000000000 
DBG(50472604)> CPU CMD: Exec 0390: 00 72 1825 0000 0393   if <>negative goto 0393   
DBG(50472605)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50472606)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472609)> CPU CMD: Exec 0391: 50 30 1697 1833 1697   FADD spe (1697 TLTE = TL-TE value) + (-0.05)   
DBG(50472610)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50472611)> CPU DETAIL: Read S 1833: 9815000000000000 
DBG(50472612)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50472612)> CPU DETAIL:        REG2: 98 1 5 0000 0000 0000 (-0.050000)
DBG(50472613)> CPU DETAIL: Result: 02 1 4 4445 0000 0671 00000000 00000000 (-444.450000)
DBG(50472614)> CPU DETAIL: Shift : 02 1 4 4445 0000 0671 00000000 00000000 (-444.450000)
DBG(50472615)> CPU DETAIL: Write 1697: 0214444500000671 
DBG(50472617)> CPU CMD: Exec 0392: 00 60 1748 1726 0395   1.0 -> (1726 (*now* - TTTT)), goto 0395   
DBG(50472618)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50472619)> CPU DETAIL: Transfer to T 
DBG(50472619)> CPU DETAIL: Write 1726: 0001000000000000 
DBG(50472621)> CPU CMD: Exec 0395: 00 34 1792 1697 1697   FMUL Spe (0.1e-11) x (1697 TLTE = TL-TE value) -> (1697 TLTE = TL-TE value): 
DBG(50472622)> CPU DETAIL: Read R 1792: 8901000000000000 
DBG(50472623)> CPU DETAIL: Read S 1697: 0214444500000671 
DBG(50472624)> CPU DETAIL: Float: REG1: 89 0 1 0000 0000 0000 (0.000000)
DBG(50472624)> CPU DETAIL:        REG2: 02 1 4 4445 0000 0671 (-444.450000)
DBG(50472625)> CPU DETAIL: Result: 91 1 4 4445 0000 0671 00000000 00000000 (-0.000000)
DBG(50472626)> CPU DETAIL: Shift : 00 1 0 0000 0000 4444 50000067 10000000 (-0.000000)
DBG(50472627)> CPU DETAIL: Write 1697: 0010000000004444 
DBG(50472629)> CPU CMD: Exec 0396: 94 60 0000 0000 0000   shift to set as 000000 TLTE 000000   
DBG(50472630)> CPU DETAIL: Word Shift 6 digits left: REG1: 0000004444000000 
DBG(50472633)> CPU CMD: Exec 0397: 00 40 0885 0000 0885   + (0885 event w1)  -> (0885 event w1 = NNN xxx TLTE SCHEDL)    
DBG(50472634)> CPU DETAIL: Read R 0885: 0100000000151113 
DBG(50472635)> CPU DETAIL: Result: 0100004444151113 
DBG(50472636)> CPU DETAIL: Write 0885: 0100004444151113 
DBG(50472638)> CPU CMD: Exec 0398: 12 60 0891 0000 0000   get TSTS from (0891 event rec w7 = TSTS TTTT RS PR AA BB  AA=num of predeces 
DBG(50472639)> CPU DETAIL: Read R 0891: 0000000000000100 
DBG(50472640)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000000 
DBG(50472643)> CPU CMD: Exec 0399: 00 72 1733 0000 0497   if <> 0 goto 0497   
DBG(50472644)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50472645)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472648)> CPU CMD: Exec 0400: 00 60 0000 0000 0401   goto 0401   
DBG(50472649)> CPU DETAIL: Transfer to T 
DBG(50472651)> CPU CMD: Exec 0401: 00 54 0000 0000 0000   clear M8   
DBG(50472652)> CPU DETAIL: M4: 0010 
DBG(50472653)> CPU DETAIL: M6: 0000 
DBG(50472654)> CPU DETAIL: Clear M8
DBG(50472654)> CPU DETAIL: M8: 0000 
DBG(50472657)> CPU CMD: Exec 0402: 92 41 1695 1732 0000   set instr 0408 to ...   
DBG(50472658)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472659)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50472660)> CPU DETAIL: Result: 9999999999999999 
DBG(50472661)> CPU DETAIL: Word Shift 8 digits left: REG1: 9999999900000000 
DBG(50472664)> CPU CMD: Exec 0403: 00 40 1793 0000 0408   ... (0988 event first precedessor - 1 - (1695 num of words in successor list 
DBG(50472665)> CPU DETAIL: Read R 1793: 0060098808840000 
DBG(50472666)> CPU DETAIL: Result: 0060098708840000 
DBG(50472667)> CPU DETAIL: Write 0408: 0060098708840000 
DBG(50472669)> CPU CMD: Exec 0404: 00 72 1695 1733 0406   if (1695 num of words in successor list in event) <> 0 goto 0406   
DBG(50472670)> CPU DETAIL: Read R 1695: 0000000000000000 
DBG(50472671)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472672)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50472675)> CPU CMD: Exec 0405: 00 60 0000 0000 0411   goto 0411 (no successors)   
DBG(50472676)> CPU DETAIL: Transfer to T 
DBG(50472678)> CPU CMD: Exec 0411: 00 54 0000 0000 0000   clear M8   
DBG(50472679)> CPU DETAIL: M4: 0010 
DBG(50472680)> CPU DETAIL: M6: 0000 
DBG(50472681)> CPU DETAIL: Clear M8
DBG(50472681)> CPU DETAIL: M8: 0000 
DBG(50472684)> CPU CMD: Exec 0412: 92 41 1694 1732 0000   set instr 0420 to ...   
DBG(50472685)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472686)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50472687)> CPU DETAIL: Result: 0000000000000002 
DBG(50472688)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000200000000 
DBG(50472691)> CPU CMD: Exec 0413: 00 40 1799 0000 0420   ... (0892 event first predecessor + (1694 num of words in predecessors list  
DBG(50472692)> CPU DETAIL: Read R 1799: 0060089200000000 
DBG(50472693)> CPU DETAIL: Result: 0060089400000000 
DBG(50472694)> CPU DETAIL: Write 0420: 0060089400000000 
DBG(50472696)> CPU CMD: Exec 0414: 00 42 0408 1730 0000   mask (0408) to get field S -> REG1 (starts with (0884 end of read event bloc 
DBG(50472697)> CPU DETAIL: Read R 0408: 0060098708840000 
DBG(50472698)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50472699)> CPU DETAIL: Result: 0000000008840000 
DBG(50472702)> CPU CMD: Exec 0415: 00 40 0420 0000 0420   set instr 0420 to store to this addr   
DBG(50472703)> CPU DETAIL: Read R 0420: 0060089400000000 
DBG(50472704)> CPU DETAIL: Result: 0060089408840000 
DBG(50472705)> CPU DETAIL: Write 0420: 0060089408840000 
DBG(50472707)> CPU CMD: Exec 0416: 00 72 1694 1733 0418   if (1694 num of words in predecessor list in event) <> 0 goto 0418   
DBG(50472708)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472709)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50472710)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50472711)> CPU DETAIL: Transfer to T 
DBG(50472713)> CPU CMD: Exec 0418: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> field S   
DBG(50472714)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50472715)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50472718)> CPU CMD: Exec 0419: 00 40 1800 0000 0422   set instr 0422 to loop, incr M8, if M8<>(1694 num of words in predecessor li 
DBG(50472719)> CPU DETAIL: Read R 1800: 0858000100000420 
DBG(50472720)> CPU DETAIL: Result: 0858000100030420 
DBG(50472721)> CPU DETAIL: Write 0422: 0858000100030420 
DBG(50472723)> CPU CMD: Exec 0420: 00 60 0894 0884 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50472724)> CPU DETAIL: Read R 0894: 0000000000033666 
DBG(50472725)> CPU DETAIL: Write 0884: 0000000000033666 
DBG(50472727)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50472728)> CPU DETAIL: Read R 0420: 0060089408840000 
DBG(50472729)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472730)> CPU DETAIL: Result: 0060089308830000 
DBG(50472731)> CPU DETAIL: Write 0420: 0060089308830000 
DBG(50472733)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50472734)> CPU DETAIL: M8: 0001 
DBG(50472735)> CPU DETAIL: Transfer to T 
DBG(50472737)> CPU CMD: Exec 0420: 00 60 0893 0883 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50472738)> CPU DETAIL: Read R 0893: 0000000000033555 
DBG(50472739)> CPU DETAIL: Write 0883: 0000000000033555 
DBG(50472741)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50472742)> CPU DETAIL: Read R 0420: 0060089308830000 
DBG(50472743)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472744)> CPU DETAIL: Result: 0060089208820000 
DBG(50472745)> CPU DETAIL: Write 0420: 0060089208820000 
DBG(50472747)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50472748)> CPU DETAIL: M8: 0002 
DBG(50472749)> CPU DETAIL: Transfer to T 
DBG(50472751)> CPU CMD: Exec 0420: 00 60 0892 0882 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50472752)> CPU DETAIL: Read R 0892: 0000000242009990 
DBG(50472753)> CPU DETAIL: Write 0882: 0000000242009990 
DBG(50472755)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50472756)> CPU DETAIL: Read R 0420: 0060089208820000 
DBG(50472757)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472758)> CPU DETAIL: Result: 0060089108810000 
DBG(50472759)> CPU DETAIL: Write 0420: 0060089108810000 
DBG(50472761)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50472762)> CPU DETAIL: M8: 0003 
DBG(50472765)> CPU CMD: Exec 0423: 00 54 0000 0000 0000   clear M8   
DBG(50472766)> CPU DETAIL: M4: 0010 
DBG(50472767)> CPU DETAIL: M6: 0000 
DBG(50472768)> CPU DETAIL: Clear M8
DBG(50472768)> CPU DETAIL: M8: 0000 
DBG(50472771)> CPU CMD: Exec 0424: 00 42 0420 1730 0000   set instr 0426 to ...   
DBG(50472772)> CPU DETAIL: Read R 0420: 0060089108810000 
DBG(50472773)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50472774)> CPU DETAIL: Result: 0000000008810000 
DBG(50472777)> CPU CMD: Exec 0425: 00 40 1801 0000 0426   ... (0891 event rec w7) -> (field R of instr 0420 = 0881 position on end of  
DBG(50472778)> CPU DETAIL: Read R 1801: 0060089100000000 
DBG(50472779)> CPU DETAIL: Result: 0060089108810000 
DBG(50472780)> CPU DETAIL: Write 0426: 0060089108810000 
DBG(50472782)> CPU CMD: Exec 0426: 00 60 0891 0881 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472783)> CPU DETAIL: Read R 0891: 0000000000000100 
DBG(50472784)> CPU DETAIL: Write 0881: 0000000000000100 
DBG(50472786)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472787)> CPU DETAIL: Read R 0426: 0060089108810000 
DBG(50472788)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472789)> CPU DETAIL: Result: 0060089008800000 
DBG(50472790)> CPU DETAIL: Write 0426: 0060089008800000 
DBG(50472792)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472793)> CPU DETAIL: M8: 0001 
DBG(50472794)> CPU DETAIL: Transfer to T 
DBG(50472796)> CPU CMD: Exec 0426: 00 60 0890 0880 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472797)> CPU DETAIL: Read R 0890: 0000000000000000 
DBG(50472798)> CPU DETAIL: Write 0880: 0000000000000000 
DBG(50472800)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472801)> CPU DETAIL: Read R 0426: 0060089008800000 
DBG(50472802)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472803)> CPU DETAIL: Result: 0060088908790000 
DBG(50472804)> CPU DETAIL: Write 0426: 0060088908790000 
DBG(50472806)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472807)> CPU DETAIL: M8: 0002 
DBG(50472808)> CPU DETAIL: Transfer to T 
DBG(50472810)> CPU CMD: Exec 0426: 00 60 0889 0879 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472811)> CPU DETAIL: Read R 0889: 1100000000000000 
DBG(50472812)> CPU DETAIL: Write 0879: 1100000000000000 
DBG(50472814)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472815)> CPU DETAIL: Read R 0426: 0060088908790000 
DBG(50472816)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472817)> CPU DETAIL: Result: 0060088808780000 
DBG(50472818)> CPU DETAIL: Write 0426: 0060088808780000 
DBG(50472820)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472821)> CPU DETAIL: M8: 0003 
DBG(50472822)> CPU DETAIL: Transfer to T 
DBG(50472824)> CPU CMD: Exec 0426: 00 60 0888 0878 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472825)> CPU DETAIL: Read R 0888: 0204458700760615 
DBG(50472826)> CPU DETAIL: Write 0878: 0204458700760615 
DBG(50472828)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472829)> CPU DETAIL: Read R 0426: 0060088808780000 
DBG(50472830)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472831)> CPU DETAIL: Result: 0060088708770000 
DBG(50472832)> CPU DETAIL: Write 0426: 0060088708770000 
DBG(50472834)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472835)> CPU DETAIL: M8: 0004 
DBG(50472836)> CPU DETAIL: Transfer to T 
DBG(50472838)> CPU CMD: Exec 0426: 00 60 0887 0877 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472839)> CPU DETAIL: Read R 0887: 0204444000000671 
DBG(50472840)> CPU DETAIL: Write 0877: 0204444000000671 
DBG(50472842)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472843)> CPU DETAIL: Read R 0426: 0060088708770000 
DBG(50472844)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472845)> CPU DETAIL: Result: 0060088608760000 
DBG(50472846)> CPU DETAIL: Write 0426: 0060088608760000 
DBG(50472848)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472849)> CPU DETAIL: M8: 0005 
DBG(50472850)> CPU DETAIL: Transfer to T 
DBG(50472852)> CPU CMD: Exec 0426: 00 60 0886 0876 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472853)> CPU DETAIL: Read R 0886: 0000000249999990 
DBG(50472854)> CPU DETAIL: Write 0876: 0000000249999990 
DBG(50472856)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472857)> CPU DETAIL: Read R 0426: 0060088608760000 
DBG(50472858)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472859)> CPU DETAIL: Result: 0060088508750000 
DBG(50472860)> CPU DETAIL: Write 0426: 0060088508750000 
DBG(50472862)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472863)> CPU DETAIL: M8: 0006 
DBG(50472864)> CPU DETAIL: Transfer to T 
DBG(50472866)> CPU CMD: Exec 0426: 00 60 0885 0875 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50472867)> CPU DETAIL: Read R 0885: 0100004444151113 
DBG(50472868)> CPU DETAIL: Write 0875: 0100004444151113 
DBG(50472870)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50472871)> CPU DETAIL: Read R 0426: 0060088508750000 
DBG(50472872)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50472873)> CPU DETAIL: Result: 0060088408740000 
DBG(50472874)> CPU DETAIL: Write 0426: 0060088408740000 
DBG(50472876)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50472877)> CPU DETAIL: M8: 0007 
DBG(50472880)> CPU CMD: Exec 0429: 00 40 1727 1732 1727   incr (1727 number of events stored in output tape)   
DBG(50472881)> CPU DETAIL: Read R 1727: 0000000000000000 
DBG(50472882)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50472883)> CPU DETAIL: Result: 0000000000000001 
DBG(50472884)> CPU DETAIL: Write 1727: 0000000000000001 
DBG(50472886)> CPU CMD: Exec 0430: 00 42 0426 1730 0000   mask (0426) to get last addr used in event block, that marks start of block  
DBG(50472887)> CPU DETAIL: Read R 0426: 0060088408740000 
DBG(50472888)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50472889)> CPU DETAIL: Result: 0000000008740000 
DBG(50472892)> CPU CMD: Exec 0431: 96 40 1759 0000 0439   +8 -> (0439)   
DBG(50472893)> CPU DETAIL: Read R 1759: 0000000000080000 
DBG(50472894)> CPU DETAIL: Result: 0000000008820000 
DBG(50472895)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000088200000000 
DBG(50472896)> CPU DETAIL: Write 0439: 0000088200000000 
DBG(50472898)> CPU CMD: Exec 0432: 00 40 1834 0000 0438   set instr 0438 to ...   
DBG(50472899)> CPU DETAIL: Read R 1834: 0042000017640000 
DBG(50472900)> CPU DETAIL: Result: 0042088217640000 
DBG(50472901)> CPU DETAIL: Write 0438: 0042088217640000 
DBG(50472903)> CPU CMD: Exec 0433: 08 42 0000 1731 0000   ...   
DBG(50472904)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50472905)> CPU DETAIL: Result: 0000088200000000 
DBG(50472906)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000882 
DBG(50472909)> CPU CMD: Exec 0434: 00 40 0438 0000 0438   ... mask event code for first successor/predecessor    
DBG(50472910)> CPU DETAIL: Read R 0438: 0042088217640000 
DBG(50472911)> CPU DETAIL: Result: 0042088217640882 
DBG(50472912)> CPU DETAIL: Write 0438: 0042088217640882 
DBG(50472914)> CPU CMD: Exec 0435: 00 40 0439 1835 0439   set instr 0439 ...   
DBG(50472915)> CPU DETAIL: Read R 0439: 0000088200000000 
DBG(50472916)> CPU DETAIL: Read S 1835: 0040000017260000 
DBG(50472917)> CPU DETAIL: Result: 0040088217260000 
DBG(50472918)> CPU DETAIL: Write 0439: 0040088217260000 
DBG(50472920)> CPU CMD: Exec 0436: 08 42 0000 1731 0000   ...   
DBG(50472921)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50472922)> CPU DETAIL: Result: 0000088200000000 
DBG(50472923)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000882 
DBG(50472926)> CPU CMD: Exec 0437: 00 40 0439 0000 0439   ... (pred/succ event code) -> (1726)   
DBG(50472927)> CPU DETAIL: Read R 0439: 0040088217260000 
DBG(50472928)> CPU DETAIL: Result: 0040088217260882 
DBG(50472929)> CPU DETAIL: Write 0439: 0040088217260882 
DBG(50472931)> CPU CMD: Exec 0438: 00 42 0882 1764 0882   mask (succ/pred event code) with event code, store back at same addr   
DBG(50472932)> CPU DETAIL: Read R 0882: 0000000242009990 
DBG(50472933)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472934)> CPU DETAIL: Result: 0000000242009990 
DBG(50472935)> CPU DETAIL: Write 0882: 0000000242009990 
DBG(50472937)> CPU CMD: Exec 0439: 00 40 0882 1726 0882   add (1726 (*now* - TTTT) as 0 NNNN 0..0) to (succ/pred event code)   
DBG(50472938)> CPU DETAIL: Read R 0882: 0000000242009990 
DBG(50472939)> CPU DETAIL: Read S 1726: 0001000000000000 
DBG(50472940)> CPU DETAIL: Result: 0001000242009990 
DBG(50472941)> CPU DETAIL: Write 0882: 0001000242009990 
DBG(50472943)> CPU CMD: Exec 0440: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 event rec len)   
DBG(50472944)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50472945)> CPU DETAIL: Read S 1704: 0000000000000000 
DBG(50472946)> CPU DETAIL: Result: 0000000000000010 
DBG(50472947)> CPU DETAIL: Write 1704: 0000000000000010 
DBG(50472949)> CPU CMD: Exec 0441: 96 60 1696 0000 0000   (1696 event rec len NNN) -> REG1   
DBG(50472950)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50472951)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(50472954)> CPU CMD: Exec 0442: 00 41 1793 0000 1793   sub (1793 (0988)->(0884)) to (1793 (0988)->(0884-NNN))   
DBG(50472955)> CPU DETAIL: Read R 1793: 0060098808840000 
DBG(50472956)> CPU DETAIL: Result: 0060098808740000 
DBG(50472957)> CPU DETAIL: Write 1793: 0060098808740000 
DBG(50472959)> CPU CMD: Exec 0443: 00 60 0000 0000 0146   goto 0146 check if output buf is full   
DBG(50472960)> CPU DETAIL: Transfer to T 
DBG(50472962)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50472963)> CPU DETAIL: Read R 1705: 0000000000000000 
DBG(50472964)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50472965)> CPU DETAIL: Result: 0000000000030000 
DBG(50472966)> CPU DETAIL: Write 1705: 0000000000030000 
DBG(50472968)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50472969)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50472970)> CPU DETAIL: Read S 1705: 0000000000030000 
DBG(50472971)> CPU DETAIL: Result: 0000000005970000 
DBG(50472974)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50472975)> CPU DETAIL: REG1: 0000000005970000
DBG(50472975)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50472977)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50472978)> CPU DETAIL: Read R 1765: 0060000000000297 
DBG(50472979)> CPU DETAIL: Write 0170: 0060000000000297 
DBG(50472981)> CPU CMD: Exec 0157: 00 42 0886 1764 1084   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50472982)> CPU DETAIL: Read R 0886: 0000000249999990 
DBG(50472983)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50472984)> CPU DETAIL: Result: 0000000249999990 
DBG(50472985)> CPU DETAIL: Write 1084: 0000000249999990 
DBG(50472987)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50472988)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50472989)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50472992)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50472993)> CPU DETAIL: Read R 0157: 0042088617641084 
DBG(50472994)> CPU DETAIL: Result: 0042088617641087 
DBG(50472995)> CPU DETAIL: Write 0157: 0042088617641087 
DBG(50472997)> CPU CMD: Exec 0160: 00 60 0000 0000 0166   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50472998)> CPU DETAIL: Transfer to T 
DBG(50473000)> CPU CMD: Exec 0166: 00 60 0889 1085 0000   (event rec w3) -> (1085)   
DBG(50473001)> CPU DETAIL: Read R 0889: 1100000000000000 
DBG(50473002)> CPU DETAIL: Write 1085: 1100000000000000 
DBG(50473004)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50473005)> CPU DETAIL: Read R 0166: 0060088910850000 
DBG(50473006)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50473007)> CPU DETAIL: Result: 0060088910880000 
DBG(50473008)> CPU DETAIL: Write 0166: 0060088910880000 
DBG(50473010)> CPU CMD: Exec 0168: 00 60 0890 1086 0000   (event rec w4) -> (1086)   
DBG(50473011)> CPU DETAIL: Read R 0890: 0000000000000000 
DBG(50473012)> CPU DETAIL: Write 1086: 0000000000000000 
DBG(50473014)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50473015)> CPU DETAIL: Read R 0168: 0060089010860000 
DBG(50473016)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50473017)> CPU DETAIL: Result: 0060089010890000 
DBG(50473018)> CPU DETAIL: Write 0168: 0060089010890000 
DBG(50473020)> CPU CMD: Exec 0170: 00 60 0000 0000 0297   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50473021)> CPU DETAIL: Transfer to T 
DBG(50473023)> CPU CMD: Exec 0297: 00 41 1691 1692 0000   (1691 number of words in input block) - (1692 number of words already read)  
DBG(50473024)> CPU DETAIL: Read R 1691: 0000000000000036 
DBG(50473025)> CPU DETAIL: Read S 1692: 0000000000000011 
DBG(50473026)> CPU DETAIL: Result: 0000000000000025 
DBG(50473029)> CPU CMD: Exec 0298: 00 63 0303 0444 0000   if >0 goto 0303, =0 goto 0444 (if all events from event block processed)    
DBG(50473030)> CPU DETAIL: REG1: 0000000000000025
DBG(50473030)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50473032)> CPU CMD: Exec 0303: 00 54 0000 0000 0000   clear M8   
DBG(50473033)> CPU DETAIL: M4: 0010 
DBG(50473034)> CPU DETAIL: M6: 0000 
DBG(50473035)> CPU DETAIL: Clear M8
DBG(50473035)> CPU DETAIL: M8: 0000 
DBG(50473038)> CPU CMD: Exec 0304: 00 60 0000 0000 0306   (1691 number of words in block) -> REG1   
DBG(50473039)> CPU DETAIL: Transfer to T 
DBG(50473041)> CPU CMD: Exec 0306: 00 70 0873 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473042)> CPU DETAIL: Read R 0873: 0000000000033666 
DBG(50473043)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473044)> CPU DETAIL: Diff: REG1: 9999998888922556
DBG(50473047)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473048)> CPU DETAIL: Read R 0306: 0070087317640310 
DBG(50473049)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473050)> CPU DETAIL: Result: 0070087217640310 
DBG(50473051)> CPU DETAIL: Write 0306: 0070087217640310 
DBG(50473053)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473054)> CPU DETAIL: M8: 0001 
DBG(50473055)> CPU DETAIL: Transfer to T 
DBG(50473057)> CPU CMD: Exec 0306: 00 70 0872 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473058)> CPU DETAIL: Read R 0872: 0000000000033555 
DBG(50473059)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473060)> CPU DETAIL: Diff: REG1: 9999998888922445
DBG(50473063)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473064)> CPU DETAIL: Read R 0306: 0070087217640310 
DBG(50473065)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473066)> CPU DETAIL: Result: 0070087117640310 
DBG(50473067)> CPU DETAIL: Write 0306: 0070087117640310 
DBG(50473069)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473070)> CPU DETAIL: M8: 0002 
DBG(50473071)> CPU DETAIL: Transfer to T 
DBG(50473073)> CPU CMD: Exec 0306: 00 70 0871 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473074)> CPU DETAIL: Read R 0871: 0000000249999990 
DBG(50473075)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473076)> CPU DETAIL: Diff: REG1: 9999999138888880
DBG(50473079)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473080)> CPU DETAIL: Read R 0306: 0070087117640310 
DBG(50473081)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473082)> CPU DETAIL: Result: 0070087017640310 
DBG(50473083)> CPU DETAIL: Write 0306: 0070087017640310 
DBG(50473085)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473086)> CPU DETAIL: M8: 0003 
DBG(50473087)> CPU DETAIL: Transfer to T 
DBG(50473089)> CPU CMD: Exec 0306: 00 70 0870 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473090)> CPU DETAIL: Read R 0870: 0204458700760279 
DBG(50473091)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473092)> CPU DETAIL: Diff: REG1: 0204457589649169
DBG(50473095)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473096)> CPU DETAIL: Read R 0306: 0070087017640310 
DBG(50473097)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473098)> CPU DETAIL: Result: 0070086917640310 
DBG(50473099)> CPU DETAIL: Write 0306: 0070086917640310 
DBG(50473101)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473102)> CPU DETAIL: M8: 0004 
DBG(50473103)> CPU DETAIL: Transfer to T 
DBG(50473105)> CPU CMD: Exec 0306: 00 70 0869 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473106)> CPU DETAIL: Read R 0869: 0204444000000335 
DBG(50473107)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473108)> CPU DETAIL: Diff: REG1: 0204442888889225
DBG(50473111)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473112)> CPU DETAIL: Read R 0306: 0070086917640310 
DBG(50473113)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473114)> CPU DETAIL: Result: 0070086817640310 
DBG(50473115)> CPU DETAIL: Write 0306: 0070086817640310 
DBG(50473117)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473118)> CPU DETAIL: M8: 0005 
DBG(50473119)> CPU DETAIL: Transfer to T 
DBG(50473121)> CPU CMD: Exec 0306: 00 70 0868 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473122)> CPU DETAIL: Read R 0868: 0000000241000000 
DBG(50473123)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473124)> CPU DETAIL: Diff: REG1: 9999999129888890
DBG(50473127)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473128)> CPU DETAIL: Read R 0306: 0070086817640310 
DBG(50473129)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473130)> CPU DETAIL: Result: 0070086717640310 
DBG(50473131)> CPU DETAIL: Write 0306: 0070086717640310 
DBG(50473133)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473134)> CPU DETAIL: M8: 0006 
DBG(50473135)> CPU DETAIL: Transfer to T 
DBG(50473137)> CPU CMD: Exec 0306: 00 70 0867 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473138)> CPU DETAIL: Read R 0867: 0000000000000101 
DBG(50473139)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473140)> CPU DETAIL: Diff: REG1: 9999998888888991
DBG(50473143)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473144)> CPU DETAIL: Read R 0306: 0070086717640310 
DBG(50473145)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473146)> CPU DETAIL: Result: 0070086617640310 
DBG(50473147)> CPU DETAIL: Write 0306: 0070086617640310 
DBG(50473149)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473150)> CPU DETAIL: M8: 0007 
DBG(50473151)> CPU DETAIL: Transfer to T 
DBG(50473153)> CPU CMD: Exec 0306: 00 70 0866 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473154)> CPU DETAIL: Read R 0866: 0000000000000000 
DBG(50473155)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473156)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50473159)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473160)> CPU DETAIL: Read R 0306: 0070086617640310 
DBG(50473161)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473162)> CPU DETAIL: Result: 0070086517640310 
DBG(50473163)> CPU DETAIL: Write 0306: 0070086517640310 
DBG(50473165)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473166)> CPU DETAIL: M8: 0008 
DBG(50473167)> CPU DETAIL: Transfer to T 
DBG(50473169)> CPU CMD: Exec 0306: 00 70 0865 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473170)> CPU DETAIL: Read R 0865: 0000000000000000 
DBG(50473171)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473172)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50473175)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473176)> CPU DETAIL: Read R 0306: 0070086517640310 
DBG(50473177)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473178)> CPU DETAIL: Result: 0070086417640310 
DBG(50473179)> CPU DETAIL: Write 0306: 0070086417640310 
DBG(50473181)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473182)> CPU DETAIL: M8: 0009 
DBG(50473183)> CPU DETAIL: Transfer to T 
DBG(50473185)> CPU CMD: Exec 0306: 00 70 0864 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473186)> CPU DETAIL: Read R 0864: 0204458700760279 
DBG(50473187)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473188)> CPU DETAIL: Diff: REG1: 0204457589649169
DBG(50473191)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473192)> CPU DETAIL: Read R 0306: 0070086417640310 
DBG(50473193)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473194)> CPU DETAIL: Result: 0070086317640310 
DBG(50473195)> CPU DETAIL: Write 0306: 0070086317640310 
DBG(50473197)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473198)> CPU DETAIL: M8: 0010 
DBG(50473199)> CPU DETAIL: Transfer to T 
DBG(50473201)> CPU CMD: Exec 0306: 00 70 0863 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473202)> CPU DETAIL: Read R 0863: 0204444000000335 
DBG(50473203)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473204)> CPU DETAIL: Diff: REG1: 0204442888889225
DBG(50473207)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473208)> CPU DETAIL: Read R 0306: 0070086317640310 
DBG(50473209)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473210)> CPU DETAIL: Result: 0070086217640310 
DBG(50473211)> CPU DETAIL: Write 0306: 0070086217640310 
DBG(50473213)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473214)> CPU DETAIL: M8: 0011 
DBG(50473215)> CPU DETAIL: Transfer to T 
DBG(50473217)> CPU CMD: Exec 0306: 00 70 0862 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473218)> CPU DETAIL: Read R 0862: 0000000242009990 
DBG(50473219)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473220)> CPU DETAIL: Diff: REG1: 9999999130898880
DBG(50473223)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473224)> CPU DETAIL: Read R 0306: 0070086217640310 
DBG(50473225)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473226)> CPU DETAIL: Result: 0070086117640310 
DBG(50473227)> CPU DETAIL: Write 0306: 0070086117640310 
DBG(50473229)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473230)> CPU DETAIL: M8: 0012 
DBG(50473231)> CPU DETAIL: Transfer to T 
DBG(50473233)> CPU CMD: Exec 0306: 00 70 0861 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473234)> CPU DETAIL: Read R 0861: 0130000000151113 
DBG(50473235)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473236)> CPU DETAIL: Diff: REG1: 0129998889040003
DBG(50473239)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50473240)> CPU DETAIL: Read R 0306: 0070086117640310 
DBG(50473241)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473242)> CPU DETAIL: Result: 0070086017640310 
DBG(50473243)> CPU DETAIL: Write 0306: 0070086017640310 
DBG(50473245)> CPU CMD: Exec 0308: 08 58 0001 0025 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50473246)> CPU DETAIL: M8: 0013 
DBG(50473247)> CPU DETAIL: Transfer to T 
DBG(50473249)> CPU CMD: Exec 0306: 00 70 0860 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50473250)> CPU DETAIL: Read R 0860: 0000001111111110 
DBG(50473251)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473252)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50473253)> CPU DETAIL: Transfer to T 
DBG(50473255)> CPU CMD: Exec 0310: 00 42 0306 1731 0000   get in field R the addr of event rec start    
DBG(50473256)> CPU DETAIL: Read R 0306: 0070086017640310 
DBG(50473257)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50473258)> CPU DETAIL: Result: 0000086000000000 
DBG(50473261)> CPU CMD: Exec 0311: 00 40 0000 1777 1711   incr field R -> (1711 addr of event rec word 1)   
DBG(50473262)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473263)> CPU DETAIL: Result: 0000086100000000 
DBG(50473264)> CPU DETAIL: Write 1711: 0000086100000000 
DBG(50473266)> CPU CMD: Exec 0312: 00 41 0306 1777 0306   incr field R in instr 0306, to allow locate next event   
DBG(50473267)> CPU DETAIL: Read R 0306: 0070086017640310 
DBG(50473268)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473269)> CPU DETAIL: Result: 0070085917640310 
DBG(50473270)> CPU DETAIL: Write 0306: 0070085917640310 
DBG(50473272)> CPU CMD: Exec 0313: 00 60 1761 0304 0000   set inst 0304 to skip loop init in 0305   
DBG(50473273)> CPU DETAIL: Read R 1761: 0060000000000306 
DBG(50473274)> CPU DETAIL: Write 0304: 0060000000000306 
DBG(50473276)> CPU CMD: Exec 0314: 00 60 0000 0000 0000      
DBG(50473279)> CPU CMD: Exec 0315: 00 40 1711 1779 0000   incr field R + 6 -> REG1=addr of event rec word 7   
DBG(50473280)> CPU DETAIL: Read R 1711: 0000086100000000 
DBG(50473281)> CPU DETAIL: Read S 1779: 0000000600000000 
DBG(50473282)> CPU DETAIL: Result: 0000086700000000 
DBG(50473285)> CPU CMD: Exec 0316: 00 40 1780 0000 0317   set instr to ...   
DBG(50473286)> CPU DETAIL: Read R 1780: 0060000016930000 
DBG(50473287)> CPU DETAIL: Result: 0060086716930000 
DBG(50473288)> CPU DETAIL: Write 0317: 0060086716930000 
DBG(50473290)> CPU CMD: Exec 0317: 00 60 0867 1693 0000   ... (addr of event rec word 7) -> (1693 event rec word 7)   
DBG(50473291)> CPU DETAIL: Read R 0867: 0000000000000101 
DBG(50473292)> CPU DETAIL: Write 1693: 0000000000000101 
DBG(50473294)> CPU CMD: Exec 0318: 02 42 1693 1734 1694   mask (1693 event rec word 7) with 0..0 1100 -> (1694 num of predecesors in e 
DBG(50473295)> CPU DETAIL: Read R 1693: 0000000000000101 
DBG(50473296)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50473297)> CPU DETAIL: Result: 0000000000000100 
DBG(50473298)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(50473299)> CPU DETAIL: Write 1694: 0000000000000001 
DBG(50473301)> CPU CMD: Exec 0319: 00 42 1693 1735 1695   mask (1693 event rec word 7) with 0..0 0011 -> (1695 num of successors in ev 
DBG(50473302)> CPU DETAIL: Read R 1693: 0000000000000101 
DBG(50473303)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50473304)> CPU DETAIL: Result: 0000000000000001 
DBG(50473305)> CPU DETAIL: Write 1695: 0000000000000001 
DBG(50473307)> CPU CMD: Exec 0320: 96 34 1694 1747 0000   FMUL x 3   
DBG(50473308)> CPU DETAIL: Read R 1694: 0000000000000001 
DBG(50473309)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50473310)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50473310)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50473311)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50473312)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50473315)> CPU CMD: Exec 0321: 00 42 0000 1746 1694   (1694 = num of words in predecessor list in event = 3x num of predecesors in 
DBG(50473316)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50473317)> CPU DETAIL: Result: 0000000000000003 
DBG(50473318)> CPU DETAIL: Write 1694: 0000000000000003 
DBG(50473320)> CPU CMD: Exec 0322: 96 34 1695 1747 0000   FMUL x3   
DBG(50473321)> CPU DETAIL: Read R 1695: 0000000000000001 
DBG(50473322)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50473323)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50473323)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50473324)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50473325)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50473328)> CPU CMD: Exec 0323: 00 42 0000 1746 1695   (1695 = num of words in successors list in event = 3x num of successors in e 
DBG(50473329)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50473330)> CPU DETAIL: Result: 0000000000000003 
DBG(50473331)> CPU DETAIL: Write 1695: 0000000000000003 
DBG(50473333)> CPU CMD: Exec 0324: 00 60 1736 1696 0000   7 -> (1696 event rec len)   
DBG(50473334)> CPU DETAIL: Read R 1736: 0000000000000007 
DBG(50473335)> CPU DETAIL: Write 1696: 0000000000000007 
DBG(50473337)> CPU CMD: Exec 0325: 00 40 1694 1695 0000   + words un predecessors + words in successors   
DBG(50473338)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50473339)> CPU DETAIL: Read S 1695: 0000000000000003 
DBG(50473340)> CPU DETAIL: Result: 0000000000000006 
DBG(50473343)> CPU CMD: Exec 0326: 00 40 1696 0000 1696   -> (1696 event rec len)   
DBG(50473344)> CPU DETAIL: Read R 1696: 0000000000000007 
DBG(50473345)> CPU DETAIL: Result: 0000000000000013 
DBG(50473346)> CPU DETAIL: Write 1696: 0000000000000013 
DBG(50473348)> CPU CMD: Exec 0327: 00 40 1692 0000 1692   add it to (1692 number of words already processed from block read)   
DBG(50473349)> CPU DETAIL: Read R 1692: 0000000000000011 
DBG(50473350)> CPU DETAIL: Result: 0000000000000024 
DBG(50473351)> CPU DETAIL: Write 1692: 0000000000000024 
DBG(50473353)> CPU CMD: Exec 0328: 00 40 1732 1692 1692   add one to (1692 number of words already processed from block read)   
DBG(50473354)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50473355)> CPU DETAIL: Read S 1692: 0000000000000024 
DBG(50473356)> CPU DETAIL: Result: 0000000000000025 
DBG(50473357)> CPU DETAIL: Write 1692: 0000000000000025 
DBG(50473359)> CPU CMD: Exec 0329: 96 40 1696 1732 0000   REG1 field S = 1 + (1696 event rec len)   
DBG(50473360)> CPU DETAIL: Read R 1696: 0000000000000013 
DBG(50473361)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50473362)> CPU DETAIL: Result: 0000000000000014 
DBG(50473363)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000140000 
DBG(50473366)> CPU CMD: Exec 0330: 00 41 0308 0000 0308   decr REG1 from loop end value for M8 at 0308   
DBG(50473367)> CPU DETAIL: Read R 0308: 0858000100250306 
DBG(50473368)> CPU DETAIL: Result: 0858000100110306 
DBG(50473369)> CPU DETAIL: Write 0308: 0858000100110306 
DBG(50473371)> CPU CMD: Exec 0331: 00 51 0000 0000 0000   clear M4   
DBG(50473372)> CPU DETAIL: Clear M4
DBG(50473372)> CPU DETAIL: M4: 0000 
DBG(50473373)> CPU DETAIL: M6: 0000 
DBG(50473374)> CPU DETAIL: M8: 0013 
DBG(50473377)> CPU CMD: Exec 0332: 00 40 1782 1711 0333   set instr to ...   
DBG(50473378)> CPU DETAIL: Read R 1782: 0060400008850000 
DBG(50473379)> CPU DETAIL: Read S 1711: 0000086100000000 
DBG(50473380)> CPU DETAIL: Result: 0060486108850000 
DBG(50473381)> CPU DETAIL: Write 0333: 0060486108850000 
DBG(50473383)> CPU CMD: Exec 0333: 00 60 4861 0885 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473384)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50473384)> CPU DETAIL: Read R 0861: 0130000000151113 
DBG(50473385)> CPU DETAIL: Write 0885: 0130000000151113 
DBG(50473387)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473388)> CPU DETAIL: Read R 0333: 0060486108850000 
DBG(50473389)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473390)> CPU DETAIL: Result: 0060486108860000 
DBG(50473391)> CPU DETAIL: Write 0333: 0060486108860000 
DBG(50473393)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473394)> CPU DETAIL: M4: 0001 
DBG(50473395)> CPU DETAIL: Transfer to T 
DBG(50473397)> CPU CMD: Exec 0333: 00 60 4861 0886 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473398)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(50473398)> CPU DETAIL: Read R 0862: 0000000242009990 
DBG(50473399)> CPU DETAIL: Write 0886: 0000000242009990 
DBG(50473401)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473402)> CPU DETAIL: Read R 0333: 0060486108860000 
DBG(50473403)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473404)> CPU DETAIL: Result: 0060486108870000 
DBG(50473405)> CPU DETAIL: Write 0333: 0060486108870000 
DBG(50473407)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473408)> CPU DETAIL: M4: 0002 
DBG(50473409)> CPU DETAIL: Transfer to T 
DBG(50473411)> CPU CMD: Exec 0333: 00 60 4861 0887 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473412)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(50473412)> CPU DETAIL: Read R 0863: 0204444000000335 
DBG(50473413)> CPU DETAIL: Write 0887: 0204444000000335 
DBG(50473415)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473416)> CPU DETAIL: Read R 0333: 0060486108870000 
DBG(50473417)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473418)> CPU DETAIL: Result: 0060486108880000 
DBG(50473419)> CPU DETAIL: Write 0333: 0060486108880000 
DBG(50473421)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473422)> CPU DETAIL: M4: 0003 
DBG(50473423)> CPU DETAIL: Transfer to T 
DBG(50473425)> CPU CMD: Exec 0333: 00 60 4861 0888 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473426)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(50473426)> CPU DETAIL: Read R 0864: 0204458700760279 
DBG(50473427)> CPU DETAIL: Write 0888: 0204458700760279 
DBG(50473429)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473430)> CPU DETAIL: Read R 0333: 0060486108880000 
DBG(50473431)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473432)> CPU DETAIL: Result: 0060486108890000 
DBG(50473433)> CPU DETAIL: Write 0333: 0060486108890000 
DBG(50473435)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473436)> CPU DETAIL: M4: 0004 
DBG(50473437)> CPU DETAIL: Transfer to T 
DBG(50473439)> CPU CMD: Exec 0333: 00 60 4861 0889 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473440)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(50473440)> CPU DETAIL: Read R 0865: 0000000000000000 
DBG(50473441)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50473443)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473444)> CPU DETAIL: Read R 0333: 0060486108890000 
DBG(50473445)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473446)> CPU DETAIL: Result: 0060486108900000 
DBG(50473447)> CPU DETAIL: Write 0333: 0060486108900000 
DBG(50473449)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473450)> CPU DETAIL: M4: 0005 
DBG(50473451)> CPU DETAIL: Transfer to T 
DBG(50473453)> CPU CMD: Exec 0333: 00 60 4861 0890 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473454)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(50473454)> CPU DETAIL: Read R 0866: 0000000000000000 
DBG(50473455)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50473457)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473458)> CPU DETAIL: Read R 0333: 0060486108900000 
DBG(50473459)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473460)> CPU DETAIL: Result: 0060486108910000 
DBG(50473461)> CPU DETAIL: Write 0333: 0060486108910000 
DBG(50473463)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473464)> CPU DETAIL: M4: 0006 
DBG(50473465)> CPU DETAIL: Transfer to T 
DBG(50473467)> CPU CMD: Exec 0333: 00 60 4861 0891 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50473468)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(50473468)> CPU DETAIL: Read R 0867: 0000000000000101 
DBG(50473469)> CPU DETAIL: Write 0891: 0000000000000101 
DBG(50473471)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50473472)> CPU DETAIL: Read R 0333: 0060486108910000 
DBG(50473473)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473474)> CPU DETAIL: Result: 0060486108920000 
DBG(50473475)> CPU DETAIL: Write 0333: 0060486108920000 
DBG(50473477)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50473478)> CPU DETAIL: M4: 0007 
DBG(50473481)> CPU CMD: Exec 0336: 00 42 0333 1731 0000   get field_r from 0333 = last source addr from block rec -> REG1 (in form M4  
DBG(50473482)> CPU DETAIL: Read R 0333: 0060486108920000 
DBG(50473483)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50473484)> CPU DETAIL: Result: 0000486100000000 
DBG(50473487)> CPU CMD: Exec 0337: 00 40 1783 0000 0343   set instr for transfer (M4 + addr in block event buf) -> (0892 event rec pre 
DBG(50473488)> CPU DETAIL: Read R 1783: 0060000008920000 
DBG(50473489)> CPU DETAIL: Result: 0060486108920000 
DBG(50473490)> CPU DETAIL: Write 0343: 0060486108920000 
DBG(50473492)> CPU CMD: Exec 0338: 96 60 1694 0345 0000   (1694 num of words in predecessor list in event) in field s -> (0345)    
DBG(50473493)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50473494)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50473495)> CPU DETAIL: Write 0345: 0000000000030000 
DBG(50473497)> CPU CMD: Exec 0339: 00 42 0335 1730 0000   get field s from (0335) -> end loop for M4 in 0335   
DBG(50473498)> CPU DETAIL: Read R 0335: 0458000100070333 
DBG(50473499)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50473500)> CPU DETAIL: Result: 0000000000070000 
DBG(50473503)> CPU CMD: Exec 0340: 00 40 0345 0000 0000   add: (0335) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50473504)> CPU DETAIL: Read R 0345: 0000000000030000 
DBG(50473505)> CPU DETAIL: Result: 0000000000100000 
DBG(50473508)> CPU CMD: Exec 0341: 00 40 1784 0000 0345   set inst loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in 
DBG(50473509)> CPU DETAIL: Read R 1784: 0458000100000342 
DBG(50473510)> CPU DETAIL: Result: 0458000100100342 
DBG(50473511)> CPU DETAIL: Write 0345: 0458000100100342 
DBG(50473513)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50473514)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50473515)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473516)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473519)> CPU CMD: Exec 0343: 00 60 4861 0892 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50473520)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(50473520)> CPU DETAIL: Read R 0868: 0000000241000000 
DBG(50473521)> CPU DETAIL: Write 0892: 0000000241000000 
DBG(50473523)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50473524)> CPU DETAIL: Read R 0343: 0060486108920000 
DBG(50473525)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473526)> CPU DETAIL: Result: 0060486108930000 
DBG(50473527)> CPU DETAIL: Write 0343: 0060486108930000 
DBG(50473529)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50473530)> CPU DETAIL: M4: 0008 
DBG(50473531)> CPU DETAIL: Transfer to T 
DBG(50473533)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50473534)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50473535)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473536)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473539)> CPU CMD: Exec 0343: 00 60 4861 0893 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50473540)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(50473540)> CPU DETAIL: Read R 0869: 0204444000000335 
DBG(50473541)> CPU DETAIL: Write 0893: 0204444000000335 
DBG(50473543)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50473544)> CPU DETAIL: Read R 0343: 0060486108930000 
DBG(50473545)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473546)> CPU DETAIL: Result: 0060486108940000 
DBG(50473547)> CPU DETAIL: Write 0343: 0060486108940000 
DBG(50473549)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50473550)> CPU DETAIL: M4: 0009 
DBG(50473551)> CPU DETAIL: Transfer to T 
DBG(50473553)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50473554)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50473555)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473556)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473559)> CPU CMD: Exec 0343: 00 60 4861 0894 0000   (M4 + addr in block event buf) -> (0892 event rec predecessors)   
DBG(50473560)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(50473560)> CPU DETAIL: Read R 0870: 0204458700760279 
DBG(50473561)> CPU DETAIL: Write 0894: 0204458700760279 
DBG(50473563)> CPU CMD: Exec 0344: 00 40 0343 1737 0343   incr_S   
DBG(50473564)> CPU DETAIL: Read R 0343: 0060486108940000 
DBG(50473565)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473566)> CPU DETAIL: Result: 0060486108950000 
DBG(50473567)> CPU DETAIL: Write 0343: 0060486108950000 
DBG(50473569)> CPU CMD: Exec 0345: 04 58 0001 0010 0342   loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in event) g 
DBG(50473570)> CPU DETAIL: M4: 0010 
DBG(50473573)> CPU CMD: Exec 0346: 00 42 0343 1731 0000   get field_r from 0343 = last source addr from block rec -> REG1 (in form M4  
DBG(50473574)> CPU DETAIL: Read R 0343: 0060486108950000 
DBG(50473575)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50473576)> CPU DETAIL: Result: 0000486100000000 
DBG(50473579)> CPU CMD: Exec 0347: 00 40 1786 0000 0353   set instr for transfer (M4 + addr in block event buf) -> (0988 event rec suc 
DBG(50473580)> CPU DETAIL: Read R 1786: 0060000009880000 
DBG(50473581)> CPU DETAIL: Result: 0060486109880000 
DBG(50473582)> CPU DETAIL: Write 0353: 0060486109880000 
DBG(50473584)> CPU CMD: Exec 0348: 96 60 1695 0355 0000   (1695 num of words in successor list in event) in field s -> (0355)    
DBG(50473585)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473586)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50473587)> CPU DETAIL: Write 0355: 0000000000030000 
DBG(50473589)> CPU CMD: Exec 0349: 00 42 0345 1730 0000   get field s from (0345) -> end loop for M4 in 0345   
DBG(50473590)> CPU DETAIL: Read R 0345: 0458000100100342 
DBG(50473591)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50473592)> CPU DETAIL: Result: 0000000000100000 
DBG(50473595)> CPU CMD: Exec 0350: 00 40 0355 0000 0000   add: (0355) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50473596)> CPU DETAIL: Read R 0355: 0000000000030000 
DBG(50473597)> CPU DETAIL: Result: 0000000000130000 
DBG(50473600)> CPU CMD: Exec 0351: 00 40 1787 0000 0355   set inst loop, incr M4, if M4<>7+(1694 num of words in predecessor list in e 
DBG(50473601)> CPU DETAIL: Read R 1787: 0458000100000352 
DBG(50473602)> CPU DETAIL: Result: 0458000100130352 
DBG(50473603)> CPU DETAIL: Write 0355: 0458000100130352 
DBG(50473605)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50473606)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473607)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473608)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473611)> CPU CMD: Exec 0353: 00 60 4861 0988 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50473612)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(50473612)> CPU DETAIL: Read R 0871: 0000000249999990 
DBG(50473613)> CPU DETAIL: Write 0988: 0000000249999990 
DBG(50473615)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50473616)> CPU DETAIL: Read R 0353: 0060486109880000 
DBG(50473617)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473618)> CPU DETAIL: Result: 0060486109890000 
DBG(50473619)> CPU DETAIL: Write 0353: 0060486109890000 
DBG(50473621)> CPU CMD: Exec 0355: 04 58 0001 0013 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50473622)> CPU DETAIL: M4: 0011 
DBG(50473623)> CPU DETAIL: Transfer to T 
DBG(50473625)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50473626)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473627)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473628)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473631)> CPU CMD: Exec 0353: 00 60 4861 0989 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50473632)> CPU DETAIL: M4 Address Modifier: 0011 
DBG(50473632)> CPU DETAIL: Read R 0872: 0000000000033555 
DBG(50473633)> CPU DETAIL: Write 0989: 0000000000033555 
DBG(50473635)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50473636)> CPU DETAIL: Read R 0353: 0060486109890000 
DBG(50473637)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473638)> CPU DETAIL: Result: 0060486109900000 
DBG(50473639)> CPU DETAIL: Write 0353: 0060486109900000 
DBG(50473641)> CPU CMD: Exec 0355: 04 58 0001 0013 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50473642)> CPU DETAIL: M4: 0012 
DBG(50473643)> CPU DETAIL: Transfer to T 
DBG(50473645)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50473646)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473647)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473648)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473651)> CPU CMD: Exec 0353: 00 60 4861 0990 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50473652)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(50473652)> CPU DETAIL: Read R 0873: 0000000000033666 
DBG(50473653)> CPU DETAIL: Write 0990: 0000000000033666 
DBG(50473655)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50473656)> CPU DETAIL: Read R 0353: 0060486109900000 
DBG(50473657)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50473658)> CPU DETAIL: Result: 0060486109910000 
DBG(50473659)> CPU DETAIL: Write 0353: 0060486109910000 
DBG(50473661)> CPU CMD: Exec 0355: 04 58 0001 0013 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50473662)> CPU DETAIL: M4: 0013 
DBG(50473665)> CPU CMD: Exec 0356: 00 72 1695 1733 0453   if (1695 num of words in successors list in event) <> 0 goto 0453   
DBG(50473666)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473667)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473668)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473669)> CPU DETAIL: Transfer to T 
DBG(50473671)> CPU CMD: Exec 0453: 96 60 1695 0000 0000   set inst 0495 to ...   
DBG(50473672)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473673)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50473676)> CPU CMD: Exec 0454: 00 40 1803 0000 0459   ... loop, incr M6+3, if M6<>(1695 num of words in successor list) goto 0457  
DBG(50473677)> CPU DETAIL: Read R 1803: 0658000300000457 
DBG(50473678)> CPU DETAIL: Result: 0658000300030457 
DBG(50473679)> CPU DETAIL: Write 0459: 0658000300030457 
DBG(50473681)> CPU CMD: Exec 0455: 00 52 0000 0000 0000   clear M6   
DBG(50473682)> CPU DETAIL: M4: 0013 
DBG(50473683)> CPU DETAIL: Clear M6
DBG(50473683)> CPU DETAIL: M6: 0000 
DBG(50473684)> CPU DETAIL: M8: 0013 
DBG(50473687)> CPU CMD: Exec 0456: 00 42 1084 1764 1706   mask (1084 output event block ww1) to get event code -> (1706 output event r 
DBG(50473688)> CPU DETAIL: Read R 1084: 0000000249999990 
DBG(50473689)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473690)> CPU DETAIL: Result: 0000000249999990 
DBG(50473691)> CPU DETAIL: Write 1706: 0000000249999990 
DBG(50473693)> CPU CMD: Exec 0457: 00 42 6988 1764 1707   mask (M6+0988 w1 event rec first successor) to get event code -> (1707 event 
DBG(50473694)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(50473694)> CPU DETAIL: Read R 0988: 0000000249999990 
DBG(50473695)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50473696)> CPU DETAIL: Result: 0000000249999990 
DBG(50473697)> CPU DETAIL: Write 1707: 0000000249999990 
DBG(50473699)> CPU CMD: Exec 0458: 00 70 1706 0000 0465   if codes equal goto 0465   
DBG(50473700)> CPU DETAIL: Read R 1706: 0000000249999990 
DBG(50473701)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50473702)> CPU DETAIL: Transfer to T 
DBG(50473704)> CPU CMD: Exec 0465: 00 42 0456 1731 0000   mask (0456) to get field R (1084 output event block addr)   
DBG(50473705)> CPU DETAIL: Read R 0456: 0042108417641706 
DBG(50473706)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50473707)> CPU DETAIL: Result: 0000108400000000 
DBG(50473710)> CPU CMD: Exec 0466: 00 40 1777 0000 1699   +1 -> (1699 addr in output block of found successor (TL value))   
DBG(50473711)> CPU DETAIL: Read R 1777: 0000000100000000 
DBG(50473712)> CPU DETAIL: Result: 0000108500000000 
DBG(50473713)> CPU DETAIL: Write 1699: 0000108500000000 
DBG(50473715)> CPU CMD: Exec 0467: 00 59 0000 0000 0000   get 00 M4 M6 M8 to REG1   
DBG(50473716)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0013 0000 0013
DBG(50473718)> CPU CMD: Exec 0468: 00 42 0000 1730 1711   set REG1 = 0..0 M6 0000 -> (1711)   
DBG(50473719)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50473720)> CPU DETAIL: Result: 0000000000000000 
DBG(50473721)> CPU DETAIL: Write 1711: 0000000000000000 
DBG(50473723)> CPU CMD: Exec 0469: 00 40 1804 0000 0000   set instr to ...   
DBG(50473724)> CPU DETAIL: Read R 1804: 5022000009891701 
DBG(50473725)> CPU DETAIL: Result: 5022000009891701 
DBG(50473728)> CPU CMD: Exec 0470: 00 40 1699 0000 0471   ...    
DBG(50473729)> CPU DETAIL: Read R 1699: 0000108500000000 
DBG(50473730)> CPU DETAIL: Result: 5022108509891701 
DBG(50473731)> CPU DETAIL: Write 0471: 5022108509891701 
DBG(50473733)> CPU CMD: Exec 0471: 50 22 1085 0989 1701   ... FSUB (addr in output block of found successor (TL value)) - (0989 succes 
DBG(50473734)> CPU DETAIL: Read R 1085: 1100000000000000 
DBG(50473735)> CPU DETAIL: Read S 0989: 0000000000033555 
DBG(50473736)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50473736)> CPU DETAIL:        REG2: 92 0 3 3555 0000 0000 (0.000000)
DBG(50473737)> CPU DETAIL: Result: 92 1 3 3555 0000 0000 00000000 00000000 (-0.000000)
DBG(50473738)> CPU DETAIL: Shift : 92 1 3 3555 0000 0000 00000000 00000000 (-0.000000)
DBG(50473739)> CPU DETAIL: Write 1701: 9213355500000000 
DBG(50473741)> CPU CMD: Exec 0472: 00 40 1711 1805 0475   set instr 0475 to ...   
DBG(50473742)> CPU DETAIL: Read R 1711: 0000000000000000 
DBG(50473743)> CPU DETAIL: Read S 1805: 5020000009901702 
DBG(50473744)> CPU DETAIL: Result: 5020000009901702 
DBG(50473745)> CPU DETAIL: Write 0475: 5020000009901702 
DBG(50473747)> CPU CMD: Exec 0473: 00 40 1699 1777 0000   ...   
DBG(50473748)> CPU DETAIL: Read R 1699: 0000108500000000 
DBG(50473749)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50473750)> CPU DETAIL: Result: 0000108600000000 
DBG(50473753)> CPU CMD: Exec 0474: 00 40 0475 0000 0475   ...   
DBG(50473754)> CPU DETAIL: Read R 0475: 5020000009901702 
DBG(50473755)> CPU DETAIL: Result: 5020108609901702 
DBG(50473756)> CPU DETAIL: Write 0475: 5020108609901702 
DBG(50473758)> CPU CMD: Exec 0475: 50 20 1086 0990 1702   ... FADD (addr in output block of found successor+1 (Sigma TL value)) + (099 
DBG(50473759)> CPU DETAIL: Read R 1086: 0000000000000000 
DBG(50473760)> CPU DETAIL: Read S 0990: 0000000000033666 
DBG(50473761)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50473761)> CPU DETAIL:        REG2: 92 0 3 3666 0000 0000 (0.000000)
DBG(50473762)> CPU DETAIL: Result: 92 0 3 3666 0000 0000 00000000 00000000 (0.000000)
DBG(50473763)> CPU DETAIL: Shift : 92 0 3 3666 0000 0000 00000000 00000000 (0.000000)
DBG(50473764)> CPU DETAIL: Write 1702: 9203366600000000 
DBG(50473766)> CPU CMD: Exec 0476: 00 60 1744 0476 0479   set to nop, goto 0479    
DBG(50473767)> CPU DETAIL: Read R 1744: 0060000000000000 
DBG(50473768)> CPU DETAIL: Transfer to T 
DBG(50473768)> CPU DETAIL: Write 0476: 0060000000000000 
DBG(50473770)> CPU CMD: Exec 0479: 00 60 1701 1708 0000   (1701 New_TL) -> (1708)   
DBG(50473771)> CPU DETAIL: Read R 1701: 9213355500000000 
DBG(50473772)> CPU DETAIL: Write 1708: 9213355500000000 
DBG(50473774)> CPU CMD: Exec 0480: 00 60 1702 1709 0483   (1702 New_Sigma_TL) -> (1709), goto 0483   
DBG(50473775)> CPU DETAIL: Read R 1702: 9203366600000000 
DBG(50473776)> CPU DETAIL: Transfer to T 
DBG(50473776)> CPU DETAIL: Write 1709: 9203366600000000 
DBG(50473778)> CPU CMD: Exec 0483: 00 40 1749 1703 1703   (1703 pointer to current successor word in event list) += 3   
DBG(50473779)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50473780)> CPU DETAIL: Read S 1703: 0000000000000000 
DBG(50473781)> CPU DETAIL: Result: 0000000000030000 
DBG(50473782)> CPU DETAIL: Write 1703: 0000000000030000 
DBG(50473784)> CPU CMD: Exec 0484: 04 60 1703 0000 0000   shift right 4 to set pointer as integer -> REG1   
DBG(50473785)> CPU DETAIL: Read R 1703: 0000000000030000 
DBG(50473786)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50473789)> CPU CMD: Exec 0485: 00 41 1695 0000 0000   (1695 num of words in successor list in event) -= REG1 -> REG1 = number of w 
DBG(50473790)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473791)> CPU DETAIL: Result: 0000000000000000 
DBG(50473794)> CPU CMD: Exec 0486: 00 63 0460 0488 0000   if >0 goto 0460 (process next successor), =0 goto 0488 (no more successor)   
DBG(50473795)> CPU DETAIL: REG1: 0000000000000000
DBG(50473795)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50473797)> CPU CMD: Exec 0488: 00 60 1733 1703 0000   clear (1703 pointer to event list)   
DBG(50473798)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50473799)> CPU DETAIL: Write 1703: 0000000000000000 
DBG(50473801)> CPU CMD: Exec 0489: 00 60 1774 0456 0000   restore instr 0456   
DBG(50473802)> CPU DETAIL: Read R 1774: 0042108417641706 
DBG(50473803)> CPU DETAIL: Write 0456: 0042108417641706 
DBG(50473805)> CPU CMD: Exec 0490: 00 60 1733 1700 0000   clear (1700)   
DBG(50473806)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50473807)> CPU DETAIL: Write 1700: 0000000000000000 
DBG(50473809)> CPU CMD: Exec 0491: 00 60 1708 0889 0000   (1708 New_TL adjusted) -> (0889 event rec w5)   
DBG(50473810)> CPU DETAIL: Read R 1708: 9213355500000000 
DBG(50473811)> CPU DETAIL: Write 0889: 9213355500000000 
DBG(50473813)> CPU CMD: Exec 0492: 00 60 1709 0890 0000   (1709 New Sigma adjusted) -> (0890 event rec w6)   
DBG(50473814)> CPU DETAIL: Read R 1709: 9203366600000000 
DBG(50473815)> CPU DETAIL: Write 0890: 9203366600000000 
DBG(50473817)> CPU CMD: Exec 0493: 00 60 1733 1708 0000   clear (1708)   
DBG(50473818)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50473819)> CPU DETAIL: Write 1708: 0000000000000000 
DBG(50473821)> CPU CMD: Exec 0494: 00 60 0000 1709 0000   clear (1709)   
DBG(50473822)> CPU DETAIL: Write 1709: 0000000000000000 
DBG(50473824)> CPU CMD: Exec 0495: 00 60 1806 0474 0000   ???   
DBG(50473825)> CPU DETAIL: Read R 1806: 0060174404760479 
DBG(50473826)> CPU DETAIL: Write 0474: 0060174404760479 
DBG(50473828)> CPU CMD: Exec 0496: 00 60 0000 0000 0373   goto 0373 update (1697 TLTE = TL-TE value) in event w1    
DBG(50473829)> CPU DETAIL: Transfer to T 
DBG(50473831)> CPU CMD: Exec 0373: 02 60 1731 0000 0000   reg1=0000 0011 1100 0000    
DBG(50473832)> CPU DETAIL: Read R 1731: 0000111100000000 
DBG(50473833)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000001111000000 
DBG(50473836)> CPU CMD: Exec 0374: 00 42 0885 0000 0000   Mask (0885 event w1) with reg1    
DBG(50473837)> CPU DETAIL: Read R 0885: 0130000000151113 
DBG(50473838)> CPU DETAIL: Result: 0000000000000000 
DBG(50473841)> CPU CMD: Exec 0375: 00 41 0885 0000 0885   set field TLTE to zero in (0885 event w1)   
DBG(50473842)> CPU DETAIL: Read R 0885: 0130000000151113 
DBG(50473843)> CPU DETAIL: Result: 0130000000151113 
DBG(50473844)> CPU DETAIL: Write 0885: 0130000000151113 
DBG(50473846)> CPU CMD: Exec 0376: 50 22 0889 0887 1697   FSUB (0889 event rec w5 TL) - (0887 event rec w3 TE) -> (1697 TLTE = TL-TE v 
DBG(50473847)> CPU DETAIL: Read R 0889: 9213355500000000 
DBG(50473848)> CPU DETAIL: Read S 0887: 0204444000000335 
DBG(50473849)> CPU DETAIL: Float: REG1: 92 1 3 3555 0000 0000 (-0.000000)
DBG(50473849)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0335 (444.400000)
DBG(50473850)> CPU DETAIL: Result: 02 1 4 4440 0000 0670 50000000 00000000 (-444.400000)
DBG(50473851)> CPU DETAIL: Shift : 02 1 4 4440 0000 0671 50000000 00000000 (-444.400000)
DBG(50473852)> CPU DETAIL: Write 1697: 0214444000000671 
DBG(50473854)> CPU CMD: Exec 0377: 50 28 0000 1733 0000   FSUB abs |REG1| - |zero| -> get the absulute value -> REG1   
DBG(50473855)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473856)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50473856)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50473857)> CPU DETAIL: Result: 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50473858)> CPU DETAIL: Shift : 02 0 4 4440 0000 0671 00000000 00000000 (444.400000)
DBG(50473861)> CPU CMD: Exec 0378: 50 22 1790 0000 0000   FSUB  0.05 - REG1   
DBG(50473862)> CPU DETAIL: Read R 1790: 9805000000000000 
DBG(50473863)> CPU DETAIL: Float: REG1: 98 0 5 0000 0000 0000 (0.050000)
DBG(50473863)> CPU DETAIL:        REG2: 02 0 4 4440 0000 0671 (444.400000)
DBG(50473864)> CPU DETAIL: Result: 02 1 4 4435 0000 0671 00000000 00000000 (-444.350000)
DBG(50473865)> CPU DETAIL: Shift : 02 1 4 4435 0000 0671 00000000 00000000 (-444.350000)
DBG(50473868)> CPU CMD: Exec 0379: 00 63 0384 0000 0000   if >0 goto 0384 (set report code to 9 because TL - TE < 0.5)   
DBG(50473869)> CPU DETAIL: REG1: 0214443500000671
DBG(50473869)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50473871)> CPU CMD: Exec 0380: 50 22 1697 1733 0000   FSUB (1697 TLTE) - zero: normalize   
DBG(50473872)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50473873)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473874)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50473874)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50473875)> CPU DETAIL: Result: 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50473876)> CPU DETAIL: Shift : 02 1 4 4440 0000 0671 00000000 00000000 (-444.400000)
DBG(50473879)> CPU CMD: Exec 0381: 00 63 0000 0000 0632   if <0 goto 0632   
DBG(50473880)> CPU DETAIL: REG1: 0214444000000671
DBG(50473880)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50473882)> CPU CMD: Exec 0632: 00 42 0886 1732 0000   mask (0886 w2 = xxxxxx  EEEEEEEEE R, EEE=event code, report code) with one - 
DBG(50473883)> CPU DETAIL: Read R 0886: 0000000242009990 
DBG(50473884)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50473885)> CPU DETAIL: Result: 0000000000000000 
DBG(50473888)> CPU CMD: Exec 0633: 00 72 1791 0000 0387   if report code <>9 goto 0387   
DBG(50473889)> CPU DETAIL: Read R 1791: 0000000000000009 
DBG(50473890)> CPU DETAIL: Diff: REG1: 0000000000000009
DBG(50473891)> CPU DETAIL: Transfer to T 
DBG(50473893)> CPU CMD: Exec 0387: 00 60 0000 0000 0389   goto 0389   
DBG(50473894)> CPU DETAIL: Transfer to T 
DBG(50473896)> CPU CMD: Exec 0389: 00 42 1697 1825 0000   mask (1697 TLTE = TL-TE value) sign digit    
DBG(50473897)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50473898)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50473899)> CPU DETAIL: Result: 0010000000000000 
DBG(50473902)> CPU CMD: Exec 0390: 00 72 1825 0000 0393   if <>negative goto 0393   
DBG(50473903)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50473904)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50473907)> CPU CMD: Exec 0391: 50 30 1697 1833 1697   FADD spe (1697 TLTE = TL-TE value) + (-0.05)   
DBG(50473908)> CPU DETAIL: Read R 1697: 0214444000000671 
DBG(50473909)> CPU DETAIL: Read S 1833: 9815000000000000 
DBG(50473910)> CPU DETAIL: Float: REG1: 02 1 4 4440 0000 0671 (-444.400000)
DBG(50473910)> CPU DETAIL:        REG2: 98 1 5 0000 0000 0000 (-0.050000)
DBG(50473911)> CPU DETAIL: Result: 02 1 4 4445 0000 0671 00000000 00000000 (-444.450000)
DBG(50473912)> CPU DETAIL: Shift : 02 1 4 4445 0000 0671 00000000 00000000 (-444.450000)
DBG(50473913)> CPU DETAIL: Write 1697: 0214444500000671 
DBG(50473915)> CPU CMD: Exec 0392: 00 60 1748 1726 0395   1.0 -> (1726 (*now* - TTTT)), goto 0395   
DBG(50473916)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50473917)> CPU DETAIL: Transfer to T 
DBG(50473917)> CPU DETAIL: Write 1726: 0001000000000000 
DBG(50473919)> CPU CMD: Exec 0395: 00 34 1792 1697 1697   FMUL Spe (0.1e-11) x (1697 TLTE = TL-TE value) -> (1697 TLTE = TL-TE value): 
DBG(50473920)> CPU DETAIL: Read R 1792: 8901000000000000 
DBG(50473921)> CPU DETAIL: Read S 1697: 0214444500000671 
DBG(50473922)> CPU DETAIL: Float: REG1: 89 0 1 0000 0000 0000 (0.000000)
DBG(50473922)> CPU DETAIL:        REG2: 02 1 4 4445 0000 0671 (-444.450000)
DBG(50473923)> CPU DETAIL: Result: 91 1 4 4445 0000 0671 00000000 00000000 (-0.000000)
DBG(50473924)> CPU DETAIL: Shift : 00 1 0 0000 0000 4444 50000067 10000000 (-0.000000)
DBG(50473925)> CPU DETAIL: Write 1697: 0010000000004444 
DBG(50473927)> CPU CMD: Exec 0396: 94 60 0000 0000 0000   shift to set as 000000 TLTE 000000   
DBG(50473928)> CPU DETAIL: Word Shift 6 digits left: REG1: 0000004444000000 
DBG(50473931)> CPU CMD: Exec 0397: 00 40 0885 0000 0885   + (0885 event w1)  -> (0885 event w1 = NNN xxx TLTE SCHEDL)    
DBG(50473932)> CPU DETAIL: Read R 0885: 0130000000151113 
DBG(50473933)> CPU DETAIL: Result: 0130004444151113 
DBG(50473934)> CPU DETAIL: Write 0885: 0130004444151113 
DBG(50473936)> CPU CMD: Exec 0398: 12 60 0891 0000 0000   get TSTS from (0891 event rec w7 = TSTS TTTT RS PR AA BB  AA=num of predeces 
DBG(50473937)> CPU DETAIL: Read R 0891: 0000000000000101 
DBG(50473938)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000000000 
DBG(50473941)> CPU CMD: Exec 0399: 00 72 1733 0000 0497   if <> 0 goto 0497   
DBG(50473942)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50473943)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50473946)> CPU CMD: Exec 0400: 00 60 0000 0000 0401   goto 0401   
DBG(50473947)> CPU DETAIL: Transfer to T 
DBG(50473949)> CPU CMD: Exec 0401: 00 54 0000 0000 0000   clear M8   
DBG(50473950)> CPU DETAIL: M4: 0013 
DBG(50473951)> CPU DETAIL: M6: 0000 
DBG(50473952)> CPU DETAIL: Clear M8
DBG(50473952)> CPU DETAIL: M8: 0000 
DBG(50473955)> CPU CMD: Exec 0402: 92 41 1695 1732 0000   set instr 0408 to ...   
DBG(50473956)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473957)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50473958)> CPU DETAIL: Result: 0000000000000002 
DBG(50473959)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000200000000 
DBG(50473962)> CPU CMD: Exec 0403: 00 40 1793 0000 0408   ... (0988 event first precedessor - 1 - (1695 num of words in successor list 
DBG(50473963)> CPU DETAIL: Read R 1793: 0060098808740000 
DBG(50473964)> CPU DETAIL: Result: 0060099008740000 
DBG(50473965)> CPU DETAIL: Write 0408: 0060099008740000 
DBG(50473967)> CPU CMD: Exec 0404: 00 72 1695 1733 0406   if (1695 num of words in successor list in event) <> 0 goto 0406   
DBG(50473968)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473969)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50473970)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50473971)> CPU DETAIL: Transfer to T 
DBG(50473973)> CPU CMD: Exec 0406: 96 60 1695 0000 0000      
DBG(50473974)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50473975)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50473978)> CPU CMD: Exec 0407: 00 40 1798 0000 0410      
DBG(50473979)> CPU DETAIL: Read R 1798: 0858000100000408 
DBG(50473980)> CPU DETAIL: Result: 0858000100030408 
DBG(50473981)> CPU DETAIL: Write 0410: 0858000100030408 
DBG(50473983)> CPU CMD: Exec 0408: 00 60 0990 0874 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50473984)> CPU DETAIL: Read R 0990: 0000000000033666 
DBG(50473985)> CPU DETAIL: Write 0874: 0000000000033666 
DBG(50473987)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50473988)> CPU DETAIL: Read R 0408: 0060099008740000 
DBG(50473989)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50473990)> CPU DETAIL: Result: 0060098908730000 
DBG(50473991)> CPU DETAIL: Write 0408: 0060098908730000 
DBG(50473993)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50473994)> CPU DETAIL: M8: 0001 
DBG(50473995)> CPU DETAIL: Transfer to T 
DBG(50473997)> CPU CMD: Exec 0408: 00 60 0989 0873 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50473998)> CPU DETAIL: Read R 0989: 0000000000033555 
DBG(50473999)> CPU DETAIL: Write 0873: 0000000000033555 
DBG(50474001)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50474002)> CPU DETAIL: Read R 0408: 0060098908730000 
DBG(50474003)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474004)> CPU DETAIL: Result: 0060098808720000 
DBG(50474005)> CPU DETAIL: Write 0408: 0060098808720000 
DBG(50474007)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50474008)> CPU DETAIL: M8: 0002 
DBG(50474009)> CPU DETAIL: Transfer to T 
DBG(50474011)> CPU CMD: Exec 0408: 00 60 0988 0872 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50474012)> CPU DETAIL: Read R 0988: 0000000249999990 
DBG(50474013)> CPU DETAIL: Write 0872: 0000000249999990 
DBG(50474015)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50474016)> CPU DETAIL: Read R 0408: 0060098808720000 
DBG(50474017)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474018)> CPU DETAIL: Result: 0060098708710000 
DBG(50474019)> CPU DETAIL: Write 0408: 0060098708710000 
DBG(50474021)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50474022)> CPU DETAIL: M8: 0003 
DBG(50474025)> CPU CMD: Exec 0411: 00 54 0000 0000 0000   clear M8   
DBG(50474026)> CPU DETAIL: M4: 0013 
DBG(50474027)> CPU DETAIL: M6: 0000 
DBG(50474028)> CPU DETAIL: Clear M8
DBG(50474028)> CPU DETAIL: M8: 0000 
DBG(50474031)> CPU CMD: Exec 0412: 92 41 1694 1732 0000   set instr 0420 to ...   
DBG(50474032)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50474033)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50474034)> CPU DETAIL: Result: 0000000000000002 
DBG(50474035)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000200000000 
DBG(50474038)> CPU CMD: Exec 0413: 00 40 1799 0000 0420   ... (0892 event first predecessor + (1694 num of words in predecessors list  
DBG(50474039)> CPU DETAIL: Read R 1799: 0060089200000000 
DBG(50474040)> CPU DETAIL: Result: 0060089400000000 
DBG(50474041)> CPU DETAIL: Write 0420: 0060089400000000 
DBG(50474043)> CPU CMD: Exec 0414: 00 42 0408 1730 0000   mask (0408) to get field S -> REG1 (starts with (0884 end of read event bloc 
DBG(50474044)> CPU DETAIL: Read R 0408: 0060098708710000 
DBG(50474045)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50474046)> CPU DETAIL: Result: 0000000008710000 
DBG(50474049)> CPU CMD: Exec 0415: 00 40 0420 0000 0420   set instr 0420 to store to this addr   
DBG(50474050)> CPU DETAIL: Read R 0420: 0060089400000000 
DBG(50474051)> CPU DETAIL: Result: 0060089408710000 
DBG(50474052)> CPU DETAIL: Write 0420: 0060089408710000 
DBG(50474054)> CPU CMD: Exec 0416: 00 72 1694 1733 0418   if (1694 num of words in predecessor list in event) <> 0 goto 0418   
DBG(50474055)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50474056)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474057)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50474058)> CPU DETAIL: Transfer to T 
DBG(50474060)> CPU CMD: Exec 0418: 96 60 1694 0000 0000   (1694 num of words in predecessor list in event) -> field S   
DBG(50474061)> CPU DETAIL: Read R 1694: 0000000000000003 
DBG(50474062)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50474065)> CPU CMD: Exec 0419: 00 40 1800 0000 0422   set instr 0422 to loop, incr M8, if M8<>(1694 num of words in predecessor li 
DBG(50474066)> CPU DETAIL: Read R 1800: 0858000100000420 
DBG(50474067)> CPU DETAIL: Result: 0858000100030420 
DBG(50474068)> CPU DETAIL: Write 0422: 0858000100030420 
DBG(50474070)> CPU CMD: Exec 0420: 00 60 0894 0871 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50474071)> CPU DETAIL: Read R 0894: 0204458700760279 
DBG(50474072)> CPU DETAIL: Write 0871: 0204458700760279 
DBG(50474074)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50474075)> CPU DETAIL: Read R 0420: 0060089408710000 
DBG(50474076)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474077)> CPU DETAIL: Result: 0060089308700000 
DBG(50474078)> CPU DETAIL: Write 0420: 0060089308700000 
DBG(50474080)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50474081)> CPU DETAIL: M8: 0001 
DBG(50474082)> CPU DETAIL: Transfer to T 
DBG(50474084)> CPU CMD: Exec 0420: 00 60 0893 0870 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50474085)> CPU DETAIL: Read R 0893: 0204444000000335 
DBG(50474086)> CPU DETAIL: Write 0870: 0204444000000335 
DBG(50474088)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50474089)> CPU DETAIL: Read R 0420: 0060089308700000 
DBG(50474090)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474091)> CPU DETAIL: Result: 0060089208690000 
DBG(50474092)> CPU DETAIL: Write 0420: 0060089208690000 
DBG(50474094)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50474095)> CPU DETAIL: M8: 0002 
DBG(50474096)> CPU DETAIL: Transfer to T 
DBG(50474098)> CPU CMD: Exec 0420: 00 60 0892 0869 0000   (0892 event first predecessor + (1694 num of words in predecessors list in e 
DBG(50474099)> CPU DETAIL: Read R 0892: 0000000241000000 
DBG(50474100)> CPU DETAIL: Write 0869: 0000000241000000 
DBG(50474102)> CPU CMD: Exec 0421: 00 41 0420 1768 0420   decr field R and S in prev instr   
DBG(50474103)> CPU DETAIL: Read R 0420: 0060089208690000 
DBG(50474104)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474105)> CPU DETAIL: Result: 0060089108680000 
DBG(50474106)> CPU DETAIL: Write 0420: 0060089108680000 
DBG(50474108)> CPU CMD: Exec 0422: 08 58 0001 0003 0420   loop, incr M8, if M8<>(1694 num of words in predecessor list in event) goto  
DBG(50474109)> CPU DETAIL: M8: 0003 
DBG(50474112)> CPU CMD: Exec 0423: 00 54 0000 0000 0000   clear M8   
DBG(50474113)> CPU DETAIL: M4: 0013 
DBG(50474114)> CPU DETAIL: M6: 0000 
DBG(50474115)> CPU DETAIL: Clear M8
DBG(50474115)> CPU DETAIL: M8: 0000 
DBG(50474118)> CPU CMD: Exec 0424: 00 42 0420 1730 0000   set instr 0426 to ...   
DBG(50474119)> CPU DETAIL: Read R 0420: 0060089108680000 
DBG(50474120)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50474121)> CPU DETAIL: Result: 0000000008680000 
DBG(50474124)> CPU CMD: Exec 0425: 00 40 1801 0000 0426   ... (0891 event rec w7) -> (field R of instr 0420 = 0881 position on end of  
DBG(50474125)> CPU DETAIL: Read R 1801: 0060089100000000 
DBG(50474126)> CPU DETAIL: Result: 0060089108680000 
DBG(50474127)> CPU DETAIL: Write 0426: 0060089108680000 
DBG(50474129)> CPU CMD: Exec 0426: 00 60 0891 0868 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474130)> CPU DETAIL: Read R 0891: 0000000000000101 
DBG(50474131)> CPU DETAIL: Write 0868: 0000000000000101 
DBG(50474133)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474134)> CPU DETAIL: Read R 0426: 0060089108680000 
DBG(50474135)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474136)> CPU DETAIL: Result: 0060089008670000 
DBG(50474137)> CPU DETAIL: Write 0426: 0060089008670000 
DBG(50474139)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474140)> CPU DETAIL: M8: 0001 
DBG(50474141)> CPU DETAIL: Transfer to T 
DBG(50474143)> CPU CMD: Exec 0426: 00 60 0890 0867 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474144)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50474145)> CPU DETAIL: Write 0867: 9203366600000000 
DBG(50474147)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474148)> CPU DETAIL: Read R 0426: 0060089008670000 
DBG(50474149)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474150)> CPU DETAIL: Result: 0060088908660000 
DBG(50474151)> CPU DETAIL: Write 0426: 0060088908660000 
DBG(50474153)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474154)> CPU DETAIL: M8: 0002 
DBG(50474155)> CPU DETAIL: Transfer to T 
DBG(50474157)> CPU CMD: Exec 0426: 00 60 0889 0866 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474158)> CPU DETAIL: Read R 0889: 9213355500000000 
DBG(50474159)> CPU DETAIL: Write 0866: 9213355500000000 
DBG(50474161)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474162)> CPU DETAIL: Read R 0426: 0060088908660000 
DBG(50474163)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474164)> CPU DETAIL: Result: 0060088808650000 
DBG(50474165)> CPU DETAIL: Write 0426: 0060088808650000 
DBG(50474167)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474168)> CPU DETAIL: M8: 0003 
DBG(50474169)> CPU DETAIL: Transfer to T 
DBG(50474171)> CPU CMD: Exec 0426: 00 60 0888 0865 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474172)> CPU DETAIL: Read R 0888: 0204458700760279 
DBG(50474173)> CPU DETAIL: Write 0865: 0204458700760279 
DBG(50474175)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474176)> CPU DETAIL: Read R 0426: 0060088808650000 
DBG(50474177)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474178)> CPU DETAIL: Result: 0060088708640000 
DBG(50474179)> CPU DETAIL: Write 0426: 0060088708640000 
DBG(50474181)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474182)> CPU DETAIL: M8: 0004 
DBG(50474183)> CPU DETAIL: Transfer to T 
DBG(50474185)> CPU CMD: Exec 0426: 00 60 0887 0864 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474186)> CPU DETAIL: Read R 0887: 0204444000000335 
DBG(50474187)> CPU DETAIL: Write 0864: 0204444000000335 
DBG(50474189)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474190)> CPU DETAIL: Read R 0426: 0060088708640000 
DBG(50474191)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474192)> CPU DETAIL: Result: 0060088608630000 
DBG(50474193)> CPU DETAIL: Write 0426: 0060088608630000 
DBG(50474195)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474196)> CPU DETAIL: M8: 0005 
DBG(50474197)> CPU DETAIL: Transfer to T 
DBG(50474199)> CPU CMD: Exec 0426: 00 60 0886 0863 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474200)> CPU DETAIL: Read R 0886: 0000000242009990 
DBG(50474201)> CPU DETAIL: Write 0863: 0000000242009990 
DBG(50474203)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474204)> CPU DETAIL: Read R 0426: 0060088608630000 
DBG(50474205)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474206)> CPU DETAIL: Result: 0060088508620000 
DBG(50474207)> CPU DETAIL: Write 0426: 0060088508620000 
DBG(50474209)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474210)> CPU DETAIL: M8: 0006 
DBG(50474211)> CPU DETAIL: Transfer to T 
DBG(50474213)> CPU CMD: Exec 0426: 00 60 0885 0862 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50474214)> CPU DETAIL: Read R 0885: 0130004444151113 
DBG(50474215)> CPU DETAIL: Write 0862: 0130004444151113 
DBG(50474217)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50474218)> CPU DETAIL: Read R 0426: 0060088508620000 
DBG(50474219)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50474220)> CPU DETAIL: Result: 0060088408610000 
DBG(50474221)> CPU DETAIL: Write 0426: 0060088408610000 
DBG(50474223)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50474224)> CPU DETAIL: M8: 0007 
DBG(50474227)> CPU CMD: Exec 0429: 00 40 1727 1732 1727   incr (1727 number of events stored in output tape)   
DBG(50474228)> CPU DETAIL: Read R 1727: 0000000000000001 
DBG(50474229)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50474230)> CPU DETAIL: Result: 0000000000000002 
DBG(50474231)> CPU DETAIL: Write 1727: 0000000000000002 
DBG(50474233)> CPU CMD: Exec 0430: 00 42 0426 1730 0000   mask (0426) to get last addr used in event block, that marks start of block  
DBG(50474234)> CPU DETAIL: Read R 0426: 0060088408610000 
DBG(50474235)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50474236)> CPU DETAIL: Result: 0000000008610000 
DBG(50474239)> CPU CMD: Exec 0431: 96 40 1759 0000 0439   +8 -> (0439)   
DBG(50474240)> CPU DETAIL: Read R 1759: 0000000000080000 
DBG(50474241)> CPU DETAIL: Result: 0000000008690000 
DBG(50474242)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000086900000000 
DBG(50474243)> CPU DETAIL: Write 0439: 0000086900000000 
DBG(50474245)> CPU CMD: Exec 0432: 00 40 1834 0000 0438   set instr 0438 to ...   
DBG(50474246)> CPU DETAIL: Read R 1834: 0042000017640000 
DBG(50474247)> CPU DETAIL: Result: 0042086917640000 
DBG(50474248)> CPU DETAIL: Write 0438: 0042086917640000 
DBG(50474250)> CPU CMD: Exec 0433: 08 42 0000 1731 0000   ...   
DBG(50474251)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50474252)> CPU DETAIL: Result: 0000086900000000 
DBG(50474253)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000869 
DBG(50474256)> CPU CMD: Exec 0434: 00 40 0438 0000 0438   ... mask event code for first successor/predecessor    
DBG(50474257)> CPU DETAIL: Read R 0438: 0042086917640000 
DBG(50474258)> CPU DETAIL: Result: 0042086917640869 
DBG(50474259)> CPU DETAIL: Write 0438: 0042086917640869 
DBG(50474261)> CPU CMD: Exec 0435: 00 40 0439 1835 0439   set instr 0439 ...   
DBG(50474262)> CPU DETAIL: Read R 0439: 0000086900000000 
DBG(50474263)> CPU DETAIL: Read S 1835: 0040000017260000 
DBG(50474264)> CPU DETAIL: Result: 0040086917260000 
DBG(50474265)> CPU DETAIL: Write 0439: 0040086917260000 
DBG(50474267)> CPU CMD: Exec 0436: 08 42 0000 1731 0000   ...   
DBG(50474268)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50474269)> CPU DETAIL: Result: 0000086900000000 
DBG(50474270)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000869 
DBG(50474273)> CPU CMD: Exec 0437: 00 40 0439 0000 0439   ... (pred/succ event code) -> (1726)   
DBG(50474274)> CPU DETAIL: Read R 0439: 0040086917260000 
DBG(50474275)> CPU DETAIL: Result: 0040086917260869 
DBG(50474276)> CPU DETAIL: Write 0439: 0040086917260869 
DBG(50474278)> CPU CMD: Exec 0438: 00 42 0869 1764 0869   mask (succ/pred event code) with event code, store back at same addr   
DBG(50474279)> CPU DETAIL: Read R 0869: 0000000241000000 
DBG(50474280)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474281)> CPU DETAIL: Result: 0000000241000000 
DBG(50474282)> CPU DETAIL: Write 0869: 0000000241000000 
DBG(50474284)> CPU CMD: Exec 0439: 00 40 0869 1726 0869   add (1726 (*now* - TTTT) as 0 NNNN 0..0) to (succ/pred event code)   
DBG(50474285)> CPU DETAIL: Read R 0869: 0000000241000000 
DBG(50474286)> CPU DETAIL: Read S 1726: 0001000000000000 
DBG(50474287)> CPU DETAIL: Result: 0001000241000000 
DBG(50474288)> CPU DETAIL: Write 0869: 0001000241000000 
DBG(50474290)> CPU CMD: Exec 0440: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 event rec len)   
DBG(50474291)> CPU DETAIL: Read R 1696: 0000000000000013 
DBG(50474292)> CPU DETAIL: Read S 1704: 0000000000000010 
DBG(50474293)> CPU DETAIL: Result: 0000000000000023 
DBG(50474294)> CPU DETAIL: Write 1704: 0000000000000023 
DBG(50474296)> CPU CMD: Exec 0441: 96 60 1696 0000 0000   (1696 event rec len NNN) -> REG1   
DBG(50474297)> CPU DETAIL: Read R 1696: 0000000000000013 
DBG(50474298)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000130000 
DBG(50474301)> CPU CMD: Exec 0442: 00 41 1793 0000 1793   sub (1793 (0988)->(0884)) to (1793 (0988)->(0884-NNN))   
DBG(50474302)> CPU DETAIL: Read R 1793: 0060098808740000 
DBG(50474303)> CPU DETAIL: Result: 0060098808610000 
DBG(50474304)> CPU DETAIL: Write 1793: 0060098808610000 
DBG(50474306)> CPU CMD: Exec 0443: 00 60 0000 0000 0146   goto 0146 check if output buf is full   
DBG(50474307)> CPU DETAIL: Transfer to T 
DBG(50474309)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50474310)> CPU DETAIL: Read R 1705: 0000000000030000 
DBG(50474311)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50474312)> CPU DETAIL: Result: 0000000000060000 
DBG(50474313)> CPU DETAIL: Write 1705: 0000000000060000 
DBG(50474315)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50474316)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50474317)> CPU DETAIL: Read S 1705: 0000000000060000 
DBG(50474318)> CPU DETAIL: Result: 0000000005940000 
DBG(50474321)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50474322)> CPU DETAIL: REG1: 0000000005940000
DBG(50474322)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50474324)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50474325)> CPU DETAIL: Read R 1765: 0060000000000297 
DBG(50474326)> CPU DETAIL: Write 0170: 0060000000000297 
DBG(50474328)> CPU CMD: Exec 0157: 00 42 0886 1764 1087   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50474329)> CPU DETAIL: Read R 0886: 0000000242009990 
DBG(50474330)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474331)> CPU DETAIL: Result: 0000000242009990 
DBG(50474332)> CPU DETAIL: Write 1087: 0000000242009990 
DBG(50474334)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50474335)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50474336)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50474339)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50474340)> CPU DETAIL: Read R 0157: 0042088617641087 
DBG(50474341)> CPU DETAIL: Result: 0042088617641090 
DBG(50474342)> CPU DETAIL: Write 0157: 0042088617641090 
DBG(50474344)> CPU CMD: Exec 0160: 00 60 0000 0000 0166   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50474345)> CPU DETAIL: Transfer to T 
DBG(50474347)> CPU CMD: Exec 0166: 00 60 0889 1088 0000   (event rec w3) -> (1085)   
DBG(50474348)> CPU DETAIL: Read R 0889: 9213355500000000 
DBG(50474349)> CPU DETAIL: Write 1088: 9213355500000000 
DBG(50474351)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50474352)> CPU DETAIL: Read R 0166: 0060088910880000 
DBG(50474353)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50474354)> CPU DETAIL: Result: 0060088910910000 
DBG(50474355)> CPU DETAIL: Write 0166: 0060088910910000 
DBG(50474357)> CPU CMD: Exec 0168: 00 60 0890 1089 0000   (event rec w4) -> (1086)   
DBG(50474358)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50474359)> CPU DETAIL: Write 1089: 9203366600000000 
DBG(50474361)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50474362)> CPU DETAIL: Read R 0168: 0060089010890000 
DBG(50474363)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50474364)> CPU DETAIL: Result: 0060089010920000 
DBG(50474365)> CPU DETAIL: Write 0168: 0060089010920000 
DBG(50474367)> CPU CMD: Exec 0170: 00 60 0000 0000 0297   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50474368)> CPU DETAIL: Transfer to T 
DBG(50474370)> CPU CMD: Exec 0297: 00 41 1691 1692 0000   (1691 number of words in input block) - (1692 number of words already read)  
DBG(50474371)> CPU DETAIL: Read R 1691: 0000000000000036 
DBG(50474372)> CPU DETAIL: Read S 1692: 0000000000000025 
DBG(50474373)> CPU DETAIL: Result: 0000000000000011 
DBG(50474376)> CPU CMD: Exec 0298: 00 63 0303 0444 0000   if >0 goto 0303, =0 goto 0444 (if all events from event block processed)    
DBG(50474377)> CPU DETAIL: REG1: 0000000000000011
DBG(50474377)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50474379)> CPU CMD: Exec 0303: 00 54 0000 0000 0000   clear M8   
DBG(50474380)> CPU DETAIL: M4: 0013 
DBG(50474381)> CPU DETAIL: M6: 0000 
DBG(50474382)> CPU DETAIL: Clear M8
DBG(50474382)> CPU DETAIL: M8: 0000 
DBG(50474385)> CPU CMD: Exec 0304: 00 60 0000 0000 0306   (1691 number of words in block) -> REG1   
DBG(50474386)> CPU DETAIL: Transfer to T 
DBG(50474388)> CPU CMD: Exec 0306: 00 70 0859 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474389)> CPU DETAIL: Read R 0859: 0101429330900241 
DBG(50474390)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474391)> CPU DETAIL: Diff: REG1: 0101428219789131
DBG(50474394)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474395)> CPU DETAIL: Read R 0306: 0070085917640310 
DBG(50474396)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474397)> CPU DETAIL: Result: 0070085817640310 
DBG(50474398)> CPU DETAIL: Write 0306: 0070085817640310 
DBG(50474400)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474401)> CPU DETAIL: M8: 0001 
DBG(50474402)> CPU DETAIL: Transfer to T 
DBG(50474404)> CPU CMD: Exec 0306: 00 70 0858 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474405)> CPU DETAIL: Read R 0858: 0204855000000000 
DBG(50474406)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474407)> CPU DETAIL: Diff: REG1: 0204853888888890
DBG(50474410)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474411)> CPU DETAIL: Read R 0306: 0070085817640310 
DBG(50474412)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474413)> CPU DETAIL: Result: 0070085717640310 
DBG(50474414)> CPU DETAIL: Write 0306: 0070085717640310 
DBG(50474416)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474417)> CPU DETAIL: M8: 0002 
DBG(50474418)> CPU DETAIL: Transfer to T 
DBG(50474420)> CPU CMD: Exec 0306: 00 70 0857 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474421)> CPU DETAIL: Read R 0857: 0000000242009990 
DBG(50474422)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474423)> CPU DETAIL: Diff: REG1: 9999999130898880
DBG(50474426)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474427)> CPU DETAIL: Read R 0306: 0070085717640310 
DBG(50474428)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474429)> CPU DETAIL: Result: 0070085617640310 
DBG(50474430)> CPU DETAIL: Write 0306: 0070085617640310 
DBG(50474432)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474433)> CPU DETAIL: M8: 0003 
DBG(50474434)> CPU DETAIL: Transfer to T 
DBG(50474436)> CPU CMD: Exec 0306: 00 70 0856 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474437)> CPU DETAIL: Read R 0856: 2221444455660001 
DBG(50474438)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474439)> CPU DETAIL: Diff: REG1: 2221443344548891
DBG(50474442)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474443)> CPU DETAIL: Read R 0306: 0070085617640310 
DBG(50474444)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474445)> CPU DETAIL: Result: 0070085517640310 
DBG(50474446)> CPU DETAIL: Write 0306: 0070085517640310 
DBG(50474448)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474449)> CPU DETAIL: M8: 0004 
DBG(50474450)> CPU DETAIL: Transfer to T 
DBG(50474452)> CPU CMD: Exec 0306: 00 70 0855 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474453)> CPU DETAIL: Read R 0855: 0000000000000000 
DBG(50474454)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474455)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50474458)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474459)> CPU DETAIL: Read R 0306: 0070085517640310 
DBG(50474460)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474461)> CPU DETAIL: Result: 0070085417640310 
DBG(50474462)> CPU DETAIL: Write 0306: 0070085417640310 
DBG(50474464)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474465)> CPU DETAIL: M8: 0005 
DBG(50474466)> CPU DETAIL: Transfer to T 
DBG(50474468)> CPU CMD: Exec 0306: 00 70 0854 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474469)> CPU DETAIL: Read R 0854: 0000000000000000 
DBG(50474470)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474471)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50474474)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474475)> CPU DETAIL: Read R 0306: 0070085417640310 
DBG(50474476)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474477)> CPU DETAIL: Result: 0070085317640310 
DBG(50474478)> CPU DETAIL: Write 0306: 0070085317640310 
DBG(50474480)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474481)> CPU DETAIL: M8: 0006 
DBG(50474482)> CPU DETAIL: Transfer to T 
DBG(50474484)> CPU CMD: Exec 0306: 00 70 0853 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474485)> CPU DETAIL: Read R 0853: 0000000000000000 
DBG(50474486)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474487)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50474490)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474491)> CPU DETAIL: Read R 0306: 0070085317640310 
DBG(50474492)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474493)> CPU DETAIL: Result: 0070085217640310 
DBG(50474494)> CPU DETAIL: Write 0306: 0070085217640310 
DBG(50474496)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474497)> CPU DETAIL: M8: 0007 
DBG(50474498)> CPU DETAIL: Transfer to T 
DBG(50474500)> CPU CMD: Exec 0306: 00 70 0852 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474501)> CPU DETAIL: Read R 0852: 0000000000000000 
DBG(50474502)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474503)> CPU DETAIL: Diff: REG1: 9999998888888890
DBG(50474506)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474507)> CPU DETAIL: Read R 0306: 0070085217640310 
DBG(50474508)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474509)> CPU DETAIL: Result: 0070085117640310 
DBG(50474510)> CPU DETAIL: Write 0306: 0070085117640310 
DBG(50474512)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474513)> CPU DETAIL: M8: 0008 
DBG(50474514)> CPU DETAIL: Transfer to T 
DBG(50474516)> CPU CMD: Exec 0306: 00 70 0851 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474517)> CPU DETAIL: Read R 0851: 0000000241000003 
DBG(50474518)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474519)> CPU DETAIL: Diff: REG1: 9999999129888893
DBG(50474522)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474523)> CPU DETAIL: Read R 0306: 0070085117640310 
DBG(50474524)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474525)> CPU DETAIL: Result: 0070085017640310 
DBG(50474526)> CPU DETAIL: Write 0306: 0070085017640310 
DBG(50474528)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474529)> CPU DETAIL: M8: 0009 
DBG(50474530)> CPU DETAIL: Transfer to T 
DBG(50474532)> CPU CMD: Exec 0306: 00 70 0850 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474533)> CPU DETAIL: Read R 0850: 0100000000151111 
DBG(50474534)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474535)> CPU DETAIL: Diff: REG1: 0099998889040001
DBG(50474538)> CPU CMD: Exec 0307: 00 41 0306 1777 0306   decr_R   
DBG(50474539)> CPU DETAIL: Read R 0306: 0070085017640310 
DBG(50474540)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474541)> CPU DETAIL: Result: 0070084917640310 
DBG(50474542)> CPU DETAIL: Write 0306: 0070084917640310 
DBG(50474544)> CPU CMD: Exec 0308: 08 58 0001 0011 0306   loop, incr M8, if M8<>(number of words in block) goto 0306   
DBG(50474545)> CPU DETAIL: M8: 0010 
DBG(50474546)> CPU DETAIL: Transfer to T 
DBG(50474548)> CPU CMD: Exec 0306: 00 70 0849 1764 0310   if (0884 end of read event block buffer) = Event Mask Code goto 0310   
DBG(50474549)> CPU DETAIL: Read R 0849: 0000001111111110 
DBG(50474550)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474551)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50474552)> CPU DETAIL: Transfer to T 
DBG(50474554)> CPU CMD: Exec 0310: 00 42 0306 1731 0000   get in field R the addr of event rec start    
DBG(50474555)> CPU DETAIL: Read R 0306: 0070084917640310 
DBG(50474556)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50474557)> CPU DETAIL: Result: 0000084900000000 
DBG(50474560)> CPU CMD: Exec 0311: 00 40 0000 1777 1711   incr field R -> (1711 addr of event rec word 1)   
DBG(50474561)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474562)> CPU DETAIL: Result: 0000085000000000 
DBG(50474563)> CPU DETAIL: Write 1711: 0000085000000000 
DBG(50474565)> CPU CMD: Exec 0312: 00 41 0306 1777 0306   incr field R in instr 0306, to allow locate next event   
DBG(50474566)> CPU DETAIL: Read R 0306: 0070084917640310 
DBG(50474567)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50474568)> CPU DETAIL: Result: 0070084817640310 
DBG(50474569)> CPU DETAIL: Write 0306: 0070084817640310 
DBG(50474571)> CPU CMD: Exec 0313: 00 60 1761 0304 0000   set inst 0304 to skip loop init in 0305   
DBG(50474572)> CPU DETAIL: Read R 1761: 0060000000000306 
DBG(50474573)> CPU DETAIL: Write 0304: 0060000000000306 
DBG(50474575)> CPU CMD: Exec 0314: 00 60 0000 0000 0000      
DBG(50474578)> CPU CMD: Exec 0315: 00 40 1711 1779 0000   incr field R + 6 -> REG1=addr of event rec word 7   
DBG(50474579)> CPU DETAIL: Read R 1711: 0000085000000000 
DBG(50474580)> CPU DETAIL: Read S 1779: 0000000600000000 
DBG(50474581)> CPU DETAIL: Result: 0000085600000000 
DBG(50474584)> CPU CMD: Exec 0316: 00 40 1780 0000 0317   set instr to ...   
DBG(50474585)> CPU DETAIL: Read R 1780: 0060000016930000 
DBG(50474586)> CPU DETAIL: Result: 0060085616930000 
DBG(50474587)> CPU DETAIL: Write 0317: 0060085616930000 
DBG(50474589)> CPU CMD: Exec 0317: 00 60 0856 1693 0000   ... (addr of event rec word 7) -> (1693 event rec word 7)   
DBG(50474590)> CPU DETAIL: Read R 0856: 2221444455660001 
DBG(50474591)> CPU DETAIL: Write 1693: 2221444455660001 
DBG(50474593)> CPU CMD: Exec 0318: 02 42 1693 1734 1694   mask (1693 event rec word 7) with 0..0 1100 -> (1694 num of predecesors in e 
DBG(50474594)> CPU DETAIL: Read R 1693: 2221444455660001 
DBG(50474595)> CPU DETAIL: Read S 1734: 0000000000001100 
DBG(50474596)> CPU DETAIL: Result: 0000000000000000 
DBG(50474597)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(50474598)> CPU DETAIL: Write 1694: 0000000000000000 
DBG(50474600)> CPU CMD: Exec 0319: 00 42 1693 1735 1695   mask (1693 event rec word 7) with 0..0 0011 -> (1695 num of successors in ev 
DBG(50474601)> CPU DETAIL: Read R 1693: 2221444455660001 
DBG(50474602)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50474603)> CPU DETAIL: Result: 0000000000000001 
DBG(50474604)> CPU DETAIL: Write 1695: 0000000000000001 
DBG(50474606)> CPU CMD: Exec 0320: 96 34 1694 1747 0000   FMUL x 3   
DBG(50474607)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50474608)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50474609)> CPU DETAIL: Float: REG1: 00 0 0 0000 0000 0000 (0.000000)
DBG(50474609)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50474610)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50474611)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50474614)> CPU CMD: Exec 0321: 00 42 0000 1746 1694   (1694 = num of words in predecessor list in event = 3x num of predecesors in 
DBG(50474615)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50474616)> CPU DETAIL: Result: 0000000000000000 
DBG(50474617)> CPU DETAIL: Write 1694: 0000000000000000 
DBG(50474619)> CPU CMD: Exec 0322: 96 34 1695 1747 0000   FMUL x3   
DBG(50474620)> CPU DETAIL: Read R 1695: 0000000000000001 
DBG(50474621)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50474622)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50474622)> CPU DETAIL:        REG2: 96 0 3 0000 0000 0000 (0.000300)
DBG(50474623)> CPU DETAIL: Result: 84 0 3 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50474624)> CPU DETAIL: Shift : 96 0 0 0000 0000 0003 00000000 00000000 (0.000000)
DBG(50474627)> CPU CMD: Exec 0323: 00 42 0000 1746 1695   (1695 = num of words in successors list in event = 3x num of successors in e 
DBG(50474628)> CPU DETAIL: Read S 1746: 0000000000001111 
DBG(50474629)> CPU DETAIL: Result: 0000000000000003 
DBG(50474630)> CPU DETAIL: Write 1695: 0000000000000003 
DBG(50474632)> CPU CMD: Exec 0324: 00 60 1736 1696 0000   7 -> (1696 event rec len)   
DBG(50474633)> CPU DETAIL: Read R 1736: 0000000000000007 
DBG(50474634)> CPU DETAIL: Write 1696: 0000000000000007 
DBG(50474636)> CPU CMD: Exec 0325: 00 40 1694 1695 0000   + words un predecessors + words in successors   
DBG(50474637)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50474638)> CPU DETAIL: Read S 1695: 0000000000000003 
DBG(50474639)> CPU DETAIL: Result: 0000000000000003 
DBG(50474642)> CPU CMD: Exec 0326: 00 40 1696 0000 1696   -> (1696 event rec len)   
DBG(50474643)> CPU DETAIL: Read R 1696: 0000000000000007 
DBG(50474644)> CPU DETAIL: Result: 0000000000000010 
DBG(50474645)> CPU DETAIL: Write 1696: 0000000000000010 
DBG(50474647)> CPU CMD: Exec 0327: 00 40 1692 0000 1692   add it to (1692 number of words already processed from block read)   
DBG(50474648)> CPU DETAIL: Read R 1692: 0000000000000025 
DBG(50474649)> CPU DETAIL: Result: 0000000000000035 
DBG(50474650)> CPU DETAIL: Write 1692: 0000000000000035 
DBG(50474652)> CPU CMD: Exec 0328: 00 40 1732 1692 1692   add one to (1692 number of words already processed from block read)   
DBG(50474653)> CPU DETAIL: Read R 1732: 0000000000000001 
DBG(50474654)> CPU DETAIL: Read S 1692: 0000000000000035 
DBG(50474655)> CPU DETAIL: Result: 0000000000000036 
DBG(50474656)> CPU DETAIL: Write 1692: 0000000000000036 
DBG(50474658)> CPU CMD: Exec 0329: 96 40 1696 1732 0000   REG1 field S = 1 + (1696 event rec len)   
DBG(50474659)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50474660)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50474661)> CPU DETAIL: Result: 0000000000000011 
DBG(50474662)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000110000 
DBG(50474665)> CPU CMD: Exec 0330: 00 41 0308 0000 0308   decr REG1 from loop end value for M8 at 0308   
DBG(50474666)> CPU DETAIL: Read R 0308: 0858000100110306 
DBG(50474667)> CPU DETAIL: Result: 0858000100000306 
DBG(50474668)> CPU DETAIL: Write 0308: 0858000100000306 
DBG(50474670)> CPU CMD: Exec 0331: 00 51 0000 0000 0000   clear M4   
DBG(50474671)> CPU DETAIL: Clear M4
DBG(50474671)> CPU DETAIL: M4: 0000 
DBG(50474672)> CPU DETAIL: M6: 0000 
DBG(50474673)> CPU DETAIL: M8: 0010 
DBG(50474676)> CPU CMD: Exec 0332: 00 40 1782 1711 0333   set instr to ...   
DBG(50474677)> CPU DETAIL: Read R 1782: 0060400008850000 
DBG(50474678)> CPU DETAIL: Read S 1711: 0000085000000000 
DBG(50474679)> CPU DETAIL: Result: 0060485008850000 
DBG(50474680)> CPU DETAIL: Write 0333: 0060485008850000 
DBG(50474682)> CPU CMD: Exec 0333: 00 60 4850 0885 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474683)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(50474683)> CPU DETAIL: Read R 0850: 0100000000151111 
DBG(50474684)> CPU DETAIL: Write 0885: 0100000000151111 
DBG(50474686)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474687)> CPU DETAIL: Read R 0333: 0060485008850000 
DBG(50474688)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474689)> CPU DETAIL: Result: 0060485008860000 
DBG(50474690)> CPU DETAIL: Write 0333: 0060485008860000 
DBG(50474692)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474693)> CPU DETAIL: M4: 0001 
DBG(50474694)> CPU DETAIL: Transfer to T 
DBG(50474696)> CPU CMD: Exec 0333: 00 60 4850 0886 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474697)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(50474697)> CPU DETAIL: Read R 0851: 0000000241000003 
DBG(50474698)> CPU DETAIL: Write 0886: 0000000241000003 
DBG(50474700)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474701)> CPU DETAIL: Read R 0333: 0060485008860000 
DBG(50474702)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474703)> CPU DETAIL: Result: 0060485008870000 
DBG(50474704)> CPU DETAIL: Write 0333: 0060485008870000 
DBG(50474706)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474707)> CPU DETAIL: M4: 0002 
DBG(50474708)> CPU DETAIL: Transfer to T 
DBG(50474710)> CPU CMD: Exec 0333: 00 60 4850 0887 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474711)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(50474711)> CPU DETAIL: Read R 0852: 0000000000000000 
DBG(50474712)> CPU DETAIL: Write 0887: 0000000000000000 
DBG(50474714)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474715)> CPU DETAIL: Read R 0333: 0060485008870000 
DBG(50474716)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474717)> CPU DETAIL: Result: 0060485008880000 
DBG(50474718)> CPU DETAIL: Write 0333: 0060485008880000 
DBG(50474720)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474721)> CPU DETAIL: M4: 0003 
DBG(50474722)> CPU DETAIL: Transfer to T 
DBG(50474724)> CPU CMD: Exec 0333: 00 60 4850 0888 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474725)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(50474725)> CPU DETAIL: Read R 0853: 0000000000000000 
DBG(50474726)> CPU DETAIL: Write 0888: 0000000000000000 
DBG(50474728)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474729)> CPU DETAIL: Read R 0333: 0060485008880000 
DBG(50474730)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474731)> CPU DETAIL: Result: 0060485008890000 
DBG(50474732)> CPU DETAIL: Write 0333: 0060485008890000 
DBG(50474734)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474735)> CPU DETAIL: M4: 0004 
DBG(50474736)> CPU DETAIL: Transfer to T 
DBG(50474738)> CPU CMD: Exec 0333: 00 60 4850 0889 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474739)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(50474739)> CPU DETAIL: Read R 0854: 0000000000000000 
DBG(50474740)> CPU DETAIL: Write 0889: 0000000000000000 
DBG(50474742)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474743)> CPU DETAIL: Read R 0333: 0060485008890000 
DBG(50474744)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474745)> CPU DETAIL: Result: 0060485008900000 
DBG(50474746)> CPU DETAIL: Write 0333: 0060485008900000 
DBG(50474748)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474749)> CPU DETAIL: M4: 0005 
DBG(50474750)> CPU DETAIL: Transfer to T 
DBG(50474752)> CPU CMD: Exec 0333: 00 60 4850 0890 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474753)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(50474753)> CPU DETAIL: Read R 0855: 0000000000000000 
DBG(50474754)> CPU DETAIL: Write 0890: 0000000000000000 
DBG(50474756)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474757)> CPU DETAIL: Read R 0333: 0060485008900000 
DBG(50474758)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474759)> CPU DETAIL: Result: 0060485008910000 
DBG(50474760)> CPU DETAIL: Write 0333: 0060485008910000 
DBG(50474762)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474763)> CPU DETAIL: M4: 0006 
DBG(50474764)> CPU DETAIL: Transfer to T 
DBG(50474766)> CPU CMD: Exec 0333: 00 60 4850 0891 0000   (M4 + 1711 addr of event rec word 1) -> (0885 event rec)   
DBG(50474767)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(50474767)> CPU DETAIL: Read R 0856: 2221444455660001 
DBG(50474768)> CPU DETAIL: Write 0891: 2221444455660001 
DBG(50474770)> CPU CMD: Exec 0334: 00 40 0333 1737 0333   incr_S     
DBG(50474771)> CPU DETAIL: Read R 0333: 0060485008910000 
DBG(50474772)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474773)> CPU DETAIL: Result: 0060485008920000 
DBG(50474774)> CPU DETAIL: Write 0333: 0060485008920000 
DBG(50474776)> CPU CMD: Exec 0335: 04 58 0001 0007 0333   loop, incr M4, if M4<>0007 goto 0333   
DBG(50474777)> CPU DETAIL: M4: 0007 
DBG(50474780)> CPU CMD: Exec 0336: 00 42 0333 1731 0000   get field_r from 0333 = last source addr from block rec -> REG1 (in form M4  
DBG(50474781)> CPU DETAIL: Read R 0333: 0060485008920000 
DBG(50474782)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50474783)> CPU DETAIL: Result: 0000485000000000 
DBG(50474786)> CPU CMD: Exec 0337: 00 40 1783 0000 0343   set instr for transfer (M4 + addr in block event buf) -> (0892 event rec pre 
DBG(50474787)> CPU DETAIL: Read R 1783: 0060000008920000 
DBG(50474788)> CPU DETAIL: Result: 0060485008920000 
DBG(50474789)> CPU DETAIL: Write 0343: 0060485008920000 
DBG(50474791)> CPU CMD: Exec 0338: 96 60 1694 0345 0000   (1694 num of words in predecessor list in event) in field s -> (0345)    
DBG(50474792)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50474793)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(50474794)> CPU DETAIL: Write 0345: 0000000000000000 
DBG(50474796)> CPU CMD: Exec 0339: 00 42 0335 1730 0000   get field s from (0335) -> end loop for M4 in 0335   
DBG(50474797)> CPU DETAIL: Read R 0335: 0458000100070333 
DBG(50474798)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50474799)> CPU DETAIL: Result: 0000000000070000 
DBG(50474802)> CPU CMD: Exec 0340: 00 40 0345 0000 0000   add: (0335) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50474803)> CPU DETAIL: Read R 0345: 0000000000000000 
DBG(50474804)> CPU DETAIL: Result: 0000000000070000 
DBG(50474807)> CPU CMD: Exec 0341: 00 40 1784 0000 0345   set inst loop, incr M4, if M4<>7 + (1694 num of words in predecessor list in 
DBG(50474808)> CPU DETAIL: Read R 1784: 0458000100000342 
DBG(50474809)> CPU DETAIL: Result: 0458000100070342 
DBG(50474810)> CPU DETAIL: Write 0345: 0458000100070342 
DBG(50474812)> CPU CMD: Exec 0342: 00 70 1694 1733 0346   if (1694 num of words in predecessor list in event) = 0 goto 0346   
DBG(50474813)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50474814)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474815)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50474816)> CPU DETAIL: Transfer to T 
DBG(50474818)> CPU CMD: Exec 0346: 00 42 0343 1731 0000   get field_r from 0343 = last source addr from block rec -> REG1 (in form M4  
DBG(50474819)> CPU DETAIL: Read R 0343: 0060485008920000 
DBG(50474820)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50474821)> CPU DETAIL: Result: 0000485000000000 
DBG(50474824)> CPU CMD: Exec 0347: 00 40 1786 0000 0353   set instr for transfer (M4 + addr in block event buf) -> (0988 event rec suc 
DBG(50474825)> CPU DETAIL: Read R 1786: 0060000009880000 
DBG(50474826)> CPU DETAIL: Result: 0060485009880000 
DBG(50474827)> CPU DETAIL: Write 0353: 0060485009880000 
DBG(50474829)> CPU CMD: Exec 0348: 96 60 1695 0355 0000   (1695 num of words in successor list in event) in field s -> (0355)    
DBG(50474830)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474831)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50474832)> CPU DETAIL: Write 0355: 0000000000030000 
DBG(50474834)> CPU CMD: Exec 0349: 00 42 0345 1730 0000   get field s from (0345) -> end loop for M4 in 0345   
DBG(50474835)> CPU DETAIL: Read R 0345: 0458000100070342 
DBG(50474836)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50474837)> CPU DETAIL: Result: 0000000000070000 
DBG(50474840)> CPU CMD: Exec 0350: 00 40 0355 0000 0000   add: (0355) field S now is 7 + (1694 num of words in predecessor list in eve 
DBG(50474841)> CPU DETAIL: Read R 0355: 0000000000030000 
DBG(50474842)> CPU DETAIL: Result: 0000000000100000 
DBG(50474845)> CPU CMD: Exec 0351: 00 40 1787 0000 0355   set inst loop, incr M4, if M4<>7+(1694 num of words in predecessor list in e 
DBG(50474846)> CPU DETAIL: Read R 1787: 0458000100000352 
DBG(50474847)> CPU DETAIL: Result: 0458000100100352 
DBG(50474848)> CPU DETAIL: Write 0355: 0458000100100352 
DBG(50474850)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50474851)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474852)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474853)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50474856)> CPU CMD: Exec 0353: 00 60 4850 0988 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50474857)> CPU DETAIL: M4 Address Modifier: 0007 
DBG(50474857)> CPU DETAIL: Read R 0857: 0000000242009990 
DBG(50474858)> CPU DETAIL: Write 0988: 0000000242009990 
DBG(50474860)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50474861)> CPU DETAIL: Read R 0353: 0060485009880000 
DBG(50474862)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474863)> CPU DETAIL: Result: 0060485009890000 
DBG(50474864)> CPU DETAIL: Write 0353: 0060485009890000 
DBG(50474866)> CPU CMD: Exec 0355: 04 58 0001 0010 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50474867)> CPU DETAIL: M4: 0008 
DBG(50474868)> CPU DETAIL: Transfer to T 
DBG(50474870)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50474871)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474872)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474873)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50474876)> CPU CMD: Exec 0353: 00 60 4850 0989 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50474877)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(50474877)> CPU DETAIL: Read R 0858: 0204855000000000 
DBG(50474878)> CPU DETAIL: Write 0989: 0204855000000000 
DBG(50474880)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50474881)> CPU DETAIL: Read R 0353: 0060485009890000 
DBG(50474882)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474883)> CPU DETAIL: Result: 0060485009900000 
DBG(50474884)> CPU DETAIL: Write 0353: 0060485009900000 
DBG(50474886)> CPU CMD: Exec 0355: 04 58 0001 0010 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50474887)> CPU DETAIL: M4: 0009 
DBG(50474888)> CPU DETAIL: Transfer to T 
DBG(50474890)> CPU CMD: Exec 0352: 00 70 1695 1733 0356   if (1695 num of words in successors list in event) = 0 goto 0356    
DBG(50474891)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474892)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474893)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50474896)> CPU CMD: Exec 0353: 00 60 4850 0990 0000   (M4 + addr in block event buf) -> (0988 event rec successors)   
DBG(50474897)> CPU DETAIL: M4 Address Modifier: 0009 
DBG(50474897)> CPU DETAIL: Read R 0859: 0101429330900241 
DBG(50474898)> CPU DETAIL: Write 0990: 0101429330900241 
DBG(50474900)> CPU CMD: Exec 0354: 00 40 0353 1737 0353   incr_s   
DBG(50474901)> CPU DETAIL: Read R 0353: 0060485009900000 
DBG(50474902)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50474903)> CPU DETAIL: Result: 0060485009910000 
DBG(50474904)> CPU DETAIL: Write 0353: 0060485009910000 
DBG(50474906)> CPU CMD: Exec 0355: 04 58 0001 0010 0352   loop, incr M4, if M4<>7+(1694 num of words in predecessor list in event) + ( 
DBG(50474907)> CPU DETAIL: M4: 0010 
DBG(50474910)> CPU CMD: Exec 0356: 00 72 1695 1733 0453   if (1695 num of words in successors list in event) <> 0 goto 0453   
DBG(50474911)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474912)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50474913)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50474914)> CPU DETAIL: Transfer to T 
DBG(50474916)> CPU CMD: Exec 0453: 96 60 1695 0000 0000   set inst 0495 to ...   
DBG(50474917)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474918)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50474921)> CPU CMD: Exec 0454: 00 40 1803 0000 0459   ... loop, incr M6+3, if M6<>(1695 num of words in successor list) goto 0457  
DBG(50474922)> CPU DETAIL: Read R 1803: 0658000300000457 
DBG(50474923)> CPU DETAIL: Result: 0658000300030457 
DBG(50474924)> CPU DETAIL: Write 0459: 0658000300030457 
DBG(50474926)> CPU CMD: Exec 0455: 00 52 0000 0000 0000   clear M6   
DBG(50474927)> CPU DETAIL: M4: 0010 
DBG(50474928)> CPU DETAIL: Clear M6
DBG(50474928)> CPU DETAIL: M6: 0000 
DBG(50474929)> CPU DETAIL: M8: 0010 
DBG(50474932)> CPU CMD: Exec 0456: 00 42 1084 1764 1706   mask (1084 output event block ww1) to get event code -> (1706 output event r 
DBG(50474933)> CPU DETAIL: Read R 1084: 0000000249999990 
DBG(50474934)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474935)> CPU DETAIL: Result: 0000000249999990 
DBG(50474936)> CPU DETAIL: Write 1706: 0000000249999990 
DBG(50474938)> CPU CMD: Exec 0457: 00 42 6988 1764 1707   mask (M6+0988 w1 event rec first successor) to get event code -> (1707 event 
DBG(50474939)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(50474939)> CPU DETAIL: Read R 0988: 0000000242009990 
DBG(50474940)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474941)> CPU DETAIL: Result: 0000000242009990 
DBG(50474942)> CPU DETAIL: Write 1707: 0000000242009990 
DBG(50474944)> CPU CMD: Exec 0458: 00 70 1706 0000 0465   if codes equal goto 0465   
DBG(50474945)> CPU DETAIL: Read R 1706: 0000000249999990 
DBG(50474946)> CPU DETAIL: Diff: REG1: 0000000007990000
DBG(50474949)> CPU CMD: Exec 0459: 06 58 0003 0003 0457   loop, incr M6+3, if M6<>(1695 num of words in successor list) goto 0457   
DBG(50474950)> CPU DETAIL: M6: 0003 
DBG(50474953)> CPU CMD: Exec 0460: 00 40 0456 1747 0456   set instr 0456 to read next output event 1084+3   
DBG(50474954)> CPU DETAIL: Read R 0456: 0042108417641706 
DBG(50474955)> CPU DETAIL: Read S 1747: 0000000300000000 
DBG(50474956)> CPU DETAIL: Result: 0042108717641706 
DBG(50474957)> CPU DETAIL: Write 0456: 0042108717641706 
DBG(50474959)> CPU CMD: Exec 0461: 00 40 1700 1749 1700   (1700 words already scanned in output event block)+=3 -> REG1   
DBG(50474960)> CPU DETAIL: Read R 1700: 0000000000000000 
DBG(50474961)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50474962)> CPU DETAIL: Result: 0000000000030000 
DBG(50474963)> CPU DETAIL: Write 1700: 0000000000030000 
DBG(50474965)> CPU CMD: Exec 0462: 00 41 1763 0000 0000   600 - REG1 -> REG1 = words remaining to be scanned in output event block   
DBG(50474966)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50474967)> CPU DETAIL: Result: 0000000005970000 
DBG(50474970)> CPU CMD: Exec 0463: 00 63 0453 0241 0000   if >0 goto 0453, =0 goto 0241   
DBG(50474971)> CPU DETAIL: REG1: 0000000005970000
DBG(50474971)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50474973)> CPU CMD: Exec 0453: 96 60 1695 0000 0000   set inst 0495 to ...   
DBG(50474974)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50474975)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50474978)> CPU CMD: Exec 0454: 00 40 1803 0000 0459   ... loop, incr M6+3, if M6<>(1695 num of words in successor list) goto 0457  
DBG(50474979)> CPU DETAIL: Read R 1803: 0658000300000457 
DBG(50474980)> CPU DETAIL: Result: 0658000300030457 
DBG(50474981)> CPU DETAIL: Write 0459: 0658000300030457 
DBG(50474983)> CPU CMD: Exec 0455: 00 52 0000 0000 0000   clear M6   
DBG(50474984)> CPU DETAIL: M4: 0010 
DBG(50474985)> CPU DETAIL: Clear M6
DBG(50474985)> CPU DETAIL: M6: 0000 
DBG(50474986)> CPU DETAIL: M8: 0010 
DBG(50474989)> CPU CMD: Exec 0456: 00 42 1087 1764 1706   mask (1084 output event block ww1) to get event code -> (1706 output event r 
DBG(50474990)> CPU DETAIL: Read R 1087: 0000000242009990 
DBG(50474991)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474992)> CPU DETAIL: Result: 0000000242009990 
DBG(50474993)> CPU DETAIL: Write 1706: 0000000242009990 
DBG(50474995)> CPU CMD: Exec 0457: 00 42 6988 1764 1707   mask (M6+0988 w1 event rec first successor) to get event code -> (1707 event 
DBG(50474996)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(50474996)> CPU DETAIL: Read R 0988: 0000000242009990 
DBG(50474997)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50474998)> CPU DETAIL: Result: 0000000242009990 
DBG(50474999)> CPU DETAIL: Write 1707: 0000000242009990 
DBG(50475001)> CPU CMD: Exec 0458: 00 70 1706 0000 0465   if codes equal goto 0465   
DBG(50475002)> CPU DETAIL: Read R 1706: 0000000242009990 
DBG(50475003)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50475004)> CPU DETAIL: Transfer to T 
DBG(50475006)> CPU CMD: Exec 0465: 00 42 0456 1731 0000   mask (0456) to get field R (1084 output event block addr)   
DBG(50475007)> CPU DETAIL: Read R 0456: 0042108717641706 
DBG(50475008)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50475009)> CPU DETAIL: Result: 0000108700000000 
DBG(50475012)> CPU CMD: Exec 0466: 00 40 1777 0000 1699   +1 -> (1699 addr in output block of found successor (TL value))   
DBG(50475013)> CPU DETAIL: Read R 1777: 0000000100000000 
DBG(50475014)> CPU DETAIL: Result: 0000108800000000 
DBG(50475015)> CPU DETAIL: Write 1699: 0000108800000000 
DBG(50475017)> CPU CMD: Exec 0467: 00 59 0000 0000 0000   get 00 M4 M6 M8 to REG1   
DBG(50475018)> CPU DETAIL: 00 M4 M6 M8 to REG1: 0000 0010 0000 0010
DBG(50475020)> CPU CMD: Exec 0468: 00 42 0000 1730 1711   set REG1 = 0..0 M6 0000 -> (1711)   
DBG(50475021)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50475022)> CPU DETAIL: Result: 0000000000000000 
DBG(50475023)> CPU DETAIL: Write 1711: 0000000000000000 
DBG(50475025)> CPU CMD: Exec 0469: 00 40 1804 0000 0000   set instr to ...   
DBG(50475026)> CPU DETAIL: Read R 1804: 5022000009891701 
DBG(50475027)> CPU DETAIL: Result: 5022000009891701 
DBG(50475030)> CPU CMD: Exec 0470: 00 40 1699 0000 0471   ...    
DBG(50475031)> CPU DETAIL: Read R 1699: 0000108800000000 
DBG(50475032)> CPU DETAIL: Result: 5022108809891701 
DBG(50475033)> CPU DETAIL: Write 0471: 5022108809891701 
DBG(50475035)> CPU CMD: Exec 0471: 50 22 1088 0989 1701   ... FSUB (addr in output block of found successor (TL value)) - (0989 succes 
DBG(50475036)> CPU DETAIL: Read R 1088: 9213355500000000 
DBG(50475037)> CPU DETAIL: Read S 0989: 0204855000000000 
DBG(50475038)> CPU DETAIL: Float: REG1: 92 1 3 3555 0000 0000 (-0.000000)
DBG(50475038)> CPU DETAIL:        REG2: 02 0 4 8550 0000 0000 (485.500000)
DBG(50475039)> CPU DETAIL: Result: 02 1 4 8550 0000 0335 50000000 00000000 (-485.500000)
DBG(50475040)> CPU DETAIL: Shift : 02 1 4 8550 0000 0335 50000000 00000000 (-485.500000)
DBG(50475041)> CPU DETAIL: Write 1701: 0214855000000335 
DBG(50475043)> CPU CMD: Exec 0472: 00 40 1711 1805 0475   set instr 0475 to ...   
DBG(50475044)> CPU DETAIL: Read R 1711: 0000000000000000 
DBG(50475045)> CPU DETAIL: Read S 1805: 5020000009901702 
DBG(50475046)> CPU DETAIL: Result: 5020000009901702 
DBG(50475047)> CPU DETAIL: Write 0475: 5020000009901702 
DBG(50475049)> CPU CMD: Exec 0473: 00 40 1699 1777 0000   ...   
DBG(50475050)> CPU DETAIL: Read R 1699: 0000108800000000 
DBG(50475051)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50475052)> CPU DETAIL: Result: 0000108900000000 
DBG(50475055)> CPU CMD: Exec 0474: 00 60 1744 0476 0479   ...   
DBG(50475056)> CPU DETAIL: Read R 1744: 0060000000000000 
DBG(50475057)> CPU DETAIL: Transfer to T 
DBG(50475057)> CPU DETAIL: Write 0476: 0060000000000000 
DBG(50475059)> CPU CMD: Exec 0479: 00 60 1701 1708 0000   (1701 New_TL) -> (1708)   
DBG(50475060)> CPU DETAIL: Read R 1701: 0214855000000335 
DBG(50475061)> CPU DETAIL: Write 1708: 0214855000000335 
DBG(50475063)> CPU CMD: Exec 0480: 00 60 1702 1709 0483   (1702 New_Sigma_TL) -> (1709), goto 0483   
DBG(50475064)> CPU DETAIL: Read R 1702: 9203366600000000 
DBG(50475065)> CPU DETAIL: Transfer to T 
DBG(50475065)> CPU DETAIL: Write 1709: 9203366600000000 
DBG(50475067)> CPU CMD: Exec 0483: 00 40 1749 1703 1703   (1703 pointer to current successor word in event list) += 3   
DBG(50475068)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50475069)> CPU DETAIL: Read S 1703: 0000000000000000 
DBG(50475070)> CPU DETAIL: Result: 0000000000030000 
DBG(50475071)> CPU DETAIL: Write 1703: 0000000000030000 
DBG(50475073)> CPU CMD: Exec 0484: 04 60 1703 0000 0000   shift right 4 to set pointer as integer -> REG1   
DBG(50475074)> CPU DETAIL: Read R 1703: 0000000000030000 
DBG(50475075)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50475078)> CPU CMD: Exec 0485: 00 41 1695 0000 0000   (1695 num of words in successor list in event) -= REG1 -> REG1 = number of w 
DBG(50475079)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50475080)> CPU DETAIL: Result: 0000000000000000 
DBG(50475083)> CPU CMD: Exec 0486: 00 63 0460 0488 0000   if >0 goto 0460 (process next successor), =0 goto 0488 (no more successor)   
DBG(50475084)> CPU DETAIL: REG1: 0000000000000000
DBG(50475084)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50475086)> CPU CMD: Exec 0488: 00 60 1733 1703 0000   clear (1703 pointer to event list)   
DBG(50475087)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50475088)> CPU DETAIL: Write 1703: 0000000000000000 
DBG(50475090)> CPU CMD: Exec 0489: 00 60 1774 0456 0000   restore instr 0456   
DBG(50475091)> CPU DETAIL: Read R 1774: 0042108417641706 
DBG(50475092)> CPU DETAIL: Write 0456: 0042108417641706 
DBG(50475094)> CPU CMD: Exec 0490: 00 60 1733 1700 0000   clear (1700)   
DBG(50475095)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50475096)> CPU DETAIL: Write 1700: 0000000000000000 
DBG(50475098)> CPU CMD: Exec 0491: 00 60 1708 0889 0000   (1708 New_TL adjusted) -> (0889 event rec w5)   
DBG(50475099)> CPU DETAIL: Read R 1708: 0214855000000335 
DBG(50475100)> CPU DETAIL: Write 0889: 0214855000000335 
DBG(50475102)> CPU CMD: Exec 0492: 00 60 1709 0890 0000   (1709 New Sigma adjusted) -> (0890 event rec w6)   
DBG(50475103)> CPU DETAIL: Read R 1709: 9203366600000000 
DBG(50475104)> CPU DETAIL: Write 0890: 9203366600000000 
DBG(50475106)> CPU CMD: Exec 0493: 00 60 1733 1708 0000   clear (1708)   
DBG(50475107)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50475108)> CPU DETAIL: Write 1708: 0000000000000000 
DBG(50475110)> CPU CMD: Exec 0494: 00 60 0000 1709 0000   clear (1709)   
DBG(50475111)> CPU DETAIL: Write 1709: 0000000000000000 
DBG(50475113)> CPU CMD: Exec 0495: 00 60 1806 0474 0000   ???   
DBG(50475114)> CPU DETAIL: Read R 1806: 0060174404760479 
DBG(50475115)> CPU DETAIL: Write 0474: 0060174404760479 
DBG(50475117)> CPU CMD: Exec 0496: 00 60 0000 0000 0373   goto 0373 update (1697 TLTE = TL-TE value) in event w1    
DBG(50475118)> CPU DETAIL: Transfer to T 
DBG(50475120)> CPU CMD: Exec 0373: 02 60 1731 0000 0000   reg1=0000 0011 1100 0000    
DBG(50475121)> CPU DETAIL: Read R 1731: 0000111100000000 
DBG(50475122)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000001111000000 
DBG(50475125)> CPU CMD: Exec 0374: 00 42 0885 0000 0000   Mask (0885 event w1) with reg1    
DBG(50475126)> CPU DETAIL: Read R 0885: 0100000000151111 
DBG(50475127)> CPU DETAIL: Result: 0000000000000000 
DBG(50475130)> CPU CMD: Exec 0375: 00 41 0885 0000 0885   set field TLTE to zero in (0885 event w1)   
DBG(50475131)> CPU DETAIL: Read R 0885: 0100000000151111 
DBG(50475132)> CPU DETAIL: Result: 0100000000151111 
DBG(50475133)> CPU DETAIL: Write 0885: 0100000000151111 
DBG(50475135)> CPU CMD: Exec 0376: 50 22 0889 0887 1697   FSUB (0889 event rec w5 TL) - (0887 event rec w3 TE) -> (1697 TLTE = TL-TE v 
DBG(50475136)> CPU DETAIL: Read R 0889: 0214855000000335 
DBG(50475137)> CPU DETAIL: Read S 0887: 0000000000000000 
DBG(50475138)> CPU DETAIL: Float: REG1: 02 1 4 8550 0000 0335 (-485.500000)
DBG(50475138)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475139)> CPU DETAIL: Result: 02 1 4 8550 0000 0335 00000000 00000000 (-485.500000)
DBG(50475140)> CPU DETAIL: Shift : 02 1 4 8550 0000 0335 00000000 00000000 (-485.500000)
DBG(50475141)> CPU DETAIL: Write 1697: 0214855000000335 
DBG(50475143)> CPU CMD: Exec 0377: 50 28 0000 1733 0000   FSUB abs |REG1| - |zero| -> get the absulute value -> REG1   
DBG(50475144)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50475145)> CPU DETAIL: Float: REG1: 02 1 4 8550 0000 0335 (-485.500000)
DBG(50475145)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475146)> CPU DETAIL: Result: 02 0 4 8550 0000 0335 00000000 00000000 (485.500000)
DBG(50475147)> CPU DETAIL: Shift : 02 0 4 8550 0000 0335 00000000 00000000 (485.500000)
DBG(50475150)> CPU CMD: Exec 0378: 50 22 1790 0000 0000   FSUB  0.05 - REG1   
DBG(50475151)> CPU DETAIL: Read R 1790: 9805000000000000 
DBG(50475152)> CPU DETAIL: Float: REG1: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475152)> CPU DETAIL:        REG2: 02 0 4 8550 0000 0335 (485.500000)
DBG(50475153)> CPU DETAIL: Result: 02 1 4 8545 0000 0335 00000000 00000000 (-485.450000)
DBG(50475154)> CPU DETAIL: Shift : 02 1 4 8545 0000 0335 00000000 00000000 (-485.450000)
DBG(50475157)> CPU CMD: Exec 0379: 00 63 0384 0000 0000   if >0 goto 0384 (set report code to 9 because TL - TE < 0.5)   
DBG(50475158)> CPU DETAIL: REG1: 0214854500000335
DBG(50475158)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50475160)> CPU CMD: Exec 0380: 50 22 1697 1733 0000   FSUB (1697 TLTE) - zero: normalize   
DBG(50475161)> CPU DETAIL: Read R 1697: 0214855000000335 
DBG(50475162)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50475163)> CPU DETAIL: Float: REG1: 02 1 4 8550 0000 0335 (-485.500000)
DBG(50475163)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475164)> CPU DETAIL: Result: 02 1 4 8550 0000 0335 00000000 00000000 (-485.500000)
DBG(50475165)> CPU DETAIL: Shift : 02 1 4 8550 0000 0335 00000000 00000000 (-485.500000)
DBG(50475168)> CPU CMD: Exec 0381: 00 63 0000 0000 0632   if <0 goto 0632   
DBG(50475169)> CPU DETAIL: REG1: 0214855000000335
DBG(50475169)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50475171)> CPU CMD: Exec 0632: 00 42 0886 1732 0000   mask (0886 w2 = xxxxxx  EEEEEEEEE R, EEE=event code, report code) with one - 
DBG(50475172)> CPU DETAIL: Read R 0886: 0000000241000003 
DBG(50475173)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50475174)> CPU DETAIL: Result: 0000000000000003 
DBG(50475177)> CPU CMD: Exec 0633: 00 72 1791 0000 0387   if report code <>9 goto 0387   
DBG(50475178)> CPU DETAIL: Read R 1791: 0000000000000009 
DBG(50475179)> CPU DETAIL: Diff: REG1: 0000000000000006
DBG(50475180)> CPU DETAIL: Transfer to T 
DBG(50475182)> CPU CMD: Exec 0387: 00 60 0000 0000 0389   goto 0389   
DBG(50475183)> CPU DETAIL: Transfer to T 
DBG(50475185)> CPU CMD: Exec 0389: 00 42 1697 1825 0000   mask (1697 TLTE = TL-TE value) sign digit    
DBG(50475186)> CPU DETAIL: Read R 1697: 0214855000000335 
DBG(50475187)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475188)> CPU DETAIL: Result: 0010000000000000 
DBG(50475191)> CPU CMD: Exec 0390: 00 72 1825 0000 0393   if <>negative goto 0393   
DBG(50475192)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50475193)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50475196)> CPU CMD: Exec 0391: 50 30 1697 1833 1697   FADD spe (1697 TLTE = TL-TE value) + (-0.05)   
DBG(50475197)> CPU DETAIL: Read R 1697: 0214855000000335 
DBG(50475198)> CPU DETAIL: Read S 1833: 9815000000000000 
DBG(50475199)> CPU DETAIL: Float: REG1: 02 1 4 8550 0000 0335 (-485.500000)
DBG(50475199)> CPU DETAIL:        REG2: 98 1 5 0000 0000 0000 (-0.050000)
DBG(50475200)> CPU DETAIL: Result: 02 1 4 8555 0000 0335 00000000 00000000 (-485.550000)
DBG(50475201)> CPU DETAIL: Shift : 02 1 4 8555 0000 0335 00000000 00000000 (-485.550000)
DBG(50475202)> CPU DETAIL: Write 1697: 0214855500000335 
DBG(50475204)> CPU CMD: Exec 0392: 00 60 1748 1726 0395   1.0 -> (1726 (*now* - TTTT)), goto 0395   
DBG(50475205)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50475206)> CPU DETAIL: Transfer to T 
DBG(50475206)> CPU DETAIL: Write 1726: 0001000000000000 
DBG(50475208)> CPU CMD: Exec 0395: 00 34 1792 1697 1697   FMUL Spe (0.1e-11) x (1697 TLTE = TL-TE value) -> (1697 TLTE = TL-TE value): 
DBG(50475209)> CPU DETAIL: Read R 1792: 8901000000000000 
DBG(50475210)> CPU DETAIL: Read S 1697: 0214855500000335 
DBG(50475211)> CPU DETAIL: Float: REG1: 89 0 1 0000 0000 0000 (0.000000)
DBG(50475211)> CPU DETAIL:        REG2: 02 1 4 8555 0000 0335 (-485.550000)
DBG(50475212)> CPU DETAIL: Result: 91 1 4 8555 0000 0335 00000000 00000000 (-0.000000)
DBG(50475213)> CPU DETAIL: Shift : 00 1 0 0000 0000 4855 50000033 50000000 (-0.000000)
DBG(50475214)> CPU DETAIL: Write 1697: 0010000000004855 
DBG(50475216)> CPU CMD: Exec 0396: 94 60 0000 0000 0000   shift to set as 000000 TLTE 000000   
DBG(50475217)> CPU DETAIL: Word Shift 6 digits left: REG1: 0000004855000000 
DBG(50475220)> CPU CMD: Exec 0397: 00 40 0885 0000 0885   + (0885 event w1)  -> (0885 event w1 = NNN xxx TLTE SCHEDL)    
DBG(50475221)> CPU DETAIL: Read R 0885: 0100000000151111 
DBG(50475222)> CPU DETAIL: Result: 0100004855151111 
DBG(50475223)> CPU DETAIL: Write 0885: 0100004855151111 
DBG(50475225)> CPU CMD: Exec 0398: 12 60 0891 0000 0000   get TSTS from (0891 event rec w7 = TSTS TTTT RS PR AA BB  AA=num of predeces 
DBG(50475226)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50475227)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000002221 
DBG(50475230)> CPU CMD: Exec 0399: 00 72 1733 0000 0497   if <> 0 goto 0497   
DBG(50475231)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50475232)> CPU DETAIL: Diff: REG1: 9999999999997779
DBG(50475233)> CPU DETAIL: Transfer to T 
DBG(50475235)> CPU CMD: Exec 0497: 12 60 0891 1713 0000   (0891 event rec w7) -> (1713 TSTS value from event rec w7)   
DBG(50475236)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50475237)> CPU DETAIL: Word Shift 12 digits right: REG1: 0000000000002221 
DBG(50475238)> CPU DETAIL: Write 1713: 0000000000002221 
DBG(50475240)> CPU CMD: Exec 0498: 99 42 0885 1748 0000   mask (event w1) with 0001 0..0 (get sign)   
DBG(50475241)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50475242)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50475243)> CPU DETAIL: Result: 0000000000000000 
DBG(50475244)> CPU DETAIL: Word Shift 1 digits left: REG1: 0000000000000000 
DBG(50475247)> CPU CMD: Exec 0499: 00 40 1713 0000 1713   add sign to (1713 TSTS value from event rec w7)   
DBG(50475248)> CPU DETAIL: Read R 1713: 0000000000002221 
DBG(50475249)> CPU DETAIL: Result: 0000000000002221 
DBG(50475250)> CPU DETAIL: Write 1713: 0000000000002221 
DBG(50475252)> CPU CMD: Exec 0500: 00 40 1745 0000 1713   +110..0 to convert to float   
DBG(50475253)> CPU DETAIL: Read R 1745: 1100000000000000 
DBG(50475254)> CPU DETAIL: Result: 1100000000002221 
DBG(50475255)> CPU DETAIL: Write 1713: 1100000000002221 
DBG(50475257)> CPU CMD: Exec 0501: 50 22 0000 1684 1713   FSUB - (1684) ??? -> (1713 TSTS value from event rec w7 in float)   
DBG(50475258)> CPU DETAIL: Read S 1684: 0000000000000000 
DBG(50475259)> CPU DETAIL: Float: REG1: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475259)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475260)> CPU DETAIL: Result: 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475261)> CPU DETAIL: Shift : 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475262)> CPU DETAIL: Write 1713: 0202221000000000 
DBG(50475264)> CPU CMD: Exec 0502: 96 60 0891 0000 0000   clear TSTS value ...   
DBG(50475265)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50475266)> CPU DETAIL: Word Shift 4 digits left: REG1: 4444556600010000 
DBG(50475269)> CPU CMD: Exec 0503: 04 60 0000 0891 0000   ... in (0891 event rec w7 = TSTS TTTT RS PR AA BB)      
DBG(50475270)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000444455660001 
DBG(50475271)> CPU DETAIL: Write 0891: 0000444455660001 
DBG(50475273)> CPU CMD: Exec 0504: 00 42 0885 1748 0000   clear digit 000 1 0..0 from   
DBG(50475274)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50475275)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50475276)> CPU DETAIL: Result: 0000000000000000 
DBG(50475279)> CPU CMD: Exec 0505: 00 41 0885 0000 0885   ...  (0885 event rec w1 = NNN Z xx xxxx SCHEDL  Z=TS Sign   
DBG(50475280)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50475281)> CPU DETAIL: Result: 0100004855151111 
DBG(50475282)> CPU DETAIL: Write 0885: 0100004855151111 
DBG(50475284)> CPU CMD: Exec 0506: 00 42 1713 1825 0000   Mask (1713 TSTS value from event rec w7 float) to get sign D14   
DBG(50475285)> CPU DETAIL: Read R 1713: 0202221000000000 
DBG(50475286)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475287)> CPU DETAIL: Result: 0000000000000000 
DBG(50475290)> CPU CMD: Exec 0507: 00 72 0000 1825 0511   if sign<>1 goto 0511   
DBG(50475291)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475292)> CPU DETAIL: Diff: REG1: 9990000000000000
DBG(50475293)> CPU DETAIL: Transfer to T 
DBG(50475295)> CPU CMD: Exec 0511: 50 30 1713 1790 1687   FADD spe (1713 TSTS value from event rec w7 float) + 0.05 ->    
DBG(50475296)> CPU DETAIL: Read R 1713: 0202221000000000 
DBG(50475297)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50475298)> CPU DETAIL: Float: REG1: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475298)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475299)> CPU DETAIL: Result: 02 0 2 2215 0000 0000 00000000 00000000 (222.150000)
DBG(50475300)> CPU DETAIL: Shift : 02 0 2 2215 0000 0000 00000000 00000000 (222.150000)
DBG(50475301)> CPU DETAIL: Write 1687: 0202221500000000 
DBG(50475303)> CPU CMD: Exec 0512: 00 34 1792 1687 1687   FMUL spe x 1e-11 (1687 expected input tape week float) -> (1687) convert to  
DBG(50475304)> CPU DETAIL: Read R 1792: 8901000000000000 
DBG(50475305)> CPU DETAIL: Read S 1687: 0202221500000000 
DBG(50475306)> CPU DETAIL: Float: REG1: 89 0 1 0000 0000 0000 (0.000000)
DBG(50475306)> CPU DETAIL:        REG2: 02 0 2 2215 0000 0000 (222.150000)
DBG(50475307)> CPU DETAIL: Result: 91 0 2 2215 0000 0000 00000000 00000000 (0.000000)
DBG(50475308)> CPU DETAIL: Shift : 00 0 0 0000 0000 2221 50000000 00000000 (0.000000)
DBG(50475309)> CPU DETAIL: Write 1687: 0000000000002221 
DBG(50475311)> CPU CMD: Exec 0513: 88 60 1687 0000 0000   REG1 = NNNN 0..0 this is the TSTS value   
DBG(50475312)> CPU DETAIL: Read R 1687: 0000000000002221 
DBG(50475313)> CPU DETAIL: Word Shift 12 digits left: REG1: 2221000000000000 
DBG(50475316)> CPU CMD: Exec 0514: 00 40 0891 0000 0891   put TSTS in (0891 event rec w7 TSTS TTTT RS PR AA BB  AA=num of predecesors  
DBG(50475317)> CPU DETAIL: Read R 0891: 0000444455660001 
DBG(50475318)> CPU DETAIL: Result: 2221444455660001 
DBG(50475319)> CPU DETAIL: Write 0891: 2221444455660001 
DBG(50475321)> CPU CMD: Exec 0515: 00 60 1744 0561 0000   (nop) -> 0561   
DBG(50475322)> CPU DETAIL: Read R 1744: 0060000000000000 
DBG(50475323)> CPU DETAIL: Write 0561: 0060000000000000 
DBG(50475325)> CPU CMD: Exec 0516: 00 72 0890 1733 0518   if (0890 event rec w6) <> 0 goto 0518   
DBG(50475326)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50475327)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50475328)> CPU DETAIL: Diff: REG1: 9203366600000000
DBG(50475329)> CPU DETAIL: Transfer to T 
DBG(50475331)> CPU CMD: Exec 0518: 00 60 0519 0000 1972   call 1972 (param 1714 0520 0000 0890 = RSLT RRRR xxxx PPP1)   
DBG(50475332)> CPU DETAIL: Read R 0519: 1714052000000890 
DBG(50475333)> CPU DETAIL: Transfer to T 
DBG(50475335)> CPU CMD: Exec 1972: 00 60 0000 1997 0000   REG1=param RSLT RRRR xxxx xxxx -> (1997)   
DBG(50475336)> CPU DETAIL: Write 1997: 1714052000000890 
DBG(50475338)> CPU CMD: Exec 1973: 08 60 0000 0000 0000   set instr to store result at RSLT addr, return to RRRR   
DBG(50475339)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000017140520 
DBG(50475342)> CPU CMD: Exec 1974: 00 40 1993 0000 1991   ... (1997) -> (RSLT), transfer to RRRR   
DBG(50475343)> CPU DETAIL: Read R 1993: 0060199700000000 
DBG(50475344)> CPU DETAIL: Result: 0060199717140520 
DBG(50475345)> CPU DETAIL: Write 1991: 0060199717140520 
DBG(50475347)> CPU CMD: Exec 1975: 92 60 1997 0000 0000   set inst to    
DBG(50475348)> CPU DETAIL: Read R 1997: 1714052000000890 
DBG(50475349)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000089000000000 
DBG(50475352)> CPU CMD: Exec 1976: 00 40 1994 0000 1978   ... FADD REG1 + (PPP1)    
DBG(50475353)> CPU DETAIL: Read R 1994: 5020000000001978 
DBG(50475354)> CPU DETAIL: Result: 5020089000001978 
DBG(50475355)> CPU DETAIL: Write 1978: 5020089000001978 
DBG(50475357)> CPU CMD: Exec 1977: 16 60 0000 1997 0000   clear (1997)   
DBG(50475358)> CPU DETAIL: Word Shift 16 digits right: REG1: 0000000000000000 
DBG(50475359)> CPU DETAIL: Write 1997: 0000000000000000 
DBG(50475361)> CPU CMD: Exec 1978: 50 20 0890 0000 1978   FADD REG1 + (PPP1) -> (1978)     
DBG(50475362)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50475363)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475363)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475364)> CPU DETAIL: Result: 92 0 3 3666 0000 0000 00000000 00000000 (0.000000)
DBG(50475365)> CPU DETAIL: Shift : 92 0 3 3666 0000 0000 00000000 00000000 (0.000000)
DBG(50475366)> CPU DETAIL: Write 1978: 9203366600000000 
DBG(50475368)> CPU CMD: Exec 1979: 00 63 0000 1991 1992   if =0 goto 1991, if <0 goto 1992   
DBG(50475369)> CPU DETAIL: REG1: 9203366600000000
DBG(50475369)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50475371)> CPU CMD: Exec 1980: 00 40 1996 0000 0000      
DBG(50475372)> CPU DETAIL: Read R 1996: 6701000000000000 
DBG(50475373)> CPU DETAIL: Result: 5904366600000000 
DBG(50475376)> CPU CMD: Exec 1981: 03 60 0000 0000 0000      
DBG(50475377)> CPU DETAIL: Word Shift 3 digits right: REG1: 0005904366600000 
DBG(50475380)> CPU CMD: Exec 1982: 11 34 1995 0000 0000      
DBG(50475381)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475382)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475382)> CPU DETAIL:        REG2: 00 0 5 9043 6660 0000 (5.904367)
DBG(50475383)> CPU DETAIL: Result: 00 0 2 9521 8330 0000 00000000 00000000 (2.952183)
DBG(50475384)> CPU DETAIL: Shift : 11 0 0 0000 0000 0029 52183300 00000000 (2.900000)
DBG(50475387)> CPU CMD: Exec 1983: 86 60 0000 0000 0000      
DBG(50475388)> CPU DETAIL: Word Shift 14 digits left: REG1: 2900000000000000 
DBG(50475391)> CPU CMD: Exec 1984: 00 40 1996 0000 0000      
DBG(50475392)> CPU DETAIL: Read R 1996: 6701000000000000 
DBG(50475393)> CPU DETAIL: Result: 9601000000000000 
DBG(50475396)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475397)> CPU DETAIL: Read R 1997: 0000000000000000 
DBG(50475398)> CPU DETAIL: Result: 9601000000000000 
DBG(50475399)> CPU DETAIL: Write 1997: 9601000000000000 
DBG(50475401)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475402)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475403)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475403)> CPU DETAIL:        REG2: 96 0 1 0000 0000 0000 (0.000100)
DBG(50475404)> CPU DETAIL: Result: 96 0 3 3666 0000 0000 00000000 00000000 (0.000337)
DBG(50475405)> CPU DETAIL: Shift : 96 0 3 3666 0000 0000 00000000 00000000 (0.000337)
DBG(50475408)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475409)> CPU DETAIL: Read S 1997: 9601000000000000 
DBG(50475410)> CPU DETAIL: Float: REG1: 96 0 3 3666 0000 0000 (0.000337)
DBG(50475410)> CPU DETAIL:        REG2: 96 0 1 0000 0000 0000 (0.000100)
DBG(50475411)> CPU DETAIL: Result: 96 0 2 3666 0000 0000 00000000 00000000 (0.000237)
DBG(50475412)> CPU DETAIL: Shift : 96 0 2 3666 0000 0000 00000000 00000000 (0.000237)
DBG(50475415)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475416)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475417)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475417)> CPU DETAIL:        REG2: 96 0 2 3666 0000 0000 (0.000237)
DBG(50475418)> CPU DETAIL: Result: 96 0 1 1833 0000 0000 00000000 00000000 (0.000118)
DBG(50475419)> CPU DETAIL: Shift : 96 0 1 1833 0000 0000 00000000 00000000 (0.000118)
DBG(50475422)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475423)> CPU DETAIL: Read R 1997: 9601000000000000 
DBG(50475424)> CPU DETAIL: Float: REG1: 96 0 1 0000 0000 0000 (0.000100)
DBG(50475424)> CPU DETAIL:        REG2: 96 0 1 1833 0000 0000 (0.000118)
DBG(50475425)> CPU DETAIL: Result: 96 0 2 1833 0000 0000 00000000 00000000 (0.000218)
DBG(50475426)> CPU DETAIL: Shift : 96 0 2 1833 0000 0000 00000000 00000000 (0.000218)
DBG(50475429)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475430)> CPU DETAIL: Read S 1997: 9601000000000000 
DBG(50475431)> CPU DETAIL: Diff: REG1: 0001183300000000
DBG(50475432)> CPU DETAIL: Transfer to T 
DBG(50475434)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475435)> CPU DETAIL: Read R 1997: 9601000000000000 
DBG(50475436)> CPU DETAIL: Result: 9602183300000000 
DBG(50475437)> CPU DETAIL: Write 1997: 9602183300000000 
DBG(50475439)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475440)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475441)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475441)> CPU DETAIL:        REG2: 96 0 2 1833 0000 0000 (0.000218)
DBG(50475442)> CPU DETAIL: Result: 96 0 1 5419 7774 0118 16967773 43750000 (0.000154)
DBG(50475443)> CPU DETAIL: Shift : 96 0 1 5419 7774 0118 16967773 43750000 (0.000154)
DBG(50475446)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475447)> CPU DETAIL: Read S 1997: 9602183300000000 
DBG(50475448)> CPU DETAIL: Float: REG1: 96 0 1 5419 7774 0118 (0.000154)
DBG(50475448)> CPU DETAIL:        REG2: 96 0 2 1833 0000 0000 (0.000218)
DBG(50475449)> CPU DETAIL: Result: 96 1 0 6413 2225 9882 00000000 00000000 (-0.000064)
DBG(50475450)> CPU DETAIL: Shift : 95 1 6 4132 2259 8820 00000000 00000000 (-0.000064)
DBG(50475453)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475454)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475455)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475455)> CPU DETAIL:        REG2: 95 1 6 4132 2259 8820 (-0.000064)
DBG(50475456)> CPU DETAIL: Result: 95 1 3 2066 1129 9410 00048828 12500000 (-0.000032)
DBG(50475457)> CPU DETAIL: Shift : 95 1 3 2066 1129 9410 00048828 12500000 (-0.000032)
DBG(50475460)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475461)> CPU DETAIL: Read R 1997: 9602183300000000 
DBG(50475462)> CPU DETAIL: Float: REG1: 96 0 2 1833 0000 0000 (0.000218)
DBG(50475462)> CPU DETAIL:        REG2: 95 1 3 2066 1129 9410 (-0.000032)
DBG(50475463)> CPU DETAIL: Result: 96 0 1 8626 3887 0059 00000000 00000000 (0.000186)
DBG(50475464)> CPU DETAIL: Shift : 96 0 1 8626 3887 0059 00000000 00000000 (0.000186)
DBG(50475467)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475468)> CPU DETAIL: Read S 1997: 9602183300000000 
DBG(50475469)> CPU DETAIL: Diff: REG1: 9999679338870059
DBG(50475470)> CPU DETAIL: Transfer to T 
DBG(50475472)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475473)> CPU DETAIL: Read R 1997: 9602183300000000 
DBG(50475474)> CPU DETAIL: Result: 9601862638870059 
DBG(50475475)> CPU DETAIL: Write 1997: 9601862638870059 
DBG(50475477)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475478)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475479)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475479)> CPU DETAIL:        REG2: 96 0 1 8626 3887 0059 (0.000186)
DBG(50475480)> CPU DETAIL: Result: 96 0 1 8074 3570 5394 33740234 37500000 (0.000181)
DBG(50475481)> CPU DETAIL: Shift : 96 0 1 8074 3570 5394 33740234 37500000 (0.000181)
DBG(50475484)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475485)> CPU DETAIL: Read S 1997: 9601862638870059 
DBG(50475486)> CPU DETAIL: Float: REG1: 96 0 1 8074 3570 5394 (0.000181)
DBG(50475486)> CPU DETAIL:        REG2: 96 0 1 8626 3887 0059 (0.000186)
DBG(50475487)> CPU DETAIL: Result: 96 1 0 0552 0316 4665 00000000 00000000 (-0.000006)
DBG(50475488)> CPU DETAIL: Shift : 94 1 5 5203 1646 6500 00000000 00000000 (-0.000006)
DBG(50475491)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475492)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475493)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475493)> CPU DETAIL:        REG2: 94 1 5 5203 1646 6500 (-0.000006)
DBG(50475494)> CPU DETAIL: Result: 94 1 2 7601 5823 3250 00000000 00000000 (-0.000003)
DBG(50475495)> CPU DETAIL: Shift : 94 1 2 7601 5823 3250 00000000 00000000 (-0.000003)
DBG(50475498)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475499)> CPU DETAIL: Read R 1997: 9601862638870059 
DBG(50475500)> CPU DETAIL: Float: REG1: 96 0 1 8626 3887 0059 (0.000186)
DBG(50475500)> CPU DETAIL:        REG2: 94 1 2 7601 5823 3250 (-0.000003)
DBG(50475501)> CPU DETAIL: Result: 96 0 1 8350 3728 7726 50000000 00000000 (0.000184)
DBG(50475502)> CPU DETAIL: Shift : 96 0 1 8350 3728 7727 50000000 00000000 (0.000184)
DBG(50475505)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475506)> CPU DETAIL: Read S 1997: 9601862638870059 
DBG(50475507)> CPU DETAIL: Diff: REG1: 9999972398417668
DBG(50475508)> CPU DETAIL: Transfer to T 
DBG(50475510)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475511)> CPU DETAIL: Read R 1997: 9601862638870059 
DBG(50475512)> CPU DETAIL: Result: 9601835037287727 
DBG(50475513)> CPU DETAIL: Write 1997: 9601835037287727 
DBG(50475515)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475516)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475517)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475517)> CPU DETAIL:        REG2: 96 0 1 8350 3728 7727 (0.000184)
DBG(50475518)> CPU DETAIL: Result: 96 0 1 8346 2212 0496 57910156 25000000 (0.000183)
DBG(50475519)> CPU DETAIL: Shift : 96 0 1 8346 2212 0496 57910156 25000000 (0.000183)
DBG(50475522)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475523)> CPU DETAIL: Read S 1997: 9601835037287727 
DBG(50475524)> CPU DETAIL: Float: REG1: 96 0 1 8346 2212 0496 (0.000183)
DBG(50475524)> CPU DETAIL:        REG2: 96 0 1 8350 3728 7727 (0.000184)
DBG(50475525)> CPU DETAIL: Result: 96 1 0 0004 1516 7231 00000000 00000000 (-0.000000)
DBG(50475526)> CPU DETAIL: Shift : 92 1 4 1516 7231 0000 00000000 00000000 (-0.000000)
DBG(50475529)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475530)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475531)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475531)> CPU DETAIL:        REG2: 92 1 4 1516 7231 0000 (-0.000000)
DBG(50475532)> CPU DETAIL: Result: 92 1 2 0758 3615 5000 00024414 06250000 (-0.000000)
DBG(50475533)> CPU DETAIL: Shift : 92 1 2 0758 3615 5000 00024414 06250000 (-0.000000)
DBG(50475536)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475537)> CPU DETAIL: Read R 1997: 9601835037287727 
DBG(50475538)> CPU DETAIL: Float: REG1: 96 0 1 8350 3728 7727 (0.000184)
DBG(50475538)> CPU DETAIL:        REG2: 92 1 2 0758 3615 5000 (-0.000000)
DBG(50475539)> CPU DETAIL: Result: 96 0 1 8348 2970 4111 50000000 00000000 (0.000183)
DBG(50475540)> CPU DETAIL: Shift : 96 0 1 8348 2970 4111 50000000 00000000 (0.000183)
DBG(50475543)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475544)> CPU DETAIL: Read S 1997: 9601835037287727 
DBG(50475545)> CPU DETAIL: Diff: REG1: 9999999792416384
DBG(50475546)> CPU DETAIL: Transfer to T 
DBG(50475548)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475549)> CPU DETAIL: Read R 1997: 9601835037287727 
DBG(50475550)> CPU DETAIL: Result: 9601834829704111 
DBG(50475551)> CPU DETAIL: Write 1997: 9601834829704111 
DBG(50475553)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475554)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475555)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475555)> CPU DETAIL:        REG2: 96 0 1 8348 2970 4111 (0.000183)
DBG(50475556)> CPU DETAIL: Result: 96 0 1 8348 2968 0627 58911132 81250000 (0.000183)
DBG(50475557)> CPU DETAIL: Shift : 96 0 1 8348 2968 0627 58911132 81250000 (0.000183)
DBG(50475560)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475561)> CPU DETAIL: Read S 1997: 9601834829704111 
DBG(50475562)> CPU DETAIL: Float: REG1: 96 0 1 8348 2968 0627 (0.000183)
DBG(50475562)> CPU DETAIL:        REG2: 96 0 1 8348 2970 4111 (0.000183)
DBG(50475563)> CPU DETAIL: Result: 96 1 0 0000 0002 3484 00000000 00000000 (-0.000000)
DBG(50475564)> CPU DETAIL: Shift : 88 1 2 3484 0000 0000 00000000 00000000 (-0.000000)
DBG(50475567)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475568)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475569)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475569)> CPU DETAIL:        REG2: 88 1 2 3484 0000 0000 (-0.000000)
DBG(50475570)> CPU DETAIL: Result: 88 1 1 1742 0000 0000 00000000 00000000 (-0.000000)
DBG(50475571)> CPU DETAIL: Shift : 88 1 1 1742 0000 0000 00000000 00000000 (-0.000000)
DBG(50475574)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475575)> CPU DETAIL: Read R 1997: 9601834829704111 
DBG(50475576)> CPU DETAIL: Float: REG1: 96 0 1 8348 2970 4111 (0.000183)
DBG(50475576)> CPU DETAIL:        REG2: 88 1 1 1742 0000 0000 (-0.000000)
DBG(50475577)> CPU DETAIL: Result: 96 0 1 8348 2969 2369 00000000 00000000 (0.000183)
DBG(50475578)> CPU DETAIL: Shift : 96 0 1 8348 2969 2369 00000000 00000000 (0.000183)
DBG(50475581)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475582)> CPU DETAIL: Read S 1997: 9601834829704111 
DBG(50475583)> CPU DETAIL: Diff: REG1: 9999999999988258
DBG(50475584)> CPU DETAIL: Transfer to T 
DBG(50475586)> CPU CMD: Exec 1985: 00 40 1997 0000 1997      
DBG(50475587)> CPU DETAIL: Read R 1997: 9601834829704111 
DBG(50475588)> CPU DETAIL: Result: 9601834829692369 
DBG(50475589)> CPU DETAIL: Write 1997: 9601834829692369 
DBG(50475591)> CPU CMD: Exec 1986: 50 36 1978 0000 0000      
DBG(50475592)> CPU DETAIL: Read R 1978: 9203366600000000 
DBG(50475593)> CPU DETAIL: Float: REG1: 92 0 3 3666 0000 0000 (0.000000)
DBG(50475593)> CPU DETAIL:        REG2: 96 0 1 8348 2969 2369 (0.000183)
DBG(50475594)> CPU DETAIL: Result: 96 0 1 8348 2969 2369 58911132 81250000 (0.000183)
DBG(50475595)> CPU DETAIL: Shift : 96 0 1 8348 2969 2369 58911132 81250000 (0.000183)
DBG(50475598)> CPU CMD: Exec 1987: 50 32 0000 1997 0000      
DBG(50475599)> CPU DETAIL: Read S 1997: 9601834829692369 
DBG(50475600)> CPU DETAIL: Float: REG1: 96 0 1 8348 2969 2369 (0.000183)
DBG(50475600)> CPU DETAIL:        REG2: 96 0 1 8348 2969 2369 (0.000183)
DBG(50475601)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50475602)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50475605)> CPU CMD: Exec 1988: 50 34 1995 0000 0000      
DBG(50475606)> CPU DETAIL: Read R 1995: 9905000000000000 
DBG(50475607)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475607)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475608)> CPU DETAIL: Result: 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50475609)> CPU DETAIL: Shift : 00 0 0 0000 0000 0000 00000000 00000000 (0.000000)
DBG(50475612)> CPU CMD: Exec 1989: 50 20 1997 0000 0000      
DBG(50475613)> CPU DETAIL: Read R 1997: 9601834829692369 
DBG(50475614)> CPU DETAIL: Float: REG1: 96 0 1 8348 2969 2369 (0.000183)
DBG(50475614)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475615)> CPU DETAIL: Result: 96 0 1 8348 2969 2369 00000000 00000000 (0.000183)
DBG(50475616)> CPU DETAIL: Shift : 96 0 1 8348 2969 2369 00000000 00000000 (0.000183)
DBG(50475619)> CPU CMD: Exec 1990: 00 72 0000 1997 1985      
DBG(50475620)> CPU DETAIL: Read S 1997: 9601834829692369 
DBG(50475621)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50475624)> CPU CMD: Exec 1991: 00 60 1997 1714 0520   (1997) -> (RSLT), transfer to RRRR   
DBG(50475625)> CPU DETAIL: Read R 1997: 9601834829692369 
DBG(50475626)> CPU DETAIL: Transfer to T 
DBG(50475626)> CPU DETAIL: Write 1714: 9601834829692369 
DBG(50475628)> CPU CMD: Exec 0520: 50 22 1713 0889 0000   FSUB (1713 TSTS value) - (0889 event TL value) -> REG1   
DBG(50475629)> CPU DETAIL: Read R 1713: 0202221000000000 
DBG(50475630)> CPU DETAIL: Read S 0889: 0214855000000335 
DBG(50475631)> CPU DETAIL: Float: REG1: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475631)> CPU DETAIL:        REG2: 02 1 4 8550 0000 0335 (-485.500000)
DBG(50475632)> CPU DETAIL: Result: 02 0 7 0760 0000 0335 00000000 00000000 (707.600000)
DBG(50475633)> CPU DETAIL: Shift : 02 0 7 0760 0000 0335 00000000 00000000 (707.600000)
DBG(50475636)> CPU CMD: Exec 0521: 50 26 0000 1714 1715   FDIV REG1 / (1714) -> (1715)   
DBG(50475637)> CPU DETAIL: Read S 1714: 9601834829692369 
DBG(50475638)> CPU DETAIL: Float: REG1: 02 0 7 0760 0000 0335 (707.600000)
DBG(50475638)> CPU DETAIL:        REG2: 96 0 1 8348 2969 2369 (0.000183)
DBG(50475639)> CPU DETAIL: Result: 06 0 3 8564 8871 3783 00976562 50000000 (3856488.713783)
DBG(50475640)> CPU DETAIL: Shift : 06 0 3 8564 8871 3783 00976562 50000000 (3856488.713783)
DBG(50475641)> CPU DETAIL: Write 1715: 0603856488713783 
DBG(50475643)> CPU CMD: Exec 0522: 50 28 1812 1715 0000   FSUB Abs |4.0|-|(1715)| -> REG1   
DBG(50475644)> CPU DETAIL: Read R 1812: 0004000000000000 
DBG(50475645)> CPU DETAIL: Read S 1715: 0603856488713783 
DBG(50475646)> CPU DETAIL: Float: REG1: 00 0 4 0000 0000 0000 (4.000000)
DBG(50475646)> CPU DETAIL:        REG2: 06 0 3 8564 8871 3783 (3856488.713783)
DBG(50475647)> CPU DETAIL: Result: 06 1 3 8564 8471 3783 00000000 00000000 (-3856484.713783)
DBG(50475648)> CPU DETAIL: Shift : 06 1 3 8564 8471 3783 00000000 00000000 (-3856484.713783)
DBG(50475651)> CPU CMD: Exec 0523: 00 63 0526 0000 0000   if >0 goto 0526   
DBG(50475652)> CPU DETAIL: REG1: 0613856484713783
DBG(50475652)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50475654)> CPU CMD: Exec 0524: 00 42 1715 1825 0000   mask (1715) to get sign   
DBG(50475655)> CPU DETAIL: Read R 1715: 0603856488713783 
DBG(50475656)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475657)> CPU DETAIL: Result: 0000000000000000 
DBG(50475660)> CPU CMD: Exec 0525: 00 40 1813 0000 1715   3.99 with the sign -> (1715)   
DBG(50475661)> CPU DETAIL: Read R 1813: 0003990000000000 
DBG(50475662)> CPU DETAIL: Result: 0003990000000000 
DBG(50475663)> CPU DETAIL: Write 1715: 0003990000000000 
DBG(50475665)> CPU CMD: Exec 0526: 00 42 1715 1825 0000   mask (1715) to get sign   
DBG(50475666)> CPU DETAIL: Read R 1715: 0003990000000000 
DBG(50475667)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475668)> CPU DETAIL: Result: 0000000000000000 
DBG(50475671)> CPU CMD: Exec 0527: 00 72 0000 1825 0530   if <>negative goto 0530    
DBG(50475672)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475673)> CPU DETAIL: Diff: REG1: 9990000000000000
DBG(50475674)> CPU DETAIL: Transfer to T 
DBG(50475676)> CPU CMD: Exec 0530: 50 20 1814 1715 1715   FADD 0.005 + (1715) -> (1715)   
DBG(50475677)> CPU DETAIL: Read R 1814: 9705000000000000 
DBG(50475678)> CPU DETAIL: Read S 1715: 0003990000000000 
DBG(50475679)> CPU DETAIL: Float: REG1: 97 0 5 0000 0000 0000 (0.005000)
DBG(50475679)> CPU DETAIL:        REG2: 00 0 3 9900 0000 0000 (3.990000)
DBG(50475680)> CPU DETAIL: Result: 00 0 3 9950 0000 0000 00000000 00000000 (3.995000)
DBG(50475681)> CPU DETAIL: Shift : 00 0 3 9950 0000 0000 00000000 00000000 (3.995000)
DBG(50475682)> CPU DETAIL: Write 1715: 0003995000000000 
DBG(50475684)> CPU CMD: Exec 0531: 00 60 1828 0560 0000   set instr 0560 to FADD (0.5) + 0000 -> (1724)   
DBG(50475685)> CPU DETAIL: Read R 1828: 5020183000001724 
DBG(50475686)> CPU DETAIL: Write 0560: 5020183000001724 
DBG(50475688)> CPU CMD: Exec 0532: 00 34 1815 1715 0000   FMUL Spe 1x10^-10 x (1715) -> REG1 = convert to integer   
DBG(50475689)> CPU DETAIL: Read R 1815: 9001000000000000 
DBG(50475690)> CPU DETAIL: Read S 1715: 0003995000000000 
DBG(50475691)> CPU DETAIL: Float: REG1: 90 0 1 0000 0000 0000 (0.000000)
DBG(50475691)> CPU DETAIL:        REG2: 00 0 3 9950 0000 0000 (3.995000)
DBG(50475692)> CPU DETAIL: Result: 90 0 3 9950 0000 0000 00000000 00000000 (0.000000)
DBG(50475693)> CPU DETAIL: Shift : 00 0 0 0000 0000 0399 50000000 00000000 (0.000000)
DBG(50475696)> CPU CMD: Exec 0533: 00 40 1818 0000 1716   YYY   
DBG(50475697)> CPU DETAIL: Read R 1818: 1000000000000000 
DBG(50475698)> CPU DETAIL: Result: 1000000000000399 
DBG(50475699)> CPU DETAIL: Write 1716: 1000000000000399 
DBG(50475701)> CPU CMD: Exec 0534: 50 26 0000 1790 0000      
DBG(50475702)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50475703)> CPU DETAIL: Float: REG1: 00 0 3 9900 0000 0000 (3.990000)
DBG(50475703)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475704)> CPU DETAIL: Result: 01 0 7 9800 0000 0000 00000000 00000000 (79.800000)
DBG(50475705)> CPU DETAIL: Shift : 01 0 7 9800 0000 0000 00000000 00000000 (79.800000)
DBG(50475708)> CPU CMD: Exec 0535: 00 34 1816 0000 1717      
DBG(50475709)> CPU DETAIL: Read R 1816: 8801000000000000 
DBG(50475710)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50475710)> CPU DETAIL:        REG2: 01 0 7 9800 0000 0000 (79.800000)
DBG(50475711)> CPU DETAIL: Result: 89 0 7 9800 0000 0000 00000000 00000000 (0.000000)
DBG(50475712)> CPU DETAIL: Shift : 00 0 0 0000 0000 0079 80000000 00000000 (0.000000)
DBG(50475713)> CPU DETAIL: Write 1717: 0000000000000079 
DBG(50475715)> CPU CMD: Exec 0536: 96 40 1817 0000 1718      
DBG(50475716)> CPU DETAIL: Read R 1817: 0000000000001849 
DBG(50475717)> CPU DETAIL: Result: 0000000000001928 
DBG(50475718)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000019280000 
DBG(50475719)> CPU DETAIL: Write 1718: 0000000019280000 
DBG(50475721)> CPU CMD: Exec 0537: 96 40 0000 1737 1719      
DBG(50475722)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50475723)> CPU DETAIL: Result: 0000000019290000 
DBG(50475724)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000192900000000 
DBG(50475725)> CPU DETAIL: Write 1719: 0000192900000000 
DBG(50475727)> CPU CMD: Exec 0538: 00 40 0000 1777 1720      
DBG(50475728)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50475729)> CPU DETAIL: Result: 0000193000000000 
DBG(50475730)> CPU DETAIL: Write 1720: 0000193000000000 
DBG(50475732)> CPU CMD: Exec 0539: 00 40 1819 1717 0000      
DBG(50475733)> CPU DETAIL: Read R 1819: 1200000000000000 
DBG(50475734)> CPU DETAIL: Read S 1717: 0000000000000079 
DBG(50475735)> CPU DETAIL: Result: 1200000000000079 
DBG(50475738)> CPU CMD: Exec 0540: 50 24 0000 1790 1721      
DBG(50475739)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50475740)> CPU DETAIL: Float: REG1: 01 0 7 9000 0000 0000 (79.000000)
DBG(50475740)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475741)> CPU DETAIL: Result: 00 0 3 9500 0000 0000 00000000 00000000 (3.950000)
DBG(50475742)> CPU DETAIL: Shift : 00 0 3 9500 0000 0000 00000000 00000000 (3.950000)
DBG(50475743)> CPU DETAIL: Write 1721: 0003950000000000 
DBG(50475745)> CPU CMD: Exec 0541: 50 22 1716 0000 0000      
DBG(50475746)> CPU DETAIL: Read R 1716: 1000000000000399 
DBG(50475747)> CPU DETAIL: Float: REG1: 00 0 3 9900 0000 0000 (3.990000)
DBG(50475747)> CPU DETAIL:        REG2: 00 0 3 9500 0000 0000 (3.950000)
DBG(50475748)> CPU DETAIL: Result: 00 0 0 0400 0000 0000 00000000 00000000 (0.040000)
DBG(50475749)> CPU DETAIL: Shift : 98 0 4 0000 0000 0000 00000000 00000000 (0.040000)
DBG(50475752)> CPU CMD: Exec 0542: 50 26 0000 1790 1722      
DBG(50475753)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50475754)> CPU DETAIL: Float: REG1: 98 0 4 0000 0000 0000 (0.040000)
DBG(50475754)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475755)> CPU DETAIL: Result: 99 0 8 0000 0000 0000 00000000 00000000 (0.800000)
DBG(50475756)> CPU DETAIL: Shift : 99 0 8 0000 0000 0000 00000000 00000000 (0.800000)
DBG(50475757)> CPU DETAIL: Write 1722: 9908000000000000 
DBG(50475759)> CPU CMD: Exec 0543: 00 40 1718 1820 0000      
DBG(50475760)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50475761)> CPU DETAIL: Read S 1820: 5022000000000000 
DBG(50475762)> CPU DETAIL: Result: 5022000019280000 
DBG(50475765)> CPU CMD: Exec 0544: 00 40 1719 0000 0549      
DBG(50475766)> CPU DETAIL: Read R 1719: 0000192900000000 
DBG(50475767)> CPU DETAIL: Result: 5022192919280000 
DBG(50475768)> CPU DETAIL: Write 0549: 5022192919280000 
DBG(50475770)> CPU CMD: Exec 0545: 00 40 1718 1824 0551      
DBG(50475771)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50475772)> CPU DETAIL: Read S 1824: 5020000000000388 
DBG(50475773)> CPU DETAIL: Result: 5020000019280388 
DBG(50475774)> CPU DETAIL: Write 0551: 5020000019280388 
DBG(50475776)> CPU CMD: Exec 0546: 00 40 1719 1821 0555      
DBG(50475777)> CPU DETAIL: Read R 1719: 0000192900000000 
DBG(50475778)> CPU DETAIL: Read S 1821: 5024000018220000 
DBG(50475779)> CPU DETAIL: Result: 5024192918220000 
DBG(50475780)> CPU DETAIL: Write 0555: 5024192918220000 
DBG(50475782)> CPU CMD: Exec 0547: 00 40 1720 1820 0556      
DBG(50475783)> CPU DETAIL: Read R 1720: 0000193000000000 
DBG(50475784)> CPU DETAIL: Read S 1820: 5022000000000000 
DBG(50475785)> CPU DETAIL: Result: 5022193000000000 
DBG(50475786)> CPU DETAIL: Write 0556: 5022193000000000 
DBG(50475788)> CPU CMD: Exec 0548: 00 40 1718 1823 0557      
DBG(50475789)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50475790)> CPU DETAIL: Read S 1823: 5020000000000000 
DBG(50475791)> CPU DETAIL: Result: 5020000019280000 
DBG(50475792)> CPU DETAIL: Write 0557: 5020000019280000 
DBG(50475794)> CPU CMD: Exec 0549: 50 22 1929 1928 0000      
DBG(50475795)> CPU DETAIL: Read R 1929: 9905000000000000 
DBG(50475796)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50475797)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475797)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50475798)> CPU DETAIL: Result: 99 0 0 0004 0000 0000 00000000 00000000 (0.000040)
DBG(50475799)> CPU DETAIL: Shift : 95 0 4 0000 0000 0000 00000000 00000000 (0.000040)
DBG(50475802)> CPU CMD: Exec 0550: 50 24 1722 0000 0000      
DBG(50475803)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50475804)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50475804)> CPU DETAIL:        REG2: 95 0 4 0000 0000 0000 (0.000040)
DBG(50475805)> CPU DETAIL: Result: 95 0 3 2000 0000 0000 00000000 00000000 (0.000032)
DBG(50475806)> CPU DETAIL: Shift : 95 0 3 2000 0000 0000 00000000 00000000 (0.000032)
DBG(50475809)> CPU CMD: Exec 0551: 50 20 0000 1928 0388      
DBG(50475810)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50475811)> CPU DETAIL: Float: REG1: 95 0 3 2000 0000 0000 (0.000032)
DBG(50475811)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50475812)> CPU DETAIL: Result: 99 0 4 9999 2000 0000 00000000 00000000 (0.499992)
DBG(50475813)> CPU DETAIL: Shift : 99 0 4 9999 2000 0000 00000000 00000000 (0.499992)
DBG(50475814)> CPU DETAIL: Write 0388: 9904999920000000 
DBG(50475816)> CPU CMD: Exec 0552: 50 22 1722 1748 0000      
DBG(50475817)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50475818)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50475819)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50475819)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50475820)> CPU DETAIL: Result: 00 1 0 2000 0000 0000 00000000 00000000 (-0.200000)
DBG(50475821)> CPU DETAIL: Shift : 99 1 2 0000 0000 0000 00000000 00000000 (-0.200000)
DBG(50475824)> CPU CMD: Exec 0553: 50 24 1722 0000 0000      
DBG(50475825)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50475826)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50475826)> CPU DETAIL:        REG2: 99 1 2 0000 0000 0000 (-0.200000)
DBG(50475827)> CPU DETAIL: Result: 99 1 1 6000 0000 0000 00000000 00000000 (-0.160000)
DBG(50475828)> CPU DETAIL: Shift : 99 1 1 6000 0000 0000 00000000 00000000 (-0.160000)
DBG(50475831)> CPU CMD: Exec 0554: 50 24 0000 1830 1723      
DBG(50475832)> CPU DETAIL: Read S 1830: 9905000000000000 
DBG(50475833)> CPU DETAIL: Float: REG1: 99 1 1 6000 0000 0000 (-0.160000)
DBG(50475833)> CPU DETAIL:        REG2: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475834)> CPU DETAIL: Result: 98 1 8 0000 0000 0000 00000000 00000000 (-0.080000)
DBG(50475835)> CPU DETAIL: Shift : 98 1 8 0000 0000 0000 00000000 00000000 (-0.080000)
DBG(50475836)> CPU DETAIL: Write 1723: 9818000000000000 
DBG(50475838)> CPU CMD: Exec 0555: 50 24 1929 1822 0000      
DBG(50475839)> CPU DETAIL: Read R 1929: 9905000000000000 
DBG(50475840)> CPU DETAIL: Read S 1822: 0002000000000000 
DBG(50475841)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475841)> CPU DETAIL:        REG2: 00 0 2 0000 0000 0000 (2.000000)
DBG(50475842)> CPU DETAIL: Result: 00 0 1 0000 0000 0000 00000000 00000000 (1.000000)
DBG(50475843)> CPU DETAIL: Shift : 00 0 1 0000 0000 0000 00000000 00000000 (1.000000)
DBG(50475846)> CPU CMD: Exec 0556: 50 22 1930 0000 0000      
DBG(50475847)> CPU DETAIL: Read R 1930: 9905000000000000 
DBG(50475848)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475848)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50475849)> CPU DETAIL: Result: 00 1 0 5000 0000 0000 00000000 00000000 (-0.500000)
DBG(50475850)> CPU DETAIL: Shift : 99 1 5 0000 0000 0000 00000000 00000000 (-0.500000)
DBG(50475853)> CPU CMD: Exec 0557: 50 20 0000 1928 0000      
DBG(50475854)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50475855)> CPU DETAIL: Float: REG1: 99 1 5 0000 0000 0000 (-0.500000)
DBG(50475855)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50475856)> CPU DETAIL: Result: 99 1 0 0004 0000 0000 00000000 00000000 (-0.000040)
DBG(50475857)> CPU DETAIL: Shift : 95 1 4 0000 0000 0000 00000000 00000000 (-0.000040)
DBG(50475860)> CPU CMD: Exec 0558: 50 24 1723 0000 0000      
DBG(50475861)> CPU DETAIL: Read R 1723: 9818000000000000 
DBG(50475862)> CPU DETAIL: Float: REG1: 98 1 8 0000 0000 0000 (-0.080000)
DBG(50475862)> CPU DETAIL:        REG2: 95 1 4 0000 0000 0000 (-0.000040)
DBG(50475863)> CPU DETAIL: Result: 94 0 3 2000 0000 0000 00000000 00000000 (0.000003)
DBG(50475864)> CPU DETAIL: Shift : 94 0 3 2000 0000 0000 00000000 00000000 (0.000003)
DBG(50475867)> CPU CMD: Exec 0559: 50 20 0388 0000 1724      
DBG(50475868)> CPU DETAIL: Read R 0388: 9904999920000000 
DBG(50475869)> CPU DETAIL: Float: REG1: 99 0 4 9999 2000 0000 (0.499992)
DBG(50475869)> CPU DETAIL:        REG2: 94 0 3 2000 0000 0000 (0.000003)
DBG(50475870)> CPU DETAIL: Result: 99 0 4 9999 5200 0000 00000000 00000000 (0.499995)
DBG(50475871)> CPU DETAIL: Shift : 99 0 4 9999 5200 0000 00000000 00000000 (0.499995)
DBG(50475872)> CPU DETAIL: Write 1724: 9904999952000000 
DBG(50475874)> CPU CMD: Exec 0560: 50 20 1830 0000 1724   FADD (0.5) + REG1 -> (1724)   
DBG(50475875)> CPU DETAIL: Read R 1830: 9905000000000000 
DBG(50475876)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50475876)> CPU DETAIL:        REG2: 99 0 4 9999 5200 0000 (0.499995)
DBG(50475877)> CPU DETAIL: Result: 99 0 9 9999 5200 0000 00000000 00000000 (0.999995)
DBG(50475878)> CPU DETAIL: Shift : 99 0 9 9999 5200 0000 00000000 00000000 (0.999995)
DBG(50475879)> CPU DETAIL: Write 1724: 9909999952000000 
DBG(50475881)> CPU CMD: Exec 0561: 00 60 0000 0000 0000   goto 0585   
DBG(50475884)> CPU CMD: Exec 0562: 00 60 1831 0561 0000      
DBG(50475885)> CPU DETAIL: Read R 1831: 0060000000000585 
DBG(50475886)> CPU DETAIL: Write 0561: 0060000000000585 
DBG(50475888)> CPU CMD: Exec 0563: 00 40 0559 1732 0559      
DBG(50475889)> CPU DETAIL: Read R 0559: 5020038800001724 
DBG(50475890)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50475891)> CPU DETAIL: Result: 5020038800001725 
DBG(50475892)> CPU DETAIL: Write 0559: 5020038800001725 
DBG(50475894)> CPU CMD: Exec 0564: 00 72 0888 1733 0567   if (0888 event rev w4 sigma te) <> zero goto 0567   
DBG(50475895)> CPU DETAIL: Read R 0888: 0000000000000000 
DBG(50475896)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50475897)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50475900)> CPU CMD: Exec 0565: 00 60 1748 1714 0569   1.0 -> (1714), goto 0569    
DBG(50475901)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50475902)> CPU DETAIL: Transfer to T 
DBG(50475902)> CPU DETAIL: Write 1714: 0001000000000000 
DBG(50475904)> CPU CMD: Exec 0569: 50 22 1713 0887 0000        
DBG(50475905)> CPU DETAIL: Read R 1713: 0202221000000000 
DBG(50475906)> CPU DETAIL: Read S 0887: 0000000000000000 
DBG(50475907)> CPU DETAIL: Float: REG1: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475907)> CPU DETAIL:        REG2: 00 0 0 0000 0000 0000 (0.000000)
DBG(50475908)> CPU DETAIL: Result: 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475909)> CPU DETAIL: Shift : 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475912)> CPU CMD: Exec 0570: 50 26 0000 1714 1715      
DBG(50475913)> CPU DETAIL: Read S 1714: 0001000000000000 
DBG(50475914)> CPU DETAIL: Float: REG1: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475914)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50475915)> CPU DETAIL: Result: 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475916)> CPU DETAIL: Shift : 02 0 2 2210 0000 0000 00000000 00000000 (222.100000)
DBG(50475917)> CPU DETAIL: Write 1715: 0202221000000000 
DBG(50475919)> CPU CMD: Exec 0571: 50 28 1812 1715 0000      
DBG(50475920)> CPU DETAIL: Read R 1812: 0004000000000000 
DBG(50475921)> CPU DETAIL: Read S 1715: 0202221000000000 
DBG(50475922)> CPU DETAIL: Float: REG1: 00 0 4 0000 0000 0000 (4.000000)
DBG(50475922)> CPU DETAIL:        REG2: 02 0 2 2210 0000 0000 (222.100000)
DBG(50475923)> CPU DETAIL: Result: 02 1 2 1810 0000 0000 00000000 00000000 (-218.100000)
DBG(50475924)> CPU DETAIL: Shift : 02 1 2 1810 0000 0000 00000000 00000000 (-218.100000)
DBG(50475927)> CPU CMD: Exec 0572: 00 63 0575 0000 0000   if >0 goto 0575      
DBG(50475928)> CPU DETAIL: REG1: 0212181000000000
DBG(50475928)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50475930)> CPU CMD: Exec 0573: 00 42 1715 1825 0000      
DBG(50475931)> CPU DETAIL: Read R 1715: 0202221000000000 
DBG(50475932)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475933)> CPU DETAIL: Result: 0000000000000000 
DBG(50475936)> CPU CMD: Exec 0574: 00 40 1813 0000 1715      
DBG(50475937)> CPU DETAIL: Read R 1813: 0003990000000000 
DBG(50475938)> CPU DETAIL: Result: 0003990000000000 
DBG(50475939)> CPU DETAIL: Write 1715: 0003990000000000 
DBG(50475941)> CPU CMD: Exec 0575: 00 42 1715 1825 0000   mask (1715) to get sign   
DBG(50475942)> CPU DETAIL: Read R 1715: 0003990000000000 
DBG(50475943)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50475944)> CPU DETAIL: Result: 0000000000000000 
DBG(50475947)> CPU CMD: Exec 0576: 00 72 1825 0000 0580   if <>negative goto 0580     
DBG(50475948)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50475949)> CPU DETAIL: Diff: REG1: 0010000000000000
DBG(50475950)> CPU DETAIL: Transfer to T 
DBG(50475952)> CPU CMD: Exec 0580: 00 40 1828 1732 0560      
DBG(50475953)> CPU DETAIL: Read R 1828: 5020183000001724 
DBG(50475954)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50475955)> CPU DETAIL: Result: 5020183000001725 
DBG(50475956)> CPU DETAIL: Write 0560: 5020183000001725 
DBG(50475958)> CPU CMD: Exec 0581: 50 20 1814 1715 1715      
DBG(50475959)> CPU DETAIL: Read R 1814: 9705000000000000 
DBG(50475960)> CPU DETAIL: Read S 1715: 0003990000000000 
DBG(50475961)> CPU DETAIL: Float: REG1: 97 0 5 0000 0000 0000 (0.005000)
DBG(50475961)> CPU DETAIL:        REG2: 00 0 3 9900 0000 0000 (3.990000)
DBG(50475962)> CPU DETAIL: Result: 00 0 3 9950 0000 0000 00000000 00000000 (3.995000)
DBG(50475963)> CPU DETAIL: Shift : 00 0 3 9950 0000 0000 00000000 00000000 (3.995000)
DBG(50475964)> CPU DETAIL: Write 1715: 0003995000000000 
DBG(50475966)> CPU CMD: Exec 0582: 00 34 1715 1815 1716      
DBG(50475967)> CPU DETAIL: Read R 1715: 0003995000000000 
DBG(50475968)> CPU DETAIL: Read S 1815: 9001000000000000 
DBG(50475969)> CPU DETAIL: Float: REG1: 00 0 3 9950 0000 0000 (3.995000)
DBG(50475969)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(50475970)> CPU DETAIL: Result: 90 0 3 9950 0000 0000 00000000 00000000 (0.000000)
DBG(50475971)> CPU DETAIL: Shift : 00 0 0 0000 0000 0399 50000000 00000000 (0.000000)
DBG(50475972)> CPU DETAIL: Write 1716: 0000000000000399 
DBG(50475974)> CPU CMD: Exec 0583: 00 40 1818 0000 1716      
DBG(50475975)> CPU DETAIL: Read R 1818: 1000000000000000 
DBG(50475976)> CPU DETAIL: Result: 1000000000000399 
DBG(50475977)> CPU DETAIL: Write 1716: 1000000000000399 
DBG(50475979)> CPU CMD: Exec 0584: 00 60 0000 0000 0534   goto 0534   
DBG(50475980)> CPU DETAIL: Transfer to T 
DBG(50475982)> CPU CMD: Exec 0534: 50 26 0000 1790 0000      
DBG(50475983)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50475984)> CPU DETAIL: Float: REG1: 00 0 3 9900 0000 0000 (3.990000)
DBG(50475984)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50475985)> CPU DETAIL: Result: 01 0 7 9800 0000 0000 00000000 00000000 (79.800000)
DBG(50475986)> CPU DETAIL: Shift : 01 0 7 9800 0000 0000 00000000 00000000 (79.800000)
DBG(50475989)> CPU CMD: Exec 0535: 00 34 1816 0000 1717      
DBG(50475990)> CPU DETAIL: Read R 1816: 8801000000000000 
DBG(50475991)> CPU DETAIL: Float: REG1: 88 0 1 0000 0000 0000 (0.000000)
DBG(50475991)> CPU DETAIL:        REG2: 01 0 7 9800 0000 0000 (79.800000)
DBG(50475992)> CPU DETAIL: Result: 89 0 7 9800 0000 0000 00000000 00000000 (0.000000)
DBG(50475993)> CPU DETAIL: Shift : 00 0 0 0000 0000 0079 80000000 00000000 (0.000000)
DBG(50475994)> CPU DETAIL: Write 1717: 0000000000000079 
DBG(50475996)> CPU CMD: Exec 0536: 96 40 1817 0000 1718      
DBG(50475997)> CPU DETAIL: Read R 1817: 0000000000001849 
DBG(50475998)> CPU DETAIL: Result: 0000000000001928 
DBG(50475999)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000019280000 
DBG(50476000)> CPU DETAIL: Write 1718: 0000000019280000 
DBG(50476002)> CPU CMD: Exec 0537: 96 40 0000 1737 1719      
DBG(50476003)> CPU DETAIL: Read S 1737: 0000000000010000 
DBG(50476004)> CPU DETAIL: Result: 0000000019290000 
DBG(50476005)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000192900000000 
DBG(50476006)> CPU DETAIL: Write 1719: 0000192900000000 
DBG(50476008)> CPU CMD: Exec 0538: 00 40 0000 1777 1720      
DBG(50476009)> CPU DETAIL: Read S 1777: 0000000100000000 
DBG(50476010)> CPU DETAIL: Result: 0000193000000000 
DBG(50476011)> CPU DETAIL: Write 1720: 0000193000000000 
DBG(50476013)> CPU CMD: Exec 0539: 00 40 1819 1717 0000      
DBG(50476014)> CPU DETAIL: Read R 1819: 1200000000000000 
DBG(50476015)> CPU DETAIL: Read S 1717: 0000000000000079 
DBG(50476016)> CPU DETAIL: Result: 1200000000000079 
DBG(50476019)> CPU CMD: Exec 0540: 50 24 0000 1790 1721      
DBG(50476020)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50476021)> CPU DETAIL: Float: REG1: 01 0 7 9000 0000 0000 (79.000000)
DBG(50476021)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50476022)> CPU DETAIL: Result: 00 0 3 9500 0000 0000 00000000 00000000 (3.950000)
DBG(50476023)> CPU DETAIL: Shift : 00 0 3 9500 0000 0000 00000000 00000000 (3.950000)
DBG(50476024)> CPU DETAIL: Write 1721: 0003950000000000 
DBG(50476026)> CPU CMD: Exec 0541: 50 22 1716 0000 0000      
DBG(50476027)> CPU DETAIL: Read R 1716: 1000000000000399 
DBG(50476028)> CPU DETAIL: Float: REG1: 00 0 3 9900 0000 0000 (3.990000)
DBG(50476028)> CPU DETAIL:        REG2: 00 0 3 9500 0000 0000 (3.950000)
DBG(50476029)> CPU DETAIL: Result: 00 0 0 0400 0000 0000 00000000 00000000 (0.040000)
DBG(50476030)> CPU DETAIL: Shift : 98 0 4 0000 0000 0000 00000000 00000000 (0.040000)
DBG(50476033)> CPU CMD: Exec 0542: 50 26 0000 1790 1722      
DBG(50476034)> CPU DETAIL: Read S 1790: 9805000000000000 
DBG(50476035)> CPU DETAIL: Float: REG1: 98 0 4 0000 0000 0000 (0.040000)
DBG(50476035)> CPU DETAIL:        REG2: 98 0 5 0000 0000 0000 (0.050000)
DBG(50476036)> CPU DETAIL: Result: 99 0 8 0000 0000 0000 00000000 00000000 (0.800000)
DBG(50476037)> CPU DETAIL: Shift : 99 0 8 0000 0000 0000 00000000 00000000 (0.800000)
DBG(50476038)> CPU DETAIL: Write 1722: 9908000000000000 
DBG(50476040)> CPU CMD: Exec 0543: 00 40 1718 1820 0000      
DBG(50476041)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50476042)> CPU DETAIL: Read S 1820: 5022000000000000 
DBG(50476043)> CPU DETAIL: Result: 5022000019280000 
DBG(50476046)> CPU CMD: Exec 0544: 00 40 1719 0000 0549      
DBG(50476047)> CPU DETAIL: Read R 1719: 0000192900000000 
DBG(50476048)> CPU DETAIL: Result: 5022192919280000 
DBG(50476049)> CPU DETAIL: Write 0549: 5022192919280000 
DBG(50476051)> CPU CMD: Exec 0545: 00 40 1718 1824 0551      
DBG(50476052)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50476053)> CPU DETAIL: Read S 1824: 5020000000000388 
DBG(50476054)> CPU DETAIL: Result: 5020000019280388 
DBG(50476055)> CPU DETAIL: Write 0551: 5020000019280388 
DBG(50476057)> CPU CMD: Exec 0546: 00 40 1719 1821 0555      
DBG(50476058)> CPU DETAIL: Read R 1719: 0000192900000000 
DBG(50476059)> CPU DETAIL: Read S 1821: 5024000018220000 
DBG(50476060)> CPU DETAIL: Result: 5024192918220000 
DBG(50476061)> CPU DETAIL: Write 0555: 5024192918220000 
DBG(50476063)> CPU CMD: Exec 0547: 00 40 1720 1820 0556      
DBG(50476064)> CPU DETAIL: Read R 1720: 0000193000000000 
DBG(50476065)> CPU DETAIL: Read S 1820: 5022000000000000 
DBG(50476066)> CPU DETAIL: Result: 5022193000000000 
DBG(50476067)> CPU DETAIL: Write 0556: 5022193000000000 
DBG(50476069)> CPU CMD: Exec 0548: 00 40 1718 1823 0557      
DBG(50476070)> CPU DETAIL: Read R 1718: 0000000019280000 
DBG(50476071)> CPU DETAIL: Read S 1823: 5020000000000000 
DBG(50476072)> CPU DETAIL: Result: 5020000019280000 
DBG(50476073)> CPU DETAIL: Write 0557: 5020000019280000 
DBG(50476075)> CPU CMD: Exec 0549: 50 22 1929 1928 0000      
DBG(50476076)> CPU DETAIL: Read R 1929: 9905000000000000 
DBG(50476077)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50476078)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50476078)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50476079)> CPU DETAIL: Result: 99 0 0 0004 0000 0000 00000000 00000000 (0.000040)
DBG(50476080)> CPU DETAIL: Shift : 95 0 4 0000 0000 0000 00000000 00000000 (0.000040)
DBG(50476083)> CPU CMD: Exec 0550: 50 24 1722 0000 0000      
DBG(50476084)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50476085)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50476085)> CPU DETAIL:        REG2: 95 0 4 0000 0000 0000 (0.000040)
DBG(50476086)> CPU DETAIL: Result: 95 0 3 2000 0000 0000 00000000 00000000 (0.000032)
DBG(50476087)> CPU DETAIL: Shift : 95 0 3 2000 0000 0000 00000000 00000000 (0.000032)
DBG(50476090)> CPU CMD: Exec 0551: 50 20 0000 1928 0388      
DBG(50476091)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50476092)> CPU DETAIL: Float: REG1: 95 0 3 2000 0000 0000 (0.000032)
DBG(50476092)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50476093)> CPU DETAIL: Result: 99 0 4 9999 2000 0000 00000000 00000000 (0.499992)
DBG(50476094)> CPU DETAIL: Shift : 99 0 4 9999 2000 0000 00000000 00000000 (0.499992)
DBG(50476095)> CPU DETAIL: Write 0388: 9904999920000000 
DBG(50476097)> CPU CMD: Exec 0552: 50 22 1722 1748 0000      
DBG(50476098)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50476099)> CPU DETAIL: Read S 1748: 0001000000000000 
DBG(50476100)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50476100)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50476101)> CPU DETAIL: Result: 00 1 0 2000 0000 0000 00000000 00000000 (-0.200000)
DBG(50476102)> CPU DETAIL: Shift : 99 1 2 0000 0000 0000 00000000 00000000 (-0.200000)
DBG(50476105)> CPU CMD: Exec 0553: 50 24 1722 0000 0000      
DBG(50476106)> CPU DETAIL: Read R 1722: 9908000000000000 
DBG(50476107)> CPU DETAIL: Float: REG1: 99 0 8 0000 0000 0000 (0.800000)
DBG(50476107)> CPU DETAIL:        REG2: 99 1 2 0000 0000 0000 (-0.200000)
DBG(50476108)> CPU DETAIL: Result: 99 1 1 6000 0000 0000 00000000 00000000 (-0.160000)
DBG(50476109)> CPU DETAIL: Shift : 99 1 1 6000 0000 0000 00000000 00000000 (-0.160000)
DBG(50476112)> CPU CMD: Exec 0554: 50 24 0000 1830 1723      
DBG(50476113)> CPU DETAIL: Read S 1830: 9905000000000000 
DBG(50476114)> CPU DETAIL: Float: REG1: 99 1 1 6000 0000 0000 (-0.160000)
DBG(50476114)> CPU DETAIL:        REG2: 99 0 5 0000 0000 0000 (0.500000)
DBG(50476115)> CPU DETAIL: Result: 98 1 8 0000 0000 0000 00000000 00000000 (-0.080000)
DBG(50476116)> CPU DETAIL: Shift : 98 1 8 0000 0000 0000 00000000 00000000 (-0.080000)
DBG(50476117)> CPU DETAIL: Write 1723: 9818000000000000 
DBG(50476119)> CPU CMD: Exec 0555: 50 24 1929 1822 0000      
DBG(50476120)> CPU DETAIL: Read R 1929: 9905000000000000 
DBG(50476121)> CPU DETAIL: Read S 1822: 0002000000000000 
DBG(50476122)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50476122)> CPU DETAIL:        REG2: 00 0 2 0000 0000 0000 (2.000000)
DBG(50476123)> CPU DETAIL: Result: 00 0 1 0000 0000 0000 00000000 00000000 (1.000000)
DBG(50476124)> CPU DETAIL: Shift : 00 0 1 0000 0000 0000 00000000 00000000 (1.000000)
DBG(50476127)> CPU CMD: Exec 0556: 50 22 1930 0000 0000      
DBG(50476128)> CPU DETAIL: Read R 1930: 9905000000000000 
DBG(50476129)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50476129)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(50476130)> CPU DETAIL: Result: 00 1 0 5000 0000 0000 00000000 00000000 (-0.500000)
DBG(50476131)> CPU DETAIL: Shift : 99 1 5 0000 0000 0000 00000000 00000000 (-0.500000)
DBG(50476134)> CPU CMD: Exec 0557: 50 20 0000 1928 0000      
DBG(50476135)> CPU DETAIL: Read S 1928: 9904999600000000 
DBG(50476136)> CPU DETAIL: Float: REG1: 99 1 5 0000 0000 0000 (-0.500000)
DBG(50476136)> CPU DETAIL:        REG2: 99 0 4 9996 0000 0000 (0.499960)
DBG(50476137)> CPU DETAIL: Result: 99 1 0 0004 0000 0000 00000000 00000000 (-0.000040)
DBG(50476138)> CPU DETAIL: Shift : 95 1 4 0000 0000 0000 00000000 00000000 (-0.000040)
DBG(50476141)> CPU CMD: Exec 0558: 50 24 1723 0000 0000      
DBG(50476142)> CPU DETAIL: Read R 1723: 9818000000000000 
DBG(50476143)> CPU DETAIL: Float: REG1: 98 1 8 0000 0000 0000 (-0.080000)
DBG(50476143)> CPU DETAIL:        REG2: 95 1 4 0000 0000 0000 (-0.000040)
DBG(50476144)> CPU DETAIL: Result: 94 0 3 2000 0000 0000 00000000 00000000 (0.000003)
DBG(50476145)> CPU DETAIL: Shift : 94 0 3 2000 0000 0000 00000000 00000000 (0.000003)
DBG(50476148)> CPU CMD: Exec 0559: 50 20 0388 0000 1725      
DBG(50476149)> CPU DETAIL: Read R 0388: 9904999920000000 
DBG(50476150)> CPU DETAIL: Float: REG1: 99 0 4 9999 2000 0000 (0.499992)
DBG(50476150)> CPU DETAIL:        REG2: 94 0 3 2000 0000 0000 (0.000003)
DBG(50476151)> CPU DETAIL: Result: 99 0 4 9999 5200 0000 00000000 00000000 (0.499995)
DBG(50476152)> CPU DETAIL: Shift : 99 0 4 9999 5200 0000 00000000 00000000 (0.499995)
DBG(50476153)> CPU DETAIL: Write 1725: 9904999952000000 
DBG(50476155)> CPU CMD: Exec 0560: 50 20 1830 0000 1725   FADD (0.5) + REG1 -> (1724)   
DBG(50476156)> CPU DETAIL: Read R 1830: 9905000000000000 
DBG(50476157)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(50476157)> CPU DETAIL:        REG2: 99 0 4 9999 5200 0000 (0.499995)
DBG(50476158)> CPU DETAIL: Result: 99 0 9 9999 5200 0000 00000000 00000000 (0.999995)
DBG(50476159)> CPU DETAIL: Shift : 99 0 9 9999 5200 0000 00000000 00000000 (0.999995)
DBG(50476160)> CPU DETAIL: Write 1725: 9909999952000000 
DBG(50476162)> CPU CMD: Exec 0561: 00 60 0000 0000 0585   goto 0585   
DBG(50476163)> CPU DETAIL: Transfer to T 
DBG(50476165)> CPU CMD: Exec 0585: 00 41 0559 1732 0559      
DBG(50476166)> CPU DETAIL: Read R 0559: 5020038800001725 
DBG(50476167)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476168)> CPU DETAIL: Result: 5020038800001724 
DBG(50476169)> CPU DETAIL: Write 0559: 5020038800001724 
DBG(50476171)> CPU CMD: Exec 0586: 50 24 1724 1725 1715      
DBG(50476172)> CPU DETAIL: Read R 1724: 9909999952000000 
DBG(50476173)> CPU DETAIL: Read S 1725: 9909999952000000 
DBG(50476174)> CPU DETAIL: Float: REG1: 99 0 9 9999 5200 0000 (0.999995)
DBG(50476174)> CPU DETAIL:        REG2: 99 0 9 9999 5200 0000 (0.999995)
DBG(50476175)> CPU DETAIL: Result: 99 0 9 9999 0400 0230 40234375 00000000 (0.999990)
DBG(50476176)> CPU DETAIL: Shift : 99 0 9 9999 0400 0231 40234375 00000000 (0.999990)
DBG(50476177)> CPU DETAIL: Write 1715: 9909999904000231 
DBG(50476179)> CPU CMD: Exec 0587: 50 28 1748 1715 0000      
DBG(50476180)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50476181)> CPU DETAIL: Read S 1715: 9909999904000231 
DBG(50476182)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(50476182)> CPU DETAIL:        REG2: 99 0 9 9999 0400 0231 (0.999990)
DBG(50476183)> CPU DETAIL: Result: 00 0 0 0000 0959 9976 90000000 00000000 (0.000010)
DBG(50476184)> CPU DETAIL: Shift : 94 0 9 5999 7690 0000 00000000 00000000 (0.000010)
DBG(50476187)> CPU CMD: Exec 0588: 00 63 0590 0000 0000   if >0 goto 0590   
DBG(50476188)> CPU DETAIL: REG1: 9409599976900000
DBG(50476188)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50476190)> CPU CMD: Exec 0590: 00 42 1715 1825 0000      
DBG(50476191)> CPU DETAIL: Read R 1715: 9909999904000231 
DBG(50476192)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50476193)> CPU DETAIL: Result: 0000000000000000 
DBG(50476196)> CPU CMD: Exec 0591: 00 70 1825 0000 0594      
DBG(50476197)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50476198)> CPU DETAIL: Diff: REG1: 0010000000000000
DBG(50476201)> CPU CMD: Exec 0592: 50 20 1715 1814 1715      
DBG(50476202)> CPU DETAIL: Read R 1715: 9909999904000231 
DBG(50476203)> CPU DETAIL: Read S 1814: 9705000000000000 
DBG(50476204)> CPU DETAIL: Float: REG1: 99 0 9 9999 0400 0231 (0.999990)
DBG(50476204)> CPU DETAIL:        REG2: 97 0 5 0000 0000 0000 (0.005000)
DBG(50476205)> CPU DETAIL: Result: 00 0 1 0049 9040 0023 10000000 00000000 (1.004990)
DBG(50476206)> CPU DETAIL: Shift : 00 0 1 0049 9040 0023 10000000 00000000 (1.004990)
DBG(50476207)> CPU DETAIL: Write 1715: 0001004990400023 
DBG(50476209)> CPU CMD: Exec 0593: 00 60 0000 0000 0595      
DBG(50476210)> CPU DETAIL: Transfer to T 
DBG(50476212)> CPU CMD: Exec 0595: 00 34 1815 0000 1715      
DBG(50476213)> CPU DETAIL: Read R 1815: 9001000000000000 
DBG(50476214)> CPU DETAIL: Float: REG1: 90 0 1 0000 0000 0000 (0.000000)
DBG(50476214)> CPU DETAIL:        REG2: 00 0 1 0049 9040 0023 (1.004990)
DBG(50476215)> CPU DETAIL: Result: 90 0 1 0049 9040 0023 00012207 03125000 (0.000000)
DBG(50476216)> CPU DETAIL: Shift : 00 0 0 0000 0000 0100 49904000 23000122 (0.000000)
DBG(50476217)> CPU DETAIL: Write 1715: 0000000000000100 
DBG(50476219)> CPU CMD: Exec 0596: 00 42 0885 0598 0885      
DBG(50476220)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50476221)> CPU DETAIL: Read S 0598: 1111001111111111 
DBG(50476222)> CPU DETAIL: Result: 0100004855151111 
DBG(50476223)> CPU DETAIL: Write 0885: 0100004855151111 
DBG(50476225)> CPU CMD: Exec 0597: 00 60 0000 0000 0599      
DBG(50476226)> CPU DETAIL: Transfer to T 
DBG(50476228)> CPU CMD: Exec 0599: 90 42 1715 1735 0000      
DBG(50476229)> CPU DETAIL: Read R 1715: 0000000000000100 
DBG(50476230)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50476231)> CPU DETAIL: Result: 0000000000000000 
DBG(50476232)> CPU DETAIL: Word Shift 10 digits left: REG1: 0000000000000000 
DBG(50476235)> CPU CMD: Exec 0600: 00 40 0885 0000 0885      
DBG(50476236)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50476237)> CPU DETAIL: Result: 0100004855151111 
DBG(50476238)> CPU DETAIL: Write 0885: 0100004855151111 
DBG(50476240)> CPU CMD: Exec 0601: 00 42 1725 1825 0000      
DBG(50476241)> CPU DETAIL: Read R 1725: 9909999952000000 
DBG(50476242)> CPU DETAIL: Read S 1825: 0010000000000000 
DBG(50476243)> CPU DETAIL: Result: 0000000000000000 
DBG(50476246)> CPU CMD: Exec 0602: 00 70 1825 0000 0605      
DBG(50476247)> CPU DETAIL: Read R 1825: 0010000000000000 
DBG(50476248)> CPU DETAIL: Diff: REG1: 0010000000000000
DBG(50476251)> CPU CMD: Exec 0603: 50 20 1814 1725 1725      
DBG(50476252)> CPU DETAIL: Read R 1814: 9705000000000000 
DBG(50476253)> CPU DETAIL: Read S 1725: 9909999952000000 
DBG(50476254)> CPU DETAIL: Float: REG1: 97 0 5 0000 0000 0000 (0.005000)
DBG(50476254)> CPU DETAIL:        REG2: 99 0 9 9999 5200 0000 (0.999995)
DBG(50476255)> CPU DETAIL: Result: 00 0 1 0049 9520 0000 00000000 00000000 (1.004995)
DBG(50476256)> CPU DETAIL: Shift : 00 0 1 0049 9520 0000 00000000 00000000 (1.004995)
DBG(50476257)> CPU DETAIL: Write 1725: 0001004995200000 
DBG(50476259)> CPU CMD: Exec 0604: 00 60 0000 0000 0606      
DBG(50476260)> CPU DETAIL: Transfer to T 
DBG(50476262)> CPU CMD: Exec 0606: 50 28 1748 1725 0000      
DBG(50476263)> CPU DETAIL: Read R 1748: 0001000000000000 
DBG(50476264)> CPU DETAIL: Read S 1725: 0001004995200000 
DBG(50476265)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(50476265)> CPU DETAIL:        REG2: 00 0 1 0049 9520 0000 (1.004995)
DBG(50476266)> CPU DETAIL: Result: 00 1 0 0049 9520 0000 00000000 00000000 (-0.004995)
DBG(50476267)> CPU DETAIL: Shift : 97 1 4 9952 0000 0000 00000000 00000000 (-0.004995)
DBG(50476270)> CPU CMD: Exec 0607: 00 63 0609 0000 0000      
DBG(50476271)> CPU DETAIL: REG1: 9714995200000000
DBG(50476271)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(50476273)> CPU CMD: Exec 0608: 00 60 1785 1725 0000      
DBG(50476274)> CPU DETAIL: Read R 1785: 9909900000000000 
DBG(50476275)> CPU DETAIL: Write 1725: 9909900000000000 
DBG(50476277)> CPU CMD: Exec 0609: 00 34 1815 1725 1725      
DBG(50476278)> CPU DETAIL: Read R 1815: 9001000000000000 
DBG(50476279)> CPU DETAIL: Read S 1725: 9909900000000000 
DBG(50476280)> CPU DETAIL: Float: REG1: 90 0 1 0000 0000 0000 (0.000000)
DBG(50476280)> CPU DETAIL:        REG2: 99 0 9 9000 0000 0000 (0.990000)
DBG(50476281)> CPU DETAIL: Result: 89 0 9 9000 0000 0000 00000000 00000000 (0.000000)
DBG(50476282)> CPU DETAIL: Shift : 00 0 0 0000 0000 0099 00000000 00000000 (0.000000)
DBG(50476283)> CPU DETAIL: Write 1725: 0000000000000099 
DBG(50476285)> CPU CMD: Exec 0610: 94 60 0886 0000 0000      
DBG(50476286)> CPU DETAIL: Read R 0886: 0000000241000003 
DBG(50476287)> CPU DETAIL: Word Shift 6 digits left: REG1: 0241000003000000 
DBG(50476290)> CPU CMD: Exec 0611: 06 60 0000 0886 0000      
DBG(50476291)> CPU DETAIL: Word Shift 6 digits right: REG1: 0000000241000003 
DBG(50476292)> CPU DETAIL: Write 0886: 0000000241000003 
DBG(50476294)> CPU CMD: Exec 0612: 90 42 1725 1735 0000      
DBG(50476295)> CPU DETAIL: Read R 1725: 0000000000000099 
DBG(50476296)> CPU DETAIL: Read S 1735: 0000000000000011 
DBG(50476297)> CPU DETAIL: Result: 0000000000000099 
DBG(50476298)> CPU DETAIL: Word Shift 10 digits left: REG1: 0000990000000000 
DBG(50476301)> CPU CMD: Exec 0613: 00 40 0886 0000 0886      
DBG(50476302)> CPU DETAIL: Read R 0886: 0000000241000003 
DBG(50476303)> CPU DETAIL: Result: 0000990241000003 
DBG(50476304)> CPU DETAIL: Write 0886: 0000990241000003 
DBG(50476306)> CPU CMD: Exec 0614: 00 60 0000 0000 0400   goto 0400   
DBG(50476307)> CPU DETAIL: Transfer to T 
DBG(50476309)> CPU CMD: Exec 0400: 00 60 0000 0000 0401   goto 0401   
DBG(50476310)> CPU DETAIL: Transfer to T 
DBG(50476312)> CPU CMD: Exec 0401: 00 54 0000 0000 0000   clear M8   
DBG(50476313)> CPU DETAIL: M4: 0010 
DBG(50476314)> CPU DETAIL: M6: 0000 
DBG(50476315)> CPU DETAIL: Clear M8
DBG(50476315)> CPU DETAIL: M8: 0000 
DBG(50476318)> CPU CMD: Exec 0402: 92 41 1695 1732 0000   set instr 0408 to ...   
DBG(50476319)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50476320)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476321)> CPU DETAIL: Result: 0000000000000002 
DBG(50476322)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000000200000000 
DBG(50476325)> CPU CMD: Exec 0403: 00 40 1793 0000 0408   ... (0988 event first precedessor - 1 - (1695 num of words in successor list 
DBG(50476326)> CPU DETAIL: Read R 1793: 0060098808610000 
DBG(50476327)> CPU DETAIL: Result: 0060099008610000 
DBG(50476328)> CPU DETAIL: Write 0408: 0060099008610000 
DBG(50476330)> CPU CMD: Exec 0404: 00 72 1695 1733 0406   if (1695 num of words in successor list in event) <> 0 goto 0406   
DBG(50476331)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50476332)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50476333)> CPU DETAIL: Diff: REG1: 0000000000000003
DBG(50476334)> CPU DETAIL: Transfer to T 
DBG(50476336)> CPU CMD: Exec 0406: 96 60 1695 0000 0000      
DBG(50476337)> CPU DETAIL: Read R 1695: 0000000000000003 
DBG(50476338)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000030000 
DBG(50476341)> CPU CMD: Exec 0407: 00 40 1798 0000 0410      
DBG(50476342)> CPU DETAIL: Read R 1798: 0858000100000408 
DBG(50476343)> CPU DETAIL: Result: 0858000100030408 
DBG(50476344)> CPU DETAIL: Write 0410: 0858000100030408 
DBG(50476346)> CPU CMD: Exec 0408: 00 60 0990 0861 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50476347)> CPU DETAIL: Read R 0990: 0101429330900241 
DBG(50476348)> CPU DETAIL: Write 0861: 0101429330900241 
DBG(50476350)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50476351)> CPU DETAIL: Read R 0408: 0060099008610000 
DBG(50476352)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476353)> CPU DETAIL: Result: 0060098908600000 
DBG(50476354)> CPU DETAIL: Write 0408: 0060098908600000 
DBG(50476356)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50476357)> CPU DETAIL: M8: 0001 
DBG(50476358)> CPU DETAIL: Transfer to T 
DBG(50476360)> CPU CMD: Exec 0408: 00 60 0989 0860 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50476361)> CPU DETAIL: Read R 0989: 0204855000000000 
DBG(50476362)> CPU DETAIL: Write 0860: 0204855000000000 
DBG(50476364)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50476365)> CPU DETAIL: Read R 0408: 0060098908600000 
DBG(50476366)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476367)> CPU DETAIL: Result: 0060098808590000 
DBG(50476368)> CPU DETAIL: Write 0408: 0060098808590000 
DBG(50476370)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50476371)> CPU DETAIL: M8: 0002 
DBG(50476372)> CPU DETAIL: Transfer to T 
DBG(50476374)> CPU CMD: Exec 0408: 00 60 0988 0859 0000   (0988 event first precedessor - 1 - (1695 num of words in successor list in  
DBG(50476375)> CPU DETAIL: Read R 0988: 0000000242009990 
DBG(50476376)> CPU DETAIL: Write 0859: 0000000242009990 
DBG(50476378)> CPU CMD: Exec 0409: 00 41 0408 1768 0408      
DBG(50476379)> CPU DETAIL: Read R 0408: 0060098808590000 
DBG(50476380)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476381)> CPU DETAIL: Result: 0060098708580000 
DBG(50476382)> CPU DETAIL: Write 0408: 0060098708580000 
DBG(50476384)> CPU CMD: Exec 0410: 08 58 0001 0003 0408      
DBG(50476385)> CPU DETAIL: M8: 0003 
DBG(50476388)> CPU CMD: Exec 0411: 00 54 0000 0000 0000   clear M8   
DBG(50476389)> CPU DETAIL: M4: 0010 
DBG(50476390)> CPU DETAIL: M6: 0000 
DBG(50476391)> CPU DETAIL: Clear M8
DBG(50476391)> CPU DETAIL: M8: 0000 
DBG(50476394)> CPU CMD: Exec 0412: 92 41 1694 1732 0000   set instr 0420 to ...   
DBG(50476395)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50476396)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476397)> CPU DETAIL: Result: 9999999999999999 
DBG(50476398)> CPU DETAIL: Word Shift 8 digits left: REG1: 9999999900000000 
DBG(50476401)> CPU CMD: Exec 0413: 00 40 1799 0000 0420   ... (0892 event first predecessor + (1694 num of words in predecessors list  
DBG(50476402)> CPU DETAIL: Read R 1799: 0060089200000000 
DBG(50476403)> CPU DETAIL: Result: 0060089100000000 
DBG(50476404)> CPU DETAIL: Write 0420: 0060089100000000 
DBG(50476406)> CPU CMD: Exec 0414: 00 42 0408 1730 0000   mask (0408) to get field S -> REG1 (starts with (0884 end of read event bloc 
DBG(50476407)> CPU DETAIL: Read R 0408: 0060098708580000 
DBG(50476408)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50476409)> CPU DETAIL: Result: 0000000008580000 
DBG(50476412)> CPU CMD: Exec 0415: 00 40 0420 0000 0420   set instr 0420 to store to this addr   
DBG(50476413)> CPU DETAIL: Read R 0420: 0060089100000000 
DBG(50476414)> CPU DETAIL: Result: 0060089108580000 
DBG(50476415)> CPU DETAIL: Write 0420: 0060089108580000 
DBG(50476417)> CPU CMD: Exec 0416: 00 72 1694 1733 0418   if (1694 num of words in predecessor list in event) <> 0 goto 0418   
DBG(50476418)> CPU DETAIL: Read R 1694: 0000000000000000 
DBG(50476419)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50476420)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50476423)> CPU CMD: Exec 0417: 00 60 0000 0000 0423   goto 0432 (no predecessors)   
DBG(50476424)> CPU DETAIL: Transfer to T 
DBG(50476426)> CPU CMD: Exec 0423: 00 54 0000 0000 0000   clear M8   
DBG(50476427)> CPU DETAIL: M4: 0010 
DBG(50476428)> CPU DETAIL: M6: 0000 
DBG(50476429)> CPU DETAIL: Clear M8
DBG(50476429)> CPU DETAIL: M8: 0000 
DBG(50476432)> CPU CMD: Exec 0424: 00 42 0420 1730 0000   set instr 0426 to ...   
DBG(50476433)> CPU DETAIL: Read R 0420: 0060089108580000 
DBG(50476434)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50476435)> CPU DETAIL: Result: 0000000008580000 
DBG(50476438)> CPU CMD: Exec 0425: 00 40 1801 0000 0426   ... (0891 event rec w7) -> (field R of instr 0420 = 0881 position on end of  
DBG(50476439)> CPU DETAIL: Read R 1801: 0060089100000000 
DBG(50476440)> CPU DETAIL: Result: 0060089108580000 
DBG(50476441)> CPU DETAIL: Write 0426: 0060089108580000 
DBG(50476443)> CPU CMD: Exec 0426: 00 60 0891 0858 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476444)> CPU DETAIL: Read R 0891: 2221444455660001 
DBG(50476445)> CPU DETAIL: Write 0858: 2221444455660001 
DBG(50476447)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476448)> CPU DETAIL: Read R 0426: 0060089108580000 
DBG(50476449)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476450)> CPU DETAIL: Result: 0060089008570000 
DBG(50476451)> CPU DETAIL: Write 0426: 0060089008570000 
DBG(50476453)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476454)> CPU DETAIL: M8: 0001 
DBG(50476455)> CPU DETAIL: Transfer to T 
DBG(50476457)> CPU CMD: Exec 0426: 00 60 0890 0857 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476458)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50476459)> CPU DETAIL: Write 0857: 9203366600000000 
DBG(50476461)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476462)> CPU DETAIL: Read R 0426: 0060089008570000 
DBG(50476463)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476464)> CPU DETAIL: Result: 0060088908560000 
DBG(50476465)> CPU DETAIL: Write 0426: 0060088908560000 
DBG(50476467)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476468)> CPU DETAIL: M8: 0002 
DBG(50476469)> CPU DETAIL: Transfer to T 
DBG(50476471)> CPU CMD: Exec 0426: 00 60 0889 0856 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476472)> CPU DETAIL: Read R 0889: 0214855000000335 
DBG(50476473)> CPU DETAIL: Write 0856: 0214855000000335 
DBG(50476475)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476476)> CPU DETAIL: Read R 0426: 0060088908560000 
DBG(50476477)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476478)> CPU DETAIL: Result: 0060088808550000 
DBG(50476479)> CPU DETAIL: Write 0426: 0060088808550000 
DBG(50476481)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476482)> CPU DETAIL: M8: 0003 
DBG(50476483)> CPU DETAIL: Transfer to T 
DBG(50476485)> CPU CMD: Exec 0426: 00 60 0888 0855 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476486)> CPU DETAIL: Read R 0888: 0000000000000000 
DBG(50476487)> CPU DETAIL: Write 0855: 0000000000000000 
DBG(50476489)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476490)> CPU DETAIL: Read R 0426: 0060088808550000 
DBG(50476491)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476492)> CPU DETAIL: Result: 0060088708540000 
DBG(50476493)> CPU DETAIL: Write 0426: 0060088708540000 
DBG(50476495)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476496)> CPU DETAIL: M8: 0004 
DBG(50476497)> CPU DETAIL: Transfer to T 
DBG(50476499)> CPU CMD: Exec 0426: 00 60 0887 0854 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476500)> CPU DETAIL: Read R 0887: 0000000000000000 
DBG(50476501)> CPU DETAIL: Write 0854: 0000000000000000 
DBG(50476503)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476504)> CPU DETAIL: Read R 0426: 0060088708540000 
DBG(50476505)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476506)> CPU DETAIL: Result: 0060088608530000 
DBG(50476507)> CPU DETAIL: Write 0426: 0060088608530000 
DBG(50476509)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476510)> CPU DETAIL: M8: 0005 
DBG(50476511)> CPU DETAIL: Transfer to T 
DBG(50476513)> CPU CMD: Exec 0426: 00 60 0886 0853 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476514)> CPU DETAIL: Read R 0886: 0000990241000003 
DBG(50476515)> CPU DETAIL: Write 0853: 0000990241000003 
DBG(50476517)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476518)> CPU DETAIL: Read R 0426: 0060088608530000 
DBG(50476519)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476520)> CPU DETAIL: Result: 0060088508520000 
DBG(50476521)> CPU DETAIL: Write 0426: 0060088508520000 
DBG(50476523)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476524)> CPU DETAIL: M8: 0006 
DBG(50476525)> CPU DETAIL: Transfer to T 
DBG(50476527)> CPU CMD: Exec 0426: 00 60 0885 0852 0000   (0891 event rec w7) -> (0881 position on end of read event buf)   
DBG(50476528)> CPU DETAIL: Read R 0885: 0100004855151111 
DBG(50476529)> CPU DETAIL: Write 0852: 0100004855151111 
DBG(50476531)> CPU CMD: Exec 0427: 00 41 0426 1768 0426   decr field R and S in prev instr   
DBG(50476532)> CPU DETAIL: Read R 0426: 0060088508520000 
DBG(50476533)> CPU DETAIL: Read S 1768: 0000000100010000 
DBG(50476534)> CPU DETAIL: Result: 0060088408510000 
DBG(50476535)> CPU DETAIL: Write 0426: 0060088408510000 
DBG(50476537)> CPU CMD: Exec 0428: 08 58 0001 0007 0426   loop, incr M8, if M8<>7 goto 0426   
DBG(50476538)> CPU DETAIL: M8: 0007 
DBG(50476541)> CPU CMD: Exec 0429: 00 40 1727 1732 1727   incr (1727 number of events stored in output tape)   
DBG(50476542)> CPU DETAIL: Read R 1727: 0000000000000002 
DBG(50476543)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476544)> CPU DETAIL: Result: 0000000000000003 
DBG(50476545)> CPU DETAIL: Write 1727: 0000000000000003 
DBG(50476547)> CPU CMD: Exec 0430: 00 42 0426 1730 0000   mask (0426) to get last addr used in event block, that marks start of block  
DBG(50476548)> CPU DETAIL: Read R 0426: 0060088408510000 
DBG(50476549)> CPU DETAIL: Read S 1730: 0000000011110000 
DBG(50476550)> CPU DETAIL: Result: 0000000008510000 
DBG(50476553)> CPU CMD: Exec 0431: 96 40 1759 0000 0439   +8 -> (0439)   
DBG(50476554)> CPU DETAIL: Read R 1759: 0000000000080000 
DBG(50476555)> CPU DETAIL: Result: 0000000008590000 
DBG(50476556)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000085900000000 
DBG(50476557)> CPU DETAIL: Write 0439: 0000085900000000 
DBG(50476559)> CPU CMD: Exec 0432: 00 40 1834 0000 0438   set instr 0438 to ...   
DBG(50476560)> CPU DETAIL: Read R 1834: 0042000017640000 
DBG(50476561)> CPU DETAIL: Result: 0042085917640000 
DBG(50476562)> CPU DETAIL: Write 0438: 0042085917640000 
DBG(50476564)> CPU CMD: Exec 0433: 08 42 0000 1731 0000   ...   
DBG(50476565)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50476566)> CPU DETAIL: Result: 0000085900000000 
DBG(50476567)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000859 
DBG(50476570)> CPU CMD: Exec 0434: 00 40 0438 0000 0438   ... mask event code for first successor/predecessor    
DBG(50476571)> CPU DETAIL: Read R 0438: 0042085917640000 
DBG(50476572)> CPU DETAIL: Result: 0042085917640859 
DBG(50476573)> CPU DETAIL: Write 0438: 0042085917640859 
DBG(50476575)> CPU CMD: Exec 0435: 00 40 0439 1835 0439   set instr 0439 ...   
DBG(50476576)> CPU DETAIL: Read R 0439: 0000085900000000 
DBG(50476577)> CPU DETAIL: Read S 1835: 0040000017260000 
DBG(50476578)> CPU DETAIL: Result: 0040085917260000 
DBG(50476579)> CPU DETAIL: Write 0439: 0040085917260000 
DBG(50476581)> CPU CMD: Exec 0436: 08 42 0000 1731 0000   ...   
DBG(50476582)> CPU DETAIL: Read S 1731: 0000111100000000 
DBG(50476583)> CPU DETAIL: Result: 0000085900000000 
DBG(50476584)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000859 
DBG(50476587)> CPU CMD: Exec 0437: 00 40 0439 0000 0439   ... (pred/succ event code) -> (1726)   
DBG(50476588)> CPU DETAIL: Read R 0439: 0040085917260000 
DBG(50476589)> CPU DETAIL: Result: 0040085917260859 
DBG(50476590)> CPU DETAIL: Write 0439: 0040085917260859 
DBG(50476592)> CPU CMD: Exec 0438: 00 42 0859 1764 0859   mask (succ/pred event code) with event code, store back at same addr   
DBG(50476593)> CPU DETAIL: Read R 0859: 0000000242009990 
DBG(50476594)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50476595)> CPU DETAIL: Result: 0000000242009990 
DBG(50476596)> CPU DETAIL: Write 0859: 0000000242009990 
DBG(50476598)> CPU CMD: Exec 0439: 00 40 0859 1726 0859   add (1726 (*now* - TTTT) as 0 NNNN 0..0) to (succ/pred event code)   
DBG(50476599)> CPU DETAIL: Read R 0859: 0000000242009990 
DBG(50476600)> CPU DETAIL: Read S 1726: 0001000000000000 
DBG(50476601)> CPU DETAIL: Result: 0001000242009990 
DBG(50476602)> CPU DETAIL: Write 0859: 0001000242009990 
DBG(50476604)> CPU CMD: Exec 0440: 00 40 1696 1704 1704   (1704 number of word in output rec buf) += (1696 event rec len)   
DBG(50476605)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50476606)> CPU DETAIL: Read S 1704: 0000000000000023 
DBG(50476607)> CPU DETAIL: Result: 0000000000000033 
DBG(50476608)> CPU DETAIL: Write 1704: 0000000000000033 
DBG(50476610)> CPU CMD: Exec 0441: 96 60 1696 0000 0000   (1696 event rec len NNN) -> REG1   
DBG(50476611)> CPU DETAIL: Read R 1696: 0000000000000010 
DBG(50476612)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(50476615)> CPU CMD: Exec 0442: 00 41 1793 0000 1793   sub (1793 (0988)->(0884)) to (1793 (0988)->(0884-NNN))   
DBG(50476616)> CPU DETAIL: Read R 1793: 0060098808610000 
DBG(50476617)> CPU DETAIL: Result: 0060098808510000 
DBG(50476618)> CPU DETAIL: Write 1793: 0060098808510000 
DBG(50476620)> CPU CMD: Exec 0443: 00 60 0000 0000 0146   goto 0146 check if output buf is full   
DBG(50476621)> CPU DETAIL: Transfer to T 
DBG(50476623)> CPU CMD: Exec 0146: 00 40 1705 1749 1705   (1705 num of word in output buf) += 0..0 0003 0000   
DBG(50476624)> CPU DETAIL: Read R 1705: 0000000000060000 
DBG(50476625)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50476626)> CPU DETAIL: Result: 0000000000090000 
DBG(50476627)> CPU DETAIL: Write 1705: 0000000000090000 
DBG(50476629)> CPU CMD: Exec 0147: 00 41 1763 1705 0000   0..0 0600 0000 - (1705 num of word in output buf) -> REG1 = room remaining o 
DBG(50476630)> CPU DETAIL: Read R 1763: 0000000006000000 
DBG(50476631)> CPU DETAIL: Read S 1705: 0000000000090000 
DBG(50476632)> CPU DETAIL: Result: 0000000005910000 
DBG(50476635)> CPU CMD: Exec 0148: 00 63 0156 0155 0152   if >0 goto 0156, =0 goto 0155, <0 goto 0152 (stop)   
DBG(50476636)> CPU DETAIL: REG1: 0000000005910000
DBG(50476636)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(50476638)> CPU CMD: Exec 0156: 00 60 1765 0170 0000   set exit on 0170   
DBG(50476639)> CPU DETAIL: Read R 1765: 0060000000000297 
DBG(50476640)> CPU DETAIL: Write 0170: 0060000000000297 
DBG(50476642)> CPU CMD: Exec 0157: 00 42 0886 1764 1090   Mask (0886 rec event w2) with event_code -> (1084 output event code ww1)   
DBG(50476643)> CPU DETAIL: Read R 0886: 0000990241000003 
DBG(50476644)> CPU DETAIL: Read S 1764: 0000001111111110 
DBG(50476645)> CPU DETAIL: Result: 0000000241000000 
DBG(50476646)> CPU DETAIL: Write 1090: 0000000241000000 
DBG(50476648)> CPU CMD: Exec 0158: 04 60 1749 0000 0000   const 3 -> REG1    
DBG(50476649)> CPU DETAIL: Read R 1749: 0000000000030000 
DBG(50476650)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000003 
DBG(50476653)> CPU CMD: Exec 0159: 00 40 0157 0000 0157   incr instr 0157 field T (1084 addr) + 3 (1084, 1087, 1090, ...)   
DBG(50476654)> CPU DETAIL: Read R 0157: 0042088617641090 
DBG(50476655)> CPU DETAIL: Result: 0042088617641093 
DBG(50476656)> CPU DETAIL: Write 0157: 0042088617641093 
DBG(50476658)> CPU CMD: Exec 0160: 00 60 0000 0000 0166   FMUL Special (1699 Number of weeks *now* - TTTT) x float 1 -> (1699 back to  
DBG(50476659)> CPU DETAIL: Transfer to T 
DBG(50476661)> CPU CMD: Exec 0166: 00 60 0889 1091 0000   (event rec w3) -> (1085)   
DBG(50476662)> CPU DETAIL: Read R 0889: 0214855000000335 
DBG(50476663)> CPU DETAIL: Write 1091: 0214855000000335 
DBG(50476665)> CPU CMD: Exec 0167: 00 40 0166 1749 0166   incr instr 0166 field S   
DBG(50476666)> CPU DETAIL: Read R 0166: 0060088910910000 
DBG(50476667)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50476668)> CPU DETAIL: Result: 0060088910940000 
DBG(50476669)> CPU DETAIL: Write 0166: 0060088910940000 
DBG(50476671)> CPU CMD: Exec 0168: 00 60 0890 1092 0000   (event rec w4) -> (1086)   
DBG(50476672)> CPU DETAIL: Read R 0890: 9203366600000000 
DBG(50476673)> CPU DETAIL: Write 1092: 9203366600000000 
DBG(50476675)> CPU CMD: Exec 0169: 00 40 0168 1749 0168   incr instr 0168 field S   
DBG(50476676)> CPU DETAIL: Read R 0168: 0060089010920000 
DBG(50476677)> CPU DETAIL: Read S 1749: 0000000000030000 
DBG(50476678)> CPU DETAIL: Result: 0060089010950000 
DBG(50476679)> CPU DETAIL: Write 0168: 0060089010950000 
DBG(50476681)> CPU CMD: Exec 0170: 00 60 0000 0000 0297   transfer 0033 to process next event (if size available in out buf) / set ins 
DBG(50476682)> CPU DETAIL: Transfer to T 
DBG(50476684)> CPU CMD: Exec 0297: 00 41 1691 1692 0000   (1691 number of words in input block) - (1692 number of words already read)  
DBG(50476685)> CPU DETAIL: Read R 1691: 0000000000000036 
DBG(50476686)> CPU DETAIL: Read S 1692: 0000000000000036 
DBG(50476687)> CPU DETAIL: Result: 0000000000000000 
DBG(50476690)> CPU CMD: Exec 0298: 00 63 0303 0444 0000   if >0 goto 0303, =0 goto 0444 (if all events from event block processed)    
DBG(50476691)> CPU DETAIL: REG1: 0000000000000000
DBG(50476691)> CPU DETAIL: Transfer to S (REG1=0)
DBG(50476693)> CPU CMD: Exec 0444: 92 41 1704 1732 0000   (1704 number of word in output rec buf) - 1 -> field R   
DBG(50476694)> CPU DETAIL: Read R 1704: 0000000000000033 
DBG(50476695)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476696)> CPU DETAIL: Result: 0000000000000032 
DBG(50476697)> CPU DETAIL: Word Shift 8 digits left: REG1: 0000003200000000 
DBG(50476700)> CPU CMD: Exec 0445: 00 41 1802 0000 0446   set instr to write buf on tape 01 ...   
DBG(50476701)> CPU DETAIL: Read R 1802: 0191088408840001 
DBG(50476702)> CPU DETAIL: Result: 0191085208840001 
DBG(50476703)> CPU DETAIL: Write 0446: 0191085208840001 
DBG(50476705)> CPU CMD: Exec 0446: 01 91 0852 0884 0001   ... 01 91 0884-REG1 0884   
DBG(50476706)> CPU DETAIL: Tape operation on MT1, Addr 0852->0884, Block Number 0001
DBG(50476706)> MT CMD: Tape unit 1: init write
DBG(50476706)> MT EXP: Write from 0852 to 0884 as Block number 0001
DBG(50476706)> MT EXP: Start Of Block: 01 91 0852 0884 0001
DBG(50476706)> MT EXP: CRT 0852 to Tape: 0100004855151111 
DBG(50476706)> MT EXP: CRT 0853 to Tape: 0000990241000003 
DBG(50476706)> MT EXP: CRT 0854 to Tape: 0000000000000000 
DBG(50476706)> MT EXP: CRT 0855 to Tape: 0000000000000000 
DBG(50476706)> MT EXP: CRT 0856 to Tape: 0214855000000335 
DBG(50476706)> MT EXP: CRT 0857 to Tape: 9203366600000000 
DBG(50476706)> MT EXP: CRT 0858 to Tape: 2221444455660001 
DBG(50476706)> MT EXP: CRT 0859 to Tape: 0001000242009990 
DBG(50476706)> MT EXP: CRT 0860 to Tape: 0204855000000000 
DBG(50476706)> MT EXP: CRT 0861 to Tape: 0101429330900241 
DBG(50476706)> MT EXP: CRT 0862 to Tape: 0130004444151113 
DBG(50476706)> MT EXP: CRT 0863 to Tape: 0000000242009990 
DBG(50476706)> MT EXP: CRT 0864 to Tape: 0204444000000335 
DBG(50476706)> MT EXP: CRT 0865 to Tape: 0204458700760279 
DBG(50476706)> MT EXP: CRT 0866 to Tape: 9213355500000000 
DBG(50476706)> MT EXP: CRT 0867 to Tape: 9203366600000000 
DBG(50476706)> MT EXP: CRT 0868 to Tape: 0000000000000101 
DBG(50476706)> MT EXP: CRT 0869 to Tape: 0001000241000000 
DBG(50476706)> MT EXP: CRT 0870 to Tape: 0204444000000335 
DBG(50476706)> MT EXP: CRT 0871 to Tape: 0204458700760279 
DBG(50476706)> MT EXP: CRT 0872 to Tape: 0000000249999990 
DBG(50476706)> MT EXP: CRT 0873 to Tape: 0000000000033555 
DBG(50476706)> MT EXP: CRT 0874 to Tape: 0000000000033666 
DBG(50476706)> MT EXP: CRT 0875 to Tape: 0100004444151113 
DBG(50476706)> MT EXP: CRT 0876 to Tape: 0000000249999990 
DBG(50476706)> MT EXP: CRT 0877 to Tape: 0204444000000671 
DBG(50476706)> MT EXP: CRT 0878 to Tape: 0204458700760615 
DBG(50476706)> MT EXP: CRT 0879 to Tape: 1100000000000000 
DBG(50476706)> MT EXP: CRT 0880 to Tape: 0000000000000000 
DBG(50476706)> MT EXP: CRT 0881 to Tape: 0000000000000100 
DBG(50476706)> MT EXP: CRT 0882 to Tape: 0001000242009990 
DBG(50476706)> MT EXP: CRT 0883 to Tape: 0000000000033555 
DBG(50476706)> MT EXP: CRT 0884 to Tape: 0000000000033666 
DBG(50476706)> MT EXP: End Of Block: 01 91 0852 0884 0001 (33 words)
DBG(50476706)> MT DETAIL: Write block (632 chars, used 2.74 inches, needs 16 msec) to tape 1
DBG(50476706)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.03% of medium (4.35 inches)
DBG(50476709)> CPU CMD: Exec 0447: 08 60 0447 0000 1948   call 1948 check write   
DBG(50476710)> CPU DETAIL: Read R 0447: 0860044700001948 
DBG(50476711)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600447 
DBG(50476712)> CPU DETAIL: Transfer to T 
DBG(50476714)> CPU CMD: Exec 1948: 00 40 1967 0000 1960   Check write routine: save exit transfer in (1960 EXIT_CheckWrite)   
DBG(50476715)> CPU DETAIL: Read R 1967: 0059999991400001 
DBG(50476716)> CPU DETAIL: Result: 0060000000000448 
DBG(50476717)> CPU DETAIL: Write 1960: 0060000000000448 
DBG(50476719)> CPU CMD: Exec 1949: 91 60 0000 0000 0000      
DBG(50476720)> CPU DETAIL: Word Shift 9 digits left: REG1: 0000448000000000 
DBG(50476723)> CPU CMD: Exec 1950: 01 40 1968 0000 1952      
DBG(50476724)> CPU DETAIL: Read R 1968: 0599998196500000 
DBG(50476725)> CPU DETAIL: Result: 0600446196500000 
DBG(50476726)> CPU DETAIL: Word Shift 1 digits right: REG1: 0060044619650000 
DBG(50476727)> CPU DETAIL: Write 1952: 0060044619650000 
DBG(50476729)> CPU CMD: Exec 1951: 00 60 1971 1962 0000      
DBG(50476730)> CPU DETAIL: Read R 1971: 0060195619621962 
DBG(50476731)> CPU DETAIL: Write 1962: 0060195619621962 
DBG(50476733)> CPU CMD: Exec 1952: 00 60 0446 1965 0000      
DBG(50476734)> CPU DETAIL: Read R 0446: 0191085208840001 
DBG(50476735)> CPU DETAIL: Write 1965: 0191085208840001 
DBG(50476737)> CPU CMD: Exec 1953: 00 68 0000 0000 1955   if tape signal on write goto 1955   
DBG(50476738)> CPU DETAIL: Condition not present 
DBG(50476740)> CPU CMD: Exec 1954: 00 60 0000 0000 1960   go to exit word   
DBG(50476741)> CPU DETAIL: Transfer to T 
DBG(50476743)> CPU CMD: Exec 1960: 00 60 0000 0000 0448   EXIT_CheckWrite   
DBG(50476744)> CPU DETAIL: Transfer to T 
DBG(50476746)> CPU CMD: Exec 0448: 00 40 1802 1732 1802   incr block number on write tape instr   
DBG(50476747)> CPU DETAIL: Read R 1802: 0191088408840001 
DBG(50476748)> CPU DETAIL: Read S 1732: 0000000000000001 
DBG(50476749)> CPU DETAIL: Result: 0191088408840002 
DBG(50476750)> CPU DETAIL: Write 1802: 0191088408840002 
DBG(50476752)> CPU CMD: Exec 0449: 96 60 1704 0000 0000   (number of word in output rec buf) - 1 -> field S      
DBG(50476753)> CPU DETAIL: Read R 1704: 0000000000000033 
DBG(50476754)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000330000 
DBG(50476757)> CPU CMD: Exec 0450: 00 40 1793 0000 1793   reset end of buffer pointer in (1793 (0988) -> (0884)   
DBG(50476758)> CPU DETAIL: Read R 1793: 0060098808510000 
DBG(50476759)> CPU DETAIL: Result: 0060098808840000 
DBG(50476760)> CPU DETAIL: Write 1793: 0060098808840000 
DBG(50476762)> CPU CMD: Exec 0451: 00 60 1733 1704 0000   clear (1704 number of word in output rec buf)   
DBG(50476763)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50476764)> CPU DETAIL: Write 1704: 0000000000000000 
DBG(50476766)> CPU CMD: Exec 0452: 00 60 0000 0000 0300   transfer 0300   
DBG(50476767)> CPU DETAIL: Transfer to T 
DBG(50476769)> CPU CMD: Exec 0300: 00 60 1733 1692 0000   clear (1692 number of words already processed from block), comes here from 0 
DBG(50476770)> CPU DETAIL: Read R 1733: 0000000000000000 
DBG(50476771)> CPU DETAIL: Write 1692: 0000000000000000 
DBG(50476773)> CPU CMD: Exec 0301: 00 60 1781 0306 0000   restore instr 0306   
DBG(50476774)> CPU DETAIL: Read R 1781: 0070088417640310 
DBG(50476775)> CPU DETAIL: Write 0306: 0070088417640310 
DBG(50476777)> CPU CMD: Exec 0302: 00 60 1771 0304 0287   restore instr 0304, goto 0287 to read next tape block    
DBG(50476778)> CPU DETAIL: Read R 1771: 9660169100000000 
DBG(50476779)> CPU DETAIL: Transfer to T 
DBG(50476779)> CPU DETAIL: Write 0304: 9660169100000000 
DBG(50476781)> CPU CMD: Exec 0287: 02 95 0884 0000 0000   read tape 02 backwards xxx ... 0884   
DBG(50476782)> CPU DETAIL: Tape operation on MT2, Addr 0884->0000, Block Number 0000
DBG(50476782)> MT CMD: Tape unit 2: init backward read
DBG(50476782)> MT DETAIL: Read tape record (20 chars, used -1.54 inches, needs 8 msec) from tape 2
DBG(50476782)> MT DETAIL: Tape record contents: D*0291000000000000CD
DBG(50476782)> MT EXP: End Of File mark sensed: 0291000000000000 
DBG(50476782)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(50476785)> CPU CMD: Exec 0288: 08 68 0288 0000 1931   if tape check, call 1931 reread   
DBG(50476786)> CPU DETAIL: Condition not present 
DBG(50476788)> CPU CMD: Exec 0289: 00 67 0000 0000 0622   if end of file goto 0622   
DBG(50476789)> CPU DETAIL: Reset condition present 
DBG(50476789)> CPU DETAIL: Transfer to T 
DBG(50476791)> CPU CMD: Exec 0622: 00 70 1704 1733 0630   if (1704 number of word in output rec buf)=0 goto 0630   
DBG(50476792)> CPU DETAIL: Read R 1704: 0000000000000000 
DBG(50476793)> CPU DETAIL: Read S 1733: 0000000000000000 
DBG(50476794)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(50476795)> CPU DETAIL: Transfer to T 
DBG(50476797)> CPU CMD: Exec 0630: 00 60 1838 0615 0000   set instr to print in (1686 project week now) in 0001    
DBG(50476798)> CPU DETAIL: Read R 1838: 0080168600010000 
DBG(50476799)> CPU DETAIL: Write 0615: 0080168600010000 
DBG(50476801)> CPU CMD: Exec 0631: 00 60 1839 0621 0615   set instr to print in (1727 number of events stored in output tape) in 0007, 
DBG(50476802)> CPU DETAIL: Read R 1839: 0083172700070624 
DBG(50476803)> CPU DETAIL: Transfer to T 
DBG(50476803)> CPU DETAIL: Write 0621: 0083172700070624 
DBG(50476805)> CPU CMD: Exec 0615: 00 80 1686 0001 0000   (0650 input tape 03 label as read from tape) -> (0001)   
DBG(50476806)> CPU DETAIL: Read R 1686: 3908000000000000 
DBG(50476807)> CPU DETAIL: Write 0001: 3908000000000000 
DBG(50476809)> CPU CMD: Exec 0616: 00 80 1687 0002 0000   (1687 input tape label requiered) -> (0002) = 39 07 0000 0000 NNNN   
DBG(50476810)> CPU DETAIL: Read R 1687: 0000000000002221 
DBG(50476811)> CPU DETAIL: Write 0002: 0000000000002221 
DBG(50476813)> CPU CMD: Exec 0617: 00 80 1686 0003 0000   (1686 output tape label with week info) -> (0003)   
DBG(50476814)> CPU DETAIL: Read R 1686: 3908000000000000 
DBG(50476815)> CPU DETAIL: Write 0003: 3908000000000000 
DBG(50476817)> CPU CMD: Exec 0618: 00 80 1688 0004 0000   (in prog load TSTS=Schedulled completition time to be used) -> (0004)   
DBG(50476818)> CPU DETAIL: Read R 1688: 0000000000000000 
DBG(50476819)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(50476821)> CPU CMD: Exec 0619: 00 80 1684 0005 0000   (1684) -> (0005)   
DBG(50476822)> CPU DETAIL: Read R 1684: 0000000000000000 
DBG(50476823)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(50476825)> CPU CMD: Exec 0620: 00 80 1685 0006 0000   (1685) -> (0006)   
DBG(50476826)> CPU DETAIL: Read R 1685: 0000000000000000 
DBG(50476827)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(50476829)> CPU CMD: Exec 0621: 00 83 1727 0007 0624   print special, goto 0011    
DBG(50476830)> CPU DETAIL: Read R 1727: 0000000000000003 
DBG(50476831)> CPU DETAIL: Transfer to T 
DBG(50476831)> CPU DETAIL: Write 0007: 0000000000000003 
DBG(50476831)> LP CMD: Printer LP1: init cycle special
DBG(50476831)> LP CMD:      0001: 3908000000000000  0000000000002221 3908000000000000 0000000000000000
DBG(50476831)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000003 
DBG(50476831)> LP CMD: Printer 1: ready (fast mode)
DBG(50476833)> CPU CMD: Exec 0624: 01 91 0000 0000 0000   write end of file mark in tape 01   
DBG(50476834)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(50476834)> MT CMD: Tape unit 1: init write
DBG(50476834)> MT EXP: End Of File mark: 02d 01 0091 0000 0000
DBG(50476834)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 1
DBG(50476834)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (5.89 inches)
DBG(50476837)> CPU CMD: Exec 0625: 01 98 0000 0000 0000   rewind tape 01   
DBG(50476838)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(50476838)> MT CMD: Tape unit 1: init rewind (current medium used 5.89 inches)
DBG(50476838)> MT CMD: Tape unit 1: rewind time (0 sec)
DBG(50476838)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(50476840)> CPU CMD: Exec 0626: 02 91 0000 0000 0000   write end of file mark in tape 02   
DBG(50476841)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(50476841)> MT CMD: Tape unit 2: init write
DBG(50476841)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(50476841)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(50476841)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(50476844)> CPU CMD: Exec 0627: 04 91 0000 0000 0000   write end of file mark in tape 04   
DBG(50476845)> CPU DETAIL: Tape operation on MT4, Addr 0000->0000, Block Number 0000
DBG(50476845)> MT CMD: Tape unit 4: init write
DBG(50476845)> MT EXP: End Of File mark: 02d 04 0091 0000 0000
DBG(50476845)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 4
DBG(50476845)> CPU DETAIL: ... Tape 4 done (fast mode), used 0.01% of medium (1.54 inches)
DBG(50476848)> CPU CMD: Exec 0628: 09 98 0000 0000 0000   rewind tape 09 (program)   
DBG(50476849)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(50476849)> MT CMD: Tape unit 3: already at BOT
DBG(50476851)> CPU CMD: Exec 0629: 00 60 0018 0001 0001   set stop at 0001 and transfer to it to signal termination ok   
DBG(50476852)> CPU DETAIL: Read R 0018: 0061000000000000 
DBG(50476853)> CPU DETAIL: Transfer to T 
DBG(50476853)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(50476855)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(50476856)> CPU DETAIL: Programmed STOP 
DBG(50476856)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(51151809)> CPU DETAIL: End Wait for TAPE animation (119 msec)
DBG(51151809)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(51151809)> CPU DETAIL: Measured speed: 4457452 Ticks per second
DBG(51151809)> CPU DETAIL: Measured speed: Clock at 4.46 MHz
DBG(51151809)> CPU DETAIL: Speed is x4.5 relative to original hardware
DBG(51151809)> CPU DETAIL: Instructions executed: 1547
DBG(51151809)> CPU DETAIL: Measured speed: 7366 Instructions per second (IPS) achieved
DBG(51151809)> CPU DETAIL: Run elapsed 210 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)

*** print out of computed events in tape

loaded ../PERT_Run06/print_ev_prog.txt from 0008 to 1996 address

*** print events in tape in printer_EV.txt

DBG(51151809)> MT EXP: Tape unit 1: attach file mt_EV_Comp.tap
DBG(51151809)> MT EXP: Tape unit 2: attach file mt_EV_prt.tap
DBG(51151809)> CPU DETAIL: Measured speed: init because start of run
DBG(51151811)> CPU CMD: Exec 0008: 00 57 0000 0000 0000   0008        57                                           Clear M4 M6 M8   
DBG(51151812)> CPU DETAIL: Clear M4
DBG(51151812)> CPU DETAIL: M4: 0000 
DBG(51151813)> CPU DETAIL: Clear M6
DBG(51151813)> CPU DETAIL: M6: 0000 
DBG(51151814)> CPU DETAIL: Clear M8
DBG(51151814)> CPU DETAIL: M8: 0000 
DBG(51151817)> CPU CMD: Exec 0009: 09 98 0000 0000 0000            09 98                                           rewind tape 09 prog 
DBG(51151818)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(51151818)> MT EXP: Tape 3: command 98 attempted on tape without file attached
DBG(51151818)> CPU DETAIL: Tape Check signaled
DBG(51151818)> CPU DETAIL: Continue because switch TAPE CHECK set to proceed
DBG(51151820)> CPU CMD: Exec 0010: 00 60 1221 1211 0000               TR       ZERO        EVCOUNT   
DBG(51151821)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51151822)> CPU DETAIL: Write 1211: 0000000000000000 
DBG(51151824)> CPU CMD: Exec 0011: 01 94 1219 1219 0000            01 94       TEMP1       TEMP1       0000        read tape 01 label  
DBG(51151825)> CPU DETAIL: Tape operation on MT1, Addr 1219->1219, Block Number 0000
DBG(51151825)> MT DATA: Tape unit 1: init read
DBG(51151825)> MT DETAIL: Read tape record (56 chars, used 1.61 inches, needs 8 msec) from tape 1
DBG(51151825)> MT DETAIL: Tape record contents: D*0191168616860000C*3908000000000000C*0191168616860000CD
DBG(51151825)> MT EXP: Start Of Block Word: 0191168616860000
DBG(51151825)> MT EXP: Read Tape Block number 0000
DBG(51151825)> MT EXP: Read forward addr 1219 to 1219
DBG(51151825)> MT EXP: Tape to CRT 1219: 3908000000000000 
DBG(51151825)> MT EXP: End Of Block Word: 0191168616860000, data words in block: 1
DBG(51151825)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.61 inches)
DBG(51151828)> CPU CMD: Exec 0012: 00 68 0012 0000 1991               68       *                       REREAD      if tape check Call  
DBG(51151829)> CPU DETAIL: Condition not present 
DBG(51151831)> CPU CMD: Exec 0013: 00 80 1219 0001 0000               80       TEMP1       0001                    print label for tap 
DBG(51151832)> CPU DETAIL: Read R 1219: 3908000000000000 
DBG(51151833)> CPU DETAIL: Write 0001: 3908000000000000 
DBG(51151835)> CPU CMD: Exec 0014: 00 80 1221 0002 0000               80       ZERO        0002   
DBG(51151836)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51151837)> CPU DETAIL: Write 0002: 0000000000000000 
DBG(51151839)> CPU CMD: Exec 0015: 00 80 0000 0003 0000               80                   0003   
DBG(51151840)> CPU DETAIL: Write 0003: 0000000000000000 
DBG(51151842)> CPU CMD: Exec 0016: 00 80 0000 0004 0000               80                   0004   
DBG(51151843)> CPU DETAIL: Write 0004: 0000000000000000 
DBG(51151845)> CPU CMD: Exec 0017: 00 80 0000 0005 0000               80                   0005   
DBG(51151846)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51151848)> CPU CMD: Exec 0018: 00 80 0000 0006 0000               80                   0006   
DBG(51151849)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51151851)> CPU CMD: Exec 0019: 00 81 1221 0007 0000               81       ZERO        0007                    print   
DBG(51151852)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51151853)> CPU DETAIL: Write 0007: 0000000000000000 
DBG(51151853)> LP CMD: Printer LP1: init cycle 
DBG(51151853)> LP CMD:      0001: 3908000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(51151853)> LP CMD:      0005: 0000000000000000  0000000000000000 0000000000000000 
DBG(51151853)> LP CMD: Printer 1: ready (fast mode)
DBG(51151855)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(51151856)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(51151856)> MT DATA: Tape unit 1: init read
DBG(51151856)> MT DETAIL: Read tape record (632 chars, used 2.74 inches, needs 16 msec) from tape 1
DBG(51151856)> MT DETAIL: Tape record contents: D*0191085208840001C*0100004855151111C*0000990241000003C*00000000000000...
DBG(51151856)> MT EXP: Start Of Block Word: 0191085208840001
DBG(51151856)> MT EXP: Read Tape Block number 0001
DBG(51151856)> MT EXP: Read forward addr 1001 to 0000
DBG(51151856)> MT EXP: Tape to CRT 1001: 0100004855151111 
DBG(51151856)> MT EXP: Tape to CRT 1002: 0000990241000003 
DBG(51151856)> MT EXP: Tape to CRT 1003: 0000000000000000 
DBG(51151856)> MT EXP: Tape to CRT 1004: 0000000000000000 
DBG(51151856)> MT EXP: Tape to CRT 1005: 0214855000000335 
DBG(51151856)> MT EXP: Tape to CRT 1006: 9203366600000000 
DBG(51151856)> MT EXP: Tape to CRT 1007: 2221444455660001 
DBG(51151856)> MT EXP: Tape to CRT 1008: 0001000242009990 
DBG(51151856)> MT EXP: Tape to CRT 1009: 0204855000000000 
DBG(51151856)> MT EXP: Tape to CRT 1010: 0101429330900241 
DBG(51151856)> MT EXP: Tape to CRT 1011: 0130004444151113 
DBG(51151856)> MT EXP: Tape to CRT 1012: 0000000242009990 
DBG(51151856)> MT EXP: Tape to CRT 1013: 0204444000000335 
DBG(51151856)> MT EXP: Tape to CRT 1014: 0204458700760279 
DBG(51151856)> MT EXP: Tape to CRT 1015: 9213355500000000 
DBG(51151856)> MT EXP: Tape to CRT 1016: 9203366600000000 
DBG(51151856)> MT EXP: Tape to CRT 1017: 0000000000000101 
DBG(51151856)> MT EXP: Tape to CRT 1018: 0001000241000000 
DBG(51151856)> MT EXP: Tape to CRT 1019: 0204444000000335 
DBG(51151856)> MT EXP: Tape to CRT 1020: 0204458700760279 
DBG(51151856)> MT EXP: Tape to CRT 1021: 0000000249999990 
DBG(51151856)> MT EXP: Tape to CRT 1022: 0000000000033555 
DBG(51151856)> MT EXP: Tape to CRT 1023: 0000000000033666 
DBG(51151856)> MT EXP: Tape to CRT 1024: 0100004444151113 
DBG(51151856)> MT EXP: Tape to CRT 1025: 0000000249999990 
DBG(51151856)> MT EXP: Tape to CRT 1026: 0204444000000671 
DBG(51151856)> MT EXP: Tape to CRT 1027: 0204458700760615 
DBG(51151856)> MT EXP: Tape to CRT 1028: 1100000000000000 
DBG(51151856)> MT EXP: Tape to CRT 1029: 0000000000000000 
DBG(51151856)> MT EXP: Tape to CRT 1030: 0000000000000100 
DBG(51151856)> MT EXP: Tape to CRT 1031: 0001000242009990 
DBG(51151856)> MT EXP: Tape to CRT 1032: 0000000000033555 
DBG(51151856)> MT EXP: Tape to CRT 1033: 0000000000033666 
DBG(51151856)> MT EXP: End Of Block Word: 0191085208840001, data words in block: 33
DBG(51151856)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.03% of medium (4.35 inches)
DBG(51151859)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(51151860)> CPU DETAIL: Condition not present 
DBG(51151862)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(51151863)> CPU DETAIL: Condition not present 
DBG(51151865)> CPU CMD: Exec 0023: 00 60 0000 1219 0000               TR                   TEMP1                   Temp1=start of bloc 
DBG(51151866)> CPU DETAIL: Write 1219: 0191085208840001 
DBG(51151868)> CPU CMD: Exec 0024: 04 42 0000 1228 1220            04 MASK                 FIELD-S     TEMP2       Temp2=bbbb=02 90 aa 
DBG(51151869)> CPU DETAIL: Read S 1228: 0000000011110000 
DBG(51151870)> CPU DETAIL: Result: 0000000008840000 
DBG(51151871)> CPU DETAIL: Word Shift 4 digits right: REG1: 0000000000000884 
DBG(51151872)> CPU DETAIL: Write 1220: 0000000000000884 
DBG(51151874)> CPU CMD: Exec 0025: 08 42 1219 1227 0000            08 MASK     TEMP1       FIELD-R                 REG1=02 90 aaaa bbb 
DBG(51151875)> CPU DETAIL: Read R 1219: 0191085208840001 
DBG(51151876)> CPU DETAIL: Read S 1227: 0000111100000000 
DBG(51151877)> CPU DETAIL: Result: 0000085200000000 
DBG(51151878)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000000000852 
DBG(51151881)> CPU CMD: Exec 0026: 00 41 1220 0000 0000               SUB      TEMP2                
DBG(51151882)> CPU DETAIL: Read R 1220: 0000000000000884 
DBG(51151883)> CPU DETAIL: Result: 0000000000000032 
DBG(51151886)> CPU CMD: Exec 0027: 00 40 0000 1222 1203               ADD                  ONE         BL-INBUF    BL-INBUF=Block Len  
DBG(51151887)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51151888)> CPU DETAIL: Result: 0000000000000033 
DBG(51151889)> CPU DETAIL: Write 1203: 0000000000000033 
DBG(51151891)> CPU CMD: Exec 0028: 00 41 1226 0000 0000               SUB      N200                                check Block Len fro 
DBG(51151892)> CPU DETAIL: Read R 1226: 0000000000000200 
DBG(51151893)> CPU DETAIL: Result: 0000000000000167 
DBG(51151896)> CPU CMD: Exec 0029: 00 63 0031 0031 0000               TR SGN   LSPL3       LSPL3                   transfer if 200 or  
DBG(51151897)> CPU DETAIL: REG1: 0000000000000167
DBG(51151897)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(51151899)> CPU CMD: Exec 0031: 00 60 1221 1204 0000   LSPL3       TR       ZERO        NW-INBUF                NW-INBUF=Number of  
DBG(51151900)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51151901)> CPU DETAIL: Write 1204: 0000000000000000 
DBG(51151903)> CPU CMD: Exec 0032: 00 60 0000 0000 0033               TR                               RR-INBUF    goto process first  
DBG(51151904)> CPU DETAIL: Transfer to T 
DBG(51151906)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(51151907)> CPU DETAIL: Read R 1203: 0000000000000033 
DBG(51151908)> CPU DETAIL: Read S 1204: 0000000000000000 
DBG(51151909)> CPU DETAIL: Result: 0000000000000033 
DBG(51151912)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(51151913)> CPU DETAIL: REG1: 0000000000000033
DBG(51151913)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(51151915)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(51151916)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(51151917)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000000000 
DBG(51151920)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(51151921)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(51151922)> CPU DETAIL: Result: 0057000000000000 
DBG(51151923)> CPU DETAIL: Write 0038: 0057000000000000 
DBG(51151925)> CPU CMD: Exec 0038: 00 57 0000 0000 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(51151926)> CPU DETAIL: Clear M4
DBG(51151926)> CPU DETAIL: M4: 0000 
DBG(51151927)> CPU DETAIL: Clear M6
DBG(51151927)> CPU DETAIL: M6: 0000 
DBG(51151928)> CPU DETAIL: Clear M8
DBG(51151928)> CPU DETAIL: M8: 0000 
DBG(51151931)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51151932)> CPU DETAIL: M6 Address Modifier: 0000 
DBG(51151932)> CPU DETAIL: Read R 1001: 0100004855151111 
DBG(51151933)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(51151933)> CPU DETAIL: Write 1212: 0100004855151111 
DBG(51151935)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51151936)> CPU DETAIL: M4: 0000 
DBG(51151937)> CPU DETAIL: M6: 0001 
DBG(51151938)> CPU DETAIL: M8: 0000 
DBG(51151941)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51151942)> CPU DETAIL: M4: 0001 
DBG(51151943)> CPU DETAIL: Transfer to T 
DBG(51151945)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51151946)> CPU DETAIL: M6 Address Modifier: 0001 
DBG(51151946)> CPU DETAIL: Read R 1002: 0000990241000003 
DBG(51151947)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(51151947)> CPU DETAIL: Write 1213: 0000990241000003 
DBG(51151949)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51151950)> CPU DETAIL: M4: 0001 
DBG(51151951)> CPU DETAIL: M6: 0002 
DBG(51151952)> CPU DETAIL: M8: 0000 
DBG(51151955)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51151956)> CPU DETAIL: M4: 0002 
DBG(51151957)> CPU DETAIL: Transfer to T 
DBG(51151959)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51151960)> CPU DETAIL: M6 Address Modifier: 0002 
DBG(51151960)> CPU DETAIL: Read R 1003: 0000000000000000 
DBG(51151961)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(51151961)> CPU DETAIL: Write 1214: 0000000000000000 
DBG(51151963)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51151964)> CPU DETAIL: M4: 0002 
DBG(51151965)> CPU DETAIL: M6: 0003 
DBG(51151966)> CPU DETAIL: M8: 0000 
DBG(51151969)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51151970)> CPU DETAIL: M4: 0003 
DBG(51151971)> CPU DETAIL: Transfer to T 
DBG(51151973)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51151974)> CPU DETAIL: M6 Address Modifier: 0003 
DBG(51151974)> CPU DETAIL: Read R 1004: 0000000000000000 
DBG(51151975)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(51151975)> CPU DETAIL: Write 1215: 0000000000000000 
DBG(51151977)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51151978)> CPU DETAIL: M4: 0003 
DBG(51151979)> CPU DETAIL: M6: 0004 
DBG(51151980)> CPU DETAIL: M8: 0000 
DBG(51151983)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51151984)> CPU DETAIL: M4: 0004 
DBG(51151985)> CPU DETAIL: Transfer to T 
DBG(51151987)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51151988)> CPU DETAIL: M6 Address Modifier: 0004 
DBG(51151988)> CPU DETAIL: Read R 1005: 0214855000000335 
DBG(51151989)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(51151989)> CPU DETAIL: Write 1216: 0214855000000335 
DBG(51151991)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51151992)> CPU DETAIL: M4: 0004 
DBG(51151993)> CPU DETAIL: M6: 0005 
DBG(51151994)> CPU DETAIL: M8: 0000 
DBG(51151997)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51151998)> CPU DETAIL: M4: 0005 
DBG(51151999)> CPU DETAIL: Transfer to T 
DBG(51152001)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152002)> CPU DETAIL: M6 Address Modifier: 0005 
DBG(51152002)> CPU DETAIL: Read R 1006: 9203366600000000 
DBG(51152003)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(51152003)> CPU DETAIL: Write 1217: 9203366600000000 
DBG(51152005)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152006)> CPU DETAIL: M4: 0005 
DBG(51152007)> CPU DETAIL: M6: 0006 
DBG(51152008)> CPU DETAIL: M8: 0000 
DBG(51152011)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152012)> CPU DETAIL: M4: 0006 
DBG(51152013)> CPU DETAIL: Transfer to T 
DBG(51152015)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152016)> CPU DETAIL: M6 Address Modifier: 0006 
DBG(51152016)> CPU DETAIL: Read R 1007: 2221444455660001 
DBG(51152017)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(51152017)> CPU DETAIL: Write 1218: 2221444455660001 
DBG(51152019)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152020)> CPU DETAIL: M4: 0006 
DBG(51152021)> CPU DETAIL: M6: 0007 
DBG(51152022)> CPU DETAIL: M8: 0000 
DBG(51152025)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152026)> CPU DETAIL: M4: 0007 
DBG(51152029)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(51152030)> CPU DETAIL: Read R 1204: 0000000000000000 
DBG(51152031)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(51152032)> CPU DETAIL: Result: 0000000000000007 
DBG(51152033)> CPU DETAIL: Write 1204: 0000000000000007 
DBG(51152035)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(51152036)> CPU DETAIL: Read R 1211: 0000000000000000 
DBG(51152037)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152038)> CPU DETAIL: Result: 0000000000000001 
DBG(51152039)> CPU DETAIL: Write 1211: 0000000000000001 
DBG(51152041)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(51152042)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152043)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(51152045)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(51152046)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152047)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(51152049)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(51152050)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152051)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(51152053)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(51152054)> CPU DETAIL: Read R 1212: 0100004855151111 
DBG(51152055)> CPU DETAIL: Write 1206: 0100004855151111 
DBG(51152057)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(51152058)> CPU DETAIL: Read R 1213: 0000990241000003 
DBG(51152059)> CPU DETAIL: Write 1207: 0000990241000003 
DBG(51152061)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(51152062)> CPU DETAIL: Read R 1218: 2221444455660001 
DBG(51152063)> CPU DETAIL: Write 1208: 2221444455660001 
DBG(51152065)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(51152066)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(51152067)> CPU DETAIL: Word Shift 12 digits left: REG1: 0001000000000000 
DBG(51152068)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(51152070)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(51152071)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(51152072)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(51152073)> CPU DETAIL: Transfer to T 
DBG(51152075)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152076)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152077)> CPU DETAIL: Result: 0060000000000052 
DBG(51152078)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(51152080)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152081)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(51152082)> CPU DETAIL: Write 0001: 0001000000000000 
DBG(51152084)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152085)> CPU DETAIL: Read R 1206: 0100004855151111 
DBG(51152086)> CPU DETAIL: Write 0002: 0100004855151111 
DBG(51152088)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152089)> CPU DETAIL: Read R 1207: 0000990241000003 
DBG(51152090)> CPU DETAIL: Write 0003: 0000990241000003 
DBG(51152092)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152093)> CPU DETAIL: Read R 1208: 2221444455660001 
DBG(51152094)> CPU DETAIL: Write 0004: 2221444455660001 
DBG(51152096)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152097)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152098)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152100)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152101)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152103)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152104)> CPU DETAIL: Reset condition present 
DBG(51152104)> same as above (3 times)
DBG(51152104)> CPU DETAIL: Transfer to T 
DBG(51152106)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152107)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152107)> MT CMD: Tape unit 2: init write
DBG(51152107)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152107)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152107)> MT EXP: CRT 0001 to Tape: 0001000000000000 
DBG(51152107)> MT EXP: CRT 0002 to Tape: 0100004855151111 
DBG(51152107)> MT EXP: CRT 0003 to Tape: 0000990241000003 
DBG(51152107)> MT EXP: CRT 0004 to Tape: 2221444455660001 
DBG(51152107)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152107)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152107)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (1.72 inches)
DBG(51152110)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152111)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152112)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152113)> CPU DETAIL: Transfer to T 
DBG(51152115)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152116)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152117)> CPU DETAIL: Result: 0060000000000094 
DBG(51152118)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152120)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152121)> CPU DETAIL: Condition not present 
DBG(51152123)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152124)> CPU DETAIL: Transfer to T 
DBG(51152126)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152127)> CPU DETAIL: Transfer to T 
DBG(51152129)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(51152130)> CPU DETAIL: Transfer to T 
DBG(51152132)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(51152133)> CPU DETAIL: Read R 1218: 2221444455660001 
DBG(51152134)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(51152135)> CPU DETAIL: Result: 0000000000000000 
DBG(51152136)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000000 
DBG(51152137)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(51152139)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(51152140)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152141)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51152142)> CPU DETAIL: Transfer to T 
DBG(51152144)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51152145)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(51152146)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51152147)> CPU DETAIL: Result: 0001000000000000 
DBG(51152148)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(51152150)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(51152151)> CPU DETAIL: Read R 1218: 2221444455660001 
DBG(51152152)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(51152153)> CPU DETAIL: Result: 0000000000000001 
DBG(51152154)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(51152156)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(51152157)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152158)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(51152161)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(51152162)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(51152162)> CPU DETAIL: Read R 1008: 0001000242009990 
DBG(51152163)> CPU DETAIL: Write 1206: 0001000242009990 
DBG(51152165)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(51152166)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(51152166)> CPU DETAIL: Read R 1009: 0204855000000000 
DBG(51152167)> CPU DETAIL: Write 1207: 0204855000000000 
DBG(51152169)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(51152170)> CPU DETAIL: M6 Address Modifier: 0007 
DBG(51152170)> CPU DETAIL: Read R 1010: 0101429330900241 
DBG(51152171)> CPU DETAIL: Write 1208: 0101429330900241 
DBG(51152173)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(51152174)> CPU DETAIL: Read R 1205: 0001000000000000 
DBG(51152175)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152176)> CPU DETAIL: Result: 0001000000000001 
DBG(51152177)> CPU DETAIL: Write 1205: 0001000000000001 
DBG(51152179)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(51152180)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(51152181)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(51152182)> CPU DETAIL: Transfer to T 
DBG(51152184)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152185)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152186)> CPU DETAIL: Result: 0060000000000071 
DBG(51152187)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(51152189)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152190)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(51152191)> CPU DETAIL: Write 0001: 0001000000000001 
DBG(51152193)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152194)> CPU DETAIL: Read R 1206: 0001000242009990 
DBG(51152195)> CPU DETAIL: Write 0002: 0001000242009990 
DBG(51152197)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152198)> CPU DETAIL: Read R 1207: 0204855000000000 
DBG(51152199)> CPU DETAIL: Write 0003: 0204855000000000 
DBG(51152201)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152202)> CPU DETAIL: Read R 1208: 0101429330900241 
DBG(51152203)> CPU DETAIL: Write 0004: 0101429330900241 
DBG(51152205)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152206)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152207)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152209)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152210)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152212)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152213)> CPU DETAIL: Reset condition present 
DBG(51152213)> same as above (3 times)
DBG(51152213)> CPU DETAIL: Transfer to T 
DBG(51152215)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152216)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152216)> MT CMD: Tape unit 2: init write
DBG(51152216)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152216)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152216)> MT EXP: CRT 0001 to Tape: 0001000000000001 
DBG(51152216)> MT EXP: CRT 0002 to Tape: 0001000242009990 
DBG(51152216)> MT EXP: CRT 0003 to Tape: 0204855000000000 
DBG(51152216)> MT EXP: CRT 0004 to Tape: 0101429330900241 
DBG(51152216)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152216)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152216)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.43 inches)
DBG(51152219)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152220)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152221)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152222)> CPU DETAIL: Transfer to T 
DBG(51152224)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152225)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152226)> CPU DETAIL: Result: 0060000000000094 
DBG(51152227)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152229)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152230)> CPU DETAIL: Condition not present 
DBG(51152232)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152233)> CPU DETAIL: Transfer to T 
DBG(51152235)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152236)> CPU DETAIL: Transfer to T 
DBG(51152238)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(51152239)> CPU DETAIL: Transfer to T 
DBG(51152241)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(51152242)> CPU DETAIL: Read R 1204: 0000000000000007 
DBG(51152243)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(51152244)> CPU DETAIL: Result: 0000000000000010 
DBG(51152245)> CPU DETAIL: Write 1204: 0000000000000010 
DBG(51152247)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(51152248)> CPU DETAIL: M4: 0007 
DBG(51152249)> CPU DETAIL: M6: 0010 
DBG(51152250)> CPU DETAIL: M8: 0000 
DBG(51152253)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(51152254)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(51152255)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152256)> CPU DETAIL: Result: 0000000000000000 
DBG(51152257)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(51152259)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(51152260)> CPU DETAIL: Transfer to T 
DBG(51152262)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(51152263)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152264)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51152265)> CPU DETAIL: Transfer to T 
DBG(51152267)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51152268)> CPU DETAIL: Read R 1205: 0001000000000001 
DBG(51152269)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51152270)> CPU DETAIL: Result: 0001000000000000 
DBG(51152271)> CPU DETAIL: Write 1205: 0001000000000000 
DBG(51152273)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(51152274)> CPU DETAIL: Transfer to T 
DBG(51152276)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(51152277)> CPU DETAIL: Read R 1203: 0000000000000033 
DBG(51152278)> CPU DETAIL: Read S 1204: 0000000000000010 
DBG(51152279)> CPU DETAIL: Result: 0000000000000023 
DBG(51152282)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(51152283)> CPU DETAIL: REG1: 0000000000000023
DBG(51152283)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(51152285)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(51152286)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(51152287)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000100000 
DBG(51152290)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(51152291)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(51152292)> CPU DETAIL: Result: 0057000000100000 
DBG(51152293)> CPU DETAIL: Write 0038: 0057000000100000 
DBG(51152295)> CPU CMD: Exec 0038: 00 57 0000 0010 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(51152296)> CPU DETAIL: Clear M4
DBG(51152296)> CPU DETAIL: M4: 0000 
DBG(51152297)> CPU DETAIL: Clear M6
DBG(51152297)> CPU DETAIL: M6: 0010 
DBG(51152298)> CPU DETAIL: Clear M8
DBG(51152298)> CPU DETAIL: M8: 0000 
DBG(51152301)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152302)> CPU DETAIL: M6 Address Modifier: 0010 
DBG(51152302)> CPU DETAIL: Read R 1011: 0130004444151113 
DBG(51152303)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(51152303)> CPU DETAIL: Write 1212: 0130004444151113 
DBG(51152305)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152306)> CPU DETAIL: M4: 0000 
DBG(51152307)> CPU DETAIL: M6: 0011 
DBG(51152308)> CPU DETAIL: M8: 0000 
DBG(51152311)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152312)> CPU DETAIL: M4: 0001 
DBG(51152313)> CPU DETAIL: Transfer to T 
DBG(51152315)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152316)> CPU DETAIL: M6 Address Modifier: 0011 
DBG(51152316)> CPU DETAIL: Read R 1012: 0000000242009990 
DBG(51152317)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(51152317)> CPU DETAIL: Write 1213: 0000000242009990 
DBG(51152319)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152320)> CPU DETAIL: M4: 0001 
DBG(51152321)> CPU DETAIL: M6: 0012 
DBG(51152322)> CPU DETAIL: M8: 0000 
DBG(51152325)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152326)> CPU DETAIL: M4: 0002 
DBG(51152327)> CPU DETAIL: Transfer to T 
DBG(51152329)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152330)> CPU DETAIL: M6 Address Modifier: 0012 
DBG(51152330)> CPU DETAIL: Read R 1013: 0204444000000335 
DBG(51152331)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(51152331)> CPU DETAIL: Write 1214: 0204444000000335 
DBG(51152333)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152334)> CPU DETAIL: M4: 0002 
DBG(51152335)> CPU DETAIL: M6: 0013 
DBG(51152336)> CPU DETAIL: M8: 0000 
DBG(51152339)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152340)> CPU DETAIL: M4: 0003 
DBG(51152341)> CPU DETAIL: Transfer to T 
DBG(51152343)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152344)> CPU DETAIL: M6 Address Modifier: 0013 
DBG(51152344)> CPU DETAIL: Read R 1014: 0204458700760279 
DBG(51152345)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(51152345)> CPU DETAIL: Write 1215: 0204458700760279 
DBG(51152347)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152348)> CPU DETAIL: M4: 0003 
DBG(51152349)> CPU DETAIL: M6: 0014 
DBG(51152350)> CPU DETAIL: M8: 0000 
DBG(51152353)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152354)> CPU DETAIL: M4: 0004 
DBG(51152355)> CPU DETAIL: Transfer to T 
DBG(51152357)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152358)> CPU DETAIL: M6 Address Modifier: 0014 
DBG(51152358)> CPU DETAIL: Read R 1015: 9213355500000000 
DBG(51152359)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(51152359)> CPU DETAIL: Write 1216: 9213355500000000 
DBG(51152361)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152362)> CPU DETAIL: M4: 0004 
DBG(51152363)> CPU DETAIL: M6: 0015 
DBG(51152364)> CPU DETAIL: M8: 0000 
DBG(51152367)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152368)> CPU DETAIL: M4: 0005 
DBG(51152369)> CPU DETAIL: Transfer to T 
DBG(51152371)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152372)> CPU DETAIL: M6 Address Modifier: 0015 
DBG(51152372)> CPU DETAIL: Read R 1016: 9203366600000000 
DBG(51152373)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(51152373)> CPU DETAIL: Write 1217: 9203366600000000 
DBG(51152375)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152376)> CPU DETAIL: M4: 0005 
DBG(51152377)> CPU DETAIL: M6: 0016 
DBG(51152378)> CPU DETAIL: M8: 0000 
DBG(51152381)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152382)> CPU DETAIL: M4: 0006 
DBG(51152383)> CPU DETAIL: Transfer to T 
DBG(51152385)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152386)> CPU DETAIL: M6 Address Modifier: 0016 
DBG(51152386)> CPU DETAIL: Read R 1017: 0000000000000101 
DBG(51152387)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(51152387)> CPU DETAIL: Write 1218: 0000000000000101 
DBG(51152389)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152390)> CPU DETAIL: M4: 0006 
DBG(51152391)> CPU DETAIL: M6: 0017 
DBG(51152392)> CPU DETAIL: M8: 0000 
DBG(51152395)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152396)> CPU DETAIL: M4: 0007 
DBG(51152399)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(51152400)> CPU DETAIL: Read R 1204: 0000000000000010 
DBG(51152401)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(51152402)> CPU DETAIL: Result: 0000000000000017 
DBG(51152403)> CPU DETAIL: Write 1204: 0000000000000017 
DBG(51152405)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(51152406)> CPU DETAIL: Read R 1211: 0000000000000001 
DBG(51152407)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152408)> CPU DETAIL: Result: 0000000000000002 
DBG(51152409)> CPU DETAIL: Write 1211: 0000000000000002 
DBG(51152411)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(51152412)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152413)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(51152415)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(51152416)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152417)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(51152419)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(51152420)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152421)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(51152423)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(51152424)> CPU DETAIL: Read R 1212: 0130004444151113 
DBG(51152425)> CPU DETAIL: Write 1206: 0130004444151113 
DBG(51152427)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(51152428)> CPU DETAIL: Read R 1213: 0000000242009990 
DBG(51152429)> CPU DETAIL: Write 1207: 0000000242009990 
DBG(51152431)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(51152432)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(51152433)> CPU DETAIL: Write 1208: 0000000000000101 
DBG(51152435)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(51152436)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(51152437)> CPU DETAIL: Word Shift 12 digits left: REG1: 0002000000000000 
DBG(51152438)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(51152440)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(51152441)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(51152442)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(51152443)> CPU DETAIL: Transfer to T 
DBG(51152445)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152446)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152447)> CPU DETAIL: Result: 0060000000000052 
DBG(51152448)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(51152450)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152451)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(51152452)> CPU DETAIL: Write 0001: 0002000000000000 
DBG(51152454)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152455)> CPU DETAIL: Read R 1206: 0130004444151113 
DBG(51152456)> CPU DETAIL: Write 0002: 0130004444151113 
DBG(51152458)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152459)> CPU DETAIL: Read R 1207: 0000000242009990 
DBG(51152460)> CPU DETAIL: Write 0003: 0000000242009990 
DBG(51152462)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152463)> CPU DETAIL: Read R 1208: 0000000000000101 
DBG(51152464)> CPU DETAIL: Write 0004: 0000000000000101 
DBG(51152466)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152467)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152468)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152470)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152471)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152473)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152474)> CPU DETAIL: Reset condition present 
DBG(51152474)> same as above (3 times)
DBG(51152474)> CPU DETAIL: Transfer to T 
DBG(51152476)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152477)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152477)> MT CMD: Tape unit 2: init write
DBG(51152477)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152477)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152477)> MT EXP: CRT 0001 to Tape: 0002000000000000 
DBG(51152477)> MT EXP: CRT 0002 to Tape: 0130004444151113 
DBG(51152477)> MT EXP: CRT 0003 to Tape: 0000000242009990 
DBG(51152477)> MT EXP: CRT 0004 to Tape: 0000000000000101 
DBG(51152477)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152477)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152477)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.03% of medium (5.14 inches)
DBG(51152480)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152481)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152482)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152483)> CPU DETAIL: Transfer to T 
DBG(51152485)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152486)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152487)> CPU DETAIL: Result: 0060000000000094 
DBG(51152488)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152490)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152491)> CPU DETAIL: Condition not present 
DBG(51152493)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152494)> CPU DETAIL: Transfer to T 
DBG(51152496)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152497)> CPU DETAIL: Transfer to T 
DBG(51152499)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(51152500)> CPU DETAIL: Transfer to T 
DBG(51152502)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(51152503)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(51152504)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(51152505)> CPU DETAIL: Result: 0000000000000100 
DBG(51152506)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(51152507)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(51152509)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(51152510)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152511)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(51152514)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(51152515)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(51152515)> CPU DETAIL: Read R 1018: 0001000241000000 
DBG(51152516)> CPU DETAIL: Write 1206: 0001000241000000 
DBG(51152518)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(51152519)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(51152519)> CPU DETAIL: Read R 1019: 0204444000000335 
DBG(51152520)> CPU DETAIL: Write 1207: 0204444000000335 
DBG(51152522)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(51152523)> CPU DETAIL: M6 Address Modifier: 0017 
DBG(51152523)> CPU DETAIL: Read R 1020: 0204458700760279 
DBG(51152524)> CPU DETAIL: Write 1208: 0204458700760279 
DBG(51152526)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(51152527)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(51152528)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(51152529)> CPU DETAIL: Result: 0002000000000100 
DBG(51152530)> CPU DETAIL: Write 1205: 0002000000000100 
DBG(51152532)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(51152533)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(51152534)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(51152535)> CPU DETAIL: Transfer to T 
DBG(51152537)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152538)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152539)> CPU DETAIL: Result: 0060000000000059 
DBG(51152540)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(51152542)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152543)> CPU DETAIL: Read R 1205: 0002000000000100 
DBG(51152544)> CPU DETAIL: Write 0001: 0002000000000100 
DBG(51152546)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152547)> CPU DETAIL: Read R 1206: 0001000241000000 
DBG(51152548)> CPU DETAIL: Write 0002: 0001000241000000 
DBG(51152550)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152551)> CPU DETAIL: Read R 1207: 0204444000000335 
DBG(51152552)> CPU DETAIL: Write 0003: 0204444000000335 
DBG(51152554)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152555)> CPU DETAIL: Read R 1208: 0204458700760279 
DBG(51152556)> CPU DETAIL: Write 0004: 0204458700760279 
DBG(51152558)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152559)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152560)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152562)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152563)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152565)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152566)> CPU DETAIL: Reset condition present 
DBG(51152566)> same as above (3 times)
DBG(51152566)> CPU DETAIL: Transfer to T 
DBG(51152568)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152569)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152569)> MT CMD: Tape unit 2: init write
DBG(51152569)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152569)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152569)> MT EXP: CRT 0001 to Tape: 0002000000000100 
DBG(51152569)> MT EXP: CRT 0002 to Tape: 0001000241000000 
DBG(51152569)> MT EXP: CRT 0003 to Tape: 0204444000000335 
DBG(51152569)> MT EXP: CRT 0004 to Tape: 0204458700760279 
DBG(51152569)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152569)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152569)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.04% of medium (6.86 inches)
DBG(51152572)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152573)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152574)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152575)> CPU DETAIL: Transfer to T 
DBG(51152577)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152578)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152579)> CPU DETAIL: Result: 0060000000000094 
DBG(51152580)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152582)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152583)> CPU DETAIL: Condition not present 
DBG(51152585)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152586)> CPU DETAIL: Transfer to T 
DBG(51152588)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152589)> CPU DETAIL: Transfer to T 
DBG(51152591)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(51152592)> CPU DETAIL: Transfer to T 
DBG(51152594)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(51152595)> CPU DETAIL: Read R 1204: 0000000000000017 
DBG(51152596)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(51152597)> CPU DETAIL: Result: 0000000000000020 
DBG(51152598)> CPU DETAIL: Write 1204: 0000000000000020 
DBG(51152600)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(51152601)> CPU DETAIL: M4: 0007 
DBG(51152602)> CPU DETAIL: M6: 0020 
DBG(51152603)> CPU DETAIL: M8: 0000 
DBG(51152606)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(51152607)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(51152608)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152609)> CPU DETAIL: Result: 0000000000000000 
DBG(51152610)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(51152612)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(51152613)> CPU DETAIL: Transfer to T 
DBG(51152615)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(51152616)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152617)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51152618)> CPU DETAIL: Transfer to T 
DBG(51152620)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51152621)> CPU DETAIL: Read R 1205: 0002000000000100 
DBG(51152622)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51152623)> CPU DETAIL: Result: 0002000000000000 
DBG(51152624)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(51152626)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(51152627)> CPU DETAIL: Read R 1218: 0000000000000101 
DBG(51152628)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(51152629)> CPU DETAIL: Result: 0000000000000001 
DBG(51152630)> CPU DETAIL: Write 1210: 0000000000000001 
DBG(51152632)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(51152633)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152634)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(51152637)> CPU CMD: Exec 0066: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get successors aciv 
DBG(51152638)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(51152638)> CPU DETAIL: Read R 1021: 0000000249999990 
DBG(51152639)> CPU DETAIL: Write 1206: 0000000249999990 
DBG(51152641)> CPU CMD: Exec 0067: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(51152642)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(51152642)> CPU DETAIL: Read R 1022: 0000000000033555 
DBG(51152643)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(51152645)> CPU CMD: Exec 0068: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(51152646)> CPU DETAIL: M6 Address Modifier: 0020 
DBG(51152646)> CPU DETAIL: Read R 1023: 0000000000033666 
DBG(51152647)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(51152649)> CPU CMD: Exec 0069: 00 40 1205 1222 1205               ADD      CODE        ONE         CODE        incr num of success 
DBG(51152650)> CPU DETAIL: Read R 1205: 0002000000000000 
DBG(51152651)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152652)> CPU DETAIL: Result: 0002000000000001 
DBG(51152653)> CPU DETAIL: Write 1205: 0002000000000001 
DBG(51152655)> CPU CMD: Exec 0070: 08 60 0070 0000 0082            08 60       *                       PRINT   
DBG(51152656)> CPU DETAIL: Read R 0070: 0860007000000082 
DBG(51152657)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600070 
DBG(51152658)> CPU DETAIL: Transfer to T 
DBG(51152660)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152661)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152662)> CPU DETAIL: Result: 0060000000000071 
DBG(51152663)> CPU DETAIL: Write 0091: 0060000000000071 
DBG(51152665)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152666)> CPU DETAIL: Read R 1205: 0002000000000001 
DBG(51152667)> CPU DETAIL: Write 0001: 0002000000000001 
DBG(51152669)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152670)> CPU DETAIL: Read R 1206: 0000000249999990 
DBG(51152671)> CPU DETAIL: Write 0002: 0000000249999990 
DBG(51152673)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152674)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(51152675)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(51152677)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152678)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(51152679)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(51152681)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152682)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152683)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152685)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152686)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152688)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152689)> CPU DETAIL: Reset condition present 
DBG(51152689)> same as above (3 times)
DBG(51152689)> CPU DETAIL: Transfer to T 
DBG(51152691)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152692)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152692)> MT CMD: Tape unit 2: init write
DBG(51152692)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152692)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152692)> MT EXP: CRT 0001 to Tape: 0002000000000001 
DBG(51152692)> MT EXP: CRT 0002 to Tape: 0000000249999990 
DBG(51152692)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(51152692)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(51152692)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152692)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152692)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.05% of medium (8.57 inches)
DBG(51152695)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152696)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152697)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152698)> CPU DETAIL: Transfer to T 
DBG(51152700)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152701)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152702)> CPU DETAIL: Result: 0060000000000094 
DBG(51152703)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152705)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152706)> CPU DETAIL: Condition not present 
DBG(51152708)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152709)> CPU DETAIL: Transfer to T 
DBG(51152711)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152712)> CPU DETAIL: Transfer to T 
DBG(51152714)> CPU CMD: Exec 0091: 00 60 0000 0000 0071   LPRTEX      00                                           return to caller   
DBG(51152715)> CPU DETAIL: Transfer to T 
DBG(51152717)> CPU CMD: Exec 0071: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(51152718)> CPU DETAIL: Read R 1204: 0000000000000020 
DBG(51152719)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(51152720)> CPU DETAIL: Result: 0000000000000023 
DBG(51152721)> CPU DETAIL: Write 1204: 0000000000000023 
DBG(51152723)> CPU CMD: Exec 0072: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(51152724)> CPU DETAIL: M4: 0007 
DBG(51152725)> CPU DETAIL: M6: 0023 
DBG(51152726)> CPU DETAIL: M8: 0000 
DBG(51152729)> CPU CMD: Exec 0073: 00 41 1210 1222 1210               SUB      NSUCC       ONE         NSUCC   
DBG(51152730)> CPU DETAIL: Read R 1210: 0000000000000001 
DBG(51152731)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152732)> CPU DETAIL: Result: 0000000000000000 
DBG(51152733)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(51152735)> CPU CMD: Exec 0074: 00 60 0000 0000 0065               TR                               LSUCC1   
DBG(51152736)> CPU DETAIL: Transfer to T 
DBG(51152738)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(51152739)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152740)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51152741)> CPU DETAIL: Transfer to T 
DBG(51152743)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51152744)> CPU DETAIL: Read R 1205: 0002000000000001 
DBG(51152745)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51152746)> CPU DETAIL: Result: 0002000000000000 
DBG(51152747)> CPU DETAIL: Write 1205: 0002000000000000 
DBG(51152749)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(51152750)> CPU DETAIL: Transfer to T 
DBG(51152752)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(51152753)> CPU DETAIL: Read R 1203: 0000000000000033 
DBG(51152754)> CPU DETAIL: Read S 1204: 0000000000000023 
DBG(51152755)> CPU DETAIL: Result: 0000000000000010 
DBG(51152758)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(51152759)> CPU DETAIL: REG1: 0000000000000010
DBG(51152759)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(51152761)> CPU CMD: Exec 0036: 96 60 1204 0000 0000   LRR1     96 TR       NW-INBUF                            Shift num words rea 
DBG(51152762)> CPU DETAIL: Read R 1204: 0000000000000023 
DBG(51152763)> CPU DETAIL: Word Shift 4 digits left: REG1: 0000000000230000 
DBG(51152766)> CPU CMD: Exec 0037: 00 40 1236 0000 0038               ADD      SETM-OP                 LRR2        set instr to ...   
DBG(51152767)> CPU DETAIL: Read R 1236: 0057000000000000 
DBG(51152768)> CPU DETAIL: Result: 0057000000230000 
DBG(51152769)> CPU DETAIL: Write 0038: 0057000000230000 
DBG(51152771)> CPU CMD: Exec 0038: 00 57 0000 0023 0000   LRR2        00       0000        0000        0000        ... clear modif and 
DBG(51152772)> CPU DETAIL: Clear M4
DBG(51152772)> CPU DETAIL: M4: 0000 
DBG(51152773)> CPU DETAIL: Clear M6
DBG(51152773)> CPU DETAIL: M6: 0023 
DBG(51152774)> CPU DETAIL: Clear M8
DBG(51152774)> CPU DETAIL: M8: 0000 
DBG(51152777)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152778)> CPU DETAIL: M6 Address Modifier: 0023 
DBG(51152778)> CPU DETAIL: Read R 1024: 0100004444151113 
DBG(51152779)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(51152779)> CPU DETAIL: Write 1212: 0100004444151113 
DBG(51152781)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152782)> CPU DETAIL: M4: 0000 
DBG(51152783)> CPU DETAIL: M6: 0024 
DBG(51152784)> CPU DETAIL: M8: 0000 
DBG(51152787)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152788)> CPU DETAIL: M4: 0001 
DBG(51152789)> CPU DETAIL: Transfer to T 
DBG(51152791)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152792)> CPU DETAIL: M6 Address Modifier: 0024 
DBG(51152792)> CPU DETAIL: Read R 1025: 0000000249999990 
DBG(51152793)> CPU DETAIL: M4 Address Modifier: 0001 
DBG(51152793)> CPU DETAIL: Write 1213: 0000000249999990 
DBG(51152795)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152796)> CPU DETAIL: M4: 0001 
DBG(51152797)> CPU DETAIL: M6: 0025 
DBG(51152798)> CPU DETAIL: M8: 0000 
DBG(51152801)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152802)> CPU DETAIL: M4: 0002 
DBG(51152803)> CPU DETAIL: Transfer to T 
DBG(51152805)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152806)> CPU DETAIL: M6 Address Modifier: 0025 
DBG(51152806)> CPU DETAIL: Read R 1026: 0204444000000671 
DBG(51152807)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(51152807)> CPU DETAIL: Write 1214: 0204444000000671 
DBG(51152809)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152810)> CPU DETAIL: M4: 0002 
DBG(51152811)> CPU DETAIL: M6: 0026 
DBG(51152812)> CPU DETAIL: M8: 0000 
DBG(51152815)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152816)> CPU DETAIL: M4: 0003 
DBG(51152817)> CPU DETAIL: Transfer to T 
DBG(51152819)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152820)> CPU DETAIL: M6 Address Modifier: 0026 
DBG(51152820)> CPU DETAIL: Read R 1027: 0204458700760615 
DBG(51152821)> CPU DETAIL: M4 Address Modifier: 0003 
DBG(51152821)> CPU DETAIL: Write 1215: 0204458700760615 
DBG(51152823)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152824)> CPU DETAIL: M4: 0003 
DBG(51152825)> CPU DETAIL: M6: 0027 
DBG(51152826)> CPU DETAIL: M8: 0000 
DBG(51152829)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152830)> CPU DETAIL: M4: 0004 
DBG(51152831)> CPU DETAIL: Transfer to T 
DBG(51152833)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152834)> CPU DETAIL: M6 Address Modifier: 0027 
DBG(51152834)> CPU DETAIL: Read R 1028: 1100000000000000 
DBG(51152835)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(51152835)> CPU DETAIL: Write 1216: 1100000000000000 
DBG(51152837)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152838)> CPU DETAIL: M4: 0004 
DBG(51152839)> CPU DETAIL: M6: 0028 
DBG(51152840)> CPU DETAIL: M8: 0000 
DBG(51152843)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152844)> CPU DETAIL: M4: 0005 
DBG(51152845)> CPU DETAIL: Transfer to T 
DBG(51152847)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152848)> CPU DETAIL: M6 Address Modifier: 0028 
DBG(51152848)> CPU DETAIL: Read R 1029: 0000000000000000 
DBG(51152849)> CPU DETAIL: M4 Address Modifier: 0005 
DBG(51152849)> CPU DETAIL: Write 1217: 0000000000000000 
DBG(51152851)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152852)> CPU DETAIL: M4: 0005 
DBG(51152853)> CPU DETAIL: M6: 0029 
DBG(51152854)> CPU DETAIL: M8: 0000 
DBG(51152857)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152858)> CPU DETAIL: M4: 0006 
DBG(51152859)> CPU DETAIL: Transfer to T 
DBG(51152861)> CPU CMD: Exec 0039: 00 60 7001 5212 0000   LRR3        TR       INBUF   +M6 W1      +M4             copy from input tra 
DBG(51152862)> CPU DETAIL: M6 Address Modifier: 0029 
DBG(51152862)> CPU DETAIL: Read R 1030: 0000000000000100 
DBG(51152863)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(51152863)> CPU DETAIL: Write 1218: 0000000000000100 
DBG(51152865)> CPU CMD: Exec 0040: 00 50 0000 0001 0000               50       0000        0001        0000        ... incr M6   
DBG(51152866)> CPU DETAIL: M4: 0006 
DBG(51152867)> CPU DETAIL: M6: 0030 
DBG(51152868)> CPU DETAIL: M8: 0000 
DBG(51152871)> CPU CMD: Exec 0041: 00 58 0001 0007 0039               58       0001        0007        LRR3        ... incr M4, loop   
DBG(51152872)> CPU DETAIL: M4: 0007 
DBG(51152875)> CPU CMD: Exec 0042: 00 40 1204 1224 1204               ADD      NW-INBUF    N7          NW-INBUF    Number of words rea 
DBG(51152876)> CPU DETAIL: Read R 1204: 0000000000000023 
DBG(51152877)> CPU DETAIL: Read S 1224: 0000000000000007 
DBG(51152878)> CPU DETAIL: Result: 0000000000000030 
DBG(51152879)> CPU DETAIL: Write 1204: 0000000000000030 
DBG(51152881)> CPU CMD: Exec 0043: 00 40 1211 1222 1211               ADD      EVCOUNT     ONE         EVCOUNT     incr total count of 
DBG(51152882)> CPU DETAIL: Read R 1211: 0000000000000002 
DBG(51152883)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51152884)> CPU DETAIL: Result: 0000000000000003 
DBG(51152885)> CPU DETAIL: Write 1211: 0000000000000003 
DBG(51152887)> CPU CMD: Exec 0044: 00 60 1221 1206 0000               TR       ZERO        CODE1   
DBG(51152888)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152889)> CPU DETAIL: Write 1206: 0000000000000000 
DBG(51152891)> CPU CMD: Exec 0045: 00 60 1221 1207 0000               TR       ZERO        CODE2   
DBG(51152892)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152893)> CPU DETAIL: Write 1207: 0000000000000000 
DBG(51152895)> CPU CMD: Exec 0046: 00 60 1221 1208 0000               TR       ZERO        CODE3   
DBG(51152896)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152897)> CPU DETAIL: Write 1208: 0000000000000000 
DBG(51152899)> CPU CMD: Exec 0047: 00 60 1212 1206 0000               TR       W1          CODE1                   first word of event 
DBG(51152900)> CPU DETAIL: Read R 1212: 0100004444151113 
DBG(51152901)> CPU DETAIL: Write 1206: 0100004444151113 
DBG(51152903)> CPU CMD: Exec 0048: 00 60 1213 1207 0000               TR       W2          CODE2                                       
DBG(51152904)> CPU DETAIL: Read R 1213: 0000000249999990 
DBG(51152905)> CPU DETAIL: Write 1207: 0000000249999990 
DBG(51152907)> CPU CMD: Exec 0049: 00 60 1218 1208 0000               TR       W7          CODE3                                       
DBG(51152908)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(51152909)> CPU DETAIL: Write 1208: 0000000000000100 
DBG(51152911)> CPU CMD: Exec 0050: 88 60 1211 1205 0000            88 TR       EVCOUNT     CODE                    number of event     
DBG(51152912)> CPU DETAIL: Read R 1211: 0000000000000003 
DBG(51152913)> CPU DETAIL: Word Shift 12 digits left: REG1: 0003000000000000 
DBG(51152914)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(51152916)> CPU CMD: Exec 0051: 08 60 0051 0000 0082            08 60       *                       PRINT   
DBG(51152917)> CPU DETAIL: Read R 0051: 0860005100000082 
DBG(51152918)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600051 
DBG(51152919)> CPU DETAIL: Transfer to T 
DBG(51152921)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51152922)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152923)> CPU DETAIL: Result: 0060000000000052 
DBG(51152924)> CPU DETAIL: Write 0091: 0060000000000052 
DBG(51152926)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51152927)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(51152928)> CPU DETAIL: Write 0001: 0003000000000000 
DBG(51152930)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51152931)> CPU DETAIL: Read R 1206: 0100004444151113 
DBG(51152932)> CPU DETAIL: Write 0002: 0100004444151113 
DBG(51152934)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51152935)> CPU DETAIL: Read R 1207: 0000000249999990 
DBG(51152936)> CPU DETAIL: Write 0003: 0000000249999990 
DBG(51152938)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51152939)> CPU DETAIL: Read R 1208: 0000000000000100 
DBG(51152940)> CPU DETAIL: Write 0004: 0000000000000100 
DBG(51152942)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51152943)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51152944)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51152946)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51152947)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51152949)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51152950)> CPU DETAIL: Reset condition present 
DBG(51152950)> same as above (3 times)
DBG(51152950)> CPU DETAIL: Transfer to T 
DBG(51152952)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51152953)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51152953)> MT CMD: Tape unit 2: init write
DBG(51152953)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51152953)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51152953)> MT EXP: CRT 0001 to Tape: 0003000000000000 
DBG(51152953)> MT EXP: CRT 0002 to Tape: 0100004444151113 
DBG(51152953)> MT EXP: CRT 0003 to Tape: 0000000249999990 
DBG(51152953)> MT EXP: CRT 0004 to Tape: 0000000000000100 
DBG(51152953)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51152953)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51152953)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.06% of medium (10.29 inches)
DBG(51152956)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51152957)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51152958)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51152959)> CPU DETAIL: Transfer to T 
DBG(51152961)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51152962)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51152963)> CPU DETAIL: Result: 0060000000000094 
DBG(51152964)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51152966)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51152967)> CPU DETAIL: Condition not present 
DBG(51152969)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51152970)> CPU DETAIL: Transfer to T 
DBG(51152972)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51152973)> CPU DETAIL: Transfer to T 
DBG(51152975)> CPU CMD: Exec 0091: 00 60 0000 0000 0052   LPRTEX      00                                           return to caller   
DBG(51152976)> CPU DETAIL: Transfer to T 
DBG(51152978)> CPU CMD: Exec 0052: 02 42 1218 1232 1209            02 MASK     W7          AA-FIELD    NPRED       get number of prede 
DBG(51152979)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(51152980)> CPU DETAIL: Read S 1232: 0000000000001100 
DBG(51152981)> CPU DETAIL: Result: 0000000000000100 
DBG(51152982)> CPU DETAIL: Word Shift 2 digits right: REG1: 0000000000000001 
DBG(51152983)> CPU DETAIL: Write 1209: 0000000000000001 
DBG(51152985)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(51152986)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51152987)> CPU DETAIL: Diff: REG1: 0000000000000001
DBG(51152990)> CPU CMD: Exec 0054: 00 60 7001 1206 0000               TR       INBUF   +M6 CODE1                   get predecessor aci 
DBG(51152991)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(51152991)> CPU DETAIL: Read R 1031: 0001000242009990 
DBG(51152992)> CPU DETAIL: Write 1206: 0001000242009990 
DBG(51152994)> CPU CMD: Exec 0055: 00 60 7002 1207 0000               TR       INBUF2  +M6 CODE2   
DBG(51152995)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(51152995)> CPU DETAIL: Read R 1032: 0000000000033555 
DBG(51152996)> CPU DETAIL: Write 1207: 0000000000033555 
DBG(51152998)> CPU CMD: Exec 0056: 00 60 7003 1208 0000               TR       INBUF3  +M6 CODE3   
DBG(51152999)> CPU DETAIL: M6 Address Modifier: 0030 
DBG(51152999)> CPU DETAIL: Read R 1033: 0000000000033666 
DBG(51153000)> CPU DETAIL: Write 1208: 0000000000033666 
DBG(51153002)> CPU CMD: Exec 0057: 00 40 1205 1225 1205               ADD      CODE        N100        CODE        incr num of predece 
DBG(51153003)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(51153004)> CPU DETAIL: Read S 1225: 0000000000000100 
DBG(51153005)> CPU DETAIL: Result: 0003000000000100 
DBG(51153006)> CPU DETAIL: Write 1205: 0003000000000100 
DBG(51153008)> CPU CMD: Exec 0058: 08 60 0058 0000 0082            08 60       *                       PRINT   
DBG(51153009)> CPU DETAIL: Read R 0058: 0860005800000082 
DBG(51153010)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600058 
DBG(51153011)> CPU DETAIL: Transfer to T 
DBG(51153013)> CPU CMD: Exec 0082: 00 40 1996 0000 0091   PRINT       ADD      MK-TR60                 LPRTEX      set and save exit t 
DBG(51153014)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51153015)> CPU DETAIL: Result: 0060000000000059 
DBG(51153016)> CPU DETAIL: Write 0091: 0060000000000059 
DBG(51153018)> CPU CMD: Exec 0083: 00 80 1205 0001 0000               80       CODE        0001   
DBG(51153019)> CPU DETAIL: Read R 1205: 0003000000000100 
DBG(51153020)> CPU DETAIL: Write 0001: 0003000000000100 
DBG(51153022)> CPU CMD: Exec 0084: 00 80 1206 0002 0000               80       CODE1       0002   
DBG(51153023)> CPU DETAIL: Read R 1206: 0001000242009990 
DBG(51153024)> CPU DETAIL: Write 0002: 0001000242009990 
DBG(51153026)> CPU CMD: Exec 0085: 00 80 1207 0003 0000               80       CODE2       0003   
DBG(51153027)> CPU DETAIL: Read R 1207: 0000000000033555 
DBG(51153028)> CPU DETAIL: Write 0003: 0000000000033555 
DBG(51153030)> CPU CMD: Exec 0086: 00 80 1208 0004 0000               80       CODE3       0004   
DBG(51153031)> CPU DETAIL: Read R 1208: 0000000000033666 
DBG(51153032)> CPU DETAIL: Write 0004: 0000000000033666 
DBG(51153034)> CPU CMD: Exec 0087: 00 80 1221 0005 0000               80       ZERO        0005   
DBG(51153035)> CPU DETAIL: Read R 1221: 0000000000000000 
DBG(51153036)> CPU DETAIL: Write 0005: 0000000000000000 
DBG(51153038)> CPU CMD: Exec 0088: 00 80 0000 0006 0000               80                   0006   
DBG(51153039)> CPU DETAIL: Write 0006: 0000000000000000 
DBG(51153041)> CPU CMD: Exec 0089: 00 74 0000 0000 0092               74                               SAVE-TAP    if switch 74 set to 
DBG(51153042)> CPU DETAIL: Reset condition present 
DBG(51153042)> same as above (3 times)
DBG(51153042)> CPU DETAIL: Transfer to T 
DBG(51153044)> CPU CMD: Exec 0092: 02 91 0001 0004 0000   SAVE-TAP 02 91       0001        0004                    write to tape   
DBG(51153045)> CPU DETAIL: Tape operation on MT2, Addr 0001->0004, Block Number 0000
DBG(51153045)> MT CMD: Tape unit 2: init write
DBG(51153045)> MT EXP: Write from 0001 to 0004 as Block number 0000
DBG(51153045)> MT EXP: Start Of Block: 02 91 0001 0004 0000
DBG(51153045)> MT EXP: CRT 0001 to Tape: 0003000000000100 
DBG(51153045)> MT EXP: CRT 0002 to Tape: 0001000242009990 
DBG(51153045)> MT EXP: CRT 0003 to Tape: 0000000000033555 
DBG(51153045)> MT EXP: CRT 0004 to Tape: 0000000000033666 
DBG(51153045)> MT EXP: End Of Block: 02 91 0001 0004 0000 (4 words)
DBG(51153045)> MT DETAIL: Write block (110 chars, used 1.72 inches, needs 9 msec) to tape 2
DBG(51153045)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.07% of medium (12.01 inches)
DBG(51153048)> CPU CMD: Exec 0093: 08 60 0093 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51153049)> CPU DETAIL: Read R 0093: 0860009300001992 
DBG(51153050)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600093 
DBG(51153051)> CPU DETAIL: Transfer to T 
DBG(51153053)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51153054)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51153055)> CPU DETAIL: Result: 0060000000000094 
DBG(51153056)> CPU DETAIL: Write 1994: 0060000000000094 
DBG(51153058)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51153059)> CPU DETAIL: Condition not present 
DBG(51153061)> CPU CMD: Exec 1994: 00 60 0000 0000 0094   LCHKEX      00                                           if no tape chek, re 
DBG(51153062)> CPU DETAIL: Transfer to T 
DBG(51153064)> CPU CMD: Exec 0094: 00 60 0000 0000 0091               TR                               LPRTEX         
DBG(51153065)> CPU DETAIL: Transfer to T 
DBG(51153067)> CPU CMD: Exec 0091: 00 60 0000 0000 0059   LPRTEX      00                                           return to caller   
DBG(51153068)> CPU DETAIL: Transfer to T 
DBG(51153070)> CPU CMD: Exec 0059: 00 40 1204 1223 1204               ADD      NW-INBUF    N3          NW-INBUF    Number of words rea 
DBG(51153071)> CPU DETAIL: Read R 1204: 0000000000000030 
DBG(51153072)> CPU DETAIL: Read S 1223: 0000000000000003 
DBG(51153073)> CPU DETAIL: Result: 0000000000000033 
DBG(51153074)> CPU DETAIL: Write 1204: 0000000000000033 
DBG(51153076)> CPU CMD: Exec 0060: 00 50 0000 0003 0000               50       0000        0003        0000        incr M6 += 3   
DBG(51153077)> CPU DETAIL: M4: 0007 
DBG(51153078)> CPU DETAIL: M6: 0033 
DBG(51153079)> CPU DETAIL: M8: 0000 
DBG(51153082)> CPU CMD: Exec 0061: 00 41 1209 1222 1209               SUB      NPRED       ONE         NPRED   
DBG(51153083)> CPU DETAIL: Read R 1209: 0000000000000001 
DBG(51153084)> CPU DETAIL: Read S 1222: 0000000000000001 
DBG(51153085)> CPU DETAIL: Result: 0000000000000000 
DBG(51153086)> CPU DETAIL: Write 1209: 0000000000000000 
DBG(51153088)> CPU CMD: Exec 0062: 00 60 0000 0000 0053               TR                               LPRED1   
DBG(51153089)> CPU DETAIL: Transfer to T 
DBG(51153091)> CPU CMD: Exec 0053: 00 70 0000 1221 0063   LPRED1      TR EQ                ZERO        LPRED9      if no predecessors, 
DBG(51153092)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51153093)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51153094)> CPU DETAIL: Transfer to T 
DBG(51153096)> CPU CMD: Exec 0063: 00 42 1205 1234 1205   LPRED9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51153097)> CPU DETAIL: Read R 1205: 0003000000000100 
DBG(51153098)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51153099)> CPU DETAIL: Result: 0003000000000000 
DBG(51153100)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(51153102)> CPU CMD: Exec 0064: 00 42 1218 1233 1210               MASK     W7          BB-FIELD    NSUCC       get number of succe 
DBG(51153103)> CPU DETAIL: Read R 1218: 0000000000000100 
DBG(51153104)> CPU DETAIL: Read S 1233: 0000000000000011 
DBG(51153105)> CPU DETAIL: Result: 0000000000000000 
DBG(51153106)> CPU DETAIL: Write 1210: 0000000000000000 
DBG(51153108)> CPU CMD: Exec 0065: 00 70 0000 1221 0075   LSUCC1      TR EQ                ZERO        LSUCC9      if no successors, c 
DBG(51153109)> CPU DETAIL: Read S 1221: 0000000000000000 
DBG(51153110)> CPU DETAIL: Diff: REG1: 0000000000000000
DBG(51153111)> CPU DETAIL: Transfer to T 
DBG(51153113)> CPU CMD: Exec 0075: 00 42 1205 1234 1205   LSUCC9      MASK     CODE        NN-FIELD    CODE        clear code: nnnn 0. 
DBG(51153114)> CPU DETAIL: Read R 1205: 0003000000000000 
DBG(51153115)> CPU DETAIL: Read S 1234: 1111000000000000 
DBG(51153116)> CPU DETAIL: Result: 0003000000000000 
DBG(51153117)> CPU DETAIL: Write 1205: 0003000000000000 
DBG(51153119)> CPU CMD: Exec 0076: 00 60 0000 0000 0033               TR                               RR-INBUF   
DBG(51153120)> CPU DETAIL: Transfer to T 
DBG(51153122)> CPU CMD: Exec 0033: 00 41 1203 1204 0000   RR-INBUF    SUB      BL-INBUF    NW-INBUF                REG1=words left to  
DBG(51153123)> CPU DETAIL: Read R 1203: 0000000000000033 
DBG(51153124)> CPU DETAIL: Read S 1204: 0000000000000033 
DBG(51153125)> CPU DETAIL: Result: 0000000000000000 
DBG(51153128)> CPU CMD: Exec 0034: 00 63 0036 0020 0000               TR SGN   LRR1        RB-INBUF                If no words left, g 
DBG(51153129)> CPU DETAIL: REG1: 0000000000000000
DBG(51153129)> CPU DETAIL: Transfer to S (REG1=0)
DBG(51153131)> CPU CMD: Exec 0020: 01 94 1001 0000 0000   RB-INBUF 01 94       INBUF       0000                    read input block bu 
DBG(51153132)> CPU DETAIL: Tape operation on MT1, Addr 1001->0000, Block Number 0000
DBG(51153132)> MT DATA: Tape unit 1: init read
DBG(51153132)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 1
DBG(51153132)> MT DETAIL: Tape record contents: D*0191000000000000CD
DBG(51153132)> MT EXP: End Of File mark sensed: 0191000000000000 
DBG(51153132)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.04% of medium (5.89 inches)
DBG(51153135)> CPU CMD: Exec 0021: 00 68 0021 0000 1991               68       *                       REREAD      if tape check Call  
DBG(51153136)> CPU DETAIL: Condition not present 
DBG(51153138)> CPU CMD: Exec 0022: 00 67 0000 0000 0080               67                               END         if end of file tran 
DBG(51153139)> CPU DETAIL: Reset condition present 
DBG(51153139)> CPU DETAIL: Transfer to T 
DBG(51153141)> CPU CMD: Exec 0080: 00 74 0000 0000 0077   END         74                               END-TAP     if switch 74 set to 
DBG(51153142)> CPU DETAIL: Reset condition present 
DBG(51153142)> same as above (3 times)
DBG(51153142)> CPU DETAIL: Transfer to T 
DBG(51153144)> CPU CMD: Exec 0077: 02 91 0000 0000 0000   END-TAP  02 91       0000        0000                    write end of tape   
DBG(51153145)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(51153145)> MT CMD: Tape unit 2: init write
DBG(51153145)> MT EXP: End Of File mark: 02d 02 0091 0000 0000
DBG(51153145)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 2
DBG(51153145)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.08% of medium (13.54 inches)
DBG(51153148)> CPU CMD: Exec 0078: 08 60 0078 0000 1992            08 60       *                       CHKWRT      Call check Write   
DBG(51153149)> CPU DETAIL: Read R 0078: 0860007800001992 
DBG(51153150)> CPU DETAIL: Word Shift 8 digits right: REG1: 0000000008600078 
DBG(51153151)> CPU DETAIL: Transfer to T 
DBG(51153153)> CPU CMD: Exec 1992: 00 40 1996 0000 1994   CHKWRT      ADD      MK-TR60                 LCHKEX      set and save exit t 
DBG(51153154)> CPU DETAIL: Read R 1996: 0059999991400001 
DBG(51153155)> CPU DETAIL: Result: 0060000000000079 
DBG(51153156)> CPU DETAIL: Write 1994: 0060000000000079 
DBG(51153158)> CPU CMD: Exec 1993: 00 68 0000 0000 1995               68                               LCHK1       if tape check goto  
DBG(51153159)> CPU DETAIL: Condition not present 
DBG(51153161)> CPU CMD: Exec 1994: 00 60 0000 0000 0079   LCHKEX      00                                           if no tape chek, re 
DBG(51153162)> CPU DETAIL: Transfer to T 
DBG(51153164)> CPU CMD: Exec 0079: 00 60 1235 0001 0001               TR       STOP-OP     0001        0001        set stop in 0001, t 
DBG(51153165)> CPU DETAIL: Read R 1235: 0061000000000000 
DBG(51153166)> CPU DETAIL: Transfer to T 
DBG(51153166)> CPU DETAIL: Write 0001: 0061000000000000 
DBG(51153168)> CPU CMD: Exec 0001: 00 61 0000 0000 0000  
DBG(51153169)> CPU DETAIL: Programmed STOP 
DBG(51153169)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(51399548)> CPU DETAIL: End Wait for TAPE animation (61 msec)
DBG(51399548)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(51399548)> CPU DETAIL: Measured speed: 4942701 Ticks per second
DBG(51399548)> CPU DETAIL: Measured speed: Clock at 4.94 MHz
DBG(51399548)> CPU DETAIL: Speed is x4.9 relative to original hardware
DBG(51399548)> CPU DETAIL: Instructions executed: 311
DBG(51399548)> CPU DETAIL: Measured speed: 4038 Instructions per second (IPS) achieved
DBG(51399548)> CPU DETAIL: Run elapsed 77 msec

Program STOP, IC: 00001 (00 61 0000 0000 0000)
DBG(51399548)> MT EXP: Tape unit 0: attach file mt_EV_prt.tap
DBG(51399548)> CTC DETAIL: Punch Card:            0001000000000000010000485515111100009902410000032221444455660001
DBG(51399548)> CTC DETAIL: Punch Card:            0001000000000001000100024200999002048550000000000101429330900241
DBG(51399548)> CTC DETAIL: Punch Card:            0002000000000000013000444415111300000002420099900000000000000101
DBG(51399548)> CTC DETAIL: Punch Card:            0002000000000100000100024100000002044440000003350204458700760279
DBG(51399548)> CTC DETAIL: Punch Card:            0002000000000001000000024999999000000000000335550000000000033666
DBG(51399548)> CTC DETAIL: Punch Card:            0003000000000000010000444415111300000002499999900000000000000100
DBG(51399548)> CTC DETAIL: Punch Card:            0003000000000100000100024200999000000000000335550000000000033666

Exec Ok
******************************


Exec Build PERT Ok
******************************


*** Run pert with        card_activity_input.txt     (hols 112 events)
***                      date 01 (month) 13 (day) 58 (year)
