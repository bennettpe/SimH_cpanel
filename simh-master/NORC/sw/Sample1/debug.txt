Debug output to "debug.txt" at Sun Feb 07 21:40:47 2021
IBM NORC simulator V4.0-0 Current        git commit id: d0022e93

******************************
Exec Sample 1

loaded sample1_prog.txt from 0100 to 0221 address
DBG(0)> CPU DETAIL: Measured speed: init because start of run
DBG(2)> CPU CMD: Exec 0100: 00 60 0220 0211 0000   R0 to 0211   
DBG(3)> CPU DETAIL: Read R 0220: 0001000000000000 
DBG(4)> CPU DETAIL: Write 0211: 0001000000000000 
DBG(6)> CPU CMD: Exec 0101: 00 60 0221 0000 0200   x to register, go to 0200   
DBG(7)> CPU DETAIL: Read R 0221: 1200000000000002 
DBG(8)> CPU DETAIL: Transfer to T 
DBG(10)> CPU CMD: Exec 0200: 50 24 0000 0000 0000   x . x = x^2   
DBG(11)> CPU DETAIL: Float: REG1: 00 0 2 0000 0000 0000 (2.000000)
DBG(11)> CPU DETAIL:        REG2: 00 0 2 0000 0000 0000 (2.000000)
DBG(12)> CPU DETAIL: Result: 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(13)> CPU DETAIL: Shift : 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(16)> CPU CMD: Exec 0201: 50 20 0214 0000 0213   1 + x^2 = N   
DBG(17)> CPU DETAIL: Read R 0214: 1200000000000001 
DBG(18)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(18)> CPU DETAIL:        REG2: 00 0 4 0000 0000 0000 (4.000000)
DBG(19)> CPU DETAIL: Result: 00 0 5 0000 0000 0000 00000000 00000000 (5.000000)
DBG(20)> CPU DETAIL: Shift : 00 0 5 0000 0000 0000 00000000 00000000 (5.000000)
DBG(21)> CPU DETAIL: Write 0213: 0005000000000000 
DBG(23)> CPU CMD: Exec 0202: 50 26 0213 0211 0000   N/Ri   
DBG(24)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(25)> CPU DETAIL: Read S 0211: 0001000000000000 
DBG(26)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(26)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(27)> CPU DETAIL: Result: 00 0 5 0000 0000 0000 00000000 00000000 (5.000000)
DBG(28)> CPU DETAIL: Shift : 00 0 5 0000 0000 0000 00000000 00000000 (5.000000)
DBG(31)> CPU CMD: Exec 0203: 50 20 0211 0000 0000   Ri + N/Ri   
DBG(32)> CPU DETAIL: Read R 0211: 0001000000000000 
DBG(33)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(33)> CPU DETAIL:        REG2: 00 0 5 0000 0000 0000 (5.000000)
DBG(34)> CPU DETAIL: Result: 00 0 6 0000 0000 0000 00000000 00000000 (6.000000)
DBG(35)> CPU DETAIL: Shift : 00 0 6 0000 0000 0000 00000000 00000000 (6.000000)
DBG(38)> CPU CMD: Exec 0204: 50 24 0215 0000 0212   1/2 (Ri + N/Ri) = R<i+1>   
DBG(39)> CPU DETAIL: Read R 0215: 0000500000000000 
DBG(40)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(40)> CPU DETAIL:        REG2: 00 0 6 0000 0000 0000 (6.000000)
DBG(41)> CPU DETAIL: Result: 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(42)> CPU DETAIL: Shift : 00 0 3 0000 0000 0000 00000000 00000000 (3.000000)
DBG(43)> CPU DETAIL: Write 0212: 0003000000000000 
DBG(45)> CPU CMD: Exec 0205: 50 24 0000 0000 0000   R<i+1> . R<i+1> = R^2<i+1>   
DBG(46)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(46)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(47)> CPU DETAIL: Result: 00 0 9 0000 0000 0000 00000000 00000000 (9.000000)
DBG(48)> CPU DETAIL: Shift : 00 0 9 0000 0000 0000 00000000 00000000 (9.000000)
DBG(51)> CPU CMD: Exec 0206: 50 22 0213 0000 0000   N - R^2<i+1>   
DBG(52)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(53)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(53)> CPU DETAIL:        REG2: 00 0 9 0000 0000 0000 (9.000000)
DBG(54)> CPU DETAIL: Result: 00 1 4 0000 0000 0000 00000000 00000000 (-4.000000)
DBG(55)> CPU DETAIL: Shift : 00 1 4 0000 0000 0000 00000000 00000000 (-4.000000)
DBG(58)> CPU CMD: Exec 0207: 50 28 0000 0216 0000   | N - R^2<i+1> | - | 10^-10 |   
DBG(59)> CPU DETAIL: Read S 0216: 9001000000000000 
DBG(60)> CPU DETAIL: Float: REG1: 00 1 4 0000 0000 0000 (-4.000000)
DBG(60)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(61)> CPU DETAIL: Result: 00 0 3 9999 9999 9900 00000000 00000000 (4.000000)
DBG(62)> CPU DETAIL: Shift : 00 0 3 9999 9999 9900 00000000 00000000 (4.000000)
DBG(65)> CPU CMD: Exec 0208: 00 63 0000 0000 0210   if < 0, go to 0210   
DBG(66)> CPU DETAIL: REG1: 0003999999999900
DBG(66)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(68)> CPU CMD: Exec 0209: 00 60 0212 0211 0202   Replace Ri by R<i+1>, go to 0202   
DBG(69)> CPU DETAIL: Read R 0212: 0003000000000000 
DBG(70)> CPU DETAIL: Transfer to T 
DBG(70)> CPU DETAIL: Write 0211: 0003000000000000 
DBG(72)> CPU CMD: Exec 0202: 50 26 0213 0211 0000   N/Ri   
DBG(73)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(74)> CPU DETAIL: Read S 0211: 0003000000000000 
DBG(75)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(75)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(76)> CPU DETAIL: Result: 00 0 1 6666 6666 6666 66674804 68750000 (1.666667)
DBG(77)> CPU DETAIL: Shift : 00 0 1 6666 6666 6667 66674804 68750000 (1.666667)
DBG(80)> CPU CMD: Exec 0203: 50 20 0211 0000 0000   Ri + N/Ri   
DBG(81)> CPU DETAIL: Read R 0211: 0003000000000000 
DBG(82)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(82)> CPU DETAIL:        REG2: 00 0 1 6666 6666 6667 (1.666667)
DBG(83)> CPU DETAIL: Result: 00 0 4 6666 6666 6667 00000000 00000000 (4.666667)
DBG(84)> CPU DETAIL: Shift : 00 0 4 6666 6666 6667 00000000 00000000 (4.666667)
DBG(87)> CPU CMD: Exec 0204: 50 24 0215 0000 0212   1/2 (Ri + N/Ri) = R<i+1>   
DBG(88)> CPU DETAIL: Read R 0215: 0000500000000000 
DBG(89)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(89)> CPU DETAIL:        REG2: 00 0 4 6666 6666 6667 (4.666667)
DBG(90)> CPU DETAIL: Result: 00 0 2 3333 3333 3333 50000000 00000000 (2.333333)
DBG(91)> CPU DETAIL: Shift : 00 0 2 3333 3333 3333 50000000 00000000 (2.333333)
DBG(92)> CPU DETAIL: Write 0212: 0002333333333333 
DBG(94)> CPU CMD: Exec 0205: 50 24 0000 0000 0000   R<i+1> . R<i+1> = R^2<i+1>   
DBG(95)> CPU DETAIL: Float: REG1: 00 0 2 3333 3333 3333 (2.333333)
DBG(95)> CPU DETAIL:        REG2: 00 0 2 3333 3333 3333 (2.333333)
DBG(96)> CPU DETAIL: Result: 00 0 5 4444 4444 4442 88867187 50000000 (5.444444)
DBG(97)> CPU DETAIL: Shift : 00 0 5 4444 4444 4443 88867187 50000000 (5.444444)
DBG(100)> CPU CMD: Exec 0206: 50 22 0213 0000 0000   N - R^2<i+1>   
DBG(101)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(102)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(102)> CPU DETAIL:        REG2: 00 0 5 4444 4444 4443 (5.444444)
DBG(103)> CPU DETAIL: Result: 00 1 0 4444 4444 4443 00000000 00000000 (-0.444444)
DBG(104)> CPU DETAIL: Shift : 99 1 4 4444 4444 4430 00000000 00000000 (-0.444444)
DBG(107)> CPU CMD: Exec 0207: 50 28 0000 0216 0000   | N - R^2<i+1> | - | 10^-10 |   
DBG(108)> CPU DETAIL: Read S 0216: 9001000000000000 
DBG(109)> CPU DETAIL: Float: REG1: 99 1 4 4444 4444 4430 (-0.444444)
DBG(109)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(110)> CPU DETAIL: Result: 99 0 4 4444 4444 3430 00000000 00000000 (0.444444)
DBG(111)> CPU DETAIL: Shift : 99 0 4 4444 4444 3430 00000000 00000000 (0.444444)
DBG(114)> CPU CMD: Exec 0208: 00 63 0000 0000 0210   if < 0, go to 0210   
DBG(115)> CPU DETAIL: REG1: 9904444444443430
DBG(115)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(117)> CPU CMD: Exec 0209: 00 60 0212 0211 0202   Replace Ri by R<i+1>, go to 0202   
DBG(118)> CPU DETAIL: Read R 0212: 0002333333333333 
DBG(119)> CPU DETAIL: Transfer to T 
DBG(119)> CPU DETAIL: Write 0211: 0002333333333333 
DBG(121)> CPU CMD: Exec 0202: 50 26 0213 0211 0000   N/Ri   
DBG(122)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(123)> CPU DETAIL: Read S 0211: 0002333333333333 
DBG(124)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(124)> CPU DETAIL:        REG2: 00 0 2 3333 3333 3333 (2.333333)
DBG(125)> CPU DETAIL: Result: 00 0 2 1428 5714 2857 44921875 00000000 (2.142857)
DBG(126)> CPU DETAIL: Shift : 00 0 2 1428 5714 2857 44921875 00000000 (2.142857)
DBG(129)> CPU CMD: Exec 0203: 50 20 0211 0000 0000   Ri + N/Ri   
DBG(130)> CPU DETAIL: Read R 0211: 0002333333333333 
DBG(131)> CPU DETAIL: Float: REG1: 00 0 2 3333 3333 3333 (2.333333)
DBG(131)> CPU DETAIL:        REG2: 00 0 2 1428 5714 2857 (2.142857)
DBG(132)> CPU DETAIL: Result: 00 0 4 4761 9047 6190 00000000 00000000 (4.476190)
DBG(133)> CPU DETAIL: Shift : 00 0 4 4761 9047 6190 00000000 00000000 (4.476190)
DBG(136)> CPU CMD: Exec 0204: 50 24 0215 0000 0212   1/2 (Ri + N/Ri) = R<i+1>   
DBG(137)> CPU DETAIL: Read R 0215: 0000500000000000 
DBG(138)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(138)> CPU DETAIL:        REG2: 00 0 4 4761 9047 6190 (4.476190)
DBG(139)> CPU DETAIL: Result: 00 0 2 2380 9523 8095 00000000 00000000 (2.238095)
DBG(140)> CPU DETAIL: Shift : 00 0 2 2380 9523 8095 00000000 00000000 (2.238095)
DBG(141)> CPU DETAIL: Write 0212: 0002238095238095 
DBG(143)> CPU CMD: Exec 0205: 50 24 0000 0000 0000   R<i+1> . R<i+1> = R^2<i+1>   
DBG(144)> CPU DETAIL: Float: REG1: 00 0 2 2380 9523 8095 (2.238095)
DBG(144)> CPU DETAIL:        REG2: 00 0 2 2380 9523 8095 (2.238095)
DBG(145)> CPU DETAIL: Result: 00 0 5 0090 7029 4783 51562500 00000000 (5.009070)
DBG(146)> CPU DETAIL: Shift : 00 0 5 0090 7029 4783 51562500 00000000 (5.009070)
DBG(149)> CPU CMD: Exec 0206: 50 22 0213 0000 0000   N - R^2<i+1>   
DBG(150)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(151)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(151)> CPU DETAIL:        REG2: 00 0 5 0090 7029 4783 (5.009070)
DBG(152)> CPU DETAIL: Result: 00 1 0 0090 7029 4783 00000000 00000000 (-0.009070)
DBG(153)> CPU DETAIL: Shift : 97 1 9 0702 9478 3000 00000000 00000000 (-0.009070)
DBG(156)> CPU CMD: Exec 0207: 50 28 0000 0216 0000   | N - R^2<i+1> | - | 10^-10 |   
DBG(157)> CPU DETAIL: Read S 0216: 9001000000000000 
DBG(158)> CPU DETAIL: Float: REG1: 97 1 9 0702 9478 3000 (-0.009070)
DBG(158)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(159)> CPU DETAIL: Result: 97 0 9 0702 9468 3000 00000000 00000000 (0.009070)
DBG(160)> CPU DETAIL: Shift : 97 0 9 0702 9468 3000 00000000 00000000 (0.009070)
DBG(163)> CPU CMD: Exec 0208: 00 63 0000 0000 0210   if < 0, go to 0210   
DBG(164)> CPU DETAIL: REG1: 9709070294683000
DBG(164)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(166)> CPU CMD: Exec 0209: 00 60 0212 0211 0202   Replace Ri by R<i+1>, go to 0202   
DBG(167)> CPU DETAIL: Read R 0212: 0002238095238095 
DBG(168)> CPU DETAIL: Transfer to T 
DBG(168)> CPU DETAIL: Write 0211: 0002238095238095 
DBG(170)> CPU CMD: Exec 0202: 50 26 0213 0211 0000   N/Ri   
DBG(171)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(172)> CPU DETAIL: Read S 0211: 0002238095238095 
DBG(173)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(173)> CPU DETAIL:        REG2: 00 0 2 2380 9523 8095 (2.238095)
DBG(174)> CPU DETAIL: Result: 00 0 2 2340 4255 3191 72656250 00000000 (2.234043)
DBG(175)> CPU DETAIL: Shift : 00 0 2 2340 4255 3191 72656250 00000000 (2.234043)
DBG(178)> CPU CMD: Exec 0203: 50 20 0211 0000 0000   Ri + N/Ri   
DBG(179)> CPU DETAIL: Read R 0211: 0002238095238095 
DBG(180)> CPU DETAIL: Float: REG1: 00 0 2 2380 9523 8095 (2.238095)
DBG(180)> CPU DETAIL:        REG2: 00 0 2 2340 4255 3191 (2.234043)
DBG(181)> CPU DETAIL: Result: 00 0 4 4721 3779 1286 00000000 00000000 (4.472138)
DBG(182)> CPU DETAIL: Shift : 00 0 4 4721 3779 1286 00000000 00000000 (4.472138)
DBG(185)> CPU CMD: Exec 0204: 50 24 0215 0000 0212   1/2 (Ri + N/Ri) = R<i+1>   
DBG(186)> CPU DETAIL: Read R 0215: 0000500000000000 
DBG(187)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(187)> CPU DETAIL:        REG2: 00 0 4 4721 3779 1286 (4.472138)
DBG(188)> CPU DETAIL: Result: 00 0 2 2360 6889 5643 00000000 00000000 (2.236069)
DBG(189)> CPU DETAIL: Shift : 00 0 2 2360 6889 5643 00000000 00000000 (2.236069)
DBG(190)> CPU DETAIL: Write 0212: 0002236068895643 
DBG(192)> CPU CMD: Exec 0205: 50 24 0000 0000 0000   R<i+1> . R<i+1> = R^2<i+1>   
DBG(193)> CPU DETAIL: Float: REG1: 00 0 2 2360 6889 5643 (2.236069)
DBG(193)> CPU DETAIL:        REG2: 00 0 2 2360 6889 5643 (2.236069)
DBG(194)> CPU DETAIL: Result: 00 0 5 0000 0410 6062 10644531 25000000 (5.000004)
DBG(195)> CPU DETAIL: Shift : 00 0 5 0000 0410 6063 10644531 25000000 (5.000004)
DBG(198)> CPU CMD: Exec 0206: 50 22 0213 0000 0000   N - R^2<i+1>   
DBG(199)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(200)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(200)> CPU DETAIL:        REG2: 00 0 5 0000 0410 6063 (5.000004)
DBG(201)> CPU DETAIL: Result: 00 1 0 0000 0410 6063 00000000 00000000 (-0.000004)
DBG(202)> CPU DETAIL: Shift : 94 1 4 1060 6300 0000 00000000 00000000 (-0.000004)
DBG(205)> CPU CMD: Exec 0207: 50 28 0000 0216 0000   | N - R^2<i+1> | - | 10^-10 |   
DBG(206)> CPU DETAIL: Read S 0216: 9001000000000000 
DBG(207)> CPU DETAIL: Float: REG1: 94 1 4 1060 6300 0000 (-0.000004)
DBG(207)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(208)> CPU DETAIL: Result: 94 0 4 1059 6300 0000 00000000 00000000 (0.000004)
DBG(209)> CPU DETAIL: Shift : 94 0 4 1059 6300 0000 00000000 00000000 (0.000004)
DBG(212)> CPU CMD: Exec 0208: 00 63 0000 0000 0210   if < 0, go to 0210   
DBG(213)> CPU DETAIL: REG1: 9404105963000000
DBG(213)> CPU DETAIL: Transfer to R (REG1>0 because digit14=0)
DBG(215)> CPU CMD: Exec 0209: 00 60 0212 0211 0202   Replace Ri by R<i+1>, go to 0202   
DBG(216)> CPU DETAIL: Read R 0212: 0002236068895643 
DBG(217)> CPU DETAIL: Transfer to T 
DBG(217)> CPU DETAIL: Write 0211: 0002236068895643 
DBG(219)> CPU CMD: Exec 0202: 50 26 0213 0211 0000   N/Ri   
DBG(220)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(221)> CPU DETAIL: Read S 0211: 0002236068895643 
DBG(222)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(222)> CPU DETAIL:        REG2: 00 0 2 2360 6889 5643 (2.236069)
DBG(223)> CPU DETAIL: Result: 00 0 2 2360 6705 9356 95605468 75000000 (2.236067)
DBG(224)> CPU DETAIL: Shift : 00 0 2 2360 6705 9357 95605468 75000000 (2.236067)
DBG(227)> CPU CMD: Exec 0203: 50 20 0211 0000 0000   Ri + N/Ri   
DBG(228)> CPU DETAIL: Read R 0211: 0002236068895643 
DBG(229)> CPU DETAIL: Float: REG1: 00 0 2 2360 6889 5643 (2.236069)
DBG(229)> CPU DETAIL:        REG2: 00 0 2 2360 6705 9357 (2.236067)
DBG(230)> CPU DETAIL: Result: 00 0 4 4721 3595 5000 00000000 00000000 (4.472136)
DBG(231)> CPU DETAIL: Shift : 00 0 4 4721 3595 5000 00000000 00000000 (4.472136)
DBG(234)> CPU CMD: Exec 0204: 50 24 0215 0000 0212   1/2 (Ri + N/Ri) = R<i+1>   
DBG(235)> CPU DETAIL: Read R 0215: 0000500000000000 
DBG(236)> CPU DETAIL: Float: REG1: 99 0 5 0000 0000 0000 (0.500000)
DBG(236)> CPU DETAIL:        REG2: 00 0 4 4721 3595 5000 (4.472136)
DBG(237)> CPU DETAIL: Result: 00 0 2 2360 6797 7500 00000000 00000000 (2.236068)
DBG(238)> CPU DETAIL: Shift : 00 0 2 2360 6797 7500 00000000 00000000 (2.236068)
DBG(239)> CPU DETAIL: Write 0212: 0002236067977500 
DBG(241)> CPU CMD: Exec 0205: 50 24 0000 0000 0000   R<i+1> . R<i+1> = R^2<i+1>   
DBG(242)> CPU DETAIL: Float: REG1: 00 0 2 2360 6797 7500 (2.236068)
DBG(242)> CPU DETAIL:        REG2: 00 0 2 2360 6797 7500 (2.236068)
DBG(243)> CPU DETAIL: Result: 00 0 5 0000 0000 0000 93945312 50000000 (5.000000)
DBG(244)> CPU DETAIL: Shift : 00 0 5 0000 0000 0001 93945312 50000000 (5.000000)
DBG(247)> CPU CMD: Exec 0206: 50 22 0213 0000 0000   N - R^2<i+1>   
DBG(248)> CPU DETAIL: Read R 0213: 0005000000000000 
DBG(249)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(249)> CPU DETAIL:        REG2: 00 0 5 0000 0000 0001 (5.000000)
DBG(250)> CPU DETAIL: Result: 00 1 0 0000 0000 0001 00000000 00000000 (-0.000000)
DBG(251)> CPU DETAIL: Shift : 88 1 1 0000 0000 0000 00000000 00000000 (-0.000000)
DBG(254)> CPU CMD: Exec 0207: 50 28 0000 0216 0000   | N - R^2<i+1> | - | 10^-10 |   
DBG(255)> CPU DETAIL: Read S 0216: 9001000000000000 
DBG(256)> CPU DETAIL: Float: REG1: 88 1 1 0000 0000 0000 (-0.000000)
DBG(256)> CPU DETAIL:        REG2: 90 0 1 0000 0000 0000 (0.000000)
DBG(257)> CPU DETAIL: Result: 90 1 0 9900 0000 0000 00000000 00000000 (-0.000000)
DBG(258)> CPU DETAIL: Shift : 89 1 9 9000 0000 0000 00000000 00000000 (-0.000000)
DBG(261)> CPU CMD: Exec 0208: 00 63 0000 0000 0210   if < 0, go to 0210   
DBG(262)> CPU DETAIL: REG1: 8919900000000000
DBG(262)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(264)> CPU CMD: Exec 0210: 00 60 0212 0000 0102   Rn to register, go to 0102   
DBG(265)> CPU DETAIL: Read R 0212: 0002236067977500 
DBG(266)> CPU DETAIL: Transfer to T 
DBG(268)> CPU CMD: Exec 0102: 00 61 0000 0000 0100   stop   
DBG(269)> CPU DETAIL: Transfer to T 
DBG(269)> CPU DETAIL: Programmed STOP 
DBG(269)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(262291)> CPU DETAIL: End Wait for NO animation (49 msec)
DBG(262291)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(262291)> CPU DETAIL: Measured speed: 4927296 Ticks per second
DBG(262291)> CPU DETAIL: Measured speed: Clock at 4.93 MHz
DBG(262291)> CPU DETAIL: Speed is x4.9 relative to original hardware
DBG(262291)> CPU DETAIL: Instructions executed: 45
DBG(262291)> CPU DETAIL: Measured speed: 833 Instructions per second (IPS) achieved
DBG(262291)> CPU DETAIL: Run elapsed 54 msec

Program STOP, IC: 00102 (00 61 0000 0000 0100)

Exec Ok
******************************

