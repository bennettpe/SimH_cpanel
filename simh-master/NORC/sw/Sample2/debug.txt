Debug output to "debug.txt" at Sun Feb 07 21:40:47 2021
IBM NORC simulator V4.0-0 Current        git commit id: d0022e93

******************************
Exec Sample 2


*** use ctc to load input tape from data cards

Punched 5 cards 
DBG(262291)> MT EXP: Tape unit 0: attach file mt_in.tap
Read 5 cards in CTC 
DBG(262291)> CTC DETAIL: Read Card:            !890020102140001000110000000000000020000000000000003000000000000
DBG(262291)> CTC DETAIL: Read Card:            0004000000000000000500000000000000060000000000000007000000000000
DBG(262291)> CTC DETAIL: Read Card:            0008000000000000000900000000000000011000000000000001200000000000
DBG(262291)> CTC DETAIL: Read Card:            000130000000000000014000000000000001500000000000089002010214000J
DBG(262291)> CTC DETAIL: Read Card:            !89000000000000!
Written 14 words in Tape 

*** load program on computer and prepare prog initial settings

loaded sample2_prog.txt from 0008 to 0054 address
DBG(262291)> MT EXP: Tape unit 1: attach file mt_out.tap
DBG(262291)> MT EXP: Tape unit 2: attach file mt_in.tap
DBG(262291)> MT EXP: Tape unit 3: attach file mt_prog.tap

*** run the program

DBG(262291)> CPU DETAIL: Measured speed: init because start of run
DBG(262293)> CPU CMD: Exec 0008: 08 94 0060 0073 0001   Read in X's and Y's   
DBG(262294)> CPU DETAIL: Tape operation on MT2, Addr 0060->0073, Block Number 0001
DBG(262294)> MT DATA: Tape unit 2: init read
DBG(262294)> MT DETAIL: Read tape record (290 chars, used 2.07 inches, needs 12 msec) from tape 2
DBG(262294)> MT DETAIL: Tape record contents: D*0890020102140001C*0001100000000000C*0002000000000000C*00030000000000...
DBG(262294)> MT EXP: Start Of Block Word: 0890020102140001
DBG(262294)> MT EXP: Read Tape Block number 0001
DBG(262294)> MT EXP: Read forward addr 0060 to 0073
DBG(262294)> MT EXP: Tape to CRT 0060: 0001100000000000 
DBG(262294)> MT EXP: Tape to CRT 0061: 0002000000000000 
DBG(262294)> MT EXP: Tape to CRT 0062: 0003000000000000 
DBG(262294)> MT EXP: Tape to CRT 0063: 0004000000000000 
DBG(262294)> MT EXP: Tape to CRT 0064: 0005000000000000 
DBG(262294)> MT EXP: Tape to CRT 0065: 0006000000000000 
DBG(262294)> MT EXP: Tape to CRT 0066: 0007000000000000 
DBG(262294)> MT EXP: Tape to CRT 0067: 0008000000000000 
DBG(262294)> MT EXP: Tape to CRT 0068: 0009000000000000 
DBG(262294)> MT EXP: Tape to CRT 0069: 0001100000000000 
DBG(262294)> MT EXP: Tape to CRT 0070: 0001200000000000 
DBG(262294)> MT EXP: Tape to CRT 0071: 0001300000000000 
DBG(262294)> MT EXP: Tape to CRT 0072: 0001400000000000 
DBG(262294)> MT EXP: Tape to CRT 0073: 0001500000000000 
DBG(262294)> MT EXP: End Of Block Word: 0890020102140001, data words in block: 14
DBG(262294)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.01% of medium (2.07 inches)
DBG(262297)> CPU CMD: Exec 0009: 00 67 0000 0000 0034   If end of file sensed transfer to 0034   
DBG(262298)> CPU DETAIL: Condition not present 
DBG(262300)> CPU CMD: Exec 0010: 00 68 0008 0046 0045   If tape check failure, transfer to 0045   
DBG(262301)> CPU DETAIL: Condition not present 
DBG(262303)> CPU CMD: Exec 0011: 00 55 0000 0000 0000   Clear M4 and M8   
DBG(262304)> CPU DETAIL: Clear M4
DBG(262304)> CPU DETAIL: M4: 0000 
DBG(262305)> CPU DETAIL: M6: 0000 
DBG(262306)> CPU DETAIL: Clear M8
DBG(262306)> CPU DETAIL: M8: 0000 
DBG(262309)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262310)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(262310)> CPU DETAIL: Read R 0060: 0001100000000000 
DBG(262311)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(262311)> CPU DETAIL: Read S 0060: 0001100000000000 
DBG(262312)> CPU DETAIL: Float: REG1: 00 0 1 1000 0000 0000 (1.100000)
DBG(262312)> CPU DETAIL:        REG2: 00 0 1 1000 0000 0000 (1.100000)
DBG(262313)> CPU DETAIL: Result: 00 0 1 2100 0000 0000 00024414 06250000 (1.210000)
DBG(262314)> CPU DETAIL: Shift : 00 0 1 2100 0000 0001 00024414 06250000 (1.210000)
DBG(262315)> CPU DETAIL: Write 0049: 0001210000000001 
DBG(262317)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262318)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(262318)> CPU DETAIL: Read R 0061: 0002000000000000 
DBG(262319)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(262319)> CPU DETAIL: Read S 0061: 0002000000000000 
DBG(262320)> CPU DETAIL: Float: REG1: 00 0 2 0000 0000 0000 (2.000000)
DBG(262320)> CPU DETAIL:        REG2: 00 0 2 0000 0000 0000 (2.000000)
DBG(262321)> CPU DETAIL: Result: 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(262322)> CPU DETAIL: Shift : 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(262325)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262326)> CPU DETAIL: Read R 0049: 0001210000000001 
DBG(262327)> CPU DETAIL: Float: REG1: 00 0 1 2100 0000 0001 (1.210000)
DBG(262327)> CPU DETAIL:        REG2: 00 0 4 0000 0000 0000 (4.000000)
DBG(262328)> CPU DETAIL: Result: 00 0 5 2100 0000 0001 00000000 00000000 (5.210000)
DBG(262329)> CPU DETAIL: Shift : 00 0 5 2100 0000 0001 00000000 00000000 (5.210000)
DBG(262330)> CPU DETAIL: Write 0049: 0005210000000001 
DBG(262332)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262333)> CPU DETAIL: M4 Address Modifier: 0000 
DBG(262333)> CPU DETAIL: Read R 0060: 0001100000000000 
DBG(262334)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262335)> CPU DETAIL: Float: REG1: 00 0 1 1000 0000 0000 (1.100000)
DBG(262335)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262336)> CPU DETAIL: Result: 00 0 0 1000 0000 0000 00000000 00000000 (0.100000)
DBG(262337)> CPU DETAIL: Shift : 99 0 1 0000 0000 0000 00000000 00000000 (0.100000)
DBG(262340)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262341)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262342)> CPU DETAIL: Diff: REG1: 9901000000000000
DBG(262345)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262346)> CPU DETAIL: Read R 0049: 0005210000000001 
DBG(262347)> CPU DETAIL: Float: REG1: 00 0 5 2100 0000 0001 (5.210000)
DBG(262347)> CPU DETAIL:        REG2: 99 0 1 0000 0000 0000 (0.100000)
DBG(262348)> CPU DETAIL: Result: 01 0 5 2100 0000 0001 00000000 00000000 (52.100000)
DBG(262349)> CPU DETAIL: Shift : 01 0 5 2100 0000 0001 00000000 00000000 (52.100000)
DBG(262350)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(262350)> CPU DETAIL: Write 0080: 0105210000000001 
DBG(262352)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262353)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262354)> CPU DETAIL: Diff: REG1: 0105210000000001
DBG(262357)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262358)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262359)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262359)> CPU DETAIL:        REG2: 01 0 5 2100 0000 0001 (52.100000)
DBG(262360)> CPU DETAIL: Result: 01 1 5 2100 0000 0000 90000000 00000000 (-52.100000)
DBG(262361)> CPU DETAIL: Shift : 01 1 5 2100 0000 0000 90000000 00000000 (-52.100000)
DBG(262364)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262365)> CPU DETAIL: REG1: 0115210000000000
DBG(262365)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262367)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262368)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262369)> CPU DETAIL: M8 Address Modifier: 0000 
DBG(262369)> CPU DETAIL: Read S 0080: 0105210000000001 
DBG(262370)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262370)> CPU DETAIL:        REG2: 01 0 5 2100 0000 0001 (52.100000)
DBG(262371)> CPU DETAIL: Result: 01 0 5 2100 0000 0001 00000000 00000000 (52.100000)
DBG(262372)> CPU DETAIL: Shift : 99 0 1 0000 0000 0100 00000000 00000000 (0.100000)
DBG(262375)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262376)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262377)> CPU DETAIL: Diff: REG1: 9901000000000100
DBG(262378)> CPU DETAIL: Transfer to T 
DBG(262380)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262381)> CPU DETAIL: M4: 0000 
DBG(262382)> CPU DETAIL: M6: 0000 
DBG(262383)> CPU DETAIL: M8: 0001 
DBG(262386)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262387)> CPU DETAIL: M4: 0002 
DBG(262388)> CPU DETAIL: Transfer to T 
DBG(262390)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262391)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(262391)> CPU DETAIL: Read R 0062: 0003000000000000 
DBG(262392)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(262392)> CPU DETAIL: Read S 0062: 0003000000000000 
DBG(262393)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(262393)> CPU DETAIL:        REG2: 00 0 3 0000 0000 0000 (3.000000)
DBG(262394)> CPU DETAIL: Result: 00 0 9 0000 0000 0000 00000000 00000000 (9.000000)
DBG(262395)> CPU DETAIL: Shift : 00 0 9 0000 0000 0000 00000000 00000000 (9.000000)
DBG(262396)> CPU DETAIL: Write 0049: 0009000000000000 
DBG(262398)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262399)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(262399)> CPU DETAIL: Read R 0063: 0004000000000000 
DBG(262400)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(262400)> CPU DETAIL: Read S 0063: 0004000000000000 
DBG(262401)> CPU DETAIL: Float: REG1: 00 0 4 0000 0000 0000 (4.000000)
DBG(262401)> CPU DETAIL:        REG2: 00 0 4 0000 0000 0000 (4.000000)
DBG(262402)> CPU DETAIL: Result: 01 0 1 6000 0000 0000 00000000 00000000 (16.000000)
DBG(262403)> CPU DETAIL: Shift : 01 0 1 6000 0000 0000 00000000 00000000 (16.000000)
DBG(262406)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262407)> CPU DETAIL: Read R 0049: 0009000000000000 
DBG(262408)> CPU DETAIL: Float: REG1: 00 0 9 0000 0000 0000 (9.000000)
DBG(262408)> CPU DETAIL:        REG2: 01 0 1 6000 0000 0000 (16.000000)
DBG(262409)> CPU DETAIL: Result: 01 0 2 5000 0000 0000 00000000 00000000 (25.000000)
DBG(262410)> CPU DETAIL: Shift : 01 0 2 5000 0000 0000 00000000 00000000 (25.000000)
DBG(262411)> CPU DETAIL: Write 0049: 0102500000000000 
DBG(262413)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262414)> CPU DETAIL: M4 Address Modifier: 0002 
DBG(262414)> CPU DETAIL: Read R 0062: 0003000000000000 
DBG(262415)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262416)> CPU DETAIL: Float: REG1: 00 0 3 0000 0000 0000 (3.000000)
DBG(262416)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262417)> CPU DETAIL: Result: 00 0 2 0000 0000 0000 00000000 00000000 (2.000000)
DBG(262418)> CPU DETAIL: Shift : 00 0 2 0000 0000 0000 00000000 00000000 (2.000000)
DBG(262421)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262422)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262423)> CPU DETAIL: Diff: REG1: 0002000000000000
DBG(262426)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262427)> CPU DETAIL: Read R 0049: 0102500000000000 
DBG(262428)> CPU DETAIL: Float: REG1: 01 0 2 5000 0000 0000 (25.000000)
DBG(262428)> CPU DETAIL:        REG2: 00 0 2 0000 0000 0000 (2.000000)
DBG(262429)> CPU DETAIL: Result: 01 0 1 2500 0000 0000 00000000 00000000 (12.500000)
DBG(262430)> CPU DETAIL: Shift : 01 0 1 2500 0000 0000 00000000 00000000 (12.500000)
DBG(262431)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(262431)> CPU DETAIL: Write 0081: 0101250000000000 
DBG(262433)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262434)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262435)> CPU DETAIL: Diff: REG1: 0101250000000000
DBG(262438)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262439)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262440)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262440)> CPU DETAIL:        REG2: 01 0 1 2500 0000 0000 (12.500000)
DBG(262441)> CPU DETAIL: Result: 01 1 1 2499 9999 9999 90000000 00000000 (-12.500000)
DBG(262442)> CPU DETAIL: Shift : 01 1 1 2499 9999 9999 90000000 00000000 (-12.500000)
DBG(262445)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262446)> CPU DETAIL: REG1: 0111249999999999
DBG(262446)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262448)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262449)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262450)> CPU DETAIL: M8 Address Modifier: 0001 
DBG(262450)> CPU DETAIL: Read S 0081: 0101250000000000 
DBG(262451)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262451)> CPU DETAIL:        REG2: 01 0 1 2500 0000 0000 (12.500000)
DBG(262452)> CPU DETAIL: Result: 01 0 1 2500 0000 0000 00000000 00000000 (12.500000)
DBG(262453)> CPU DETAIL: Shift : 99 0 5 0000 0000 0000 00000000 00000000 (0.500000)
DBG(262456)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262457)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262458)> CPU DETAIL: Diff: REG1: 9905000000000000
DBG(262459)> CPU DETAIL: Transfer to T 
DBG(262461)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262462)> CPU DETAIL: M4: 0002 
DBG(262463)> CPU DETAIL: M6: 0000 
DBG(262464)> CPU DETAIL: M8: 0002 
DBG(262467)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262468)> CPU DETAIL: M4: 0004 
DBG(262469)> CPU DETAIL: Transfer to T 
DBG(262471)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262472)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(262472)> CPU DETAIL: Read R 0064: 0005000000000000 
DBG(262473)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(262473)> CPU DETAIL: Read S 0064: 0005000000000000 
DBG(262474)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(262474)> CPU DETAIL:        REG2: 00 0 5 0000 0000 0000 (5.000000)
DBG(262475)> CPU DETAIL: Result: 01 0 2 5000 0000 0000 00000000 00000000 (25.000000)
DBG(262476)> CPU DETAIL: Shift : 01 0 2 5000 0000 0000 00000000 00000000 (25.000000)
DBG(262477)> CPU DETAIL: Write 0049: 0102500000000000 
DBG(262479)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262480)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(262480)> CPU DETAIL: Read R 0065: 0006000000000000 
DBG(262481)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(262481)> CPU DETAIL: Read S 0065: 0006000000000000 
DBG(262482)> CPU DETAIL: Float: REG1: 00 0 6 0000 0000 0000 (6.000000)
DBG(262482)> CPU DETAIL:        REG2: 00 0 6 0000 0000 0000 (6.000000)
DBG(262483)> CPU DETAIL: Result: 01 0 3 6000 0000 0000 00000000 00000000 (36.000000)
DBG(262484)> CPU DETAIL: Shift : 01 0 3 6000 0000 0000 00000000 00000000 (36.000000)
DBG(262487)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262488)> CPU DETAIL: Read R 0049: 0102500000000000 
DBG(262489)> CPU DETAIL: Float: REG1: 01 0 2 5000 0000 0000 (25.000000)
DBG(262489)> CPU DETAIL:        REG2: 01 0 3 6000 0000 0000 (36.000000)
DBG(262490)> CPU DETAIL: Result: 01 0 6 1000 0000 0000 00000000 00000000 (61.000000)
DBG(262491)> CPU DETAIL: Shift : 01 0 6 1000 0000 0000 00000000 00000000 (61.000000)
DBG(262492)> CPU DETAIL: Write 0049: 0106100000000000 
DBG(262494)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262495)> CPU DETAIL: M4 Address Modifier: 0004 
DBG(262495)> CPU DETAIL: Read R 0064: 0005000000000000 
DBG(262496)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262497)> CPU DETAIL: Float: REG1: 00 0 5 0000 0000 0000 (5.000000)
DBG(262497)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262498)> CPU DETAIL: Result: 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(262499)> CPU DETAIL: Shift : 00 0 4 0000 0000 0000 00000000 00000000 (4.000000)
DBG(262502)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262503)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262504)> CPU DETAIL: Diff: REG1: 0004000000000000
DBG(262507)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262508)> CPU DETAIL: Read R 0049: 0106100000000000 
DBG(262509)> CPU DETAIL: Float: REG1: 01 0 6 1000 0000 0000 (61.000000)
DBG(262509)> CPU DETAIL:        REG2: 00 0 4 0000 0000 0000 (4.000000)
DBG(262510)> CPU DETAIL: Result: 01 0 1 5250 0000 0000 00000000 00000000 (15.250000)
DBG(262511)> CPU DETAIL: Shift : 01 0 1 5250 0000 0000 00000000 00000000 (15.250000)
DBG(262512)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(262512)> CPU DETAIL: Write 0082: 0101525000000000 
DBG(262514)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262515)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262516)> CPU DETAIL: Diff: REG1: 0101525000000000
DBG(262519)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262520)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262521)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262521)> CPU DETAIL:        REG2: 01 0 1 5250 0000 0000 (15.250000)
DBG(262522)> CPU DETAIL: Result: 01 1 1 5249 9999 9999 90000000 00000000 (-15.250000)
DBG(262523)> CPU DETAIL: Shift : 01 1 1 5249 9999 9999 90000000 00000000 (-15.250000)
DBG(262526)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262527)> CPU DETAIL: REG1: 0111524999999999
DBG(262527)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262529)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262530)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262531)> CPU DETAIL: M8 Address Modifier: 0002 
DBG(262531)> CPU DETAIL: Read S 0082: 0101525000000000 
DBG(262532)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262532)> CPU DETAIL:        REG2: 01 0 1 5250 0000 0000 (15.250000)
DBG(262533)> CPU DETAIL: Result: 01 0 1 5250 0000 0000 00000000 00000000 (15.250000)
DBG(262534)> CPU DETAIL: Shift : 99 0 2 5000 0000 0000 00000000 00000000 (0.250000)
DBG(262537)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262538)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262539)> CPU DETAIL: Diff: REG1: 9902500000000000
DBG(262540)> CPU DETAIL: Transfer to T 
DBG(262542)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262543)> CPU DETAIL: M4: 0004 
DBG(262544)> CPU DETAIL: M6: 0000 
DBG(262545)> CPU DETAIL: M8: 0003 
DBG(262548)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262549)> CPU DETAIL: M4: 0006 
DBG(262550)> CPU DETAIL: Transfer to T 
DBG(262552)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262553)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(262553)> CPU DETAIL: Read R 0066: 0007000000000000 
DBG(262554)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(262554)> CPU DETAIL: Read S 0066: 0007000000000000 
DBG(262555)> CPU DETAIL: Float: REG1: 00 0 7 0000 0000 0000 (7.000000)
DBG(262555)> CPU DETAIL:        REG2: 00 0 7 0000 0000 0000 (7.000000)
DBG(262556)> CPU DETAIL: Result: 01 0 4 9000 0000 0000 00000000 00000000 (49.000000)
DBG(262557)> CPU DETAIL: Shift : 01 0 4 9000 0000 0000 00000000 00000000 (49.000000)
DBG(262558)> CPU DETAIL: Write 0049: 0104900000000000 
DBG(262560)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262561)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(262561)> CPU DETAIL: Read R 0067: 0008000000000000 
DBG(262562)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(262562)> CPU DETAIL: Read S 0067: 0008000000000000 
DBG(262563)> CPU DETAIL: Float: REG1: 00 0 8 0000 0000 0000 (8.000000)
DBG(262563)> CPU DETAIL:        REG2: 00 0 8 0000 0000 0000 (8.000000)
DBG(262564)> CPU DETAIL: Result: 01 0 6 4000 0000 0000 00000000 00000000 (64.000000)
DBG(262565)> CPU DETAIL: Shift : 01 0 6 4000 0000 0000 00000000 00000000 (64.000000)
DBG(262568)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262569)> CPU DETAIL: Read R 0049: 0104900000000000 
DBG(262570)> CPU DETAIL: Float: REG1: 01 0 4 9000 0000 0000 (49.000000)
DBG(262570)> CPU DETAIL:        REG2: 01 0 6 4000 0000 0000 (64.000000)
DBG(262571)> CPU DETAIL: Result: 02 0 1 1300 0000 0000 00000000 00000000 (113.000000)
DBG(262572)> CPU DETAIL: Shift : 02 0 1 1300 0000 0000 00000000 00000000 (113.000000)
DBG(262573)> CPU DETAIL: Write 0049: 0201130000000000 
DBG(262575)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262576)> CPU DETAIL: M4 Address Modifier: 0006 
DBG(262576)> CPU DETAIL: Read R 0066: 0007000000000000 
DBG(262577)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262578)> CPU DETAIL: Float: REG1: 00 0 7 0000 0000 0000 (7.000000)
DBG(262578)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262579)> CPU DETAIL: Result: 00 0 6 0000 0000 0000 00000000 00000000 (6.000000)
DBG(262580)> CPU DETAIL: Shift : 00 0 6 0000 0000 0000 00000000 00000000 (6.000000)
DBG(262583)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262584)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262585)> CPU DETAIL: Diff: REG1: 0006000000000000
DBG(262588)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262589)> CPU DETAIL: Read R 0049: 0201130000000000 
DBG(262590)> CPU DETAIL: Float: REG1: 02 0 1 1300 0000 0000 (113.000000)
DBG(262590)> CPU DETAIL:        REG2: 00 0 6 0000 0000 0000 (6.000000)
DBG(262591)> CPU DETAIL: Result: 01 0 1 8833 3333 3333 33325195 31250000 (18.833333)
DBG(262592)> CPU DETAIL: Shift : 01 0 1 8833 3333 3333 33325195 31250000 (18.833333)
DBG(262593)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(262593)> CPU DETAIL: Write 0083: 0101883333333333 
DBG(262595)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262596)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262597)> CPU DETAIL: Diff: REG1: 0101883333333333
DBG(262600)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262601)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262602)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262602)> CPU DETAIL:        REG2: 01 0 1 8833 3333 3333 (18.833333)
DBG(262603)> CPU DETAIL: Result: 01 1 1 8833 3333 3332 90000000 00000000 (-18.833333)
DBG(262604)> CPU DETAIL: Shift : 01 1 1 8833 3333 3332 90000000 00000000 (-18.833333)
DBG(262607)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262608)> CPU DETAIL: REG1: 0111883333333332
DBG(262608)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262610)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262611)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262612)> CPU DETAIL: M8 Address Modifier: 0003 
DBG(262612)> CPU DETAIL: Read S 0083: 0101883333333333 
DBG(262613)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262613)> CPU DETAIL:        REG2: 01 0 1 8833 3333 3333 (18.833333)
DBG(262614)> CPU DETAIL: Result: 01 0 1 8833 3333 3333 00000000 00000000 (18.833333)
DBG(262615)> CPU DETAIL: Shift : 99 0 8 3333 3333 3300 00000000 00000000 (0.833333)
DBG(262618)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262619)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262620)> CPU DETAIL: Diff: REG1: 9908333333333300
DBG(262621)> CPU DETAIL: Transfer to T 
DBG(262623)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262624)> CPU DETAIL: M4: 0006 
DBG(262625)> CPU DETAIL: M6: 0000 
DBG(262626)> CPU DETAIL: M8: 0004 
DBG(262629)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262630)> CPU DETAIL: M4: 0008 
DBG(262631)> CPU DETAIL: Transfer to T 
DBG(262633)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262634)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(262634)> CPU DETAIL: Read R 0068: 0009000000000000 
DBG(262635)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(262635)> CPU DETAIL: Read S 0068: 0009000000000000 
DBG(262636)> CPU DETAIL: Float: REG1: 00 0 9 0000 0000 0000 (9.000000)
DBG(262636)> CPU DETAIL:        REG2: 00 0 9 0000 0000 0000 (9.000000)
DBG(262637)> CPU DETAIL: Result: 01 0 8 1000 0000 0000 00000000 00000000 (81.000000)
DBG(262638)> CPU DETAIL: Shift : 01 0 8 1000 0000 0000 00000000 00000000 (81.000000)
DBG(262639)> CPU DETAIL: Write 0049: 0108100000000000 
DBG(262641)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262642)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(262642)> CPU DETAIL: Read R 0069: 0001100000000000 
DBG(262643)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(262643)> CPU DETAIL: Read S 0069: 0001100000000000 
DBG(262644)> CPU DETAIL: Float: REG1: 00 0 1 1000 0000 0000 (1.100000)
DBG(262644)> CPU DETAIL:        REG2: 00 0 1 1000 0000 0000 (1.100000)
DBG(262645)> CPU DETAIL: Result: 00 0 1 2100 0000 0000 00024414 06250000 (1.210000)
DBG(262646)> CPU DETAIL: Shift : 00 0 1 2100 0000 0001 00024414 06250000 (1.210000)
DBG(262649)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262650)> CPU DETAIL: Read R 0049: 0108100000000000 
DBG(262651)> CPU DETAIL: Float: REG1: 01 0 8 1000 0000 0000 (81.000000)
DBG(262651)> CPU DETAIL:        REG2: 00 0 1 2100 0000 0001 (1.210000)
DBG(262652)> CPU DETAIL: Result: 01 0 8 2210 0000 0000 10000000 00000000 (82.210000)
DBG(262653)> CPU DETAIL: Shift : 01 0 8 2210 0000 0001 10000000 00000000 (82.210000)
DBG(262654)> CPU DETAIL: Write 0049: 0108221000000001 
DBG(262656)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262657)> CPU DETAIL: M4 Address Modifier: 0008 
DBG(262657)> CPU DETAIL: Read R 0068: 0009000000000000 
DBG(262658)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262659)> CPU DETAIL: Float: REG1: 00 0 9 0000 0000 0000 (9.000000)
DBG(262659)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262660)> CPU DETAIL: Result: 00 0 8 0000 0000 0000 00000000 00000000 (8.000000)
DBG(262661)> CPU DETAIL: Shift : 00 0 8 0000 0000 0000 00000000 00000000 (8.000000)
DBG(262664)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262665)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262666)> CPU DETAIL: Diff: REG1: 0008000000000000
DBG(262669)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262670)> CPU DETAIL: Read R 0049: 0108221000000001 
DBG(262671)> CPU DETAIL: Float: REG1: 01 0 8 2210 0000 0001 (82.210000)
DBG(262671)> CPU DETAIL:        REG2: 00 0 8 0000 0000 0000 (8.000000)
DBG(262672)> CPU DETAIL: Result: 01 0 1 0276 2500 0000 12500000 00000000 (10.276250)
DBG(262673)> CPU DETAIL: Shift : 01 0 1 0276 2500 0001 12500000 00000000 (10.276250)
DBG(262674)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(262674)> CPU DETAIL: Write 0084: 0101027625000001 
DBG(262676)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262677)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262678)> CPU DETAIL: Diff: REG1: 0101027625000001
DBG(262681)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262682)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262683)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262683)> CPU DETAIL:        REG2: 01 0 1 0276 2500 0001 (10.276250)
DBG(262684)> CPU DETAIL: Result: 01 1 1 0276 2500 0000 90000000 00000000 (-10.276250)
DBG(262685)> CPU DETAIL: Shift : 01 1 1 0276 2500 0000 90000000 00000000 (-10.276250)
DBG(262688)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262689)> CPU DETAIL: REG1: 0111027625000000
DBG(262689)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262691)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262692)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262693)> CPU DETAIL: M8 Address Modifier: 0004 
DBG(262693)> CPU DETAIL: Read S 0084: 0101027625000001 
DBG(262694)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262694)> CPU DETAIL:        REG2: 01 0 1 0276 2500 0001 (10.276250)
DBG(262695)> CPU DETAIL: Result: 01 0 1 0276 2500 0001 00012207 03125000 (10.276250)
DBG(262696)> CPU DETAIL: Shift : 99 0 2 7625 0000 0100 01220703 12500000 (0.276250)
DBG(262699)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262700)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262701)> CPU DETAIL: Diff: REG1: 9902762500000100
DBG(262702)> CPU DETAIL: Transfer to T 
DBG(262704)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262705)> CPU DETAIL: M4: 0008 
DBG(262706)> CPU DETAIL: M6: 0000 
DBG(262707)> CPU DETAIL: M8: 0005 
DBG(262710)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262711)> CPU DETAIL: M4: 0010 
DBG(262712)> CPU DETAIL: Transfer to T 
DBG(262714)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262715)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(262715)> CPU DETAIL: Read R 0070: 0001200000000000 
DBG(262716)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(262716)> CPU DETAIL: Read S 0070: 0001200000000000 
DBG(262717)> CPU DETAIL: Float: REG1: 00 0 1 2000 0000 0000 (1.200000)
DBG(262717)> CPU DETAIL:        REG2: 00 0 1 2000 0000 0000 (1.200000)
DBG(262718)> CPU DETAIL: Result: 00 0 1 4400 0000 0000 00000000 00000000 (1.440000)
DBG(262719)> CPU DETAIL: Shift : 00 0 1 4400 0000 0000 00000000 00000000 (1.440000)
DBG(262720)> CPU DETAIL: Write 0049: 0001440000000000 
DBG(262722)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262723)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(262723)> CPU DETAIL: Read R 0071: 0001300000000000 
DBG(262724)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(262724)> CPU DETAIL: Read S 0071: 0001300000000000 
DBG(262725)> CPU DETAIL: Float: REG1: 00 0 1 3000 0000 0000 (1.300000)
DBG(262725)> CPU DETAIL:        REG2: 00 0 1 3000 0000 0000 (1.300000)
DBG(262726)> CPU DETAIL: Result: 00 0 1 6900 0000 0000 00024414 06250000 (1.690000)
DBG(262727)> CPU DETAIL: Shift : 00 0 1 6900 0000 0001 00024414 06250000 (1.690000)
DBG(262730)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262731)> CPU DETAIL: Read R 0049: 0001440000000000 
DBG(262732)> CPU DETAIL: Float: REG1: 00 0 1 4400 0000 0000 (1.440000)
DBG(262732)> CPU DETAIL:        REG2: 00 0 1 6900 0000 0001 (1.690000)
DBG(262733)> CPU DETAIL: Result: 00 0 3 1300 0000 0001 00000000 00000000 (3.130000)
DBG(262734)> CPU DETAIL: Shift : 00 0 3 1300 0000 0001 00000000 00000000 (3.130000)
DBG(262735)> CPU DETAIL: Write 0049: 0003130000000001 
DBG(262737)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262738)> CPU DETAIL: M4 Address Modifier: 0010 
DBG(262738)> CPU DETAIL: Read R 0070: 0001200000000000 
DBG(262739)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262740)> CPU DETAIL: Float: REG1: 00 0 1 2000 0000 0000 (1.200000)
DBG(262740)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262741)> CPU DETAIL: Result: 00 0 0 2000 0000 0000 00000000 00000000 (0.200000)
DBG(262742)> CPU DETAIL: Shift : 99 0 2 0000 0000 0000 00000000 00000000 (0.200000)
DBG(262745)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262746)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262747)> CPU DETAIL: Diff: REG1: 9902000000000000
DBG(262750)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262751)> CPU DETAIL: Read R 0049: 0003130000000001 
DBG(262752)> CPU DETAIL: Float: REG1: 00 0 3 1300 0000 0001 (3.130000)
DBG(262752)> CPU DETAIL:        REG2: 99 0 2 0000 0000 0000 (0.200000)
DBG(262753)> CPU DETAIL: Result: 01 0 1 5650 0000 0000 50000000 00000000 (15.650000)
DBG(262754)> CPU DETAIL: Shift : 01 0 1 5650 0000 0001 50000000 00000000 (15.650000)
DBG(262755)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(262755)> CPU DETAIL: Write 0085: 0101565000000001 
DBG(262757)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262758)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262759)> CPU DETAIL: Diff: REG1: 0101565000000001
DBG(262762)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262763)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262764)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262764)> CPU DETAIL:        REG2: 01 0 1 5650 0000 0001 (15.650000)
DBG(262765)> CPU DETAIL: Result: 01 1 1 5650 0000 0000 90000000 00000000 (-15.650000)
DBG(262766)> CPU DETAIL: Shift : 01 1 1 5650 0000 0000 90000000 00000000 (-15.650000)
DBG(262769)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262770)> CPU DETAIL: REG1: 0111565000000000
DBG(262770)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262772)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262773)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262774)> CPU DETAIL: M8 Address Modifier: 0005 
DBG(262774)> CPU DETAIL: Read S 0085: 0101565000000001 
DBG(262775)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262775)> CPU DETAIL:        REG2: 01 0 1 5650 0000 0001 (15.650000)
DBG(262776)> CPU DETAIL: Result: 01 0 1 5650 0000 0001 00000000 00000000 (15.650000)
DBG(262777)> CPU DETAIL: Shift : 99 0 6 5000 0000 0100 00000000 00000000 (0.650000)
DBG(262780)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262781)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262782)> CPU DETAIL: Diff: REG1: 9906500000000100
DBG(262783)> CPU DETAIL: Transfer to T 
DBG(262785)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262786)> CPU DETAIL: M4: 0010 
DBG(262787)> CPU DETAIL: M6: 0000 
DBG(262788)> CPU DETAIL: M8: 0006 
DBG(262791)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262792)> CPU DETAIL: M4: 0012 
DBG(262793)> CPU DETAIL: Transfer to T 
DBG(262795)> CPU CMD: Exec 0012: 50 24 4060 4060 0049   Multiply Xi.Xi=Xi^2 into 0049   
DBG(262796)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(262796)> CPU DETAIL: Read R 0072: 0001400000000000 
DBG(262797)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(262797)> CPU DETAIL: Read S 0072: 0001400000000000 
DBG(262798)> CPU DETAIL: Float: REG1: 00 0 1 4000 0000 0000 (1.400000)
DBG(262798)> CPU DETAIL:        REG2: 00 0 1 4000 0000 0000 (1.400000)
DBG(262799)> CPU DETAIL: Result: 00 0 1 9599 9999 9999 99975585 93750000 (1.960000)
DBG(262800)> CPU DETAIL: Shift : 00 0 1 9599 9999 9999 99975585 93750000 (1.960000)
DBG(262801)> CPU DETAIL: Write 0049: 0001959999999999 
DBG(262803)> CPU CMD: Exec 0013: 50 24 4061 4061 0000   Yi^2   
DBG(262804)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(262804)> CPU DETAIL: Read R 0073: 0001500000000000 
DBG(262805)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(262805)> CPU DETAIL: Read S 0073: 0001500000000000 
DBG(262806)> CPU DETAIL: Float: REG1: 00 0 1 5000 0000 0000 (1.500000)
DBG(262806)> CPU DETAIL:        REG2: 00 0 1 5000 0000 0000 (1.500000)
DBG(262807)> CPU DETAIL: Result: 00 0 2 2500 0000 0000 00000000 00000000 (2.250000)
DBG(262808)> CPU DETAIL: Shift : 00 0 2 2500 0000 0000 00000000 00000000 (2.250000)
DBG(262811)> CPU CMD: Exec 0014: 50 20 0049 0000 0049   Xi^2 + Yi^2 into 0049   
DBG(262812)> CPU DETAIL: Read R 0049: 0001959999999999 
DBG(262813)> CPU DETAIL: Float: REG1: 00 0 1 9599 9999 9999 (1.960000)
DBG(262813)> CPU DETAIL:        REG2: 00 0 2 2500 0000 0000 (2.250000)
DBG(262814)> CPU DETAIL: Result: 00 0 4 2099 9999 9999 00000000 00000000 (4.210000)
DBG(262815)> CPU DETAIL: Shift : 00 0 4 2099 9999 9999 00000000 00000000 (4.210000)
DBG(262816)> CPU DETAIL: Write 0049: 0004209999999999 
DBG(262818)> CPU CMD: Exec 0015: 50 22 4060 0054 0000   Xi-1 into register storage only   
DBG(262819)> CPU DETAIL: M4 Address Modifier: 0012 
DBG(262819)> CPU DETAIL: Read R 0072: 0001400000000000 
DBG(262820)> CPU DETAIL: Read S 0054: 0001000000000000 
DBG(262821)> CPU DETAIL: Float: REG1: 00 0 1 4000 0000 0000 (1.400000)
DBG(262821)> CPU DETAIL:        REG2: 00 0 1 0000 0000 0000 (1.000000)
DBG(262822)> CPU DETAIL: Result: 00 0 0 4000 0000 0000 00000000 00000000 (0.400000)
DBG(262823)> CPU DETAIL: Shift : 99 0 4 0000 0000 0000 00000000 00000000 (0.400000)
DBG(262826)> CPU CMD: Exec 0016: 00 71 0000 0051 0000   stop if Xi-1=0   
DBG(262827)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262828)> CPU DETAIL: Diff: REG1: 9904000000000000
DBG(262831)> CPU CMD: Exec 0017: 50 26 0049 0000 8080   Xi^2+Yi^2 / Xi-1 = Zi into 0080+i   
DBG(262832)> CPU DETAIL: Read R 0049: 0004209999999999 
DBG(262833)> CPU DETAIL: Float: REG1: 00 0 4 2099 9999 9999 (4.210000)
DBG(262833)> CPU DETAIL:        REG2: 99 0 4 0000 0000 0000 (0.400000)
DBG(262834)> CPU DETAIL: Result: 01 0 1 0524 9999 9999 75000000 00000000 (10.525000)
DBG(262835)> CPU DETAIL: Shift : 01 0 1 0524 9999 9999 75000000 00000000 (10.525000)
DBG(262836)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(262836)> CPU DETAIL: Write 0086: 0101052499999999 
DBG(262838)> CPU CMD: Exec 0018: 00 70 0000 0051 0023   if Zi=0 transfer to 0023     
DBG(262839)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262840)> CPU DETAIL: Diff: REG1: 0101052499999999
DBG(262843)> CPU CMD: Exec 0019: 50 38 0053 0000 0000   |10^-13| - |Zi| into register storage   
DBG(262844)> CPU DETAIL: Read R 0053: 8701000000000000 
DBG(262845)> CPU DETAIL: Float: REG1: 87 0 1 0000 0000 0000 (0.000000)
DBG(262845)> CPU DETAIL:        REG2: 01 0 1 0524 9999 9999 (10.525000)
DBG(262846)> CPU DETAIL: Result: 01 1 1 0524 9999 9998 90000000 00000000 (-10.525000)
DBG(262847)> CPU DETAIL: Shift : 01 1 1 0524 9999 9998 90000000 00000000 (-10.525000)
DBG(262850)> CPU CMD: Exec 0020: 00 63 0024 0024 0021   if |Zi|<=10^-13 (Z!=0) transfer to 0024   
DBG(262851)> CPU DETAIL: REG1: 0111052499999998
DBG(262851)> CPU DETAIL: Transfer to T (REG1<0 because digit14!=0)
DBG(262853)> CPU CMD: Exec 0021: 99 34 0054 8080 0000   Obtain fractional part of Zi   
DBG(262854)> CPU DETAIL: Read R 0054: 0001000000000000 
DBG(262855)> CPU DETAIL: M8 Address Modifier: 0006 
DBG(262855)> CPU DETAIL: Read S 0086: 0101052499999999 
DBG(262856)> CPU DETAIL: Float: REG1: 00 0 1 0000 0000 0000 (1.000000)
DBG(262856)> CPU DETAIL:        REG2: 01 0 1 0524 9999 9999 (10.525000)
DBG(262857)> CPU DETAIL: Result: 01 0 1 0524 9999 9998 99987792 96875000 (10.525000)
DBG(262858)> CPU DETAIL: Shift : 99 0 5 2499 9999 9899 98779296 87500000 (0.525000)
DBG(262861)> CPU CMD: Exec 0022: 00 72 0000 0051 0024   If not zero, transfer 0024   
DBG(262862)> CPU DETAIL: Read S 0051: 0000000000000000 
DBG(262863)> CPU DETAIL: Diff: REG1: 9905249999999899
DBG(262864)> CPU DETAIL: Transfer to T 
DBG(262866)> CPU CMD: Exec 0024: 00 50 0000 0000 0001   Add 1 to M8   
DBG(262867)> CPU DETAIL: M4: 0012 
DBG(262868)> CPU DETAIL: M6: 0000 
DBG(262869)> CPU DETAIL: M8: 0007 
DBG(262872)> CPU CMD: Exec 0025: 00 58 0002 0014 0012   Add 2 to M4, if M4 != 14 transfer to 0012   
DBG(262873)> CPU DETAIL: M4: 0014 
DBG(262876)> CPU CMD: Exec 0026: 01 91 0080 0086 0001   Write block of Zi's   
DBG(262877)> CPU DETAIL: Tape operation on MT1, Addr 0080->0086, Block Number 0001
DBG(262877)> MT CMD: Tape unit 1: init write
DBG(262877)> MT EXP: Write from 0080 to 0086 as Block number 0001
DBG(262877)> MT EXP: Start Of Block: 01 91 0080 0086 0001
DBG(262877)> MT EXP: CRT 0080 to Tape: 0105210000000001 
DBG(262877)> MT EXP: CRT 0081 to Tape: 0101250000000000 
DBG(262877)> MT EXP: CRT 0082 to Tape: 0101525000000000 
DBG(262877)> MT EXP: CRT 0083 to Tape: 0101883333333333 
DBG(262877)> MT EXP: CRT 0084 to Tape: 0101027625000001 
DBG(262877)> MT EXP: CRT 0085 to Tape: 0101565000000001 
DBG(262877)> MT EXP: CRT 0086 to Tape: 0101052499999999 
DBG(262877)> MT EXP: End Of Block: 01 91 0080 0086 0001 (7 words)
DBG(262877)> MT DETAIL: Write block (164 chars, used 1.82 inches, needs 10 msec) to tape 1
DBG(262877)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.82 inches)
DBG(262880)> CPU CMD: Exec 0027: 00 74 0000 0000 0031   if printing of Z's not desired then transfer to 0031   
DBG(262881)> CPU DETAIL: Condition not present 
DBG(262883)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262884)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(262884)> CPU DETAIL: Read R 0080: 0105210000000001 
DBG(262885)> CPU DETAIL: M4 Address Modifier: 0014 
DBG(262885)> CPU DETAIL: Write 2001: 0105210000000001 
DBG(262887)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262888)> CPU DETAIL: M4: 0015 
DBG(262889)> CPU DETAIL: Transfer to T 
DBG(262891)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262892)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(262892)> CPU DETAIL: Read R 0081: 0101250000000000 
DBG(262893)> CPU DETAIL: M4 Address Modifier: 0015 
DBG(262893)> CPU DETAIL: Write 2002: 0101250000000000 
DBG(262895)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262896)> CPU DETAIL: M4: 0016 
DBG(262897)> CPU DETAIL: Transfer to T 
DBG(262899)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262900)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(262900)> CPU DETAIL: Read R 0082: 0101525000000000 
DBG(262901)> CPU DETAIL: M4 Address Modifier: 0016 
DBG(262901)> CPU DETAIL: Write 2003: 0101525000000000 
DBG(262903)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262904)> CPU DETAIL: M4: 0017 
DBG(262905)> CPU DETAIL: Transfer to T 
DBG(262907)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262908)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(262908)> CPU DETAIL: Read R 0083: 0101883333333333 
DBG(262909)> CPU DETAIL: M4 Address Modifier: 0017 
DBG(262909)> CPU DETAIL: Write 2004: 0101883333333333 
DBG(262911)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262912)> CPU DETAIL: M4: 0018 
DBG(262913)> CPU DETAIL: Transfer to T 
DBG(262915)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262916)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(262916)> CPU DETAIL: Read R 0084: 0101027625000001 
DBG(262917)> CPU DETAIL: M4 Address Modifier: 0018 
DBG(262917)> CPU DETAIL: Write 2005: 0101027625000001 
DBG(262919)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262920)> CPU DETAIL: M4: 0019 
DBG(262921)> CPU DETAIL: Transfer to T 
DBG(262923)> CPU CMD: Exec 0028: 00 80 4066 5987 0000   Zi -> i (M4=14 initially)   
DBG(262924)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(262924)> CPU DETAIL: Read R 0085: 0101565000000001 
DBG(262925)> CPU DETAIL: M4 Address Modifier: 0019 
DBG(262925)> CPU DETAIL: Write 2006: 0101565000000001 
DBG(262927)> CPU CMD: Exec 0029: 00 58 0001 0020 0028   Add 1 to M4 until = 20 transfer to 0028   
DBG(262928)> CPU DETAIL: M4: 0020 
DBG(262931)> CPU CMD: Exec 0030: 00 81 0086 0007 0000   Z6->0007 print    
DBG(262932)> CPU DETAIL: Read R 0086: 0101052499999999 
DBG(262933)> CPU DETAIL: Write 0007: 0101052499999999 
DBG(262933)> LP CMD: Printer LP1: init cycle 
DBG(262933)> LP CMD:      0001: 0000000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(262933)> LP CMD:      0005: 0000000000000000  0000000000000000 0101052499999999 
DBG(262933)> LP CMD: Printer 1: ready (fast mode)
DBG(262935)> CPU CMD: Exec 0031: 00 40 0008 0050 0008   Increase block number by 1   
DBG(262936)> CPU DETAIL: Read R 0008: 0894006000730001 
DBG(262937)> CPU DETAIL: Read S 0050: 0000000000000001 
DBG(262938)> CPU DETAIL: Result: 0894006000730002 
DBG(262939)> CPU DETAIL: Write 0008: 0894006000730002 
DBG(262941)> CPU CMD: Exec 0032: 00 40 0026 0050 0026   Increase block number by 1   
DBG(262942)> CPU DETAIL: Read R 0026: 0191008000860001 
DBG(262943)> CPU DETAIL: Read S 0050: 0000000000000001 
DBG(262944)> CPU DETAIL: Result: 0191008000860002 
DBG(262945)> CPU DETAIL: Write 0026: 0191008000860002 
DBG(262947)> CPU CMD: Exec 0033: 00 60 0000 0000 0008   Transfer to 0008   
DBG(262948)> CPU DETAIL: Transfer to T 
DBG(262950)> CPU CMD: Exec 0008: 08 94 0060 0073 0002   Read in X's and Y's   
DBG(262951)> CPU DETAIL: Tape operation on MT2, Addr 0060->0073, Block Number 0002
DBG(262951)> MT DATA: Tape unit 2: init read
DBG(262951)> MT DETAIL: Read tape record (20 chars, used 1.54 inches, needs 8 msec) from tape 2
DBG(262951)> MT DETAIL: Tape record contents: D*0890000000000000CD
DBG(262951)> MT EXP: End Of File mark sensed: 0890000000000000 
DBG(262951)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.02% of medium (3.61 inches)
DBG(262954)> CPU CMD: Exec 0009: 00 67 0000 0000 0034   If end of file sensed transfer to 0034   
DBG(262955)> CPU DETAIL: Reset condition present 
DBG(262955)> CPU DETAIL: Transfer to T 
DBG(262957)> CPU CMD: Exec 0034: 01 90 0000 0000 0000   Write End Of File mark on output tape   
DBG(262958)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(262958)> MT CMD: Tape unit 1: init write
DBG(262958)> MT EXP: End Of File mark: 02d 01 0090 0000 0000
DBG(262958)> MT DETAIL: Write block (20 chars, used 1.54 inches, needs 8 msec) to tape 1
DBG(262958)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.02% of medium (3.36 inches)
DBG(262961)> CPU CMD: Exec 0035: 01 97 0000 0000 0000   Verify backwards next block   
DBG(262962)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(262962)> MT CMD: Tape unit 1: init backward read
DBG(262962)> MT DETAIL: Read tape record (20 chars, used -1.54 inches, needs 8 msec) from tape 1
DBG(262962)> MT DETAIL: Tape record contents: D*0190000000000000CD
DBG(262962)> MT EXP: End Of File mark sensed: 0190000000000000 
DBG(262962)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.01% of medium (1.82 inches)
DBG(262965)> CPU CMD: Exec 0036: 00 67 0000 0000 0038   End of file should be sensed. If so go to 0038   
DBG(262966)> CPU DETAIL: Reset condition present 
DBG(262966)> CPU DETAIL: Transfer to T 
DBG(262968)> CPU CMD: Exec 0038: 01 97 0000 0000 0001   Verify backwards to block 0001   
DBG(262969)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0001
DBG(262969)> MT CMD: Tape unit 1: init backward read
DBG(262969)> MT DETAIL: Read tape record (164 chars, used -1.82 inches, needs 10 msec) from tape 1
DBG(262969)> MT DETAIL: Tape record contents: D*0191008000860001C*0105210000000001C*0101250000000000C*01015250000000...
DBG(262969)> MT EXP: Start Of Block Word: 0191008000860001
DBG(262969)> MT EXP: Read Tape Block number 0001
DBG(262969)> MT EXP: Verify backward
DBG(262969)> MT EXP: Tape verify word 1: 0101052499999999 
DBG(262969)> MT EXP: Tape verify word 2: 0101565000000001 
DBG(262969)> MT EXP: Tape verify word 3: 0101027625000001 
DBG(262969)> MT EXP: Tape verify word 4: 0101883333333333 
DBG(262969)> MT EXP: Tape verify word 5: 0101525000000000 
DBG(262969)> MT EXP: Tape verify word 6: 0101250000000000 
DBG(262969)> MT EXP: Tape verify word 7: 0105210000000001 
DBG(262969)> MT EXP: End Of Block Word: 0191008000860001, data words in block: 7
DBG(262969)> CPU DETAIL: ... Tape 1 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(262972)> CPU CMD: Exec 0039: 08 98 0000 0000 0000   Rewind input tape   
DBG(262973)> CPU DETAIL: Tape operation on MT2, Addr 0000->0000, Block Number 0000
DBG(262973)> MT CMD: Tape unit 2: init rewind (current medium used 3.61 inches)
DBG(262973)> MT CMD: Tape unit 2: rewind time (0 sec)
DBG(262973)> CPU DETAIL: ... Tape 2 done (fast mode), used 0.00% of medium (0.00 inches)
DBG(262975)> CPU CMD: Exec 0040: 09 98 0000 0000 0000   Rewind program tape   
DBG(262976)> CPU DETAIL: Tape operation on MT3, Addr 0000->0000, Block Number 0000
DBG(262976)> MT CMD: Tape unit 3: already at BOT
DBG(262978)> CPU CMD: Exec 0041: 01 98 0000 0000 0000   Rewind output tape   
DBG(262979)> CPU DETAIL: Tape operation on MT1, Addr 0000->0000, Block Number 0000
DBG(262979)> MT CMD: Tape unit 1: already at BOT
DBG(262981)> CPU CMD: Exec 0042: 00 68 0038 0000 0037   If tape check failure occurred go to stop   
DBG(262982)> CPU DETAIL: Condition not present 
DBG(262984)> CPU CMD: Exec 0043: 00 82 0052 0001 0000   Print no. of integral Z's on printer 2   
DBG(262985)> CPU DETAIL: Read R 0052: 0000000000000000 
DBG(262986)> CPU DETAIL: Write 0001: 0000000000000000 
DBG(262986)> LP CMD: Printer LP2: init cycle 
DBG(262986)> LP CMD:      0001: 0000000000000000  0000000000000000 0000000000000000 0000000000000000
DBG(262986)> LP CMD:      0005: 0000000000000000  0000000000000000 0101052499999999 
DBG(262986)> LP CMD: Printer 2: ready (fast mode)
DBG(262988)> CPU CMD: Exec 0044: 92 80 0013 0001 0001   Put stop code in loc 0001, transfer to 0001   
DBG(262989)> CPU DETAIL: Read R 0013: 5024406140610000 
DBG(262990)> CPU DETAIL: Word Shift 8 digits left: REG1: 4061000000000000 
DBG(262991)> CPU DETAIL: Transfer to T 
DBG(262991)> CPU DETAIL: Write 0001: 4061000000000000 
DBG(262993)> CPU CMD: Exec 0001: 40 61 0000 0000 0000  
DBG(262994)> CPU DETAIL: Word Shift 40 digits right: REG1: 0000000000000000 
DBG(262995)> CPU DETAIL: Programmed STOP 
DBG(262995)> CPU DETAIL: Start Wait for end of CPANEL animation
DBG(733629)> CPU DETAIL: End Wait for TAPE animation (81 msec)
DBG(733629)> CPU DETAIL: Measured speed: reset cpu speed measurement because end of run
DBG(733629)> CPU DETAIL: Measured speed: 5263066 Ticks per second
DBG(733629)> CPU DETAIL: Measured speed: Clock at 5.26 MHz
DBG(733629)> CPU DETAIL: Speed is x5.3 relative to original hardware
DBG(733629)> CPU DETAIL: Instructions executed: 126
DBG(733629)> CPU DETAIL: Measured speed: 1188 Instructions per second (IPS) achieved
DBG(733629)> CPU DETAIL: Run elapsed 106 msec

Program STOP, IC: 00001 (40 61 0000 0000 0000)

*** use ctc to transfer results on tape to punched cards

DBG(733629)> MT EXP: Tape unit 0: attach file mt_out.tap
DBG(733629)> CTC DETAIL: Punch Card:            !191008000860001010521000000000101012500000000000101525000000000
DBG(733629)> CTC DETAIL: Punch Card:            0101883333333333010102762500000101015650000000010101052499999999
DBG(733629)> CTC DETAIL: Punch Card:            019100800086000J
DBG(733629)> CTC DETAIL: Punch Card:            !19000000000000!

Exec Ok
******************************

