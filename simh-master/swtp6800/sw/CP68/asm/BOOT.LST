 00001			* NAM BOOT
 00002			*
 00003			* BOOT PROGRAM FOR SOUTHWEST TECHNICAL PRODUCTOS DISK DRIVES
 00004			* BASED ON BOOT CP/68 PROGRAM
 00005			*
 00006			
 00007      000B 	FDRSC  EQU $0B    RESTORE
 00008      001B 	FDSKI  EQU $1B    SEEK
 00009      008C 	FDRDC  EQU $8C    READ A SECTOR
 00010			
 00011      8014 	DRVREG EQU $8014  DRIVE REGISTER
 00012      8018 	CMDREG EQU $8018  COMMAND REGISTER  
 00013      8019 	TRKREG EQU $8019  TRACK REGISTER
 00014      801A 	SECREG EQU $801A  SECTOR REGISTER
 00015      801B 	DATREG EQU $801B  DATA REGISTER
 00016			*
 00017			* BOOT BEGIN HERE
 00018			*
 00019      2400	       ORG $2400
 00020			*       
 00021 2400 BD 2529 	START  JSR DRIVE     SETUP DRIVE 0
 00022 2403 86 0B	       LDA A #FDRSC  ISSUE RESTORE COMMAND
 00023 2405 B7 8018 	       STA A CMDREG
 00024 2408 BD 2520 	       JSR DEL30U    30 USEC DELAY
 00025 240B B6 8018 	START2 LDA A CMDREG
 00026 240E 85 01	       BIT A #1      BUSY?
 00027 2410 26 F9	       BNE START2    YES
 00028			*
 00029			* NOW GET SYSTEM LINK INFORMATION
 00030			*
 00031 2412 86 03	       LDA A #3      SECTOR=3
 00032 2414 C6 00	       LDA B #0      TRACK=0        
 00033 2416 CE 2590 	       LDX #BUFFER
 00034 2419 BD 24B5 	       JSR RDSEC     READ LINK SECTOR
 00035 241C CE 2594 	       LDX #BUFFER+4
 00036 241F FF 2614 	       STX INDEX     INIT BUFFER INDEX
 00037 2422 CE 2590 	       LDX #BUFFER
 00038 2425 E6 7C	       LDA B 124,X   GET LAST TRACK
 00039 2427 A6 7D	       LDA A 125,X   GET LAST SECTOR
 00040 2429 F7 2612 	       STA B LTS
 00041 242C B7 2613 	       STA A LTS+1
 00042 242F E6 7A	       LDA B 122,X   GET FIRST TRACK
 00043 2431 27 1D	       BEQ NOTLNK    BR TO NOT LINKED ERROR MSG
 00044 2433 A6 7B	       LDA A 123,X   GET FIRST SECTOR
 00045 2435 F7 2610 	       STA B FTS
 00046 2438 B7 2611 	       STA A FTS+1
 00047 243B BD 24B5 	       JSR RDSEC     READ FIRST SECTOR
 00048			*
 00049			* NOW LOAD SYSTEM FILE INTO MEMORY
 00050			*
 00051 243E 8D 40	BOOT1  BSR GETBYT    GET A DATA BYTE FROM FILE
 00052 2440 81 16	       CMP A #$16    TRANSFER-ADDRESS?
 00053 2442 26 12	       BNE BOOT2     NO
 00054 2444 8D 3A	       BSR GETBYT
 00055 2446 B7 261A 	       STA A ADDRES  GET TRANSFER ADDRESS
 00056 2449 8D 35	       BSR GETBYT
 00057 244B B7 261B 	       STA A ADDRES+1
 00058 244E 20 EE	       BRA BOOT1     GET NEW DATA FRAME
 00059			*       
 00060 2450 CE 255E 	NOTLNK LDX #NBMSG          MESSAGE NOT LINKED
 00061 2453 7E 254B 	       JMP PRERR           GO TO PRINT IT AND EXIT       
 00062			*
 00063 2456 81 02	BOOT2  CMP A #$02    DATA FRAME?
 00064 2458 26 21	       BNE BOOT4     NO
 00065 245A 8D 24	       BSR GETBYT
 00066 245C B7 2616 	       STA A SAVEX   GET ADDRESS
 00067 245F 8D 1F	       BSR GETBYT
 00068 2461 B7 2617 	       STA A SAVEX+1
 00069 2464 8D 1A	       BSR GETBYT
 00070 2466 B7 261C 	       STA A FCNT    GET FRAME COUNTER
 00071 2469 8D 15	BOOT3  BSR GETBYT    GET DATA BYTE
 00072 246B FE 2616 	       LDX SAVEX
 00073 246E A7 00	       STA A 0,X     STORE BYTE
 00074 2470 08		       INX
 00075 2471 FF 2616 	       STX SAVEX
 00076 2474 7A 261C 	       DEC FCNT
 00077 2477 26 F0	       BNE BOOT3
 00078 2479 20 C3	       BRA BOOT1     GET NEW DATA FRAME
 00079			*
 00080 247B FE 261A 	BOOT4  LDX ADDRES    GET TRANSFER ADDRESS
 00081 247E 6E 00	       JMP 0,X       GO THERE
 00082			*
 00083			* READ A DATA BYTE FROM SYSTEM FILE
 00084			* RETURN BYTE IN A REGISTER
 00085			*
 00086 2480 FE 2614 	GETBYT LDX INDEX
 00087 2483 8C 2610 	       CPX #BUFFER+128   NEED NEW SECTOR?
 00088 2486 27 07	       BEQ GETSEC        YES
 00089 2488 A6 00	GETB1  LDA A 0,X         GET BYTE 
 00090 248A 08		       INX
 00091 248B FF 2614 	       STX INDEX         MOVE POINTER
 00092 248E 39		       RTS
 00093 248F F6 2610 	GETSEC LDA B FTS         CURRENT TRACK
 00094 2492 B6 2611 	       LDA A FTS+1       CURRENT SECTOR
 00095 2495 B1 2613 	       CMP A LTS+1       CHECK FOR LAST SECTOR 
 00096 2498 26 07	       BNE GETS2         NOT LAST
 00097 249A F1 2612 	       CMP B LTS
 00098 249D 26 02	       BNE GETS2         NOT LAST
 00099 249F 20 DA	       BRA BOOT4         EOF-GOTO TRANSFER ADDRESS
 00100 24A1 CE 2590 	GETS2  LDX #BUFFER
 00101 24A4 E6 00	       LDA B 0,X         GET FWD LINK TRACK
 00102 24A6 A6 01	       LDA A 1,X         GET FWD LINK SECTOR
 00103 24A8 F7 2610 	       STA B FTS         UPDATE CURRENT T/S
 00104 24AB B7 2611 	       STA A FTS+1
 00105 24AE 8D 05	       BSR RDSEC
 00106 24B0 CE 2594 	       LDX #BUFFER+4
 00107 24B3 20 D3	       BRA GETB1
 00108			*
 00109			* SINGLE SECTOR READ ROUTINE
 00110			*
 00111			* DRIVE=0, TRACK=B, SECTOR=A, BUFFER=X
 00112			*
 00113 24B5 36		RDSEC  PSH A          SAVE SECTOR
 00114 24B6 37		       PSH B          SAVE TRACK
 00115 24B7 FF 2618 	       STX SAVEX2     SAVE BUFFER POINTER
 00116 24BA BD 2529 	       JSR DRIVE      SETUP DRIVE 0
 00117 24BD FE 2618 	       LDX SAVEX2     RESTORE BUFFER POINTER
 00118 24C0 86 05	       LDA A #5       FIVE RETRIES
 00119 24C2 B7 261D 	       STA A RCNT
 00120 24C5 33		RDSEC2 PUL B          GET TRACK
 00121 24C6 32		       PUL A          GET SECTOR
 00122 24C7 FE 2618 	       LDX SAVEX2     GET BUFFER ADRESS
 00123 24CA 36		       PSH A
 00124 24CB 37		       PSH B          PUT BACK ON STACK 
 00125 24CC BD 2505 	RDSEC3 JSR SEEK
 00126 24CF 86 8C	       LDA A #FDRDC   READ COMMAND
 00127 24D1 B7 8018 	       STA A CMDREG
 00128 24D4 BD 2520 	       JSR DEL30U     30 USEC WAIT
 00129 24D7 C6 80	       LDA B #128     SECTOR SIZE=128
 00130 24D9 B6 8018 	READ1  LDA A CMDREG
 00131 24DC 85 02	       BIT A #$02     DATA REG FULL?
 00132 24DE 26 06	       BNE READ2      YES
 00133 24E0 85 01	       BIT A #1       BUSY?
 00134 24E2 26 F5	       BNE READ1      YES
 00135 24E4 20 09	       BRA READ3      ERROR
 00136 24E6 B6 801B 	READ2  LDA A DATREG   GET A BYTE
 00137 24E9 A7 00	       STA A 0,X      STORE IN BUFFER
 00138 24EB 08		       INX
 00139 24EC 5A		       DEC B
 00140 24ED 26 EA	       BNE READ1      DO AGAIN
 00141 24EF B6 8018 	READ3  LDA A CMDREG
 00142 24F2 85 01	       BIT A #1       BUSY?
 00143 24F4 26 F9	       BNE READ3      YES
 00144 24F6 84 1C	READ4  AND A #$1C     MASK OF STATUS BITS
 00145 24F8 27 08	       BEQ READ5      GOOD?
 00146 24FA 7A 261D 	       DEC RCNT       NO, TRY AGAIN?
 00147 24FD 26 C6	       BNE RDSEC2
 00148 24FF 7E 2548 	QUIT   JMP ERROR      FAILED 5 TIMES, ERROR
 00149 2502 33		READ5  PUL B          CLEAN STACK
 00150 2503 32		       PUL A
 00151 2504 39		       RTS            GOOD READ
 00152			*
 00153			* SEEK TRACK=B, SECTOR=A
 00154			*
 00155 2505 F1 8019 	SEEK   CMP B TRKREG   ON TRACK?
 00156 2508 27 13	       BEQ SEEK2      YES
 00157 250A F7 801B 	       STA B DATREG   NO
 00158 250D 8D 11	       BSR DEL30U
 00159 250F C6 1B	       LDA B #FDSKI   SEEK COMMAND
 00160 2511 F7 8018 	       STA B CMDREG
 00161 2514 8D 0A	       BSR DEL30U
 00162 2516 F6 8018 	SEEK1  LDA B CMDREG
 00163 2519 C5 01	       BIT B #1       BUSY?
 00164 251B 26 F9	       BNE SEEK1      WAIT UNTIL DONE
 00165 251D B7 801A 	SEEK2  STA A SECREG   SET SECTOR
 00166			*
 00167			* 30 USEC DELAY  FOR CONTROLLER CHIP
 00168			*
 00169 2520 08		DEL30U INX
 00170 2521 09		       DEX
 00171 2522 08		       INX
 00172 2523 09		       DEX
 00173 2524 08		       INX
 00174 2525 09		       DEX
 00175 2526 08		       INX
 00176 2527 09		       DEX
 00177 2528 39		       RTS
 00178			*
 00179			* SELECT DRIVE 0
 00180			*
 00181 2529 F6 8018 	DRIVE  LDA B CMDREG
 00182 252C C4 80	       AND B #$80     READY? 
 00183 252E 27 13	       BEQ DRIVE1     YES
 00184 2530 CE 0000 	       LDX #0000
 00185 2533 08		DRV0   INX
 00186 2534 26 FD	       BNE DRV0
 00187 2536 08		DRV1   INX
 00188 2537 26 FD	       BNE DRV1
 00189 2539 F6 8018 	       LDA B CMDREG
 00190 253C C4 80	       AND B #$80     READY?
 00191 253E 27 03	       BEQ DRIVE1     YES
 00192 2540 7E 2548 	DRIVE0 JMP ERROR      NO, ERROR
 00193 2543 7F 8014 	DRIVE1 CLR DRVREG     SET DRIVE=0
 00194 2546 20 D8	       BRA DEL30U
 00195			*
 00196			* ERROR
 00197			*
 00198 2548 CE 2551 	ERROR  LDX #EMSG
 00199 254B BD E07E 	PRERR  JSR $E07E      DISPLAY ERROR MSG USING SWTBUG PRINT STRING ROUTINE (PDATA1) 
 00200 254E 7E E113 	       JMP $E113      GO TO SWTBUG PROMPT
 00201 2551 44 49 53 4B	EMSG   FCC 'DISK ERROR'
 00202 255B 0D 0A 04	       FCB $0D,$0A,$04
 00203 255E 4E 4F 54 20	NBMSG  FCC 'NOT LINKED'
 00204 2568 0D 0A 04	       FCB $0D,$0A,$04
 00205			
 00206 256B 00 00 00 00	       FCB 0,0,0,0,0,0,0,0       FILL WITH ZEROS TO CHECK NOT EXCEDDING 3x128-2 BYTES
 00207 2573 00 00 00 00	       FCB 0,0,0,0,0,0,0,0       FOR BOOT PROGRAM 
 00208 257B 00 00 00 00	       FCB 0,0,0,0,0,0,0,0
 00209			       
 00210			*
 00211			* ENTRY POINT WHEN EXECUTED AS A CP68 TRANSIENT COMMAND
 00212			*
 00213 2583 CE 258C 	CSTART LDX #PRERR2    CHANGE PRERR CALL FROM SWTBUG PRINT STRING ROUTINE TO PRERR2 
 00214 2586 FF 254C 	       STX PRERR+1 
 00215 2589 7E 2400 	       JMP START      NORMAL START 
 00216 258C 3F		PRERR2 SWI PRTMSG     PRINT STRING USING CP68 SVC CALL
 00217 258D 31		        FCB $31       
 00218 258E 3F		       SWI WARMS      CP68 WARM START
 00219 258F 1F		        FCB $1F
 00220			       
 00221			*
 00222			* VARIABLES:
 00223			*
 00224 2590 0080	BUFFER RMB 128   SECTOR BUFFER
 00225 2610 0002	FTS    RMB 2     CURRENT T/S 
 00226 2612 0002	LTS    RMB 2     LAST T/S
 00227 2614 0002	INDEX  RMB 2     PTR TO NEXT BYTE TO GET FROM SECTOR BUFFER
 00228 2616 0002	SAVEX  RMB 2     TEMP
 00229 2618 0002	SAVEX2 RMB 2     TEMP
 00230 261A 0002	ADDRES RMB 2     TRANSFER ADDRES (BOOTED PROG ENTRY POINT)
 00231 261C 0001	FCNT   RMB 1     COUNT OF BYTES IN LOADED PROG FRAME
 00232 261D 0001	RCNT   RMB 1     RETRY COUNT
 00233			       
 00234 261E		       END
 00235			
