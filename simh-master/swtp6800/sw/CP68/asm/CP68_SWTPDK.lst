 00001			* NAM SWTPDK
 00002			*
 00003			* DISK DRIVERS FOR SOUTHWEST TECHNICAL PRODUCTOS
 00004			*
 00005			* MODIFIED BY ROBERTO SANCHO TO SUPPORT MF68 DISKS ON SWTPC SIMH EMULATION
 00006			* APR/2022
 00007			*
 00008			* DISK GEOMETRY: 35 TRACKS X 18 SECTORS X 128 BYTES
 00009			* TRACK 0 HAS SECTORS NUMBERED 0,2..18 (NO SECTOR ONE, FIRST SECTOR IS ZERO).
 00010			* TRACK 1..34 HAS SECTORS NUMBERED 1,2..18
 00011			* THIS IS THE SAME LAYOUT AS FLEX 1.0 ON MF68 
 00012			*
 00013			* TRACK 0: SECTOR 0,2,3: HOLDS BOOT PROGRAM
 00014			* TRACK 0: SECTOR 4..18: DIRECTORY
 00015			* TRACK 1..34: DATA SECTORS FOR FILES
 00016			*
 00017			* FC1771 COMMANDS
 00018			*
 00019      000B 	FDRSC  EQU $0B    RESTORE
 00020      001B 	FDSKI  EQU $1B    SEEK
 00021      008C 	FDRDC  EQU $8C    READ A SECTOR
 00022      00AC 	FDWRC  EQU $AC    WRITE A SECTOR
 00023			
 00024      8014 	DRVREG EQU $8014  DRIVE REGISTER
 00025      8018 	CMDREG EQU $8018  COMMAND REGISTER  
 00026      8019 	TRKREG EQU $8019  TRACK REGISTER
 00027      801A 	SECREG EQU $801A  SECTOR REGISTER
 00028      801B 	DATREG EQU $801B  DATA REGISTER
 00029			*
 00030			* FCB DEFINITIONS:
 00031			*
 00032      0005 	FCBSTA EQU 5  STATUS 
 00033      0007 	FCBDBA EQU 7  DATA BUFFER ADDRESS
 00034      0009 	FCBDRV EQU 9  DRIVE#
 00035      000A 	FCBTRK EQU 10 TRACK# 
 00036      000B 	FCBSCT EQU 11 SECTOR# 
 00037			*
 00038			* USER REGISTERS
 00039			*
 00040      0006 	UA     EQU 6  RETURN "A"
 00041      0007 	UXH    EQU 7  X-REG (FCBADR)
 00042			*
 00043			*
 00044      0000 	CTRK0  EQU 0        
 00045      0001 	CTRK1  EQU 1        
 00046      0002 	CTRK2  EQU 2        
 00047      0003 	CTRK3  EQU 3        
 00048      0004 	CDRIV  EQU 4        
 00049      0005 	RCNT   EQU 5        
 00050			*
 00051			* START ADDRESS OF DISK DRIVER FOR MF68
 00052			*
 00053      1D5A	       ORG $1D5A
 00054			*
 00055			* ENTRY POINTS
 00056			*
 00057 1D5A 7E 1D75 	INTDK  JMP INTDK0     INIT DISK
 00058 1D5D 7E 1D66 	COLD   JMP COLD0      COLD START
 00059 1D60 7E 1D83 	RDSEC  JMP RDSEC0     READ SECTOR
 00060 1D63 7E 1DB5 	WTSEC  JMP WTSEC0     WRITE SECTOR
 00061			*
 00062			* COLD START. INIT SWTBUG SYSTEM
 00063			*
 00064 1D66 CE 0103 	COLD0  LDX #$0103     SET SWI JMP VECTOR FOR SWTBUG
 00065 1D69 FF A012 	       STX $A012      
 00066 1D6C CE 8004 	       LDX #$8004     SET SWTBUG ACIA ADDRESS
 00067 1D6F FF 04C4 	       STX $04C4       
 00068 1D72 7E 07C1 	       JMP $07C1      CP68 COLD START      
 00069			*
 00070			* INIT THE DISK SYSTEM
 00071			*
 00072 1D75 86 FF	INTDK0 LDA A #$FF
 00073 1D77 97 00	       STA A CTRK0       
 00074 1D79 97 01	       STA A CTRK1
 00075 1D7B 97 02	       STA A CTRK2       
 00076 1D7D 97 03	       STA A CTRK3
 00077 1D7F 7F 0004 	       CLR CDRIV
 00078 1D82 39		       RTS       
 00079			*
 00080			* READ A SECTOR
 00081			*
 00082 1D83 3F		RDSEC0 SWI TABX       GET FCBADR
 00083 1D84 03		        FCB 3       
 00084 1D85 A6 09	       LDA A FCBDRV,X GET DRIVE#
 00085 1D87 CE 0000 	       LDX #CTRK0     POINT TO TRACK TABLE
 00086 1D8A 3F		       SWI ADDAX      ADD OFFSET
 00087 1D8B 09		        FCB 9
 00088 1D8C E6 00	       LDA B 0,X      GET ENTRY
 00089 1D8E C1 FF	       CMP B #$FF     INITIALIZED?
 00090 1D90 26 05	       BNE RDSEC1     YES
 00091			*
 00092 1D92 BD 1EC7 	       JSR RESTOR     SEEK TRACK0
 00093 1D95 25 53	       BCS QUIT10     ERROR
 00094			*
 00095 1D97 BD 1E9C 	RDSEC1 JSR DRIVE
 00096 1D9A 25 4E	       BCS QUIT10     ERROR
 00097			*
 00098 1D9C 86 05	       LDA A #5
 00099 1D9E 97 05	       STA A RCNT
 00100			*
 00101 1DA0 30		RDSEC2 TSX
 00102 1DA1 EE 07	       LDX UXH,X      GET FCBADR
 00103 1DA3 A6 0A	       LDA A FCBTRK,X GET TRACK#        
 00104 1DA5 E6 0B	       LDA B FCBSCT,X GET SECTOR
 00105 1DA7 EE 07	       LDX FCBDBA,X   GET BUFFER ADRESS
 00106			*
 00107 1DA9 BD 1DF4 	       JSR READ       GET A SECTOR
 00108 1DAC 27 3C	       BEQ QUIT10     OK
 00109			*
 00110 1DAE 7A 0005 	       DEC RCNT       RETRY AGAIN?
 00111 1DB1 26 ED	       BNE RDSEC2     YES
 00112 1DB3 20 30	       BRA QUIT
 00113			*
 00114			* WRITE A SECTOR
 00115			*
 00116 1DB5 3F		WTSEC0 SWI TABX          X=FCBADR
 00117 1DB6 03		        FCB 3
 00118 1DB7 A6 09	       LDA A FCBDRV,X GET DRIVE#
 00119 1DB9 CE 0000 	       LDX #CTRK0     POINT TO TABLE
 00120 1DBC 3F		       SWI ADDAX         ADD OFFSET
 00121 1DBD 09		        FCB 9
 00122 1DBE E6 00	       LDA B 0,X      GET ENTRY
 00123 1DC0 C1 FF	       CMP B #$FF     INITIALIZED?
 00124 1DC2 26 05	       BNE WTSEC1     YES      
 00125			* 
 00126 1DC4 BD 1EC7 	       JSR RESTOR     
 00127 1DC7 25 21	       BCS QUIT10     
 00128			*
 00129 1DC9 BD 1E9C 	WTSEC1 JSR DRIVE
 00130 1DCC 25 1C	       BCS QUIT10     
 00131			*
 00132 1DCE 86 05	       LDA A #5
 00133 1DD0 97 05	       STA A RCNT
 00134			*
 00135 1DD2 30		WTSEC2 TSX
 00136 1DD3 EE 07	       LDX UXH,X      GET FCBADR
 00137 1DD5 A6 0A	       LDA A FCBTRK,X GET TRACK#        
 00138 1DD7 E6 0B	       LDA B FCBSCT,X GET SECTOR
 00139 1DD9 EE 07	       LDX FCBDBA,X   GET BUFFER ADRESS
 00140			*
 00141 1DDB BD 1E24 	       JSR WRITE
 00142 1DDE 27 0A	       BEQ QUIT10     OK
 00143			*
 00144 1DE0 7A 0005 	       DEC RCNT       TRY AGAIN?
 00145 1DE3 26 ED	       BNE WTSEC2     YES
 00146			*
 00147 1DE5 4D		QUIT   TST A          OK?
 00148 1DE6 27 02	       BEQ QUIT10     YES
 00149			*
 00150 1DE8 86 05	       LDA A #5       ERROR
 00151			*
 00152 1DEA 30		QUIT10 TSX
 00153 1DEB A7 06	       STA A UA,X     STORE RC IN USER A-REG
 00154 1DED EE 07	       LDX UXH,X      GET FCBADR
 00155 1DEF AA 05	       ORA A FCBSTA,X
 00156 1DF1 A7 05	       STA A FCBSTA,X
 00157 1DF3 39		       RTS
 00158			*
 00159			*
 00160			* READ A SECTOR (A=TRK, B=SECTOR)
 00161			*
 00162 1DF4 BD 1E4D 	READ   JSR SEEK
 00163 1DF7 86 8C	       LDA A #FDRDC   READ
 00164 1DF9 B7 8018 	       STA A CMDREG
 00165 1DFC BD 1E6A 	       JSR DEL30U     DELAY
 00166 1DFF C6 80	       LDA B #128     128 BYTES/SECTOR     
 00167			*
 00168 1E01 B6 8018 	READ1  LDA A CMDREG
 00169 1E04 85 02	       BIT A #$02     DATA REG FULL?
 00170 1E06 26 06	       BNE READ2      YES
 00171			*
 00172 1E08 85 01	       BIT A #1       BUSY?
 00173 1E0A 26 F5	       BNE READ1      YES
 00174			*
 00175 1E0C 20 0B	       BRA READ3      ERROR
 00176			*
 00177 1E0E B6 801B 	READ2  LDA A DATREG   GET A BYTE
 00178 1E11 A7 00	       STA A 0,X      STORE IN BUFFER
 00179 1E13 08		       INX
 00180 1E14 5A		       DEC B
 00181 1E15 26 EA	       BNE READ1      DO AGAIN
 00182			*
 00183 1E17 8D 03	       BSR WBUSY      WAIT TILL DONE
 00184			*
 00185 1E19 84 1C	READ3  AND A #$1C     MASK OF STATUS BITS
 00186 1E1B 39		       RTS
 00187			*
 00188 1E1C B6 8018 	WBUSY  LDA A CMDREG
 00189 1E1F 85 01	       BIT A #1       BUSY?
 00190 1E21 26 F9	       BNE WBUSY      YES
 00191			*
 00192 1E23 39		       RTS
 00193			*
 00194			* WRITE A SECTOR (A=TRK, B=SECTOR, X=DATA BUFFER)
 00195			*
 00196 1E24 BD 1E4D 	WRITE  JSR SEEK
 00197 1E27 86 AC	       LDA A #FDWRC   WRITE COMMAND
 00198 1E29 B7 8018 	       STA A CMDREG
 00199 1E2C BD 1E6A 	       JSR DEL30U
 00200 1E2F C6 80	       LDA B #128     128 BYTES/SECTOR
 00201			*
 00202 1E31 B6 8018 	WRITE1 LDA A CMDREG
 00203 1E34 85 02	       BIT A #2       REG EMPTY?
 00204 1E36 26 06	       BNE WRITE2     YES
 00205			*
 00206 1E38 85 01	       BIT A #1       BUSY?
 00207 1E3A 26 F5	       BNE WRITE1     YES
 00208			*
 00209 1E3C 20 00	       BRA WRITE2     ERROR
 00210			*
 00211 1E3E A6 00	WRITE2 LDA A 0,X      GET A BYTE
 00212 1E40 B7 801B 	       STA A DATREG
 00213 1E43 08		       INX
 00214 1E44 5A		       DEC B
 00215 1E45 26 EA	       BNE WRITE1     DO AGAIN
 00216			*
 00217 1E47 BD 1E1C 	       JSR WBUSY      WAIT FOR BUSY
 00218			*
 00219 1E4A 84 5C	WRITE3 AND A #$5C     MASK OFF STATUS BITS
 00220 1E4C 39		       RTS
 00221			*
 00222			* SEEK TRACK IN A-REG
 00223			*
 00224 1E4D B1 8019 	SEEK   CMP A TRKREG   ON TRACK?
 00225 1E50 27 11	       BEQ SEEK2      YES
 00226			*
 00227 1E52 B7 801B 	       STA A DATREG   NO, STORE TRACK#
 00228 1E55 BD 1E6A 	       JSR DEL30U
 00229 1E58 86 1B	       LDA A #FDSKI   SEEK COMMAND
 00230 1E5A B7 8018 	       STA A CMDREG
 00231 1E5D BD 1E6A 	       JSR DEL30U
 00232 1E60 BD 1E1C 	       JSR WBUSY      WAIT FOR BUSY
 00233			*
 00234 1E63 F7 801A 	SEEK2  STA B SECREG   SET SECTOR
 00235 1E66 BD 1E6A 	       JSR DEL30U
 00236 1E69 39		       RTS
 00237			*
 00238			* DELAY 30 USECS
 00239			*
 00240 1E6A 08		DEL30U INX
 00241 1E6B 09		       DEX
 00242 1E6C 08		       INX
 00243 1E6D 09		       DEX
 00244 1E6E 08		       INX
 00245 1E6F 09		       DEX
 00246 1E70 08		       INX
 00247 1E71 09		       DEX
 00248 1E72 39		       RTS
 00249			*
 00250			* DELAY ONE SECOND
 00251			*
 00252 1E73 3F		DEL1S  SWI PSHX
 00253 1E74 05		        FCB 5
 00254 1E75 36		       PSH A
 00255 1E76 86 02	       LDA A #2
 00256 1E78 CE 0000 	       LDX #0000
 00257			*
 00258 1E7B 08		DEL1SA INX
 00259 1E7C 26 FD	       BNE DEL1SA
 00260			*
 00261 1E7E 4A		       DEC A
 00262 1E7F 26 FA	       BNE DEL1SA
 00263			*
 00264 1E81 32		       PUL A 
 00265 1E82 3F		       SWI PULX
 00266 1E83 06		        FCB 6
 00267 1E84 39		       RTS
 00268			*
 00269			* TURN ON MOTORS (A=UNIT#)
 00270			*
 00271 1E85 F6 8018 	MOTOR  LDA B CMDREG
 00272 1E88 C4 80	       AND B #$80     READY?
 00273 1E8A 27 0E	       BEQ MOTOR1     YES
 00274			*
 00275 1E8C BD 1E73 	       JSR DEL1S      DELAY A SECOND
 00276			*
 00277 1E8F F6 8018 	       LDA B CMDREG
 00278 1E92 C4 80	       AND B #$80     READY?
 00279 1E94 27 04	       BEQ MOTOR1     YES
 00280			*
 00281 1E96 86 0A	       LDA A #10      ERROR CODE
 00282 1E98 0D		       SEC
 00283 1E99 39		       RTS
 00284			*
 00285 1E9A 0C		MOTOR1 CLC
 00286 1E9B 39		       RTS
 00287			*
 00288			* DRIVE SELECT (A=DRIVE#)
 00289			*
 00290 1E9C 84 03	DRIVE  AND A #3
 00291 1E9E 36		       PSH A
 00292 1E9F 8D 1A	       BSR DSEL1
 00293 1EA1 8D E2	       BSR MOTOR
 00294 1EA3 25 14	       BCS DRIV1
 00295			*
 00296 1EA5 F6 8019 	       LDA B TRKREG   GET CURRENT TRACK
 00297 1EA8 E7 00	       STA B 0,X      SAVE IN TABLE
 00298 1EAA B7 8014 	       STA A DRVREG   INIT REGISTER
 00299 1EAD 97 04	       STA A CDRIV    NEW CURRENT DRIVE
 00300 1EAF 8D 0A	       BSR DSEL1
 00301 1EB1 A6 00	       LDA A 0,X      GET CURRENT TRK
 00302 1EB3 B7 8019 	       STA A TRKREG
 00303 1EB6 BD 1E6A 	       JSR DEL30U
 00304 1EB9 32		DRIV1  PUL A
 00305 1EBA 39		       RTS
 00306			*
 00307 1EBB CE 0000 	DSEL1  LDX #CTRK0     POINT TO TABLE
 00308 1EBE D6 04	       LDA B CDRIV
 00309 1EC0 27 04	       BEQ DSEL3
 00310			*
 00311 1EC2 08		DSEL2  INX
 00312 1EC3 5A		       DEC B
 00313 1EC4 26 FC	       BNE DSEL2
 00314			*
 00315 1EC6 39		DSEL3  RTS
 00316			*
 00317			* RESTORE SEEK TRACK0 (X=CTRLx)
 00318			*
 00319 1EC7 36		RESTOR PSH A
 00320 1EC8 BD 1E9C 	       JSR DRIVE
 00321 1ECB 25 0E	       BCS RESTR1     ERROR  
 00322			*
 00323 1ECD 86 0B	       LDA A #FDRSC   RESTORE COMMAND
 00324 1ECF B7 8018 	       STA A CMDREG
 00325 1ED2 BD 1E6A 	       JSR DEL30U
 00326			*
 00327 1ED5 BD 1E1C 	       JSR WBUSY
 00328 1ED8 6F 00	       CLR 0,X        CTRKx:=00
 00329 1EDA 0C		       CLC
 00330			*
 00331 1EDB 32		RESTR1 PUL A
 00332 1EDC 39		       RTS
 00333			*
 00334 1EDD		       END
 00335			*
