 00001			* INITIALIZE A DISK FOR CP/68 OPERATING SYSTEM
 00002			* BASED ON ICOM 8 INCH FLOPPY DISK PROGRAM BY J. HEMENWAY 1979
 00003			* 
 00004			* MODIFIED BY ROBERTO SANCHO TO SUPPORT MF68 DISKS ON SWTPC SIMH EMULATION
 00005			* APR/2022 (FROM LISTING IN PDF P166)
 00006			*
 00007			* DISK GEOMETRY: 35 TRACKS X 18 SECTORS X 128 BYTES
 00008			* TRACK 0 HAS SECTORS NUMBERED 0,2..18 (NO SECTOR ONE, FIRST SECTOR IS ZERO).
 00009			* TRACK 1..34 HAS SECTORS NUMBERED 1,2..18
 00010			* THIS IS THE SAME LAYOUT AS FLEX 1.0 ON MF68 
 00011			*
 00012			* TRACK 0: SECTOR 0,2,3: HOLDS BOOT PROGRAM
 00013			* TRACK 0: SECTOR 4..18: DIRECTORY
 00014			* TRACK 1..34: DATA SECTORS FOR FILES
 00015			*
 00016			* DISK ATTRIBUTES
 00017			*
 00018      0080 	SECSIZ EQU 128    128 BYTES PER SECTOR
 00019      0012 	TRKSIZ EQU 18     18 SECTORS PER TRACK
 00020      0022 	DSKSIZ EQU 34     34 DATA TRACKS ON DISK (LESS TRACK 0) 
 00021			*
 00022			* FCB DEFINITIONS:
 00023			*
 00024      0005 	FCBSTA EQU 5  ERROR STATUS FLAG
 00025      0007 	FCBDBA EQU 7  DATA BUFFER ADDRESS
 00026      0009 	FCBDRV EQU 9  DRIVE NUMBER
 00027      000A 	FCBTRK EQU 10 TRACK NUMBER
 00028      000B 	FCBSCT EQU 11 SECTOR NUMBER
 00029      000C 	FCBTlK EQU 12 TRACK LINK POINTER
 00030      000D 	FCBSLK EQU 13 SECTOR LINK POINTER
 00031			*
 00032			* COMMAND-LINE INTERPRETER BASE-PAGE LOCATIONS
 00033			*
 00034      0020 	DESCRA EQU $20   ADDRESS OF TOKEN
 00035      0027 	VALUE  EQU $27   VALUE OF NUMERIC TOKEN
 00036			*
 00037			
 00038      2000	       ORG $2000
 00039			
 00040 2000 00 00	FCBSPC FCB 0,0
 00041 2002 44 53 4B	       FCC 'DSK'
 00042 2005 00		       FCB 0
 00043 2006 FF		       FCB $FF
 00044 2007 00 00 00 00	       FCB 0,0,0,0,0,  0,0,0,0,0    SIZE: 35 BYTES
 00045 2011 00 00 00 00	       FCB 0,0,0,0,0,  0,0,0,0,0  
 00046 201B 00 00 00 00	       FCB 0,0,0,0,0,  0,0,0,0,0  
 00047 2025 00 00 00 00	       FCB 0,0,0,0,0
 00048			       
 00049 202A 00 00 00 00	BUFFER FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0      SIZE 128 BYTES = SECTOR BUFFER
 00050 203A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00051 204A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00052 205A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00053			
 00054 206A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00055 207A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00056 208A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00057 209A 00 00 00 00	       FCB 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0
 00058			
 00059 20AA 49 4E 49 54	PROMPT FCC 'INIT. DISK IN DRIVE '
 00060 20BE 00		DRVNO  FCB 0
 00061 20BF 20 3F 20	       FCC ' ? '
 00062 20C2 04		       FCB $04
 00063			
 00064			* INIT ENTRY POINT 
 00065			
 00066 20C3 96 28	INITR  LDA A VALUE+1      GET DRIVE TO INIT   .*tron0 
 00067 20C5 84 03	       AND A #$03         MAX 4 DRIVES
 00068 20C7 CE 2000 	       LDX   #FCBSPC      POINT T0 FCB
 00069 20CA A7 09	       STA A FCBDRV,X     STORE DRIVE NUM
 00070 20CC 8B 30	       ADD A #$30         MAKE DRV NUM ASCII
 00071 20CE B7 20BE 	       STA A DRVNO        PUT IN PROMPT LINE
 00072 20D1 CE 20AA 	       LDX   #PROMPT      
 00073 20D4 3F		       SWI PRTMSG         OUTPUT PROMPT 
 00074 20D5 31		        FCB 49
 00075 20D6 3F		       SWI GTCMD          GET USER RESPONSE
 00076 20D7 30		        FCB 48
 00077 20D8 DE 20	       LDX   DESCRA       
 00078 20DA A6 00	       LDA A 0,X          GET FIRST CAHR OF RESPONSE
 00079 20DC 81 59	       CMP A #'Y'         WAS IT 'YES'?
 00080 20DE 27 01	       BEQ   INITR2       BR IF YES
 00081 20E0 39		       RTS                QUIT
 00082			                          
 00083 20E1 CE 2000 	INITR2 LDX   #FCBSPC                           
 00084 20E4 6F 0A	       CLR   FCBTRK,X     TRAK=0
 00085 20E6 6F 0B	       CLR   FCBSCT,X     SECTOR=0
 00086 20E8 3F		       SWI TXAB  
 00087 20E9 02		        FCB 2        
 00088 20EA CE 2239 	       LDX   #BOOT        POINT TO BOOT CODE
 00089 20ED 3F		       SWI XABX          
 00090 20EE 04		        FCB 4
 00091 20EF A7 07	       STA A FCBDBA,X
 00092 20F1 E7 08	       STA B 8,X
 00093 20F3 8D 47	       BSR   WRTBL        WRITE FIRST SECTOR -> FIRST 128 BYTES OF BOOT PROG
 00094 20F5 6D 05	       TST   FCBSTA,X     DISK ERROR?
 00095 20F7 27 02	       BEQ   INIT2B       BR IF NO ERROR
 00096 20F9 20 32	       BRA   INITQ0       FATAL ERROR, QUIT
 00097 20FB 6C 0B	INIT2B INC   FCBSCT,X     
 00098 20FD 6C 0B	       INC   FCBSCT,X     SECTOR=2
 00099 20FF 3F		       SWI TXAB
 00100 2100 02		        FCB 2        
 00101 2101 CE 22B9 	       LDX   #BOOT+$80
 00102 2104 3F		       SWI XABX
 00103 2105 04		        FCB 4
 00104 2106 A7 07	       STA A FCBDBA,X
 00105 2108 E7 08	       STA B 8,X
 00106 210A 8D 30	       BSR   WRTBL        WRITE SECOND SECTOR -> SECOND 128 BYTES OF BOOT PROG
 00107 210C 6D 05	       TST   FCBSTA,X     DISK ERROR?
 00108 210E 27 02	       BEQ   INIT2C       BR IF NO ERROR
 00109 2110 20 1B	       BRA   INITQ0       FATAL ERROR, QUIT
 00110 2112 6C 0B	INIT2C INC   FCBSCT,X     SECTOR=3
 00111 2114 3F		       SWI TXAB
 00112 2115 02		        FCB 2        
 00113 2116 CE 2339 	       LDX   #BOOT+$100   WRITE THIRD BLOCK -> THIRD 128 BYTES OF BOOT PROG
 00114 2119 3F		       SWI XABX           BOOT PROG CAN HAVE UP TO 128x3-6 BYTES
 00115 211A 04		        FCB 4
 00116 211B A7 07	       STA A FCBDBA,X
 00117 211D E7 08	       STA B 8,X
 00118 211F 86 01	       LDA A #$01         SET 01/01 AS TWO LAST BYTES OF SECTOR 3
 00119 2121 B7 23B7 	       STA A BOOT+$17E           
 00120 2124 B7 23B8 	       STA A BOOT+$17F           
 00121 2127 8D 13	       BSR   WRTBL        WRITE SECTOR 3 - LAST 128 BYTES OF BOOT SECTOR      
 00122 2129 6D 05	       TST   FCBSTA,X     ERROR?      
 00123 212B 27 02	       BEQ   INIT2D       BR IF NOT      
 00124 212D 20 5C	INITQ0 BRA   INITQ        ERROR     
 00125 212F 3F		INIT2D SWI   TXAB         RESTORE BACK EMPTY BUFFER      
 00126 2130 02		        FCB 2        
 00127 2131 CE 202A 	       LDX   #BUFFER      AS SECTOR DATA ORIGIN              
 00128 2134 3F		       SWI XABX                 
 00129 2135 04		        FCB 4
 00130 2136 A7 07	       STA A FCBDBA,X                 
 00131 2138 E7 08	       STA B 8,X                 
 00132 213A 20 02	       BRA   INITR3       GO TO WRITE SECTOR #4 - FIRST DIR SECTOR     
 00133			           
 00134 213C 20 76	WRTBL  BRA   WRTBLK       JMP TO OUT OF RANGE "BSR WRTBLK"
 00135			           
 00136 213E 6C 0B	INITR3 INC   FCBSCT,X SECTOR=4
 00137 2140 7F 20A8 	       CLR   BUFFER+SECSIZ-2
 00138 2143 7F 20A9 	       CLR   BUFFER+SECSIZ-1
 00139			           
 00140 2146 8D 6C	INITR4 BSR   WRTBLK       INIT DIR TO ZERO: WRT SECTOR
 00141 2148 6D 05	       TST   FCBSTA,X     ERROR? 
 00142 214A 27 02	       BEQ   INIT4B       BR IF OK
 00143 214C 20 3D	       BRA   INITQ        ERROR
 00144 214E A6 0B	INIT4B LDA A FCBSCT,X     GET CURRENT SECT
 00145 2150 4C		       INC A              NEXT SECT
 00146 2151 81 12	       CMP A #TRKSIZ      END OF TRACK?
 00147 2153 27 04	       BEQ   INITR5       BR IF YES
 00148 2155 A7 0B	       STA A FCBSCT,X
 00149 2157 20 ED	       BRA   INITR4       CONT WRITING
 00150			           
 00151 2159 86 01	INITR5 LDA A #$01         INIT REST OF DISK 
 00152 215B A7 0B	       STA A FCBSCT,X     SECTOR=1
 00153 215D A7 0A	       STA A FCBTRK,X     TRACK=1
 00154 215F 16		       TAB  
 00155 2160 5C		INITR6 INC B              MAKE SECTOR LINKAGE
 00156 2161 C1 13	       CMP B #TRKSIZ+1    END OF TRACK?
 00157 2163 26 09	       BNE   INITR7       NO
 00158 2165 C6 01	       LDA B #$01
 00159 2167 4C		       INC A              .*echo trk:a
 00160 2168 81 23	       CMP A #DSKSIZ+1    END OF DISK?
 00161 216A 26 02	       BNE   INITR7       NO
 00162 216C 4F		       CLR A              LAST SECTOR POINTS TO 0,0
 00163 216D 5F		       CLR B
 00164 216E B7 202A 	INITR7 STA A BUFFER       TRACK LINK
 00165 2171 37		       PSH B              SAVE LSEC
 00166 2172 8D 33	       BSR   GETSC        GET PSEC 
 00167 2174 F7 202B 	       STA B BUFFER+1     SECTOR LINK
 00168 2177 33		       PUL B              RESTORE LSEC
 00169 2178 8D 3A	       BSR   WRTBLK       WRITE SECTOR
 00170 217A 4D		       TST A              DONE?
 00171 217B 26 04	       BNE   INITR8       NO
 00172 217D 5D		       TST B              DONE?
 00173 217E 26 01	       BNE   INITR8       NO
 00174 2180 39		       RTS                YES! DONE
 00175 2181 A7 0A	INITR8 STA A FCBTRK,X     
 00176 2183 37		       PSH B              SAVE LSEC
 00177 2184 8D 21	       BSR   GETSC        GET PSEC
 00178 2186 E7 0B	       STA B FCBSCT,X     
 00179 2188 33		       PUL B              GET LSEC
 00180 2189 20 D5	       BRA   INITR6       KEEP WRITING
 00181			
 00182 218B CE 2191 	INITQ  LDX   #QMSG        MSG INITIALIZATION FAILED
 00183 218E 3F		       SWI PRTMSG
 00184 218F 31		        FCB 49
 00185 2190 39		       RTS 
 00186 2191 49 4E 49 54	QMSG   FCC 'INITIALIZATION FAILED' 
 00187 21A6 0D		       FCB $0D              
 00188			
 00189 21A7 3F		GETSC  SWI PSHX           CONVERT LSEC (LOGICAL SECT) TO PSEC (PHYSICAL SECT)
 00190 21A8 05		        FCB 5
 00191 21A9 CE 2227 	       LDX   #TBL         X=PHYSICAL TO LOGICAL TABLE
 00192 21AC 3F		       SWI ADDBX
 00193 21AD 0A		        FCB 10
 00194 21AE 09		       DEX                SECTOR STARTS AT 1
 00195 21AF E6 00	       LDA B 0,X          GET PSEC
 00196 21B1 3F		       SWI PULX           RESTORE X-REG
 00197 21B2 06		        FCB 6 
 00198 21B3 39		       RTS  
 00199			           
 00200 21B4 36		WRTBLK PSH A              WRITE A SECTOR WITH ERROR CHECKING
 00201 21B5 4F		       CLR A
 00202 21B6 6F 05	       CLR   FCBSTA,X     CLEAR ERROR FLAG
 00203 21B8 3F		       SWI IOHDR             
 00204 21B9 13		        FCB 19
 00205 21BA A7 05	       STA A FCBSTA,X       
 00206 21BC 4D		       TST A              ERROR?
 00207 21BD 26 02	       BNE   WRTERR       YES
 00208 21BF 32		       PUL A
 00209 21C0 39		       RTS  
 00210			           
 00211 21C1 16		WRTERR TAB             
 00212 21C2 8D 53	       BSR   OUTHL        CONVERT LEFT DIGIT
 00213 21C4 B7 21FE 	       STA A ERTYPE
 00214 21C7 17		       TBA  
 00215 21C8 8D 51	       BSR   OUTHR        CONVERT RIGHT DIGIT
 00216 21CA B7 21FF 	       STA A ERTYPE+1
 00217 21CD 3F		       SWI PSHX           SAVE X
 00218 21CE 05		        FCB 5
 00219 21CF A6 0B	       LDA A FCBSCT,X
 00220 21D1 8D 44	       BSR   OUTHL        MAKE SECT NUM HEX
 00221 21D3 B7 220B 	       STA A SECT
 00222 21D6 A6 0B	       LDA A FCBSCT,X
 00223 21D8 8D 41	       BSR   OUTHR
 00224 21DA B7 220C 	       STA A SECT+1
 00225 21DD A6 0A	       LDA A FCBTRK,X
 00226 21DF 8D 36	       BSR   OUTHL
 00227 21E1 B7 2214 	       STA A TRACK
 00228 21E4 A6 0A	       LDA A FCBTRK,X
 00229 21E6 8D 33	       BSR   OUTHR
 00230 21E8 B7 2215 	       STA A TRACK+1
 00231 21EB CE 21F3 	       LDX   #DERROR
 00232 21EE 3F		       SWI PRTMSG
 00233 21EF 31		        FCB 49
 00234 21F0 3F		       SWI WARMSTART
 00235 21F1 1F		        FCB 31
 00236 21F2 39		       RTS  
 00237			       
 00238 21F3 44 49 53 4B	DERROR FCC 'DISK ERROR:'
 00239 21FE 00 00	ERTYPE FCB 0,0
 00240 2200 20 41 54 20	       FCC ' AT SECTOR '
 00241 220B 00 00	SECT   FCB 0,0
 00242 220D 20 54 52 41	       FCC ' TRACK '
 00243 2214 00 00	TRACK  FCB 0,0                
 00244 2216 0D		       FCB $0D              
 00245			           
 00246 2217 44		OUTHL  LSR A           CONVERT BINARY TO HEX-ASCII
 00247 2218 44		       LSR A
 00248 2219 44		       LSR A
 00249 221A 44		       LSR A
 00250 221B 84 0F	OUTHR  AND A #$0F      GET NIBBLE
 00251 221D 8B 30	       ADD A #$30      MAKE ASCII
 00252 221F 81 39	       CMP A #$39      IS >9?
 00253 2221 23 02	       BLS   OUTH1     NO
 00254 2223 8B 07	       ADD A #$07      YES
 00255 2225 39		OUTH1  RTS  
 00256			
 00257			*      PHYSICAL TO LOGICAL TABLE
 00258			
 00259 2226 00		       FCB 0
 00260			       
 00261 2227 01 06 0B 10	TBL    FCB $01, $06, $0b, $10
 00262 222B 03 08 0D 12	       FCB $03, $08, $0d, $12
 00263 222F 05 0A 0F 02	       FCB $05, $0a, $0f, $02
 00264 2233 07 0C 11 04	       FCB $07, $0c, $11, $04
 00265 2237 09 0E	       FCB $09, $0e
 00266			
 00267			* BOOT CODE GOES HERE (MAX 3x128-6 BYTES)
 00268			* LOADED AT ADDRESS $2400 BY SWTBUG 'D' COMMAND
 00269			
 00270 2239 01		BOOT   NOP   
 00271 223A		       END
 00272			 
 00273			
