         OPT NOL,NOS,NOG

* TTL DOS COMMON EQUATES

* DOS68 SYSTEM PROGRAMMING EQUATES

SYSBAS   EQU $C000           BASE ADDR FOR THIS SYSTEM

DOSFCB   EQU SYSBAS+$0880    DOS FCB ADDRESS
SYSSTK   EQU SYSBAS+$0A00-1  SYSTEM STACK TOP
EXTDOS   EQU SYSBAS+$0A00    EXTENDED DOS LOGIC
LINBUF   EQU SYSBAS+$0D00    SYSTEM LINE INPUT BUFFER
TCA      EQU SYSBAS+$0D80    ORG OF TRANSIENT CMD AREA
DOSJMP   EQU SYSBAS+$1280    DOS JUMP TABLE
PARTBL   EQU SYSBAS+$1300    PARAMETER TABLE
DOSBAS   EQU SYSBAS+$1380    BASIC DOS LOGIC
DFMORG   EQU SYSBAS+$1780    BASE ADDR OF DFM
*
* PARAMETER TABLE DEFINITION
*
YMONV    EQU PARTBL+$00      DISK MONITOR VERSION
YMEMAX   EQU PARTBL+$02      USER MEMORY LIMIT
YLINAD   EQU PARTBL+$04      LINE BUFFER ADDRESS
YLINPT   EQU PARTBL+$06      LINE BUFFER RESET ADDR
YBSCHR   EQU PARTBL+$08      BACKSPACE CHARACTER
YDLINE   EQU PARTBL+$09      DELETE LINE CHARACTER
YLPAUS   EQU PARTBL+$0A      LINE PAUSE CHAR
YLCONT   EQU PARTBL+$0B      LINE PAUSE RESUME
YABORT   EQU PARTBL+$0C      ABORT CHARACTER
YABRTV   EQU PARTBL+$0D      ABORT VECTOR ADDRESS
ZHCINT   EQU PARTBL+$0F      HARD COPY INITIALIZE
ZHCOUT   EQU PARTBL+$12      HARD COPY CHAR OUTPUT
YECHOC   EQU PARTBL+$15      MONITOR ECHO CONTROL ADR
YCPORT   EQU PARTBL+$17      CONTROL I/O PORT 0=DISABLED
YPPORT   EQU PARTBL+$19      PRINTER I/O PORT 0=DISABLED
YDEPTH   EQU PARTBL+$1B      LINES/PAGE
YWIDTH   EQU PARTBL+$1C      CHARACTERS/LINE
YNULLS   EQU PARTBL+$1D      CR/LF NULLS
YHCFLG   EQU PARTBL+$1E      HARD-COPY ENABLE
YEJECT   EQU PARTBL+$1F      BLANK LINES END OF PAGE
YPPPAS   EQU PARTBL+$20      POST PAGE-PAUSE,0=ON.#0=OFF
YSYSDR   EQU PARTBL+$21      SYSTEM DRIVE NUMBER
YWRKDR   EQU PARTBL+$22      WORK DRIVE NUMBER
YCLINE   EQU PARTBL+$23      CURRENT LINE NUMBER
YCCOL    EQU PARTBL+$24      CURRENT CHAR POSITION/COLUMN
YUCSWT   EQU PARTBL+$25      UPPER CASE SHIFT LOCK 0=>NOT UC 
YOSWT    EQU PARTBL+$26      OUTPUT CONTROL SWITCH
YDCMDA   EQU PARTBL+$27      DO COMMAND PROCESSOR ACTIVE
YERSWT   EQU PARTBL+$28      SYSTEM ERROR SWITCH
YCFLG    EQU PARTBL+$29      COMMAND LOAD FLAG
YLOADE   EQU PARTBL+$2A      LOAD ERROR FLAG
YTAFLG   EQU PARTBL+$2B      VALID TRANSFER ADDRESS FLAG
YTADDR   EQU PARTBL+$2C      TRANSFER ADDRESS
YOFSET   EQU PARTBL+$2E      OFFSET FOR FILE LOAD
YDATE    EQU PARTBL+$30      SYSTEM DATE STRING
YTIME    EQU PARTBL+$40      SYSTEM TIME STRING
EXTTBL   EQU PARTBL+$62      FILE EXTENSION TABLE
*
* MONITOR LINKAGES
*
ZCOLDS   EQU DOSJMP+$00      MONITOR COLD START
ZWARMS   EQU DOSJMP+$03      MONITOR WARM START
ZOUTEE   EQU DOSJMP+$06      CHARACTER OUTPUT ROUTINE(OUTEEE)
ZINCH    EQU DOSJMP+$09      SYSTEM MONITOR INPUT(INEEE)
ZMON     EQU DOSJMP+$0C      JMP TO ROM MONITOR
UCTBL    EQU DOSJMP+$0F      USER COMMAND TABLE POINTER
*                            
ZFLSPC   EQU DOSJMP+$11      GET A FILE SPECIFICATION
ZGCHAR   EQU DOSJMP+$14      GET CURRENT CHAR
ZGNCHR   EQU DOSJMP+$17      GET NEXT CHAR
ZANCHK   EQU DOSJMP+$1A      CHECK FOR ALPHANUMERIC
ZDIE     EQU DOSJMP+$1D      DIE, PRINT CMD STRING AND ERROR
ZGETHN   EQU DOSJMP+$20      GET A HEX VALUE
ZADDX    EQU DOSJMP+$23      ADD THE B REG TO THE X REG
ZOUTST   EQU DOSJMP+$26      OUTPUT STRING AT X (END ON $00)
ZTYPDE   EQU DOSJMP+$29      TYPE THE DISC ERROR MESSAGE
ZOUTHX   EQU DOSJMP+$2C      PRINT A HEX BYTE
ZOUTHA   EQU DOSJMP+$2F      PRINT AN ADDR IN HEX
* RESEVED    DOSJMP+$32      
ZLINEI   EQU DOSJMP+$35      LINE INPUT ROUNTINE
ZLP      EQU DOSJMP+$38      FORTRAN LINE PRINTER OUTPUT VECTOR
ZPEEK    EQU DOSJMP+$3B      PEEK AHEAD AT NEXT CHAR IN LINE BUFFER
ZOUTCH   EQU DOSJMP+$3E      USER ALTERABLE OUTPUT
ZPUTCH   EQU DOSJMP+$41      DIRECTED OUTPUT VECTOR
ZGETCH   EQU DOSJMP+$44      DIRECTED INPUT VECTOR
ZSTAT    EQU DOSJMP+$47      TERMINAL INPUT STATUS
ZRESTR   EQU DOSJMP+$4A      RESTORE I/O VECTORS
DCMDLN   EQU DOSJMP+$4D      COMMAND LINE PROCESSOR
ZEXCMD   EQU DOSJMP+$50      EXECUTE EXTERNAL COMMAND
ZLOAD    EQU DOSJMP+$53      EXTERNAL CALL LOADER
* SPARE  EQU DOSJMP+$56      
ZNAMEJ   EQU DOSJMP+$59      DECODE NAME AND JUMP
ZCRLF    EQU DOSJMP+$5C      PRINT CR/LF STRING
ZSTEXT   EQU DOSJMP+$5F      SET FILE EXTENSION
*
* FILE EXTENSION INDEXES
*
XBIN     EQU 0      BINARY
XTXT     EQU 1      TEXT
XSRC     EQU 2      ASSEMBLER SOURCE
XBAS     EQU 3      BASIC PROGRAM
XCTL     EQU 4      COMMAND CONTROL
XBAK     EQU 5      BACKUP TEXT
XDAT     EQU 6      DATA FILE
XFOR     EQU 7      FORTRAN FILE
XTMP     EQU 8      TEMPORARY FILE
XSPARE   EQU 9      UNUSED SPARE
*
*
* DFM LINKAGES

ODFM     EQU DFMORG+0        OPEN DFM
CDFM     EQU DFMORG+3        CLOSE DFM
DFM      EQU DFMORG+6        I/O REQUEST ENTRY

* FILE CONTROL BLOCK (FCB) INDICES

XFC      EQU 0      DFM FUNCTION CODE
XES      EQU 1      ERROR STATUS
XUN      EQU 2      UNIT NUMBER
XFN      EQU 3      FILE NAME
XFE      EQU 9      FILE NAME EXTENSION
XFT      EQU 12     FILE TYPE
XFS      EQU 13     FILE STATUS
XFSU     EQU 14     FIRST SECTOR USED
XLSU     EQU 16     LAST SECTOR USED
XSUC     EQU 18     SECTORS USED
XRFS     EQU 20     RF FILE SIZE
XRHBW    EQU 23     RF HIGHEST BYTE WRITTEN
XRBA     EQU 29     RF BYTE ADDRESS
XCT      EQU 30     CURRENT TRACK NUMBER
XCS      EQU 31     CURRENT SECTOR NUMBER
XRIM     EQU 32     RF INCREMENTAL MODE
XRIF     EQU 32     RF INITIALIZATION FLAG
XRID     EQU 33     RF INITIALIZATION VALUE
XDB      EQU 38     START OF BUFFER
XNT      EQU XDB+0  NEXT TRACK NUMBER
XNS      EQU XDB+1  NEXT SECTOR NUMBER
XPT      EQU XDB+2  PREVIOUS TRACK
XPS      EQU XDB+3  PREVIOUS SECTOR
XSOD     EQU XDB+4  START OF DATA

* DFM FUNCTION CODES      (XFC)

QFREE    EQU 0      REPORT FREE SPACE ON DISC
QSO4W    EQU 1      OPEN FOR WRITE
QSWRIT   EQU 2      WRITE
QSWC     EQU 3      WRITE CLOSE
QSO4R    EQU 4      OPEN FOR READ
QSREAD   EQU 5      READ
QSRC     EQU 6      READ CLOSE
QDEL     EQU 7      DELETE
QREN     EQU 8      RENAME
QAPP     EQU 9      APPEND
QDIRI    EQU 10     DIRECTORY INITIALIZATION
QDIRT    EQU 11     DIRECTORY TRANSFER
QRAFC    EQU 13     READ ACTIVE FCB CHAIN
QLOGD    EQU 16     LOG IN A SYSTEM DRIVE
QLOGE    EQU 17     EXAMINE SYSTEM DRIVE NUMBER
QSSR     EQU 18     SINGLE SECTOR READ
QSSW     EQU 19     SINGLE SECTOR WRITE
QCRF     EQU 20     CREATE A RANDOM FILE
QORF     EQU 21     OPEN A RF
QPRF     EQU 22     POSITION A RF
QRRF     EQU 23     READ A RF
QWRF     EQU 24     WRITE A RF
QCLSRF   EQU 25     CLOSE A RF
QERF     EQU 28     EXPAND RANDOM FILE SIZE

* DFM ERROR CODES      (XES)

EIFC     EQU 1      INVALID DFM FUNCTION CODE
EFE      EQU 2      FILE EXISTS
EFIB     EQU 3      MASTER FILE DIRECTORY ERROR
EFB      EQU 4      FILE IS IN USE
ENSF     EQU 5      NO SUCH FILE
EEOF     EQU 6      END-OF-FILE
EDF      EQU 7      DISC FULL
EIF      EQU 8      INVALID FILE CONTROL BLOCK (FCB) ADDRESS
EIFN     EQU 9      ILLEGAL FILE NAME
EFS      EQU $A     FILE STATUS ERROR
EITS     EQU $B     INVALID T# OR S# ON QSSR OR QSSW
EIUN     EQU $C     INVALID UNIT NUMBER (ONLY 0,1,2,3 ALLOWED)
EDR      EQU $E     DISC READ ERROR
EDW      EQU $F     DISC WRITE ERROR
EIFT     EQU $10    ILLEGAL FILE TYPE
ENER     EQU $11    NOT ENOUGH ROOM TO CREATE FILE
EWP      EQU $12    FILE IS WRITE PROTECTED
EDP      EQU $13    FILE IS DELETE PROTECTED
EFSE     EQU $14    RANDOM FILE SIZE ERROR
EDWP     EQU $15    DISC IS WRITE PROTECTED
ENSD     EQU $20    NON-SYSTEM DISC IN LOGGED DRIVE
ESFF     EQU $21    SYSTEM FILE FORMAT ERROR
ECSS     EQU $22    CHECKSUM ERROR ON SYSTEM FILE
*
*      FILE TYPE CODES      (XFT)
*
FTCS     EQU 1      SEQUENTIAL COMPRESSED
FTSQ     EQU 2      BINARY SEQUENTIAL
FTRB     EQU 4      BYTE MODE RANDOM
FTRR     EQU 5      RECORD MODE RANDOM
*
*      FILE STATUS CODES      (XFS)
*
FANA     EQU 0      NOT ACTIVE
FASR     EQU 1      SEQUENTIAL READ
FASW     EQU 2      SEQUENTIAL WRITE
FARA     EQU 4      RANDOM ACCESS
*
* PRINT CODES
*
CR       EQU $D     CARRIAGE RETURN
LF       EQU $A     LINE FEED
SP       EQU $20    SPACE
EOS      EQU 0      END OF STRING
      
         OPT      LIS
                                                                                                     