Logging to file "console.txt"


$D 
FLEX 2.0

DATE (MM,DD,YY)? 01,01,79

+++asn,s=0,w=0
+++dir 0

CATALOG OF BOOTDISK  VOLUME 0  DATED 05-19-97

SECTORS LEFT 5105

FLEX2   .SYS   ERRORS  .SYS   CONGEN  .DAT   DATE    .CMD   ASN     .CMD
TTYSET  .CMD   DIR     .CMD   PRINT   .SYS   P       .CMD   CCINT   .BIN
COPY    .CMD   FINIT   .CMD   DPACH   .CMD   LINK    .CMD   EDIT    .CMD
ASMB    .CMD   LIST    .CMD   RENAME  .CMD   ERA     .CMD   MODEM68 .CMD
SLEUTH  .CMD   SPLM    .CMD   SPLM    .LIB   SPLMREAD.LIB   SPLMWRIT.LIB
FILES   .CMD   O       .CMD   ED      .CMD   CONGEN  .CMD   KEYGEN  .CMD
PRTGEN  .CMD   HELP    .DAT   READ-ME .TXT   PDEL    .CMD   ED      .TXT
STARTUP .TXT   CPUTEST .CMD   KEYGEN  .DAT   PRTGEN  .DAT   APPEND  .CMD
CAT     .CMD   MSBASIC .CMD   INTEG   .CMD   

+++dir 1

CATALOG OF TSCBASIC  VOLUME 0  DATED 05-19-97

SECTORS LEFT 5526

BASIC   .CMD   CAT     .CMD   CONVERT .BAS   READ-ME .TXT   RENUMBER.CMD
RENUMX  .CMD   XBASIC  .CMD   

+++1.xbasic

READY

exec, "DIR 1"


CATALOG OF TSCBASIC  VOLUME 0  DATED 05-19-97

SECTORS LEFT 5526

BASIC   .CMD   CAT     .CMD   CONVERT .BAS   READ-ME .TXT   RENUMBER.CMD
RENUMX  .CMD   XBASIC  .CMD   


READY

load "1.CONVERT"


READY

list

     1 REM -- CONVERT - CONVERT VIRTUAL ARRAY FILES UNDER SWTP BASIC
     2 REM              TO FORMAT COMPATIBLE UNDER  TSC BASIC
    10 DIM A(10)                                \REM ARRAY OF BCD DIGITS
    20 DIM TN(10)                               \REM POWERS OF TEN
    25 T = 1/10
    30 FOR I=1 TO 10
    40  TN(I)=T  \T=T/10
    50 NEXT I
    60 MH = HEX('F0')                           \REM MASK HI BITS
    70 ML = HEX('0F')                           \REM MASK LO BITS
   100 INPUT "SOURCE FILE"; SS$
   110 INPUT "OUTPUT FILE"; S1$
   120 OPEN OLD SS$ AS 1                       \REM SOURCE FILE
   130 OPEN NEW S1$ AS 2                       \REM OBJECT FILE
   140 PRINT \INPUT "STRING OR FLOATING POINT FILE (S/F)"; T$ \PRINT
   150 IF T$='S' THEN 200
   160 IF T$='F' THEN 2000
   170 PRINT "PLEASE, EITHER 'S' OR 'F'" \GOTO 140
   200 REM --- CONVERT STRING ARRAY ---
   210 PRINT "DIMENSIONS OF ARRAY"
   220 PRINT "USE 0 FOR SECOND DIMENSION IF SINGLE DIMENSIONED ARRAY"
   230 INPUT D1,D2
   240 INPUT "SIZE OF EACH STRING"; SS
   250 IF SS>252 THEN PRINT "TOO LARGE, MAXIMUM IS 252" \GOTO 240
   260 IF D2<>0 THEN GOTO 400
   300 REM --- HERE FOR SINGLE DIMENSIONED ARRAY ---
   310 DIM #1, A$(D1-1)=SS \DIM #2, B$(D1)=SS
   320 FOR I=1 TO D1
   330   I$=A$(I-1)                            \REM GET STRING TO CONVERT
   340   GOSUB 1000
   350   B$(I) = O$
   360 NEXT I
   370 GOTO 9998                               \REM DONE
   400 REM --- HERE FOR DOUBLE DIMENSIONED ARRAY ---
   410 DIM #1, A$(D1-1, D2-1)=SS \DIM #2, B$(D1,D2)=SS
   420 FOR I=1 TO D1
   430   FOR J=1 TO D2
   440     I$=A$(I-1,J-1)
   450     GOSUB 1000
   460     B$(I,J)=O$
   470   NEXT J
   480 NEXT I
   490 GOTO 9998
  1000 REM --- CONVERT STRING I$ (IN SWTPC FORMAT) TO O$ (TSC FORMAT)  ---
  1010 L=LEN(I$)
  1020 FOR L1=L TO 1 STEP -1
  1030   IF ASC(MID$(I$,L1,1))=0 THEN NEXT L1 \REM REMOVE ANY TRAILING NULLS
  1040 O$=LEFT$(I$, L1)
  1050 RETURN
  2000 REM
  2001 REM --- CONVERT FLOATING POINT FILES ---
  2010 PRINT "DIMENSIONS OF ARRAY"
  2020 PRINT "USE 0 FOR SECOND DIMENSION IF SINGLE DIMENSIONED ARRAY"
  2030 INPUT D1,D2
  2040 IF D2=0 THEN 2400
  2100 DIM #1, A$(D1-1, D2-1)=6 \DIM #2, B(D1,D2)
  2110 FOR L1=1 TO D1
  2120   FOR J=1 TO D2
  2130     I$=A$(L1-1, J-1)
  2140     GOSUB 3000                         \REM DO THE CONVERSION
  2150     B(L1,J)=O
  2160   NEXT J
  2170 NEXT L1
  2180 GOTO 9998
  2400 REM --- SINGLE DIMENSION ---
  2410 DIM #1, A$(D1-1)=6  \DIM #2, B(D1)
  2420 FOR L1=1 TO D1
  2430   I$=A$(L1-1)
  2440   GOSUB 3000
  2450   B(L1)=O
  2460 NEXT L1
  2470 GOTO 9998
  3000 REM --- CONVERT BCD STRING TO INTERNAL (BINARY) FORMAT ---
  3010 K=0
  3020 FOR I=1 TO 5                           \REM GET THE SIGN + 9 DIGITS
  3030   A=ASC(MID$(I$,I,1))                  \REM GET BCD BYTE
  3040   A(K)   = (A AND MH)/16               \REM HI NIBBLE
  3050   A(K+1) = A AND ML                    \REM LO NIBBLE
  3060   K      = K+2
  3070 NEXT I
  3080 EP = ASC(RIGHT$(I$,1))                 \REM GET EXPONENT
  3100 REM
  3110 O=0
  3120 FOR I=1 TO 7                           \REM 'ADD' UP THE DIGITS
  3130   O=O + A(I)*TN(I)                     \REM WHERE TN(X)= 10^-X
  3140 NEXT I
  3145 IF A(0)>0 THEN O=O-1                   \REM COMPLEMENT
  3150 IF ABS(EP)>38 THEN O=0 ELSE O=O*10^EP  \REM SCALE
  3160 RETURN
  9998 PRINT \PRINT 'DONE' \CLOSE 1,2
  9999 END


READY

flex

+++asn,s=2,w=2
+++0.dir

CATALOG OF PASC6800  VOLUME 0  DATED 05-19-97

SECTORS LEFT 5357

VALIDATE.BIN   FILES   .BIN   ALFAS   .DEM   C       .OVL   CHARINDX.DEM
CHARS   .DEM   EASTER  .DEM   EIGHTQ  .DEM   FILES   .DEM   OWNCODE .TXT
P6800ERR.SYS   PASCAL  .BIN   PR      .OVL   PR      .TXT   PRIMES  .DEM
QUIKSORT.DEM   RANDOM  .DEM   README  .TXT   REALS   .DEM   RESTART .CMD
RUN     .CMD   RUNEQU  .TXT   RUNLGO  .CMD   SCALINDX.DEM   SETS    .DEM
SIN2COS2.DEM   TRAVERSE.DEM   TYPES   .DEM   USERCODE.DEM   VALIDATE.TXT
WAITSECS.DEM   X       .OVL   

+++run,pascal,validate

 P-6800  RUN-TIME  SYSTEM  V 2.2   : COPYRIGHT C 1980 LUCIDATA
 USABLE CONTIGUOUS MEMORY  $8000
 DEFAULT STACK RESERVATION $1000
 ENTER NEW VALUE OR RETURN $

 PASCAL P-COMPILER  ( VERSION 2 )  : COPYRIGHT C 1980 D.R.GIBBY 

    0 PROGRAM VALIDATE (KEYBOARD,SCREEN); 
    0 (* QUICK VALIDATION TEST MK 2 *) 
    0 CONST 
    0    THREE = $0003; 
    0 VAR 
    0    SCREEN : FILE OF CHAR; 
    0    I : INTEGER; 
    0 BEGIN 
    4    REWRITE (SCREEN); 
    8    WRITELN (SCREEN); 
   12    FOR I := 1 TO THREE DO 
   24    WRITELN (SCREEN," SYSTEM SEEMS INTACT ":30); 
   84 END. 
   88 BYTES
  END OF PASS 1
  END OF PASS 2
  OK  TO RUN

 END OF PROGRAM EXECUTION.
+++run,validate

 P-6800  RUN-TIME  SYSTEM  V 2.2   : COPYRIGHT C 1980 LUCIDATA
 USABLE CONTIGUOUS MEMORY  $8000
 DEFAULT STACK RESERVATION $1000
 ENTER NEW VALUE OR RETURN $

          SYSTEM SEEMS INTACT 
          SYSTEM SEEMS INTACT 
          SYSTEM SEEMS INTACT 

 END OF PROGRAM EXECUTION.
+++0.asn,s=0,w=0
+++
Simulation stopped, PC: E201 (47              ASRA)
sim> q
Goodbye
%SIM-INFO: Debug output disabled
Log file closed
