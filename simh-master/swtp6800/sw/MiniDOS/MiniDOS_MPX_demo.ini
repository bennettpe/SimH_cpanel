
; Run PERCOM BASIC
; Assemble a prog, save to disk, execute it

; set console -n -q log=console.txt 
set debug -n -q debug.txt

set bootrom 2708
attach bootrom swtbug.bin
set cpu hex
set cpu noitrap
set cpu nomtrap
set cpu nodebug
reset
set mp-b2 bd0, bd1, bd2, bd3, bd4, bd5

; enable Minidisk LDF-400 controller for drive 0, 1 and 2
set lfd-4000 enabled
set lfd-4001 enabled
set lfd-4002 enabled

; MPX defaults to drive 1
copy -q MPX/MPX.DSK tmp.DSK
att  -q lfd-4001    tmp.DSK

; load symbolic info for rom monitor
echo
load MPX/MINDOS15.LST
load MPX/MPX.LST

go until "$"

att ptr MPX/MinDOS15.S19
send "L"
go until "$"

att ptr MPX/MPX.S19
send "L"
go until "$"

; start symbolic trace
; set cpu debug=symb;inst
; set lfd-400 debug=all

; patch delay routine (no delay needed)
; dep c2a8 ce
; dep c2a9 00
; dep c2aa 00
; dep c2ab 39

; path to remove crc check
; dep c0ae 01
; dep c0af 01

; patch to not retry read if crc error
; dep c055 01

send after=5k "JC000"

; commands for raw MiniDOS
; send "SC000C180FFFF0025"
; send "L00251000"

go until ">"

; List directory
send "F\r"
go until ">"

; Load and run Percom Super Basic 
send "PERBAS\r"
go until "#"

send "LOAD \"LUNAR\"\r"
go until "#"

send "LIST\r"
go until "READY"
go until "#"

send "RUN\r"
go until "INSTRUCTIONS?"
send "0\r"

go until "?"
send "0\r"
go until "?"
send "0\r"
go until "?"
send "0\r"
go until "?"
send "0\r"
go until "?"
send "0\r"
go until "?"
send "0\r"
go until "?"
send "80\r"
go until "?"
send "80\r"

go until "MISSION.?"
send "0\r"

go until "#"



send "MDOS\r"
go until ">"

send "F\r"
go until ">"

; Assemble a program (sDEMO = Source for DEMO)
send "ASM\r"
go until "READY"

send "LOAD sDEMO\r"
go until "READY"

send "LIST\r"
go until "READY"

; Exit to MicroDOS
send "MDOS\r"
go until ">"

; and delete oDEMO (objet code). 
send "D oDEMO\r"
go until ">"

send "F\r"
go until ">"

; return to assembler. As MiniDOS is ROM-Based, the program
; has not been altered
send "J 103\r"
go until "READY"

send "LIST\r"
go until "READY"

; Assemble it
send "ASM\r"
go until "ENTER PASS"
go until "?"
send "1P"

go until "ENTER PASS"
go until "?"
send "2L"

go until "ENTER PASS"
go until "?"
send "2D"

; Save the object code as oDEMO file
; (this is why we delete it previously, so it can be created)
go until "FILENAME"
go until "?"
send "oDEMO\r"

go until "ENTER PASS"
go until "?"
; send ^X -> 030 in octal -> exit
send "\030"
go until "READY"

send "MDOS\r"
go until ">"

send "F\r"
go until ">"

; This is the assembled code in HEX Binary format
send "TYPE oDEMO\r"
go until ">"

; Program to load the file
send "HEXLDR\r"
go until "FILE?"

; the file is in drive 1, starts at block 151
; (we can see it in directory entry for oDEMO)
send "1151\r"
go until "FILE?"

; Return to monitor
send "\r"
go until "$"

; jump to 100 to run the loaded oDEMO program
send "J0100"
go until ":"

send "HOLA\r"
go until ":"

send "6\r"
go until "$"

; issue Z comand to return to MicroDOS
send "Z"
go until ">"

send "F\r"
go until ">"

; delete already existing DEMO program
send "D DEMO\r"
go until ">"

send "F\r"
go until ">"

; Save demo program in memory to disk, starting at addr 0100
; up to addr 017F. program starts at 0100
send "S DEMO 0100 017F 0100\r"
go until ">"

send "F\r"
go until ">"

; Execute DEMO program
send "DEMO\r"
go until ":"

send "ADIOS\r"
go until ":"

send "3\r"
go until "$"

; Return from monitor to MicroDOS
send "Z"
go until ">"

send "F\r"
go until ">"

go
goto end


:end
