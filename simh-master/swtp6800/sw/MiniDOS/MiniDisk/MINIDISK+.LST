C400:	JMP  $C403    START MINIDISK+
C403:	JSR  $C027    CALL MINIDOS INIDSK
C406:	LDS  #$A07F   INIT STACK
C409:	BSR  $C46B
C40B:	BCC  $C406
C40D:	JSR  $C5C6
C410:	BRA  $C406
C412:	BSR  $C41F
C414:	BCS  $C41E
C416:	STX  $A0AA
C419:	BSR  $C41F
C41B:	STX  $A0AC
C41E:	RTS 
C41F:	JSR  $C4EA
C422:	BCS  $C41E
C424:	LDX  #$0000
C427:	STX 
C429:	BSR  $C447
C42B:	BSR  $C455
C42D:	BCS  $C41E
C42F:	LDAB #$04
C431:	ASL  $0019
C434:	ROL  $0018
C437:	DECB
C438:	BNE  $C431
C43A:	ADDA
C43C:	STAA
C43E:	INX 
C43F:	BSR  $C44A
C441:	BNE  $C42B
C443:	LDX 
C445:	CLC 
C446:	RTS 
C447:	LDX  $A0E0
C44A:	LDAA 0,X
C44C:	BEQ  $C454
C44E:	CMPA #$04
C450:	BEQ  $C454
C452:	CMPA #$20
C454:	RTS 
C455:	SUBA #$30
C457:	BCS  $C467
C459:	CMPA #$09
C45B:	BLS  $C445
C45D:	SUBA #$07
C45F:	CMPA #$0F
C461:	BHI  $C467
C463:	CMPA #$09
C465:	BHI  $C445
C467:	SEC 
C468:	LDAA #$14
C46A:	RTS 

C46B:	BSR  $C49A    PROMPT '>' INPUT LINE
C46D:	LDX  #$A0B0   X=A0B0=INPUT BUFFER
C470:	BSR  $C4D5    GET IN A0E0 START OF INPUT LINE COMMAND, SET CARRY IF NO CMD
C472:	LDAB 1,X
C474:	LDX  #$CBBF
C477:	INX 
C478:	INX 
C479:	INX 
C47A:	INX 
C47B:	TST  0,X
C47D:	BEQ  $C496
C47F:	CMPA 0,X
C481:	BNE  $C477
C483:	CMPB 1,X
C485:	BNE  $C477
C487:	LDX  2,X
C489:	STX  $A0AE
C48C:	JSR  $CB09
C48F:	BCS  $C498
C491:	LDX  $A0AE
C494:	JMP  0,X
C496:	LDAA #$13
C498:	SEC 
C499:	RTS 

C49A:	JSR  $C363    PRINT CRLF, PROMPT '>' INPUT LINE
C49D:	LDAA #$3E     '>' CHARACTER
C49F:	JSR  $E1D1    PRINT CHAR
C4A2:	LDX  #$A0B0   X=A0B0=INPUT BUFFER
C4A5:	CLRB
C4A6:	JSR  $E1AC    INPUT CHAR
C4A9:	CMPA #$0D     CR?
C4AB:	BEQ  $C4C3    YES, PROCESS LINE
C4AD:	CMPA #$18     ^Z (CANCEL LINE)?
C4AF:	BEQ  $C49A    READ LINE AGAIN
C4B1:	CMPA #$08     BACKSPACE?
C4B3:	BNE  $C4BB    NO, CONTINUE
C4B5:	DEX           DEC INPUT BUFF PTR
C4B6:	DECB          DEC B=NUM OF CHARS IN INPUT LINE
C4B7:	BMI  $C49A    INPUT LINE AGAIN
C4B9:	BRA  $C4A6    INPUT CHAR AGAIN
C4BB:	STAA 0,X      STORE CHAR In INPUT BUFFER
C4BD:	INCB          INC B=NUM OF CHARS IN INPUT LINE
C4BE:	INX           INC INPUT BUFF PTR
C4BF:	CMPB #$2F     INPUT BUFFER FULL (47 CHARS MAX)?
C4C1:	BNE  $C4A6    NO, GO TO INPUT NEXT CHAR
C4C3:	LDAA #$04     YES, 
C4C5:	STAA 0,X      MARK INPUT BUFFER END
C4C7:	RTS           RETURN

C4C8:	JSR  $C6EC
C4CB:	LDX  #$A110
C4CE:	STX 
C4D0:	LDX  #$A100
C4D3:	BRA  $C500

C4D5:	LDAA 0,X      GET IN A0E0 START OF INPUT LINE COMMAND, SET CARRY IF NO CMD
C4D7:	CMPA #$20     SPACE?
C4D9:	BNE  $C4DE    NO, CONTINUE
C4DB:	INX           YES, SKIP IT
C4DC:	BRA  $C4D5    AND READ NEXT CHAR
C4DE:	CMPA #$04     END OF BUFFER?
C4E0:	CLC           
C4E1:	BNE  $C4E6    
C4E3:	SEC           CARRY SET IF END OF INPUT BUF
C4E4:	LDAA #$07
C4E6:	STX  $A0E0    START OF INPUT LINE COMMAND
C4E9:	RTS 

C4EA:	LDX  $A0E0
C4ED:	JSR  $C44A
C4F0:	BEQ  $C4D5
C4F2:	INX 
C4F3:	BRA  $C4ED
C4F5:	JSR  $C6EC
C4F8:	LDX  #$A400
C4FB:	STX 
C4FD:	LDX  #$A120
C500:	STX 
C502:	STX  $A0E2
C505:	LDAB #$06
C507:	TST  0,X
C509:	BEQ  $C535
C50B:	JSR  $C447
C50E:	BEQ  $C4E3
C510:	LDAA 0,X
C512:	INX 
C513:	STX 
C515:	LDX 
C517:	JSR  $C44E
C51A:	BEQ  $C531
C51C:	CMPA #$2F
C51E:	BEQ  $C52C
C520:	CMPA 0,X
C522:	BNE  $C535
C524:	INX 
C525:	STX 
C527:	LDX 
C529:	DECB
C52A:	BNE  $C510
C52C:	CLC 
C52D:	LDX  $A0E2
C530:	RTS 
C531:	TST  0,X
C533:	BEQ  $C52C
C535:	JSR  $C978
C538:	CPX 
C53A:	BNE  $C500
C53C:	LDAA #$06
C53E:	SEC 
C53F:	RTS 
C540:	JSR  $C6EC
C543:	LDX  #$A120
C546:	LDAA 0,X
C548:	BEQ  $C553
C54A:	JSR  $C97B
C54D:	BNE  $C546
C54F:	LDAA #$08
C551:	SEC 
C552:	RTS 
C553:	STX  $A0E2
C556:	BSR  $C55F
C558:	BCC  $C552
C55A:	LDAB 7,X
C55C:	BNE  $C54A
C55E:	RTS 
C55F:	BSR  $C52C
C561:	LDAB $A0A7
C564:	BEQ  $C54F
C566:	LDAA 7,X
C568:	BEQ  $C56D
C56A:	SBA 
C56B:	BCS  $C588
C56D:	PSHA
C56E:	PSHB
C56F:	LDX  14,X
C571:	STX 
C573:	LDAA #$27
C575:	CMPA
C577:	BCS  $C584
C579:	JSR  $C021
C57C:	DECB
C57D:	BNE  $C573
C57F:	LDX 
C581:	STX  $A0E8
C584:	PULB
C585:	PULA
C586:	BCC  $C52C
C588:	LDAA #$15
C58A:	BRA  $C52D
C58C:	LDX  #$FFFF
C58F:	STX  $A0AE
C592:	STAA $A0A6
C595:	RTS 
C596:	JSR  $C424
C599:	BCS  $C595
C59B:	JMP  $C003
C59E:	CLRA
C59F:	BSR  $C58C
C5A1:	STX 
C5A3:	BSR  $C596
C5A5:	BCC  $C5BE
C5A7:	JSR  $C4F5
C5AA:	BCS  $C5B7
C5AC:	LDAA $A0A6
C5AF:	BEQ  $C5B9
C5B1:	CMPA 6,X
C5B3:	BEQ  $C5B9
C5B5:	LDAA #$10
C5B7:	SEC 
C5B8:	RTS 
C5B9:	JSR  $C680
C5BC:	STX 
C5BE:	JSR  $C41F
C5C1:	BCC  $C5BC
C5C3:	JMP  $C01B
C5C6:	PSHA
C5C7:	JSR  $C363    PRINT CRLF
C5CA:	LDX  #$C344
C5CD:	JSR  $E07E
C5D0:	TSX 
C5D1:	JSR  $E0CA
C5D4:	PULA
C5D5:	LDX  $A0E0
C5D8:	JMP  $CA51
C5DB:	JSR  $C79A
C5DE:	JSR  $C412
C5E1:	BCS  $C61F
C5E3:	JSR  $C41F
C5E6:	BCC  $C5EA
C5E8:	BSR  $C58C
C5EA:	LDAA #$50
C5EC:	BSR  $C58F
C5EE:	JSR  $C7A1
C5F1:	LDX  #$A0A0
C5F4:	LDAA 12,X
C5F6:	LDAB 13,X
C5F8:	SUBB 11,X
C5FA:	SBCA 10,X
C5FC:	INCA
C5FD:	STAA 7,X
C5FF:	JSR  $C4F5
C602:	BCS  $C640
C604:	BSR  $C60E
C606:	BNE  $C61E
C608:	JSR  $C55F
C60B:	BCC  $C644
C60D:	RTS 
C60E:	JSR  $C363    PRINT CRLF
C611:	BSR  $C5D5
C613:	LDX  #$CB7F
C616:	JSR  $E07E
C619:	JSR  $E1AC
C61C:	CMPA #$59
C61E:	CLC 
C61F:	RTS 
C620:	JSR  $C540
C623:	BCS  $C63F
C625:	TSTA
C626:	BEQ  $C63F
C628:	TST  $A3F0
C62B:	BNE  $C63F
C62D:	LDX  #$A3F0
C630:	PSHA
C631:	DEX 
C632:	LDAA 0,X
C634:	STAA 16,X
C636:	CPX  $A0E2
C639:	BNE  $C631
C63B:	PULA
C63C:	STAA 23,X
C63E:	CLRA
C63F:	RTS 
C640:	BSR  $C620
C642:	BCS  $C63F
C644:	BSR  $C64C
C646:	JSR  $C018
C649:	BCC  $C68D
C64B:	RTS 
C64C:	TSTA
C64D:	STAA $A0EA
C650:	BNE  $C654
C652:	STAB 7,X
C654:	STX  $A0E4
C657:	JSR  $C741
C65A:	LDX  $A0E4
C65D:	LDAA $A0A6
C660:	STAA
C662:	STAA 6,X
C664:	LDAA $A0AA
C667:	STAA
C669:	STAA 10,X
C66B:	LDAA $A0AB
C66E:	STAA
C670:	STAA 11,X
C672:	LDAA $A0AC
C675:	STAA
C677:	STAA 12,X
C679:	LDAA $A0AD
C67C:	STAA
C67E:	STAA 13,X
C680:	LDX  14,X
C682:	STX  $A0ED
C685:	STX 
C687:	LDX  $A0AE
C68A:	STX 
C68C:	RTS 
C68D:	TST  $A0EA
C690:	BNE  $C6A4
C692:	LDX  $A0E4
C695:	CPX  #$A3F0
C698:	BEQ  $C6A4
C69A:	LDAA $A0E8
C69D:	STAA 30,X
C69F:	LDAA $A0E9
C6A2:	STAA 31,X
C6A4:	BSR  $C6AE
C6A6:	BCS  $C6C5
C6A8:	LDX  $A0ED
C6AB:	JMP  $C949
C6AE:	BSR  $C708
C6B0:	JMP  $C018
C6B3:	LDX 
C6B5:	STX 
C6B7:	JSR  $C021
C6BA:	LDX 
C6BC:	RTS 
C6BD:	LDX 
C6BF:	STX 
C6C1:	LDX 
C6C3:	STX 
C6C5:	RTS 
C6C6:	JSR  $C4F5
C6C9:	BCS  $C6EA
C6CB:	LDAA 16,X
C6CD:	BNE  $C6E8
C6CF:	LDAB #$0A
C6D1:	LDAA 23,X
C6D3:	BEQ  $C6DA
C6D5:	SBA 
C6D6:	BLS  $C6E8
C6D8:	STAA 23,X
C6DA:	LDAA 30,X
C6DC:	CMPA #$27
C6DE:	BCC  $C6E8
C6E0:	INC  30,X
C6E2:	ADDB 7,X
C6E4:	STAB 7,X
C6E6:	BRA  $C6AE
C6E8:	LDAA #$09
C6EA:	SEC 
C6EB:	RTS 
C6EC:	BSR  $C708
C6EE:	JSR  $C01B
C6F1:	BCS  $C6F9
C6F3:	LDAA #$44
C6F5:	CMPA
C6F7:	BEQ  $C6FE
C6F9:	LDAA #$18
C6FB:	INS 
C6FC:	INS 
C6FD:	SEC 
C6FE:	RTS 
C6FF:	LDAB #$06
C701:	CLR  0,X
C703:	INX 
C704:	DECB
C705:	BNE  $C701
C707:	RTS 
C708:	LDX  #$A100
C70B:	STX 
C70D:	STX 
C70F:	LDX  #$A3FF
C712:	STX 
C714:	LDX  #$0000
C717:	STX 
C719:	LDAA #$44
C71B:	STAA
C71D:	RTS 
C71E:	LDX  #$A100
C721:	CLRB
C722:	BSR  $C701
C724:	BSR  $C701
C726:	BSR  $C701
C728:	LDX  #$A100
C72B:	STX  $A0E2
C72E:	LDAB #$1F
C730:	BSR  $C743
C732:	STAB
C734:	CLRA
C735:	BSR  $C766
C737:	LDAA #$06
C739:	STAA $A12F
C73C:	BRA  $C6E6
C73E:	TBA 
C73F:	BRA  $C744
C741:	LDAB #$06
C743:	CLRA
C744:	STAA
C746:	STAA
C748:	LDX  $A0E0
C74B:	STX 
C74D:	LDX 
C74F:	LDAA 0,X
C751:	TST  $0018
C754:	BNE  $C75A
C756:	CMPA #$20
C758:	BEQ  $C772
C75A:	TST  $0019
C75D:	BNE  $C763
C75F:	CMPA #$04
C761:	BEQ  $C772
C763:	INX 
C764:	STX 
C766:	LDX  $A0E2
C769:	STAA 0,X
C76B:	INX 
C76C:	STX  $A0E2
C76F:	DECB
C770:	BNE  $C74D
C772:	RTS 
C773:	BSR  $C782
C775:	LDX  #$A100
C778:	LDAA #$04
C77A:	STAA 31,X
C77C:	JSR  $CA51
C77F:	JSR  $E07E
C782:	JMP  $C363    PRINT CRLF
C785:	JSR  $C4EA
C788:	BCS  $C799
C78A:	JSR  $C4F8
C78D:	BCC  $C799
C78F:	JSR  $C5C6
C792:	BRA  $C785
C794:	JSR  $C535
C797:	BCS  $C785
C799:	RTS 
C79A:	LDX  $A0E0
C79D:	STX  $A0E6
C7A0:	RTS 
C7A1:	LDX  $A0E6
C7A4:	STX  $A0E0
C7A7:	RTS 
C7A8:	JSR  $C4F5
C7AB:	BCS  $C7B1
C7AD:	LDAA #$11
C7AF:	SEC 
C7B0:	RTS 
C7B1:	BSR  $C79A
C7B3:	JSR  $C41F
C7B6:	BCS  $C7B0
C7B8:	STX  $A0A6
C7BB:	LDAA $A0A6
C7BE:	BNE  $C7C2
C7C0:	LDAA #$50
C7C2:	JSR  $C58C
C7C5:	BSR  $C7A1
C7C7:	LDX  #$CBC2
C7CA:	STX  $A0AA
C7CD:	STX  $A0AC
C7D0:	JMP  $C640
C7D3:	JSR  $C4F5
C7D6:	BCS  $C7B0
C7D8:	CPX  #$A3F0
C7DB:	BEQ  $C7E1
C7DD:	TST  23,X
C7DF:	BNE  $C7E6
C7E1:	LDAB #$08
C7E3:	JSR  $C701
C7E6:	JSR  $C6FF
C7E9:	BSR  $C794
C7EB:	BCC  $C7D8
C7ED:	JMP  $C6AE
C7F0:	BSR  $C82E
C7F2:	CLR  $002D
C7F5:	LDX 
C7F7:	STX 
C7F9:	LDX 
C7FB:	STX 
C7FD:	JSR  $C00C
C800:	BCS  $C81C
C802:	BSR  $C822
C804:	STX 
C806:	INC  $002B
C809:	INC  $002D
C80C:	JSR  $C6BD
C80F:	BEQ  $C81B
C811:	LDAA
C813:	CMPA
C815:	BNE  $C7F9
C817:	LDX 
C819:	STX 
C81B:	CLC 
C81C:	RTS 
C81D:	LDX  #$0001
C820:	BRA  $C829
C822:	LDX  #$0001
C825:	STX 
C827:	LDX 
C829:	BSR  $C8AA
C82B:	JMP  $C74D
C82E:	LDX  #$0040
C831:	STX 
C833:	STX 
C835:	LDX 
C837:	STX 
C839:	RTS 
C83A:	BSR  $C82E
C83C:	BSR  $C81D
C83E:	LDX 
C840:	STX 
C842:	LDX 
C844:	STX 
C846:	LDX 
C848:	STX 
C84A:	STX 
C84C:	LDX 
C84E:	BEQ  $C855
C850:	JSR  $C6B3
C853:	STX 
C855:	JSR  $C00F
C858:	BCS  $C868
C85A:	INC  $002B
C85D:	DEC  $002D
C860:	BNE  $C83C
C862:	LDX 
C864:	BEQ  $C867
C866:	SEV 
C867:	CLC 
C868:	RTS 
C869:	CLR  $0022
C86C:	JSR  $C9A3
C86F:	JSR  $C596
C872:	BCS  $C882
C874:	BSR  $C817
C876:	JSR  $C41F
C879:	BCS  $C868
C87B:	LDAA
C87D:	STAA $A0A6
C880:	STAA
C882:	LDAA
C884:	ANDA #$C0
C886:	STAA
C888:	BCC  $C88D
C88A:	DEC  $A0E1
C88D:	JSR  $CB09
C890:	BCS  $C868
C892:	STAB
C894:	SUBB
C896:	STAB $A0EB
C899:	BSR  $C8A4
C89B:	LDAA
C89D:	BEQ  $C8B4
C89F:	JSR  $C741
C8A2:	BRA  $C8CD
C8A4:	JSR  $C79A
C8A7:	LDX  #$A0A0
C8AA:	STX  $A0E2
C8AD:	LDAB #$0E
C8AF:	STAB
C8B1:	STAB
C8B3:	RTS 
C8B4:	LDAA
C8B6:	STAA
C8B8:	JSR  $C4F5
C8BB:	BCS  $C91F
C8BD:	STX 
C8BF:	STX 
C8C1:	LDX  14,X
C8C3:	STX 
C8C5:	BSR  $C8A4
C8C7:	STX  $A0E0
C8CA:	JSR  $C74D
C8CD:	LDX 
C8CF:	LDAA
C8D1:	STAA
C8D3:	JSR  $C949
C8D6:	BCS  $C91F
C8D8:	LDAA
C8DA:	BSR  $C935
C8DC:	JSR  $C4F5
C8DF:	BCS  $C8EC
C8E1:	JSR  $C60E
C8E4:	BNE  $C906
C8E6:	JSR  $C55F
C8E9:	BCC  $C8F1
C8EB:	RTS 
C8EC:	JSR  $C620
C8EF:	BCS  $C91F
C8F1:	JSR  $C64C
C8F4:	LDX 
C8F6:	STX 
C8F8:	LDX  #$0000
C8FB:	STX 
C8FD:	BSR  $C920
C8FF:	BCS  $C91F
C901:	JSR  $C68D
C904:	BCS  $C91F
C906:	LDAA
C908:	BNE  $C91E
C90A:	LDAA
C90C:	BSR  $C935
C90E:	LDX 
C910:	STX  $A0E2
C913:	JSR  $C7A1
C916:	JSR  $C6EC
C919:	JSR  $C794
C91C:	BCC  $C8BD
C91E:	CLC 
C91F:	RTS 
C920:	LDAA
C922:	BSR  $C935
C924:	JSR  $C7F0
C927:	BCS  $C934
C929:	LDAA
C92B:	BSR  $C935
C92D:	JSR  $C83A
C930:	BCS  $C934
C932:	BVS  $C920
C934:	RTS 
C935:	STAA
C937:	TST  $A0EB
C93A:	BNE  $C934
C93C:	LDX  #$CBAE
C93F:	JMP  $C616
C942:	JSR  $C4F5
C945:	BCS  $C977
C947:	LDX  14,X
C949:	STX 
C94B:	LDX  #$A100
C94E:	STX 
C950:	CLR  $A0A7
C953:	JSR  $C00C
C956:	BCS  $C975
C958:	LDAA $A0A7
C95B:	BNE  $C962
C95D:	LDX 
C95F:	STX  $A0AA
C962:	INC  $A0A7
C965:	BEQ  $C977
C967:	JSR  $C6BD
C96A:	BNE  $C953
C96C:	LDAB
C96E:	LDX 
C970:	BSR  $C97E
C972:	STX  $A0AC
C975:	LDAA #$19
C977:	RTS 
C978:	LDX  $A0E2
C97B:	LDAB #$10
C97D:	INX 
C97E:	DECB
C97F:	BNE  $C97D
C981:	CPX  #$A400
C984:	RTS 
C985:	LDX  #$0000
C988:	LDAA 0,X
C98A:	COMA
C98B:	COM  0,X
C98D:	CMPA 0,X
C98F:	BNE  $C999
C991:	COM  0,X
C993:	INX 
C994:	CPX  #$8000
C997:	BNE  $C988
C999:	STX 
C99B:	JSR  $CAD0
C99E:	JSR  $CB03
C9A1:	CLC 
C9A2:	RTS 
C9A3:	BSR  $C985
C9A5:	LDAA
C9A7:	TAB 
C9A8:	LSRB
C9A9:	LSRB
C9AA:	LSRB
C9AB:	LSRB
C9AC:	STAB
C9AE:	SBA 
C9AF:	SUBA #$04
C9B1:	STAA
C9B3:	CLR  $0032
C9B6:	RTS 
C9B7:	BSR  $C9A3
C9B9:	LDAA
C9BB:	STAA
C9BD:	STAA
C9BF:	STAA $A0EB
C9C2:	LDX  #$0006
C9C5:	STX 
C9C7:	STX  $A0AE
C9CA:	JSR  $C6EC
C9CD:	LDX  #$A120
C9D0:	STX 
C9D2:	TST  0,X
C9D4:	BNE  $C9DC
C9D6:	BSR  $C97B
C9D8:	BNE  $C9D2
C9DA:	BRA  $CA30
C9DC:	STX  $A0E0
C9DF:	LDX  14,X
C9E1:	STX 
C9E3:	STX  $A0ED
C9E6:	STX 
C9E8:	JSR  $C8A4
C9EB:	JSR  $C73E
C9EE:	LDX 
C9F0:	JSR  $C94E
C9F3:	BCS  $CA49
C9F5:	LDX  #$0000
C9F8:	STX 
C9FA:	JSR  $C920
C9FD:	BCS  $CA49
C9FF:	LDX  $A0E0
CA02:	JSR  $C6FF
CA05:	LDX 
CA07:	STX  $A0E2
CA0A:	LDX  #$A0A0
CA0D:	STX  $A0E0
CA10:	LDAB #$10
CA12:	JSR  $C73E
CA15:	STX 
CA17:	JSR  $C6B3
CA1A:	STX 
CA1C:	STX  $A0AE
CA1F:	LDX  $A0ED
CA22:	STX 
CA24:	LDX 
CA26:	JSR  $C94E
CA29:	BCS  $CA47
CA2B:	JSR  $C7A1
CA2E:	BRA  $C9D6
CA30:	LDX 
CA32:	CLR  0,X
CA34:	INX 
CA35:	CPX  #$A400
CA38:	BNE  $CA32
CA3A:	LDX 
CA3C:	LDAA
CA3E:	STAA 14,X
CA40:	LDAA
CA42:	STAA 15,X
CA44:	JMP  $C6AE
CA47:	LDAA #$20
CA49:	JSR  $C5C6
CA4C:	BRA  $CA44
CA4E:	LDX  $A0E2
CA51:	LDAB #$06
CA53:	JSR  $C44A
CA56:	BEQ  $CA5F
CA58:	JSR  $E1D1    PRINT CHAR
CA5B:	INX 
CA5C:	DECB
CA5D:	BNE  $CA53
CA5F:	INCB
CA60:	JSR  $E0CC
CA63:	DECB
CA64:	BNE  $CA60
CA66:	CLC 
CA67:	RTS 
CA68:	BSR  $CA73
CA6A:	BSR  $CAA1
CA6C:	JSR  $C794
CA6F:	BCC  $CA6A
CA71:	CLC 
CA72:	RTS 
CA73:	JSR  $C773
CA76:	JSR  $CB00
CA79:	LDX  #$CB90
CA7C:	BRA  $CAD5
CA7E:	JSR  $C4F5
CA81:	BCC  $CA68
CA83:	BITA #$F8
CA85:	SEC 
CA86:	BNE  $CA72
CA88:	LDX  #$018D
CA8B:	STX 
CA8D:	BSR  $CA73
CA8F:	LDX  #$A120
CA92:	STX  $A0E2
CA95:	TST  0,X
CA97:	BEQ  $CAD8
CA99:	BSR  $CAA1
CA9B:	JSR  $C978
CA9E:	BNE  $CA92
CAA0:	RTS 
CAA1:	BSR  $CB00
CAA3:	BSR  $CA4E
CAA5:	DEX 
CAA6:	INX 
CAA7:	TST  0,X
CAA9:	BEQ  $CAA6
CAAB:	LDAB #$03
CAAD:	BSR  $CA60
CAAF:	JSR  $E0CA
CAB2:	BSR  $CAC4
CAB4:	JSR  $E0CA
CAB7:	INX 
CAB8:	INX 
CAB9:	BSR  $CB06
CABB:	BSR  $CB06
CABD:	LDX  0,X
CABF:	STX 
CAC1:	JMP  $C324
CAC4:	LDAA
CAC6:	SUBA 0,X
CAC8:	STAA
CACA:	BCC  $CACF
CACC:	DEC  $0018
CACF:	RTS 
CAD0:	BSR  $CB00
CAD2:	LDX  #$CBB5
CAD5:	JMP  $E07E
CAD8:	BSR  $CAD0
CADA:	LDX  $A0E2
CADD:	LDAB 7,X
CADF:	BEQ  $CAF3
CAE1:	STAB 0,X
CAE3:	BSR  $CAC4
CAE5:	JSR  $E0CA
CAE8:	LDX  13,X
CAEA:	LDAB #$0A
CAEC:	JSR  $CA60
CAEF:	BSR  $CABF
CAF1:	BRA  $CA9B
CAF3:	LDX  14,X
CAF5:	STX 
CAF7:	BSR  $CB03
CAF9:	LDAB #$08
CAFB:	JSR  $CA60
CAFE:	BSR  $CAC1
CB00:	JMP  $C363    PRINT CRLF
CB03:	LDX  #$0018
CB06:	JMP  $E0C8
CB09:	LDAA #$01
CB0B:	PSHA
CB0C:	JSR  $C4EA
CB0F:	BCS  $CB3B
CB11:	CMPA #$3A
CB13:	BNE  $CB3B
CB15:	INX 
CB16:	LDAA 0,X
CB18:	CMPA #$33
CB1A:	BLS  $CB32
CB1C:	STX  $A0E0
CB1F:	PULA
CB20:	BSR  $CB3C
CB22:	BCS  $CB2F
CB24:	PSHA
CB25:	JSR  $C4C8
CB28:	BCC  $CB38
CB2A:	TSX 
CB2B:	INC  0,X
CB2D:	BRA  $CB1F
CB2F:	LDAA #$12
CB31:	RTS 
CB32:	SUBA #$30
CB34:	INS 
CB35:	BCS  $CB2F
CB37:	PSHA
CB38:	JSR  $C4EA
CB3B:	PULA
CB3C:	TAB 
CB3D:	RORB
CB3E:	RORB
CB3F:	RORB
CB40:	STAB
CB42:	RTS 
CB43:	JSR  $C79A
CB46:	JSR  $C4EA
CB49:	BCS  $CB53
CB4B:	JSR  $C4F5
CB4E:	BCS  $CB54
CB50:	LDAA #$16
CB52:	SEC 
CB53:	RTS 
CB54:	JSR  $C7A1
CB57:	JSR  $C4F5
CB5A:	BCS  $CB53
CB5C:	JSR  $C6FF
CB5F:	JSR  $C4EA
CB62:	JSR  $C741
CB65:	JMP  $C6AE
CB68:	LDAA #$50
CB6A:	JSR  $C59F
CB6D:	BCS  $CB53
CB6F:	LDX 
CB71:	LDAA #$17
CB73:	INX 
CB74:	BEQ  $CB52
CB76:	DEX 
CB77:	JMP  0,X
CB79:	JSR  $C424
CB7C:	BCC  $CB77
CB7E:	RTS 
CB7F:	BLT  $CBC5
CB81:	55
CB82:	NEGB
CB83:	BRA  $CBCE
CB85:	LSRA
CB86:	BRA  $CBDA
CB88:	45
CB89:	TSTA
CB8A:	CLRA
CB8B:	RORB
CB8C:	45
CB8D:	SWI 
CB8E:	BRA  $CB94
CB90:	RORA
CB91:	ROLA
CB92:	INCA
CB93:	45
CB94:	BRA  $CBDF
CB96:	LSRA
CB97:	BRA  $CBB9
CB99:	BRA  $CBE1
CB9B:	LSRB
CB9C:	BRA  $CBF1
CB9E:	COMA
CB9F:	BRA  $CBE3
CBA1:	45
CBA2:	ASRA
CBA3:	BGT  $CBC5
CBA5:	45
CBA6:	4E
CBA7:	LSRA
CBA8:	BRA  $CBCA
CBAA:	INCA
CBAB:	CLRA
CBAC:	COMA
CBAD:	04
CBAE:	SEC 
CBAF:	CLV 
CBB0:	COMB
CBB1:	ASRB
CBB2:	41
CBB3:	NEGB
CBB4:	04
CBB5:	BPL  $CBF8
CBB7:	RORB
CBB8:	41
CBB9:	ROLA
CBBA:	INCA
CBBB:	41
CBBC:	42
CBBD:	INCA
CBBE:	45
CBBF:	BPL  $CBE1

CBC1:	BRA  $CBC7
CBC3:	FCB  'LO'     LOAD COMMAND
CBC5:	FDB  $C5E9
CBC7:	FCB  'CK'     CHECK (CHECK DISK) COMMAND
CBC9:	FDB  $C942
CBCB:	FCB  'SA'     SAVE COMMAND
CBCD:	FDB  $C5DB
CBCF:	FCB  'AD'     ADD COMMAND
CBD1:	FDB  $C6C6
CBD3:	FCB  'OP'     OPEN (CREATE FILE) COMMAND
CBD5:	FDB  $C7A8
CBD7:	FCB  'NE'     NEW (FORMAT) COMMAND
CBD9:	FDB  $C71E
CBDB:	FCB  'RE'     REMOVE (DELETE FILE) COMMAND
CBDD:	FDB  $C7D3
CBDF:	FCB  'CO'     COPY COMMAND
CBD1:	FDB  $C869
CBE3:	FCB  'SQ'     SQUASH (PACK) COMMAND
CBE5:	FDB  $C9B7
CBE7:	FCB  'AN'     ANALYZE (DIR) COMMAND
CBE9:	FDB  $CA7E
CBEB:	FCB  'CH'     CHANGE (RENAME) COMMAND
CBED:	FDB  $CB43
CBEF:	FCB  'RU'     RUN COMMAND
CBF1:	FDB  $CB68
CBF3:	FCB  'GO'     GOTO (JUMP TO ADDR) COMMAND
CBF5:	FDB  $CB79
CBF7:	FCB  'SI'     SIZE COMMAND
CBF9:	FDB  $C985
CBFB:	FCB  'EX'     EXIT (TO SWTBUG) COMMAND
CBFD:	FDB  $E0E3
CBFF:	00
