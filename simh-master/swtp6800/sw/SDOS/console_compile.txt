Logging to file "console.txt"

$L 
$G 
$L 
$L 
$J 2000
SDOS Version 1.1G2, Copyright (C) 1978 Software Dynamics
08/10/82 SIMH SWTPC6800 SDOS 1.1G        
.version
SDOS Version 1.1  SDOSCMDS V1.1k  RTP 1.4l Copyright (C) 1977 Software Dynamics
.userspace
:B400
.* 
.* 
.* 
.* **************************************
.* Init Hard Disk. It will be used to compile the OS
.* **************************************
.sdosdiskinit
*** SDOS Disk Initialization V1.1h ***
Name of drive containing disk to initialize? HD:
Next time, you can type:
    .sdosdiskinit HD:
Disk id? SDOS HD 5 MB
From what disk device can the tuning parameters be copied? 
Disk has  5013504 bytes.
How many sectors per cluster (Default value is 25 ) 
That will waste 18 sectors
Minimum allocation (Default value=1): 
Minimum extension (Default value=1): 
Map Algorithm (Default value :0001, ? to find best): 
NBPS= 128  NLSN= 39168  NLCN= 1566  NSPC= 25  Map algorithm=:0001
How many files do you anticipate having on this disk? 
(Default value is 612 ): 
Is this to be a bootable system disk (Default = NO)? 
Disk initialization complete.
.copy d0:defaultprogram to hd:defaultprogram
.defaultdisk hd:
.* 
.* 
.* 
.* **************************************
.* Assemble ASM 1.4 using ASM 1.3
.* **************************************
.* 
.* Load source files ASM14XXX.ASM and convert them from 680C to 6800
.list port: to HD:M680C.LIB
.copy port: to HD:M680C
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.CTRL.ASM
Input file= A.ASM
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.DEFS.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.DITL0.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.DREX.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.EVAL.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.FCONV.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.IOFM.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14A.MAIN.ASM
Input file= A.ASM
No END in file!
.list port: to HD:A.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= ASM14IODR.ASM
Input file= A.ASM
.delete HD:A.ASM
.* 
.* Assemble ASM14A.CTRL.ASM with ASM 1.3 -> generates ASM14BODY.680
.copy port: to hd:ASM13
.asm13

Software Dynamics ASM/6800, Version 1.3 H4 / 37EC
Source File=ASM14A.CTRL.ASM
Listing File=ASM14BODY.LST
Binary File=ASM14BODY.680
>


 *** No Assembly Errors.
.list hd:ASM14BODY.LST to port:
.copy hd:ASM14BODY.680 to port:
.delete HD:ASM14BODY.LST
.* 
.* Assemble ASM14IODR with ASM 1.3 -> generates ASM14IODR.680
.list port: to HD:SDOSUSERDEFS.ASM
.asm13

Software Dynamics ASM/6800, Version 1.3 H4 / 37EC
Source File=ASM14IODR.ASM
Listing File=ASM14IODR.LST
Binary File=ASM14IODR.680
>


 *** No Assembly Errors.
.list hd:ASM14IODR.LST to port:
.copy hd:ASM14IODR.680 to port:
.delete HD:ASM14IODR.LST
.* 
.* Merge ASM14BODY.680 + ASM14IODR.680 -> ASM14A.680
.copy port: to hd:MERGEBIN
.copy port: to hd:ASM14BODY.680
.copy port: to hd:ASM14IODR.680
.MERGEBIN
*** MERGE BINARY PROGRAM ***
Input File1= ASM14BODY.680
Input File2= ASM14IODR.680
Output File= ASM14A.680
Loading File: ASM14BODY.680
   ADDR :0100, COUNT :0006
   ADDR :0700, COUNT :0905
   ADDR :1022, COUNT :1E7F
Loading File: ASM14IODR.680
   ADDR :0108, COUNT :010B
   ADDR :031C, COUNT :00A6
   ADDR :03C4, COUNT :027B
Generated File: ASM14A.680
.copy hd:ASM14A.680 to port:
.* 
.* Assemble TEST.ASM with generated ASM 1.4
.copy port: to hd:edit
.copy port: to hd:ASM14A.680
.EDIT
EDIT V1.1s1   Copyright (C) 1979 Software Dynamics
*ewTEST.ASM\
*I        IFUND    M6800  
\M6800   EQU      1 
\        FIN 
\        ORG $1000 
\START   LDAA #0 
\AAA     001 
\        LDAA AAA 
\        END START 
\\
*exit
.ASM14A.680

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=TEST.ASM
Listing File=TEST.LST
Binary File=TEST.680
>


 *** No Assembly Errors.
.list TEST.LST




ASM/6800 1.4A0: 0000                    
08/16/82 00:00:00; Page 1; Form 1       
TEST.ASM
  0000            1:         IFUND    M6800  
 *S*              2: M6800   EQU      1 
                  3:         FIN 
  1000            4:         ORG $1000 
1000 8600         5: START   LDAA #0 
1002 01           6: AAA     001 
1003 B61002       7:         LDAA AAA 
                  8:         END START 




ASM/6800 1.4A0: 1003                    
08/16/82 00:00:00; Page 2; Form 1       Symbols Sorted by Name
TEST.ASM
Symbols Sorted by Name:

 AAA/1002       *M6800/0001     *M6801/0000     *M6809/0000      START/1000




ASM/6800 1.4A0: 1003                    
08/16/82 00:00:00; Page 3; Form 1       Symbols Sorted by Value
TEST.ASM
Symbols Sorted by Value:

*M6801/0000     *M6809/0000     *M6800/0001      START/1000      AAA/1002

5 Symbols.


 *** No Assembly Errors.
.delete ASM14*.ASM
Ask before doing the delete? n
ASM14A.MAIN.ASM
ASM14A.DREX.ASM
ASM14A.DEFS.ASM
ASM14A.FCONV.ASM
ASM14IODR.ASM
ASM14A.EVAL.ASM
ASM14A.IOFM.ASM
ASM14A.CTRL.ASM
ASM14A.DITL0.ASM
.* 
.* 
.* 
.* **************************************
.* Assemble MetaCompiler and MetaMachine
.* **************************************
.* 
.* Assemble Metamachine METAM14C from source using M680C macro expansion
.list port: to HD:METAM14C.ASM
.list port: to HD:SDOSUSERDEFS.ASM
.list port: to HD:M680C.LIB
.copy port: to HD:M680C
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= M.ASM
Input file= METAM14C.ASM
.copy port: to hd:ASM
.copy port: to hd:ASM13
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=M.ASM
Listing File=METAM14C.LST
Binary File=METAM14C.680
>


 *** No Assembly Errors.
.list hd:METAM14C.LST to port:
.copy port: to hd:METAM14C.680
.* 
.* Load Metacompiler 1.4, use it to compile itself to Metamachine code
.copy port: to HD:META14C
.list port: to HD:META14C.BNF
.META14C
METAPLUS Version 1.4c Copyright (c) 1979 Software Dynamics
Input file = META14C.BNF
Output File = META14C.ASM
Compilation Complete
.list hd:META14C.ASM to port:
.* 
.* Assemble Metacompiler
.asm13

Software Dynamics ASM/6800, Version 1.3 H4 / 37EC
Source File=META14C.ASM
Listing File=META14C.LST
Binary File=META14C.680
>


 *** No Assembly Errors.
.list hd:META14C.LST to port:
.copy port: to hd:MERGEBIN
.MERGEBIN
*** MERGE BINARY PROGRAM ***
Input File1= METAM14C.680
Input File2= META14C.680
Output File= META14C.680
Loading File: METAM14C.680
   ADDR :0100, COUNT :0A9C
Loading File: META14C.680
   ADDR :0C80, COUNT :10E1
Generated File: META14C.680
.copy hd:META14C.680 to port:
.delete META14C.LST
.delete METAM14C.LST
.* 
.* 
.* 
.* **************************************
.* Assemble BASIC compiler
.* **************************************
.* 
.* Load meta compiler 1.4, use it to compile basic14i.bnf to metamachine code
.copy port: to HD:META14C
.list port: to HD:BASIC14I.BNF
.META14C
METAPLUS Version 1.4c Copyright (c) 1979 Software Dynamics
Input file = BASIC14I.BNF
Output File = BASIC14I.ASM
Compilation Complete
.copy port: to hd:ASM13
.asm13

Software Dynamics ASM/6800, Version 1.3 H4 / 37EC
Source File=BASIC14I.ASM
Listing File=BASIC14I.LST
Binary File=BASIC14I.680
>


 *** No Assembly Errors.
.list hd:BASIC14I.ASM to port:
.list hd:BASIC14I.LST to port:
.copy hd:BASIC14I.680 to port:
.delete HD:BASIC14I.LST
.delete HD:BASIC14I.ASM
.delete HD:BASIC14I.BNF
.* 
.* Concat METAM14C.680 + basic14i.680 -> basic.680
.copy port: to hd:MERGEBIN
.copy port: to hd:METAM14C.680
.copy port: to HD:BASIC14I.680
.MERGEBIN
*** MERGE BINARY PROGRAM ***
Input File1= METAM14C.680
Input File2= BASIC14I.680
Output File= BASIC.680
Loading File: METAM14C.680
   ADDR :0100, COUNT :0A9C
Loading File: BASIC14I.680
   ADDR :0C80, COUNT :3BE3
Generated File: BASIC.680
.copy hd:BASIC.680 to port:
.* 
.* Test basic compiler with a sample program
.copy port: to hd:edit
.EDIT
EDIT V1.1s1   Copyright (C) 1979 Software Dynamics
*ewHELLO.BAS\
*I10 REM Hola 
\20 PRINT "Hola" 
\30 STOP 
\40 END 
\\
*exit
.list HELLO.BAS
10 REM Hola 
20 PRINT "Hola" 
30 STOP 
40 END 
.copy port: to HD:BASIC
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = HELLO.BAS
Output File = HELLO.ASM
Compilation Complete
.copy port: to hd:ASM
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=HELLO.ASM
Listing File=HELLO.LST
Binary File=HELLO
>


 *** No Assembly Errors.
.list HELLO.LST




ASM/6800 1.4A0: 0000                    
08/16/82 00:00:00; Page 1; Form 1       
HELLO.ASM
                  1: *       Compiled by 4/13/82 Software Dynamics BASIC Version 1.4i
  0100            2: .CATBUFSIZE     SET     $100
  0000            3: .       SET     0
  0000            4: .NSV    SET     0
  0000            5: ::      SET     0
  2E00            6:         ORG     $2E00
  2E00            7: .PROGSTART      EQU     *
2E00 BD0100       8:         JSR     $100
2E03 14           9:         +$14
2E04 0000        10:         #.FREFLBL
2E06 0100        11:         #.CATBUFSIZE
2E08 2E30        12:         #:+.TNSS
2E0A 2E30        13:         #:+.TNSS+.TNSV*6
2E0C 34          14:         052
2E0D 2E15        15:         #::11
2E0F 38          16: :10     056
2E10 000A        17:         #10
2E12 34          18:         052
2E13 2E1E        19:         #.CODE
  2E15           20: ::11    EQU     *
2E15 34          21:         052
2E16 2E1E        22:         #::12
2E18 38          23: :20     056
2E19 0014        24:         #20
2E1B 34          25:         052
2E1C 2E1E        26:         #.CODE
  2E1E           27: ::12    EQU     *
  2E1E           28: .CODE   EQU     *
2E1E 69          29:         105
2E1F 13          30:         019
2E20 04          31:         +::13-*-1
2E21 486F6C61    32:         FCC     "Hola"
  2E25           33: ::13    EQU     *
2E25 3C          34:         060
2E26 3B          35:         059
2E27 38          36: :30     056
2E28 001E        37:         #30
2E2A 37          38:         055
2E2B 38          39: :40     056
2E2C 0028        40:         #40
2E2E 7A          41:         122
2E2F 19          42:         025
  2E30           43: .PROGEND        EQU     *
  0000           44: .FREFLBL        EQU     .
  0000           45: .TNSS   EQU     ::
  0000           46: .TNSV   EQU     .NSV
  0000           47:         IF      .TNSV>>64+256
 *S*             48:         ?Maximum of 320 Scalar variables has been exceeded?
                 49:         FIN
  0001           50:         IFUND   :
  2E30           51: :       EQU     *
2E30 0000        52:         RMB     .TNSS+.TNSV*6
                 53:         FIN
  0000           54:         IF      .PROGEND>>:&.PROGEND<<:+.TNSS+.TNSV*6
 *S*             55:         ? Data space overlaps end of code space




ASM/6800 1.4A0: 2E30                    
08/16/82 00:00:00; Page 2; Form 1       
HELLO.ASM
                 56:         FIN
  0000           57:         IF      .PROGSTART>>:&.PROGSTART<<:+.TNSS+.TNSV*6
 *S*             58:         ? Data space overlaps beginning of code space
                 59:         FIN
                 60:         END     .PROGSTART




ASM/6800 1.4A0: 2E30                    
08/16/82 00:00:00; Page 3; Form 1       Symbols Sorted by Name
HELLO.ASM
Symbols Sorted by Name:

 ./0000          .CATBUFSIZE/0100                .CODE/2E1E      .FREFLBL/0000   .NSV/0000       .PROGEND/2E30   .PROGSTART/2E00
 .TNSS/0000      .TNSV/0000      :/2E30         *:10/2E0F       *:20/2E18       *:30/2E27       *:40/2E2B        ::/0000
 ::11/2E15       ::12/2E1E       ::13/2E25      *M6800/0001     *M6801/0000     *M6809/0000




ASM/6800 1.4A0: 2E30                    
08/16/82 00:00:00; Page 4; Form 1       Symbols Sorted by Value
HELLO.ASM
Symbols Sorted by Value:

 ./0000          .FREFLBL/0000   .NSV/0000       .TNSS/0000      .TNSV/0000      ::/0000        *M6801/0000     *M6809/0000
*M6800/0001      .CATBUFSIZE/0100                .PROGSTART/2E00                *:10/2E0F        ::11/2E15      *:20/2E18
 .CODE/2E1E      ::12/2E1E       ::13/2E25      *:30/2E27       *:40/2E2B        .PROGEND/2E30   :/2E30

21 Symbols.


 *** No Assembly Errors.
.HELLO
Hola
Line  30
.* 
.* 
.* 
.* **************************************
.* Compile BASIC programs
.* **************************************
.copy port: to HD:BASIC
.copy port: to HD:ASM
.copy port: to hd:edit
.list port: to HD:M680C.LIB
.copy port: to HD:M680C
.copy port: to hd:MERGEBIN
.list port: to HD:SDOSUSERDEFS.ASM
.* 
.* Assemble BASIC RunTime Package (RTP)
.list port: to HD:BASRTP14L.ASM
.* 
.* Convert RTP from 680C to 6800
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= RTP.ASM
Input file= BASRTP14L.ASM
.* 
.* Assemble RTP
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=RTP.ASM
Listing File=BASRTP14L.LST
Binary File=BASRTP14L.680
>


 *** No Assembly Errors.
.list hd:BASRTP14L.LST to port:
.* 
.* Compile SDOS Command Interpreter
.* 
.* ---------------------------------
.* 
.* Compile basic program SDOSCMDS11L.BAS
.list port: to HD:SDOSCMDS11L.BAS
.* 
.* Basic prog calls assembly routines
.list port: to HD:SDOSCMDS11L.ASM
.* 
.* Convert assembly routines from 680C to 6800
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= A.ASM
Input file= SDOSCMDS11L.ASM
.delete SDOSCMDS11L.ASM
.copy A.ASM to SDOSCMDS11L.ASM
.delete A.ASM
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = SDOSCMDS11L.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Insert INCLUDE above PROGEND label in asm source of compiled basic prog
.EDIT
EDIT V1.1s1   Copyright (C) 1979 Software Dynamics
*erBAS.ASM\ewBAS.ASM\1n.PROGEND\

End Of File hit
.PROGEND        EQU     *
*0L
.PROGEND        EQU     *
*I     INCLUDE SDOSCMDS11L.ASM 
\\
*exit
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=SDOSCMDS11L.680
>OKRTS      EQU  $0C39   ;CLC,RTS 
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:SDOSCMDS11L.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete SDOSCMDS11L.BAS
.* 
.* Compilation done
.* 
.* Create Defaultprogram mergin RTP + SDOS Command Interpreter
.MERGEBIN
*** MERGE BINARY PROGRAM ***
Input File1= BASRTP14L.680
Input File2= SDOSCMDS11L.680
Output File= DEFAULT14L.680
Loading File: BASRTP14L.680
   ADDR :0100, COUNT :2E79
   ADDR :3000, COUNT :0012
Loading File: SDOSCMDS11L.680
   ADDR :2E00, COUNT :1F50
Generated File: DEFAULT14L.680
.delete RTP.ASM
.delete BASRTP14L.ASM
.delete BASRTP14L.LST
.* 
.* ---------------------------------
.* 
.* Compile basic program SYSGEN10K.BAS
.list port: to HD:SYSGEN10K.BAS
.* 
.* Basic prog calls assembly routines
.list port: to HD:BINARYACCESS.ASM
.* 
.* Convert assembly routines from 680C to 6800
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= A.ASM
Input file= BINARYACCESS.ASM
.delete BINARYACCESS.ASM
.copy A.ASM to BINARYACCESS.ASM
.delete A.ASM
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = SYSGEN10K.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Insert INCLUDE above PROGEND label in asm source of compiled basic prog
.EDIT
EDIT V1.1s1   Copyright (C) 1979 Software Dynamics
*erBAS.ASM\ewBAS.ASM\1n.PROGEND\

End Of File hit
.PROGEND        EQU     *
*0L
.PROGEND        EQU     *
*I     INCLUDE BINARYACCESS.ASM 
\\
*exit
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=SYSGEN10K.680
>OKRTS      EQU  $0C39   ;CLC,RTS 
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:SYSGEN10K.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete SYSGEN10K.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program BACKUP11G.BAS
.list port: to HD:BACKUP11G.BAS
.* 
.* Basic prog calls assembly routines
.list port: to HD:BACKUP11G.ASM
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = BACKUP11G.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Insert INCLUDE above PROGEND label in asm source of compiled basic prog
.EDIT
EDIT V1.1s1   Copyright (C) 1979 Software Dynamics
*erBAS.ASM\ewBAS.ASM\1n.PROGEND\

End Of File hit
.PROGEND        EQU     *
*0L
.PROGEND        EQU     *
*I     INCLUDE BACKUP11G.ASM 
\\
*exit
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=BACKUP11G.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:BACKUP11G.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete BACKUP11G.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program M680C.BAS
.list port: to HD:M680C.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = M680C.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=M680C.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:M680C.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete M680C.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program ERRORMAINT14.BAS
.list port: to HD:ERRORMAINT14.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = ERRORMAINT14.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=ERRORMAINT14.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:ERRORMAINT14.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete ERRORMAINT14.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program MAKMIKBUG11B.BAS
.list port: to HD:MAKMIKBUG11B.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = MAKMIKBUG11B.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=MAKMIKBUG11B.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:MAKMIKBUG11B.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete MAKMIKBUG11B.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program MAKBINARY11A.BAS
.list port: to HD:MAKBINARY11A.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = MAKBINARY11A.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=MAKBINARY11A.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:MAKBINARY11A.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete MAKBINARY11A.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program SDCOPY.BAS
.list port: to HD:SDCOPY.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = SDCOPY.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=SDCOPY.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:SDCOPY.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete SDCOPY.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program STRIPIFS.BAS
.list port: to HD:STRIPIFS.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = STRIPIFS.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=STRIPIFS.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:STRIPIFS.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete STRIPIFS.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program BMPVT14F.BAS
.list port: to HD:BMPVT14F.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = BMPVT14F.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=BMPVT14F.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:BMPVT14F.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete BMPVT14F.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program DISKINIT11H.BAS
.list port: to HD:DISKINIT11H.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = DISKINIT11H.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=DISKINIT11H.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:DISKINIT11H.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete DISKINIT11H.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program TRIMBIN.BAS
.list port: to HD:TRIMBIN.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = TRIMBIN.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=TRIMBIN.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:TRIMBIN.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete TRIMBIN.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program MERGEBIN.BAS
.list port: to HD:MERGEBIN.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = MERGEBIN.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=MERGEBIN.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:MERGEBIN.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete MERGEBIN.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program CALCULATE.BAS
.list port: to HD:CALCULATE.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = CALCULATE.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=CALCULATE.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:CALCULATE.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete CALCULATE.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program MNB14.BAS
.list port: to HD:MNB14.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = MNB14.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=MNB14.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:MNB14.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete MNB14.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program COMPILE10B.BAS
.list port: to HD:COMPILE10B.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = COMPILE10B.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=COMPILE10B.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:COMPILE10B.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete COMPILE10B.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program FIX10B.BAS
.list port: to HD:FIX10B.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = FIX10B.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=FIX10B.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:FIX10B.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete FIX10B.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program FINDLABEL10B.BAS
.list port: to HD:FINDLABEL10B.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = FINDLABEL10B.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=FINDLABEL10B.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:FINDLABEL10B.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete FINDLABEL10B.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program SDIR.BAS
.list port: to HD:SDIR.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = SDIR.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=SDIR.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:SDIR.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete SDIR.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program DIR14.BAS
.list port: to HD:DIR14.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = DIR14.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=DIR14.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:DIR14.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete DIR14.BAS
.* 
.* Compilation done
.* 
.* ---------------------------------
.* 
.* Compile basic program CHESS14.BAS
.list port: to HD:CHESS14.BAS
.* 
.* Use basic compiler
.BASIC
Software Dynamics BASIC Compiler Version 1.4i (C) 1982
Input file = CHESS14.BAS
Output File = BAS.ASM
Compilation Complete
.* 
.* Assemble compiled basic prog
.ASM

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=BAS.ASM
Listing File=BAS.LST
Binary File=CHESS14.680
>


 *** No Assembly Errors.
.* 
.* Export compiled prog, listing and asm source
.list hd:BAS.LST to port:
.list hd:BAS.ASM to port:
.copy hd:CHESS14.680 to port:
.* 
.* Clean up
.delete BAS.LST
.delete BAS.ASM
.delete CHESS14.BAS
.* 
.* Compilation done
.* 
.* 
.* 
.* **************************************
.* generate .TXT manuals from .TYP files
.* **************************************
.copy port: to hd:type
.
.***** Generate Text Doc from SDOSMANPART1.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*SDOSMANPART1.TXT=MANTEXT.TYP
*
.list hd:SDOSMANPART1.TXT to port:
.delete MANTEXT.TYP
.delete SDOSMANPART1.TXT
.
.***** Generate Text Doc from SDOSMANPART2.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*SDOSMANPART2.TXT=MANTEXT.TYP
*
.list hd:SDOSMANPART2.TXT to port:
.delete MANTEXT.TYP
.delete SDOSMANPART2.TXT
.
.***** Generate Text Doc from SDOSMANPART3.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*SDOSMANPART3.TXT=MANTEXT.TYP

**ERROR: TOC TABLE MISMATCH
*
.list hd:SDOSMANPART3.TXT to port:
.delete MANTEXT.TYP
.delete SDOSMANPART3.TXT
.
.***** Generate Text Doc from TYPEMANUAL.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*TYPEMANUAL.TXT=MANTEXT.TYP
*
.list hd:TYPEMANUAL.TXT to port:
.delete MANTEXT.TYP
.delete TYPEMANUAL.TXT
.
.***** Generate Text Doc from TYPEADDEN.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*TYPEADDEN.TXT=MANTEXT.TYP
*
.list hd:TYPEADDEN.TXT to port:
.delete MANTEXT.TYP
.delete TYPEADDEN.TXT
.
.***** Generate Text Doc from TYPEBUGS.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*TYPEBUGS.TXT=MANTEXT.TYP
*
.list hd:TYPEBUGS.TXT to port:
.delete MANTEXT.TYP
.delete TYPEBUGS.TXT
.
.***** Generate Text Doc from ASMMANUAL14.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*ASMMANUAL14.TXT=MANTEXT.TYP
*
.list hd:ASMMANUAL14.TXT to port:
.delete MANTEXT.TYP
.delete ASMMANUAL14.TXT
.
.***** Generate Text Doc from BASICMAN14J.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*BASICMAN14J.TXT=MANTEXT.TYP
*
.list hd:BASICMAN14J.TXT to port:
.delete MANTEXT.TYP
.delete BASICMAN14J.TXT
.
.***** Generate Text Doc from EDIT11.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*EDIT11.TXT=MANTEXT.TYP
*
.list hd:EDIT11.TXT to port:
.delete MANTEXT.TYP
.delete EDIT11.TXT
.
.***** Generate Text Doc from SORTMANUAL.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*SORTMANUAL.TXT=MANTEXT.TYP
*
.list hd:SORTMANUAL.TXT to port:
.delete MANTEXT.TYP
.delete SORTMANUAL.TXT
.
.***** Generate Text Doc from BMP.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*BMP.TXT=MANTEXT.TYP
*
.list hd:BMP.TXT to port:
.delete MANTEXT.TYP
.delete BMP.TXT
.
.***** Generate Text Doc from DEFAULTBUGS.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*DEFAULTBUGS.TXT=MANTEXT.TYP
*
.list hd:DEFAULTBUGS.TXT to port:
.delete MANTEXT.TYP
.delete DEFAULTBUGS.TXT
.
.***** Generate Text Doc from VALIDATEBUGS.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*VALIDATEBUGS.TXT=MANTEXT.TYP
*
.list hd:VALIDATEBUGS.TXT to port:
.delete MANTEXT.TYP
.delete VALIDATEBUGS.TXT
.
.***** Generate Text Doc from BACKUPBUGS.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*BACKUPBUGS.TXT=MANTEXT.TYP
*
.list hd:BACKUPBUGS.TXT to port:
.delete MANTEXT.TYP
.delete BACKUPBUGS.TXT
.
.***** Generate Text Doc from VTDRIVER.TYP *****
.list port: to hd:MANTEXT.TYP
.TYPE
TYPE, V2.3   Copyright 1980 Advanced Microcomputer Systems 
*VTDRIVER.TXT=MANTEXT.TYP
*
.list hd:VTDRIVER.TXT to port:
.delete MANTEXT.TYP
.delete VTDRIVER.TXT
.
.* 
.* 
.* 
.* **************************************
.* assemble SDOS core operating system
.* **************************************
.* 
.* Import needed files
.list port: to HD:M680C.LIB
.copy port: to HD:M680C
.copy port: to hd:ASM
.copy port: to hd:makmikbug
.list port: to HD:SDOS11DEFS.ASM
.list port: to HD:SDOS11GPART1.ASM
.list port: to HD:SDOS11GPART2.ASM
.list port: to HD:SDOS11G.ASM
.* 
.* convert original SDOS sources from 680C to 6800
.copy SDOS11GPART1.ASM,SDOS11GPART2.ASM to SDOS680C.ASM
.M680C
M680C v1.0j   Copyright (C) 1980 Software Dynamics
Output file= SDOS6800.ASM
Input file= SDOS680C.ASM
.delete SDOS11GPART1.ASM 
.delete SDOS11GPART2.ASM 
.delete SDOS680C.ASM 
.* 
.* assemble original SDOS for 56K RAM (used to buid SDOS Boot Floppy)
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=SDOS6800.ASM
Listing File=SDOS11G56K.LST
Binary File=SDOS11G56K.680
>IOPKDEFS   EQU  0 
>MEMSIZE    EQU 56 
>OKRTS      EQU  $0C39   ;CLC,RTS 
>ERRORRTS   EQU  $0D39   ;SEC,RTS 
>SDOSSUBREVISION   EQU  'G 
>


 *** No Assembly Errors.
.list hd:SDOS11G56K.LST to port:
.copy hd:SDOS11G56K.680 to port:
.delete SDOS11G56K.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: SDOS11G56K.680
MIKBUG output file: SDOS11G56K.S19
Next time, you can type:
     .makemikbug SDOS11G56K.680 to SDOS11G56K.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :00FB  count= :0003
Record type= LOAD   address= :2000  count= :06FF
Record type= LOAD   address= :2707  count= :000B
Record type= LOAD   address= :2715  count= :003F
Record type= LOAD   address= :2758  count= :0029
Record type= LOAD   address= :2784  count= :0004
Record type= LOAD   address= :AE00  count= :0003
Record type= LOAD   address= :AE11  count= :0037
Record type= LOAD   address= :AE58  count= :0004
Record type= LOAD   address= :AE5E  count= :0007
Record type= LOAD   address= :AE73  count= :000B
Record type= LOAD   address= :AE8A  count= :0002
Record type= LOAD   address= :AED1  count= :0004
Record type= LOAD   address= :AF0C  count= :0002
Record type= LOAD   address= :AF1F  count= :0002
Record type= LOAD   address= :AF28  count= :0002
Record type= LOAD   address= :AF79  count= :0001
Record type= LOAD   address= :AF7D  count= :0009
Record type= LOAD   address= :AF88  count= :0006
Record type= GO     address= :AF92  count= :2F69
All done
.list hd:SDOS11G56K.S19 to port:
.* 
.* assemble SDOS for 64K RAM with SerialNumber/checksum validation disabled
.* 
.* (used to boot ram64K SimH machine and run this compile.ini script)
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=SDOS11G.ASM
Listing File=SDOS11G64K.LST
Binary File=SDOS11G64K.680
>IOPKDEFS   EQU  0 
>MEMSIZE    EQU 64 
>OKRTS      EQU  $0C39   ;CLC,RTS 
>ERRORRTS   EQU  $0D39   ;SEC,RTS 
>SDOSSUBREVISION   EQU  'G 
>


 *** No Assembly Errors.
.list hd:SDOS11G64K.LST to port:
.copy hd:SDOS11G64K.680 to port:
.delete SDOS11G64K.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: SDOS11G64K.680
MIKBUG output file: SDOS11G64K.S19
Next time, you can type:
     .makemikbug SDOS11G64K.680 to SDOS11G64K.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :00FB  count= :0003
Record type= LOAD   address= :2000  count= :06FF
Record type= LOAD   address= :2707  count= :000B
Record type= LOAD   address= :2715  count= :003F
Record type= LOAD   address= :2758  count= :0029
Record type= LOAD   address= :2784  count= :0004
Record type= LOAD   address= :CE00  count= :0003
Record type= LOAD   address= :CE11  count= :0037
Record type= LOAD   address= :CE58  count= :0004
Record type= LOAD   address= :CE5E  count= :0007
Record type= LOAD   address= :CE73  count= :000B
Record type= LOAD   address= :CE8A  count= :0002
Record type= LOAD   address= :CED1  count= :0004
Record type= LOAD   address= :CF0C  count= :0002
Record type= LOAD   address= :CF1F  count= :0002
Record type= LOAD   address= :CF28  count= :0002
Record type= LOAD   address= :CF79  count= :0001
Record type= LOAD   address= :CF7D  count= :0009
Record type= LOAD   address= :CF88  count= :0006
Record type= GO     address= :CF92  count= :2F61
All done
.list hd:SDOS11G64K.S19 to port:
.delete SDOS6800.ASM
.delete SDOS11G.ASM
.delete SDOS11DEFS.ASM
.* 
.* 
.* 
.* **************************************
.* assemble SimH SWTPC IO Package 
.* **************************************
.* 
.* Import needed files
.copy port: to hd:ASM
.copy port: to hd:makmikbug
.list port: to HD:IOSWTPC6800.ASM
.list port: to HD:LOADER.ASM
.list port: to HD:SWTBUG4000.ASM
.copy port: to hd:makmikbug
.* 
.* Assemble swtpc 6800 io package
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=IOSWTPC6800.ASM
Listing File=IOSWTPC6800.LST
Binary File=IOSWTPC6800.680
>RAM64K   EQU  0 
>


 *** No Assembly Errors.
.list hd:IOSWTPC6800.LST to port:
.copy hd:IOSWTPC6800.680 to port:
.delete IOSWTPC6800.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: IOSWTPC6800.680
MIKBUG output file: IOSWTPC6800.S19
Next time, you can type:
     .makemikbug IOSWTPC6800.680 to IOSWTPC6800.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :AE00  count= :0011
Record type= LOAD   address= :2027  count= :0002
Record type= LOAD   address= :23E9  count= :0002
Record type= LOAD   address= :2031  count= :0002
Record type= LOAD   address= :217A  count= :0001
Record type= LOAD   address= :B00F  count= :0007
Record type= LOAD   address= :B408  count= :0002
Record type= LOAD   address= :DD82  count= :0006
Record type= LOAD   address= :B844  count= :0002
Record type= LOAD   address= :B837  count= :0001
Record type= LOAD   address= :C6F1  count= :0002
Record type= LOAD   address= :2138  count= :0002
Record type= LOAD   address= :2736  count= :0010
Record type= LOAD   address= :2000  count= :0003
Record type= LOAD   address= :3000  count= :0027
Record type= LOAD   address= :A080  count= :0004
Record type= LOAD   address= :A662  count= :0002
Record type= LOAD   address= :7000  count= :006E
Record type= LOAD   address= :7078  count= :004B
Record type= LOAD   address= :71E0  count= :0516
Record type= LOAD   address= :7715  count= :000F
Record type= LOAD   address= :7728  count= :0016
Record type= LOAD   address= :775D  count= :000F
Record type= LOAD   address= :7770  count= :0016
Record type= LOAD   address= :77A5  count= :000F
Record type= LOAD   address= :77B8  count= :0016
Record type= LOAD   address= :77ED  count= :000F
Record type= LOAD   address= :7800  count= :00FB
Record type= LOAD   address= :7903  count= :0001
Record type= LOAD   address= :790A  count= :011C
Record type= LOAD   address= :7A45  count= :000F
Record type= GO     address= :7A58  count= :0184
All done
.list hd:IOSWTPC6800.S19 to port:
.* 
.* Assemble SimH swtpc 6800 ram64k io package
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=IOSWTPC6800.ASM
Listing File=IOSWTPC64K.LST
Binary File=IOSWTPC64K.680
>RAM64K   EQU  1 
>


 *** No Assembly Errors.
.list hd:IOSWTPC64K.LST to port:
.delete IOSWTPC64K.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: IOSWTPC64K.680
MIKBUG output file: IOSWTPC64K.S19
Next time, you can type:
     .makemikbug IOSWTPC64K.680 to IOSWTPC64K.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :CE00  count= :0011
Record type= LOAD   address= :2000  count= :0003
Record type= LOAD   address= :3000  count= :0027
Record type= LOAD   address= :C080  count= :0001
Record type= LOAD   address= :C65F  count= :0002
Record type= LOAD   address= :B400  count= :006E
Record type= LOAD   address= :B478  count= :004B
Record type= LOAD   address= :B5E0  count= :054F
Record type= LOAD   address= :BB4E  count= :000F
Record type= LOAD   address= :BB61  count= :0016
Record type= LOAD   address= :BB96  count= :000F
Record type= LOAD   address= :BBA9  count= :0016
Record type= LOAD   address= :BBDE  count= :000F
Record type= LOAD   address= :BBF1  count= :0016
Record type= LOAD   address= :BC26  count= :000F
Record type= LOAD   address= :BC39  count= :00FB
Record type= LOAD   address= :BD3C  count= :0001
Record type= LOAD   address= :BD43  count= :011C
Record type= LOAD   address= :BE7E  count= :000F
Record type= GO     address= :BE91  count= :0184
All done
.list hd:IOSWTPC64K.S19 to port:
.* 
.* Assemble SWTBUG at addr $4000 to be used in SimH swtpc 6800 ram64k
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=SWTBUG4000.ASM
Listing File=SWTBUG4000.LST
Binary File=SWTBUG4000.680
>


 *** No Assembly Errors.
.list hd:SWTBUG4000.LST to port:
.delete SWTBUG4000.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: SWTBUG4000.680
MIKBUG output file: SWTBUG4000.S19
Next time, you can type:
     .makemikbug SWTBUG4000.680 to SWTBUG4000.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :4000  count= :0400
Record type= GO     address= :A048  count= :0002
All done
.list hd:SWTBUG4000.S19 to port:
.* 
.* Assemble boot LOADER for MF4 floppy for standard swtpc 6800
.asm

Software Dynamics ASM/6800, Version 1.4AA0 / 37EC
Source File=LOADER.ASM
Listing File=LOADER.LST
Binary File=LOADER.680
>


 *** No Assembly Errors.
.list hd:LOADER.LST to port:
.copy hd:LOADER.680 to port:
.delete LOADER.LST 
.makmikbug
Make MIKBUG v1.1b
SDOS object file to convert to MIKBUG: LOADER.680
MIKBUG output file: LOADER.S19
Next time, you can type:
     .makemikbug LOADER.680 to LOADER.S19
6800 Object file
Record type= START  address= :0000
Record type= LOAD   address= :2400  count= :005A
Record type= LOAD   address= :5000  count= :01D4
Record type= LOAD   address= :6000  count= :001A
Record type= GO     address= :A048  count= :0002
All done
.list hd:LOADER.S19 to port:
.* 
.* create BOOT.BIN file from boot LOADER
.copy port: to hd:TRIMBIN
.TRIMBIN
*** MAKE BINARY PROGRAM ***
Input File= LOADER.680
Output File= BOOT.BIN
Number of Bytes to Trim= 10
.copy hd:BOOT.BIN to port:
.* 
.* 
.* 
.* **************************************
.* All Done!
.* **************************************
.files
Files on...   SDOS HD 5 MB                     at 00:00:00 08/16/82
Filename           # LCNs        Bytes    Prot      Date
LOADER.S19              2         1395            08/10/82
ASM                     5        11225            08/10/82
BASIC.680               7        18062            08/10/82
TYPE                    6        14388            08/10/82
IOSWTPC6800.ASM        22        66847            08/10/82
M680C                   3         4176            08/10/82
ASM13                   5        11276            08/10/82
TRIMBIN.680             2          410            08/10/82
IOSWTPC6800.S19         4         6482            08/10/82
ASM14IODR.680           2         1088            08/10/82
TEST.LST                2          885            08/10/82
M680C.680               3         4112            08/10/82
MERGEBIN.680            2          823            08/10/82
META14C                 4         7058            08/10/82
FINDLABEL10B.680        2          461            08/10/82
STRIPIFS.680            2         2768            08/10/82
META14C.BNF             6        14391            08/10/82
IOSWTPC64K.S19          3         6390            08/10/82
TRIMBIN                 2          410            08/10/82
BASRTP14L.680           5        11930            08/10/82
DISKMAP.SYS             2          256      WB    08/10/82
BMPVT14F.680            5        10680            08/10/82
MERGEBIN                2          823            08/10/82
EDIT                    4         8883            08/10/82
SDCOPY.680              2          763            08/10/82
DEFAULT14L.680          8        19951            08/10/82
SDOS11G64K.S19         12        33330            08/10/82
M680C.LIB               6        15741            08/10/82
CHESS14.680             3         5362            08/10/82
SWTBUG4000.680          2         1041            08/10/82
BACKUP11G.680           6        13682            08/10/82
SYSGEN10K.680           3         4098            08/10/82
ASM14BODY.680           5        10142            08/10/82
LOADER.ASM              4         8816            08/10/82
TEST.680                2           16            08/10/82
HELLO                   2           58            08/10/82
FIX10B.680              2          708            08/10/82
META14C.680             4         7052            08/10/82
MNB14.680               2         1418            08/10/82
DIR14.680               2         1184            08/10/82
MAKBINARY11A.680        2         1339            08/10/82
IOSWTPC64K.680          2         2776            08/10/82
ASM14A.680              5        11225            08/10/82
METAM14C.680            2         2732            08/10/82
TEST.ASM                2          144            08/10/82
BINARYACCESS.ASM       13        37480            08/10/82
SDOS11G64K.680          6        14255            08/10/82
M.ASM                  16        46103            08/10/82
HELLO.LST               3         3724            08/10/82
DIRECTORY.SYS           8        22400      WB    08/10/82
SDOSUSERDEFS.ASM       11        31243            08/10/82
BADCLUSTERS.SYS         1            0      WB    08/10/82
SDOS11G56K.S19         12        33346            08/10/82
META14C.ASM            11        29199            08/10/82
SDIR.680                2         1605            08/10/82
HELLO.ASM               2          787            08/10/82
METAM14C.ASM           14        38413            08/10/82
CALCULATE.680           2         2490            08/10/82
ERRORMAINT14.680        2          988            08/10/82
BOOT.SYS                2          128      WB    08/10/82
BACKUP11G.ASM           2         1278            08/10/82
MAKMIKBUG               2         1342            08/10/82
SDOSCMDS11L.680         4         8026            08/10/82
COMPILE10B.680          2          983            08/10/82
BOOT.BIN                2          601            08/10/82
DISKINIT11H.680         4         7366            08/10/82
HELLO.BAS               2           47            08/10/82
SDOSCMDS11L.ASM        10        26433            08/10/82
IOSWTPC6800.680         2         2827            08/10/82
SDOS11G56K.680          6        14263            08/10/82
SWTBUG4000.S19          2         2418            08/10/82
BASIC14I.680            6        15341            08/10/82
DEFAULTPROGRAM          8        19592            08/10/82
BASIC                   7        18062            08/10/82
MAKMIKBUG11B.680        2         1358            08/10/82
SWTBUG4000.ASM          5        11240            08/10/82
LOADER.680              2          611            08/10/82
Total of 353 clusters in 77 files for  22.5% of disk capacity
.free
A total of 1213 free clusters for  77.4% of disk capacity
( 1213 clusters = 3881600 bytes )
.dismount d0:
A total of 540 I/O operations on D0:
.dismount hd:
A total of 403765 I/O operations on HD:
.
Simulation stopped, PC: B609 (A6 00           LDAA 0,X)

sim> q
Goodbye
%SIM-INFO: Debug output disabled
Log file closed
