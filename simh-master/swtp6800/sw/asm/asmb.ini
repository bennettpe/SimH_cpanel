set bootrom 2708
attach bootrom swtbug.bin
set cpu hex
set cpu noitrap
set cpu nomtrap
set cpu nodebug
set mp-b2 bd0, bd1, bd2, bd3, bd4, bd5
reset

echo

att ptr TSCEditor.S19
go until "$"
send "L"
go until "$"

; Patch to use JSR RDON   (E334: READER ON, DIS ECHO, GET P#) to turn on reader
;              CLR PORECH (A00C) to turn echo on back
send "M1430"
send "E334\r"
go until "1432"
go until "$"
; send "M1470"
; send "E347\r"
send "M146F"
send "7FA00C\r"
go until "1472"
go until "$"

; attach source file to tape reader
; warning! First char of file will be ignored. Start file with empty line
:
att -q ptr asmb.txt

; start TSC Editor J 0200 -> new file
send "J0200"
go until "="

; type # <CR> on "=" prompt to exit append mode
;
send "#\r"
go until "#"

; issue READ command to read the file (read from attach file to ptr, ctrl-z to end)
;
send "READ\r"

; break on end of load
set break 146f
go
set nobreak 146f
go until "#"

; print (P) file read from first (^) to last one (!)
send "^P!\r"

; break on main edit loop
set break 38a
go
go
set nobreak 38a

; issue LOG command to return to monitor     
send "LOG\r"
go until "$"

; show start/end of text buffer and write down values
;
send "M0097....\r"
go until "009B"
go until "$"

; Load Assembler
;
att ptr TSCAssembler.S19
send "L"
go until "$"

; Now set up assembler with start/end of symbol table
; 
send "M0040"
send "4000"
send "4FFF\r"
go until "0044"
go until "$"

; Now set up assembler linbyt
; 
send "M0048"
send "03\r"
go until "0049"
go until "$"

; up assembler with start/end of text buffer with values taken from text buffer
; text can run up to addr 3FFF
send "M0044"
send "1600"
send "3FFF\r"
go until "0048"
go until "$"

; Build a new main routine to punch out assembled code in pass3
; to be executed instead of the one at 0300
send "M0010"
send "8EA07F"
send "BD0326"
send "BD03B1"
send "BD036F"
send "BD03D9"

send "BDE34D"

send "BD0326"
send "BD03B1"
send "BD036F"
send "BD05BB"

send "BDE353"
send "7EE0D0"

send "\r"
go until "0034"
go until "$"

; mount tape punch for objecto code

att ptp -n -q asmb.s19

; Execute Assembler

set console -n -q log=asmb_log.txt
send "J0010"

go until "S9\r\n$"

; Mount object code tape 

det ptp
att ptr asmb.s19

; Load object code 

send "L"
go until "$"

; Run object code 

send "J0100"
go

:end
