   0 :                     ;*	NAM FLITM6800
   0 :                     
   0 :                     ;*THE FOLLOWING PROGRAM WAS WRITTEN BY WAYNE PARSONS IN
   0 :                     ;*CONJUNCTION WITH THE INDISTRIAL ENGENEERING DEPARTMENT
   0 :                     ;*AND DR. DAUER AS A PARTIAL REQUIREMENT FOR COMPLETITION
   0 :                     ;*OF A MS DEGREE AT THE UNIVERSITY OF CENTRAL FLORIDA IN THE
   0 :                     ;*FALL SEMESTER OF 1981.
   0 :                     ;*
   0 :                     ;* MODIFIED BY ROBERTO SANCHO JUN 2022 
   0 :                     ;* TO RUN ON SIMH SWTPC 6800 SIMULATOR
   0 :                     ;*
   0 :                     ;*   CHANGES: - REMOVE INTERFACE WITH EXTERNAL ATC-610J 
   0 :                     ;*              ANALOG FLIGH SIMULATOR
   0 :                     ;*            - ADD ROUTINES TO PERFORM FLIGH SIMULATION
   0 :                     ;*              USING SWTPC 6800 CPU
   0 :                     ;*            - USES MP-T TIMER SS50 BOARD TO PROVIDE
   0 :                     ;*              TIMING FOR SIMULATION. 
   0 :                     ;*            - USES PPG-J ANALOG TO SIMULATR PLANE CONTROL YOKE
   0 :                     ;*
   0 :                     ;*   THIS PROGRAM ONLY USES SW AND HW AVAILABLE IN 1979
   0 :                     ;*
   0 :                     ;**********************************************************
   0 :                     ;* 
   0 :                     ;* MEMORY MAP: 0000-004F SUBLOGIC 3DG68 DIRECT STORAGE
   0 :                     ;*             0050-     USED BY FLIGHTSIM M6800
   0 :                     ;*             0100-0112 SUBLOGIC 3DG68 3D TO 2D ROUTINE CONTROL ARRAY
   0 :                     ;*             0113-0FFF SUBLOGIC 3DG68 PACKAGE (ENTRY POINT 0900)
   0 :                     ;* 
   0 :                     ;*             1100-1296 SUBLOGIC SCENERY
   0 :                     ;*             1300-1362 PARTSON'S FIELD SCENERY
   0 :                     ;*             1800-18FF 2D OUTPUT BUFFER ARRAY
   0 :                     ;*
   0 :                     ;*             6000-     FLIGHT SIMULATOR M6800 PROGRAM
   0 :                     ;*
   0 :                     ;**********************************************************	
   0 :                     
   0 :                     			; PATCHES FOR 3DG68 
0DBE :                     	ORG $0DBE
0DBE : 7E 60 06            	JMP SVTRIG	; PATCH 3DG68 TO SAVE COS&SIN CALCULATIONS FOR PV, BV, HV
0A8C :                     	ORG $0A8C
0A8C : 7E 60 2E            	JMP SAFSWP1	; PATCH 3DG68 TO MAKE SWAP ROUTINE INTERRUPT SAFE
0AAE :                     	ORG $0AAE
0AAE : 7E 60 36            	JMP SAFSWP2	
0AB1 :                     
6000 :                     	ORG $6000
6000 :                     	
6000 : 8E 61 02            START	LDS #STACK	;SET NEW STACK ADDRESS
6003 : 7E 61 34                    JMP MACRO	
6006 :                     
6006 :                     			; PATCHES FOR 3DG68 ROUTINES
6006 :                     			
6006 :                     			; PATCH 3DG68 TO SAVE COS&SIN CALCULATIONS FOR PV, BV, HV
6006 :                     			; TO BE USED AGAIN ON PLANE MOTION CALCULATIONS			
6006 : BD 0B A4            SVTRIG	JSR  COS	; ADDR $20..$2B CONTAINS COS AND SIN VALUES 
6009 : D7 2A               	STAB $2A
600B : 97 2B               	STAA $2B
600D : DE 20               	LDX $0020
600F : FF 61 1E            	STX SINP	;SIN(PV)
6012 : DE 22               	LDX $0022
6014 : FF 61 20            	STX SINB	;SIN(BV)
6017 : DE 24               	LDX $0024
6019 : FF 61 22            	STX SINH	;SIN(HV)
601C : DE 26               	LDX $0026
601E : FF 61 18            	STX COSP	;COS(PV)
6021 : DE 28               	LDX $0028
6023 : FF 61 1A            	STX COSB	;COS(BV)
6026 : DE 2A               	LDX $002A
6028 : FF 61 1C            	STX COSH	;COS(HV)
602B : 7E 0D C5            	JMP $0DC5
602E :                     	
602E :                     			; ROUTINE AT 0A8C..0AB0 USES M6800 16 BITS REGISTERS
602E :                     			; IX AND SP TO SWAP A SERIES OF 16 BIT VALUES
602E :                     			; THIS TRICK IS CLEVER AND NICE AND FASTER THAN ANY OTHER METHOD
602E :                     			; SP IS SAVED AT ENTRY AND EXIT OF ROUTINES, SO WORKS OK
602E :                     			; BUT IF AN INTERRUPR OCCURS WHILE IN MIDDLE OF ROUTINE, 
602E :                     			; AS SP IS BEING FILLED WITH DATA, MEMORY AT ANY LOCATION CAN BE
602E :                     			; OVERWRITTEN WITH IRQ STATUS SAVE. TO FIX THIS, IRQ IS DISABLED
602E :                     			; ON ENTRY, ENABLED AGAIN ON EXIT
602E :                     
602E : 0F                  SAFSWP1	SEI		; DISABLE IRQ ON SWAP ROUTINE ENTRY
602F : 9F 38               	STS  $38
6031 : DE 2A               	LDX  $2A
6033 : 7E 0A 90            	JMP  $0A90
6036 : 9E 38               SAFSWP2	LDS  $38	; ENABLE IRQ ON SWAP ROUTINE EXIT
6038 : 0E                  	CLI
6039 : 39                  	RTS
603A :                     
603A :                     
603A :                     ; 3DG68 MEMORY LOCATIONS
603A :                     
603A : =$100                XV	EQU $0100	;VIEWER POSITION WEST (0000-7FFF), EAST (FFFF-8000)
603A : =$102                YV	EQU $0102	;VIEWER POSITION ALTITUDE
603A : =$104                ZV	EQU $0104	;VIEWER POSITION SOUTH (0000-7FFF), NORTH (FFFF-8000)
603A : =$106                PV 	EQU $0106	;VIEWER PITCH ANGLE
603A : =$108                BV 	EQU $0108	;VIEWER BANK ANGLE
603A : =$10A                HV 	EQU $010A	;VIEWER HEADING ANGLE
603A : =$10E                SCRN	EQU $010E	;SCREEN WIDTH FOR OUTPUT
603A : =$10F                IBP 	EQU $010F	;INPUT BUFFER POINTER
603A : =$111                OBP 	EQU $0111	;OUTPUT BUFFER POINTER
603A :                     
603A : =$0                  MA	EQU $00		;FIRST ARG FOR MULTS FUNCTION
603A : =$2                  MB	EQU $02		;SECOND ARG FOR MULTS FUNCTION
603A :                     
603A : =$21C                MULTS	EQU $021C	;(B,A)=(MA)*(MB)
603A : =$900                CONV3D	EQU $0900	;CONVERSION OF 3D INPUT BUFFER TO 2D OUTPUT BUFFER
603A : =$BA2                SIN	EQU $0BA2	;(B,A)=SIN(B). B=0..$FF FOR 0..259 DEG. 
603A : =$BA4                COS	EQU $0BA4	;(B,A)=COS(B). (B,A)=SIGNED 16 BITS (-1 -> $FFFF, +1 -> $7FFF)
603A :                     
603A :                     ;* SWTBUG ROM LOCATIONS
603A :                     
603A : =$E0C8               OUT4HS	EQU $E0C8 	;OUTPUT 4 HEX CHAR + SPACE (WORD POINTED BY X-REG)
603A : =$E0CA               OUT2HS	EQU $E0CA 	;OUTPUT 2 HEX CHAR + SPACE (BYTE POINTED BY X-REG)
603A : =$E1AC               INEEE	EQU $E1AC	;SWTBUG INPUT CHAR
603A : =$E1D1               OUTEEE	EQU $E1D1	;SWTBUG OUTPUT CHAR
603A : =$E113               MON	EQU $E113	;SWTBUG RETURN TO MONITOR
603A :                     
603A :                     ;* FLIGHT SIM VARIABLES
603A :                     
603A :                     STACKSP RMB 200		;STACK SPACE
6102 :                     STACK	RMB 1
6103 :                     
6103 :                     TICK	RMB 2		;IRQ TICK COUNT. GET INCREMENTED BY IRQ EACH 10MSEC
6105 :                     TICK0	RMB 2		;LAST TICK COUNT VALUE
6107 :                     TICK1	RMB 2		;CURRENT TICK COUNT VALUE
6109 :                     NFRAME	RMB 2		;NUMBER OF FRAME
610B :                     ELAPSED	RMB 1		;NUMBER OF TICKS ELAPSED
610C :                     
610C :                     IDXREG	RMB 2		;INDEX ON OUTPUT 2D BUFFER
610E :                     
610E :                     JHSGN	RMB 2		;STORE JOY HORIZ POS -$20 .. $1F AS 16 BITS SIGNED
6110 :                     JVSGN	RMB 2		;STORE JOY VERT POS -$30 .. $2F AS 16 BITS SIGNED
6112 :                     JHPOS	RMB 1		;JOY HORIZONTAL POSITION 00..3F
6113 :                     JVPOS	RMB 1		;JOY VERTICAL POSITION 00..5F
6114 :                     ASAVE	RMB 1		;SAVE REGISTER
6115 :                     BSAVE	RMB 1		;SAVE REGISTER
6116 :                     ISAVE	RMB 2		;SAVE REGISTER
6118 :                     
6118 :                     COSP	RMB 2		;COS(PITCH VIEWER)
611A :                     COSB	RMB 2		;COS(BANK VIEWER)
611C :                     COSH	RMB 2		;COS(HEADING VIEWER)
611E :                     SINP	RMB 2		;SIN(PITCH VIEWER)
6120 :                     SINB	RMB 2		;SIN(BANK VIEWER)
6122 :                     SINH	RMB 2		;SIN(HEADING VIEWER)
6124 :                     
6124 :                     SPEED   RMB 2		;PLANE SPEED
6126 :                     PITCH	RMB 2 		;PLANE PITCH ANGLE (16 BITS). >0 LOOK DOWN
6128 :                     BANK	RMB 2		;PLANE BANK ANGLE (16 BITS). >0 BANK TO LEFT
612A :                     HEADING RMB 2		;PLANE HEADING ANGLE (16 BITS). =0 NORTH, >0 TO RIGHT
612C :                     VEL	RMB 2		;TEMP VAR VEL = SPEED * TIME ELPASED
612E :                     DZ	RMB 2		;Z AXIS INCREMENT
6130 :                     DY	RMB 2		;Z AXIS INCREMENT
6132 :                     DX	RMB 2		;Z AXIS INCREMENT
6134 :                     
6134 : BD 63 E2            MACRO   JSR CLRMEM	;CLEAR MEMORY LOCATIONS
6137 : BD 63 F3            	JSR PIAINT	;INITIALIZE PIA AND CLEAR SCREEN
613A : BD 64 03            	JSR PROMPT	;PRINT USER PROMPT MESSAGES
613D : BD 64 33            	JSR INITLOD	;LOAD INITIAL AIRCRAFT POSITIONAL PARAMETERS
6140 : 20 03               	BRA TIMONE	;GO TRANSFORM INITIAL VIEW 1ST TIME THRU
6142 : BD 61 5F            GOAGN	JSR UPDATE	;GET UPDATED AIRCRAFT POSITION
6145 : BD 64 B8            TIMONE	JSR GO3D2D	;GO TRANSFORM 3D TO 2D COORDINATES 
6148 : BD 63 F8            	JSR CLSCRN	;CLEAR SCREEN FOR NEW DRAW
614B : BD 64 BC            	JSR DBDRAW	;DRAW TRANSFORMED DATA BASE
614E : BD 62 4F            	JSR UPDTPOS	;UPDATE AIRCRAFT POSITION
6151 : BD 63 FE            	JSR GETJOY	;GET ANALOG PPG-J JOY POSITION
6154 : BD 62 EF            	JSR CHKLAND	;CHECK IF LANDED OR CRASHED
6157 :                     	; JSR PRTVIEW	;PRINT ON TERMINAL AIRCRAFT STATE (FOR DEBUG) 
6157 :                     	
6157 :                     
6157 : 7E 61 42                    jmp goagn
615A :                     	
615A :                     	
615A : 7E E1 13            	JMP  MON	;SWTBUG RETURN TO MONITOR
615D :                     	
615D : 20 E3               	BRA GOAGN
615F :                     
615F :                     ;* UPDATE PLANE STATE
615F : 01                  UPDATE	NOP		
6160 :                     	;CALC ELAPSED = NUMBER OF TICKS ELAPSED FROM LAST UPDATE 
6160 : FE 61 03            TCK0	LDX TICK	;GET TICK COUNT
6163 : BC 61 05            	CPX TICK0	
6166 : FF 61 07            	STX TICK1	;STORE CURRENT TICK COUNT
6169 : B6 61 08            	LDAA TICK1+1
616C : F6 61 07            	LDAB TICK1
616F : B0 61 06            	SUBA TICK0+1
6172 : F2 61 05            	SBCB TICK0
6175 : C1 00               	CMPB #0
6177 : 27 02               	BEQ TCK1
6179 : 86 FF               	LDA #255	;MAX ELAPSED TIME IS 255
617B : 81 05               TCK1	CMPA #5		;AT LEAST THIS NUMBER OF TICKS SHOULD BE ELAPSED
617D : 25 E1               	BCS TCK0	;BR IF A-REG < 5
617F : 81 64               	CMPA #100	
6181 : 25 02               	BCS TCK2	;BR IF A-REG < 100
6183 : 86 64               	LDAA #100
6185 : B7 61 0B            TCK2	STAA ELAPSED	;NUMBER OF TICKS ELAPSED FROM LAST UPDATE 
6188 : FE 61 07            	LDX TICK1	;.*echo elapsed:a
618B : FF 61 05            	STX TICK0	
618E : FE 61 09            	LDX NFRAME	;INCR NUMBER 
6191 : 08                  	INX 		
6192 : FF 61 09            	STX NFRAME	;.*echo nframe:x
6195 :                     	;SET PLANE PITCH, BANK AND TURN RATE BASED ON JOYSTICK POSITION 			
6195 :                     	;* UPDATE PLANE BANK BASED ON JOY HORIZ POS 
6195 : C6 00               	LDAB #0		
6197 : 86 20               	LDAA #32	
6199 : B0 61 12            	SUBA JHPOS	;GET JOY HORIZ POS LEFT=0, RIGHT=63
619C : B7 61 0F            	STAA JHSGN+1	;STORE SIGNED JOY HORIZ POS (LOW PART)
619F : 24 02                       BCC JH1
61A1 : C6 FF                       LDAB #$FF
61A3 : F7 61 0E            JH1     STAB JHSGN	;STORE SIGNED JOY HORIZ POS (HI PART)
61A6 : 48                  	ASLA
61A7 : 59                  	ROLB		;JOY H = JOY H * 32
61A8 : 48                  	ASLA
61A9 : 59                  	ROLB
61AA : 48                  	ASLA
61AB : 59                  	ROLB
61AC : 48                  	ASLA
61AD : 59                  	ROLB
61AE : 48                  	ASLA
61AF : 59                  	ROLB
61B0 : BB 61 29                    ADDA BANK+1	;BANK = BANK + (JOY H - 32)
61B3 : B7 61 29                    STAA BANK+1
61B6 : F9 61 28                    ADCB BANK
61B9 : F7 61 28                    STAB BANK
61BC :                             ;* LIMIT BANK TO +/- 60GR (2A HEX)
61BC : C1 2A                       CMPB #$2A
61BE : 2D 08                       BLT JH2
61C0 : CE 2A 00                    LDX #$2A00
61C3 : FF 61 28                    STX BANK
61C6 : 20 0A                       BRA JH3
61C8 : C1 D6               JH2	CMPB #$D6	;D6 = -2A   
61CA : 2A 06               	BPL JH3     
61CC : CE D6 00                    LDX #$D600
61CF : FF 61 28                    STX BANK
61D2 : F6 61 28            JH3	LDAB BANK        
61D5 : F7 01 09                    STAB BV+1	;SET VIEWER BANK ANGLE
61D8 :                             ;* UPDATE PLANE PITCH BASED ON JOY VERT POS 
61D8 : C6 00               	LDAB #0
61DA : 86 30               	LDAA #48
61DC : B0 61 13            	SUBA JVPOS	;GET JOY VERT POS UP=0, DOWN=95
61DF : B7 61 11            	STAA JVSGN+1	;STORE SIGNED JOY VERT POS (LOW PART)
61E2 : 24 02                       BCC JV1
61E4 : C6 FF                       LDAB #$FF
61E6 : F7 61 10            JV1     STAB JVSGN	;STORE SIGNED JOY VERT POS (HI PART)
61E9 : 48                  	ASLA
61EA : 59                  	ROLB		;JOY V = JOY V * 32
61EB : 48                  	ASLA
61EC : 59                  	ROLB
61ED : 48                  	ASLA
61EE : 59                  	ROLB
61EF : 48                  	ASLA
61F0 : 59                  	ROLB
61F1 : 48                  	ASLA
61F2 : 59                  	ROLB
61F3 : BB 61 27            	ADDA PITCH+1	;BANK = BANK + (JOY V - 48)
61F6 : B7 61 27                    STAA PITCH+1
61F9 : F9 61 26                    ADCB PITCH
61FC : F7 61 26                    STAB PITCH        
61FF :                             ;* LIMIT PITCH FROM -45GR (NOSE UP $E0 HEX) TO +80GR ($38 HEX)
61FF : C1 38                       CMPB #$38
6201 : 2D 08                       BLT JV2
6203 : CE 38 00                    LDX #$3800
6206 : FF 61 26                    STX PITCH
6209 : 20 0A                       BRA JV3
620B : C1 E0               JV2	CMPB #$E0	;E6 = -20   
620D : 2A 06               	BPL JV3     
620F : CE E0 00                    LDX #$E000
6212 : FF 61 26                    STX PITCH
6215 : F6 61 26            JV3	LDAB PITCH        
6218 : F7 01 07                    STAB PV+1	;SET VIEWER PITCH ANGLE        
621B :                             ;* CALC TURN RATE BASED ON BANK
621B : B6 61 29                    LDAA BANK+1
621E : 97 01                       STAA MA+1
6220 : C6 00                       LDAB #0
6222 : B6 61 28                    LDAA BANK
6225 : 2A 01                       BPL JT1
6227 : 5A                          DECB
6228 : 78 00 01            JT1	ASL MA+1
622B : 49                  	ROLA
622C : 59                  	ROLB
622D : 78 00 01            	ASL MA+1
6230 : 49                  	ROLA
6231 : 59                  	ROLB
6232 : 78 00 01            	ASL MA+1
6235 : 49                  	ROLA
6236 : 59                  	ROLB
6237 : D7 00                       STAB MA        
6239 : 97 01                       STAA MA+1
623B : B6 61 2B                    LDAA HEADING+1
623E : F6 61 2A                    LDAB HEADING
6241 : 90 01                       SUBA MA+1
6243 : D2 00                       SBCB MA
6245 : B7 61 2B                    STAA HEADING+1	;HEADING = HEADING - BANK*8
6248 : F7 61 2A                    STAB HEADING
624B : F7 01 0B                    STAB HV+1	;SET VIEWER HEADING ANGLE
624E : 39                  	RTS		
624F :                     ;* UPDATE PLANE COORDINATES X,Y,Z
624F : 01                  UPDTPOS	NOP             
6250 :                     	;* CALCULATE VEL = PLANE SPEED * ELAPSED TIME
6250 : F6 61 0B            	LDAB ELAPSED  
6253 : 86 00               	LDAA #0
6255 : D7 00               	STAB MA         
6257 : 97 01               	STAA MA+1	
6259 : FE 61 24            	LDX SPEED
625C : DF 02               	STX MB		;.*echo speed:x
625E : BD 02 1C            	JSR MULTS
6261 : F7 61 2C            	STAB VEL 
6264 : B7 61 2D            	STAA VEL+1	
6267 :                     	;* DZ = VEL * COS(PITCH) * COS(HEADING)
6267 : FE 61 18            	LDX COSP
626A : DF 00               	STX MA		;.*echo cosp:x	
626C : FE 61 1C            	LDX COSH
626F : DF 02               	STX MB		;.*echo cosh:x		
6271 : BD 02 1C            	JSR MULTS
6274 : D7 00               	STAB MA
6276 : 97 01               	STAA MA+1	
6278 : FE 61 2C            	LDX VEL
627B : DF 02               	STX MB		;.*echo vel:x
627D : BD 02 1C            	JSR MULTS
6280 : F7 61 2E            	STAB DZ
6283 : B7 61 2F            	STAA DZ+1
6286 : B6 01 05            	LDAA ZV+1	;* UPDATE ZV VIEWER POSITION OF PLANE
6289 : F6 01 04            	LDAB ZV
628C : B0 61 2F            	SUBA DZ+1
628F : F2 61 2E            	SBCB DZ
6292 : B7 01 05            	STAA ZV+1
6295 : F7 01 04            	STAB ZV
6298 :                     	;* DX = VEL * COS(PITCH) * SIN(HEADING)
6298 : FE 61 18            	LDX COSP
629B : DF 00               	STX MA		;.*echo cosp:x			
629D : FE 61 22            	LDX SINH
62A0 : DF 02               	STX MB		;.*echo sinh:x	
62A2 : BD 02 1C            	JSR MULTS
62A5 : D7 00               	STAB MA
62A7 : 97 01               	STAA MA+1
62A9 : FE 61 2C            	LDX VEL
62AC : DF 02               	STX MB		;.*echo vel:x
62AE : BD 02 1C            	JSR MULTS
62B1 : F7 61 32            	STAB DX
62B4 : B7 61 33            	STAA DX+1
62B7 : B6 01 01            	LDAA XV+1	;* UPDATE XV VIEWER POSITION OF PLANE
62BA : F6 01 00            	LDAB XV
62BD : B0 61 33            	SUBA DX+1
62C0 : F2 61 32            	SBCB DX
62C3 : B7 01 01            	STAA XV+1
62C6 : F7 01 00            	STAB XV
62C9 :                     	;* DY = VEL * SIN(PITCH) 
62C9 : FE 61 1E            	LDX SINP
62CC : DF 00               	STX MA		
62CE : FE 61 2C            	LDX VEL
62D1 : DF 02               	STX MB
62D3 : BD 02 1C            	JSR MULTS
62D6 : F7 61 30            	STAB DY
62D9 : B7 61 31            	STAA DY+1
62DC : B6 01 03            	LDAA YV+1	;* UPDATE YV VIEWER POSITION OF PLANE
62DF : F6 01 02            	LDAB YV		
62E2 : BB 61 31            	ADDA DY+1
62E5 : F9 61 30            	ADCB DY
62E8 : B7 01 03            	STAA YV+1
62EB : F7 01 02            	STAB YV
62EE : 39                  	RTS 		
62EF :                     
62EF :                     ;* CHECK IF LANDED OR CRASHED
62EF : B6 01 02            CHKLAND	LDAA YV
62F2 : 2A 01               	BPL ALT0	;BR IF ALTITUDE IS ZERO
62F4 : 39                  	RTS		;RETURN BECAUSE PLANE IS FLYING
62F5 : B6 01 09            ALT0	LDAA BV+1	;CHECK IF PLANE BANK IF +/- 18GR
62F8 : 81 18                       CMPA #$18
62FA : 2D 03                       BLT ALT1
62FC : 7E 63 1F            	JMP CRASH       ;CRASH: BANK TOO HIGH 
62FF : 81 E8               ALT1	CMPA #$E8
6301 : 2A 03               	BPL ALT2
6303 : 7E 63 1F            	JMP CRASH       ;CRASH: BANK TOO HIGH
6306 : B6 01 07            ALT2	LDAA PV+1	;CHECK IF PLANE PITCH IF -18GR (NOSE UP) TO +18GR (NOSE DOWN)
6309 : 81 18                       CMPA #$18
630B : 2D 03                       BLT ALT3
630D : 7E 63 1F            	JMP CRASH       ;CRASH: NOSE TOO LOW, NOSE HIT THE GROUND
6310 : 81 E8               ALT3	CMPA #$E8
6312 : 2A 03               	BPL ALT4
6314 : 7E 63 1F            	JMP CRASH       ;CRASH: NOSE TOO HIGH, TAIL HIT THE GROUND
6317 : 7E 63 1A            ALT4	JMP LANDED
631A :                     
631A :                     ;* END OF FLIGHT MESSAGES 
631A : CE 63 4B            LANDED	LDX #MLANDED
631D : 20 03               	BRA MEOF
631F : CE 63 3E            CRASH	LDX #MCRASH
6322 : BD 64 22            MEOF	JSR DSPCHR	
6325 : CE 63 59               	LDX #MNEWFL
6328 : BD 64 22            	JSR DSPCHR
632B : BD 64 2F                    JSR INCHR
632E : 81 31               	CMPA #'1'
6330 : 26 09               	BNE ENDFLI
6332 : CE 66 66            	LDX #MCRLF	;REMOVE WELCOME MESSAGE
6335 : FF 64 04            	STX PROMPT+1
6338 : 7E 61 34            	JMP MACRO
633B : 7E E1 13            ENDFLI	JMP MON	
633E :                     
633E : 0D 0A 0D 0A         MCRASH	FCB 13,10,13,10
6342 : 43 52 41 53 48 21   	FCC 'CRASH!'
6348 : 0D 0A 04            	FCB 13,10,4
634B :                     
634B : 0D 0A 0D 0A         MLANDED	FCB 13,10,13,10
634F : 4C 41 4E 44 45 44   	FCC 'LANDED!'
6355 : 21                
6356 : 0D 0A 04            	FCB 13,10,4
6359 :                     
6359 : 0D 0A 0D 0A         MNEWFL	FCB 13,10,13,10
635D : 50 52 45 53 53 20   	FCC 'PRESS 1 TO FLIGTH AGAIN, ANY OTHER KEY TO QUIT ?'
6363 : 31 20 54 4F 20 46 
6369 : 4C 49 47 54 48 20 
636F : 41 47 41 49 4E 2C 
6375 : 20 41 4E 59 20 4F 
637B : 54 48 45 52 20 4B 
6381 : 45 59 20 54 4F 20 
6387 : 51 55 49 54 20 3F 
638D : 04                  	FCB 4
638E :                     	
638E :                     ;*PRINT ON TERMINAL VIEWER X,Y,Z 3D POS AND P,B,H ANGLES (0..255)
638E : CE 01 00            PRTVIEW	LDX #XV
6391 : 86 58               	LDAA #'X'
6393 : BD 63 C1            	JSR PRT4H
6396 : 86 59               	LDAA #'Y'
6398 : BD 63 C1            	JSR PRT4H
639B : 86 5A               	LDAA #'Z'
639D : BD 63 C1            	JSR PRT4H
63A0 : 86 50               	LDAA #'P'
63A2 : BD 63 D1            	JSR PRT2H
63A5 : 86 42               	LDAA #'B'
63A7 : BD 63 D1            	JSR PRT2H
63AA : 86 48               	LDAA #'H'
63AC : BD 63 D1            	JSR PRT2H
63AF : 86 4A               	LDAA #'J'
63B1 : CE 61 12            	LDX #JHPOS
63B4 : BD 63 C1            	JSR PRT4H
63B7 : 86 0D               PRTCRLF	LDA #13
63B9 : BD E1 D1            	JSR OUTEEE
63BC : 86 0A               	LDA #10
63BE : 7E E1 D1            	JMP OUTEEE
63C1 : BD E1 D1            PRT4H	JSR OUTEEE
63C4 : 86 20               	LDA #32
63C6 : BD E1 D1            	JSR OUTEEE
63C9 : BD E0 C8            	JSR OUT4HS
63CC : 86 20               	LDA #32
63CE : 7E E1 D1            	JMP OUTEEE
63D1 : BD E1 D1            PRT2H	JSR OUTEEE
63D4 : 86 20               	LDA #32
63D6 : BD E1 D1            	JSR OUTEEE
63D9 : 08                  	INX
63DA : BD E0 CA            	JSR OUT2HS
63DD : 86 20               	LDA #32
63DF : 7E E1 D1            	JMP OUTEEE
63E2 :                     
63E2 :                     ;*SUBROUTINE "CLRMEM" CLEAR MEMORY STORAGE LOCATIONS
63E2 : 5F                  CLRMEM	CLRB
63E3 : C6 00               	LDAB #$00	;TOTAL NUMBER OF LOCATIONS TO CLEAR (00=CLEAR FROM 00 TO FF)
63E5 : CE 18 00            	LDX #$1800	;CLEAR OUTPUT BUFFER (AT 1800)
63E8 : 8D 01               	BSR CLEAR2
63EA : 39                  	RTS
63EB : 4F                  CLEAR2	CLRA
63EC : A7 00               CLRMOR	STAA $00,X
63EE : 08                  	INX
63EF : 5A                  	DECB
63F0 : 26 FA               	BNE CLRMOR
63F2 : 39                  	RTS
63F3 : 86 01               PIAINT	LDAA #1		;GRAPHICS DISPLAY OPTION = PIA INITIALIZATION
63F5 : BD 66 FD            	JSR SCREEN
63F8 : 86 03               CLSCRN	LDAA #3
63FA : BD 66 FD            	JSR SCREEN
63FD : 39                  	RTS
63FE : 86 06               GETJOY	LDAA #6		;GET ANALOG PPG-J JOY POSITION
6400 : 7E 66 FD            	JMP SCREEN	
6403 :                     
6403 :                     ;*SUBROUTINE "PROMPT" WILL LOAD THE INDEX REGISTER WITH THE		
6403 :                     ;*ADDRESS OF THE NEXT USER PROMPT TO BE DISPLAYED AND THEN 
6403 :                     ;*WILL PRINT THE MESSAGE ON THE USER'S TERMINAL. IT WILL
6403 :                     ;*THEN WAIT UNTIL THE USER HAS READ AND UNDERSTOOD THE
6403 :                     ;*PROMPT BEFORE PRINTING THE NEXT MESSAGE.
6403 : CE 64 E8            PROMPT	LDX #WELCOM
6406 : BD 64 22            	JSR DSPCHR
6409 : CE 66 6B            	LDX #MSGA
640C : BD 64 22            	JSR DSPCHR
640F : BD 64 2F            	JSR INCHR
6412 : CE 13 00            	LDX #$1300	;RESPONSE TO MSGB PROMPT = 1 (PARSONS AIRFIELD)
6415 : 81 31               	CMPA #$31
6417 : 27 03               	BEQ LOADIR
6419 : CE 11 00            	LDX #$1100	;RESPONSE TO MSGB PROMPT = 2 (SUBLOGIC AIRFIELD)
641C : FF 01 0F            LOADIR	STX IBP
641F : CE 66 66            	LDX #MCRLF
6422 : A6 00               DSPCHR	LDAA $0,X	;PRINT A STRING POINTED BY X-REG, TERMINATED BY $04 CHAR
6424 : 81 04               	CMPA #04	
6426 : 26 01               	BNE PRTCHR
6428 : 39                  	RTS
6429 : BD E1 D1            PRTCHR	JSR OUTEEE	;PUT CHARACTER OUT TO TERMINAL
642C : 08                  	INX
642D : 20 F3               	BRA DSPCHR	
642F :                     	
642F : 4F                  INCHR	CLRA		;PREPARE ACCM FOR RESPONSE
6430 : 7E E1 AC            	JMP INEEE	;ANY RESPONSE ?
6433 :                     	
6433 :                     ;*SUBROUTINE "INITLOD" LOADS THE SIX POSITIONAL PARAMETERS
6433 :                     ;*OF THE SIMULATOR'S INITIAL POSITION WHICH WAS PREVIOUSLY
6433 :                     ;*PROMPTED TO THE USER.
6433 : CE D5 00            INITLOD	LDX #$D500	;-11,190 FEET FROM DISPLAY ORIGIN
6436 : FF 01 00            	STX XV		;POS = WEST (0000-7FFF) NEG = EAST (FFFF-8000)
6439 : CE FC 18            	LDX #$FC18	;ALT = 1000 FT => 3D VALUE FOR VIEWRT
643C : FF 01 02            	STX YV		;      SO REQUIRE NEGATIVE 3D VALUE (FFFF-8000)
643F : CE F0 00            	LDX #$F000	;-4096 FEET FROM DISPLAY ORIGIN
6442 : FF 01 04            	STX ZV		;POS=SOUTH (0000-7FFF) NEG=NORTH (FFFF-8000)
6445 : CE 00 00            	LDX #$0000	;PITCH = BANK = HEADING = 0.0 DEGREES
6448 : FF 01 06            	STX PV
644B : FF 01 08            	STX BV
644E : FF 01 0A            	STX HV
6451 : CE 18 00            	LDX #$1800	;OUTPUT 2D BUFFER
6454 : FF 01 11            	STX OBP
6457 : 86 40               	LDAA #$40
6459 : B7 01 0E            	STAA SCRN	;SCREEN WIDTH=64 PIXELS X 64 PIXELS
645C : CE 00 00            	LDX #0
645F : FF 61 26            	STX PITCH	;PLANE PITCH ANGLE (16 BITS). >0 LOOK DOWN
6462 : FF 61 28            	STX BANK	;PLANE BANK ANGLE (16 BITS). >0 BANK TO LEFT
6465 : FF 61 2A            	STX HEADING 	;PLANE HEADING ANGLE (16 BITS). =0 NORTH, >0 TO RIGHT	
6468 : FF 61 1E            	STX SINP	;SIN(PITCH VIEWER)
646B : FF 61 20            	STX SINB	;SIN(BANK VIEWER)
646E : FF 61 22            	STX SINH	;SIN(HEADING VIEWER)
6471 : CE 7F FF            	LDX #$7FFF	
6474 : FF 61 18            	STX COSP	;COS(PITCH VIEWER)
6477 : FF 61 1A            	STX COSB	;COS(BANK VIEWER)
647A : FF 61 1C            	STX COSH	;COS(HEADING VIEWER)
647D : CE 00 FA            	LDX #250
6480 : FF 61 24            	STX SPEED	;PLANE SPEED 
6483 : CE 64 AB            	LDX #TMRIRQ	;LOAD TIMER IRQ SERVICING ROUTINE ADDRESS
6486 : FF A0 00            	STX $A000	;STORE IT ON IRQ VECTOR
6489 : CE 00 00            	LDX #0
648C : FF 61 03            	STX TICK	;INIT TICK COUNT
648F : FF 61 05            	STX TICK0
6492 : FF 61 09            	STX NFRAME	;INIT FRAME NUMBER	
6495 : CE 80 10            	LDX #$8010	;INIT MP-T TIMER 
6498 : 86 FF                	LDAA #$FF	;TO GENERATE AN IRQ EACH 10 MSEC 
649A : A7 02                	STAA 2,X
649C : 86 3D                	LDAA #$3D
649E : A7 03                	STAA 3,X
64A0 : 86 80                	LDAA #$80
64A2 : A7 02                	STAA 2,X
64A4 : 86 04               	LDAA #$04	;04=10 MILLISEC INTERVAL
64A6 : A7 02                	STAA 2,X
64A8 : 01                   	NOP
64A9 : 0E                   	CLI		;ENABLE INTERRUPTS
64AA : 39                  	RTS
64AB :                     ;* TIMER IRQ ROUTINE TO INCREMENT TICK EACH 10 MSEC
64AB :                     ;* USED TO PROVIDE REAL TIME CALCULATIONS ON PLANE MOTION SIMULATION
64AB :                     ;* TICK SHOULD BE READ WITH LDX (NOT LDAA/B) TO PREVENT BEING
64AB :                     ;* UPDATED IN MIDDLE OF READ.
64AB :                     ;* TICK VAR WILL WRAP AFTER 65536*10 MSEC = 655,36 SEC = 10.9 MINUTES
64AB : CE 80 10            TMRIRQ	LDX #$8010	;CLEAR IRQ REQUEST FROM MP-T TIMER CARD
64AE : A6 02                	LDAA 2,X
64B0 : FE 61 03             	LDX TICK	;INCREMENT TICK COUNT
64B3 : 08                   	INX
64B4 : FF 61 03             	STX TICK
64B7 : 3B                   	RTI
64B8 :                     
64B8 :                     ;*SUBROUTINE "GO3D2D" CALLS THE PROGRAM WRITTEN BY SUBLOGIC'S
64B8 :                     ;*BRUCE ARTWICK WHICH WILL PERFORM THE NECESSARYMATHEMATICAL
64B8 :                     ;*ALGORITHMS TO SUCCESSFULLY TRANSFORM THE DATA BASE GIVE
64B8 :                     ;*THE POSITIONAL PARAMETERS STORED IN XV,YU,ZV,PV,BV AND HV,
64B8 :                     ;*UPON COMPLETITION THE OUTPUT ARRAY IS STORES IN MEMORY IN
64B8 :                     ;*THE OUTPUT BUFFER.
64B8 : BD 09 00            GO3D2D	JSR CONV3D	
64BB : 39                  	RTS		
64BC :                     ;*SUBROUTINE "DBDRAW" WILL LOAD THE NEXT (X1,Y1) AND (X2,Y2)
64BC :                     ;*FROM THE OUTPUT BUFFER IF THE CONTROL BYTE IS HEX 55,
64BC :                     ;*OTHERWISE IT WILL RETURN TO THE MACRO
64BC : FE 01 11            DBDRAW	LDX OBP		
64BF : A6 00               FEED	LDAA 0,X	
64C1 : 81 55               	CMPA #$55
64C3 : 27 01               	BEQ NXTLIN
64C5 : 39                  	RTS		
64C6 : 08                  NXTLIN	INX
64C7 : A6 00               	LDAA 0,X
64C9 : 97 50               	STAA X1		;.*echo x1:a
64CB : 08                  	INX	
64CC : A6 00               	LDAA 0,X
64CE : 97 51               	STAA Y1		;.*echo y1:a
64D0 : 08                  	INX	
64D1 : A6 00               	LDAA 0,X
64D3 : 97 52               	STAA X2		;.*echo x2:a
64D5 : 08                  	INX	
64D6 : A6 00               	LDAA 0,X
64D8 : 97 53               	STAA Y2		;.*echo y2:a
64DA : 08                  	INX	
64DB : FF 61 0C            	STX IDXREG
64DE : 86 05               	LDAA #5		;GRAPHIC'S DISPLAY OPTION = DRAW (SHOW2)
64E0 : BD 66 FD            	JSR SCREEN	;.*echo drawline
64E3 : FE 61 0C            	LDX IDXREG
64E6 : 20 D7               	BRA FEED
64E8 :                     
64E8 : 0D 0A 0D 0A         WELCOM	FCB 13,10,13,10
64EC : 20 20 20 20 20 57           FCC '     WELCOME TO THE M6800 FLIGHT SIMULATOR PROGRAM'
64F2 : 45 4C 43 4F 4D 45 
64F8 : 20 54 4F 20 54 48 
64FE : 45 20 4D 36 38 30 
6504 : 30 20 46 4C 49 47 
650A : 48 54 20 53 49 4D 
6510 : 55 4C 41 54 4F 52 
6516 : 20 50 52 4F 47 52 
651C : 41 4D             
651E : 0D 0A 0D 0A                 FCB 13,10,13,10
6522 : 54 48 49 53 20 50   	FCC 'THIS PROGRAM IS DESIGNED TO ALLOW THE USER TO SET UP THE AIRCRAFT`S INITIAL'
6528 : 52 4F 47 52 41 4D 
652E : 20 49 53 20 44 45 
6534 : 53 49 47 4E 45 44 
653A : 20 54 4F 20 41 4C 
6540 : 4C 4F 57 20 54 48 
6546 : 45 20 55 53 45 52 
654C : 20 54 4F 20 53 45 
6552 : 54 20 55 50 20 54 
6558 : 48 45 20 41 49 52 
655E : 43 52 41 46 54 60 
6564 : 53 20 49 4E 49 54 
656A : 49 41 4C          
656D : 0D 0A               	FCB 13,10
656F : 50 4F 53 49 54 49   	FCC 'POSITION COORDINAES FROM USER PROMPTS, ENGAGE THE FLIGHT SIMULATOR AND'
6575 : 4F 4E 20 43 4F 4F 
657B : 52 44 49 4E 41 45 
6581 : 53 20 46 52 4F 4D 
6587 : 20 55 53 45 52 20 
658D : 50 52 4F 4D 50 54 
6593 : 53 2C 20 45 4E 47 
6599 : 41 47 45 20 54 48 
659F : 45 20 46 4C 49 47 
65A5 : 48 54 20 53 49 4D 
65AB : 55 4C 41 54 4F 52 
65B1 : 20 41 4E 44       
65B5 : 0D 0A               	FCB 13,10
65B7 : 50 52 45 53 45 4E   	FCC 'PRESENT AN UPDATED GRAPHICS DISPLAY AS STUDENT PILOT ATTEMPTS TO MANUEVER'
65BD : 54 20 41 4E 20 55 
65C3 : 50 44 41 54 45 44 
65C9 : 20 47 52 41 50 48 
65CF : 49 43 53 20 44 49 
65D5 : 53 50 4C 41 59 20 
65DB : 41 53 20 53 54 55 
65E1 : 44 45 4E 54 20 50 
65E7 : 49 4C 4F 54 20 41 
65ED : 54 54 45 4D 50 54 
65F3 : 53 20 54 4F 20 4D 
65F9 : 41 4E 55 45 56 45 
65FF : 52                
6600 : 0D 0A               	FCB 13,10	 
6602 : 54 48 45 20 50 4C   	FCC 'THE PLANE FOR LANDING ON AN AIRSTRIP. TO USE THE PROGRAM YOU FIRST MUST'
6608 : 41 4E 45 20 46 4F 
660E : 52 20 4C 41 4E 44 
6614 : 49 4E 47 20 4F 4E 
661A : 20 41 4E 20 41 49 
6620 : 52 53 54 52 49 50 
6626 : 2E 20 54 4F 20 55 
662C : 53 45 20 54 48 45 
6632 : 20 50 52 4F 47 52 
6638 : 41 4D 20 59 4F 55 
663E : 20 46 49 52 53 54 
6644 : 20 4D 55 53 54    
6649 : 0D 0A               	FCB 13,10	 
664B : 43 48 4F 4F 53 45   	FCC 'CHOOSE AN AIRPORT DATABASE.'
6651 : 20 41 4E 20 41 49 
6657 : 52 50 4F 52 54 20 
665D : 44 41 54 41 42 41 
6663 : 53 45 2E          
6666 : 0D 0A 0D 0A         MCRLF   FCB 13,10,13,10
666A : 04                  	FCB $04
666B :                     	
666B : 20 20 20 43 48 4F   MSGA	FCC '   CHOOSE THE AIRPORT DATABASE AS FOLLOWS: '
6671 : 4F 53 45 20 54 48 
6677 : 45 20 41 49 52 50 
667D : 4F 52 54 20 44 41 
6683 : 54 41 42 41 53 45 
6689 : 20 41 53 20 46 4F 
668F : 4C 4C 4F 57 53 3A 
6695 : 20                
6696 : 0D 0A 0D 0A                 FCB 13,10,13,10
669A : 20 31 20 3D 20 50   	FCC ' 1 = PARSON`S FIELD AT TETERBORO, NEW JERSEY.'	
66A0 : 41 52 53 4F 4E 60 
66A6 : 53 20 46 49 45 4C 
66AC : 44 20 41 54 20 54 
66B2 : 45 54 45 52 42 4F 
66B8 : 52 4F 2C 20 4E 45 
66BE : 57 20 4A 45 52 53 
66C4 : 45 59 2E          
66C7 : 0D 0A                       FCB 13,10
66C9 : 20 32 20 3D 20 41   	FCC ' 2 = ARTWICK`S FIELD AT TETERBORO, NEW JERSEY.'	
66CF : 52 54 57 49 43 4B 
66D5 : 60 53 20 46 49 45 
66DB : 4C 44 20 41 54 20 
66E1 : 54 45 54 45 52 42 
66E7 : 4F 52 4F 2C 20 4E 
66ED : 45 57 20 4A 45 52 
66F3 : 53 45 59 2E       
66F7 : 0D 0A 0D 0A                 FCB 13,10,13,10
66FB : 3F                          FCC '?'
66FC : 04                  	FCB $04
66FD :                     	
66FD : 81 01               SCREEN	CMPA #01       
66FF : 27 15               	BEQ  FIRST     
6701 : 81 02               	CMPA #02       
6703 : 27 5C               	BEQ  JINIT     
6705 : 81 03               	CMPA #03       
6707 : 27 1C               	BEQ  ERASE     
6709 : 81 04               	CMPA #04
670B : 27 45               	BEQ  PIXEL
670D : 81 05               	CMPA #05
670F : 27 4E               	BEQ  SHOW2
6711 : 81 06               	CMPA #06
6713 : 27 57               	BEQ  JSTART
6715 : 39                  	RTS
6716 :                     ;* PIA INITIALIZATION SECTION
6716 : 4F                  FIRST	CLRA
6717 : B7 80 0C            	STAA $800C     
671A : 86 FF               	LDAA #$FF
671C : B7 80 0C            	STAA $800C
671F : 86 3F               	LDAA #$3F
6721 : B7 80 0D            	STAA $800D
6724 : 39                  	RTS
6725 :                     ;* ERASE SCREEN SECTION
6725 : 86 3F               ERASE	LDAA #63
6727 : 97 58               	STAA HPOS
6729 : 96 58               HSET	LDAA HPOS
672B : 8D 14               	BSR  SENDA
672D : 86 80               VBAR	LDAA #128
672F : 8D 10               CLR	BSR  SENDA
6731 : 4C                  	INCA
6732 : 81 E0               MOD	CMPA #224
6734 : 26 F9               	BNE  CLR
6736 : 7A 00 58            	DEC  HPOS
6739 : 2C EE               	BGE  HSET
673B : 86 C0               	LDAA #192
673D : B7 67 33            	STAA MOD+1
6740 : 39                  	RTS
6741 :                     ;*SCREEN DRIVE SUBROUTINES
6741 : 16                  SENDA	TAB
6742 : F7 80 0C            SENDB	STAB $800C
6745 : C6 37               	LDAB #$37
6747 : F7 80 0D            	STAB $800D
674A : E6 00               	LDAB 0,X
674C : C6 3F               	LDAB #$3F
674E : F7 80 0D            	STAB $800D
6751 : 39                  	RTS
6752 :                     ;* PIXEL OUTPUT
6752 : D6 50               PIXEL	LDAB X1
6754 : CB 60               	ADDB #96
6756 : 8D EA               	BSR SENDB
6758 : C6 A0               	LDAB #160
675A : D0 51               	SUBB Y1
675C : 8D E4               	BSR SENDB
675E : 39                  	RTS
675F : 20 47               SHOW2	BRA SHOW
6761 :                     ;* INITIALIZE PIA INTERFACE TO JOYSTICK
6761 : 86 3D               JINIT	LDAA #$3D
6763 : CE 80 0C            	LDX #$800C
6766 : C6 00               	LDAB #$00
6768 : E7 02               	STAB 2,X
676A : A7 03               	STAA 3,X
676C :                     ;* SAVE MACHINE REGISTERS ON INPUT
676C : B7 61 14            JSTART	STAA ASAVE
676F : F7 61 15            	STAB BSAVE
6772 : FF 61 16            	STX ISAVE
6775 :                     ;* GET HORIZONTAL STICK POSITION
6775 : CE 80 0C            	LDX #$800C
6778 : A6 03               LOOP1	LDA 3,X
677A : 84 80               	ANDA #$80
677C : 27 FA               	BEQ LOOP1
677E : A6 02               	LDAA 2,X
6780 : 16                  	TAB
6781 : 84 80               	ANDA #$80
6783 : 26 F3               	BNE LOOP1
6785 : C4 3F               	ANDB #$3F
6787 : F7 61 12            	STAB JHPOS 
678A : A6 03               LOOP2	LDAA 3,X
678C : 84 80               	ANDA #$80 
678E : 27 FA               	BEQ LOOP2
6790 : A6 02               	LDAA 2,X
6792 : 16                  	TAB
6793 : 84 80               	ANDA #$80
6795 : 26 02               	BNE GOBACK
6797 : 20 DF               	BRA LOOP1
6799 : C4 7F               GOBACK	ANDB #$7F
679B : F7 61 13                    STAB JVPOS
679E : B6 61 14            	LDAA ASAVE
67A1 : F6 61 15            	LDAB BSAVE
67A4 : FE 61 16            	LDX ISAVE
67A7 : 39                  	RTS
67A8 :                     ;* ROUTINE TO DRAW LINE FROM (X1,Y1) TO (X2,Y2)
67A8 : 4F                  SHOW	CLRA
67A9 : C6 01               	LDAB #1
67AB : D7 54               	STAB M
67AD : D7 55               	STAB N
67AF : D6 52               	LDAB X2 
67B1 : D0 50               	SUBB X1
67B3 : D7 56               	STAB D
67B5 : 2C 06               	BGE BP1
67B7 : 70 00 54            	NEG M
67BA : 70 00 56            	NEG D
67BD : 26 02               BP1	BNE BP2
67BF : 86 FF               	LDAA #$FF
67C1 : D6 53               BP2	LDAB Y2
67C3 : D0 51               	SUBB Y1
67C5 : D7 57               	STAB E
67C7 : 2C 06               	BGE B8963
67C9 : 70 00 55            	NEG N
67CC : 70 00 57            	NEG E
67CF : BD 67 52            B8963	JSR PIXEL
67D2 : D6 50               	LDAB X1
67D4 : D1 52               	CMPB X2
67D6 : 27 17               	BEQ B8990
67D8 : 4D                  B8969	TSTA
67D9 : 2D 0A               	BLT B8981
67DB : D6 50               	LDAB X1
67DD : DB 54               	ADDB M
67DF : D7 50               	STAB X1
67E1 : 90 57               	SUBA E
67E3 : 20 EA               	BRA B8963
67E5 : D6 51               B8981	LDAB Y1
67E7 : DB 55               	ADDB N
67E9 : D7 51               	STAB Y1
67EB : 9B 56               	ADDA D
67ED : 20 E0               	BRA B8963
67EF : D6 51               B8990	LDAB Y1
67F1 : D1 53               	CMPB Y2
67F3 : 26 E3               	BNE B8969
67F5 : 39                  	RTS
67F6 :                     
67F6 : =$50                 X1	EQU $0050
67F6 : =$52                 X2	EQU $0052
67F6 : =$51                 Y1	EQU $0051
67F6 : =$53                 Y2	EQU $0053
67F6 : =$54                 M	EQU $0054
67F6 : =$55                 N	EQU $0055
67F6 : =$56                 D	EQU $0056
67F6 : =$57                 E	EQU $0057
67F6 : =$58                 HPOS	EQU $0058
67F6 :                     
A048 :                     	ORG $A048	;SET START ADDRESS FOR "G" COMMAND
A048 : 60 00               	FDB START
A04A :                     
A04A :                     	END
